/*
 Sizzle CSS Selector Engine
 Copyright 2012 JQXLite Foundation and other contributors
 Released under the MIT license
 http://sizzlejs.com/
 @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js  localForage -- Offline Storage, Improved
    Version 1.5.3
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
  _noScroll &&  this.dirty || forceDraw*/
var $jscomp = $jscomp || {}; var once = 1;
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(e) {
    var b = 0;
    return function() {
        return b < e.length ? {
            done: !1,
            value: e[b++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(e) {
    return {
        next: $jscomp.arrayIteratorImpl(e)
    }
}
;
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(e, b, d) {
    if (e == Array.prototype || e == Object.prototype)
        return e;
    e[b] = d.value;
    return e
}
;
$jscomp.getGlobal = function(e) {
    e = ["object" == typeof globalThis && globalThis, e, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var b = 0; b < e.length; ++b) {
        var d = e[b];
        if (d && d.Math == Math)
            return d
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(e, b) {
    var d = $jscomp.propertyToPolyfillSymbol[b];
    if (null == d)
        return e[b];
    d = e[d];
    return void 0 !== d ? d : e[b]
};
$jscomp.polyfill = function(e, b, d, c) {
    b && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(e, b, d, c) : $jscomp.polyfillUnisolated(e, b, d, c))
}
;
$jscomp.polyfillUnisolated = function(e, b, d, c) {
    d = $jscomp.global;
    e = e.split(".");
    for (c = 0; c < e.length - 1; c++) {
        var f = e[c];
        if (!(f in d))
            return;
        d = d[f]
    }
    e = e[e.length - 1];
    c = d[e];
    b = b(c);
    b != c && null != b && $jscomp.defineProperty(d, e, {
        configurable: !0,
        writable: !0,
        value: b
    })
}
;
$jscomp.polyfillIsolated = function(e, b, d, c) {
    var f = e.split(".");
    e = 1 === f.length;
    c = f[0];
    c = !e && c in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var g = 0; g < f.length - 1; g++) {
        var h = f[g];
        if (!(h in c))
            return;
        c = c[h]
    }
    f = f[f.length - 1];
    d = $jscomp.IS_SYMBOL_NATIVE && "es6" === d ? c[f] : null;
    b = b(d);
    null != b && (e ? $jscomp.defineProperty($jscomp.polyfills, f, {
        configurable: !0,
        writable: !0,
        value: b
    }) : b !== d && ($jscomp.propertyToPolyfillSymbol[f] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(f) : $jscomp.POLYFILL_PREFIX + f,
    f = $jscomp.propertyToPolyfillSymbol[f],
    $jscomp.defineProperty(c, f, {
        configurable: !0,
        writable: !0,
        value: b
    })))
}
;
$jscomp.initSymbol = function() {}
;
$jscomp.polyfill("Symbol", function(e) {
    if (e)
        return e;
    var b = function(f, g) {
        this.$jscomp$symbol$id_ = f;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: g
        })
    };
    b.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    }
    ;
    var d = 0
      , c = function(f) {
        if (this instanceof c)
            throw new TypeError("Symbol is not a constructor");
        return new b("jscomp_symbol_" + (f || "") + "_" + d++,f)
    };
    return c
}, "es6", "es3");
$jscomp.polyfill("Symbol.iterator", function(e) {
    if (e)
        return e;
    e = Symbol("Symbol.iterator");
    for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), d = 0; d < b.length; d++) {
        var c = $jscomp.global[b[d]];
        "function" === typeof c && "function" != typeof c.prototype[e] && $jscomp.defineProperty(c.prototype, e, {
            configurable: !0,
            writable: !0,
            value: function() {
                return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
            }
        })
    }
    return e
}, "es6", "es3");
$jscomp.iteratorPrototype = function(e) {
    e = {
        next: e
    };
    e[Symbol.iterator] = function() {
        return this
    }
    ;
    return e
}
;
$jscomp.createTemplateTagFirstArg = function(e) {
    return e.raw = e
}
;
$jscomp.createTemplateTagFirstArgWithRaw = function(e, b) {
    e.raw = b;
    return e
}
;
$jscomp.makeIterator = function(e) {
    var b = "undefined" != typeof Symbol && Symbol.iterator && e[Symbol.iterator];
    return b ? b.call(e) : $jscomp.arrayIterator(e)
}
;
$jscomp.arrayFromIterator = function(e) {
    for (var b, d = []; !(b = e.next()).done; )
        d.push(b.value);
    return d
}
;
$jscomp.arrayFromIterable = function(e) {
    return e instanceof Array ? e : $jscomp.arrayFromIterator($jscomp.makeIterator(e))
}
;
$jscomp.objectCreate = $jscomp.ASSUME_ES5 || "function" == typeof Object.create ? Object.create : function(e) {
    var b = function() {};
    b.prototype = e;
    return new b
}
;
$jscomp.getConstructImplementation = function() {
    function e() {
        function d() {}
        new d;
        Reflect.construct(d, [], function() {});
        return new d instanceof d
    }
    if ($jscomp.TRUST_ES6_POLYFILLS && "undefined" != typeof Reflect && Reflect.construct) {
        if (e())
            return Reflect.construct;
        var b = Reflect.construct;
        return function(d, c, f) {
            d = b(d, c);
            f && Reflect.setPrototypeOf(d, f.prototype);
            return d
        }
    }
    return function(d, c, f) {
        void 0 === f && (f = d);
        f = $jscomp.objectCreate(f.prototype || Object.prototype);
        return Function.prototype.apply.call(d, f, c) || f
    }
}
;
$jscomp.construct = {
    valueOf: $jscomp.getConstructImplementation
}.valueOf();
$jscomp.underscoreProtoCanBeSet = function() {
    var e = {
        a: !0
    }
      , b = {};
    try {
        return b.__proto__ = e,
        b.a
    } catch (d) {}
    return !1
}
;
$jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(e, b) {
    e.__proto__ = b;
    if (e.__proto__ !== b)
        throw new TypeError(e + " is not extensible");
    return e
}
: null;
$jscomp.inherits = function(e, b) {
    e.prototype = $jscomp.objectCreate(b.prototype);
    e.prototype.constructor = e;
    if ($jscomp.setPrototypeOf) {
        var d = $jscomp.setPrototypeOf;
        d(e, b)
    } else
        for (d in b)
            if ("prototype" != d)
                if (Object.defineProperties) {
                    var c = Object.getOwnPropertyDescriptor(b, d);
                    c && Object.defineProperty(e, d, c)
                } else
                    e[d] = b[d];
    e.superClass_ = b.prototype
}
;
$jscomp.polyfill("Reflect", function(e) {
    return e ? e : {}
}, "es6", "es3");
$jscomp.polyfill("Reflect.construct", function(e) {
    return $jscomp.construct
}, "es6", "es3");
$jscomp.polyfill("Reflect.setPrototypeOf", function(e) {
    if (e)
        return e;
    if ($jscomp.setPrototypeOf) {
        var b = $jscomp.setPrototypeOf;
        return function(d, c) {
            try {
                return b(d, c),
                !0
            } catch (f) {
                return !1
            }
        }
    }
    return null
}, "es6", "es5");
$jscomp.findInternal = function(e, b, d) {
    e instanceof String && (e = String(e));
    for (var c = e.length, f = 0; f < c; f++) {
        var g = e[f];
        if (b.call(d, g, f, e))
            return {
                i: f,
                v: g
            }
    }
    return {
        i: -1,
        v: void 0
    }
}
;
$jscomp.polyfill("Array.prototype.find", function(e) {
    return e ? e : function(b, d) {
        return $jscomp.findInternal(this, b, d).v
    }
}, "es6", "es3");
$jscomp.checkStringArgs = function(e, b, d) {
    if (null == e)
        throw new TypeError("The 'this' value for String.prototype." + d + " must not be null or undefined");
    if (b instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + d + " must not be a regular expression");
    return e + ""
}
;
$jscomp.polyfill("String.prototype.startsWith", function(e) {
    return e ? e : function(b, d) {
        var c = $jscomp.checkStringArgs(this, b, "startsWith");
        b += "";
        var f = c.length
          , g = b.length;
        d = Math.max(0, Math.min(d | 0, c.length));
        for (var h = 0; h < g && d < f; )
            if (c[d++] != b[h++])
                return !1;
        return h >= g
    }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.endsWith", function(e) {
    return e ? e : function(b, d) {
        var c = $jscomp.checkStringArgs(this, b, "endsWith");
        b += "";
        void 0 === d && (d = c.length);
        d = Math.max(0, Math.min(d | 0, c.length));
        for (var f = b.length; 0 < f && 0 < d; )
            if (c[--d] != b[--f])
                return !1;
        return 0 >= f
    }
}, "es6", "es3");
$jscomp.iteratorFromArray = function(e, b) {
    e instanceof String && (e += "");
    var d = 0
      , c = !1
      , f = {
        next: function() {
            if (!c && d < e.length) {
                var g = d++;
                return {
                    value: b(g, e[g]),
                    done: !1
                }
            }
            c = !0;
            return {
                done: !0,
                value: void 0
            }
        }
    };
    f[Symbol.iterator] = function() {
        return f
    }
    ;
    return f
}
;
$jscomp.polyfill("Array.prototype.keys", function(e) {
    return e ? e : function() {
        return $jscomp.iteratorFromArray(this, function(b) {
            return b
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Promise", function(e) {
    function b() {
        this.batch_ = null
    }
    function d(h) {
        return h instanceof f ? h : new f(function(k, l) {
            k(h)
        }
        )
    }
    if (e && (!($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && "undefined" === typeof $jscomp.global.PromiseRejectionEvent) || !$jscomp.global.Promise || -1 === $jscomp.global.Promise.toString().indexOf("[native code]")))
        return e;
    b.prototype.asyncExecute = function(h) {
        if (null == this.batch_) {
            this.batch_ = [];
            var k = this;
            this.asyncExecuteFunction(function() {
                k.executeBatch_()
            })
        }
        this.batch_.push(h)
    }
    ;
    var c = $jscomp.global.setTimeout;
    b.prototype.asyncExecuteFunction = function(h) {
        c(h, 0)
    }
    ;
    b.prototype.executeBatch_ = function() {
        for (; this.batch_ && this.batch_.length; ) {
            var h = this.batch_;
            this.batch_ = [];
            for (var k = 0; k < h.length; ++k) {
                var l = h[k];
                h[k] = null;
                try {
                    l()
                } catch (m) {
                    this.asyncThrow_(m)
                }
            }
        }
        this.batch_ = null
    }
    ;
    b.prototype.asyncThrow_ = function(h) {
        this.asyncExecuteFunction(function() {
            throw h;
        })
    }
    ;
    var f = function(h) {
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        this.isRejectionHandled_ = !1;
        var k = this.createResolveAndReject_();
        try {
            h(k.resolve, k.reject)
        } catch (l) {
            k.reject(l)
        }
    };
    f.prototype.createResolveAndReject_ = function() {
        function h(m) {
            return function(n) {
                l || (l = !0,
                m.call(k, n))
            }
        }
        var k = this
          , l = !1;
        return {
            resolve: h(this.resolveTo_),
            reject: h(this.reject_)
        }
    }
    ;
    f.prototype.resolveTo_ = function(h) {
        if (h === this)
            this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (h instanceof f)
            this.settleSameAsPromise_(h);
        else {
            a: switch (typeof h) {
            case "object":
                var k = null != h;
                break a;
            case "function":
                k = !0;
                break a;
            default:
                k = !1
            }
            k ? this.resolveToNonPromiseObj_(h) : this.fulfill_(h)
        }
    }
    ;
    f.prototype.resolveToNonPromiseObj_ = function(h) {
        var k = void 0;
        try {
            k = h.then
        } catch (l) {
            this.reject_(l);
            return
        }
        "function" == typeof k ? this.settleSameAsThenable_(k, h) : this.fulfill_(h)
    }
    ;
    f.prototype.reject_ = function(h) {
        this.settle_(2, h)
    }
    ;
    f.prototype.fulfill_ = function(h) {
        this.settle_(1, h)
    }
    ;
    f.prototype.settle_ = function(h, k) {
        if (0 != this.state_)
            throw Error("Cannot settle(" + h + ", " + k + "): Promise already settled in state" + this.state_);
        this.state_ = h;
        this.result_ = k;
        2 === this.state_ && this.scheduleUnhandledRejectionCheck_();
        this.executeOnSettledCallbacks_()
    }
    ;
    f.prototype.scheduleUnhandledRejectionCheck_ = function() {
        var h = this;
        c(function() {
            if (h.notifyUnhandledRejection_()) {
                var k = $jscomp.global.console;
                "undefined" !== typeof k && k.error(h.result_)
            }
        }, 1)
    }
    ;
    f.prototype.notifyUnhandledRejection_ = function() {
        if (this.isRejectionHandled_)
            return !1;
        var h = $jscomp.global.CustomEvent
          , k = $jscomp.global.Event
          , l = $jscomp.global.dispatchEvent;
        if ("undefined" === typeof l)
            return !0;
        "function" === typeof h ? h = new h("unhandledrejection",{
            cancelable: !0
        }) : "function" === typeof k ? h = new k("unhandledrejection",{
            cancelable: !0
        }) : (h = $jscomp.global.document.createEvent("CustomEvent"),
        h.initCustomEvent("unhandledrejection", !1, !0, h));
        h.promise = this;
        h.reason = this.result_;
        return l(h)
    }
    ;
    f.prototype.executeOnSettledCallbacks_ = function() {
        if (null != this.onSettledCallbacks_) {
            for (var h = 0; h < this.onSettledCallbacks_.length; ++h)
                g.asyncExecute(this.onSettledCallbacks_[h]);
            this.onSettledCallbacks_ = null
        }
    }
    ;
    var g = new b;
    f.prototype.settleSameAsPromise_ = function(h) {
        var k = this.createResolveAndReject_();
        h.callWhenSettled_(k.resolve, k.reject)
    }
    ;
    f.prototype.settleSameAsThenable_ = function(h, k) {
        var l = this.createResolveAndReject_();
        try {
            h.call(k, l.resolve, l.reject)
        } catch (m) {
            l.reject(m)
        }
    }
    ;
    f.prototype.then = function(h, k) {
        function l(q, t) {
            return "function" == typeof q ? function(v) {
                try {
                    m(q(v))
                } catch (z) {
                    n(z)
                }
            }
            : t
        }
        var m, n, p = new f(function(q, t) {
            m = q;
            n = t
        }
        );
        this.callWhenSettled_(l(h, m), l(k, n));
        return p
    }
    ;
    f.prototype.catch = function(h) {
        return this.then(void 0, h)
    }
    ;
    f.prototype.callWhenSettled_ = function(h, k) {
        function l() {
            switch (m.state_) {
            case 1:
                h(m.result_);
                break;
            case 2:
                k(m.result_);
                break;
            default:
                throw Error("Unexpected state: " + m.state_);
            }
        }
        var m = this;
        null == this.onSettledCallbacks_ ? g.asyncExecute(l) : this.onSettledCallbacks_.push(l);
        this.isRejectionHandled_ = !0
    }
    ;
    f.resolve = d;
    f.reject = function(h) {
        return new f(function(k, l) {
            l(h)
        }
        )
    }
    ;
    f.race = function(h) {
        return new f(function(k, l) {
            for (var m = $jscomp.makeIterator(h), n = m.next(); !n.done; n = m.next())
                d(n.value).callWhenSettled_(k, l)
        }
        )
    }
    ;
    f.all = function(h) {
        var k = $jscomp.makeIterator(h)
          , l = k.next();
        return l.done ? d([]) : new f(function(m, n) {
            function p(v) {
                return function(z) {
                    q[v] = z;
                    t--;
                    0 == t && m(q)
                }
            }
            var q = []
              , t = 0;
            do
                q.push(void 0),
                t++,
                d(l.value).callWhenSettled_(p(q.length - 1), n),
                l = k.next();
            while (!l.done)
        }
        )
    }
    ;
    return f
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.findIndex", function(e) {
    return e ? e : function(b, d) {
        return $jscomp.findInternal(this, b, d).i
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(e) {
    return e ? e : function(b, d, c) {
        var f = this.length || 0;
        0 > d && (d = Math.max(0, f + d));
        if (null == c || c > f)
            c = f;
        c = Number(c);
        0 > c && (c = Math.max(0, f + c));
        for (d = Number(d || 0); d < c; d++)
            this[d] = b;
        return this
    }
}, "es6", "es3");
$jscomp.typedArrayFill = function(e) {
    return e ? e : Array.prototype.fill
}
;
$jscomp.polyfill("Int8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint8ClampedArray.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Int16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Int32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Float32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Float64Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Math.clz32", function(e) {
    return e ? e : function(b) {
        b = Number(b) >>> 0;
        if (0 === b)
            return 32;
        var d = 0;
        0 === (b & 4294901760) && (b <<= 16,
        d += 16);
        0 === (b & 4278190080) && (b <<= 8,
        d += 8);
        0 === (b & 4026531840) && (b <<= 4,
        d += 4);
        0 === (b & 3221225472) && (b <<= 2,
        d += 2);
        0 === (b & 2147483648) && d++;
        return d
    }
}, "es6", "es3");
$jscomp.checkEs6ConformanceViaProxy = function() {
    try {
        var e = {}
          , b = Object.create(new $jscomp.global.Proxy(e,{
            get: function(d, c, f) {
                return d == e && "q" == c && f == b
            }
        }));
        return !0 === b.q
    } catch (d) {
        return !1
    }
}
;
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1;
$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
$jscomp.owns = function(e, b) {
    return Object.prototype.hasOwnProperty.call(e, b)
}
;
$jscomp.polyfill("WeakMap", function(e) {
    function b() {
        if (!e || !Object.seal)
            return !1;
        try {
            var m = Object.seal({})
              , n = Object.seal({})
              , p = new e([[m, 2], [n, 3]]);
            if (2 != p.get(m) || 3 != p.get(n))
                return !1;
            p.delete(m);
            p.set(n, 4);
            return !p.has(m) && 4 == p.get(n)
        } catch (q) {
            return !1
        }
    }
    function d() {}
    function c(m) {
        var n = typeof m;
        return "object" === n && null !== m || "function" === n
    }
    function f(m) {
        if (!$jscomp.owns(m, h)) {
            var n = new d;
            $jscomp.defineProperty(m, h, {
                value: n
            })
        }
    }
    function g(m) {
        if (!$jscomp.ISOLATE_POLYFILLS) {
            var n = Object[m];
            n && (Object[m] = function(p) {
                if (p instanceof d)
                    return p;
                Object.isExtensible(p) && f(p);
                return n(p)
            }
            )
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (e && $jscomp.ES6_CONFORMANCE)
            return e
    } else if (b())
        return e;
    var h = "$jscomp_hidden_" + Math.random();
    g("freeze");
    g("preventExtensions");
    g("seal");
    var k = 0
      , l = function(m) {
        this.id_ = (k += Math.random() + 1).toString();
        if (m) {
            m = $jscomp.makeIterator(m);
            for (var n; !(n = m.next()).done; )
                n = n.value,
                this.set(n[0], n[1])
        }
    };
    l.prototype.set = function(m, n) {
        if (!c(m))
            throw Error("Invalid WeakMap key");
        f(m);
        if (!$jscomp.owns(m, h))
            throw Error("WeakMap key fail: " + m);
        m[h][this.id_] = n;
        return this
    }
    ;
    l.prototype.get = function(m) {
        return c(m) && $jscomp.owns(m, h) ? m[h][this.id_] : void 0
    }
    ;
    l.prototype.has = function(m) {
        return c(m) && $jscomp.owns(m, h) && $jscomp.owns(m[h], this.id_)
    }
    ;
    l.prototype.delete = function(m) {
        return c(m) && $jscomp.owns(m, h) && $jscomp.owns(m[h], this.id_) ? delete m[h][this.id_] : !1
    }
    ;
    return l
}, "es6", "es3");
$jscomp.MapEntry = function() {}
;
$jscomp.polyfill("Map", function(e) {
    function b() {
        if ($jscomp.ASSUME_NO_NATIVE_MAP || !e || "function" != typeof e || !e.prototype.entries || "function" != typeof Object.seal)
            return !1;
        try {
            var l = Object.seal({
                x: 4
            })
              , m = new e($jscomp.makeIterator([[l, "s"]]));
            if ("s" != m.get(l) || 1 != m.size || m.get({
                x: 4
            }) || m.set({
                x: 4
            }, "t") != m || 2 != m.size)
                return !1;
            var n = m.entries()
              , p = n.next();
            if (p.done || p.value[0] != l || "s" != p.value[1])
                return !1;
            p = n.next();
            return p.done || 4 != p.value[0].x || "t" != p.value[1] || !n.next().done ? !1 : !0
        } catch (q) {
            return !1
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (e && $jscomp.ES6_CONFORMANCE)
            return e
    } else if (b())
        return e;
    var d = new WeakMap
      , c = function(l) {
        this.data_ = {};
        this.head_ = h();
        this.size = 0;
        if (l) {
            l = $jscomp.makeIterator(l);
            for (var m; !(m = l.next()).done; )
                m = m.value,
                this.set(m[0], m[1])
        }
    };
    c.prototype.set = function(l, m) {
        l = 0 === l ? 0 : l;
        var n = f(this, l);
        n.list || (n.list = this.data_[n.id] = []);
        n.entry ? n.entry.value = m : (n.entry = {
            next: this.head_,
            previous: this.head_.previous,
            head: this.head_,
            key: l,
            value: m
        },
        n.list.push(n.entry),
        this.head_.previous.next = n.entry,
        this.head_.previous = n.entry,
        this.size++);
        return this
    }
    ;
    c.prototype.delete = function(l) {
        l = f(this, l);
        return l.entry && l.list ? (l.list.splice(l.index, 1),
        l.list.length || delete this.data_[l.id],
        l.entry.previous.next = l.entry.next,
        l.entry.next.previous = l.entry.previous,
        l.entry.head = null,
        this.size--,
        !0) : !1
    }
    ;
    c.prototype.clear = function() {
        this.data_ = {};
        this.head_ = this.head_.previous = h();
        this.size = 0
    }
    ;
    c.prototype.has = function(l) {
        return !!f(this, l).entry
    }
    ;
    c.prototype.get = function(l) {
        return (l = f(this, l).entry) && l.value
    }
    ;
    c.prototype.entries = function() {
        return g(this, function(l) {
            return [l.key, l.value]
        })
    }
    ;
    c.prototype.keys = function() {
        return g(this, function(l) {
            return l.key
        })
    }
    ;
    c.prototype.values = function() {
        return g(this, function(l) {
            return l.value
        })
    }
    ;
    c.prototype.forEach = function(l, m) {
        for (var n = this.entries(), p; !(p = n.next()).done; )
            p = p.value,
            l.call(m, p[1], p[0], this)
    }
    ;
    c.prototype[Symbol.iterator] = c.prototype.entries;
    var f = function(l, m) {
        var n = m && typeof m;
        "object" == n || "function" == n ? d.has(m) ? n = d.get(m) : (n = "" + ++k,
        d.set(m, n)) : n = "p_" + m;
        var p = l.data_[n];
        if (p && $jscomp.owns(l.data_, n))
            for (l = 0; l < p.length; l++) {
                var q = p[l];
                if (m !== m && q.key !== q.key || m === q.key)
                    return {
                        id: n,
                        list: p,
                        index: l,
                        entry: q
                    }
            }
        return {
            id: n,
            list: p,
            index: -1,
            entry: void 0
        }
    }
      , g = function(l, m) {
        var n = l.head_;
        return $jscomp.iteratorPrototype(function() {
            if (n) {
                for (; n.head != l.head_; )
                    n = n.previous;
                for (; n.next != n.head; )
                    return n = n.next,
                    {
                        done: !1,
                        value: m(n)
                    };
                n = null
            }
            return {
                done: !0,
                value: void 0
            }
        })
    }
      , h = function() {
        var l = {};
        return l.previous = l.next = l.head = l
    }
      , k = 0;
    return c
}, "es6", "es3");
$jscomp.polyfill("Set", function(e) {
    function b() {
        if ($jscomp.ASSUME_NO_NATIVE_SET || !e || "function" != typeof e || !e.prototype.entries || "function" != typeof Object.seal)
            return !1;
        try {
            var c = Object.seal({
                x: 4
            })
              , f = new e($jscomp.makeIterator([c]));
            if (!f.has(c) || 1 != f.size || f.add(c) != f || 1 != f.size || f.add({
                x: 4
            }) != f || 2 != f.size)
                return !1;
            var g = f.entries()
              , h = g.next();
            if (h.done || h.value[0] != c || h.value[1] != c)
                return !1;
            h = g.next();
            return h.done || h.value[0] == c || 4 != h.value[0].x || h.value[1] != h.value[0] ? !1 : g.next().done
        } catch (k) {
            return !1
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (e && $jscomp.ES6_CONFORMANCE)
            return e
    } else if (b())
        return e;
    var d = function(c) {
        this.map_ = new Map;
        if (c) {
            c = $jscomp.makeIterator(c);
            for (var f; !(f = c.next()).done; )
                this.add(f.value)
        }
        this.size = this.map_.size
    };
    d.prototype.add = function(c) {
        c = 0 === c ? 0 : c;
        this.map_.set(c, c);
        this.size = this.map_.size;
        return this
    }
    ;
    d.prototype.delete = function(c) {
        c = this.map_.delete(c);
        this.size = this.map_.size;
        return c
    }
    ;
    d.prototype.clear = function() {
        this.map_.clear();
        this.size = 0
    }
    ;
    d.prototype.has = function(c) {
        return this.map_.has(c)
    }
    ;
    d.prototype.entries = function() {
        return this.map_.entries()
    }
    ;
    d.prototype.values = function() {
        return this.map_.values()
    }
    ;
    d.prototype.keys = d.prototype.values;
    d.prototype[Symbol.iterator] = d.prototype.values;
    d.prototype.forEach = function(c, f) {
        var g = this;
        this.map_.forEach(function(h) {
            return c.call(f, h, h, g)
        })
    }
    ;
    return d
}, "es6", "es3");
$jscomp.polyfill("Object.setPrototypeOf", function(e) {
    return e || $jscomp.setPrototypeOf
}, "es6", "es5");
var oldBrowser = document.all && !document.addEventListener;
oldBrowser || function(e, b) {
    function d(r) {
        var y = La[r] = {};
        w.each(r.split(wa), function(A, G) {
            y[G] = !0
        });
        return y
    }
    function c(r, y, A) {
        if (A === b && 1 === r.nodeType)
            if (A = "data-" + y.replace(Za, "-$1").toLowerCase(),
            A = r.getAttribute(A),
            "string" === typeof A) {
                try {
                    A = "true" === A ? !0 : "false" === A ? !1 : "null" === A ? null : +A + "" === A ? +A : Ra.test(A) ? w.parseJSON(A) : A
                } catch (G) {}
                w.data(r, y, A)
            } else
                A = b;
        return A
    }
    function f(r) {
        for (var y in r)
            if (("data" !== y || !w.isEmptyObject(r[y])) && "toJSON" !== y)
                return !1;
        return !0
    }
    function g() {
        return !1
    }
    function h() {
        return !0
    }
    function k(r) {
        return !r || !r.parentNode || 11 === r.parentNode.nodeType
    }
    function l(r, y) {
        do
            r = r[y];
        while (r && 1 !== r.nodeType);
        return r
    }
    function m(r, y, A) {
        y = y || 0;
        if (w.isFunction(y))
            return w.grep(r, function(N, M) {
                return !!y.call(N, M, N) === A
            });
        if (y.nodeType)
            return w.grep(r, function(N, M) {
                return N === y === A
            });
        if ("string" === typeof y) {
            var G = w.grep(r, function(N) {
                return 1 === N.nodeType
            });
            if (lc.test(y))
                return w.filter(y, G, !A);
            y = w.filter(y, G)
        }
        return w.grep(r, function(N, M) {
            return 0 <= w.inArray(N, y) === A
        })
    }
    function n(r) {
        var y = Ob.split("|");
        r = r.createDocumentFragment();
        if (r.createElement)
            for (; y.length; )
                r.createElement(y.pop());
        return r
    }
    function p(r, y) {
        return r.getElementsByTagName(y)[0] || r.appendChild(r.ownerDocument.createElement(y))
    }
    function q(r, y) {
        if (1 === y.nodeType && w.hasData(r)) {
            var A, G;
            var N = w._data(r);
            r = w._data(y, N);
            var M = N.events;
            if (M)
                for (A in delete r.handle,
                r.events = {},
                M)
                    for (N = 0,
                    G = M[A].length; N < G; N++)
                        w.event.add(y, A, M[A][N]);
            r.data && (r.data = w.extend({}, r.data))
        }
    }
    function t(r, y) {
        if (1 === y.nodeType) {
            y.clearAttributes && y.clearAttributes();
            y.mergeAttributes && y.mergeAttributes(r);
            var A = y.nodeName.toLowerCase();
            "object" === A ? (y.parentNode && (y.outerHTML = r.outerHTML),
            w.support.html5Clone && r.innerHTML && !w.trim(y.innerHTML) && (y.innerHTML = r.innerHTML)) : "input" === A && Pb.test(r.type) ? (y.defaultChecked = y.checked = r.checked,
            y.value !== r.value && (y.value = r.value)) : "option" === A ? y.selected = r.defaultSelected : "input" === A || "textarea" === A ? y.defaultValue = r.defaultValue : "script" === A && y.text !== r.text && (y.text = r.text);
            y.removeAttribute(w.expando)
        }
    }
    function v(r) {
        return "undefined" !== typeof r.getElementsByTagName ? r.getElementsByTagName("*") : "undefined" !== typeof r.querySelectorAll ? r.querySelectorAll("*") : []
    }
    function z(r) {
        Pb.test(r.type) && (r.defaultChecked = r.checked)
    }
    function E(r, y) {
        if (y in r)
            return y;
        for (var A = y.charAt(0).toUpperCase() + y.slice(1), G = y, N = Qb.length; N--; )
            if (y = Qb[N] + A,
            y in r)
                return y;
        return G
    }
    function C(r, y) {
        r = y || r;
        return "none" === w.css(r, "display") || !w.contains(r.ownerDocument, r)
    }
    function F(r, y) {
        for (var A, G, N = [], M = 0, ba = r.length; M < ba; M++)
            A = r[M],
            A.style && (N[M] = w._data(A, "olddisplay"),
            y ? (N[M] || "none" !== A.style.display || (A.style.display = ""),
            "" === A.style.display && C(A) && (N[M] = w._data(A, "olddisplay", V(A.nodeName)))) : (G = Ya(A, "display"),
            N[M] || "none" === G || w._data(A, "olddisplay", G)));
        for (M = 0; M < ba; M++)
            A = r[M],
            !A.style || y && "none" !== A.style.display && "" !== A.style.display || (A.style.display = y ? N[M] || "" : "none");
        return r
    }
    function P(r, y, A) {
        return (r = mc.exec(y)) ? Math.max(0, r[1] - (A || 0)) + (r[2] || "px") : y
    }
    function X(r, y, A, G) {
        y = A === (G ? "border" : "content") ? 4 : "width" === y ? 1 : 0;
        for (var N = 0; 4 > y; y += 2)
            "margin" === A && (N += w.css(r, A + jb[y], !0)),
            G ? ("content" === A && (N -= parseFloat(Ya(r, "padding" + jb[y])) || 0),
            "margin" !== A && (N -= parseFloat(Ya(r, "border" + jb[y] + "Width")) || 0)) : (N += parseFloat(Ya(r, "padding" + jb[y])) || 0,
            "padding" !== A && (N += parseFloat(Ya(r, "border" + jb[y] + "Width")) || 0));
        return N
    }
    function W(r, y, A) {
        var G = "width" === y ? r.offsetWidth : r.offsetHeight
          , N = !0
          , M = w.support.boxSizing && "border-box" === w.css(r, "boxSizing");
        if (0 >= G || null == G) {
            G = Ya(r, y);
            if (0 > G || null == G)
                G = r.style[y];
            if (ub.test(G))
                return G;
            N = M && (w.support.boxSizingReliable || G === r.style[y]);
            G = parseFloat(G) || 0
        }
        return G + X(r, y, A || (M ? "border" : "content"), N) + "px"
    }
    function V(r) {
        if (Cb[r])
            return Cb[r];
        var y = w("<" + r + ">").appendTo(I.body)
          , A = y.css("display");
        y.remove();
        if ("none" === A || "" === A)
            mb = I.body.appendChild(mb || w.extend(I.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            })),
            nb && mb.createElement || (nb = (mb.contentWindow || mb.contentDocument).document,
            nb.write("<!doctype html><html><body>"),
            nb.close()),
            y = nb.body.appendChild(nb.createElement(r)),
            A = Ya(y, "display"),
            I.body.removeChild(mb);
        return Cb[r] = A
    }
    function ca(r, y, A, G) {
        var N;
        if (w.isArray(y))
            w.each(y, function(M, ba) {
                A || nc.test(r) ? G(r, ba) : ca(r + "[" + ("object" === typeof ba ? M : "") + "]", ba, A, G)
            });
        else if (A || "object" !== w.type(y))
            G(r, y);
        else
            for (N in y)
                ca(r + "[" + N + "]", y[N], A, G)
    }
    function u() {
        setTimeout(function() {
            ob = b
        }, 0);
        return ob = w.now()
    }
    function D(r, y) {
        w.each(y, function(A, G) {
            for (var N = (sb[A] || []).concat(sb["*"]), M = 0, ba = N.length; M < ba && !N[M].call(r, A, G); M++)
                ;
        })
    }
    function B(r, y, A) {
        var G = 0
          , N = vb.length
          , M = w.Deferred().always(function() {
            delete ba.elem
        })
          , ba = function() {
            var oa = ob || u();
            oa = Math.max(0, ea.startTime + ea.duration - oa);
            for (var za = 1 - (oa / ea.duration || 0), xa = 0, Aa = ea.tweens.length; xa < Aa; xa++)
                ea.tweens[xa].run(za);
            M.notifyWith(r, [ea, za, oa]);
            if (1 > za && Aa)
                return oa;
            M.resolveWith(r, [ea]);
            return !1
        }
          , ea = M.promise({
            elem: r,
            props: w.extend({}, y),
            opts: w.extend(!0, {
                specialEasing: {}
            }, A),
            originalProperties: y,
            originalOptions: A,
            startTime: ob || u(),
            duration: A.duration,
            tweens: [],
            createTween: function(oa, za, xa) {
                oa = w.Tween(r, ea.opts, oa, za, ea.opts.specialEasing[oa] || ea.opts.easing);
                ea.tweens.push(oa);
                return oa
            },
            stop: function(oa) {
                for (var za = 0, xa = oa ? ea.tweens.length : 0; za < xa; za++)
                    ea.tweens[za].run(1);
                oa ? M.resolveWith(r, [ea, oa]) : M.rejectWith(r, [ea, oa]);
                return this
            }
        });
        A = ea.props;
        for (H(A, ea.opts.specialEasing); G < N; G++)
            if (y = vb[G].call(ea, r, A, ea.opts))
                return y;
        D(ea, A);
        w.isFunction(ea.opts.start) && ea.opts.start.call(r, ea);
        w.fx.timer(w.extend(ba, {
            anim: ea,
            queue: ea.opts.queue,
            elem: r
        }));
        return ea.progress(ea.opts.progress).done(ea.opts.done, ea.opts.complete).fail(ea.opts.fail).always(ea.opts.always)
    }
    function H(r, y) {
        var A, G;
        for (A in r) {
            var N = w.camelCase(A);
            var M = y[N];
            var ba = r[A];
            w.isArray(ba) && (M = ba[1],
            ba = r[A] = ba[0]);
            A !== N && (r[N] = ba,
            delete r[A]);
            if ((G = w.cssHooks[N]) && "expand"in G)
                for (A in ba = G.expand(ba),
                delete r[N],
                ba)
                    A in r || (r[A] = ba[A],
                    y[A] = M);
            else
                y[N] = M
        }
    }
    function J(r, y, A, G, N) {
        return new J.prototype.init(r,y,A,G,N)
    }
    function K(r, y) {
        var A = {
            height: r
        }
          , G = 0;
        for (y = y ? 1 : 0; 4 > G; G += 2 - y) {
            var N = jb[G];
            A["margin" + N] = A["padding" + N] = r
        }
        y && (A.opacity = A.width = r);
        return A
    }
    function Q(r) {
        return w.isWindow(r) ? r : 9 === r.nodeType ? r.defaultView || r.parentWindow : !1
    }
    var Y, I = e.document, T = e.navigator, Z = e.JQXLite, ra = e.$, ia = Array.prototype.push, la = Array.prototype.slice, aa = Array.prototype.indexOf, U = Object.prototype.toString, fa = Object.prototype.hasOwnProperty, ma = String.prototype.trim, w = function(r, y) {
        return new w.fn.init(r,y,Ia)
    }, pa = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, ka = /\S/, wa = /\s+/, ta = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, L = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, O = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, S = /^[\],:{}\s]*$/, ha = /(?:^|:|,)(?:\s*\[)+/g, na = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, ja = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, sa = /^-ms-/, va = /-([\da-z])/gi, ua = function(r, y) {
        return (y + "").toUpperCase()
    }, Ca = function() {
        I.addEventListener ? (I.removeEventListener("DOMContentLoaded", Ca, !1),
        w.ready()) : "complete" === I.readyState && (I.detachEvent("onreadystatechange", Ca),
        w.ready())
    }, Ja = {};
    w.fn = w.prototype = {
        constructor: w,
        init: function(r, y, A) {
            if (!r)
                return this;
            if (r.nodeType)
                return this.context = this[0] = r,
                this.length = 1,
                this;
            if ("string" === typeof r) {
                var G = "<" === r.charAt(0) && ">" === r.charAt(r.length - 1) && 3 <= r.length ? [null, r, null] : L.exec(r);
                if (!G || !G[1] && y)
                    return !y || y.jqx ? (y || A).find(r) : this.constructor(y).find(r);
                if (G[1])
                    return r = (y = y instanceof w ? y[0] : y) && y.nodeType ? y.ownerDocument || y : I,
                    r = w.parseHTML(G[1], r, !0),
                    O.test(G[1]) && w.isPlainObject(y) && this.attr.call(r, y, !0),
                    w.merge(this, r);
                if ((y = I.getElementById(G[2])) && y.parentNode) {
                    if (y.id !== G[2])
                        return A.find(r);
                    this.length = 1;
                    this[0] = y
                }
                this.context = I;
                this.selector = r;
                return this
            }
            if (w.isFunction(r))
                return A.ready(r);
            r.selector !== b && (this.selector = r.selector,
            this.context = r.context);
            return w.makeArray(r, this)
        },
        selector: "",
        jqx: "4.5.0",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return la.call(this)
        },
        get: function(r) {
            return null == r ? this.toArray() : 0 > r ? this[this.length + r] : this[r]
        },
        pushStack: function(r, y, A) {
            r = w.merge(this.constructor(), r);
            r.prevObject = this;
            r.context = this.context;
            "find" === y ? r.selector = this.selector + (this.selector ? " " : "") + A : y && (r.selector = this.selector + "." + y + "(" + A + ")");
            return r
        },
        each: function(r, y) {
            return w.each(this, r, y)
        },
        ready: function(r) {
            w.ready.promise().done(r);
            return this
        },
        eq: function(r) {
            r = +r;
            return -1 === r ? this.slice(r) : this.slice(r, r + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(la.apply(this, arguments), "slice", la.call(arguments).join(","))
        },
        map: function(r) {
            return this.pushStack(w.map(this, function(y, A) {
                return r.call(y, A, y)
            }))
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: ia,
        sort: [].sort,
        splice: [].splice
    };
    w.fn.init.prototype = w.fn;
    w.extend = w.fn.extend = function() {
        var r, y, A, G = arguments[0] || {}, N = 1, M = arguments.length, ba = !1;
        "boolean" === typeof G && (ba = G,
        G = arguments[1] || {},
        N = 2);
        "object" === typeof G || w.isFunction(G) || (G = {});
        M === N && (G = this,
        --N);
        for (; N < M; N++)
            if (null != (r = arguments[N]))
                for (y in r) {
                    var ea = G[y];
                    var oa = r[y];
                    G !== oa && (ba && oa && (w.isPlainObject(oa) || (A = w.isArray(oa))) ? (A ? (A = !1,
                    ea = ea && w.isArray(ea) ? ea : []) : ea = ea && w.isPlainObject(ea) ? ea : {},
                    G[y] = w.extend(ba, ea, oa)) : oa !== b && (G[y] = oa))
                }
        return G
    }
    ;
    w.extend({
        noConflict: function(r) {
            e.$ === w && (e.$ = ra);
            r && e.JQXLite === w && (e.JQXLite = Z);
            return w
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(r) {
            r ? w.readyWait++ : w.ready(!0)
        },
        ready: function(r) {
            if (!0 === r ? !--w.readyWait : !w.isReady) {
                if (!I.body)
                    return setTimeout(w.ready, 1);
                w.isReady = !0;
                !0 !== r && 0 < --w.readyWait || (Y.resolveWith(I, [w]),
                w.fn.trigger && w(I).trigger("ready").off("ready"))
            }
        },
        isFunction: function(r) {
            return "function" === w.type(r)
        },
        isArray: Array.isArray || function(r) {
            return "array" === w.type(r)
        }
        ,
        isWindow: function(r) {
            return null != r && r == r.window
        },
        isNumeric: function(r) {
            return !isNaN(parseFloat(r)) && isFinite(r)
        },
        type: function(r) {
            return null == r ? String(r) : Ja[U.call(r)] || "object"
        },
        isPlainObject: function(r) {
            if (!r || "object" !== w.type(r) || r.nodeType || w.isWindow(r))
                return !1;
            try {
                if (r.constructor && !fa.call(r, "constructor") && !fa.call(r.constructor.prototype, "isPrototypeOf"))
                    return !1
            } catch (A) {
                return !1
            }
            for (var y in r)
                ;
            return y === b || fa.call(r, y)
        },
        isEmptyObject: function(r) {
            for (var y in r)
                return !1;
            return !0
        },
        error: function(r) {
            throw Error(r);
        },
        parseHTML: function(r, y, A) {
            var G;
            if (!r || "string" !== typeof r)
                return null;
            "boolean" === typeof y && (A = y,
            y = 0);
            y = y || I;
            if (G = O.exec(r))
                return [y.createElement(G[1])];
            G = w.buildFragment([r], y, A ? null : []);
            return w.merge([], (G.cacheable ? w.clone(G.fragment) : G.fragment).childNodes)
        },
        parseJSON: function(r) {
            if (!r || "string" !== typeof r)
                return null;
            r = w.trim(r);
            if (e.JSON && e.JSON.parse)
                return e.JSON.parse(r);
            if (S.test(r.replace(na, "@").replace(ja, "]").replace(ha, "")))
                return (new Function("return " + r))();
            w.error("Invalid JSON: " + r)
        },
        parseXML: function(r) {
            if (!r || "string" !== typeof r)
                return null;
            try {
                if (e.DOMParser) {
                    var y = new DOMParser;
                    var A = y.parseFromString(r, "text/xml")
                } else
                    A = new ActiveXObject("Microsoft.XMLDOM"),
                    A.async = "false",
                    A.loadXML(r)
            } catch (G) {
                A = b
            }
            A && A.documentElement && !A.getElementsByTagName("parsererror").length || w.error("Invalid XML: " + r);
            return A
        },
        noop: function() {},
        globalEval: function(r) {
            r && ka.test(r) && (e.execScript || function(y) {
                e.eval.call(e, y)
            }
            )(r)
        },
        camelCase: function(r) {
            return r.replace(sa, "ms-").replace(va, ua)
        },
        nodeName: function(r, y) {
            return r.nodeName && r.nodeName.toLowerCase() === y.toLowerCase()
        },
        each: function(r, y, A) {
            var G, N = 0, M = r.length, ba = M === b || w.isFunction(r);
            if (A)
                if (ba)
                    for (G in r) {
                        if (!1 === y.apply(r[G], A))
                            break
                    }
                else
                    for (; N < M && !1 !== y.apply(r[N++], A); )
                        ;
            else if (ba)
                for (G in r) {
                    if (!1 === y.call(r[G], G, r[G]))
                        break
                }
            else
                for (; N < M && !1 !== y.call(r[N], N, r[N++]); )
                    ;
            return r
        },
        trim: ma && !ma.call("\ufeff\u00a0") ? function(r) {
            return null == r ? "" : ma.call(r)
        }
        : function(r) {
            return null == r ? "" : (r + "").replace(ta, "")
        }
        ,
        makeArray: function(r, y) {
            var A = y || [];
            null != r && (y = w.type(r),
            null == r.length || "string" === y || "function" === y || "regexp" === y || w.isWindow(r) ? ia.call(A, r) : w.merge(A, r));
            return A
        },
        inArray: function(r, y, A) {
            if (y) {
                if (aa)
                    return aa.call(y, r, A);
                var G = y.length;
                for (A = A ? 0 > A ? Math.max(0, G + A) : A : 0; A < G; A++)
                    if (A in y && y[A] === r)
                        return A
            }
            return -1
        },
        merge: function(r, y) {
            var A = y.length
              , G = r.length
              , N = 0;
            if ("number" === typeof A)
                for (; N < A; N++)
                    r[G++] = y[N];
            else
                for (; y[N] !== b; )
                    r[G++] = y[N++];
            r.length = G;
            return r
        },
        grep: function(r, y, A) {
            var G = []
              , N = 0
              , M = r.length;
            for (A = !!A; N < M; N++) {
                var ba = !!y(r[N], N);
                A !== ba && G.push(r[N])
            }
            return G
        },
        map: function(r, y, A) {
            var G, N = [], M = 0, ba = r.length;
            if (r instanceof w || ba !== b && "number" === typeof ba && (0 < ba && r[0] && r[ba - 1] || 0 === ba || w.isArray(r)))
                for (; M < ba; M++) {
                    var ea = y(r[M], M, A);
                    null != ea && (N[N.length] = ea)
                }
            else
                for (G in r)
                    ea = y(r[G], G, A),
                    null != ea && (N[N.length] = ea);
            return N.concat.apply([], N)
        },
        guid: 1,
        proxy: function(r, y) {
            if ("string" === typeof y) {
                var A = r[y];
                y = r;
                r = A
            }
            if (!w.isFunction(r))
                return b;
            var G = la.call(arguments, 2);
            A = function() {
                return r.apply(y, G.concat(la.call(arguments)))
            }
            ;
            A.guid = r.guid = r.guid || w.guid++;
            return A
        },
        access: function(r, y, A, G, N, M, ba) {
            var ea = null == A
              , oa = 0
              , za = r.length;
            if (A && "object" === typeof A) {
                for (oa in A)
                    w.access(r, y, oa, A[oa], 1, M, G);
                N = 1
            } else if (G !== b) {
                var xa = ba === b && w.isFunction(G);
                ea && (xa ? (xa = y,
                y = function(Aa, Ga, Ma) {
                    return xa.call(w(Aa), Ma)
                }
                ) : (y.call(r, G),
                y = null));
                if (y)
                    for (; oa < za; oa++)
                        y(r[oa], A, xa ? G.call(r[oa], oa, y(r[oa], A)) : G, ba);
                N = 1
            }
            return N ? r : ea ? y.call(r) : za ? y(r[0], A) : M
        },
        now: function() {
            return (new Date).getTime()
        }
    });
    w.ready.promise = function(r) {
        if (!Y)
            if (Y = w.Deferred(),
            "complete" === I.readyState)
                setTimeout(w.ready, 1);
            else if (I.addEventListener)
                I.addEventListener("DOMContentLoaded", Ca, !1),
                e.addEventListener("load", w.ready, !1);
            else {
                I.attachEvent("onreadystatechange", Ca);
                e.attachEvent("onload", w.ready);
                var y = !1;
                try {
                    y = null == e.frameElement && I.documentElement
                } catch (A) {}
                y && y.doScroll && function G() {
                    if (!w.isReady) {
                        try {
                            y.doScroll("left")
                        } catch (N) {
                            return setTimeout(G, 50)
                        }
                        w.ready()
                    }
                }()
            }
        return Y.promise(r)
    }
    ;
    w.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(r, y) {
        Ja["[object " + y + "]"] = y.toLowerCase()
    });
    var Ia = w(I);
    var La = {};
    w.Callbacks = function(r) {
        r = "string" === typeof r ? La[r] || d(r) : w.extend({}, r);
        var y, A, G, N, M, ba, ea = [], oa = !r.once && [], za = function(Aa) {
            y = r.memory && Aa;
            A = !0;
            ba = N || 0;
            N = 0;
            M = ea.length;
            for (G = !0; ea && ba < M; ba++)
                if (!1 === ea[ba].apply(Aa[0], Aa[1]) && r.stopOnFalse) {
                    y = !1;
                    break
                }
            G = !1;
            ea && (oa ? oa.length && za(oa.shift()) : y ? ea = [] : xa.disable())
        }, xa = {
            add: function() {
                if (ea) {
                    var Aa = ea.length;
                    (function Xa(Ma) {
                        w.each(Ma, function($a, fb) {
                            $a = w.type(fb);
                            "function" === $a ? r.unique && xa.has(fb) || ea.push(fb) : fb && fb.length && "string" !== $a && Xa(fb)
                        })
                    }
                    )(arguments);
                    G ? M = ea.length : y && (N = Aa,
                    za(y))
                }
                return this
            },
            remove: function() {
                ea && w.each(arguments, function(Aa, Ga) {
                    for (var Ma; -1 < (Ma = w.inArray(Ga, ea, Ma)); )
                        ea.splice(Ma, 1),
                        G && (Ma <= M && M--,
                        Ma <= ba && ba--)
                });
                return this
            },
            has: function(Aa) {
                return -1 < w.inArray(Aa, ea)
            },
            empty: function() {
                ea = [];
                return this
            },
            disable: function() {
                ea = oa = y = b;
                return this
            },
            disabled: function() {
                return !ea
            },
            lock: function() {
                oa = b;
                y || xa.disable();
                return this
            },
            locked: function() {
                return !oa
            },
            fireWith: function(Aa, Ga) {
                Ga = Ga || [];
                Ga = [Aa, Ga.slice ? Ga.slice() : Ga];
                !ea || A && !oa || (G ? oa.push(Ga) : za(Ga));
                return this
            },
            fire: function() {
                xa.fireWith(this, arguments);
                return this
            },
            fired: function() {
                return !!A
            }
        };
        return xa
    }
    ;
    w.extend({
        Deferred: function(r) {
            var y = [["resolve", "done", w.Callbacks("once memory"), "resolved"], ["reject", "fail", w.Callbacks("once memory"), "rejected"], ["notify", "progress", w.Callbacks("memory")]]
              , A = "pending"
              , G = {
                state: function() {
                    return A
                },
                always: function() {
                    N.done(arguments).fail(arguments);
                    return this
                },
                then: function() {
                    var M = arguments;
                    return w.Deferred(function(ba) {
                        w.each(y, function(ea, oa) {
                            var za = oa[0]
                              , xa = M[ea];
                            N[oa[1]](w.isFunction(xa) ? function() {
                                var Aa = xa.apply(this, arguments);
                                if (Aa && w.isFunction(Aa.promise))
                                    Aa.promise().done(ba.resolve).fail(ba.reject).progress(ba.notify);
                                else
                                    ba[za + "With"](this === N ? ba : this, [Aa])
                            }
                            : ba[za])
                        });
                        M = null
                    }).promise()
                },
                promise: function(M) {
                    return null != M ? w.extend(M, G) : G
                }
            }
              , N = {};
            G.pipe = G.then;
            w.each(y, function(M, ba) {
                var ea = ba[2]
                  , oa = ba[3];
                G[ba[1]] = ea.add;
                oa && ea.add(function() {
                    A = oa
                }, y[M ^ 1][2].disable, y[2][2].lock);
                N[ba[0]] = ea.fire;
                N[ba[0] + "With"] = ea.fireWith
            });
            G.promise(N);
            r && r.call(N, N);
            return N
        },
        when: function(r) {
            var y = 0, A = la.call(arguments), G = A.length, N = 1 !== G || r && w.isFunction(r.promise) ? G : 0, M = 1 === N ? r : w.Deferred(), ba = function(xa, Aa, Ga) {
                return function(Ma) {
                    Aa[xa] = this;
                    Ga[xa] = 1 < arguments.length ? la.call(arguments) : Ma;
                    Ga === oa ? M.notifyWith(Aa, Ga) : --N || M.resolveWith(Aa, Ga)
                }
            }, ea;
            if (1 < G) {
                var oa = Array(G);
                var za = Array(G);
                for (ea = Array(G); y < G; y++)
                    A[y] && w.isFunction(A[y].promise) ? A[y].promise().done(ba(y, ea, A)).fail(M.reject).progress(ba(y, za, oa)) : --N
            }
            N || M.resolveWith(ea, A);
            return M.promise()
        }
    });
    w.support = function() {
        var r, y = I.createElement("div");
        y.setAttribute("className", "t");
        y.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
        var A = y.getElementsByTagName("*");
        var G = y.getElementsByTagName("a")[0];
        if (!A || !G || !A.length)
            return {};
        var N = I.createElement("select");
        var M = N.appendChild(I.createElement("option"));
        A = y.getElementsByTagName("input")[0];
        G.style.cssText = "top:1px;float:left;opacity:.5";
        var ba = {
            leadingWhitespace: 3 === y.firstChild.nodeType,
            tbody: !y.getElementsByTagName("tbody").length,
            htmlSerialize: !!y.getElementsByTagName("link").length,
            style: /top/.test(G.getAttribute("style")),
            hrefNormalized: "/a" === G.getAttribute("href"),
            opacity: /^0.5/.test(G.style.opacity),
            cssFloat: !!G.style.cssFloat,
            checkOn: "on" === A.value,
            optSelected: M.selected,
            getSetAttribute: "t" !== y.className,
            enctype: !!I.createElement("form").enctype,
            html5Clone: "<:nav></:nav>" !== I.createElement("nav").cloneNode(!0).outerHTML,
            boxModel: "CSS1Compat" === I.compatMode,
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        };
        A.checked = !0;
        ba.noCloneChecked = A.cloneNode(!0).checked;
        N.disabled = !0;
        ba.optDisabled = !M.disabled;
        try {
            delete y.test
        } catch (oa) {
            ba.deleteExpando = !1
        }
        !y.addEventListener && y.attachEvent && y.fireEvent && (y.attachEvent("onclick", G = function() {
            ba.noCloneEvent = !1
        }
        ),
        y.cloneNode(!0).fireEvent("onclick"),
        y.detachEvent("onclick", G));
        A = I.createElement("input");
        A.value = "t";
        A.setAttribute("type", "radio");
        ba.radioValue = "t" === A.value;
        A.setAttribute("checked", "checked");
        A.setAttribute("name", "t");
        y.appendChild(A);
        G = I.createDocumentFragment();
        G.appendChild(y.lastChild);
        ba.checkClone = G.cloneNode(!0).cloneNode(!0).lastChild.checked;
        ba.appendChecked = A.checked;
        G.removeChild(A);
        G.appendChild(y);
        if (y.attachEvent)
            for (r in {
                submit: !0,
                change: !0,
                focusin: !0
            }) {
                A = "on" + r;
                var ea = A in y;
                ea || (y.setAttribute(A, "return;"),
                ea = "function" === typeof y[A]);
                ba[r + "Bubbles"] = ea
            }
        w(function() {
            var oa = I.getElementsByTagName("body")[0];
            if (oa) {
                var za = I.createElement("div");
                za.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
                oa.insertBefore(za, oa.firstChild);
                var xa = I.createElement("div");
                za.appendChild(xa);
                xa.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
                var Aa = xa.getElementsByTagName("td");
                Aa[0].style.cssText = "padding:0;margin:0;border:0;display:none";
                ea = 0 === Aa[0].offsetHeight;
                Aa[0].style.display = "";
                Aa[1].style.display = "none";
                ba.reliableHiddenOffsets = ea && 0 === Aa[0].offsetHeight;
                xa.innerHTML = "";
                xa.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
                ba.boxSizing = 4 === xa.offsetWidth;
                ba.doesNotIncludeMarginInBodyOffset = 1 !== oa.offsetTop;
                e.getComputedStyle && (ba.pixelPosition = "1%" !== (e.getComputedStyle(xa, null) || {}).top,
                ba.boxSizingReliable = "4px" === (e.getComputedStyle(xa, null) || {
                    width: "4px"
                }).width,
                Aa = I.createElement("div"),
                Aa.style.cssText = xa.style.cssText = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
                Aa.style.marginRight = Aa.style.width = "0",
                xa.style.width = "1px",
                xa.appendChild(Aa),
                ba.reliableMarginRight = !parseFloat((e.getComputedStyle(Aa, null) || {}).marginRight));
                "undefined" !== typeof xa.style.zoom && (xa.innerHTML = "",
                xa.style.cssText = "padding:0;margin:0;border:0;display:block;overflow:hidden;width:1px;padding:1px;display:inline;zoom:1",
                ba.inlineBlockNeedsLayout = 3 === xa.offsetWidth,
                xa.style.display = "block",
                xa.style.overflow = "visible",
                xa.innerHTML = "<div></div>",
                xa.firstChild.style.width = "5px",
                ba.shrinkWrapBlocks = 3 !== xa.offsetWidth,
                za.style.zoom = 1);
                oa.removeChild(za)
            }
        });
        G.removeChild(y);
        A = G = N = M = A = G = y = null;
        return ba
    }();
    var Ra = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/
      , Za = /([A-Z])/g;
    w.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "JQXLite" + (w.fn.jqx + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(r) {
            r = r.nodeType ? w.cache[r[w.expando]] : r[w.expando];
            return !!r && !f(r)
        },
        data: function(r, y, A, G) {
            if (w.acceptData(r)) {
                var N = w.expando
                  , M = "string" === typeof y
                  , ba = r.nodeType
                  , ea = ba ? w.cache : r
                  , oa = ba ? r[N] : r[N] && N;
                if (oa && ea[oa] && (G || ea[oa].data) || !M || A !== b) {
                    oa || (ba ? r[N] = oa = w.deletedIds.pop() || w.guid++ : oa = N);
                    ea[oa] || (ea[oa] = {},
                    ba || (ea[oa].toJSON = w.noop));
                    if ("object" === typeof y || "function" === typeof y)
                        G ? ea[oa] = w.extend(ea[oa], y) : ea[oa].data = w.extend(ea[oa].data, y);
                    r = ea[oa];
                    G || (r.data || (r.data = {}),
                    r = r.data);
                    A !== b && (r[w.camelCase(y)] = A);
                    M ? (A = r[y],
                    null == A && (A = r[w.camelCase(y)])) : A = r;
                    return A
                }
            }
        },
        removeData: function(r, y, A) {
            if (w.acceptData(r)) {
                var G, N, M = r.nodeType, ba = M ? w.cache : r, ea = M ? r[w.expando] : w.expando;
                if (ba[ea]) {
                    if (y && (G = A ? ba[ea] : ba[ea].data)) {
                        w.isArray(y) || (y in G ? y = [y] : (y = w.camelCase(y),
                        y = y in G ? [y] : y.split(" ")));
                        var oa = 0;
                        for (N = y.length; oa < N; oa++)
                            delete G[y[oa]];
                        if (!(A ? f : w.isEmptyObject)(G))
                            return
                    }
                    if (!A && (delete ba[ea].data,
                    !f(ba[ea])))
                        return;
                    M ? w.cleanData([r], !0) : w.support.deleteExpando || ba != ba.window ? delete ba[ea] : ba[ea] = null
                }
            }
        },
        _data: function(r, y, A) {
            return w.data(r, y, A, !0)
        },
        acceptData: function(r) {
            var y = r.nodeName && w.noData[r.nodeName.toLowerCase()];
            return !y || !0 !== y && r.getAttribute("classid") === y
        }
    });
    w.fn.extend({
        data: function(r, y) {
            var A, G = this[0], N = 0, M = null;
            if (r === b) {
                if (this.length && (M = w.data(G),
                1 === G.nodeType && !w._data(G, "parsedAttrs"))) {
                    var ba = G.attributes;
                    for (A = ba.length; N < A; N++) {
                        var ea = ba[N].name;
                        ea.indexOf("data-") || (ea = w.camelCase(ea.substring(5)),
                        c(G, ea, M[ea]))
                    }
                    w._data(G, "parsedAttrs", !0)
                }
                return M
            }
            if ("object" === typeof r)
                return this.each(function() {
                    w.data(this, r)
                });
            var oa = r.split(".", 2);
            oa[1] = oa[1] ? "." + oa[1] : "";
            var za = oa[1] + "!";
            return w.access(this, function(xa) {
                if (xa === b)
                    return M = this.triggerHandler("getData" + za, [oa[0]]),
                    M === b && G && (M = w.data(G, r),
                    M = c(G, r, M)),
                    M === b && oa[1] ? this.data(oa[0]) : M;
                oa[1] = xa;
                this.each(function() {
                    var Aa = w(this);
                    Aa.triggerHandler("setData" + za, oa);
                    w.data(this, r, xa);
                    Aa.triggerHandler("changeData" + za, oa)
                })
            }, null, y, 1 < arguments.length, null, !1)
        },
        removeData: function(r) {
            return this.each(function() {
                w.removeData(this, r)
            })
        }
    });
    w.extend({
        queue: function(r, y, A) {
            if (r) {
                y = (y || "fx") + "queue";
                var G = w._data(r, y);
                A && (!G || w.isArray(A) ? G = w._data(r, y, w.makeArray(A)) : G.push(A));
                return G || []
            }
        },
        dequeue: function(r, y) {
            y = y || "fx";
            var A = w.queue(r, y)
              , G = A.length
              , N = A.shift()
              , M = w._queueHooks(r, y)
              , ba = function() {
                w.dequeue(r, y)
            };
            "inprogress" === N && (N = A.shift(),
            G--);
            N && ("fx" === y && A.unshift("inprogress"),
            delete M.stop,
            N.call(r, ba, M));
            !G && M && M.empty.fire()
        },
        _queueHooks: function(r, y) {
            var A = y + "queueHooks";
            return w._data(r, A) || w._data(r, A, {
                empty: w.Callbacks("once memory").add(function() {
                    w.removeData(r, y + "queue", !0);
                    w.removeData(r, A, !0)
                })
            })
        }
    });
    w.fn.extend({
        queue: function(r, y) {
            var A = 2;
            "string" !== typeof r && (y = r,
            r = "fx",
            A--);
            return arguments.length < A ? w.queue(this[0], r) : y === b ? this : this.each(function() {
                var G = w.queue(this, r, y);
                w._queueHooks(this, r);
                "fx" === r && "inprogress" !== G[0] && w.dequeue(this, r)
            })
        },
        dequeue: function(r) {
            return this.each(function() {
                w.dequeue(this, r)
            })
        },
        delay: function(r, y) {
            r = w.fx ? w.fx.speeds[r] || r : r;
            return this.queue(y || "fx", function(A, G) {
                var N = setTimeout(A, r);
                G.stop = function() {
                    clearTimeout(N)
                }
            })
        },
        clearQueue: function(r) {
            return this.queue(r || "fx", [])
        },
        promise: function(r, y) {
            var A, G = 1, N = w.Deferred(), M = this, ba = this.length, ea = function() {
                --G || N.resolveWith(M, [M])
            };
            "string" !== typeof r && (y = r,
            r = b);
            for (r = r || "fx"; ba--; )
                (A = w._data(M[ba], r + "queueHooks")) && A.empty && (G++,
                A.empty.add(ea));
            ea();
            return N.promise(y)
        }
    });
    var Pa = /[\t\r\n]/g
      , Ta = /\r/g
      , kb = /^(?:button|input)$/i
      , wb = /^(?:button|input|object|select|textarea)$/i
      , oc = /^a(?:rea|)$/i
      , Rb = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i
      , pc = w.support.getSetAttribute;
    w.fn.extend({
        attr: function(r, y) {
            return w.access(this, w.attr, r, y, 1 < arguments.length)
        },
        removeAttr: function(r) {
            return this.each(function() {
                w.removeAttr(this, r)
            })
        },
        prop: function(r, y) {
            return w.access(this, w.prop, r, y, 1 < arguments.length)
        },
        removeProp: function(r) {
            r = w.propFix[r] || r;
            return this.each(function() {
                try {
                    this[r] = b,
                    delete this[r]
                } catch (y) {}
            })
        },
        addClass: function(r) {
            var y, A;
            if (w.isFunction(r))
                return this.each(function(oa) {
                    w(this).addClass(r.call(this, oa, this.className))
                });
            if (r && "string" === typeof r) {
                var G = r.split(wa);
                var N = 0;
                for (y = this.length; N < y; N++) {
                    var M = this[N];
                    if (1 === M.nodeType)
                        if (M.className || 1 !== G.length) {
                            var ba = " " + M.className + " ";
                            var ea = 0;
                            for (A = G.length; ea < A; ea++)
                                0 > ba.indexOf(" " + G[ea] + " ") && (ba += G[ea] + " ");
                            M.className = w.trim(ba)
                        } else
                            M.className = r
                }
            }
            return this
        },
        removeClass: function(r) {
            var y, A;
            if (w.isFunction(r))
                return this.each(function(oa) {
                    w(this).removeClass(r.call(this, oa, this.className))
                });
            if (r && "string" === typeof r || r === b) {
                var G = (r || "").split(wa);
                var N = 0;
                for (A = this.length; N < A; N++) {
                    var M = this[N];
                    if (1 === M.nodeType && M.className) {
                        var ba = (" " + M.className + " ").replace(Pa, " ");
                        var ea = 0;
                        for (y = G.length; ea < y; ea++)
                            for (; 0 <= ba.indexOf(" " + G[ea] + " "); )
                                ba = ba.replace(" " + G[ea] + " ", " ");
                        M.className = r ? w.trim(ba) : ""
                    }
                }
            }
            return this
        },
        toggleClass: function(r, y) {
            var A = typeof r
              , G = "boolean" === typeof y;
            return w.isFunction(r) ? this.each(function(N) {
                w(this).toggleClass(r.call(this, N, this.className, y), y)
            }) : this.each(function() {
                if ("string" === A)
                    for (var N, M = 0, ba = w(this), ea = y, oa = r.split(wa); N = oa[M++]; )
                        ea = G ? ea : !ba.hasClass(N),
                        ba[ea ? "addClass" : "removeClass"](N);
                else if ("undefined" === A || "boolean" === A)
                    this.className && w._data(this, "__className__", this.className),
                    this.className = this.className || !1 === r ? "" : w._data(this, "__className__") || ""
            })
        },
        hasClass: function(r) {
            r = " " + r + " ";
            for (var y = 0, A = this.length; y < A; y++)
                if (1 === this[y].nodeType && 0 <= (" " + this[y].className + " ").replace(Pa, " ").indexOf(r))
                    return !0;
            return !1
        },
        val: function(r) {
            var y, A, G = this[0];
            if (arguments.length) {
                var N = w.isFunction(r);
                return this.each(function(M) {
                    var ba = w(this);
                    1 === this.nodeType && (M = N ? r.call(this, M, ba.val()) : r,
                    null == M ? M = "" : "number" === typeof M ? M += "" : w.isArray(M) && (M = w.map(M, function(ea) {
                        return null == ea ? "" : ea + ""
                    })),
                    y = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()],
                    y && "set"in y && y.set(this, M, "value") !== b || (this.value = M))
                })
            }
            if (G) {
                if ((y = w.valHooks[G.type] || w.valHooks[G.nodeName.toLowerCase()]) && "get"in y && (A = y.get(G, "value")) !== b)
                    return A;
                A = G.value;
                return "string" === typeof A ? A.replace(Ta, "") : null == A ? "" : A
            }
        }
    });
    w.extend({
        valHooks: {
            option: {
                get: function(r) {
                    var y = r.attributes.value;
                    return !y || y.specified ? r.value : r.text
                }
            },
            select: {
                get: function(r) {
                    for (var y, A = r.options, G = r.selectedIndex, N = (r = "select-one" === r.type || 0 > G) ? null : [], M = r ? G + 1 : A.length, ba = 0 > G ? M : r ? G : 0; ba < M; ba++)
                        if (y = A[ba],
                        !(!y.selected && ba !== G || (w.support.optDisabled ? y.disabled : null !== y.getAttribute("disabled")) || y.parentNode.disabled && w.nodeName(y.parentNode, "optgroup"))) {
                            y = w(y).val();
                            if (r)
                                return y;
                            N.push(y)
                        }
                    return N
                },
                set: function(r, y) {
                    var A = w.makeArray(y);
                    w(r).find("option").each(function() {
                        this.selected = 0 <= w.inArray(w(this).val(), A)
                    });
                    A.length || (r.selectedIndex = -1);
                    return A
                }
            }
        },
        attrFn: {},
        attr: function(r, y, A, G) {
            var N, M = r.nodeType;
            if (r && 3 !== M && 8 !== M && 2 !== M) {
                if (G && w.isFunction(w.fn[y]))
                    return w(r)[y](A);
                if ("undefined" === typeof r.getAttribute)
                    return w.prop(r, y, A);
                if (G = 1 !== M || !w.isXMLDoc(r)) {
                    y = y.toLowerCase();
                    var ba = w.attrHooks[y] || (Rb.test(y) ? qc : void 0)
                }
                if (A !== b)
                    if (null === A)
                        w.removeAttr(r, y);
                    else {
                        if (ba && "set"in ba && G && (N = ba.set(r, A, y)) !== b)
                            return N;
                        r.setAttribute(y, A + "");
                        return A
                    }
                else {
                    if (ba && "get"in ba && G && null !== (N = ba.get(r, y)))
                        return N;
                    N = r.getAttribute(y);
                    return null === N ? b : N
                }
            }
        },
        removeAttr: function(r, y) {
            var A, G, N, M = 0;
            if (y && 1 === r.nodeType)
                for (A = y.split(wa); M < A.length; M++)
                    if (G = A[M])
                        y = w.propFix[G] || G,
                        (N = Rb.test(G)) || w.attr(r, G, ""),
                        r.removeAttribute(pc ? G : y),
                        N && y in r && (r[y] = !1)
        },
        attrHooks: {
            type: {
                set: function(r, y) {
                    if (kb.test(r.nodeName) && r.parentNode)
                        w.error("type property can't be changed");
                    else if (!w.support.radioValue && "radio" === y && w.nodeName(r, "input")) {
                        var A = r.value;
                        r.setAttribute("type", y);
                        A && (r.value = A);
                        return y
                    }
                }
            },
            value: {
                get: function(r, y) {
                    return y in r ? r.value : null
                },
                set: function(r, y, A) {
                    r.value = y
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(r, y, A) {
            var G, N = r.nodeType;
            if (r && 3 !== N && 8 !== N && 2 !== N) {
                if (1 !== N || !w.isXMLDoc(r)) {
                    y = w.propFix[y] || y;
                    var M = w.propHooks[y]
                }
                return A !== b ? M && "set"in M && (G = M.set(r, A, y)) !== b ? G : r[y] = A : M && "get"in M && null !== (G = M.get(r, y)) ? G : r[y]
            }
        },
        propHooks: {
            tabIndex: {
                get: function(r) {
                    var y = r.getAttributeNode("tabindex");
                    return y && y.specified ? parseInt(y.value, 10) : wb.test(r.nodeName) || oc.test(r.nodeName) && r.href ? 0 : b
                }
            }
        }
    });
    var qc = {
        get: function(r, y) {
            var A, G = w.prop(r, y);
            return !0 === G || "boolean" !== typeof G && (A = r.getAttributeNode(y)) && !1 !== A.nodeValue ? y.toLowerCase() : b
        },
        set: function(r, y, A) {
            !1 === y ? w.removeAttr(r, A) : (y = w.propFix[A] || A,
            y in r && (r[y] = !0),
            r.setAttribute(A, A.toLowerCase()));
            return A
        }
    };
    w.support.enctype || (w.propFix.enctype = "encoding");
    var Sb = /^([^\.]*|)(?:\.(.+)|)$/
      , rc = /(?:^|\s)hover(\.\S+|)\b/
      , sc = /^key/
      , tc = /^(?:mouse|contextmenu)|click/
      , Tb = /^(?:focusinfocus|focusoutblur)$/
      , Ub = function(r) {
        return w.event.special.hover ? r : r.replace(rc, "mouseenter$1 mouseleave$1")
    };
    w.event = {
        add: function(r, y, A, G, N) {
            var M;
            if (3 !== r.nodeType && 8 !== r.nodeType && y && A && (M = w._data(r))) {
                if (A.handler) {
                    var ba = A;
                    A = ba.handler;
                    N = ba.selector
                }
                A.guid || (A.guid = w.guid++);
                var ea = M.events;
                ea || (M.events = ea = {});
                var oa = M.handle;
                oa || (M.handle = oa = function(Xa) {
                    return "undefined" === typeof w || Xa && w.event.triggered === Xa.type ? b : w.event.dispatch.apply(oa.elem, arguments)
                }
                ,
                oa.elem = r);
                y = w.trim(Ub(y)).split(" ");
                for (M = 0; M < y.length; M++) {
                    var za = Sb.exec(y[M]) || [];
                    var xa = za[1];
                    var Aa = (za[2] || "").split(".").sort();
                    var Ga = w.event.special[xa] || {};
                    xa = (N ? Ga.delegateType : Ga.bindType) || xa;
                    Ga = w.event.special[xa] || {};
                    za = w.extend({
                        type: xa,
                        origType: za[1],
                        data: G,
                        handler: A,
                        guid: A.guid,
                        selector: N,
                        needsContext: N && w.expr.match.needsContext.test(N),
                        namespace: Aa.join(".")
                    }, ba);
                    var Ma = ea[xa];
                    Ma || (Ma = ea[xa] = [],
                    Ma.delegateCount = 0,
                    Ga.setup && !1 !== Ga.setup.call(r, G, Aa, oa) || (r.addEventListener ? G && G.passive !== b ? r.addEventListener(xa, oa, G) : r.addEventListener(xa, oa, !1) : r.attachEvent && r.attachEvent("on" + xa, oa)));
                    Ga.add && (Ga.add.call(r, za),
                    za.handler.guid || (za.handler.guid = A.guid));
                    N ? Ma.splice(Ma.delegateCount++, 0, za) : Ma.push(za);
                    w.event.global[xa] = !0
                }
                r = null
            }
        },
        global: {},
        remove: function(r, y, A, G, N) {
            var M, ba, ea, oa, za = w.hasData(r) && w._data(r);
            if (za && (oa = za.events)) {
                y = w.trim(Ub(y || "")).split(" ");
                for (M = 0; M < y.length; M++) {
                    var xa = Sb.exec(y[M]) || [];
                    var Aa = ba = xa[1];
                    xa = xa[2];
                    if (Aa) {
                        var Ga = w.event.special[Aa] || {};
                        Aa = (G ? Ga.delegateType : Ga.bindType) || Aa;
                        var Ma = oa[Aa] || [];
                        var Xa = Ma.length;
                        xa = xa ? new RegExp("(^|\\.)" + xa.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                        for (ea = 0; ea < Ma.length; ea++) {
                            var $a = Ma[ea];
                            !N && ba !== $a.origType || A && A.guid !== $a.guid || xa && !xa.test($a.namespace) || G && G !== $a.selector && ("**" !== G || !$a.selector) || (Ma.splice(ea--, 1),
                            $a.selector && Ma.delegateCount--,
                            Ga.remove && Ga.remove.call(r, $a))
                        }
                        0 === Ma.length && Xa !== Ma.length && (Ga.teardown && !1 !== Ga.teardown.call(r, xa, za.handle) || w.removeEvent(r, Aa, za.handle),
                        delete oa[Aa])
                    } else
                        for (Aa in oa)
                            w.event.remove(r, Aa + y[M], A, G, !0)
                }
                w.isEmptyObject(oa) && (delete za.handle,
                w.removeData(r, "events", !0))
            }
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(r, y, A, G) {
            if (!A || 3 !== A.nodeType && 8 !== A.nodeType) {
                var N, M = r.type || r;
                var ba = [];
                if (!Tb.test(M + w.event.triggered)) {
                    if (0 <= M.indexOf("!")) {
                        M = M.slice(0, -1);
                        var ea = !0
                    }
                    0 <= M.indexOf(".") && (ba = M.split("."),
                    M = ba.shift(),
                    ba.sort());
                    if (A && !w.event.customEvent[M] || w.event.global[M])
                        if (r = "object" === typeof r ? r[w.expando] ? r : new w.Event(M,r) : new w.Event(M),
                        r.type = M,
                        r.isTrigger = !0,
                        r.exclusive = ea,
                        r.namespace = ba.join("."),
                        r.namespace_re = r.namespace ? new RegExp("(^|\\.)" + ba.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                        ba = 0 > M.indexOf(":") ? "on" + M : "",
                        A) {
                            r.result = b;
                            r.target || (r.target = A);
                            y = null != y ? w.makeArray(y) : [];
                            y.unshift(r);
                            var oa = w.event.special[M] || {};
                            if (!oa.trigger || !1 !== oa.trigger.apply(A, y)) {
                                var za = [[A, oa.bindType || M]];
                                if (!G && !oa.noBubble && !w.isWindow(A)) {
                                    var xa = oa.delegateType || M;
                                    ea = Tb.test(xa + M) ? A : A.parentNode;
                                    for (N = A; ea; ea = ea.parentNode)
                                        za.push([ea, xa]),
                                        N = ea;
                                    N === (A.ownerDocument || I) && za.push([N.defaultView || N.parentWindow || e, xa])
                                }
                                for (N = 0; N < za.length && !r.isPropagationStopped(); N++)
                                    ea = za[N][0],
                                    r.type = za[N][1],
                                    (xa = (w._data(ea, "events") || {})[r.type] && w._data(ea, "handle")) && xa.apply(ea, y),
                                    (xa = ba && ea[ba]) && w.acceptData(ea) && xa.apply && !1 === xa.apply(ea, y) && r.preventDefault();
                                r.type = M;
                                G || r.isDefaultPrevented() || oa._default && !1 !== oa._default.apply(A.ownerDocument, y) || "click" === M && w.nodeName(A, "a") || !w.acceptData(A) || !ba || !A[M] || ("focus" === M || "blur" === M) && 0 === r.target.offsetWidth || w.isWindow(A) || ((N = A[ba]) && (A[ba] = null),
                                w.event.triggered = M,
                                A[M](),
                                w.event.triggered = b,
                                N && (A[ba] = N));
                                return r.result
                            }
                        } else
                            for (N in A = w.cache,
                            A)
                                A[N].events && A[N].events[M] && w.event.trigger(r, y, A[N].handle.elem, !0)
                }
            }
        },
        dispatch: function(r) {
            r = w.event.fix(r || e.event);
            var y, A, G = (w._data(this, "events") || {})[r.type] || [], N = G.delegateCount, M = la.call(arguments), ba = !r.exclusive && !r.namespace, ea = w.event.special[r.type] || {}, oa = [];
            M[0] = r;
            r.delegateTarget = this;
            if (!ea.preDispatch || !1 !== ea.preDispatch.call(this, r)) {
                if (N && (!r.button || "click" !== r.type))
                    for (A = r.target; A != this; A = A.parentNode || this)
                        if (!0 !== A.disabled || "click" !== r.type) {
                            var za = {};
                            var xa = [];
                            for (y = 0; y < N; y++) {
                                var Aa = G[y];
                                var Ga = Aa.selector;
                                za[Ga] === b && (za[Ga] = Aa.needsContext ? 0 <= w(Ga, this).index(A) : w.find(Ga, this, null, [A]).length);
                                za[Ga] && xa.push(Aa)
                            }
                            xa.length && oa.push({
                                elem: A,
                                matches: xa
                            })
                        }
                G.length > N && oa.push({
                    elem: this,
                    matches: G.slice(N)
                });
                for (y = 0; y < oa.length && !r.isPropagationStopped(); y++)
                    for (za = oa[y],
                    r.currentTarget = za.elem,
                    A = 0; A < za.matches.length && !r.isImmediatePropagationStopped(); A++)
                        if (Aa = za.matches[A],
                        ba || !r.namespace && !Aa.namespace || r.namespace_re && r.namespace_re.test(Aa.namespace))
                            r.data = Aa.data,
                            r.handleObj = Aa,
                            Aa = ((w.event.special[Aa.origType] || {}).handle || Aa.handler).apply(za.elem, M),
                            Aa !== b && (r.result = Aa,
                            !1 === Aa && (r.preventDefault(),
                            r.stopPropagation()));
                ea.postDispatch && ea.postDispatch.call(this, r);
                return r.result
            }
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: ["char", "charCode", "key", "keyCode"],
            filter: function(r, y) {
                null == r.which && (r.which = null != y.charCode ? y.charCode : y.keyCode);
                return r
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(r, y) {
                var A = y.button
                  , G = y.fromElement;
                if (null == r.pageX && null != y.clientX) {
                    var N = r.target.ownerDocument || I;
                    var M = N.documentElement;
                    N = N.body;
                    r.pageX = y.clientX + (M && M.scrollLeft || N && N.scrollLeft || 0) - (M && M.clientLeft || N && N.clientLeft || 0);
                    r.pageY = y.clientY + (M && M.scrollTop || N && N.scrollTop || 0) - (M && M.clientTop || N && N.clientTop || 0)
                }
                !r.relatedTarget && G && (r.relatedTarget = G === r.target ? y.toElement : G);
                r.which || A === b || (r.which = A & 1 ? 1 : A & 2 ? 3 : A & 4 ? 2 : 0);
                return r
            }
        },
        fix: function(r) {
            if (r[w.expando])
                return r;
            var y, A = r, G = w.event.fixHooks[r.type] || {}, N = G.props ? this.props.concat(G.props) : this.props;
            r = w.Event(A);
            for (y = N.length; y; ) {
                var M = N[--y];
                r[M] = A[M]
            }
            r.target || (r.target = A.srcElement || I);
            3 === r.target.nodeType && (r.target = r.target.parentNode);
            r.metaKey = !!r.metaKey;
            return G.filter ? G.filter(r, A) : r
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(r, y, A) {
                    w.isWindow(this) && (this.onbeforeunload = A)
                },
                teardown: function(r, y) {
                    this.onbeforeunload === y && (this.onbeforeunload = null)
                }
            }
        },
        simulate: function(r, y, A, G) {
            r = w.extend(new w.Event, A, {
                type: r,
                isSimulated: !0,
                originalEvent: {}
            });
            G ? w.event.trigger(r, null, y) : w.event.dispatch.call(y, r);
            r.isDefaultPrevented() && A.preventDefault()
        }
    };
    w.event.handle = w.event.dispatch;
    w.removeEvent = I.removeEventListener ? function(r, y, A) {
        r.removeEventListener && r.removeEventListener(y, A, !1)
    }
    : function(r, y, A) {
        y = "on" + y;
        r.detachEvent && ("undefined" === typeof r[y] && (r[y] = null),
        r.detachEvent(y, A))
    }
    ;
    w.Event = function(r, y) {
        if (!(this instanceof w.Event))
            return new w.Event(r,y);
        r && r.type ? (this.originalEvent = r,
        this.type = r.type,
        this.isDefaultPrevented = r.defaultPrevented || !1 === r.returnValue || r.getPreventDefault && r.getPreventDefault() ? h : g) : this.type = r;
        y && w.extend(this, y);
        this.timeStamp = r && r.timeStamp || w.now();
        this[w.expando] = !0
    }
    ;
    w.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = h;
            var r = this.originalEvent;
            r && (r.preventDefault ? r.preventDefault() : r.returnValue = !1)
        },
        stopPropagation: function() {
            this.isPropagationStopped = h;
            var r = this.originalEvent;
            r && (r.stopPropagation && r.stopPropagation(),
            r.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = h;
            this.stopPropagation()
        },
        isDefaultPrevented: g,
        isPropagationStopped: g,
        isImmediatePropagationStopped: g
    };
    w.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(r, y) {
        w.event.special[r] = {
            delegateType: y,
            bindType: y,
            handle: function(A) {
                var G = A.relatedTarget
                  , N = A.handleObj;
                if (!G || G !== this && !w.contains(this, G)) {
                    A.type = N.origType;
                    var M = N.handler.apply(this, arguments);
                    A.type = y
                }
                return M
            }
        }
    });
    w.fn.extend({
        on: function(r, y, A, G, N) {
            var M;
            if ("object" === typeof r) {
                "string" !== typeof y && (A = A || y,
                y = b);
                for (M in r)
                    this.on(M, y, A, r[M], N);
                return this
            }
            null == A && null == G ? (G = y,
            A = y = b) : null == G && ("string" === typeof y ? (G = A,
            A = b) : (G = A,
            A = y,
            y = b));
            if (!1 === G)
                G = g;
            else if (!G)
                return this;
            if (1 === N) {
                var ba = G;
                G = function(ea) {
                    w().off(ea);
                    return ba.apply(this, arguments)
                }
                ;
                G.guid = ba.guid || (ba.guid = w.guid++)
            }
            return this.each(function() {
                w.event.add(this, r, G, A, y)
            })
        },
        off: function(r, y, A) {
            if (r && r.preventDefault && r.handleObj) {
                var G = r.handleObj;
                w(r.delegateTarget).off(G.namespace ? G.origType + "." + G.namespace : G.origType, G.selector, G.handler);
                return this
            }
            if ("object" === typeof r) {
                for (G in r)
                    this.off(G, y, r[G]);
                return this
            }
            if (!1 === y || "function" === typeof y)
                A = y,
                y = b;
            !1 === A && (A = g);
            return this.each(function() {
                w.event.remove(this, r, A, y)
            })
        },
        delegate: function(r, y, A, G) {
            return this.on(y, r, A, G)
        },
        undelegate: function(r, y, A) {
            return 1 === arguments.length ? this.off(r, "**") : this.off(y, r || "**", A)
        },
        trigger: function(r, y) {
            return this.each(function() {
                w.event.trigger(r, y, this)
            })
        },
        triggerHandler: function(r, y) {
            if (this[0])
                return w.event.trigger(r, y, this[0], !0)
        },
        toggle: function(r) {
            var y = arguments
              , A = r.guid || w.guid++
              , G = 0
              , N = function(M) {
                var ba = (w._data(this, "lastToggle" + r.guid) || 0) % G;
                w._data(this, "lastToggle" + r.guid, ba + 1);
                M.preventDefault();
                return y[ba].apply(this, arguments) || !1
            };
            for (N.guid = A; G < y.length; )
                y[G++].guid = A;
            return this.click(N)
        },
        hover: function(r, y) {
            return this.mouseenter(r).mouseleave(y || r)
        }
    });
    w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(r, y) {
        w.fn[y] = function(A, G) {
            null == G && (G = A,
            A = null);
            return 0 < arguments.length ? this.on(y, null, A, G) : this.trigger(y)
        }
        ;
        sc.test(y) && (w.event.fixHooks[y] = w.event.keyHooks);
        tc.test(y) && (w.event.fixHooks[y] = w.event.mouseHooks)
    });
    (function(r, y) {
        function A(R, da, qa, Ea) {
            qa = qa || [];
            da = da || gb;
            var Da, Ba, ya, Ha = da.nodeType;
            if (!R || "string" !== typeof R)
                return qa;
            if (1 !== Ha && 9 !== Ha)
                return [];
            var Fa = Db(da);
            if (!Fa && !Ea && (Da = uc.exec(R)))
                if (ya = Da[1])
                    if (9 === Ha)
                        if ((Ba = da.getElementById(ya)) && Ba.parentNode) {
                            if (Ba.id === ya)
                                return qa.push(Ba),
                                qa
                        } else
                            return qa;
                    else {
                        if (da.ownerDocument && (Ba = da.ownerDocument.getElementById(ya)) && vc(da, Ba) && Ba.id === ya)
                            return qa.push(Ba),
                            qa
                    }
                else {
                    if (Da[2])
                        return pb.apply(qa, qb.call(da.getElementsByTagName(R), 0)),
                        qa;
                    if ((ya = Da[3]) && Vb && da.getElementsByClassName)
                        return pb.apply(qa, qb.call(da.getElementsByClassName(ya), 0)),
                        qa
                }
            return Xa(R.replace(xb, "$1"), da, qa, Ea, Fa)
        }
        function G(R) {
            return function(da) {
                return "input" === da.nodeName.toLowerCase() && da.type === R
            }
        }
        function N(R) {
            return function(da) {
                var qa = da.nodeName.toLowerCase();
                return ("input" === qa || "button" === qa) && da.type === R
            }
        }
        function M(R) {
            return eb(function(da) {
                da = +da;
                return eb(function(qa, Ea) {
                    for (var Da, Ba = R([], qa.length, da), ya = Ba.length; ya--; )
                        qa[Da = Ba[ya]] && (qa[Da] = !(Ea[Da] = qa[Da]))
                })
            })
        }
        function ba(R, da, qa) {
            if (R === da)
                return qa;
            for (R = R.nextSibling; R; ) {
                if (R === da)
                    return -1;
                R = R.nextSibling
            }
            return 1
        }
        function ea(R, da) {
            var qa, Ea, Da, Ba, ya;
            if (Ba = Wb[Ua][R + " "])
                return da ? 0 : Ba.slice(0);
            Ba = R;
            var Ha = [];
            for (ya = Sa.preFilter; Ba; ) {
                if (!Fa || (qa = wc.exec(Ba)))
                    qa && (Ba = Ba.slice(qa[0].length) || Ba),
                    Ha.push(Ea = []);
                var Fa = !1;
                if (qa = xc.exec(Ba))
                    Ea.push(Fa = new Xb(qa.shift())),
                    Ba = Ba.slice(Fa.length),
                    Fa.type = qa[0].replace(xb, " ");
                for (Da in Sa.filter)
                    !(qa = yb[Da].exec(Ba)) || ya[Da] && !(qa = ya[Da](qa)) || (Ea.push(Fa = new Xb(qa.shift())),
                    Ba = Ba.slice(Fa.length),
                    Fa.type = Da,
                    Fa.matches = qa);
                if (!Fa)
                    break
            }
            return da ? Ba.length : Ba ? A.error(R) : Wb(R, Ha).slice(0)
        }
        function oa(R, da, qa) {
            var Ea = da.dir
              , Da = qa && "parentNode" === da.dir
              , Ba = yc++;
            return da.first ? function(ya, Ha, Fa) {
                for (; ya = ya[Ea]; )
                    if (Da || 1 === ya.nodeType)
                        return R(ya, Ha, Fa)
            }
            : function(ya, Ha, Fa) {
                if (!Fa)
                    for (var Ka, Oa = zb + " " + Ba + " ", Va = Oa + fb; ya = ya[Ea]; ) {
                        if (Da || 1 === ya.nodeType) {
                            if ((Ka = ya[Ua]) === Va)
                                return ya.sizset;
                            if ("string" === typeof Ka && 0 === Ka.indexOf(Oa)) {
                                if (ya.sizset)
                                    return ya
                            } else {
                                ya[Ua] = Va;
                                if (R(ya, Ha, Fa))
                                    return ya.sizset = !0,
                                    ya;
                                ya.sizset = !1
                            }
                        }
                    }
                else
                    for (; ya = ya[Ea]; )
                        if ((Da || 1 === ya.nodeType) && R(ya, Ha, Fa))
                            return ya
            }
        }
        function za(R) {
            return 1 < R.length ? function(da, qa, Ea) {
                for (var Da = R.length; Da--; )
                    if (!R[Da](da, qa, Ea))
                        return !1;
                return !0
            }
            : R[0]
        }
        function xa(R, da, qa, Ea, Da) {
            for (var Ba, ya = [], Ha = 0, Fa = R.length, Ka = null != da; Ha < Fa; Ha++)
                if (Ba = R[Ha])
                    if (!qa || qa(Ba, Ea, Da))
                        ya.push(Ba),
                        Ka && da.push(Ha);
            return ya
        }
        function Aa(R, da, qa, Ea, Da, Ba) {
            Ea && !Ea[Ua] && (Ea = Aa(Ea));
            Da && !Da[Ua] && (Da = Aa(Da, Ba));
            return eb(function(ya, Ha, Fa, Ka) {
                var Oa, Va = [], Wa = [], ab = Ha.length, Qa;
                if (!(Qa = ya)) {
                    Qa = da || "*";
                    for (var Na = Fa.nodeType ? [Fa] : Fa, hb = [], rb = 0, Eb = Na.length; rb < Eb; rb++)
                        A(Qa, Na[rb], hb);
                    Qa = hb
                }
                Qa = !R || !ya && da ? Qa : xa(Qa, Va, R, Fa, Ka);
                Na = qa ? Da || (ya ? R : ab || Ea) ? [] : Ha : Qa;
                qa && qa(Qa, Na, Fa, Ka);
                if (Ea) {
                    var cb = xa(Na, Wa);
                    Ea(cb, [], Fa, Ka);
                    for (Fa = cb.length; Fa--; )
                        if (Oa = cb[Fa])
                            Na[Wa[Fa]] = !(Qa[Wa[Fa]] = Oa)
                }
                if (ya) {
                    if (Da || R) {
                        if (Da) {
                            cb = [];
                            for (Fa = Na.length; Fa--; )
                                (Oa = Na[Fa]) && cb.push(Qa[Fa] = Oa);
                            Da(null, Na = [], cb, Ka)
                        }
                        for (Fa = Na.length; Fa--; )
                            (Oa = Na[Fa]) && -1 < (cb = Da ? Fb.call(ya, Oa) : Va[Fa]) && (ya[cb] = !(Ha[cb] = Oa))
                    }
                } else
                    Na = xa(Na === Ha ? Na.splice(ab, Na.length) : Na),
                    Da ? Da(null, Ha, Na, Ka) : pb.apply(Ha, Na)
            })
        }
        function Ga(R) {
            var da, qa, Ea = R.length, Da = Sa.relative[R[0].type];
            var Ba = Da || Sa.relative[" "];
            for (var ya = Da ? 1 : 0, Ha = oa(function(Oa) {
                return Oa === da
            }, Ba, !0), Fa = oa(function(Oa) {
                return -1 < Fb.call(da, Oa)
            }, Ba, !0), Ka = [function(Oa, Va, Wa) {
                return !Da && (Wa || Va !== Ab) || ((da = Va).nodeType ? Ha(Oa, Va, Wa) : Fa(Oa, Va, Wa))
            }
            ]; ya < Ea; ya++)
                if (Ba = Sa.relative[R[ya].type])
                    Ka = [oa(za(Ka), Ba)];
                else {
                    Ba = Sa.filter[R[ya].type].apply(null, R[ya].matches);
                    if (Ba[Ua]) {
                        for (qa = ++ya; qa < Ea && !Sa.relative[R[qa].type]; qa++)
                            ;
                        return Aa(1 < ya && za(Ka), 1 < ya && R.slice(0, ya - 1).join("").replace(xb, "$1"), Ba, ya < qa && Ga(R.slice(ya, qa)), qa < Ea && Ga(R = R.slice(qa)), qa < Ea && R.join(""))
                    }
                    Ka.push(Ba)
                }
            return za(Ka)
        }
        function Ma(R, da) {
            var qa = 0 < da.length
              , Ea = 0 < R.length
              , Da = function(Ba, ya, Ha, Fa, Ka) {
                var Oa, Va, Wa = [], ab = 0, Qa = "0", Na = Ba && [], hb = null != Ka, rb = Ab, Eb = Ba || Ea && Sa.find.TAG("*", Ka && ya.parentNode || ya), cb = zb += null == rb ? 1 : Math.E;
                hb && (Ab = ya !== gb && ya,
                fb = Da.el);
                for (; null != (Ka = Eb[Qa]); Qa++) {
                    if (Ea && Ka) {
                        for (Oa = 0; Va = R[Oa]; Oa++)
                            if (Va(Ka, ya, Ha)) {
                                Fa.push(Ka);
                                break
                            }
                        hb && (zb = cb,
                        fb = ++Da.el)
                    }
                    qa && ((Ka = !Va && Ka) && ab--,
                    Ba && Na.push(Ka))
                }
                ab += Qa;
                if (qa && Qa !== ab) {
                    for (Oa = 0; Va = da[Oa]; Oa++)
                        Va(Na, Wa, ya, Ha);
                    if (Ba) {
                        if (0 < ab)
                            for (; Qa--; )
                                Na[Qa] || Wa[Qa] || (Wa[Qa] = zc.call(Fa));
                        Wa = xa(Wa)
                    }
                    pb.apply(Fa, Wa);
                    hb && !Ba && 0 < Wa.length && 1 < ab + da.length && A.uniqueSort(Fa)
                }
                hb && (zb = cb,
                Ab = rb);
                return Na
            };
            Da.el = 0;
            return qa ? eb(Da) : Da
        }
        function Xa(R, da, qa, Ea, Da) {
            var Ba, ya, Ha, Fa = ea(R);
            if (!Ea && 1 === Fa.length) {
                var Ka = Fa[0] = Fa[0].slice(0);
                if (2 < Ka.length && "ID" === (ya = Ka[0]).type && 9 === da.nodeType && !Da && Sa.relative[Ka[1].type]) {
                    da = Sa.find.ID(ya.matches[0].replace(lb, ""), da, Da)[0];
                    if (!da)
                        return qa;
                    R = R.slice(Ka.shift().length)
                }
                for (Ba = yb.POS.test(R) ? -1 : Ka.length - 1; 0 <= Ba; Ba--) {
                    ya = Ka[Ba];
                    if (Sa.relative[Ha = ya.type])
                        break;
                    if (Ha = Sa.find[Ha])
                        if (Ea = Ha(ya.matches[0].replace(lb, ""), Gb.test(Ka[0].type) && da.parentNode || da, Da)) {
                            Ka.splice(Ba, 1);
                            R = Ea.length && Ka.join("");
                            if (!R)
                                return pb.apply(qa, qb.call(Ea, 0)),
                                qa;
                            break
                        }
                }
            }
            Yb(R, Fa)(Ea, da, Da, qa, Gb.test(R));
            return qa
        }
        function $a() {}
        var fb, Hb, tb, Ab, Zb = !0, Ua = ("sizcache" + Math.random()).replace(".", ""), Xb = String, gb = r.document, db = gb.documentElement, zb = 0, yc = 0, zc = [].pop, pb = [].push, qb = [].slice, Fb = [].indexOf || function(R) {
            for (var da = 0, qa = this.length; da < qa; da++)
                if (this[da] === R)
                    return da;
            return -1
        }
        , eb = function(R, da) {
            R[Ua] = null == da || da;
            return R
        };
        r = function() {
            var R = {}
              , da = [];
            return eb(function(qa, Ea) {
                da.push(qa) > Sa.cacheLength && delete R[da.shift()];
                return R[qa + " "] = Ea
            }, R)
        }
        ;
        var $b = r()
          , Wb = r()
          , ac = r();
        r = "\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[-\\w]|[^\\x00-\\xa0])+)[\\x20\\t\\r\\n\\f]*(?:([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+".replace("w", "w#") + ")|)|)[\\x20\\t\\r\\n\\f]*\\]";
        var Ib = ":((?:\\\\.|[-\\w]|[^\\x00-\\xa0])+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + r + ")|[^:]|\\\\.)*|.*))\\)|)"
          , xb = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g
          , wc = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/
          , xc = /^[\x20\t\r\n\f]*([\x20\t\r\n\f>+~])[\x20\t\r\n\f]*/
          , Ac = new RegExp(Ib)
          , uc = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/
          , Gb = /[\x20\t\r\n\f]*[+~]/
          , Bc = /h\d/i
          , Cc = /input|select|textarea|button/i
          , lb = /\\(?!\\)/g
          , yb = {
            ID: /^#((?:\\.|[-\w]|[^\x00-\xa0])+)/,
            CLASS: /^\.((?:\\.|[-\w]|[^\x00-\xa0])+)/,
            NAME: /^\[name=['"]?((?:\\.|[-\w]|[^\x00-\xa0])+)['"]?\]/,
            TAG: new RegExp("^(" + "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+".replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + r),
            PSEUDO: new RegExp("^" + Ib),
            POS: /:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i,
            CHILD: /^:(only|nth|first|last)-child(?:\([\x20\t\r\n\f]*(even|odd|(([+-]|)(\d*)n|)[\x20\t\r\n\f]*(?:([+-]|)[\x20\t\r\n\f]*(\d+)|))[\x20\t\r\n\f]*\)|)/i,
            needsContext: /^[\x20\t\r\n\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i
        }
          , ib = function(R) {
            var da = gb.createElement("div");
            try {
                return R(da)
            } catch (qa) {
                return !1
            } finally {}
        };
        r = ib(function(R) {
            R.appendChild(gb.createComment(""));
            return !R.getElementsByTagName("*").length
        });
        var Dc = ib(function(R) {
            R.innerHTML = "<a href='#'></a>";
            return R.firstChild && "undefined" !== typeof R.firstChild.getAttribute && "#" === R.firstChild.getAttribute("href")
        })
          , Ec = ib(function(R) {
            R.innerHTML = "<select></select>";
            R = typeof R.lastChild.getAttribute("multiple");
            return "boolean" !== R && "string" !== R
        })
          , Vb = ib(function(R) {
            R.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
            if (!R.getElementsByClassName || !R.getElementsByClassName("e").length)
                return !1;
            R.lastChild.className = "e";
            return 2 === R.getElementsByClassName("e").length
        })
          , Fc = ib(function(R) {
            R.id = Ua + 0;
            R.innerHTML = "<a name='" + Ua + "'></a><div name='" + Ua + "'></div>";
            db.insertBefore(R, db.firstChild);
            var da = gb.getElementsByName && gb.getElementsByName(Ua).length === 2 + gb.getElementsByName(Ua + 0).length;
            Hb = !gb.getElementById(Ua);
            db.removeChild(R);
            return da
        });
        try {
            qb.call(db.childNodes, 0)[0].nodeType
        } catch (R) {
            qb = function(da) {
                for (var qa, Ea = []; qa = this[da]; da++)
                    Ea.push(qa);
                return Ea
            }
        }
        A.matches = function(R, da) {
            return A(R, null, null, da)
        }
        ;
        A.matchesSelector = function(R, da) {
            return 0 < A(da, null, null, [R]).length
        }
        ;
        var Jb = A.getText = function(R) {
            var da, qa = "", Ea = 0;
            if (da = R.nodeType)
                if (1 === da || 9 === da || 11 === da) {
                    if ("string" === typeof R.textContent)
                        return R.textContent;
                    for (R = R.firstChild; R; R = R.nextSibling)
                        qa += Jb(R)
                } else {
                    if (3 === da || 4 === da)
                        return R.nodeValue
                }
            else
                for (; da = R[Ea]; Ea++)
                    qa += Jb(da);
            return qa
        }
        ;
        var Db = A.isXML = function(R) {
            return (R = R && (R.ownerDocument || R).documentElement) ? "HTML" !== R.nodeName : !1
        }
        ;
        var vc = A.contains = db.contains ? function(R, da) {
            var qa = 9 === R.nodeType ? R.documentElement : R;
            da = da && da.parentNode;
            return R === da || !!(da && 1 === da.nodeType && qa.contains && qa.contains(da))
        }
        : db.compareDocumentPosition ? function(R, da) {
            return da && !!(R.compareDocumentPosition(da) & 16)
        }
        : function(R, da) {
            for (; da = da.parentNode; )
                if (da === R)
                    return !0;
            return !1
        }
        ;
        A.attr = function(R, da) {
            var qa, Ea = Db(R);
            Ea || (da = da.toLowerCase());
            return (qa = Sa.attrHandle[da]) ? qa(R) : Ea || Ec ? R.getAttribute(da) : (qa = R.getAttributeNode(da)) ? "boolean" === typeof R[da] ? R[da] ? da : null : qa.specified ? qa.value : null : null
        }
        ;
        var Sa = A.selectors = {
            cacheLength: 50,
            createPseudo: eb,
            match: yb,
            attrHandle: Dc ? {} : {
                href: function(R) {
                    return R.getAttribute("href", 2)
                },
                type: function(R) {
                    return R.getAttribute("type")
                }
            },
            find: {
                ID: Hb ? function(R, da, qa) {
                    if ("undefined" !== typeof da.getElementById && !qa)
                        return (R = da.getElementById(R)) && R.parentNode ? [R] : []
                }
                : function(R, da, qa) {
                    if ("undefined" !== typeof da.getElementById && !qa)
                        return (da = da.getElementById(R)) ? da.id === R || "undefined" !== typeof da.getAttributeNode && da.getAttributeNode("id").value === R ? [da] : y : []
                }
                ,
                TAG: r ? function(R, da) {
                    if ("undefined" !== typeof da.getElementsByTagName)
                        return da.getElementsByTagName(R)
                }
                : function(R, da) {
                    da = da.getElementsByTagName(R);
                    if ("*" === R) {
                        for (var qa = [], Ea = 0; R = da[Ea]; Ea++)
                            1 === R.nodeType && qa.push(R);
                        return qa
                    }
                    return da
                }
                ,
                NAME: Fc && function(R, da) {
                    if ("undefined" !== typeof da.getElementsByName)
                        return da.getElementsByName(name)
                }
                ,
                CLASS: Vb && function(R, da, qa) {
                    if ("undefined" !== typeof da.getElementsByClassName && !qa)
                        return da.getElementsByClassName(R)
                }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(R) {
                    R[1] = R[1].replace(lb, "");
                    R[3] = (R[4] || R[5] || "").replace(lb, "");
                    "~=" === R[2] && (R[3] = " " + R[3] + " ");
                    return R.slice(0, 4)
                },
                CHILD: function(R) {
                    R[1] = R[1].toLowerCase();
                    "nth" === R[1] ? (R[2] || A.error(R[0]),
                    R[3] = +(R[3] ? R[4] + (R[5] || 1) : 2 * ("even" === R[2] || "odd" === R[2])),
                    R[4] = +(R[6] + R[7] || "odd" === R[2])) : R[2] && A.error(R[0]);
                    return R
                },
                PSEUDO: function(R) {
                    var da, qa;
                    if (yb.CHILD.test(R[0]))
                        return null;
                    if (R[3])
                        R[2] = R[3];
                    else if (da = R[4])
                        Ac.test(da) && (qa = ea(da, !0)) && (qa = da.indexOf(")", da.length - qa) - da.length) && (da = da.slice(0, qa),
                        R[0] = R[0].slice(0, qa)),
                        R[2] = da;
                    return R.slice(0, 3)
                }
            },
            filter: {
                ID: Hb ? function(R) {
                    R = R.replace(lb, "");
                    return function(da) {
                        return da.getAttribute("id") === R
                    }
                }
                : function(R) {
                    R = R.replace(lb, "");
                    return function(da) {
                        return (da = "undefined" !== typeof da.getAttributeNode && da.getAttributeNode("id")) && da.value === R
                    }
                }
                ,
                TAG: function(R) {
                    if ("*" === R)
                        return function() {
                            return !0
                        }
                        ;
                    R = R.replace(lb, "").toLowerCase();
                    return function(da) {
                        return da.nodeName && da.nodeName.toLowerCase() === R
                    }
                },
                CLASS: function(R) {
                    var da = $b[Ua][R + " "];
                    return da || (da = new RegExp("(^|[\\x20\\t\\r\\n\\f])" + R + "([\\x20\\t\\r\\n\\f]|$)"),
                    $b(R, function(qa) {
                        return da.test(qa.className || "undefined" !== typeof qa.getAttribute && qa.getAttribute("class") || "")
                    }))
                },
                ATTR: function(R, da, qa) {
                    return function(Ea, Da) {
                        Ea = A.attr(Ea, R);
                        if (null == Ea)
                            return "!=" === da;
                        if (!da)
                            return !0;
                        Ea += "";
                        return "=" === da ? Ea === qa : "!=" === da ? Ea !== qa : "^=" === da ? qa && 0 === Ea.indexOf(qa) : "*=" === da ? qa && -1 < Ea.indexOf(qa) : "$=" === da ? qa && Ea.substr(Ea.length - qa.length) === qa : "~=" === da ? -1 < (" " + Ea + " ").indexOf(qa) : "|=" === da ? Ea === qa || Ea.substr(0, qa.length + 1) === qa + "-" : !1
                    }
                },
                CHILD: function(R, da, qa, Ea) {
                    return "nth" === R ? function(Da) {
                        var Ba = Da.parentNode;
                        if (1 === qa && 0 === Ea)
                            return !0;
                        if (Ba) {
                            var ya = 0;
                            for (Ba = Ba.firstChild; Ba && (1 !== Ba.nodeType || (ya++,
                            Da !== Ba)); Ba = Ba.nextSibling)
                                ;
                        }
                        ya -= Ea;
                        return ya === qa || 0 === ya % qa && 0 <= ya / qa
                    }
                    : function(Da) {
                        var Ba = Da;
                        switch (R) {
                        case "only":
                        case "first":
                            for (; Ba = Ba.previousSibling; )
                                if (1 === Ba.nodeType)
                                    return !1;
                            if ("first" === R)
                                return !0;
                            Ba = Da;
                        case "last":
                            for (; Ba = Ba.nextSibling; )
                                if (1 === Ba.nodeType)
                                    return !1;
                            return !0
                        }
                    }
                },
                PSEUDO: function(R, da) {
                    var qa = Sa.pseudos[R] || Sa.setFilters[R.toLowerCase()] || A.error("unsupported pseudo: " + R);
                    if (qa[Ua])
                        return qa(da);
                    if (1 < qa.length) {
                        var Ea = [R, R, "", da];
                        return Sa.setFilters.hasOwnProperty(R.toLowerCase()) ? eb(function(Da, Ba) {
                            for (var ya, Ha = qa(Da, da), Fa = Ha.length; Fa--; )
                                ya = Fb.call(Da, Ha[Fa]),
                                Da[ya] = !(Ba[ya] = Ha[Fa])
                        }) : function(Da) {
                            return qa(Da, 0, Ea)
                        }
                    }
                    return qa
                }
            },
            pseudos: {
                not: eb(function(R) {
                    var da = []
                      , qa = []
                      , Ea = Yb(R.replace(xb, "$1"));
                    return Ea[Ua] ? eb(function(Da, Ba, ya, Ha) {
                        Ha = Ea(Da, null, Ha, []);
                        for (var Fa = Da.length; Fa--; )
                            if (ya = Ha[Fa])
                                Da[Fa] = !(Ba[Fa] = ya)
                    }) : function(Da, Ba, ya) {
                        da[0] = Da;
                        Ea(da, null, ya, qa);
                        return !qa.pop()
                    }
                }),
                has: eb(function(R) {
                    return function(da) {
                        return 0 < A(R, da).length
                    }
                }),
                contains: eb(function(R) {
                    return function(da) {
                        return -1 < (da.textContent || da.innerText || Jb(da)).indexOf(R)
                    }
                }),
                enabled: function(R) {
                    return !1 === R.disabled
                },
                disabled: function(R) {
                    return !0 === R.disabled
                },
                checked: function(R) {
                    var da = R.nodeName.toLowerCase();
                    return "input" === da && !!R.checked || "option" === da && !!R.selected
                },
                selected: function(R) {
                    R.parentNode && R.parentNode.selectedIndex;
                    return !0 === R.selected
                },
                parent: function(R) {
                    return !Sa.pseudos.empty(R)
                },
                empty: function(R) {
                    var da;
                    for (R = R.firstChild; R; ) {
                        if ("@" < R.nodeName || 3 === (da = R.nodeType) || 4 === da)
                            return !1;
                        R = R.nextSibling
                    }
                    return !0
                },
                header: function(R) {
                    return Bc.test(R.nodeName)
                },
                text: function(R) {
                    var da, qa;
                    return "input" === R.nodeName.toLowerCase() && "text" === (da = R.type) && (null == (qa = R.getAttribute("type")) || qa.toLowerCase() === da)
                },
                radio: G("radio"),
                checkbox: G("checkbox"),
                file: G("file"),
                password: G("password"),
                image: G("image"),
                submit: N("submit"),
                reset: N("reset"),
                button: function(R) {
                    var da = R.nodeName.toLowerCase();
                    return "input" === da && "button" === R.type || "button" === da
                },
                input: function(R) {
                    return Cc.test(R.nodeName)
                },
                focus: function(R) {
                    var da = R.ownerDocument;
                    return R === da.activeElement && (!da.hasFocus || da.hasFocus()) && !!(R.type || R.href || ~R.tabIndex)
                },
                active: function(R) {
                    return R === R.ownerDocument.activeElement
                },
                first: M(function() {
                    return [0]
                }),
                last: M(function(R, da) {
                    return [da - 1]
                }),
                eq: M(function(R, da, qa) {
                    return [0 > qa ? qa + da : qa]
                }),
                even: M(function(R, da) {
                    for (var qa = 0; qa < da; qa += 2)
                        R.push(qa);
                    return R
                }),
                odd: M(function(R, da) {
                    for (var qa = 1; qa < da; qa += 2)
                        R.push(qa);
                    return R
                }),
                lt: M(function(R, da, qa) {
                    for (da = 0 > qa ? qa + da : qa; 0 <= --da; )
                        R.push(da);
                    return R
                }),
                gt: M(function(R, da, qa) {
                    for (qa = 0 > qa ? qa + da : qa; ++qa < da; )
                        R.push(qa);
                    return R
                })
            }
        };
        var bc = db.compareDocumentPosition ? function(R, da) {
            return R === da ? (tb = !0,
            0) : (R.compareDocumentPosition && da.compareDocumentPosition ? R.compareDocumentPosition(da) & 4 : R.compareDocumentPosition) ? -1 : 1
        }
        : function(R, da) {
            if (R === da)
                return tb = !0,
                0;
            if (R.sourceIndex && da.sourceIndex)
                return R.sourceIndex - da.sourceIndex;
            var qa = []
              , Ea = [];
            var Da = R.parentNode;
            var Ba = da.parentNode;
            var ya = Da;
            if (Da === Ba)
                return ba(R, da);
            if (!Da)
                return -1;
            if (!Ba)
                return 1;
            for (; ya; )
                qa.unshift(ya),
                ya = ya.parentNode;
            for (ya = Ba; ya; )
                Ea.unshift(ya),
                ya = ya.parentNode;
            Da = qa.length;
            Ba = Ea.length;
            for (ya = 0; ya < Da && ya < Ba; ya++)
                if (qa[ya] !== Ea[ya])
                    return ba(qa[ya], Ea[ya]);
            return ya === Da ? ba(R, Ea[ya], -1) : ba(qa[ya], da, 1)
        }
        ;
        [0, 0].sort(bc);
        Zb = !tb;
        A.uniqueSort = function(R) {
            var da, qa = [], Ea = 1, Da = 0;
            tb = Zb;
            R.sort(bc);
            if (tb) {
                for (; da = R[Ea]; Ea++)
                    da === R[Ea - 1] && (Da = qa.push(Ea));
                for (; Da--; )
                    R.splice(qa[Da], 1)
            }
            return R
        }
        ;
        A.error = function(R) {
            throw Error("Syntax error, unrecognized expression: " + R);
        }
        ;
        var Yb = A.compile = function(R, da) {
            var qa, Ea = [], Da = [], Ba = ac[Ua][R + " "];
            if (!Ba) {
                da || (da = ea(R));
                for (qa = da.length; qa--; )
                    Ba = Ga(da[qa]),
                    Ba[Ua] ? Ea.push(Ba) : Da.push(Ba);
                Ba = ac(R, Ma(Da, Ea))
            }
            return Ba
        }
        ;
        gb.querySelectorAll && function() {
            var R, da = Xa, qa = /'|\\/g, Ea = /=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, Da = [":focus"], Ba = [":active"], ya = db.matchesSelector || db.mozMatchesSelector || db.webkitMatchesSelector || db.oMatchesSelector || db.msMatchesSelector;
            ib(function(Ha) {
                Ha.innerHTML = "<select><option selected=''></option></select>";
                Ha.querySelectorAll("[selected]").length || Da.push("\\[[\\x20\\t\\r\\n\\f]*(?:checked|disabled|ismap|multiple|readonly|selected|value)");
                Ha.querySelectorAll(":checked").length || Da.push(":checked")
            });
            ib(function(Ha) {
                Ha.innerHTML = "<p test=''></p>";
                Ha.querySelectorAll("[test^='']").length && Da.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:\"\"|'')");
                Ha.innerHTML = "<input type='hidden'/>";
                Ha.querySelectorAll(":enabled").length || Da.push(":enabled", ":disabled")
            });
            Da = new RegExp(Da.join("|"));
            Xa = function(Ha, Fa, Ka, Oa, Va) {
                if (!Oa && !Va && !Da.test(Ha)) {
                    var Wa = !0
                      , ab = Ua;
                    var Qa = Fa;
                    var Na = 9 === Fa.nodeType && Ha;
                    if (1 === Fa.nodeType && "object" !== Fa.nodeName.toLowerCase()) {
                        Na = ea(Ha);
                        (Wa = Fa.getAttribute("id")) ? ab = Wa.replace(qa, "\\$&") : Fa.setAttribute("id", ab);
                        ab = "[id='" + ab + "'] ";
                        for (Qa = Na.length; Qa--; )
                            Na[Qa] = ab + Na[Qa].join("");
                        Qa = Gb.test(Ha) && Fa.parentNode || Fa;
                        Na = Na.join(",")
                    }
                    if (Na)
                        try {
                            return pb.apply(Ka, qb.call(Qa.querySelectorAll(Na), 0)),
                            Ka
                        } catch (hb) {} finally {
                            Wa || Fa.removeAttribute("id")
                        }
                }
                return da(Ha, Fa, Ka, Oa, Va)
            }
            ;
            ya && (ib(function(Ha) {
                R = ya.call(Ha, "div");
                try {
                    ya.call(Ha, "[test!='']:sizzle"),
                    Ba.push("!=", Ib)
                } catch (Fa) {}
            }),
            Ba = new RegExp(Ba.join("|")),
            A.matchesSelector = function(Ha, Fa) {
                Fa = Fa.replace(Ea, "='$1']");
                if (!Db(Ha) && !Ba.test(Fa) && !Da.test(Fa))
                    try {
                        var Ka = ya.call(Ha, Fa);
                        if (Ka || R || Ha.document && 11 !== Ha.document.nodeType)
                            return Ka
                    } catch (Oa) {}
                return 0 < A(Fa, null, null, [Ha]).length
            }
            )
        }();
        Sa.pseudos.nth = Sa.pseudos.eq;
        Sa.filters = $a.prototype = Sa.pseudos;
        Sa.setFilters = new $a;
        A.attr = w.attr;
        w.find = A;
        w.expr = A.selectors;
        w.expr[":"] = w.expr.pseudos;
        w.unique = A.uniqueSort;
        w.text = A.getText;
        w.isXMLDoc = A.isXML;
        w.contains = A.contains
    }
    )(e);
    var Gc = /Until$/
      , Hc = /^(?:parents|prev(?:Until|All))/
      , lc = /^.[^:#\[\.,]*$/
      , cc = w.expr.match.needsContext
      , Ic = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    w.fn.extend({
        find: function(r) {
            var y, A, G, N = this;
            if ("string" !== typeof r)
                return w(r).filter(function() {
                    ba = 0;
                    for (y = N.length; ba < y; ba++)
                        if (w.contains(N[ba], this))
                            return !0
                });
            var M = this.pushStack("", "find", r);
            var ba = 0;
            for (y = this.length; ba < y; ba++) {
                var ea = M.length;
                w.find(r, this[ba], M);
                if (0 < ba)
                    for (A = ea; A < M.length; A++)
                        for (G = 0; G < ea; G++)
                            if (M[G] === M[A]) {
                                M.splice(A--, 1);
                                break
                            }
            }
            return M
        },
        has: function(r) {
            var y, A = w(r, this), G = A.length;
            return this.filter(function() {
                for (y = 0; y < G; y++)
                    if (w.contains(this, A[y]))
                        return !0
            })
        },
        not: function(r) {
            return this.pushStack(m(this, r, !1), "not", r)
        },
        filter: function(r) {
            return this.pushStack(m(this, r, !0), "filter", r)
        },
        is: function(r) {
            return !!r && ("string" === typeof r ? cc.test(r) ? 0 <= w(r, this.context).index(this[0]) : 0 < w.filter(r, this).length : 0 < this.filter(r).length)
        },
        closest: function(r, y) {
            for (var A, G = 0, N = this.length, M = [], ba = cc.test(r) || "string" !== typeof r ? w(r, y || this.context) : 0; G < N; G++)
                for (A = this[G]; A && A.ownerDocument && A !== y && 11 !== A.nodeType; ) {
                    if (ba ? -1 < ba.index(A) : w.find.matchesSelector(A, r)) {
                        M.push(A);
                        break
                    }
                    A = A.parentNode
                }
            M = 1 < M.length ? w.unique(M) : M;
            return this.pushStack(M, "closest", r)
        },
        index: function(r) {
            return r ? "string" === typeof r ? w.inArray(this[0], w(r)) : w.inArray(r.jqx ? r[0] : r, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
        },
        add: function(r, y) {
            r = "string" === typeof r ? w(r, y) : w.makeArray(r && r.nodeType ? [r] : r);
            y = w.merge(this.get(), r);
            return this.pushStack(k(r[0]) || k(y[0]) ? y : w.unique(y))
        },
        addBack: function(r) {
            return this.add(null == r ? this.prevObject : this.prevObject.filter(r))
        }
    });
    w.fn.andSelf = w.fn.addBack;
    w.each({
        parent: function(r) {
            return (r = r.parentNode) && 11 !== r.nodeType ? r : null
        },
        parents: function(r) {
            return w.dir(r, "parentNode")
        },
        parentsUntil: function(r, y, A) {
            return w.dir(r, "parentNode", A)
        },
        next: function(r) {
            return l(r, "nextSibling")
        },
        prev: function(r) {
            return l(r, "previousSibling")
        },
        nextAll: function(r) {
            return w.dir(r, "nextSibling")
        },
        prevAll: function(r) {
            return w.dir(r, "previousSibling")
        },
        nextUntil: function(r, y, A) {
            return w.dir(r, "nextSibling", A)
        },
        prevUntil: function(r, y, A) {
            return w.dir(r, "previousSibling", A)
        },
        siblings: function(r) {
            return w.sibling((r.parentNode || {}).firstChild, r)
        },
        children: function(r) {
            return w.sibling(r.firstChild)
        },
        contents: function(r) {
            return w.nodeName(r, "iframe") ? r.contentDocument || r.contentWindow.document : w.merge([], r.childNodes)
        }
    }, function(r, y) {
        w.fn[r] = function(A, G) {
            var N = w.map(this, y, A);
            Gc.test(r) || (G = A);
            G && "string" === typeof G && (N = w.filter(G, N));
            N = 1 < this.length && !Ic[r] ? w.unique(N) : N;
            1 < this.length && Hc.test(r) && (N = N.reverse());
            return this.pushStack(N, r, la.call(arguments).join(","))
        }
    });
    w.extend({
        filter: function(r, y, A) {
            A && (r = ":not(" + r + ")");
            return 1 === y.length ? w.find.matchesSelector(y[0], r) ? [y[0]] : [] : w.find.matches(r, y)
        },
        dir: function(r, y, A) {
            var G = [];
            for (r = r[y]; r && 9 !== r.nodeType && (A === b || 1 !== r.nodeType || !w(r).is(A)); )
                1 === r.nodeType && G.push(r),
                r = r[y];
            return G
        },
        sibling: function(r, y) {
            for (var A = []; r; r = r.nextSibling)
                1 === r.nodeType && r !== y && A.push(r);
            return A
        }
    });
    var Ob = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video"
      , Jc = / JQXLite\d+="(?:null|\d+)"/g
      , Kb = /^\s+/
      , dc = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , ec = /<([\w:]+)/
      , Kc = /<tbody/i
      , Lc = /<|&#?\w+;/
      , Mc = /<(?:script|style|link)/i
      , Nc = /<(?:script|object|embed|option|style)/i
      , Lb = new RegExp("<(?:" + Ob + ")[\\s/>]","i")
      , Pb = /^(?:checkbox|radio)$/
      , fc = /checked\s*(?:[^=]|=\s*.checked.)/i
      , Oc = /\/(java|ecma)script/i
      , Pc = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g
      , bb = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
    }
      , gc = n(I)
      , Mb = gc.appendChild(I.createElement("div"));
    bb.optgroup = bb.option;
    bb.tbody = bb.tfoot = bb.colgroup = bb.caption = bb.thead;
    bb.th = bb.td;
    w.support.htmlSerialize || (bb._default = [1, "X<div>", "</div>"]);
    w.fn.extend({
        text: function(r) {
            return w.access(this, function(y) {
                return y === b ? w.text(this) : this.empty().append((this[0] && this[0].ownerDocument || I).createTextNode(y))
            }, null, r, arguments.length)
        },
        wrapAll: function(r) {
            if (w.isFunction(r))
                return this.each(function(A) {
                    w(this).wrapAll(r.call(this, A))
                });
            if (this[0]) {
                var y = w(r, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && y.insertBefore(this[0]);
                y.map(function() {
                    for (var A = this; A.firstChild && 1 === A.firstChild.nodeType; )
                        A = A.firstChild;
                    return A
                }).append(this)
            }
            return this
        },
        wrapInner: function(r) {
            return w.isFunction(r) ? this.each(function(y) {
                w(this).wrapInner(r.call(this, y))
            }) : this.each(function() {
                var y = w(this)
                  , A = y.contents();
                A.length ? A.wrapAll(r) : y.append(r)
            })
        },
        wrap: function(r) {
            var y = w.isFunction(r);
            return this.each(function(A) {
                w(this).wrapAll(y ? r.call(this, A) : r)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                w.nodeName(this, "body") || w(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(r) {
                1 !== this.nodeType && 11 !== this.nodeType || this.appendChild(r)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(r) {
                1 !== this.nodeType && 11 !== this.nodeType || this.insertBefore(r, this.firstChild)
            })
        },
        before: function() {
            if (!k(this[0]))
                return this.domManip(arguments, !1, function(y) {
                    this.parentNode.insertBefore(y, this)
                });
            if (arguments.length) {
                var r = w.clean(arguments);
                return this.pushStack(w.merge(r, this), "before", this.selector)
            }
        },
        after: function() {
            if (!k(this[0]))
                return this.domManip(arguments, !1, function(y) {
                    this.parentNode.insertBefore(y, this.nextSibling)
                });
            if (arguments.length) {
                var r = w.clean(arguments);
                return this.pushStack(w.merge(this, r), "after", this.selector)
            }
        },
        remove: function(r, y) {
            for (var A, G = 0; null != (A = this[G]); G++)
                if (!r || w.filter(r, [A]).length)
                    y || 1 !== A.nodeType || (w.cleanData(A.getElementsByTagName("*")),
                    w.cleanData([A])),
                    A.parentNode && A.parentNode.removeChild(A);
            return this
        },
        empty: function() {
            for (var r, y = 0; null != (r = this[y]); y++)
                for (1 === r.nodeType && w.cleanData(r.getElementsByTagName("*")); r.firstChild; )
                    r.removeChild(r.firstChild);
            return this
        },
        clone: function(r, y) {
            r = null == r ? !1 : r;
            y = null == y ? r : y;
            return this.map(function() {
                return w.clone(this, r, y)
            })
        },
        html: function(r) {
            return w.access(this, function(y) {
                var A = this[0] || {}
                  , G = 0
                  , N = this.length;
                if (y === b)
                    return 1 === A.nodeType ? A.innerHTML.replace(Jc, "") : b;
                if (!("string" !== typeof y || Mc.test(y) || !w.support.htmlSerialize && Lb.test(y) || !w.support.leadingWhitespace && Kb.test(y) || bb[(ec.exec(y) || ["", ""])[1].toLowerCase()])) {
                    y = y.replace(dc, "<$1></$2>");
                    try {
                        for (; G < N; G++)
                            A = this[G] || {},
                            1 === A.nodeType && (w.cleanData(A.getElementsByTagName("*")),
                            A.innerHTML = y);
                        A = 0
                    } catch (M) {}
                }
                A && this.empty().append(y)
            }, null, r, arguments.length)
        },
        replaceWith: function(r) {
            if (!k(this[0])) {
                if (w.isFunction(r))
                    return this.each(function(y) {
                        var A = w(this)
                          , G = A.html();
                        A.replaceWith(r.call(this, y, G))
                    });
                "string" !== typeof r && (r = w(r).detach());
                return this.each(function() {
                    var y = this.nextSibling
                      , A = this.parentNode;
                    w(this).remove();
                    y ? w(y).before(r) : w(A).append(r)
                })
            }
            return this.length ? this.pushStack(w(w.isFunction(r) ? r() : r), "replaceWith", r) : this
        },
        detach: function(r) {
            return this.remove(r, !0)
        },
        domManip: function(r, y, A) {
            r = [].concat.apply([], r);
            var G = 0
              , N = r[0]
              , M = []
              , ba = this.length;
            if (!w.support.checkClone && 1 < ba && "string" === typeof N && fc.test(N))
                return this.each(function() {
                    w(this).domManip(r, y, A)
                });
            if (w.isFunction(N))
                return this.each(function(xa) {
                    var Aa = w(this);
                    r[0] = N.call(this, xa, y ? Aa.html() : b);
                    Aa.domManip(r, y, A)
                });
            if (this[0]) {
                var ea = w.buildFragment(r, this, M);
                var oa = ea.fragment;
                var za = oa.firstChild;
                1 === oa.childNodes.length && (oa = za);
                if (za)
                    for (y = y && w.nodeName(za, "tr"),
                    ea = ea.cacheable || ba - 1; G < ba; G++)
                        A.call(y && w.nodeName(this[G], "table") ? p(this[G], "tbody") : this[G], G === ea ? oa : w.clone(oa, !0, !0));
                oa = za = null;
                M.length && w.each(M, function(xa, Aa) {
                    Aa.src ? w.ajax ? w.ajax({
                        url: Aa.src,
                        type: "GET",
                        dataType: "script",
                        async: !1,
                        global: !1,
                        "throws": !0
                    }) : w.error("no ajax") : w.globalEval((Aa.text || Aa.textContent || Aa.innerHTML || "").replace(Pc, ""));
                    Aa.parentNode && Aa.parentNode.removeChild(Aa)
                })
            }
            return this
        }
    });
    w.buildFragment = function(r, y, A) {
        var G = r[0];
        y = y || I;
        y = !y.nodeType && y[0] || y;
        y = y.ownerDocument || y;
        if (1 === r.length && "string" === typeof G && 512 > G.length && y === I && "<" === G.charAt(0) && !Nc.test(G) && (w.support.checkClone || !fc.test(G)) && (w.support.html5Clone || !Lb.test(G))) {
            var N = !0;
            var M = w.fragments[G];
            var ba = M !== b
        }
        M || (M = y.createDocumentFragment(),
        w.clean(r, y, M, A),
        N && (w.fragments[G] = ba && M));
        return {
            fragment: M,
            cacheable: N
        }
    }
    ;
    w.fragments = {};
    w.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(r, y) {
        w.fn[r] = function(A) {
            var G = 0
              , N = [];
            A = w(A);
            var M = A.length;
            var ba = 1 === this.length && this[0].parentNode;
            if ((null == ba || ba && 11 === ba.nodeType && 1 === ba.childNodes.length) && 1 === M)
                return A[y](this[0]),
                this;
            for (; G < M; G++)
                ba = (0 < G ? this.clone(!0) : this).get(),
                w(A[G])[y](ba),
                N = N.concat(ba);
            return this.pushStack(N, r, A.selector)
        }
    });
    w.extend({
        clone: function(r, y, A) {
            var G;
            if (w.support.html5Clone || w.isXMLDoc(r) || !Lb.test("<" + r.nodeName + ">"))
                var N = r.cloneNode(!0);
            else
                Mb.innerHTML = r.outerHTML,
                Mb.removeChild(N = Mb.firstChild);
            if (!(w.support.noCloneEvent && w.support.noCloneChecked || 1 !== r.nodeType && 11 !== r.nodeType || w.isXMLDoc(r))) {
                t(r, N);
                var M = v(r);
                var ba = v(N);
                for (G = 0; M[G]; ++G)
                    ba[G] && t(M[G], ba[G])
            }
            if (y && (q(r, N),
            A))
                for (M = v(r),
                ba = v(N),
                G = 0; M[G]; ++G)
                    q(M[G], ba[G]);
            return N
        },
        clean: function(r, y, A, G) {
            var N, M, ba = y === I && gc, ea = [];
            y && "undefined" !== typeof y.createDocumentFragment || (y = I);
            for (N = 0; null != (M = r[N]); N++)
                if ("number" === typeof M && (M += ""),
                M) {
                    if ("string" === typeof M)
                        if (Lc.test(M)) {
                            ba = ba || n(y);
                            var oa = y.createElement("div");
                            ba.appendChild(oa);
                            M = M.replace(dc, "<$1></$2>");
                            var za = (ec.exec(M) || ["", ""])[1].toLowerCase();
                            var xa = bb[za] || bb._default;
                            var Aa = xa[0];
                            for (oa.innerHTML = xa[1] + M + xa[2]; Aa--; )
                                oa = oa.lastChild;
                            if (!w.support.tbody)
                                for (Aa = Kc.test(M),
                                xa = "table" !== za || Aa ? "<table>" !== xa[1] || Aa ? [] : oa.childNodes : oa.firstChild && oa.firstChild.childNodes,
                                za = xa.length - 1; 0 <= za; --za)
                                    w.nodeName(xa[za], "tbody") && !xa[za].childNodes.length && xa[za].parentNode.removeChild(xa[za]);
                            !w.support.leadingWhitespace && Kb.test(M) && oa.insertBefore(y.createTextNode(Kb.exec(M)[0]), oa.firstChild);
                            M = oa.childNodes;
                            oa.parentNode.removeChild(oa)
                        } else
                            M = y.createTextNode(M);
                    M.nodeType ? ea.push(M) : w.merge(ea, M)
                }
            oa && (M = oa = ba = null);
            if (!w.support.appendChecked)
                for (N = 0; null != (M = ea[N]); N++)
                    w.nodeName(M, "input") ? z(M) : "undefined" !== typeof M.getElementsByTagName && w.grep(M.getElementsByTagName("input"), z);
            if (A)
                for (r = function(Ga) {
                    if (!Ga.type || Oc.test(Ga.type))
                        return G ? G.push(Ga.parentNode ? Ga.parentNode.removeChild(Ga) : Ga) : A.appendChild(Ga)
                }
                ,
                N = 0; null != (M = ea[N]); N++)
                    w.nodeName(M, "script") && r(M) || (A.appendChild(M),
                    "undefined" !== typeof M.getElementsByTagName && (M = w.grep(w.merge([], M.getElementsByTagName("script")), r),
                    ea.splice.apply(ea, [N + 1, 0].concat(M)),
                    N += M.length));
            return ea
        },
        cleanData: function(r, y) {
            for (var A, G, N, M, ba = 0, ea = w.expando, oa = w.cache, za = w.support.deleteExpando, xa = w.event.special; null != (N = r[ba]); ba++)
                if (y || w.acceptData(N))
                    if (A = (G = N[ea]) && oa[G]) {
                        if (A.events)
                            for (M in A.events)
                                xa[M] ? w.event.remove(N, M) : w.removeEvent(N, M, A.handle);
                        oa[G] && (delete oa[G],
                        za ? delete N[ea] : N.removeAttribute ? N.removeAttribute(ea) : N[ea] = null,
                        w.deletedIds.push(G))
                    }
        }
    });
    (function() {
        w.uaMatch = function(A) {
            A = A.toLowerCase();
            A = /(chrome)[ \/]([\w.]+)/.exec(A) || /(webkit)[ \/]([\w.]+)/.exec(A) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(A) || /(msie) ([\w.]+)/.exec(A) || 0 > A.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(A) || [];
            return {
                browser: A[1] || "",
                version: A[2] || "0"
            }
        }
        ;
        var r = w.uaMatch(T.userAgent);
        var y = {};
        r.browser && (y[r.browser] = !0,
        y.version = r.version);
        y.chrome ? y.webkit = !0 : y.webkit && (y.safari = !0);
        w.browser = y;
        w.sub = function() {
            function A(N, M) {
                return new A.fn.init(N,M)
            }
            w.extend(!0, A, this);
            A.superclass = this;
            A.fn = A.prototype = this();
            A.fn.constructor = A;
            A.sub = this.sub;
            A.fn.init = function(N, M) {
                M && M instanceof w && !(M instanceof A) && (M = A(M));
                return w.fn.init.call(this, N, M, G)
            }
            ;
            A.fn.init.prototype = A.fn;
            var G = A(I);
            return A
        }
    }
    )();
    var Ya, mb, nb, Nb = /alpha\([^)]*\)/i, Qc = /opacity=([^)]*)/, Rc = /^(top|right|bottom|left)$/, Sc = /^(none|table(?!-c[ea]).+)/, hc = /^margin/, mc = new RegExp("^(" + pa + ")(.*)$","i"), ub = new RegExp("^(" + pa + ")(?!px)[a-z%]+$","i"), Tc = new RegExp("^([-+])=(" + pa + ")","i"), Cb = {
        BODY: "block"
    }, Uc = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, ic = {
        letterSpacing: 0,
        fontWeight: 400
    }, jb = ["Top", "Right", "Bottom", "Left"], Qb = ["Webkit", "O", "Moz", "ms"], Vc = w.fn.toggle;
    w.fn.extend({
        css: function(r, y) {
            return w.access(this, function(A, G, N) {
                return N !== b ? w.style(A, G, N) : w.css(A, G)
            }, r, y, 1 < arguments.length)
        },
        show: function() {
            return F(this, !0)
        },
        hide: function() {
            return F(this)
        },
        toggle: function(r, y) {
            var A = "boolean" === typeof r;
            return w.isFunction(r) && w.isFunction(y) ? Vc.apply(this, arguments) : this.each(function() {
                (A ? r : C(this)) ? w(this).show() : w(this).hide()
            })
        }
    });
    w.extend({
        cssHooks: {
            opacity: {
                get: function(r, y) {
                    if (y)
                        return r = Ya(r, "opacity"),
                        "" === r ? "1" : r
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": w.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(r, y, A, G) {
            if (r && 3 !== r.nodeType && 8 !== r.nodeType && r.style) {
                var N, M = w.camelCase(y), ba = r.style;
                y = w.cssProps[M] || (w.cssProps[M] = E(ba, M));
                var ea = w.cssHooks[y] || w.cssHooks[M];
                if (A !== b) {
                    var oa = typeof A;
                    "string" === oa && (N = Tc.exec(A)) && (A = (N[1] + 1) * N[2] + parseFloat(w.css(r, y)),
                    oa = "number");
                    if (!(null == A || "number" === oa && isNaN(A) || ("number" !== oa || w.cssNumber[M] || (A += "px"),
                    ea && "set"in ea && (A = ea.set(r, A, G)) === b)))
                        try {
                            ba[y] = A
                        } catch (za) {}
                } else
                    return ea && "get"in ea && (N = ea.get(r, !1, G)) !== b ? N : ba[y]
            }
        },
        css: function(r, y, A, G) {
            var N;
            var M = w.camelCase(y);
            y = w.cssProps[M] || (w.cssProps[M] = E(r.style, M));
            (M = w.cssHooks[y] || w.cssHooks[M]) && "get"in M && (N = M.get(r, !0, G));
            N === b && (N = Ya(r, y));
            "normal" === N && y in ic && (N = ic[y]);
            return A || G !== b ? (r = parseFloat(N),
            A || w.isNumeric(r) ? r || 0 : N) : N
        },
        swap: function(r, y, A) {
            var G, N = {};
            for (G in y)
                N[G] = r.style[G],
                r.style[G] = y[G];
            A = A.call(r);
            for (G in y)
                r.style[G] = N[G];
            return A
        }
    });
    e.getComputedStyle ? Ya = function(r, y) {
        var A = e.getComputedStyle(r, null)
          , G = r.style;
        if (A) {
            var N = A.getPropertyValue(y) || A[y];
            "" !== N || w.contains(r.ownerDocument, r) || (N = w.style(r, y));
            if (ub.test(N) && hc.test(y)) {
                r = G.width;
                y = G.minWidth;
                var M = G.maxWidth;
                G.minWidth = G.maxWidth = G.width = N;
                N = A.width;
                G.width = r;
                G.minWidth = y;
                G.maxWidth = M
            }
        }
        return N
    }
    : I.documentElement.currentStyle && (Ya = function(r, y) {
        var A, G = r.currentStyle && r.currentStyle[y], N = r.style;
        null == G && N && N[y] && (G = N[y]);
        if (ub.test(G) && !Rc.test(y)) {
            var M = N.left;
            if (A = r.runtimeStyle && r.runtimeStyle.left)
                r.runtimeStyle.left = r.currentStyle.left;
            N.left = "fontSize" === y ? "1em" : G;
            G = N.pixelLeft + "px";
            N.left = M;
            A && (r.runtimeStyle.left = A)
        }
        return "" === G ? "auto" : G
    }
    );
    w.each(["height", "width"], function(r, y) {
        w.cssHooks[y] = {
            get: function(A, G, N) {
                if (G)
                    return 0 === A.offsetWidth && Sc.test(Ya(A, "display")) ? w.swap(A, Uc, function() {
                        return W(A, y, N)
                    }) : W(A, y, N)
            },
            set: function(A, G, N) {
                return P(A, G, N ? X(A, y, N, w.support.boxSizing && "border-box" === w.css(A, "boxSizing")) : 0)
            }
        }
    });
    w.support.opacity || (w.cssHooks.opacity = {
        get: function(r, y) {
            return Qc.test((y && r.currentStyle ? r.currentStyle.filter : r.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : y ? "1" : ""
        },
        set: function(r, y) {
            var A = r.style;
            r = r.currentStyle;
            var G = w.isNumeric(y) ? "alpha(opacity=" + 100 * y + ")" : ""
              , N = r && r.filter || A.filter || "";
            A.zoom = 1;
            if (1 <= y && "" === w.trim(N.replace(Nb, "")) && A.removeAttribute && (A.removeAttribute("filter"),
            r && !r.filter))
                return;
            A.filter = Nb.test(N) ? N.replace(Nb, G) : N + " " + G
        }
    });
    w(function() {
        w.support.reliableMarginRight || (w.cssHooks.marginRight = {
            get: function(r, y) {
                return w.swap(r, {
                    display: "inline-block"
                }, function() {
                    if (y)
                        return Ya(r, "marginRight")
                })
            }
        });
        !w.support.pixelPosition && w.fn.position && w.each(["top", "left"], function(r, y) {
            w.cssHooks[y] = {
                get: function(A, G) {
                    if (G)
                        return G = Ya(A, y),
                        ub.test(G) ? w(A).position()[y] + "px" : G
                }
            }
        })
    });
    w.expr && w.expr.filters && (w.expr.filters.hidden = function(r) {
        return 0 === r.offsetWidth && 0 === r.offsetHeight || !w.support.reliableHiddenOffsets && "none" === (r.style && r.style.display || Ya(r, "display"))
    }
    ,
    w.expr.filters.visible = function(r) {
        return !w.expr.filters.hidden(r)
    }
    );
    w.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(r, y) {
        w.cssHooks[r + y] = {
            expand: function(A) {
                var G = "string" === typeof A ? A.split(" ") : [A]
                  , N = {};
                for (A = 0; 4 > A; A++)
                    N[r + jb[A] + y] = G[A] || G[A - 2] || G[0];
                return N
            }
        };
        hc.test(r) || (w.cssHooks[r + y].set = P)
    });
    var Wc = /%20/g
      , nc = /\[\]$/
      , jc = /\r?\n/g
      , Xc = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i
      , Yc = /^(?:select|textarea)/i;
    w.fn.extend({
        serialize: function() {
            return w.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? w.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || Yc.test(this.nodeName) || Xc.test(this.type))
            }).map(function(r, y) {
                r = w(this).val();
                return null == r ? null : w.isArray(r) ? w.map(r, function(A, G) {
                    return {
                        name: y.name,
                        value: A.replace(jc, "\r\n")
                    }
                }) : {
                    name: y.name,
                    value: r.replace(jc, "\r\n")
                }
            }).get()
        }
    });
    w.param = function(r, y) {
        var A, G = [], N = function(M, ba) {
            ba = w.isFunction(ba) ? ba() : null == ba ? "" : ba;
            G[G.length] = encodeURIComponent(M) + "=" + encodeURIComponent(ba)
        };
        y === b && (y = w.ajaxSettings && w.ajaxSettings.traditional);
        if (w.isArray(r) || r.jqx && !w.isPlainObject(r))
            w.each(r, function() {
                N(this.name, this.value)
            });
        else
            for (A in r)
                ca(A, r[A], y, N);
        return G.join("&").replace(Wc, "+")
    }
    ;
    w.support.ajax && w.ajaxTransport(function(r) {
        if (!r.crossDomain || w.support.cors) {
            var y;
            return {
                send: function(A, G) {
                    var N, M = r.xhr();
                    r.username ? M.open(r.type, r.url, r.async, r.username, r.password) : M.open(r.type, r.url, r.async);
                    if (r.xhrFields)
                        for (N in r.xhrFields)
                            M[N] = r.xhrFields[N];
                    r.mimeType && M.overrideMimeType && M.overrideMimeType(r.mimeType);
                    r.crossDomain || A["X-Requested-With"] || (A["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (N in A)
                            M.setRequestHeader(N, A[N])
                    } catch (ea) {}
                    M.send(r.hasContent && r.data || null);
                    y = function(ea, oa) {
                        var za;
                        try {
                            if (y && (oa || 4 === M.readyState))
                                if (y = b,
                                ba && (M.onreadystatechange = w.noop,
                                xhrOnUnloadAbort && delete xhrCallbacks[ba]),
                                oa)
                                    4 !== M.readyState && M.abort();
                                else {
                                    var xa = M.status;
                                    var Aa = M.getAllResponseHeaders();
                                    var Ga = {};
                                    (za = M.responseXML) && za.documentElement && (Ga.xml = za);
                                    try {
                                        Ga.text = M.responseText
                                    } catch (Xa) {}
                                    try {
                                        var Ma = M.statusText
                                    } catch (Xa) {
                                        Ma = ""
                                    }
                                    xa || !r.isLocal || r.crossDomain ? 1223 === xa && (xa = 204) : xa = Ga.text ? 200 : 404
                                }
                        } catch (Xa) {
                            oa || G(-1, Xa)
                        }
                        Ga && G(xa, Ma, Ga, Aa)
                    }
                    ;
                    if (r.async)
                        if (4 === M.readyState)
                            setTimeout(y, 0);
                        else {
                            var ba = ++xhrId;
                            xhrOnUnloadAbort && (xhrCallbacks || (xhrCallbacks = {},
                            w(e).unload(xhrOnUnloadAbort)),
                            xhrCallbacks[ba] = y);
                            M.onreadystatechange = y
                        }
                    else
                        y()
                },
                abort: function() {
                    y && y(0, 1)
                }
            }
        }
    });
    var ob, Bb, Zc = /^(?:toggle|show|hide)$/, $c = new RegExp("^(?:([-+])=|)(" + pa + ")([a-z%]*)$","i"), ad = /queueHooks$/, vb = [function(r, y, A) {
        var G, N = this, M = r.style, ba = {}, ea = [], oa = r.nodeType && C(r);
        if (!A.queue) {
            var za = w._queueHooks(r, "fx");
            if (null == za.unqueued) {
                za.unqueued = 0;
                var xa = za.empty.fire;
                za.empty.fire = function() {
                    za.unqueued || xa()
                }
            }
            za.unqueued++;
            N.always(function() {
                N.always(function() {
                    za.unqueued--;
                    w.queue(r, "fx").length || za.empty.fire()
                })
            })
        }
        1 === r.nodeType && ("height"in y || "width"in y) && (A.overflow = [M.overflow, M.overflowX, M.overflowY],
        "inline" === w.css(r, "display") && "none" === w.css(r, "float") && (w.support.inlineBlockNeedsLayout && "inline" !== V(r.nodeName) ? M.zoom = 1 : M.display = "inline-block"));
        A.overflow && (M.overflow = "hidden",
        w.support.shrinkWrapBlocks || N.done(function() {
            M.overflow = A.overflow[0];
            M.overflowX = A.overflow[1];
            M.overflowY = A.overflow[2]
        }));
        for (G in y) {
            var Aa = y[G];
            if (Zc.exec(Aa)) {
                delete y[G];
                var Ga = Ga || "toggle" === Aa;
                Aa !== (oa ? "hide" : "show") && ea.push(G)
            }
        }
        if (y = ea.length)
            for (Aa = w._data(r, "fxshow") || w._data(r, "fxshow", {}),
            ("hidden"in Aa) && (oa = Aa.hidden),
            Ga && (Aa.hidden = !oa),
            oa ? w(r).show() : N.done(function() {
                w(r).hide()
            }),
            N.done(function() {
                var Xa;
                w.removeData(r, "fxshow", !0);
                for (Xa in ba)
                    w.style(r, Xa, ba[Xa])
            }),
            G = 0; G < y; G++) {
                Ga = ea[G];
                var Ma = N.createTween(Ga, oa ? Aa[Ga] : 0);
                ba[Ga] = Aa[Ga] || w.style(r, Ga);
                Ga in Aa || (Aa[Ga] = Ma.start,
                oa && (Ma.end = Ma.start,
                Ma.start = "width" === Ga || "height" === Ga ? 1 : 0))
            }
    }
    ], sb = {
        "*": [function(r, y) {
            var A = this.createTween(r, y)
              , G = $c.exec(y)
              , N = A.cur()
              , M = +N || 0
              , ba = 1
              , ea = 20;
            if (G) {
                y = +G[2];
                var oa = G[3] || (w.cssNumber[r] ? "" : "px");
                if ("px" !== oa && M) {
                    M = w.css(A.elem, r, !0) || y || 1;
                    do
                        ba = ba || ".5",
                        M /= ba,
                        w.style(A.elem, r, M + oa);
                    while (ba !== (ba = A.cur() / N) && 1 !== ba && --ea)
                }
                A.unit = oa;
                A.start = M;
                A.end = G[1] ? M + (G[1] + 1) * y : y
            }
            return A
        }
        ]
    };
    w.Animation = w.extend(B, {
        tweener: function(r, y) {
            w.isFunction(r) ? (y = r,
            r = ["*"]) : r = r.split(" ");
            for (var A, G = 0, N = r.length; G < N; G++)
                A = r[G],
                sb[A] = sb[A] || [],
                sb[A].unshift(y)
        },
        prefilter: function(r, y) {
            y ? vb.unshift(r) : vb.push(r)
        }
    });
    w.Tween = J;
    J.prototype = {
        constructor: J,
        init: function(r, y, A, G, N, M) {
            this.elem = r;
            this.prop = A;
            this.easing = N || "swing";
            this.options = y;
            this.start = this.now = this.cur();
            this.end = G;
            this.unit = M || (w.cssNumber[A] ? "" : "px")
        },
        cur: function() {
            var r = J.propHooks[this.prop];
            return r && r.get ? r.get(this) : J.propHooks._default.get(this)
        },
        run: function(r) {
            var y, A = J.propHooks[this.prop];
            this.pos = this.options.duration ? y = w.easing[this.easing](r, this.options.duration * r, 0, 1, this.options.duration) : y = r;
            this.now = (this.end - this.start) * y + this.start;
            this.options.step && this.options.step.call(this.elem, this.now, this);
            A && A.set ? A.set(this) : J.propHooks._default.set(this);
            return this
        }
    };
    J.prototype.init.prototype = J.prototype;
    J.propHooks = {
        _default: {
            get: function(r) {
                return null == r.elem[r.prop] || r.elem.style && null != r.elem.style[r.prop] ? (r = w.css(r.elem, r.prop, !1, "")) && "auto" !== r ? r : 0 : r.elem[r.prop]
            },
            set: function(r) {
                if (w.fx.step[r.prop])
                    w.fx.step[r.prop](r);
                else
                    r.elem.style && (null != r.elem.style[w.cssProps[r.prop]] || w.cssHooks[r.prop]) ? w.style(r.elem, r.prop, r.now + r.unit) : r.elem[r.prop] = r.now
            }
        }
    };
    J.propHooks.scrollTop = J.propHooks.scrollLeft = {
        set: function(r) {
            r.elem.nodeType && r.elem.parentNode && (r.elem[r.prop] = r.now)
        }
    };
    w.each(["toggle", "show", "hide"], function(r, y) {
        var A = w.fn[y];
        w.fn[y] = function(G, N, M) {
            return null == G || "boolean" === typeof G || !r && w.isFunction(G) && w.isFunction(N) ? A.apply(this, arguments) : this.animate(K(y, !0), G, N, M)
        }
    });
    w.fn.extend({
        fadeTo: function(r, y, A, G) {
            return this.filter(C).css("opacity", 0).show().end().animate({
                opacity: y
            }, r, A, G)
        },
        animate: function(r, y, A, G) {
            var N = w.isEmptyObject(r)
              , M = w.speed(y, A, G);
            y = function() {
                var ba = B(this, w.extend({}, r), M);
                N && ba.stop(!0)
            }
            ;
            return N || !1 === M.queue ? this.each(y) : this.queue(M.queue, y)
        },
        stop: function(r, y, A) {
            var G = function(N) {
                var M = N.stop;
                delete N.stop;
                M(A)
            };
            "string" !== typeof r && (A = y,
            y = r,
            r = b);
            y && !1 !== r && this.queue(r || "fx", []);
            return this.each(function() {
                var N = !0
                  , M = null != r && r + "queueHooks"
                  , ba = w.timers
                  , ea = w._data(this);
                if (M)
                    ea[M] && ea[M].stop && G(ea[M]);
                else
                    for (M in ea)
                        ea[M] && ea[M].stop && ad.test(M) && G(ea[M]);
                for (M = ba.length; M--; )
                    ba[M].elem !== this || null != r && ba[M].queue !== r || (ba[M].anim.stop(A),
                    N = !1,
                    ba.splice(M, 1));
                !N && A || w.dequeue(this, r)
            })
        }
    });
    w.each({
        slideDown: K("show"),
        slideUp: K("hide"),
        slideToggle: K("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(r, y) {
        w.fn[r] = function(A, G, N) {
            return this.animate(y, A, G, N)
        }
    });
    w.speed = function(r, y, A) {
        var G = r && "object" === typeof r ? w.extend({}, r) : {
            complete: A || !A && y || w.isFunction(r) && r,
            duration: r,
            easing: A && y || y && !w.isFunction(y) && y
        };
        G.duration = w.fx.off ? 0 : "number" === typeof G.duration ? G.duration : G.duration in w.fx.speeds ? w.fx.speeds[G.duration] : w.fx.speeds._default;
        if (null == G.queue || !0 === G.queue)
            G.queue = "fx";
        G.old = G.complete;
        G.complete = function() {
            w.isFunction(G.old) && G.old.call(this);
            G.queue && w.dequeue(this, G.queue)
        }
        ;
        return G
    }
    ;
    w.easing = {
        linear: function(r) {
            return r
        },
        swing: function(r) {
            return .5 - Math.cos(r * Math.PI) / 2
        }
    };
    w.timers = [];
    w.fx = J.prototype.init;
    w.fx.tick = function() {
        var r = w.timers
          , y = 0;
        for (ob = w.now(); y < r.length; y++) {
            var A = r[y];
            A() || r[y] !== A || r.splice(y--, 1)
        }
        r.length || w.fx.stop();
        ob = b
    }
    ;
    w.fx.timer = function(r) {
        r() && w.timers.push(r) && !Bb && (Bb = setInterval(w.fx.tick, w.fx.interval))
    }
    ;
    w.fx.interval = 13;
    w.fx.stop = function() {
        clearInterval(Bb);
        Bb = null
    }
    ;
    w.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    w.fx.step = {};
    w.expr && w.expr.filters && (w.expr.filters.animated = function(r) {
        return w.grep(w.timers, function(y) {
            return r === y.elem
        }).length
    }
    );
    var kc = /^(?:body|html)$/i;
    w.fn.offset = function(r) {
        if (arguments.length)
            return r === b ? this : this.each(function(ea) {
                w.offset.setOffset(this, r, ea)
            });
        var y, A, G, N = {
            top: 0,
            left: 0
        };
        if (G = (A = this[0]) && A.ownerDocument) {
            if ((y = G.body) === A)
                return w.offset.bodyOffset(A);
            var M = G.documentElement;
            if (!w.contains(M, A))
                return N;
            "undefined" !== typeof A.getBoundingClientRect && (N = A.getBoundingClientRect());
            A = Q(G);
            G = M.clientTop || y.clientTop || 0;
            y = M.clientLeft || y.clientLeft || 0;
            var ba = A.pageYOffset || M.scrollTop;
            return {
                top: N.top + ba - G,
                left: N.left + (A.pageXOffset || M.scrollLeft) - y
            }
        }
    }
    ;
    w.offset = {
        bodyOffset: function(r) {
            var y = r.offsetTop
              , A = r.offsetLeft;
            w.support.doesNotIncludeMarginInBodyOffset && (y += parseFloat(w.css(r, "marginTop")) || 0,
            A += parseFloat(w.css(r, "marginLeft")) || 0);
            return {
                top: y,
                left: A
            }
        },
        setOffset: function(r, y, A) {
            var G = w.css(r, "position");
            "static" === G && (r.style.position = "relative");
            var N = w(r)
              , M = N.offset()
              , ba = w.css(r, "top")
              , ea = w.css(r, "left")
              , oa = {};
            ("absolute" === G || "fixed" === G) && -1 < w.inArray("auto", [ba, ea]) ? (ea = N.position(),
            G = ea.top,
            ea = ea.left) : (G = parseFloat(ba) || 0,
            ea = parseFloat(ea) || 0);
            w.isFunction(y) && (y = y.call(r, A, M));
            null != y.top && (oa.top = y.top - M.top + G);
            null != y.left && (oa.left = y.left - M.left + ea);
            "using"in y ? y.using.call(r, oa) : N.css(oa)
        }
    };
    w.fn.extend({
        isRendered: function() {
            var r = this[0];
            return null == r.parentNode || 0 === r.offsetWidth || 0 === r.offsetHeight ? !1 : !0
        },
        getSizeFromStyle: function() {
            var r = null
              , y = null
              , A = this[0];
            A.style.width && (r = A.style.width);
            A.style.height && (y = A.style.height);
            if (A = e.getComputedStyle ? getComputedStyle(A, null) : A.currentStyle)
                A.width && (r = A.width),
                A.height && (y = A.height);
            "0px" === r && (r = 0);
            "0px" === y && (y = 0);
            null === r && (r = 0);
            null === y && (y = 0);
            return {
                width: r,
                height: y
            }
        },
        initAnimate: function() {},
        sizeStyleChanged: function(r) {
            var y = this
              , A = function(N) {
                var M = G;
                N && N[0] && "style" === N[0].attributeName && "attributes" === N[0].type && (M.element.offsetWidth !== M.offsetWidth || M.element.offsetHeight !== M.offsetHeight) && (M.offsetWidth = M.element.offsetWidth,
                M.offsetHeight = M.element.offsetHeight,
                y.isRendered() && M.callback())
            };
            var G = {
                element: y[0],
                offsetWidth: y[0].offsetWidth,
                offsetHeight: y[0].offsetHeight,
                callback: r
            };
            try {
                y.elementStyleObserver || (y.elementStyleObserver = new MutationObserver(A),
                y.elementStyleObserver.observe(y[0], {
                    attributes: !0,
                    childList: !1,
                    characterData: !1
                }))
            } catch (N) {}
        },
        position: function() {
            if (this[0]) {
                var r = this[0]
                  , y = this.offsetParent()
                  , A = this.offset()
                  , G = kc.test(y[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : y.offset();
                A.top -= parseFloat(w.css(r, "marginTop")) || 0;
                A.left -= parseFloat(w.css(r, "marginLeft")) || 0;
                G.top += parseFloat(w.css(y[0], "borderTopWidth")) || 0;
                G.left += parseFloat(w.css(y[0], "borderLeftWidth")) || 0;
                return {
                    top: A.top - G.top,
                    left: A.left - G.left
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var r = this.offsetParent || I.body; r && !kc.test(r.nodeName) && "static" === w.css(r, "position"); )
                    r = r.offsetParent;
                return r || I.body
            })
        }
    });
    w.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(r, y) {
        var A = /Y/.test(y);
        w.fn[r] = function(G) {
            return w.access(this, function(N, M, ba) {
                var ea = Q(N);
                if (ba === b)
                    return ea ? y in ea ? ea[y] : ea.document.documentElement[M] : N[M];
                ea ? ea.scrollTo(A ? w(ea).scrollLeft() : ba, A ? ba : w(ea).scrollTop()) : N[M] = ba
            }, r, G, arguments.length, null)
        }
    });
    w.each({
        Height: "height",
        Width: "width"
    }, function(r, y) {
        w.each({
            padding: "inner" + r,
            content: y,
            "": "outer" + r
        }, function(A, G) {
            w.fn[G] = function(N, M) {
                var ba = arguments.length && (A || "boolean" !== typeof N)
                  , ea = A || (!0 === N || !0 === M ? "margin" : "border");
                return w.access(this, function(oa, za, xa) {
                    return w.isWindow(oa) ? oa.document.documentElement["client" + r] : 9 === oa.nodeType ? (za = oa.documentElement,
                    Math.max(oa.body["scroll" + r], za["scroll" + r], oa.body["offset" + r], za["offset" + r], za["client" + r])) : xa === b ? w.css(oa, za, xa, ea) : w.style(oa, za, xa, ea)
                }, y, ba ? N : b, ba, null)
            }
        })
    });
    e.JQXLite = e.jqxHelper = w;
    "function" === typeof define && define.amd && define.amd.JQXLite && define("jqx", [], function() {
        return w
    })
}(window);
(function(e) {
    e.jqxCore ? (e.$$ = e.minQuery = e.JQXLite,
    e.$ || (e.$ = e.minQuery)) : e.jQuery ? e.minQuery = e.JQXLite = e.jQuery : e.$ ? e.minQuery = e.JQXLite = e.$ : e.$ = e.minQuery = e.JQXLite
}
)(window);
JQXLite.generateID = function() {
    var e = function() {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
    }
      , b = "";
    do
        b = "jqx" + e() + e() + e();
    while (0 < $("#" + b).length);
    return b
}
;
var jqxBaseFramework = window.jqxBaseFramework = window.minQuery || window.jQuery;
(function(e) {
    e.jqx = e.jqx || {};
    window.jqx = e.jqx;
    var b = {
        createInstance: function(d, c, f) {
            if ("jqxDataAdapter" == c)
                return new e.jqx.dataAdapter(f[0],f[1] || {});
            e(d)[c](f || {});
            return e(d)[c]("getInstance")
        }
    };
    window.jqwidgets = b;
    e.jqx.define = function(d, c, f) {
        d[c] = function() {
            this.baseType && (this.base = new d[this.baseType],
            this.base.defineInstance());
            this.defineInstance();
            this.metaInfo()
        }
        ;
        d[c].prototype.defineInstance = function() {}
        ;
        d[c].prototype.metaInfo = function() {}
        ;
        d[c].prototype.base = null;
        d[c].prototype.baseType = void 0;
        f && d[f] && (d[c].prototype.baseType = f)
    }
    ;
    e.jqx.invoke = function(d, c) {
        if (0 != c.length) {
            var f = typeof c == Array || 0 < c.length ? c[0] : c;
            for (c = typeof c == Array || 1 < c.length ? Array.prototype.slice.call(c, 1) : e({}).toArray(); void 0 == d[f] && null != d.base; ) {
                if (void 0 != d[f] && e.isFunction(d[f]))
                    return d[f].apply(d, c);
                if ("string" == typeof f) {
                    var g = f.toLowerCase();
                    if (void 0 != d[g] && e.isFunction(d[g]))
                        return d[g].apply(d, c)
                }
                d = d.base
            }
            if (void 0 != d[f] && e.isFunction(d[f]))
                return d[f].apply(d, c);
            if ("string" == typeof f && (g = f.toLowerCase(),
            void 0 != d[g] && e.isFunction(d[g])))
                return d[g].apply(d, c)
        }
    }
    ;
    e.jqx.getByPriority = function(d) {
        for (var c = void 0, f = 0; f < d.length && void 0 == c; f++)
            void 0 == c && void 0 != d[f] && (c = d[f]);
        return c
    }
    ;
    e.jqx.hasProperty = function(d, c) {
        if ("object" == typeof c)
            for (var f in c) {
                for (; d; ) {
                    if (d.hasOwnProperty(f) || d.hasOwnProperty(f.toLowerCase()))
                        return !0;
                    d = d.base
                }
                break
            }
        else
            for (; d; ) {
                if (d.hasOwnProperty(c) || d.hasOwnProperty(c.toLowerCase()))
                    return !0;
                d = d.base
            }
        return !1
    }
    ;
    e.jqx.hasFunction = function(d, c) {
        if (0 == c.length || void 0 == d)
            return !1;
        var f = typeof c == Array || 0 < c.length ? c[0] : c;
        for ((typeof c == Array || 1 < c.length) && Array.prototype.slice.call(c, 1); void 0 == d[f] && null != d.base; ) {
            if (d[f] && e.isFunction(d[f]) || "string" == typeof f && (c = f.toLowerCase(),
            d[c] && e.isFunction(d[c])))
                return !0;
            d = d.base
        }
        return d[f] && e.isFunction(d[f]) || "string" == typeof f && (c = f.toLowerCase(),
        d[c] && e.isFunction(d[c])) ? !0 : !1
    }
    ;
    e.jqx.isPropertySetter = function(d, c) {
        return 1 == c.length && "object" == typeof c[0] || 2 == c.length && "string" == typeof c[0] && !e.jqx.hasFunction(d, c) ? !0 : !1
    }
    ;
    e.jqx.validatePropertySetter = function(d, c, f) {
        if (!e.jqx.propertySetterValidation)
            return !0;
        if (1 == c.length && "object" == typeof c[0]) {
            for (var g in c[0]) {
                for (c = d; !c.hasOwnProperty(g) && c.base; )
                    c = c.base;
                if (!c || !c.hasOwnProperty(g)) {
                    if (!f)
                        if (c.hasOwnProperty(g.toString().toLowerCase()))
                            break;
                        else
                            throw "Invalid property: " + g;
                    return !1
                }
            }
            return !0
        }
        if (2 != c.length) {
            if (!f)
                throw 0 <= "Invalid property: " + c.length ? c[0] : "";
            return !1
        }
        for (; !d.hasOwnProperty(c[0]) && d.base; )
            d = d.base;
        if (!d || !d.hasOwnProperty(c[0])) {
            if (!f)
                throw "Invalid property: " + c[0];
            return !1
        }
        return !0
    }
    ;
    Object.keys || (Object.keys = function() {
        var d = Object.prototype.hasOwnProperty
          , c = !{
            toString: null
        }.propertyIsEnumerable("toString")
          , f = "toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" ")
          , g = f.length;
        return function(h) {
            if ("object" !== typeof h && ("function" !== typeof h || null === h))
                throw new TypeError("Object.keys called on non-object");
            var k = [], l;
            for (l in h)
                d.call(h, l) && k.push(l);
            if (c)
                for (l = 0; l < g; l++)
                    d.call(h, f[l]) && k.push(f[l]);
            return k
        }
    }());
    e.jqx.set = function(d, c) {
        var f = 0;
        if (1 == c.length && "object" == typeof c[0]) {
            if (d.isInitialized && Object.keys && 1 < Object.keys(c[0]).length) {
                var g = e.data(d.base ? d.base.element : d.element, d.widgetName).initArgs;
                if (g && JSON && JSON.stringify && c[0] && g[0])
                    try {
                        if (JSON.stringify(c[0]) == JSON.stringify(g[0])) {
                            var h = !0;
                            e.each(c[0], function(m, n) {
                                if (d[m] != n)
                                    return h = !1
                            });
                            if (h)
                                return
                        }
                    } catch (m) {}
                d.batchUpdate = c[0];
                var k = {}
                  , l = {};
                e.each(c[0], function(m, n) {
                    for (var p = d; !p.hasOwnProperty(m) && null != p.base; )
                        p = p.base;
                    p.hasOwnProperty(m) ? d[m] != n && (k[m] = d[m],
                    l[m] = n,
                    f++) : p.hasOwnProperty(m.toLowerCase()) && d[m.toLowerCase()] != n && (k[m.toLowerCase()] = d[m.toLowerCase()],
                    l[m.toLowerCase()] = n,
                    f++)
                });
                2 > f && (d.batchUpdate = null)
            }
            e.each(c[0], function(m, n) {
                for (var p = d; !p.hasOwnProperty(m) && null != p.base; )
                    p = p.base;
                if (p.hasOwnProperty(m))
                    e.jqx.setvalueraiseevent(p, m, n);
                else if (p.hasOwnProperty(m.toLowerCase()))
                    e.jqx.setvalueraiseevent(p, m.toLowerCase(), n);
                else if (e.jqx.propertySetterValidation)
                    throw "jqxCore: invalid property '" + m + "'";
            });
            null != d.batchUpdate && (d.batchUpdate = null,
            d.propertiesChangedHandler && 1 < f && d.propertiesChangedHandler(d, k, l))
        } else if (2 == c.length) {
            for (; !d.hasOwnProperty(c[0]) && d.base; )
                d = d.base;
            if (d.hasOwnProperty(c[0]))
                e.jqx.setvalueraiseevent(d, c[0], c[1]);
            else if (d.hasOwnProperty(c[0].toLowerCase()))
                e.jqx.setvalueraiseevent(d, c[0].toLowerCase(), c[1]);
            else if (e.jqx.propertySetterValidation)
                throw "jqxCore: invalid property '" + c[0] + "'";
        }
    }
    ;
    e.jqx.setvalueraiseevent = function(d, c, f) {
        var g = d[c];
        d[c] = f;
        if (d.isInitialized && (void 0 != d.propertyChangedHandler && d.propertyChangedHandler(d, c, g, f),
        void 0 != d.propertyChangeMap && void 0 != d.propertyChangeMap[c]))
            d.propertyChangeMap[c](d, c, g, f)
    }
    ;
    e.jqx.get = function(d, c) {
        if (void 0 != c && null != c) {
            if (d.propertyMap) {
                var f = d.propertyMap(c);
                if (null != f)
                    return f
            }
            if (d.hasOwnProperty(c))
                return d[c];
            if (d.hasOwnProperty(c.toLowerCase()))
                return d[c.toLowerCase()];
            f = void 0;
            if (typeof c == Array) {
                if (1 != c.length)
                    return;
                f = c[0]
            } else
                "string" == typeof c && (f = c);
            for (; !d.hasOwnProperty(f) && d.base; )
                d = d.base;
            if (d)
                return d[f]
        }
    }
    ;
    e.jqx.serialize = function(d) {
        if (e.isArray(d)) {
            var c = "[";
            for (var f = 0; f < d.length; f++)
                0 < f && (c += ", "),
                c += e.jqx.serialize(d[f]);
            c += "]"
        } else if ("object" == typeof d) {
            c = "{";
            var g = 0;
            for (f in d)
                0 < g++ && (c += ", "),
                c += f + ": " + e.jqx.serialize(d[f]);
            c += "}"
        } else
            c = d.toString();
        return c
    }
    ;
    e.jqx.propertySetterValidation = !0;
    e.jqx.jqxWidgetProxy = function(d, c, f) {
        e(c);
        d = e.data(c, d);
        if (void 0 != d) {
            d = d.instance;
            if (e.jqx.hasFunction(d, f))
                return e.jqx.invoke(d, f);
            if (e.jqx.isPropertySetter(d, f)) {
                if (e.jqx.validatePropertySetter(d, f)) {
                    e.jqx.set(d, f);
                    return
                }
            } else {
                if ("object" == typeof f && 0 == f.length)
                    return;
                if ("object" == typeof f && 1 == f.length && e.jqx.hasProperty(d, f[0]))
                    return e.jqx.get(d, f[0]);
                if ("string" == typeof f && e.jqx.hasProperty(d, f[0]))
                    return e.jqx.get(d, f)
            }
            throw "jqxCore: Invalid parameter '" + e.jqx.serialize(f) + "' does not exist.";
        }
    }
    ;
    e.jqx.applyWidget = function(d, c, f, g) {
        var h = !1;
        try {
            h = void 0 != window.MSApp
        } catch (p) {}
        var k = e(d);
        g ? (g.host = k,
        g.element = d) : g = new e.jqx["_" + c];
        "" == d.id && (d.id = e.jqx.utilities.createId());
        var l = {
            host: k,
            element: d,
            instance: g,
            initArgs: f
        };
        g.widgetName = c;
        e.data(d, c, l);
        e.data(d, "jqxWidget", l.instance);
        var m = [];
        for (g = l.instance; g; )
            g.isInitialized = !1,
            m.push(g),
            g = g.base;
        m.reverse();
        m[0].theme = e.jqx.theme || "";
        e.jqx.jqxWidgetProxy(c, d, f);
        for (var n in m)
            g = m[n],
            0 == n && (g.host = k,
            g.element = d,
            g.WinJS = h),
            void 0 != g && (g.definedInstance && g.definedInstance(),
            null != g.createInstance && (h ? MSApp.execUnsafeLocalFunction(function() {
                g.createInstance(f)
            }) : g.createInstance(f)));
        for (n in m)
            void 0 != m[n] && (m[n].isInitialized = !0);
        h ? MSApp.execUnsafeLocalFunction(function() {
            l.instance.refresh(!0)
        }) : l.instance.refresh(!0)
    }
    ;
    e.jqx.jqxWidget = function(d, c, f) {
        try {
            Array.prototype.slice.call(f, 0)
        } catch (l) {}
        var g = "";
        c && (g = "_" + c);
        e.jqx.define(e.jqx, "_" + d, g);
        var h = [];
        if (!window[d]) {
            var k = function(l) {
                if (null == l)
                    return "";
                switch (e.type(l)) {
                case "string":
                case "number":
                case "date":
                case "boolean":
                case "bool":
                    return null === l ? "" : l.toString()
                }
                var m = "";
                e.each(l, function(n, p) {
                    0 < n && (m += ", ");
                    m += "[";
                    var q = 0;
                    if ("object" == e.type(p))
                        for (var t in p)
                            0 < q && (m += ", "),
                            m += "{" + t + ":" + p[t] + "}",
                            q++;
                    else
                        0 < q && (m += ", "),
                        m += "{" + n + ":" + p + "}";
                    m += "]"
                });
                return m
            };
            b[d] = window[d] = function(l, m) {
                var n = [];
                m || (m = {});
                n.push(m);
                var p = l;
                "object" === e.type(p) && l[0] ? (p = l[0].id,
                "" === p && (p = l[0].id = e.jqx.utilities.createId())) : "object" === e.type(l) && l && l.nodeName && (p = l.id,
                "" === p && (p = l.id = e.jqx.utilities.createId()));
                if (window.jqxWidgets && window.jqxWidgets[p]) {
                    m && e.each(window.jqxWidgets[p], function(z) {
                        if ((z = e(this.element).data()) && z.jqxWidget)
                            e(this.element)[d](m)
                    });
                    if (1 == window.jqxWidgets[p].length) {
                        var q = e(window.jqxWidgets[p][0].widgetInstance.element).data();
                        if (q && q.jqxWidget)
                            return window.jqxWidgets[p][0]
                    }
                    if ((q = e(window.jqxWidgets[p][0].widgetInstance.element).data()) && q.jqxWidget)
                        return window.jqxWidgets[p]
                }
                var t = e(l);
                if (0 === t.length) {
                    t = e("<div></div>");
                    if ("jqxInput" === d || "jqxPasswordInput" === d || "jqxMaskedInput" === d)
                        t = e("<input/>");
                    "jqxTextArea" === d && (t = e("<textarea></textarea>"));
                    if ("jqxButton" === d || "jqxRepeatButton" === d || "jqxToggleButton" === d)
                        t = e("<button/>");
                    "jqxSplitter" === d && (t = e("<div><div>Panel 1</div><div>Panel 2</div></div>"));
                    "jqxTabs" === d && (t = e("<div><ul><li>Tab 1</li><li>Tab 2</li></ul><div>Content 1</div><div>Content 2</div></div>"));
                    "jqxRibbon" === d && (t = e("<div><ul><li>Tab 1</li><li>Tab 2</li></ul><div><div>Content 1</div><div>Content 2</div></div></div>"));
                    "jqxDocking" === d && (t = e("<div><div><div><div>Title 1</div><div>Content 1</div></div></div></div>"));
                    "jqxWindow" === d && (t = e("<div><div>Title 1</div><div>Content 1</div></div>"))
                }
                var v = [];
                e.each(t, function(z) {
                    z = t[z];
                    e.jqx.applyWidget(z, d, n, void 0);
                    if (!h[d]) {
                        var E = e.data(z, "jqxWidget");
                        E = e.jqx["_" + d].prototype.defineInstance();
                        e.jqx["_" + d].prototype.metaInfo && e.jqx["_" + d].prototype.metaInfo();
                        "jqxDockingLayout" == d && (E = e.extend(E, e.jqx._jqxLayout.prototype.defineInstance()));
                        if ("jqxToggleButton" == d || "jqxRepeatButton" == d)
                            E = e.extend(E, e.jqx._jqxButton.prototype.defineInstance());
                        "jqxTreeGrid" == d && (E = e.extend(E, e.jqx._jqxDataTable.prototype.defineInstance()));
                        var C = function(F) {
                            this.widgetInstance = F = e.data(F, "jqxWidget");
                            var P = e.extend(this, F);
                            P.on = P.addEventListener = function(W, V) {
                                P.addHandler(P.base ? P.base.host : P.host, W, V)
                            }
                            ;
                            P.off = P.removeEventListener = function(W) {
                                P.removeHandler(P.base ? P.base.host : P.host, W)
                            }
                            ;
                            for (var X in F)
                                "function" == e.type(F[X]) && (P[X] = e.proxy(F[X], F));
                            return P
                        };
                        h[d] = C;
                        e.each(E, function(F, P) {
                            Object.defineProperty(C.prototype, F, {
                                get: function() {
                                    return this.widgetInstance ? this.widgetInstance[F] : P
                                },
                                set: function(X) {
                                    if (this.widgetInstance && (this.widgetInstance[F] != X || "width" === F || "height" === F)) {
                                        var W = this.widgetInstance[F]
                                          , V = e.type(W)
                                          , ca = e.type(X)
                                          , u = !1;
                                        if (V != ca || "source" === F || "width" === F || "height" === F)
                                            u = !0;
                                        if (u || k(W) != k(X)) {
                                            V = {};
                                            V[F] = X;
                                            if (this.widgetInstance.host)
                                                this.widgetInstance.host[d](V);
                                            else
                                                this.widgetInstance.base.host[d](V);
                                            this.widgetInstance[F] = X;
                                            this.widgetInstance.propertyUpdated && this.widgetInstance.propertyUpdated(F, W, X)
                                        }
                                    }
                                }
                            })
                        })
                    }
                    E = new h[d](z);
                    v.push(E);
                    window.jqxWidgets || (window.jqxWidgets = []);
                    window.jqxWidgets[p] || (window.jqxWidgets[p] = []);
                    window.jqxWidgets[p].push(E)
                });
                return 1 === v.length ? v[0] : v
            }
        }
        e.fn[d] = function() {
            var l = Array.prototype.slice.call(arguments, 0);
            if (0 == l.length || 1 == l.length && "object" == typeof l[0]) {
                if (0 == this.length) {
                    if (this.selector)
                        throw Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.");
                    throw Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.");
                }
                return this.each(function() {
                    e(this);
                    null == e.data(this, d) ? e.jqx.applyWidget(this, d, l, void 0) : e.jqx.jqxWidgetProxy(d, this, l)
                })
            }
            if (0 == this.length) {
                if (this.selector)
                    throw Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.");
                throw Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.");
            }
            var m = null
              , n = 0;
            this.each(function() {
                var p = e.jqx.jqxWidgetProxy(d, this, l);
                if (0 == n)
                    m = p,
                    n++;
                else {
                    if (1 == n) {
                        var q = [];
                        q.push(m);
                        m = q
                    }
                    m.push(p)
                }
            });
            return m
        }
        ;
        try {
            e.extend(e.jqx["_" + d].prototype, Array.prototype.slice.call(f, 0)[0])
        } catch (l) {}
        e.extend(e.jqx["_" + d].prototype, {
            toThemeProperty: function(l, m) {
                return e.jqx.toThemeProperty(this, l, m)
            },
            isMaterialized: function() {
                if (!this.theme)
                    return !1;
                if ("light" === this.theme || "dark" === this.theme || "deepblue" === this.theme || 0 <= this.theme.indexOf("material"))
                    return !0
            },
            isModern: function() {
                if (!this.theme)
                    return !1;
                if (0 <= this.theme.indexOf("light") || "dark" === this.theme)
                    return !0
            },
            _addBarAndLabel: function(l) {
                var m = e("<label></label");
                m[0].innerHTML = this.placeHolder;
                m.addClass(this.toThemeProperty("jqx-input-label"));
                l.after(m);
                this.label = m;
                m = e("<span></span>");
                l.after(m);
                m.addClass(this.toThemeProperty("jqx-input-bar"));
                this.bar = m;
                this.bar.css("top", this.host.height())
            }
        });
        e.jqx["_" + d].prototype.refresh = function() {
            this.base && this.base.refresh(!0)
        }
        ;
        e.jqx["_" + d].prototype.createInstance = function() {}
        ;
        e.jqx["_" + d].prototype.addEventHandler = function(l, m) {
            if (this.base)
                this.base.host.on(l, m);
            else
                this.host.on(l, m)
        }
        ;
        e.jqx["_" + d].prototype.removeEventHandler = function(l, m) {
            this.base ? this.base.host.off(l) : this.host.off(l)
        }
        ;
        e.jqx["_" + d].prototype.applyTo = function(l, m) {
            if (!(m instanceof Array)) {
                var n = [];
                n.push(m);
                m = n
            }
            e.jqx.applyWidget(l, d, m, this)
        }
        ;
        e.jqx["_" + d].prototype.getInstance = function() {
            return this
        }
        ;
        e.jqx["_" + d].prototype.propertyChangeMap = {};
        e.jqx["_" + d].prototype.addHandler = function(l, m, n, p) {
            e.jqx.addHandler(e(l), m, n, p)
        }
        ;
        e.jqx["_" + d].prototype.removeHandler = function(l, m, n) {
            e.jqx.removeHandler(e(l), m, n)
        }
        ;
        e.jqx["_" + d].prototype.setOptions = function() {
            if (this.host && this.host.length && 1 == this.host.length)
                return e.jqx.jqxWidgetProxy(d, this.host[0], arguments)
        }
    }
    ;
    e.jqx.toThemeProperty = function(d, c, f) {
        if ("" == d.theme)
            return c;
        c = c.split(" ");
        for (var g = "", h = 0; h < c.length; h++) {
            0 < h && (g += " ");
            var k = c[h];
            g = null != f && f ? g + (k + "-" + d.theme) : g + (k + " " + k + "-" + d.theme)
        }
        return g
    }
    ;
    e.jqx.addHandler = function(d, c, f, g) {
        c = c.split(" ");
        for (var h = 0; h < c.length; h++) {
            var k = c[h];
            if (window.addEventListener)
                switch (k) {
                case "mousewheel":
                    e.jqx.browser.mozilla ? d[0].addEventListener("DOMMouseScroll", f, !1) : d[0].addEventListener("mousewheel", f, !1);
                    continue;
                case "mousemove":
                    if (!g) {
                        d[0].addEventListener("mousemove", f, !1);
                        continue
                    }
                    break;
                case "touchmove":
                    if (!g) {
                        d[0].addEventListener("touchmove", f, !1);
                        continue
                    } else if (g && g.passive) {
                        d[0].addEventListener("touchmove", f, g);
                        continue
                    }
                }
            if (void 0 == g || null == g)
                if (d.on)
                    d.on(k, f);
                else
                    d.bind(k, f);
            else if (d.on)
                d.on(k, g, f);
            else
                d.bind(k, g, f)
        }
    }
    ;
    e.jqx.removeHandler = function(d, c, f) {
        if (c) {
            c = c.split(" ");
            for (var g = 0; g < c.length; g++) {
                var h = c[g];
                if (window.removeEventListener)
                    switch (h) {
                    case "mousewheel":
                        e.jqx.browser.mozilla ? d[0].removeEventListener("DOMMouseScroll", f, !1) : d[0].removeEventListener("mousewheel", f, !1);
                        continue;
                    case "mousemove":
                        if (f) {
                            d[0].removeEventListener("mousemove", f, !1);
                            continue
                        }
                        break;
                    case "touchmove":
                        if (f) {
                            d[0].removeEventListener("touchmove", f, !1);
                            continue
                        }
                    }
                void 0 == h ? d.off ? d.off() : d.unbind() : void 0 == f ? d.off ? d.off(h) : d.unbind(h) : d.off ? d.off(h, f) : d.unbind(h, f)
            }
        } else
            d.off ? d.off() : d.unbind()
    }
    ;
    e.jqx.credits = e.jqx.credits || "";
    e.jqx.theme = e.jqx.theme || "";
    e.jqx.scrollAnimation = e.jqx.scrollAnimation || !1;
    e.jqx.resizeDelay = e.jqx.resizeDelay || 10;
    e.jqx.ready = function() {
        e(window).trigger("jqxReady")
    }
    ;
    e.jqx.init = function(d) {
        e.each(d, function(c, f) {
            "theme" == c && (e.jqx.theme = f);
            "scrollBarSize" == c && (e.jqx.utilities.scrollBarSize = f);
            "touchScrollBarSize" == c && (e.jqx.utilities.touchScrollBarSize = f);
            "scrollBarButtonsVisibility" == c && (e.jqx.utilities.scrollBarButtonsVisibility = f)
        })
    }
    ;
    e.jqx.utilities = e.jqx.utilities || {};
    e.extend(e.jqx.utilities, {
        scrollBarSize: 13,
        touchScrollBarSize: 8,
        scrollBarButtonsVisibility: "visible",
        createId: function() {
            var d = function() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
            };
            return "jqxWidget" + d() + d() + d()
        },
        setTheme: function(d, c, f) {
            if ("undefined" !== typeof f && f[0].className.split) {
                void 0 === d && (d = "");
                void 0 === c && (c = "");
                for (var g = f[0].className.split(" "), h = [], k = [], l = f.children(), m = 0; m < g.length; m += 1)
                    0 <= g[m].indexOf(d) && (0 < d.length ? (h.push(g[m]),
                    k.push(g[m].replace(d, c))) : k.push(g[m].replace("-" + c, "") + "-" + c));
                this._removeOldClasses(h, f);
                this._addNewClasses(k, f);
                for (m = 0; m < l.length; m += 1)
                    this.setTheme(d, c, e(l[m]))
            }
        },
        _removeOldClasses: function(d, c) {
            for (var f = 0; f < d.length; f += 1)
                c.removeClass(d[f])
        },
        _addNewClasses: function(d, c) {
            for (var f = 0; f < d.length; f += 1)
                c.addClass(d[f])
        },
        getOffset: function(d) {
            var c = e.jqx.mobile.getLeftPos(d[0]);
            return {
                top: e.jqx.mobile.getTopPos(d[0]),
                left: c
            }
        },
        resize: function(d, c, f, g) {
            void 0 === g && (g = !0);
            var h = -1
              , k = this
              , l = function(t) {
                if (!k.hiddenWidgets)
                    return -1;
                for (var v = -1, z = 0; z < k.hiddenWidgets.length; z++)
                    if (t.id) {
                        if (k.hiddenWidgets[z].id == t.id) {
                            v = z;
                            break
                        }
                    } else if (k.hiddenWidgets[z].id == t[0].id) {
                        v = z;
                        break
                    }
                return v
            };
            if (this.resizeHandlers) {
                for (var m = 0; m < this.resizeHandlers.length; m++)
                    if (d.id) {
                        if (this.resizeHandlers[m].id == d.id) {
                            h = m;
                            break
                        }
                    } else if (this.resizeHandlers[m].id == d[0].id) {
                        h = m;
                        break
                    }
                if (!0 === f) {
                    -1 != h && (this.resizeHandlers.splice(h, 1),
                    this.watchedElementData && 0 < this.watchedElementData.length && this.watchedElementData.splice(h, 1));
                    0 == this.resizeHandlers.length && (f = e(window),
                    f.off ? (f.off("resize.jqx"),
                    f.off("orientationchange.jqx"),
                    f.off("orientationchanged.jqx")) : (f.unbind("resize.jqx"),
                    f.unbind("orientationchange.jqx"),
                    f.unbind("orientationchanged.jqx")),
                    this.resizeHandlers = null);
                    d = l(d);
                    -1 != d && this.hiddenWidgets && this.hiddenWidgets.splice(d, 1);
                    return
                }
            } else if (!0 === f) {
                d = l(d);
                -1 != d && this.hiddenWidgets && this.hiddenWidgets.splice(d, 1);
                return
            }
            k = this;
            var n = function(t, v) {
                if (k.resizeHandlers) {
                    var z = function(D) {
                        var B = -1;
                        for (D = D.parentNode; D; )
                            B++,
                            D = D.parentNode;
                        return B
                    }
                      , E = function(D, B) {
                        if (!D.widget || !B.widget)
                            return 0;
                        D = z(D.widget[0]);
                        B = z(B.widget[0]);
                        return D < B ? -1 : D > B ? 1 : 0
                    }
                      , C = function(D) {
                        if (0 < k.hiddenWidgets.length) {
                            k.hiddenWidgets.sort(E);
                            var B = function() {
                                for (var H = !1, J = [], K = 0; K < k.hiddenWidgets.length; K++) {
                                    var Q = k.hiddenWidgets[K];
                                    e.jqx.isHidden(Q.widget) ? (H = !0,
                                    J.push(Q)) : Q.callback && Q.callback(v)
                                }
                                k.hiddenWidgets = J;
                                H || clearInterval(k.__resizeInterval)
                            };
                            0 == D ? (B(),
                            k.__resizeInterval && clearInterval(k.__resizeInterval)) : (k.__resizeInterval && clearInterval(k.__resizeInterval),
                            k.__resizeInterval = setInterval(function() {
                                B()
                            }, 100))
                        }
                    };
                    k.hiddenWidgets && 0 < k.hiddenWidgets.length && C(!1);
                    k.hiddenWidgets = [];
                    k.resizeHandlers.sort(E);
                    for (var F = 0; F < k.resizeHandlers.length; F++) {
                        var P = k.resizeHandlers[F]
                          , X = P.widget
                          , W = P.data;
                        if (W && W.jqxWidget) {
                            var V = W.jqxWidget.width
                              , ca = W.jqxWidget.height;
                            W.jqxWidget.base && (void 0 == V && (V = W.jqxWidget.base.width),
                            void 0 == ca && (ca = W.jqxWidget.base.height));
                            void 0 === V && void 0 === ca && (V = W.jqxWidget.element.style.width,
                            ca = W.jqxWidget.element.style.height);
                            var u = !1;
                            null != V && -1 != V.toString().indexOf("%") && (u = !0);
                            null != ca && -1 != ca.toString().indexOf("%") && (u = !0);
                            if (e.jqx.isHidden(X))
                                -1 === l(X) && (u || !0 === t) && !0 !== P.data.nestedWidget && k.hiddenWidgets.push(P);
                            else if (void 0 === t || !0 !== t) {
                                if (u) {
                                    P.callback(v);
                                    if (k.watchedElementData)
                                        for (X = 0; X < k.watchedElementData.length; X++)
                                            if (k.watchedElementData[X].element == W.jqxWidget.element) {
                                                k.watchedElementData[X].offsetWidth = W.jqxWidget.element.offsetWidth;
                                                k.watchedElementData[X].offsetHeight = W.jqxWidget.element.offsetHeight;
                                                break
                                            }
                                    0 <= k.hiddenWidgets.indexOf(P) && k.hiddenWidgets.splice(k.hiddenWidgets.indexOf(P), 1)
                                }
                                W.jqxWidget.element && (P = W.jqxWidget.element.className,
                                !((0 <= P.indexOf("dropdownlist") || 0 <= P.indexOf("datetimeinput") || 0 <= P.indexOf("combobox") || 0 <= P.indexOf("menu")) && W.jqxWidget.isOpened && W.jqxWidget.isOpened()) || v && "resize" == v && e.jqx.mobile.isTouchDevice() || W.jqxWidget.close())
                            }
                        }
                    }
                    C()
                }
            };
            this.resizeHandlers || (this.resizeHandlers = [],
            f = e(window),
            f.on ? (this._initResize = this._resizeTimer = null,
            f.on("resize.jqx", function(t) {
                void 0 != k._resizeTimer && clearTimeout(k._resizeTimer);
                k._initResize ? k._resizeTimer = setTimeout(function() {
                    n(null, "resize")
                }, e.jqx.resizeDelay) : (k._initResize = !0,
                n(null, "resize"))
            }),
            f.on("orientationchange.jqx", function(t) {
                n(null, "orientationchange")
            }),
            f.on("orientationchanged.jqx", function(t) {
                n(null, "orientationchange")
            })) : (f.bind("resize.jqx", function(t) {
                n(null, "orientationchange")
            }),
            f.bind("orientationchange.jqx", function(t) {
                n(null, "orientationchange")
            }),
            f.bind("orientationchanged.jqx", function(t) {
                n(null, "orientationchange")
            })));
            f = d.data();
            g && -1 === h && this.resizeHandlers.push({
                id: d[0].id,
                widget: d,
                callback: c,
                data: f
            });
            try {
                var p = f.jqxWidget.width
                  , q = f.jqxWidget.height;
                f.jqxWidget.base && (void 0 == p && (p = f.jqxWidget.base.width),
                void 0 == q && (q = f.jqxWidget.base.height));
                void 0 === p && void 0 === q && (p = f.jqxWidget.element.style.width,
                q = f.jqxWidget.element.style.height);
                h = !1;
                null != p && -1 != p.toString().indexOf("%") && (h = !0);
                null != q && -1 != q.toString().indexOf("%") && (h = !0);
                h && (this.watchedElementData || (this.watchedElementData = []),
                k = this,
                p = function(t) {
                    k.watchedElementData.forEach && k.watchedElementData.forEach(function(v) {
                        if (v.element.offsetWidth !== v.offsetWidth || v.element.offsetHeight !== v.offsetHeight)
                            v.offsetWidth = v.element.offsetWidth,
                            v.offsetHeight = v.element.offsetHeight,
                            v.timer && clearTimeout(v.timer),
                            v.timer = setTimeout(function() {
                                e.jqx.isHidden(e(v.element)) ? v.timer = setInterval(function() {
                                    e.jqx.isHidden(e(v.element)) || (clearInterval(v.timer),
                                    v.callback())
                                }, 100) : v.callback()
                            })
                    })
                }
                ,
                k.watchedElementData.push({
                    element: d[0],
                    offsetWidth: d[0].offsetWidth,
                    offsetHeight: d[0].offsetHeight,
                    callback: c
                }),
                k.observer || (k.observer = new MutationObserver(p),
                k.observer.observe(document.body, {
                    attributes: !0,
                    childList: !0,
                    characterData: !0
                })))
            } catch (t) {}
            e.jqx.isHidden(d) && !0 === g && n(!0);
            e.jqx.resize = function() {
                n(null, "resize")
            }
        },
        parseJSON: function(d) {
            if (!d || "string" !== typeof d)
                return null;
            d = e.trim(d);
            if (window.JSON && window.JSON.parse)
                return window.JSON.parse(d);
            if (/^[\],:{}\s]*$/.test(d.replace(/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, "@").replace(/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")))
                return (new Function("return " + d))();
            throw Error("Invalid JSON: " + d);
        },
        html: function(d, c) {
            if (!e(d).on)
                return e(d).html(c);
            try {
                return e.access(d, function(f) {
                    var g = d[0] || {}
                      , h = 0
                      , k = d.length;
                    if (void 0 === f)
                        return 1 === g.nodeType ? g.innerHTML.replace(rinlinejQuery, "") : void 0;
                    var l = /<(?:script|style|link)/i
                      , m = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
                      , n = /<([\w:]+)/
                      , p = /<(?:abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video)[\s/>]/i
                      , q = /^\s+/
                      , t = {
                        option: [1, "<select multiple='multiple'>", "</select>"],
                        legend: [1, "<fieldset>", "</fieldset>"],
                        thead: [1, "<table>", "</table>"],
                        tr: [2, "<table><tbody>", "</tbody></table>"],
                        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                        area: [1, "<map>", "</map>"],
                        _default: [0, "", ""]
                    };
                    if (!("string" !== typeof f || l.test(f) || !e.support.htmlSerialize && p.test(f) || !e.support.leadingWhitespace && q.test(f) || t[(n.exec(f) || ["", ""])[1].toLowerCase()])) {
                        f = f.replace(m, "<$1></$2>");
                        try {
                            for (; h < k; h++)
                                g = this[h] || {},
                                1 === g.nodeType && (e.cleanData(g.getElementsByTagName("*")),
                                g.innerHTML = f);
                            g = 0
                        } catch (v) {}
                    }
                    g && d.empty().append(f)
                }, null, c, arguments.length)
            } catch (f) {
                return e(d).html(c)
            }
        },
        hasTransform: function(d) {
            var c = d.css("transform");
            if ("" == c || "none" == c)
                if (c = d.parents().css("transform"),
                "" == c || "none" == c) {
                    var f = e.jqx.utilities.getBrowser();
                    if ("msie" == f.browser) {
                        if (c = d.css("-ms-transform"),
                        "" == c || "none" == c)
                            c = d.parents().css("-ms-transform")
                    } else if ("chrome" == f.browser) {
                        if (c = d.css("-webkit-transform"),
                        "" == c || "none" == c)
                            c = d.parents().css("-webkit-transform")
                    } else if ("opera" == f.browser) {
                        if (c = d.css("-o-transform"),
                        "" == c || "none" == c)
                            c = d.parents().css("-o-transform")
                    } else
                        "mozilla" == f.browser && (c = d.css("-moz-transform"),
                        "" == c || "none" == c) && (c = d.parents().css("-moz-transform"))
                } else
                    return "" != c && "none" != c;
            if ("" == c || "none" == c)
                c = e(document.body).css("transform");
            return "" != c && "none" != c && null != c
        },
        getBrowser: function() {
            var d = navigator.userAgent.toLowerCase()
              , c = /(chrome)[ \/]([\w.]+)/.exec(d) || /(webkit)[ \/]([\w.]+)/.exec(d) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(d) || /(msie) ([\w.]+)/.exec(d) || 0 > d.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(d) || []
              , f = {
                browser: c[1] || "",
                version: c[2] || "0"
            };
            0 <= d.indexOf("rv:11.0") && 0 <= d.indexOf(".net4.0c") && (f.browser = "msie",
            f.version = "11",
            c[1] = "msie");
            0 <= d.indexOf("edge") && (f.browser = "msie",
            f.version = "12",
            c[1] = "msie");
            f[c[1]] = c[1];
            return f
        }
    });
    e.jqx.browser = e.jqx.utilities.getBrowser();
    e.jqx.isHidden = function(d) {
        if (!d || !d[0])
            return !1;
        var c = d[0].offsetHeight;
        return 0 === d[0].offsetWidth || 0 === c ? !0 : !1
    }
    ;
    e.jqx.ariaEnabled = !0;
    e.jqx.aria = function(d, c, f) {
        if (e.jqx.ariaEnabled)
            if (void 0 == c)
                e.each(d.aria, function(g, h) {
                    var k = d.base ? d.base.host.attr(g) : d.host.attr(g);
                    if (void 0 == k || e.isFunction(k)) {
                        k = d[h.name];
                        e.isFunction(k) && (k = d[h.name]());
                        void 0 == k && (k = "");
                        try {
                            d.base ? d.base.host.attr(g, k.toString()) : d.host.attr(g, k.toString())
                        } catch (l) {}
                    } else {
                        g = k;
                        switch (h.type) {
                        case "number":
                            g = new Number(k);
                            isNaN(g) && (g = k);
                            break;
                        case "boolean":
                            g = "true" == k ? !0 : !1;
                            break;
                        case "date":
                            if (g = new Date(k),
                            "Invalid Date" == g || isNaN(g))
                                g = k
                        }
                        d[h.name] = g
                    }
                });
            else
                try {
                    d.host ? d.base ? d.base.host ? d.base.host.attr(c, f.toString()) : d.attr(c, f.toString()) : d.host ? d.element.setAttribute ? d.element.setAttribute(c, f.toString()) : d.host.attr(c, f.toString()) : d.attr(c, f.toString()) : d.setAttribute && d.setAttribute(c, f.toString())
                } catch (g) {}
    }
    ;
    Array.prototype.indexOf || (Array.prototype.indexOf = function(d, c) {
        var f = this.length;
        c = Number(c) || 0;
        c = 0 > c ? Math.ceil(c) : Math.floor(c);
        for (0 > c && (c += f); c < f; c++)
            if (c in this && this[c] === d)
                return c;
        return -1
    }
    );
    e.jqx.mobile = e.jqx.mobile || {};
    e.jqx.position = function(d) {
        var c = parseInt(d.pageX)
          , f = parseInt(d.pageY);
        e.jqx.mobile.isTouchDevice() && (d = e.jqx.mobile.getTouches(d)[0],
        c = parseInt(d.pageX),
        f = parseInt(d.pageY));
        return {
            left: c,
            top: f
        }
    }
    ;
    e.extend(e.jqx.mobile, {
        _touchListener: function(d, c) {
            c = {
                mousedown: "touchstart",
                mouseup: "touchend",
                mousemove: "touchmove"
            };
            var f = c[d.type]
              , g = document.createEvent("MouseEvents");
            g.initMouseEvent(f, d.bubbles, d.cancelable, d.view, d.detail, d.screenX, d.screenY, d.clientX, d.clientY, d.ctrlKey, d.altKey, d.shiftKey, d.metaKey, d.button, d.relatedTarget);
            g._pageX = d.pageX;
            g._pageY = d.pageY;
            d.target.dispatchEvent(g);
            c = d.target["on" + c[d.type]];
            "function" === typeof c && c(d)
        },
        setMobileSimulator: function(d, c) {
            if (!this.isTouchDevice() && (this.simulatetouches = !0,
            0 == c && (this.simulatetouches = !1),
            c = {
                mousedown: "touchstart",
                mouseup: "touchend",
                mousemove: "touchmove"
            },
            window.addEventListener))
                for (var f in c)
                    d.addEventListener && (d.removeEventListener(f, this._touchListener),
                    d.addEventListener(f, this._touchListener, !1))
        },
        isTouchDevice: function() {
            if (void 0 != this.touchDevice)
                return this.touchDevice;
            var d = "Browser CodeName: " + navigator.appCodeName;
            d += "Browser Name: " + navigator.appName;
            d += "Browser Version: " + navigator.appVersion;
            d += "Platform: " + navigator.platform;
            d += "User-agent header: " + navigator.userAgent;
            if (-1 != d.indexOf("Android") || -1 != d.indexOf("IEMobile") || -1 != d.indexOf("Windows Phone") || -1 != d.indexOf("WPDesktop") || -1 != d.indexOf("ZuneWP7") || -1 != d.indexOf("BlackBerry") && -1 != d.indexOf("Mobile Safari") || -1 != d.indexOf("ipod") || -1 != d.indexOf("nokia") || -1 != d.indexOf("Nokia"))
                return !0;
            if (-1 != d.indexOf("Chrome/17") || -1 != d.indexOf("CrOS") || -1 != d.indexOf("Opera") && -1 == d.indexOf("Mobi") && -1 == d.indexOf("Mini") && -1 != d.indexOf("Platform: Win"))
                return !1;
            if (-1 != d.indexOf("HybridDeviceTouch"))
                return !0;
            if (-1 != d.indexOf("HybridDeviceMouse"))
                return !1;
            if (-1 != d.indexOf("Opera") && -1 != d.indexOf("Mobi") && -1 != d.indexOf("Opera Mobi"))
                return !0;
            if (-1 != d.indexOf("Mozilla/5.0 (X11; Linux x86_64)"))
                return !1;
            var c = {
                ios: "i(?:Pad|Phone|Pod)(?:.*)CPU(?: iPhone)? OS ",
                android: "(Android |HTC_|Silk/)",
                blackberry: "BlackBerry(?:.*)Version/",
                rimTablet: "RIM Tablet OS ",
                webos: "(?:webOS|hpwOS)/",
                bada: "Bada/"
            };
            try {
                if (void 0 != this.touchDevice)
                    return this.touchDevice;
                this.touchDevice = !1;
                for (var f in c)
                    if (c.hasOwnProperty(f) && d.match(new RegExp("(?:" + c[f] + ")([^\\s;]+)")))
                        return "blackberry" == f.toString() ? this.touchDevice = !1 : this.touchDevice = !0;
                var g = navigator.userAgent;
                if (-1 != navigator.platform.toLowerCase().indexOf("win")) {
                    if (0 <= g.indexOf("Windows Phone") || 0 <= g.indexOf("WPDesktop") || 0 <= g.indexOf("IEMobile") || 0 <= g.indexOf("ZuneWP7"))
                        return this.touchDevice = !0;
                    if (0 <= g.indexOf("Touch"))
                        return "MSPointerDown"in window || "pointerdown"in window || 0 <= g.indexOf("ARM") ? this.touchDevice = !0 : this.touchDevice = !1
                }
                if (-1 != navigator.platform.toLowerCase().indexOf("win"))
                    return this.touchDevice = !1;
                if ("ontouchstart"in window || window.DocumentTouch && document instanceof DocumentTouch)
                    this.touchDevice = !0;
                return this.touchDevice
            } catch (h) {
                return this.touchDevice = !1
            }
        },
        getLeftPos: function(d) {
            for (var c = d.offsetLeft; null != (d = d.offsetParent); )
                "HTML" != d.tagName && (c += d.offsetLeft,
                document.all && (c += d.clientLeft));
            return c
        },
        getTopPos: function(d) {
            for (var c = d.offsetTop, f = e(d).coord(); null != (d = d.offsetParent); )
                "HTML" != d.tagName && (c += d.offsetTop - d.scrollTop,
                document.all && (c += d.clientTop));
            d = navigator.userAgent.toLowerCase();
            if ((-1 != d.indexOf("windows phone") || -1 != d.indexOf("WPDesktop") || -1 != d.indexOf("ZuneWP7") || -1 != d.indexOf("msie 9") || -1 != d.indexOf("msie 11") || -1 != d.indexOf("msie 10")) && -1 != d.indexOf("touch"))
                return f.top;
            if (this.isSafariMobileBrowser()) {
                if (this.isSafari4MobileBrowser() && this.isIPadSafariMobileBrowser())
                    return c;
                if (-1 != d.indexOf("version/7"))
                    return f.top;
                if (-1 != d.indexOf("version/6") || -1 != d.indexOf("version/5"))
                    c += e(window).scrollTop();
                return /(Android.*Chrome\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent) || /(Android.*Chrome\/[.0-9]* Mobile)/.exec(navigator.userAgent) ? c + e(window).scrollTop() : f.top
            }
            return c
        },
        isChromeMobileBrowser: function() {
            return -1 != navigator.userAgent.toLowerCase().indexOf("android")
        },
        isOperaMiniMobileBrowser: function() {
            var d = navigator.userAgent.toLowerCase();
            return -1 != d.indexOf("opera mini") || -1 != d.indexOf("opera mobi")
        },
        isOperaMiniBrowser: function() {
            return -1 != navigator.userAgent.toLowerCase().indexOf("opera mini")
        },
        isNewSafariMobileBrowser: function() {
            var d = navigator.userAgent.toLowerCase()
              , c = -1 != d.indexOf("ipad") || -1 != d.indexOf("iphone") || -1 != d.indexOf("ipod");
            return c = c && -1 != d.indexOf("version/5")
        },
        isSafari4MobileBrowser: function() {
            var d = navigator.userAgent.toLowerCase()
              , c = -1 != d.indexOf("ipad") || -1 != d.indexOf("iphone") || -1 != d.indexOf("ipod");
            return c = c && -1 != d.indexOf("version/4")
        },
        isWindowsPhone: function() {
            var d = navigator.userAgent.toLowerCase();
            return -1 != d.indexOf("windows phone") || -1 != d.indexOf("WPDesktop") || -1 != d.indexOf("ZuneWP7") || -1 != d.indexOf("msie 9") || -1 != d.indexOf("msie 11") || -1 != d.indexOf("msie 10") && -1 != d.indexOf("touch")
        },
        isSafariMobileBrowser: function() {
            var d = navigator.userAgent.toLowerCase();
            return /(Android.*Chrome\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent) || /(Android.*Chrome\/[.0-9]* Mobile)/.exec(navigator.userAgent) ? !0 : -1 != d.indexOf("ipad") || -1 != d.indexOf("iphone") || -1 != d.indexOf("ipod") || -1 != d.indexOf("mobile safari")
        },
        isIPadSafariMobileBrowser: function() {
            return -1 != navigator.userAgent.toLowerCase().indexOf("ipad")
        },
        isMobileBrowser: function() {
            var d = navigator.userAgent.toLowerCase();
            return -1 != d.indexOf("ipad") || -1 != d.indexOf("iphone") || -1 != d.indexOf("android")
        },
        getTouches: function(d) {
            if (d.originalEvent) {
                if (d.originalEvent.touches && d.originalEvent.touches.length)
                    return d.originalEvent.touches;
                if (d.originalEvent.changedTouches && d.originalEvent.changedTouches.length)
                    return d.originalEvent.changedTouches
            }
            d.touches || (d.touches = [],
            d.touches[0] = void 0 != d.originalEvent ? d.originalEvent : d,
            void 0 != d.originalEvent && d.pageX && (d.touches[0] = d),
            "mousemove" == d.type && (d.touches[0] = d));
            return d.touches
        },
        getTouchEventName: function(d) {
            if (this.isWindowsPhone()) {
                if (-1 != navigator.userAgent.toLowerCase().indexOf("windows phone 7")) {
                    if (-1 != d.toLowerCase().indexOf("start"))
                        return "MSPointerDown";
                    if (-1 != d.toLowerCase().indexOf("move"))
                        return "MSPointerMove";
                    if (-1 != d.toLowerCase().indexOf("end"))
                        return "MSPointerUp"
                }
                if (-1 != d.toLowerCase().indexOf("start"))
                    return "pointerdown";
                if (-1 != d.toLowerCase().indexOf("move"))
                    return "pointermove";
                if (-1 != d.toLowerCase().indexOf("end"))
                    return "pointerup"
            } else
                return d
        },
        dispatchMouseEvent: function(d, c, f) {
            if (!this.simulatetouches) {
                var g = document.createEvent("MouseEvent");
                g.initMouseEvent(d, !0, !0, c.view, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null);
                null != f && f.dispatchEvent(g)
            }
        },
        getRootNode: function(d) {
            for (; 1 !== d.nodeType; )
                d = d.parentNode;
            return d
        },
        setTouchScroll: function(d, c) {
            this.enableScrolling || (this.enableScrolling = []);
            this.enableScrolling[c] = d
        },
        touchScroll: function(d, c, f, g, h, k) {
            function l(ka) {
                return ka.targetTouches && 1 <= ka.targetTouches.length ? ka.targetTouches[0].clientY : ka.originalEvent && void 0 !== ka.originalEvent.clientY ? ka.originalEvent.clientY : q.getTouches(ka)[0].clientY
            }
            function m(ka) {
                return ka.targetTouches && 1 <= ka.targetTouches.length ? ka.targetTouches[0].clientX : ka.originalEvent && void 0 !== ka.originalEvent.clientX ? ka.originalEvent.clientX : q.getTouches(ka)[0].clientX
            }
            function n() {
                if (K) {
                    var ka = Date.now() - H;
                    ka = -K * Math.exp(-ka / aa);
                    .5 < ka || -.5 > ka ? (ma(Q + ka),
                    requestAnimationFrame(n)) : ma(Q)
                }
            }
            function p() {
                if (K) {
                    var ka = Date.now() - H;
                    ka = -K * Math.exp(-ka / aa);
                    .5 < ka || -.5 > ka ? (w(Y + ka),
                    requestAnimationFrame(p)) : w(Y)
                }
            }
            if (null != d) {
                var q = this;
                this.scrolling || (this.scrolling = []);
                var t = this.scrolling[g] = !1;
                d = e(d);
                var v = ["select", "input", "textarea"]
                  , z = 0;
                this.enableScrolling || (this.enableScrolling = []);
                this.enableScrolling[g] = !0;
                var E = this.getTouchEventName("touchstart") + ".touchScroll", C = this.getTouchEventName("touchend") + ".touchScroll", F = this.getTouchEventName("touchmove") + ".touchScroll", P, X, W, V, ca, u, D, B, H, J, K, Q, Y, I;
                var T = c;
                var Z = W = 0
                  , ra = 0
                  , ia = 0;
                var la = h.jqxScrollBar("max");
                var aa = 325;
                var U = function() {
                    var ka = Date.now();
                    var wa = ka - H;
                    H = ka;
                    ka = W - B;
                    var ta = Z - P;
                    B = W;
                    P = Z;
                    ca = !0;
                    u = 1E3 * ka / (1 + wa) * .8 + .2 * u;
                    D = 1E3 * ta / (1 + wa) * .8 + .2 * D
                }
                  , fa = !1;
                z = function(ka) {
                    if (!q.enableScrolling[g])
                        return !0;
                    if (-1 === e.inArray(ka.target.tagName.toLowerCase(), v)) {
                        W = k.jqxScrollBar("value");
                        Z = h.jqxScrollBar("value");
                        var wa = q.getTouches(ka)
                          , ta = wa[0];
                        1 == wa.length && q.dispatchMouseEvent("mousedown", ta, q.getRootNode(ta.target));
                        la = h.jqxScrollBar("max");
                        T = k.jqxScrollBar("max");
                        fa = !1;
                        ca = !0;
                        V = l(ka);
                        I = m(ka);
                        u = K = D = 0;
                        B = W;
                        P = Z;
                        H = Date.now();
                        clearInterval(J);
                        J = setInterval(U, 100);
                        ra = W;
                        ia = Z;
                        t = !1;
                        return q.scrolling[g] = !0
                    }
                }
                ;
                if (d.on)
                    d.on(E, z);
                else
                    d.bind(E, z);
                var ma = function(ka, wa) {
                    W = ka > T ? T : 0 > ka ? 0 : ka;
                    f(null, ka, 0, 0, wa);
                    return ka > T ? "max" : 0 > ka ? "min" : "value"
                }
                  , w = function(ka, wa) {
                    Z = ka > la ? la : 0 > ka ? 0 : ka;
                    f(ka, null, 0, 0, wa);
                    return ka > la ? "max" : 0 > ka ? "min" : "value"
                };
                c = function(ka) {
                    function wa(O) {
                        if (ca) {
                            var S = l(O);
                            var ha = m(O);
                            var na = V - S;
                            X = I - ha;
                            if (2 < na || -2 > na) {
                                V = S;
                                S = ma(W + na, O);
                                U();
                                if ("min" == S && 0 === ra || "max" == S && ra === T || !L)
                                    return !0;
                                O.preventDefault();
                                O.stopPropagation();
                                fa = !0;
                                return !1
                            }
                            if (2 < X || -2 > X) {
                                I = ha;
                                S = w(Z + X, O);
                                U();
                                if ("min" == S && 0 === ia || "max" == S && ia === la || !ta)
                                    return !0;
                                fa = !0;
                                O.preventDefault();
                                O.stopPropagation();
                                return !1
                            }
                            O.preventDefault()
                        }
                    }
                    if (!q.enableScrolling[g] || !q.scrolling[g])
                        return !0;
                    fa && (ka.preventDefault(),
                    ka.stopPropagation());
                    if (1 < q.getTouches(ka).length)
                        return !0;
                    t = !0;
                    var ta = null != h ? "hidden" != h[0].style.visibility : !0
                      , L = null != k ? "hidden" != k[0].style.visibility : !0;
                    (ta || L) && (ta || L) && wa(ka)
                }
                ;
                if (d.on)
                    d.on(F, c);
                else
                    d.bind(F, c);
                var pa = function(ka) {
                    if (!q.enableScrolling[g])
                        return !0;
                    var wa = q.getTouches(ka)[0];
                    if (!q.scrolling[g])
                        return !0;
                    ca = !1;
                    clearInterval(J);
                    if (10 < u || -10 > u)
                        K = .8 * u,
                        Q = Math.round(W + K),
                        H = Date.now(),
                        requestAnimationFrame(n);
                    else if (10 < D || -10 > D)
                        K = .8 * D,
                        Y = Math.round(Z + K),
                        H = Date.now(),
                        requestAnimationFrame(p);
                    q.scrolling[g] = !1;
                    if (t)
                        q.dispatchMouseEvent("mouseup", wa, ka.target);
                    else
                        return wa = q.getTouches(ka)[0],
                        ka = q.getRootNode(wa.target),
                        q.dispatchMouseEvent("mouseup", wa, ka),
                        q.dispatchMouseEvent("click", wa, ka),
                        !0
                };
                this.simulatetouches && (void 0 != e(window).on || e(window),
                c = function(ka) {
                    try {
                        pa(ka)
                    } catch (wa) {}
                    q.scrolling[g] = !1
                }
                ,
                void 0 != e(window).on ? e(document).on("mouseup.touchScroll", c) : e(document).bind("mouseup.touchScroll", c),
                window.frameElement && null != window.top && (c = function(ka) {
                    try {
                        pa(ka)
                    } catch (wa) {}
                    q.scrolling[g] = !1
                }
                ,
                window.top.document && (e(window.top.document).on ? e(window.top.document).on("mouseup", c) : e(window.top.document).bind("mouseup", c))),
                void 0 != e(document).on || e(document),
                c = function(ka) {
                    if (!q.scrolling[g])
                        return !0;
                    q.scrolling[g] = !1;
                    ka = q.getTouches(ka)[0];
                    var wa = q.getRootNode(ka.target);
                    q.dispatchMouseEvent("mouseup", ka, wa);
                    q.dispatchMouseEvent("click", ka, wa)
                }
                ,
                void 0 != e(document).on ? e(document).on("touchend", c) : e(document).bind("touchend", c));
                d.on && (d.on("dragstart", function(ka) {
                    ka.preventDefault()
                }),
                d.on("selectstart", function(ka) {
                    ka.preventDefault()
                }));
                d.on ? d.on(C + " touchcancel.touchScroll", pa) : d.bind(C + " touchcancel.touchScroll", pa)
            }
        }
    });
    e.jqx.cookie = e.jqx.cookie || {};
    e.extend(e.jqx.cookie, {
        cookie: function(d, c, f) {
            if (1 < arguments.length && "[object Object]" !== String(c)) {
                f = e.extend({}, f);
                if (null === c || void 0 === c)
                    f.expires = -1;
                if ("number" === typeof f.expires) {
                    var g = f.expires
                      , h = f.expires = new Date;
                    h.setDate(h.getDate() + g)
                }
                c = String(c);
                return document.cookie = [encodeURIComponent(d), "=", f.raw ? c : encodeURIComponent(c), f.expires ? "; expires=" + f.expires.toUTCString() : "", f.path ? "; path=" + f.path : "", f.domain ? "; domain=" + f.domain : "", f.secure ? "; secure" : ""].join("")
            }
            f = c || {};
            h = f.raw ? function(k) {
                return k
            }
            : decodeURIComponent;
            return (g = (new RegExp("(?:^|; )" + encodeURIComponent(d) + "=([^;]*)")).exec(document.cookie)) ? h(g[1]) : null
        }
    });
    e.jqx.string = e.jqx.string || {};
    e.extend(e.jqx.string, {
        replace: function(d, c, f) {
            if (c === f)
                return this;
            for (var g = d.indexOf(c); -1 != g; )
                d = d.replace(c, f),
                g = d.indexOf(c);
            return d
        },
        contains: function(d, c) {
            return null == d || null == c ? !1 : -1 != d.indexOf(c)
        },
        containsIgnoreCase: function(d, c) {
            return null == d || null == c ? !1 : -1 != d.toString().toUpperCase().indexOf(c.toString().toUpperCase())
        },
        equals: function(d, c) {
            if (null == d || null == c)
                return !1;
            d = this.normalize(d);
            return c.length == d.length ? d.slice(0, c.length) == c : !1
        },
        equalsIgnoreCase: function(d, c) {
            if (null == d || null == c)
                return !1;
            d = this.normalize(d);
            return c.length == d.length ? d.toUpperCase().slice(0, c.length) == c.toUpperCase() : !1
        },
        startsWith: function(d, c) {
            return null == d || null == c ? !1 : d.slice(0, c.length) == c
        },
        startsWithIgnoreCase: function(d, c) {
            return null == d || null == c ? !1 : d.toUpperCase().slice(0, c.length) == c.toUpperCase()
        },
        normalize: function(d) {
            65279 == d.charCodeAt(d.length - 1) && (d = d.substring(0, d.length - 1));
            return d
        },
        endsWith: function(d, c) {
            if (null == d || null == c)
                return !1;
            d = this.normalize(d);
            return d.slice(-c.length) == c
        },
        endsWithIgnoreCase: function(d, c) {
            if (null == d || null == c)
                return !1;
            d = this.normalize(d);
            return d.toUpperCase().slice(-c.length) == c.toUpperCase()
        }
    });
    e.extend(e.easing, {
        easeOutBack: function(d, c, f, g, h, k) {
            void 0 == k && (k = 1.70158);
            return g * ((c = c / h - 1) * c * ((k + 1) * c + k) + 1) + f
        },
        easeInQuad: function(d, c, f, g, h) {
            return g * (c /= h) * c + f
        },
        easeInOutCirc: function(d, c, f, g, h) {
            return 1 > (c /= h / 2) ? -g / 2 * (Math.sqrt(1 - c * c) - 1) + f : g / 2 * (Math.sqrt(1 - (c -= 2) * c) + 1) + f
        },
        easeInCubic: function(d, c, f, g, h) {
            return g * (c /= h) * c * c + f
        },
        easeOutCubic: function(d, c, f, g, h) {
            return g * ((c = c / h - 1) * c * c + 1) + f
        },
        easeInOutCubic: function(d, c, f, g, h) {
            return 1 > (c /= h / 2) ? g / 2 * c * c * c + f : g / 2 * ((c -= 2) * c * c + 2) + f
        },
        easeInSine: function(d, c, f, g, h) {
            return -g * Math.cos(c / h * (Math.PI / 2)) + g + f
        },
        easeOutSine: function(d, c, f, g, h) {
            return g * Math.sin(c / h * (Math.PI / 2)) + f
        },
        easeInOutSine: function(d, c, f, g, h) {
            return -g / 2 * (Math.cos(Math.PI * c / h) - 1) + f
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.event && e.event.special && e.extend(e.event.special, {
        close: {
            noBubble: !0
        },
        open: {
            noBubble: !0
        },
        cellclick: {
            noBubble: !0
        },
        rowclick: {
            noBubble: !0
        },
        tabclick: {
            noBubble: !0
        },
        selected: {
            noBubble: !0
        },
        expanded: {
            noBubble: !0
        },
        collapsed: {
            noBubble: !0
        },
        valuechanged: {
            noBubble: !0
        },
        expandedItem: {
            noBubble: !0
        },
        collapsedItem: {
            noBubble: !0
        },
        expandingItem: {
            noBubble: !0
        },
        collapsingItem: {
            noBubble: !0
        }
    });
    e.fn.extend && e.fn.extend({
        ischildof: function(d) {
            if (!e(this).parents)
                return d.element.contains(this.element);
            for (var c = e(this).parents().get(), f = 0; f < c.length; f++)
                if ("string" != typeof d) {
                    var g = c[f];
                    if (void 0 !== d && g == d[0])
                        return !0
                } else if (void 0 !== d && e(c[f]).is(d))
                    return !0;
            return !1
        }
    });
    e.fn.jqxProxy = function() {
        var d = e(this).data().jqxWidget
          , c = Array.prototype.slice.call(arguments, 0)
          , f = d.element;
        f || (f = d.base.element);
        return e.jqx.jqxWidgetProxy(d.widgetName, f, c)
    }
    ;
    var b = e.originalVal = e.fn.val;
    e.fn.val = function(d) {
        if ("undefined" == typeof d) {
            if (e(this).hasClass("jqx-widget")) {
                var c = e(this).data().jqxWidget;
                if (c && c.val)
                    return c.val()
            }
            return this[0] && 0 <= this[0].tagName.toLowerCase().indexOf("angular") && (c = e(this).find(".jqx-widget").data().jqxWidget) && c.val ? c.val() : b.call(this)
        }
        return e(this).hasClass("jqx-widget") && (c = e(this).data().jqxWidget) && c.val || this[0] && 0 <= this[0].tagName.toLowerCase().indexOf("angular") && (c = e(this).find(".jqx-widget").data().jqxWidget) && c.val ? 2 != arguments.length ? c.val(d) : c.val(d, arguments[1]) : b.call(this, d)
    }
    ;
    e.fn.modal && e.fn.modal.Constructor && (e.fn.modal.Constructor.prototype.enforceFocus = function() {
        e(document).off("focusin.bs.modal").on("focusin.bs.modal", e.proxy(function(d) {
            if (this.$element[0] !== d.target && !this.$element.has(d.target).length) {
                if (e(d.target).parents().hasClass("jqx-popup"))
                    return !0;
                this.$element.trigger("focus")
            }
        }, this))
    }
    );
    e.fn.coord = function(d) {
        var c, f = {
            top: 0,
            left: 0
        }, g = (c = this[0]) && c.ownerDocument;
        if (g) {
            var h = g.documentElement;
            if (!e.contains(h, c))
                return f;
            f = c.getBoundingClientRect();
            c = e.isWindow(g) ? g : 9 === g.nodeType ? g.defaultView || g.parentWindow : !1;
            var k = g = 0
              , l = navigator.userAgent.toLowerCase();
            if (-1 != l.indexOf("ipad") || -1 != l.indexOf("iphone"))
                g = 2;
            1 == d && "static" != document.body.style.position && "" != document.body.style.position && (d = e(document.body).coord(),
            g = -d.left,
            k = -d.top);
            return {
                top: k + f.top + (c.pageYOffset || h.scrollTop) - (h.clientTop || 0),
                left: g + f.left + (c.pageXOffset || h.scrollLeft) - (h.clientLeft || 0)
            }
        }
    }
    ;
    e.jqx.ripplers = [];
    e.jqx.ripple = function(d, c, f) {
        c || (c = d);
        var g = e(d);
        g.append("<span class='ink'></span>");
        for (var h = g.find(".ink"), k = !1, l = 0; l < e.jqx.ripplers.length; l++)
            if (e.jqx.ripplers[l].element[0] === d[0]) {
                k = !0;
                break
            }
        k || e.jqx.ripplers.push({
            ink: h,
            element: d,
            hostElement: c,
            hostElementType: f
        });
        if ("checkbox" === f || "radiobutton" === f)
            k = Math.max(g.outerWidth(), g.outerHeight()),
            h.css({
                height: k,
                width: k
            }),
            k = g.width() / 2 - h.width() / 2,
            g = g.height() / 2 - h.height() / 2,
            h.css({
                top: g + "px",
                left: k + "px"
            });
        if (1 === e.jqx.ripplers.length)
            e(document).on("mouseup", function(m) {
                e.jqx.ripple.mouseCaptured = !1;
                for (m = 0; m < e.jqx.ripplers.length; m++) {
                    var n = e.jqx.ripplers[m];
                    n.ink.removeClass("active");
                    n.element.removeClass("active");
                    "checkbox" !== f && "radiobutton" !== f && n.ink.hasClass("animate") && n.ink.removeClass("animate")
                }
            });
        c.off("mousedown.ripple");
        c.on("mousedown.ripple", function(m) {
            var n = e(d);
            e.jqx.ripple.mouseCaptured = !0;
            setTimeout(function() {
                0 == n.find(".ink").length && n.append("<span class='ink'></span>");
                var p = n.find(".ink");
                p.removeClass("animate");
                if (!p.height() && !p.width()) {
                    var q = Math.max(n.outerWidth(), n.outerHeight());
                    p.css({
                        height: q,
                        width: q
                    })
                }
                if ("checkbox" === f || "radiobutton" === f) {
                    if (!("checkbox" === f && c.jqxCheckBox("disabled") || "radiobutton" === f && c.jqxRadioButton("disabled"))) {
                        q = n.width() / 2 - p.width() / 2;
                        var t = n.height() / 2 - p.height() / 2;
                        p.css({
                            top: t + "px",
                            left: q + "px"
                        }).addClass("animate");
                        p.on("animationend", function() {
                            e.jqx.ripple.mouseCaptured && (p.removeClass("animate"),
                            p.addClass("active"),
                            d.addClass("active"))
                        })
                    }
                } else
                    q = m.pageX - n.offset().left - p.width() / 2,
                    t = m.pageY - n.offset().top - p.height() / 2,
                    p.css({
                        top: t + "px",
                        left: q + "px"
                    }).addClass("animate")
            })
        })
    }
}
)(jqxBaseFramework);
(function(e) {
    function b(u) {
        return function(D, B) {
            "string" !== typeof D && (B = D,
            D = "*");
            var H = D.toLowerCase().split(q)
              , J = 0
              , K = H.length;
            if (e.isFunction(B))
                for (; J < K; J++) {
                    var Q = H[J];
                    (D = /^\+/.test(Q)) && (Q = Q.substr(1) || "*");
                    Q = u[Q] = u[Q] || [];
                    Q[D ? "unshift" : "push"](B)
                }
        }
    }
    function d(u, D, B, H, J, K) {
        J = J || D.dataTypes[0];
        K = K || {};
        K[J] = !0;
        J = u[J];
        for (var Q = 0, Y = J ? J.length : 0, I = u === t; Q < Y && (I || !T); Q++) {
            var T = J[Q](D, B, H);
            "string" === typeof T && (!I || K[T] ? T = void 0 : (D.dataTypes.unshift(T),
            T = d(u, D, B, H, T, K)))
        }
        !I && T || K["*"] || (T = d(u, D, B, H, "*", K));
        return T
    }
    function c(u, D) {
        var B, H, J = e.jqx.data.ajaxSettings.flatOptions || {};
        for (B in D)
            void 0 !== D[B] && ((J[B] ? u : H || (H = {}))[B] = D[B]);
        H && e.extend(!0, u, H)
    }
    function f() {
        try {
            return new window.XMLHttpRequest
        } catch (u) {}
    }
    Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
        value: function(u, D) {
            if (null == this)
                throw TypeError('"this" is null or not defined');
            var B = Object(this)
              , H = B.length >>> 0;
            if ("function" !== typeof u)
                throw TypeError("predicate must be a function");
            for (var J = 0; J < H; ) {
                var K = B[J];
                if (u.call(D, K, J, B))
                    return K;
                J++
            }
        },
        configurable: !0,
        writable: !0
    });
    e.jqx.observableArray = function(u, D) {
        "string" == typeof u && (u = e.parseJSON(u));
        var B;
        if (!(B = !Object.defineProperty)) {
            try {
                Object.defineProperty({}, "x", {});
                var H = !0
            } catch (I) {
                H = !1
            }
            B = !H
        }
        if (B) {
            var J = Object.defineProperty;
            Object.defineProperty = function(I, T, Z) {
                if (J)
                    try {
                        return J(I, T, Z)
                    } catch (ra) {}
                if (I !== Object(I))
                    throw TypeError("Object.defineProperty called on non-object");
                Object.prototype.__defineGetter__ && "get"in Z && Object.prototype.__defineGetter__.call(I, T, Z.get);
                Object.prototype.__defineSetter__ && "set"in Z && Object.prototype.__defineSetter__.call(I, T, Z.set);
                "value"in Z ? I[T] = Z.value : I[T] || (I[T] = Z);
                return I
            }
        }
        Array.prototype.forEach || (Array.prototype.forEach = function(I, T) {
            if (void 0 === this || null === this)
                throw TypeError();
            var Z = Object(this)
              , ra = Z.length >>> 0;
            if ("function" !== typeof I)
                throw TypeError();
            var ia;
            for (ia = 0; ia < ra; ia++)
                ia in Z && I.call(T, Z[ia], ia, Z)
        }
        );
        "function" !== typeof Object.getOwnPropertyNames && (Object.getOwnPropertyNames = function(I) {
            if (I !== Object(I))
                throw TypeError("Object.getOwnPropertyNames called on non-object");
            var T = [], Z;
            for (Z in I)
                Object.prototype.hasOwnProperty.call(I, Z) && T.push(Z);
            return T
        }
        );
        var K = this
          , Q = [];
        K.notifier = null;
        K.name = "observableArray";
        K.observing = !0;
        K.changes = [];
        K.observe = function() {
            K.observing = !0;
            1 == arguments.length && (D = arguments[0])
        }
        ;
        K.unobserve = function() {
            K.observing = !1
        }
        ;
        K.toArray = function() {
            return Q.slice(0)
        }
        ;
        K.toJSON = function(I, T) {
            function Z(ma) {
                return '"' + ma.replace(U, function(w) {
                    var pa = fa[w];
                    return "string" === typeof pa ? pa : "\\u" + ("0000" + w.charCodeAt(0).toString(16)).slice(-4)
                }) + '"'
            }
            function ra(ma) {
                return 10 > ma ? "0" + ma : ma
            }
            function ia(ma, w) {
                switch (w) {
                case "string":
                    return Z(ma);
                case "number":
                case "float":
                case "integer":
                case "int":
                    return isFinite(ma) ? ma : "null";
                case "boolean":
                    return ma
                }
                return "null"
            }
            function la(ma, w) {
                w = w[ma];
                var pa = typeof w;
                w && "object" === typeof w && "function" === typeof w.toJSON && (w = w.toJSON(ma),
                pa = typeof w);
                if (/(number|float|int|integer|string|boolean)/.test(pa) || !w && "object" === pa)
                    return ia(w, pa);
                a: {
                    ma = w;
                    switch (Object.prototype.toString.call(ma)) {
                    case "[object Date]":
                        var ka = isFinite(ma.valueOf()) ? ma.getUTCFullYear() + "-" + ra(ma.getUTCMonth() + 1) + "-" + ra(ma.getUTCDate()) + "T" + ra(ma.getUTCHours()) + ":" + ra(ma.getUTCMinutes()) + ":" + ra(ma.getUTCSeconds()) + 'Z"' : "null";
                        break a;
                    case "[object Array]":
                        ka = ma.length;
                        w = [];
                        for (pa = 0; pa < ka; pa++)
                            w.push(la(pa, ma) || "null");
                        ka = "[" + w.join(",") + "]";
                        break a
                    }
                    w = [];
                    for (ka in ma)
                        !Object.prototype.hasOwnProperty.call(ma, ka) || "" != ka && I && -1 === I.indexOf(ka) || (pa = la(ka, ma)) && w.push(Z(ka) + ":" + pa);
                    ka = "{" + w.join(",") + "}"
                }
                return ka
            }
            var aa = Q;
            T && (aa = T);
            var U = /[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g
              , fa = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            };
            return !I && window.JSON && "function" === typeof window.JSON.stringify ? window.JSON.stringify(aa) : la("", {
                "": aa
            })
        }
        ;
        K.defineIndexProperty = function(I) {
            if (!(I in K)) {
                var T = function(ra, ia, la, aa) {
                    var U = ra[ia]
                      , fa = U;
                    la = function() {
                        return fa
                    }
                    ;
                    var ma = function(w) {
                        U = w;
                        if (fa !== U && (w = fa,
                        fa = U,
                        "function" === typeof Y)) {
                            var pa = Q.indexOf(aa)
                              , ka = ""
                              , wa = function(ta, L) {
                                Object.getOwnPropertyNames(ta).forEach(function(O) {
                                    var S = e.type(ta[O]);
                                    "array" == S || "object" == S ? wa(ta[O], L + "." + O) : ia === O && (ka = L + "." + O)
                                })
                            };
                            wa(aa, pa);
                            Y({
                                object: K,
                                type: "update",
                                path: ka,
                                index: pa,
                                name: ia,
                                newValue: U,
                                oldValue: w
                            })
                        }
                        return fa = U
                    };
                    void 0 != ra[ia] && "length" != ia && (Object.defineProperty ? Object.defineProperty(ra, ia, {
                        get: la,
                        set: ma
                    }) : Object.prototype.__defineGetter__ && Object.prototype.__defineSetter__ && (Object.prototype.__defineGetter__.call(ra, ia, la),
                    Object.prototype.__defineSetter__.call(ra, ia, ma)))
                }
                  , Z = function(ra, ia, la) {
                    var aa = e.type(ra);
                    /(number|float|int|integer|string|boolean)/.test(aa) || void 0 !== ra && Object.getOwnPropertyNames(ra).forEach(function(U) {
                        var fa = e.type(ra[U]);
                        "array" == fa || "object" == fa ? (T(ra, U, ia + "." + U, la),
                        Z(ra[U], ia + "." + U, la)) : T(ra, U, ia + "." + U, la)
                    })
                };
                Object.defineProperty(K, I, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        return Q[I]
                    },
                    set: function(ra) {
                        var ia = Q[I];
                        K.toJSON(null, ia) != K.toJSON(null, ra) && (Q[I] = ra,
                        "function" === typeof Y && Y({
                            object: K,
                            type: "update",
                            path: I.toString(),
                            index: I,
                            name: "index",
                            newValue: ra,
                            oldValue: ia
                        }),
                        Z(ra, I, ra))
                    }
                });
                Z(K[I], I, K[I])
            }
        }
        ;
        K.push = function() {
            for (var I, T = 0, Z = arguments.length; T < Z; T++)
                I = Q.length,
                Q.push(arguments[T]),
                K.defineIndexProperty(I),
                "function" === typeof Y && Y({
                    object: K,
                    type: "add",
                    name: "length",
                    index: I,
                    newValue: Q.length,
                    oldValue: I
                });
            return Q.length
        }
        ;
        K.pop = function() {
            if (~Q.length) {
                var I = Q.length - 1
                  , T = Q.pop();
                delete K[I];
                "function" === typeof Y && Y({
                    object: K,
                    type: "delete",
                    name: "length",
                    index: I,
                    newValue: Q.length,
                    oldValue: I
                });
                return T
            }
        }
        ;
        K.unshift = function() {
            for (var I = Q.length, T = 0, Z = arguments.length; T < Z; T++)
                Q.splice(T, 0, arguments[T]),
                K.defineIndexProperty(Q.length - 1);
            "function" === typeof Y && Y({
                object: K,
                type: "add",
                index: 0,
                name: "length",
                newValue: Q.length,
                oldValue: I
            });
            return Q.length
        }
        ;
        K.shift = function() {
            var I = Q.length;
            if (~Q.length) {
                var T = Q.shift();
                0 === Q.length && delete K[I];
                "function" === typeof Y && Y({
                    object: K,
                    type: "delete",
                    index: I,
                    name: "length",
                    newValue: Q.length,
                    oldValue: I
                });
                return T
            }
        }
        ;
        K.slice = function(I, T, Z) {
            I = Q.slice(I, T);
            return new e.jqx.observableArray(I,Z)
        }
        ;
        K.splice = function(I, T, Z) {
            var ra = [];
            I = ~I ? I : Q.length - I;
            for (T = (null == T ? Q.length - I : T) || 0; T--; ) {
                var ia = Q.splice(I, 1)[0];
                ra.push(ia);
                delete K[Q.length];
                "function" === typeof Y && Y({
                    object: K,
                    type: "delete",
                    index: I,
                    name: "length",
                    newValue: -1,
                    oldValue: I
                })
            }
            ia = 2;
            for (var la = arguments.length; ia < la; ia++)
                Q.splice(I, 0, arguments[ia]),
                this.defineIndexProperty(Q.length - 1),
                "function" === typeof Y && Y({
                    object: K,
                    type: "add",
                    index: I,
                    name: "length",
                    newValue: Q.length - 1,
                    oldValue: I
                }),
                I++;
            return new e.jqx.observableArray(ra,Z)
        }
        ;
        Object.defineProperty(K, "length", {
            configurable: !1,
            enumerable: !0,
            get: function() {
                return Q.length
            },
            set: function(I) {
                var T = Number(I);
                if (0 === T % 1 && 0 <= T)
                    T < Q.length ? K.splice(T) : T > Q.length && K.push.apply(K, Array(T - Q.length));
                else
                    throw new RangeError("Invalid array length");
                return I
            }
        });
        e.jqx.observableArray.prototype.fromArray = function(I, T) {
            return new e.jqx.observableArray(I,T)
        }
        ;
        e.jqx.observableArray.prototype.clone = function() {
            var I = new e.jqx.observableArray(Q,D);
            I.observing = K.observing;
            I.changes = K.changes;
            I.notifier = K.notifier;
            return I
        }
        ;
        K.remove = function(I) {
            if (0 > I || I >= K.length)
                throw Error("Invalid index : " + I);
            if (K.hasOwnProperty(I)) {
                var T = K[I];
                K[I] = void 0;
                Q[I] = void 0;
                "function" === typeof Y && Y({
                    object: K,
                    type: "delete",
                    index: I,
                    name: "index",
                    newValue: void 0,
                    oldValue: T
                });
                return !0
            }
            return !1
        }
        ;
        K.concat = function(I, T) {
            I = Q.concat(I);
            return new e.jqx.observableArray(I,T)
        }
        ;
        Object.getOwnPropertyNames(Array.prototype).forEach(function(I) {
            I in K || Object.defineProperty(K, I, {
                configurable: !1,
                enumerable: !0,
                writeable: !1,
                value: function() {
                    var T = K.observing;
                    K.observing = !1;
                    var Z = Q[I].apply(Q, arguments);
                    K.observing = T;
                    return Z
                }
            })
        });
        K.set = function(I, T) {
            if ("string" == e.type(I) && 1 < I.split(".").length) {
                for (var Z = I.split("."), ra = K, ia = 0; ia < Z.length; ia++) {
                    if (0 === ia && Z[ia] >= K.length)
                        throw Error("Invalid Index: " + I);
                    ia < Z.length - 1 ? ra = ra[Z[ia]] : ra[Z[ia]] = T
                }
                return !0
            }
            I >= K.length ? K.push(T) : K[I] = T;
            return !0
        }
        ;
        K.get = function(I) {
            return K[I]
        }
        ;
        u instanceof Array && K.push.apply(K, u);
        var Y = function() {
            K.observing && (arguments && arguments[0] && K.changes.push(arguments[0]),
            D && D.apply(K, arguments),
            K.notifier && K.notifier.apply(K, arguments))
        };
        return K
    }
    ;
    e.jqx.formatDate = function(u, D, B) {
        return e.jqx.dataFormat.formatdate(u, D, B)
    }
    ;
    e.jqx.formatNumber = function(u, D, B) {
        return e.jqx.dataFormat.formatnumber(u, D, B)
    }
    ;
    e.jqx.dataAdapter = function(u, D) {
        void 0 != u && (void 0 !== u.dataFields && (u.datafields = u.dataFields),
        void 0 !== u.dataType && (u.datatype = u.dataType),
        void 0 !== u.localData && (u.localdata = u.localData),
        void 0 !== u.sortColumn && (u.sortcolumn = u.sortColumn),
        void 0 !== u.sortDirection && (u.sortdirection = u.sortDirection),
        void 0 !== u.sortColumns && (u.sortcolumns = u.sortColumns),
        void 0 !== u.sortDirections && (u.sortdirections = u.sortDirections),
        void 0 !== u.sortOrder && (u.sortdirection = u.sortOrder),
        void 0 !== u.formatData && (u.formatdata = u.formatData),
        void 0 !== u.processData && (u.processdata = u.processData),
        void 0 !== u.pageSize && (u.pagesize = u.pageSize),
        void 0 !== u.pageNum && (u.pagenum = u.pageNum),
        void 0 !== u.updateRow && (u.updaterow = u.updateRow),
        void 0 !== u.addRow && (u.addrow = u.addRow),
        void 0 !== u.deleteRow && (u.deleterow = u.deleteRow),
        void 0 !== u.contentType && (u.contenttype = u.contentType),
        void 0 != u.totalRecords && (u.totalrecords = u.totalRecords),
        void 0 != u.loadError && (u.loadError = u.loadError),
        void 0 != u.sortComparer && (u.sortcomparer = u.sortComparer));
        this._source = u;
        this._options = D || {};
        void 0 != u.beforeLoadComplete && (this._options.beforeLoadComplete = this._source.beforeLoadComplete);
        void 0 != u.downloadComplete && (this._options.downloadComplete = this._source.downloadComplete);
        void 0 != u.loadComplete && (this._options.loadComplete = this._source.loadComplete);
        void 0 != u.autoBind && (this._options.downloadComplete = this._source.autoBind);
        void 0 != u.formatData && (this._options.formatData = this._source.formatData);
        void 0 != u.loadError && (this._options.loadError = this._source.loadError);
        void 0 != u.beforeSend && (this._options.beforeSend = this._source.beforeSend);
        void 0 != u.contentType && (this._options.contentType = this._source.contentType);
        void 0 != u.async && (this._options.async = this._source.async);
        void 0 != u.loadServerData && (this._options.loadServerData = this._source.loadServerData);
        void 0 != u.uniqueDataFields && (this._options.uniqueDataFields = this._source.uniqueDataFields);
        this.records = [];
        this._downloadComplete = [];
        this._bindingUpdate = [];
        if (void 0 != u && null != u.localdata && "function" == typeof u.localdata && (D = u.localdata(),
        null != D)) {
            u._localdata = u.localdata;
            var B = this;
            u._localdata.subscribe && (B._oldlocaldata = [],
            u._localdata.subscribe(function(H) {
                var J = function(K) {
                    return e.isArray(K) ? e.makeArray(J(e(K))) : e.extend(!0, {}, K)
                };
                if (0 == B.suspendKO || void 0 == B.suspendKO || 0 == B._oldlocaldata.length)
                    B._oldlocaldata = J(H)
            }, u._localdata, "beforeChange"),
            u._localdata.subscribe(function(H) {
                if (0 == B.suspendKO || void 0 == B.suspendKO) {
                    var J = "";
                    B._oldrecords = B.records;
                    0 == B._oldlocaldata.length && (u.localdata = u._localdata());
                    0 == B._oldlocaldata.length ? J = "change" : H && (B._oldlocaldata.length == H.length && (J = "update"),
                    B._oldlocaldata.length > H.length && (J = "remove"),
                    B._oldlocaldata.length < H.length && (J = "add"));
                    B.dataBind(null, J)
                }
            }, u._localdata, "change"),
            B._knockoutdatasource = !0);
            u.localdata = D
        }
        1 == this._options.autoBind && this.dataBind()
    }
    ;
    e.jqx.dataAdapter.prototype = {
        getrecords: function() {
            return this.records
        },
        beginUpdate: function() {
            this.isUpdating = !0
        },
        endUpdate: function(u) {
            this.isUpdating = !1;
            0 != u && (this._changedrecords && 0 < this._changedrecords.length ? (this.callBindingUpdate("update"),
            this._changedrecords = []) : this.dataBind(null, ""))
        },
        formatDate: function(u, D, B) {
            return e.jqx.dataFormat.formatdate(u, D, B)
        },
        formatNumber: function(u, D, B) {
            return e.jqx.dataFormat.formatnumber(u, D, B)
        },
        dataBind: function(u, D) {
            if (1 != this.isUpdating) {
                var B = this._source;
                if (B) {
                    B.generatedfields && (B.datafields = null,
                    B.generatedfields = null);
                    e.jqx.dataFormat.datescache = [];
                    null != B.dataFields && (B.datafields = B.dataFields);
                    void 0 == B.recordstartindex && (B.recordstartindex = 0);
                    void 0 == B.recordendindex && (B.recordendindex = 0);
                    void 0 == B.loadallrecords && (B.loadallrecords = !0);
                    void 0 == B.root && (B.root = "");
                    void 0 == B.record && (B.record = "");
                    void 0 != B.sort && (this.sort = B.sort);
                    this.filter = void 0 != B.filter ? B.filter : null;
                    void 0 != B.sortcolumn && (this.sortcolumn = B.sortcolumn);
                    void 0 != B.sortdirection && (this.sortdirection = B.sortdirection);
                    void 0 != B.sortcolumns && (this.sortcolumns = B.sortcolumns);
                    void 0 != B.sortdirections && (this.sortdirections = B.sortdirections);
                    void 0 != B.sortcomparer && (this.sortcomparer = B.sortcomparer);
                    this.records = [];
                    var H = this._options || {};
                    this.virtualmode = void 0 != H.virtualmode ? H.virtualmode : !1;
                    this.totalrecords = void 0 != H.totalrecords ? H.totalrecords : 0;
                    this.pageable = void 0 != H.pageable ? H.pageable : !1;
                    this.pagesize = void 0 != H.pagesize ? H.pagesize : 0;
                    this.pagenum = void 0 != H.pagenum ? H.pagenum : 0;
                    this.cachedrecords = void 0 != H.cachedrecords ? H.cachedrecords : [];
                    this.originaldata = [];
                    this.recordids = [];
                    this.updaterow = void 0 != H.updaterow ? H.updaterow : null;
                    this.addrow = void 0 != H.addrow ? H.addrow : null;
                    this.deleterow = void 0 != H.deleterow ? H.deleterow : null;
                    this.cache = void 0 != H.cache ? H.cache : !1;
                    this.unboundmode = !1;
                    void 0 != B.formatdata && (H.formatData = B.formatdata);
                    void 0 != B.data && (void 0 == H.data && (H.data = {}),
                    e.extend(H.data, B.data));
                    void 0 != B.mapChar && (B.mapchar = B.mapChar);
                    this.mapChar = void 0 != B.mapchar ? B.mapchar ? B.mapchar : ">" : H.mapChar ? H.mapChar : ">";
                    if (H.unboundmode || B.unboundmode)
                        this.unboundmode = H.unboundmode || B.unboundmode;
                    void 0 != B.cache && (this.cache = B.cache);
                    if (this.koSubscriptions)
                        for (u = 0; u < this.koSubscriptions.length; u++)
                            this.koSubscriptions[u].dispose();
                    this.koSubscriptions = [];
                    0 > this.pagenum && (this.pagenum = 0);
                    var J = this
                      , K = B.datatype;
                    if ("csv" === B.datatype || "tab" === B.datatype || "tsv" === B.datatype || "text" == B.datatype)
                        K = "text";
                    u = void 0 != H.async ? H.async : !0;
                    void 0 != B.async && (u = B.async);
                    if ("xlsx" === K && B.url && (B.localdata = [],
                    K = "array",
                    window.jqxDataSource)) {
                        var Q = new window.jqxDataSource({
                            dataSource: B.url,
                            async: !1,
                            dataFields: B.datafields
                        });
                        Q.notify(function() {
                            B.url = null;
                            B.localdata = Q.boundSource;
                            B.datatype = "array";
                            J.dataBind()
                        })
                    }
                    switch (K) {
                    default:
                        if (void 0 == B.localdata && B.length)
                            for (B.localdata = [],
                            u = 0; u < B.length; u++)
                                B.localdata[B.localdata.length] = B[u],
                                B[u].uid = u;
                        B.beforeprocessing && e.isFunction(B.beforeprocessing) && B.beforeprocessing(B.localdata);
                        var Y = B.localdata.length;
                        this.totalrecords = this.virtualmode ? B.totalrecords || Y : Y;
                        if (this.unboundmode) {
                            this.totalrecords = this.unboundmode ? B.totalrecords || Y : Y;
                            var I = B.datafields ? B.datafields.length : 0;
                            if (0 < I)
                                for (u = 0; u < this.totalrecords; u++) {
                                    var T = {};
                                    for (Y = 0; Y < I; Y++)
                                        T[B.datafields[Y].name] = "";
                                    T.uid = u;
                                    B.localdata[B.localdata.length] = T
                                }
                        }
                        void 0 == this.totalrecords && (this.totalrecords = 0);
                        I = B.datafields ? B.datafields.length : 0;
                        var Z = function(U, fa) {
                            for (var ma = {}, w = 0; w < fa; w++) {
                                var pa = B.datafields ? B.datafields[w] : {}
                                  , ka = "";
                                if (void 0 != pa && null != pa) {
                                    if (pa.map) {
                                        if (e.isFunction(pa.map))
                                            ka = pa.map(U);
                                        else if (ka = pa.map.split(J.mapChar),
                                        0 < ka.length) {
                                            for (var wa = U, ta = 0; ta < ka.length; ta++)
                                                wa && (wa = wa[ka[ta]]);
                                            ka = wa
                                        } else
                                            ka = U[pa.map];
                                        void 0 != ka && null != ka ? ka = ka.toString() : void 0 == ka && null != ka && (ka = "")
                                    }
                                    wa = !1;
                                    "" == ka && (wa = !0,
                                    ka = U[pa.name],
                                    void 0 != ka && null != ka && (B._localdata && ka.subscribe ? ka = ka() : "array" != pa.type && "date" !== pa.type && (ka = ka.toString())));
                                    "[object Object]" == ka && pa.map && wa && (ka = "");
                                    ka = J.getvaluebytype(ka, pa);
                                    void 0 != pa.displayname ? ma[pa.displayname] = ka : ma[pa.name] = ka
                                }
                            }
                            return ma
                        };
                        if (B._localdata)
                            if (this._changedrecords = [],
                            this.records = [],
                            u = B._localdata(),
                            e.each(u, function(U, fa) {
                                if ("string" === typeof fa)
                                    J.records.push(fa);
                                else {
                                    var ma = {}
                                      , w = 0
                                      , pa = this;
                                    e.each(this, function(ka, wa) {
                                        wa = null;
                                        var ta = "string"
                                          , L = ka;
                                        if (0 < I) {
                                            for (var O = !1, S = !1, ha = 0; ha < I; ha++) {
                                                var na = B.datafields[ha];
                                                if (void 0 != na && na.name == ka) {
                                                    O = !0;
                                                    wa = na.map;
                                                    ta = na.type;
                                                    L = na.name;
                                                    break
                                                } else if (void 0 != na && na.map && 0 <= na.map.indexOf(ka)) {
                                                    O = !0;
                                                    wa = na.map;
                                                    ta = na.type;
                                                    L = na.name;
                                                    S = !0;
                                                    na = pa[ka];
                                                    if (null != wa)
                                                        if (na = wa.split(J.mapChar),
                                                        0 < na.length) {
                                                            for (var ja = pa, sa = 0; sa < na.length; sa++)
                                                                ja = ja[na[sa]];
                                                            na = ja
                                                        } else
                                                            na = pa[wa];
                                                    "string" != ta && (na = J.getvaluebytype(na, {
                                                        type: ta
                                                    }));
                                                    ma[L] = na;
                                                    void 0 != ma[L] && (w += ma[L].toString().length + ma[L].toString().substr(0, 1))
                                                }
                                            }
                                            if (!O || S)
                                                return !0
                                        }
                                        if (e.isFunction(pa[ka]))
                                            na = pa[ka](),
                                            "string" != ta && (na = J.getvaluebytype(na, {
                                                type: ta
                                            })),
                                            ma[ka] = na,
                                            pa[ka].subscribe && (J.koSubscriptions[J.koSubscriptions.length] = pa[ka].subscribe(function(va) {
                                                ma[ka] = va;
                                                J._changedrecords.push({
                                                    index: U,
                                                    oldrecord: ma,
                                                    record: ma
                                                });
                                                if (!J.isUpdating)
                                                    return J.callBindingUpdate("update"),
                                                    J._changedrecords = [],
                                                    !1
                                            }));
                                        else {
                                            na = pa[ka];
                                            if (null != wa)
                                                if (na = wa.split(J.mapChar),
                                                0 < na.length) {
                                                    ja = pa;
                                                    for (sa = 0; sa < na.length; sa++)
                                                        ja = ja[na[sa]];
                                                    na = ja
                                                } else
                                                    na = pa[wa];
                                            "string" != ta && (na = J.getvaluebytype(na, {
                                                type: ta
                                            }));
                                            ma[L] = na;
                                            void 0 != ma[L] && (w += ma[L].toString().length + ma[L].toString().substr(0, 1))
                                        }
                                    });
                                    fa = J.getid(B.id, pa, U);
                                    ma.uid = fa;
                                    J.records.push(ma);
                                    ma._koindex = w;
                                    J._oldrecords && (fa = J.records.length - 1,
                                    "update" == D && J._oldrecords[fa]._koindex != w && J._changedrecords.push({
                                        index: fa,
                                        oldrecord: J._oldrecords[fa],
                                        record: ma
                                    }))
                                }
                            }),
                            "add" == D)
                                for (Y = J.records.length,
                                u = 0; u < Y; u++) {
                                    T = J.records[u];
                                    for (var ra = !1, ia = 0; ia < J._oldrecords.length; ia++)
                                        if (J._oldrecords[ia]._koindex === T._koindex) {
                                            ra = !0;
                                            break
                                        }
                                    ra || J._changedrecords.push({
                                        index: u,
                                        oldrecord: null,
                                        record: T,
                                        position: 0 != u ? "last" : "first"
                                    })
                                }
                            else {
                                if ("remove" == D)
                                    for (Y = J._oldrecords.length,
                                    u = 0; u < Y; u++)
                                        T = J._oldrecords[u],
                                        J.records[u] ? J.records[u]._koindex != T._koindex && J._changedrecords.push({
                                            index: u,
                                            oldrecord: T,
                                            record: null
                                        }) : J._changedrecords.push({
                                            index: u,
                                            oldrecord: T,
                                            record: null
                                        })
                            }
                        else if (e.isArray(B.localdata))
                            0 == I ? (la = 0,
                            aa = [],
                            e.each(B.localdata, function(U, fa) {
                                var ma = Object(this);
                                if ("string" === typeof fa)
                                    return J.records = B.localdata,
                                    !1;
                                fa = J.getid(B.id, ma, U);
                                "object" === typeof fa && (fa = U);
                                ma.uid = fa;
                                if (0 == U) {
                                    for (var w in this)
                                        la++,
                                        U = e.type(this[w]),
                                        aa.push({
                                            name: w,
                                            type: U
                                        });
                                    I = la;
                                    B.datafields = aa;
                                    B.generatedfields = aa
                                }
                                0 < I ? (ma = Z(ma, I),
                                ma.uid = fa,
                                J.records[J.records.length] = ma) : J.records[J.records.length] = ma
                            })) : e.each(B.localdata, function(U) {
                                var fa = Z(this, I)
                                  , ma = J.getid(B.id, fa, U);
                                "object" === typeof ma && (ma = U);
                                U = Object(fa);
                                U.uid = ma;
                                J.records[J.records.length] = U
                            });
                        else {
                            this.records = [];
                            var la = 0
                              , aa = [];
                            e.each(B.localdata, function(U) {
                                U = J.getid(B.id, this, U);
                                if (0 == I && !("string" === typeof this || this instanceof String)) {
                                    for (var fa in this) {
                                        la++;
                                        var ma = e.type(this[fa]);
                                        aa.push({
                                            name: fa,
                                            type: ma
                                        })
                                    }
                                    I = la;
                                    B.datafields = aa;
                                    B.generatedfields = aa
                                }
                                0 < I ? (fa = Z(this, I),
                                fa.uid = U,
                                J.records[J.records.length] = fa) : (this.uid = U,
                                J.records[J.records.length] = this)
                            })
                        }
                        this.originaldata = B.localdata;
                        this.cachedrecords = this.records;
                        this.addForeignValues(B);
                        H.uniqueDataFields && (this.cachedrecords = this.records = u = this.getUniqueRecords(this.records, H.uniqueDataFields));
                        H.beforeLoadComplete && (u = H.beforeLoadComplete(J.records, this.originaldata),
                        void 0 != u && (J.records = u,
                        J.cachedrecords = u));
                        H.autoSort && H.autoSortField && (u = Object.prototype.toString,
                        Object.prototype.toString = "function" == typeof field ? field : function() {
                            return this[H.autoSortField]
                        }
                        ,
                        J.records.sort(function(U, fa) {
                            void 0 === U && (U = null);
                            void 0 === fa && (fa = null);
                            if (null === U && null === fa)
                                return 0;
                            if (null === U && null !== fa)
                                return 1;
                            if (null !== U && null === fa)
                                return -1;
                            U = U.toString();
                            fa = fa.toString();
                            if (null === U && null === fa)
                                return 0;
                            if (null === U && null !== fa)
                                return 1;
                            if (null !== U && null === fa)
                                return -1;
                            if (e.jqx.dataFormat.isNumber(U) && e.jqx.dataFormat.isNumber(fa) || e.jqx.dataFormat.isDate(U) && e.jqx.dataFormat.isDate(fa))
                                return U < fa ? -1 : U > fa ? 1 : 0;
                            e.jqx.dataFormat.isNumber(U) || e.jqx.dataFormat.isNumber(fa) || (U = String(U).toLowerCase(),
                            fa = String(fa).toLowerCase());
                            return U < fa ? -1 : U > fa ? 1 : 0
                        }),
                        Object.prototype.toString = u);
                        J.loadedData = B.localdata;
                        J.buildHierarchy();
                        e.isFunction(H.loadComplete) && H.loadComplete(B.localdata, J.records);
                        break;
                    case "json":
                    case "jsonp":
                    case "xml":
                    case "xhtml":
                    case "script":
                    case "text":
                    case "ics":
                        if (null != B.localdata && !B.url) {
                            e.isFunction(B.beforeprocessing) && B.beforeprocessing(B.localdata);
                            "xml" === B.datatype ? J.loadxml(B.localdata, B.localdata, B) : "text" === K ? J.loadtext(B.localdata, B) : "ics" === K ? J.loadics(B.localdata, B) : J.loadjson(B.localdata, B.localdata, B);
                            J.addForeignValues(B);
                            H.uniqueDataFields && (u = J.getUniqueRecords(J.records, H.uniqueDataFields),
                            J.records = u,
                            J.cachedrecords = u);
                            H.beforeLoadComplete && (u = H.beforeLoadComplete(J.records, this.originaldata),
                            void 0 != u && (J.records = u,
                            J.cachedrecords = u));
                            J.loadedData = B.localdata;
                            J.buildHierarchy.call(J);
                            e.isFunction(H.loadComplete) && H.loadComplete(B.localdata, J.records);
                            J.callBindingUpdate(D);
                            return
                        }
                        Y = void 0 != H.data ? H.data : {};
                        B.processdata && B.processdata(Y);
                        e.isFunction(H.processData) && H.processData(Y);
                        e.isFunction(H.formatData) && (T = H.formatData(Y),
                        void 0 != T && (Y = T));
                        T = "application/x-www-form-urlencoded";
                        H.contentType && (T = H.contentType);
                        ra = "GET";
                        B.type && (ra = B.type);
                        H.type && (ra = H.type);
                        ia = K;
                        "ics" == K && (ia = "text");
                        B.url && 0 < B.url.length ? e.isFunction(H.loadServerData) ? J._requestData(Y, B, H) : this.xhr = e.jqx.data.ajax({
                            dataType: ia,
                            cache: this.cache,
                            type: ra,
                            url: B.url,
                            async: u,
                            timeout: B.timeout,
                            contentType: T,
                            data: Y,
                            success: function(U, fa, ma) {
                                if (e.isFunction(B.beforeprocessing)) {
                                    var w = B.beforeprocessing(U, fa, ma);
                                    void 0 != w && (U = w)
                                }
                                e.isFunction(H.downloadComplete) && (w = H.downloadComplete(U, fa, ma),
                                void 0 != w && (U = w));
                                null == U ? (J.records = [],
                                J.cachedrecords = [],
                                J.originaldata = [],
                                J.callDownloadComplete(),
                                e.isFunction(H.loadComplete) && H.loadComplete([])) : (w = U,
                                U.records && (w = U.records),
                                void 0 != U.totalrecords ? B.totalrecords = U.totalrecords : void 0 != U.totalRecords && (B.totalrecords = U.totalRecords),
                                "xml" === B.datatype ? J.loadxml(null, w, B) : "text" === K ? J.loadtext(w, B) : "ics" === K ? J.loadics(w, B) : J.loadjson(null, w, B),
                                J.addForeignValues(B),
                                H.uniqueDataFields && (w = J.getUniqueRecords(J.records, H.uniqueDataFields),
                                J.records = w,
                                J.cachedrecords = w),
                                H.beforeLoadComplete && (w = H.beforeLoadComplete(J.records, U),
                                void 0 != w && (J.records = w,
                                J.cachedrecords = w)),
                                J.loadedData = U,
                                J.buildHierarchy.call(J),
                                J.callDownloadComplete(),
                                e.isFunction(H.loadComplete) && H.loadComplete(U, fa, ma, J.records))
                            },
                            error: function(U, fa, ma) {
                                e.isFunction(B.loaderror) && B.loaderror(U, fa, ma);
                                e.isFunction(H.loadError) && H.loadError(U, fa, ma);
                                J.callDownloadComplete()
                            },
                            beforeSend: function(U, fa) {
                                e.isFunction(H.beforeSend) && H.beforeSend(U, fa);
                                e.isFunction(B.beforesend) && B.beforesend(U, fa)
                            }
                        }) : (J.buildHierarchy([]),
                        J.callDownloadComplete(),
                        e.isFunction(H.loadComplete) && (Q || (Q = {}),
                        H.loadComplete(Q)))
                    }
                    this.callBindingUpdate(D)
                }
            }
        },
        buildHierarchy: function(u) {
            var D = this._source
              , B = [];
            if (D.datafields) {
                if (D.hierarchy && !D.hierarchy.reservedNames)
                    D.hierarchy.reservedNames = {
                        leaf: "leaf",
                        parent: "parent",
                        expanded: "expanded",
                        checked: "checked",
                        selected: "selected",
                        level: "level",
                        icon: "icon",
                        data: "data"
                    };
                else if (D.hierarchy) {
                    var H = D.hierarchy.reservedNames;
                    H.leaf || (H.leaf = "leaf");
                    H.parent || (H.parent = "parent");
                    H.expanded || (H.expanded = "expanded");
                    H.checked || (H.checked = "checked");
                    H.selected || (H.selected = "selected");
                    H.level || (H.level = "level");
                    H.data || (H.data = "data")
                }
                if (D.hierarchy) {
                    var J = this;
                    H = D.hierarchy.reservedNames;
                    if (D.hierarchy.root) {
                        if ("xml" == D.dataType)
                            return this.hierarchy = B = this.getRecordsHierarchy("uid", "parentuid", "records", null, u);
                        this.hierarchy = this.records;
                        var K = D.hierarchy.root;
                        for (B = 0; B < this.records.length; B++)
                            if (u = this.records[B]) {
                                var Q = function(T) {
                                    if (D.hierarchy.record)
                                        T.records = T[K][D.hierarchy.record];
                                    else {
                                        var Z = K.split(J.mapChar);
                                        if (1 < Z.length) {
                                            for (var ra = T, ia = 0; ia < Z.length; ia++)
                                                void 0 != ra && (ra = ra[Z[ia]]);
                                            Z = ra
                                        } else
                                            Z = T[K];
                                        T.records = Z
                                    }
                                    if (null == T.records || T.records && 0 == T.records.length)
                                        T[H.leaf] = !0
                                };
                                Q(u);
                                u[H.level] = 0;
                                var Y = this.getid(D.id, u, B);
                                u.uid = Y;
                                u[H.parent] = null;
                                u[H.data] = u;
                                void 0 === u[H.expanded] && (u[H.expanded] = !1);
                                var I = function(T, Z) {
                                    if (Z)
                                        for (var ra = 0; ra < Z.length; ra++) {
                                            var ia = Z[ra];
                                            if (ia) {
                                                Q(ia);
                                                ia[H.level] = T[H.level] + 1;
                                                ia[H.parent] = T;
                                                ia[H.data] = ia;
                                                var la = J.getid(D.id, ia, ra);
                                                ia.uid = la == ra && null == D.id ? T.uid + "_" + la : la;
                                                void 0 === ia[H.expanded] && (ia[H.expanded] = !1);
                                                I(ia, ia.records)
                                            }
                                        }
                                    else
                                        T.records = []
                                };
                                I(u, u.records)
                            }
                        return this.hierarchy
                    }
                    if (D.hierarchy.keyDataField && D.hierarchy.parentDataField)
                        return this.hierarchy = B = this.getRecordsHierarchy(D.hierarchy.keyDataField.name, D.hierarchy.parentDataField.name, "records", null, u);
                    if (D.hierarchy.groupingDataFields) {
                        Y = [];
                        for (B = 0; B < D.hierarchy.groupingDataFields.length; B++)
                            Y.push(D.hierarchy.groupingDataFields[B].name);
                        return this.hierarchy = B = this.getGroupedRecords(Y, "records", "label", null, "data", null, "parent", u)
                    }
                }
            }
        },
        addRecord: function(u, D, B, H) {
            var J = this
              , K = function() {
                return {
                    leaf: "leaf",
                    parent: "parent",
                    expanded: "expanded",
                    checked: "checked",
                    selected: "selected",
                    level: "level",
                    icon: "icon",
                    data: "data"
                }
            };
            if (void 0 != u)
                if (void 0 != B) {
                    if (0 < this.hierarchy.length) {
                        var Q = function(Y) {
                            if (Y)
                                for (var I = 0; I < Y.length; I++) {
                                    var T = Y[I];
                                    if (T.uid == B)
                                        return Y = J._source && J._source.hierarchy ? J._source.hierarchy.reservedNames : null,
                                        null == Y && (Y = K()),
                                        u[Y.parent] = T,
                                        u[Y.level] = T[Y.level] + 1,
                                        T.records || (T.records = []),
                                        T[Y.leaf] = !1,
                                        "last" == D ? T.records.push(u) : "number" === typeof D && isFinite(D) ? T.records.splice(D, 0, u) : T.records.splice(0, 0, u),
                                        !0;
                                    T.records && Q(T.records)
                                }
                        };
                        Q(this.hierarchy)
                    }
                } else
                    return this.hierarchy && 0 <= this.hierarchy.length && (this._source.hierarchy || H) ? (H = J._source && J._source.hierarchy ? J._source.hierarchy.reservedNames : null,
                    null == H && (H = K()),
                    u[H.level] = 0,
                    "last" == D ? this.hierarchy.push(u) : "number" === typeof D && isFinite(D) ? this.hierarchy.splice(D, 0, u) : this.hierarchy.splice(0, 0, u)) : "last" == D ? this.records.push(u) : "number" === typeof D && isFinite(D) ? this.records.splice(D, 0, u) : this.records.splice(0, 0, u),
                    !0;
            return !1
        },
        deleteRecord: function(u) {
            var D = this;
            if (0 < this.hierarchy.length) {
                var B = function(J) {
                    if (J)
                        for (var K = 0; K < J.length; K++) {
                            var Q = J[K];
                            if (Q.uid == u) {
                                J.splice(K, 1);
                                D.recordids[u] && delete D.recordids[u];
                                var Y = function(I) {
                                    for (var T = 0; T < I.length; T++) {
                                        for (var Z = I[T].uid, ra = 0; ra < D.records.length; ra++)
                                            if (D.records[ra].uid == Z) {
                                                D.records.splice(ra, 1);
                                                break
                                            }
                                        I[T].records && Y(I[T].records)
                                    }
                                };
                                Q.records && Y(Q.records);
                                for (J = 0; J < D.records.length; J++)
                                    if (Q = D.records[J],
                                    Q.uid == u) {
                                        D.records.splice(J, 1);
                                        break
                                    }
                                return !0
                            }
                            Q.records && B(Q.records)
                        }
                };
                B(this.hierarchy)
            } else
                for (var H = 0; H < this.records.length; H++)
                    if (this.records[H].uid == u)
                        return this.records.splice(H, 1),
                        !0;
            return !1
        },
        addForeignValues: function(u) {
            for (var D = u.datafields ? u.datafields.length : 0, B = 0; B < D; B++) {
                var H = u.datafields[B];
                if (void 0 != H)
                    if (void 0 != H.values) {
                        void 0 == H.value && (H.value = H.name);
                        void 0 == H.values.value && (H.values.value = H.value);
                        var J = [];
                        if (this.pageable && this.virtualmode) {
                            var K = this.pagenum * this.pagesize;
                            var Q = K + this.pagesize;
                            Q > this.totalrecords && (Q = this.totalrecords)
                        } else
                            this.virtualmode ? (K = u.recordstartindex,
                            Q = u.recordendindex,
                            Q > this.totalrecords && (Q = this.totalrecords)) : (K = 0,
                            Q = this.records.length);
                        for (; K < Q; K++) {
                            var Y = this.records[K]
                              , I = H.name
                              , T = Y[H.value];
                            if (void 0 != J[T])
                                Y[I] = J[T];
                            else
                                for (var Z = 0; Z < H.values.source.length; Z++) {
                                    var ra = H.values.source[Z]
                                      , ia = ra[H.values.value];
                                    void 0 == ia && (ia = ra.uid);
                                    if (ia == T) {
                                        Z = ra[H.values.name];
                                        Y[I] = Z;
                                        J[T] = Z;
                                        break
                                    }
                                }
                        }
                    } else if (void 0 != H.value)
                        for (K = 0; K < this.records.length; K++)
                            Y = this.records[K],
                            Y[H.name] = Y[H.value]
            }
        },
        abort: function() {
            this.xhr && 4 != this.xhr.readyState && (this.xhr.abort(),
            this.callDownloadComplete())
        },
        _requestData: function(u, D, B) {
            var H = this;
            B.loadServerData(u, D, function(J) {
                J.totalrecords && (D.totalrecords = J.totalrecords,
                H.totalrecords = J.totalrecords);
                J.records && (H.records = J.records,
                H.cachedrecords = J.records);
                H.addForeignValues(D);
                if (B.uniqueDataFields) {
                    var K = H.getUniqueRecords(H.records, B.uniqueDataFields);
                    H.records = K;
                    H.cachedrecords = K
                }
                B.beforeLoadComplete && (K = B.beforeLoadComplete(H.records, J),
                void 0 != K && (H.records = K,
                H.cachedrecords = K));
                for (K = 0; K < H.records.length; K++) {
                    var Q = H.records[K];
                    void 0 != Q && void 0 == Q.uid && (Q.uid = H.getid(D.id, Q, K))
                }
                H.buildHierarchy.call(H);
                e.isFunction(B.loadComplete) && B.loadComplete(J);
                H.callDownloadComplete()
            })
        },
        getUniqueRecords: function(u, D) {
            if (u && D)
                for (var B = u.length, H = D.length, J = [], K = [], Q = 0; Q < B; Q++) {
                    var Y = u[Q]
                      , I = "";
                    if (void 0 != Y) {
                        for (var T = 0; T < H; T++) {
                            var Z = D[T];
                            void 0 !== Y[Z] && (I += Y[Z] + "_")
                        }
                        !K[I] && I && (J[J.length] = Y);
                        K[I] = !0
                    }
                }
            return J
        },
        getAggregatedData: function(u, D, B, H) {
            var J = B;
            J || (J = this.records);
            var K = {};
            B = [];
            var Q = J.length;
            if (0 != Q && void 0 != Q) {
                for (var Y = 0; Y < Q; Y++)
                    for (var I = J[Y], T = 0; T < u.length; T++) {
                        var Z = u[T]
                          , ra = I[Z.name];
                        if (Z.aggregates) {
                            K[Z.name] = K[Z.name] || {};
                            B[Z.name] = B[Z.name] || 0;
                            B[Z.name]++;
                            var ia = function(aa) {
                                for (var U in aa) {
                                    var fa = K[Z.name][U];
                                    null == fa && (fa = K[Z.name][U] = 0);
                                    e.isFunction(aa[U]) && (fa = aa[U](fa, ra, Z.name, I, H));
                                    K[Z.name][U] = fa
                                }
                            }
                              , la = parseFloat(ra);
                            (la = isNaN(la) ? !1 : !0) && (ra = parseFloat(ra));
                            "number" === typeof ra && isFinite(ra) ? e.each(Z.aggregates, function() {
                                var aa = K[Z.name][this];
                                null == aa && (aa = 0,
                                "min" == this && (aa = 9999999999999),
                                "max" == this && (aa = -9999999999999));
                                if ("sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this)
                                    aa += parseFloat(ra);
                                else if ("product" == this)
                                    aa = 0 == Y ? parseFloat(ra) : aa * parseFloat(ra);
                                else if ("min" == this)
                                    aa = Math.min(aa, parseFloat(ra));
                                else if ("max" == this)
                                    aa = Math.max(aa, parseFloat(ra));
                                else if ("count" == this)
                                    aa++;
                                else if ("object" == typeof this) {
                                    ia(this);
                                    return
                                }
                                K[Z.name][this] = aa
                            }) : e.each(Z.aggregates, function() {
                                if ("min" == this || "max" == this || "count" == this || "product" == this || "sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this) {
                                    if (null === ra)
                                        return !0;
                                    var aa = K[Z.name][this];
                                    null == aa && (aa = 0);
                                    K[Z.name][this] = aa;
                                    return !0
                                }
                                "object" == typeof this && ia(this)
                            })
                        }
                    }
                for (T = 0; T < u.length; T++)
                    Z = u[T],
                    K[Z.name] || (K[Z.name] = {},
                    e.each(Z.aggregates, function(aa) {
                        K[Z.name][this] = 0
                    })),
                    void 0 != K[Z.name].avg ? (ra = K[Z.name].avg,
                    la = B[Z.name],
                    K[Z.name].avg = 0 === la || void 0 == la ? 0 : ra / la) : void 0 != K[Z.name].count && (K[Z.name].count = Q),
                    (K[Z.name].stdev || K[Z.name].stdevp || K[Z.name]["var"] || K[Z.name].varp) && e.each(Z.aggregates, function(aa) {
                        if ("stdev" == this || "var" == this || "varp" == this || "stdevp" == this) {
                            for (var U = K[Z.name][this] / Q, fa = aa = 0; fa < Q; fa++) {
                                var ma = J[fa][Z.name];
                                aa += (ma - U) * (ma - U)
                            }
                            U = "stdevp" == this || "varp" == this ? Q : Q - 1;
                            0 == U && (U = 1);
                            if ("var" == this || "varp" == this)
                                K[Z.name][this] = aa / U;
                            else if ("stdevp" == this || "stdev" == this)
                                K[Z.name][this] = Math.sqrt(aa / U)
                        }
                    }),
                    Z.formatStrings && e.each(Z.aggregates, function(aa) {
                        if (aa = Z.formatStrings[aa])
                            if ("min" == this || "max" == this || "count" == this || "product" == this || "sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this) {
                                var U = K[Z.name][this];
                                K[Z.name][this] = e.jqx.dataFormat.formatnumber(U, aa, D)
                            } else if ("object" == typeof this)
                                for (var fa in this)
                                    U = K[Z.name][fa],
                                    K[Z.name][fa] = e.jqx.dataFormat.formatnumber(U, aa, D)
                    });
                return K
            }
        },
        bindDownloadComplete: function(u, D) {
            this._downloadComplete[this._downloadComplete.length] = {
                id: u,
                func: D
            }
        },
        unbindDownloadComplete: function(u) {
            for (var D = 0; D < this._downloadComplete.length; D++)
                if (this._downloadComplete[D].id == u) {
                    this._downloadComplete[D].func = null;
                    this._downloadComplete.splice(D, 1);
                    break
                }
        },
        callDownloadComplete: function() {
            for (var u = 0; u < this._downloadComplete.length; u++) {
                var D = this._downloadComplete[u];
                null != D.func && D.func()
            }
        },
        setSource: function(u) {
            this._source = u
        },
        generatekey: function() {
            var u = function() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
            };
            return u() + u() + "-" + u() + "-" + u() + "-" + u() + "-" + u() + u() + u()
        },
        getGroupedRecords: function(u, D, B, H, J, K, Q, Y, I) {
            I || (I = 0);
            for (var T = [], Z = 0; Z < u.length; Z++)
                T[Z] = this.generatekey();
            D || (D = "items");
            B || (B = "group");
            J || (J = "record");
            Q || (Q = "parentItem");
            void 0 === K && (K = "value");
            var ra = []
              , ia = 0
              , la = []
              , aa = u.length;
            Y || (Y = this.records);
            for (var U = Y.length, fa = function(S) {
                H && e.each(H, function() {
                    this.name && this.map && (S[this.map] = S[this.name])
                });
                return S
            }, ma = 0; ma < U; ma++) {
                var w = fa(Y[ma])
                  , pa = []
                  , ka = 0;
                for (Z = 0; Z < aa; Z++) {
                    var wa = w[u[Z]];
                    null != wa && (pa[ka++] = {
                        value: wa,
                        hash: T[Z]
                    })
                }
                if (pa.length != aa)
                    break;
                Z = null;
                ka = "";
                wa = -1;
                for (var ta = 0; ta < pa.length; ta++) {
                    wa++;
                    var L = pa[ta].value;
                    ka = ka + "_" + pa[ta].hash + "_" + L;
                    if (void 0 != la[ka] && null != la[ka])
                        Z = la[ka];
                    else {
                        if (null == Z) {
                            Z = {
                                level: 0
                            };
                            Z[Q] = null;
                            Z[B] = L;
                            Z[J] = w;
                            Z.expanded = void 0 !== w.expanded ? w.expanded : !1;
                            K && (Z[K] = w[K]);
                            Z[D] = [];
                            L = ra.length + I;
                            if (!this._source.id || "number" === typeof w.uid || isFinite(w.uid))
                                L = "Row" + L;
                            Z.uid = L;
                            ra[ia++] = Z
                        } else {
                            var O = {
                                level: Z.level + 1
                            };
                            O[Q] = Z;
                            O[B] = L;
                            O[D] = [];
                            O[J] = w;
                            O.expanded = void 0 !== w.expanded ? w.expanded : !1;
                            K && (O[K] = w[K]);
                            O.uid = Z.uid + "_" + Z[D].length;
                            Z = Z[D][Z[D].length] = O
                        }
                        la[ka] = Z
                    }
                }
                w && (w.leaf = !0);
                null != Z ? (null == this._source.id && (void 0 == w.uid ? w.uid = Z.uid + "_" + Z[D].length : -1 == w.uid.toString().indexOf(Z.uid) && (w.uid = Z.uid + "_" + w.uid)),
                w[Q] = Z,
                w.level = Z.level + 1,
                Z[D][Z[D].length] = w) : void 0 == w.uid && (w.uid = this.generatekey())
            }
            return ra
        },
        getRecordsHierarchy: function(u, D, B, H, J) {
            var K = []
              , Q = this.records;
            J && (Q = J);
            if (0 == this.records.length)
                return null;
            var Y = null != B ? B : "items";
            B = [];
            J = Q.length;
            for (var I = this._source && this._source.hierarchy ? this._source.hierarchy.reservedNames : null, T = function(w) {
                H && e.each(H, function() {
                    this.name && this.map && (w[this.map] = w[this.name])
                });
                return w
            }, Z = 0; Z < J; Z++) {
                var ra = e.extend({}, Q[Z])
                  , ia = ra[D]
                  , la = ra[u];
                B[la] = {
                    parentid: ia,
                    item: ra
                }
            }
            for (Z = 0; Z < J; Z++)
                if (ra = e.extend({}, Q[Z]),
                ia = ra[D],
                la = ra[u],
                void 0 != B[ia]) {
                    ra = {
                        parentid: ia,
                        item: B[la].item
                    };
                    var aa = B[ia].item;
                    aa[Y] || (aa[Y] = []);
                    var U = aa[Y].length
                      , fa = ra.item;
                    I ? void 0 == fa[I.parent] && (fa[I.parent] = aa) : void 0 == fa.parent && (fa.parent = aa);
                    fa = T(fa);
                    aa[Y][U] = fa;
                    B[ia].item = aa;
                    B[la] = ra
                } else
                    fa = B[la].item,
                    I ? void 0 == fa[I.parent] && (fa[I.parent] = null) : void 0 == fa.parent && (fa.parent = null),
                    fa = T(fa),
                    I ? fa[I.level] = 0 : fa.level = 0,
                    K[K.length] = fa;
            if (0 != K.length) {
                var ma = function(w, pa) {
                    for (var ka = 0; ka < pa.length; ka++) {
                        I ? pa[ka][I.level] = w : pa[ka].level = w;
                        var wa = pa[ka][Y];
                        wa ? 0 < wa.length ? ma(w + 1, wa) : I ? pa[ka][I.leaf] = !0 : pa[ka].leaf = !0 : I ? pa[ka][I.leaf] = !0 : pa[ka].leaf = !0
                    }
                };
                ma(0, K)
            }
            return K
        },
        bindBindingUpdate: function(u, D) {
            this._bindingUpdate[this._bindingUpdate.length] = {
                id: u,
                func: D
            }
        },
        unbindBindingUpdate: function(u) {
            for (var D = 0; D < this._bindingUpdate.length; D++)
                if (this._bindingUpdate[D].id == u) {
                    this._bindingUpdate[D].func = null;
                    this._bindingUpdate.splice(D, 1);
                    break
                }
        },
        callBindingUpdate: function(u) {
            for (var D = 0; D < this._bindingUpdate.length; D++) {
                var B = this._bindingUpdate[D];
                null != B.func && B.func(u)
            }
        },
        getid: function(u, D, B) {
            if (null != u && void 0 != u.name && u.name) {
                var H = e(D).attr(u.name);
                if (null != H && 0 < H.toString().length)
                    return H;
                if (u.map)
                    try {
                        H = e(D).attr(u.map);
                        if (null != H && 0 < H.toString().length)
                            return H;
                        if (0 < e(u.map, D).length)
                            return e(u.map, D).text();
                        if (0 < e(u.name, D).length)
                            return e(u.name, D).text()
                    } catch (J) {
                        return B
                    }
            } else {
                if (0 < e(u, D).length)
                    return e(u, D).text();
                if (u && 0 < u.toString().length) {
                    H = e(D).attr(u);
                    if (null != H && 0 < H.toString().length)
                        return e.trim(H).split(" ").join("").replace(/([ #;?%&,.+*~':"!^$[\]()=>|\/\\@])/g, "");
                    H = u.split(this.mapChar);
                    if (1 < H.length) {
                        u = D;
                        for (D = 0; D < H.length; D++)
                            void 0 != u && (u = u[H[D]]);
                        if (void 0 != u)
                            return u
                    } else if (void 0 != D[u])
                        return D[u]
                }
                return B
            }
        },
        loadjson: function(u, D, B) {
            "string" == typeof u && (u = e.parseJSON(u));
            void 0 == B.root && (B.root = "");
            void 0 == B.record && (B.record = "");
            (u = u || D) || (u = []);
            var H = this;
            if ("" != B.root) {
                var J = B.root.split(H.mapChar);
                if (1 < J.length) {
                    D = u;
                    for (var K = 0; K < J.length; K++)
                        void 0 != D && (D = D[J[K]]);
                    u = D
                } else if (void 0 !== u[B.root] ? u = u[B.root] : u[0] && void 0 !== u[0][B.root] ? u = u[0][B.root] : e.each(u, function(pa) {
                    if (this == B.root)
                        return u = this,
                        !1;
                    void 0 != this[B.root] && (u = this[B.root])
                }),
                !u && (J = B.root.split(H.mapChar),
                0 < J.length)) {
                    D = u;
                    for (K = 0; K < J.length; K++)
                        void 0 != D && (D = D[J[K]]);
                    u = D
                }
            } else if (!u.length)
                for (var Q in u)
                    if (e.isArray(u[Q])) {
                        u = u[Q];
                        break
                    }
            null != u && void 0 == u.length && (u = e.makeArray(u));
            if (null == u || void 0 == u || "undefined" == u || void 0 == u.length)
                throw Error("jqxDataAdapter: JSON Parse error! Invalid JSON. Please, check your JSON or your jqxDataAdapter initialization!");
            if (0 == u.length)
                this.totalrecords = 0;
            else {
                D = u.length;
                this.totalrecords = this.virtualmode ? B.totalrecords || D : D;
                this.records = [];
                this.originaldata = [];
                var Y = this.records
                  , I = this.pageable ? this.pagesize * this.pagenum : B.recordstartindex;
                this.recordids = [];
                B.loadallrecords && (I = 0,
                D = this.totalrecords);
                var T = 0;
                this.virtualmode && (T = I = this.pageable ? this.pagesize * this.pagenum : B.recordstartindex,
                I = 0,
                D = this.totalrecords);
                var Z = B.datafields ? B.datafields.length : 0;
                if (0 == Z) {
                    J = u[0];
                    K = [];
                    for (Q in J)
                        K[K.length] = {
                            name: Q
                        };
                    B.datafields = K;
                    B.generatedfields = B.datafields;
                    Z = K.length
                }
                for (var ra = Q = I; ra < D; ra++) {
                    var ia = u[ra];
                    if (void 0 == ia)
                        break;
                    if (B.record && "" != B.record && (ia = ia[B.record],
                    void 0 == ia))
                        continue;
                    var la = this.getid(B.id, ia, ra);
                    "object" === typeof la && (la = ra);
                    if (!this.recordids[la]) {
                        this.recordids[la] = ia;
                        for (var aa = {}, U = 0; U < Z; U++) {
                            var fa = B.datafields[U];
                            J = "";
                            if (void 0 != fa && null != fa) {
                                if (fa.map) {
                                    if (e.isFunction(fa.map))
                                        J = fa.map(ia);
                                    else if (J = fa.map.split(H.mapChar),
                                    0 < J.length) {
                                        var ma = ia;
                                        for (K = 0; K < J.length; K++)
                                            void 0 != ma && (ma = ma[J[K]]);
                                        J = ma
                                    } else
                                        J = ia[fa.map];
                                    void 0 != J && null != J ? J = this.getvaluebytype(J, fa) : void 0 == J && null != J && (J = "")
                                }
                                "" != J || fa.map || (J = ia[fa.name],
                                void 0 == J && null != J && (J = ""),
                                void 0 != fa.value && void 0 != J && (K = J[fa.value],
                                void 0 != K && (J = K)));
                                J = this.getvaluebytype(J, fa);
                                void 0 != fa.displayname ? aa[fa.displayname] = J : aa[fa.name] = J;
                                if ("array" === fa.type) {
                                    var w = function(pa) {
                                        if (pa)
                                            for (var ka = 0; ka < pa.length; ka++) {
                                                var wa = pa[ka];
                                                if (wa)
                                                    for (var ta = 0; ta < Z; ta++) {
                                                        var L = B.datafields[ta]
                                                          , O = "";
                                                        if (void 0 != L && null != L) {
                                                            if (L.map) {
                                                                if (e.isFunction(L.map))
                                                                    O = L.map(wa);
                                                                else if (O = L.map.split(H.mapChar),
                                                                0 < O.length) {
                                                                    for (var S = wa, ha = 0; ha < O.length; ha++)
                                                                        void 0 != S && (S = S[O[ha]]);
                                                                    O = S
                                                                } else
                                                                    O = wa[L.map];
                                                                void 0 != O && null != O ? O = this.getvaluebytype(O, L) : void 0 == O && null != O && (O = "")
                                                            }
                                                            "" != O || L.map || (O = wa[L.name],
                                                            void 0 == O && null != O && (O = ""),
                                                            void 0 != L.value && void 0 != O && (S = O[L.value],
                                                            void 0 != S && (O = S)));
                                                            O = this.getvaluebytype(O, L);
                                                            void 0 != L.displayname ? wa[L.displayname] = O : wa[L.name] = O;
                                                            "array" === L.type && w.call(this, O)
                                                        }
                                                    }
                                            }
                                    };
                                    w.call(this, J)
                                }
                            }
                        }
                        if (0 >= B.recordendindex || I < B.recordendindex)
                            Y[T + Q] = Object(aa),
                            Y[T + Q].uid = la,
                            this.originaldata[T + Q] = Object(Y[ra]),
                            Q++
                    }
                }
                this.cachedrecords = this.records = Y
            }
        },
        loadxml: function(u, D, B) {
            "string" == typeof u && (D = e(e.parseXML(u)),
            u = null);
            void 0 == B.root && (B.root = "");
            void 0 == B.record && (B.record = "");
            (u = e.jqx.browser.msie && D ? void 0 != D.xml ? e(B.root + " " + B.record, e.parseXML(D.xml)) : u || e(B.root + " " + B.record, D) : u || e(B.root + " " + B.record, D)) || (u = []);
            D = u.length;
            if (0 != u.length) {
                this.totalrecords = this.virtualmode ? B.totalrecords || D : D;
                this.records = [];
                this.originaldata = [];
                var H = this.records
                  , J = this.pageable ? this.pagesize * this.pagenum : B.recordstartindex;
                this.recordids = [];
                B.loadallrecords && (J = 0,
                D = this.totalrecords);
                var K = 0;
                this.virtualmode && (K = J = this.pageable ? this.pagesize * this.pagenum : B.recordstartindex,
                J = 0,
                D = this.totalrecords);
                var Q = B.datafields ? B.datafields.length : 0;
                if (0 == Q) {
                    Q = u[0];
                    var Y = [], I;
                    for (I in Q)
                        Y[Y.length] = {
                            name: I
                        };
                    B.datafields = Y;
                    B.generatedfields = B.datafields;
                    Q = Y.length
                }
                var T = J;
                for (I = J; I < D; I++) {
                    Y = u[I];
                    if (void 0 == Y)
                        break;
                    var Z = this.getid(B.id, Y, I);
                    if (!this.recordids[Z]) {
                        this.recordids[Z] = Y;
                        var ra = {}
                          , ia = !1;
                        B.hierarchy && B.hierarchy.root && (ia = !0);
                        for (var la = 0; la < Q; la++) {
                            var aa = B.datafields[la]
                              , U = "";
                            if (void 0 != aa && null != aa) {
                                if (aa.map)
                                    if (e.isFunction(aa.map))
                                        U = aa.map(Y);
                                    else {
                                        var fa = aa.map.indexOf("[");
                                        if (0 > fa)
                                            if (U = e(aa.map, Y),
                                            1 == U.length)
                                                U = U.text();
                                            else {
                                                fa = [];
                                                for (var ma = 0; ma < U.length; ma++)
                                                    fa.push(e(U[ma]).text());
                                                U = fa;
                                                ia && 0 < fa.length && (U = fa[0])
                                            }
                                        else
                                            U = aa.map.substring(0, fa - 1),
                                            ma = aa.map.indexOf("]"),
                                            fa = aa.map.substring(fa + 1, ma),
                                            U = e(U, Y).attr(fa),
                                            void 0 == U && (U = e(Y).attr(fa)),
                                            void 0 == U && (U = "");
                                        "" == U && (U = e(Y).attr(aa.map),
                                        void 0 == U && (U = ""))
                                    }
                                if ("" == U) {
                                    U = e(aa.name, Y);
                                    if (1 == U.length)
                                        U = U.text();
                                    else {
                                        fa = [];
                                        for (ma = 0; ma < U.length; ma++)
                                            fa.push(e(U[ma]).text());
                                        U = fa;
                                        ia && 0 < fa.length && (U = fa[0])
                                    }
                                    "" == U && (U = e(Y).attr(aa.name),
                                    void 0 == U && (U = ""));
                                    "" == U && Y.nodeName && Y.nodeName == aa.name && Y.firstChild && (U = e(Y.firstChild).text())
                                }
                                U = this.getvaluebytype(U, aa);
                                void 0 != aa.displayname ? ra[aa.displayname] = U : ra[aa.name] = U
                            }
                        }
                        if (0 >= B.recordendindex || J < B.recordendindex)
                            H[K + T] = e.extend({}, ra),
                            H[K + T].uid = Z,
                            this.originaldata[K + T] = e.extend({}, H[I]),
                            T++
                    }
                }
                if (B.hierarchy && B.hierarchy.root)
                    for (I = J; I < D; I++)
                        Y = u[I],
                        J = H[I],
                        0 < e(Y).parent().length ? (Z = this.getid(B.id, e(Y).parents(B.hierarchy.record + ":first")),
                        J.parentuid = Z) : J.parentuid = null;
                this.cachedrecords = this.records = H
            }
        },
        loadics: function(u, D) {
            if (null != u) {
                D = u.split(D.rowDelimiter || this.rowDelimiter || "\n");
                var B = D.length;
                u = u.split("\r");
                1 == B && 1 < u.length && (D = u,
                B = D.length);
                this.records = [];
                this.originaldata = [];
                u = this.records;
                this.recordids = [];
                for (var H = function(Y) {
                    var I = /^(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2})Z)?$/.exec(Y);
                    if (!I)
                        throw Error("Invalid UNTIL value: " + Y);
                    return new Date(Date.UTC(I[1], I[2] - 1, I[3], I[5] || 0, I[6] || 0, I[7] || 0))
                }, J = 0; J < B; J++) {
                    var K = D[J];
                    if ("BEGIN:VEVENT" == K)
                        var Q = {};
                    else
                        0 <= K.indexOf("SUMMARY") ? Q.SUMMARY = K.substring(K.indexOf("SUMMARY") + 8) : 0 <= K.indexOf("LOCATION") ? Q.LOCATION = K.substring(K.indexOf("LOCATION") + 9) : 0 <= K.indexOf("DESCRIPTION") ? Q.DESCRIPTION = K.substring(K.indexOf("DESCRIPTION") + 12) : 0 <= K.indexOf("RRULE") ? Q.RRULE = K.substring(K.indexOf("RRULE") + 6) : 0 <= K.indexOf("EXDATE") ? (K = K.substring(K.indexOf("EXDATE") + 7),
                        Q.EXDATE = K) : 0 <= K.indexOf("DTEND") ? Q.DTEND = H(K.substring(K.indexOf("DTEND") + 6)) : 0 <= K.indexOf("DTSTART") ? Q.DTSTART = H(K.substring(K.indexOf("DTSTART") + 8)) : 0 <= K.indexOf("UID") ? Q.uid = Q.UID = K.substring(K.indexOf("UID") + 4) : 0 <= K.indexOf("STATUS") ? Q.STATUS = K.substring(K.indexOf("STATUS") + 7) : "END:VEVENT" == K && u.push(Q)
                }
                this.cachedrecords = this.records = u
            }
        },
        loadtext: function(u, D) {
            if (null != u) {
                var B = u.split(D.rowDelimiter || this.rowDelimiter || "\n")
                  , H = B.length;
                u = u.split("\r");
                1 == H && 1 < u.length && (B = u,
                H = B.length);
                this.totalrecords = this.virtualmode ? D.totalrecords || H : H;
                this.records = [];
                this.originaldata = [];
                u = this.records;
                var J = this.pageable ? this.pagesize * this.pagenum : D.recordstartindex;
                this.recordids = [];
                D.loadallrecords && (J = 0,
                H = this.totalrecords);
                var K = 0;
                this.virtualmode && (K = J = this.pageable ? this.pagesize * this.pagenum : D.recordstartindex,
                J = 0,
                H = this.totalrecords);
                var Q = D.datafields.length
                  , Y = D.columnDelimiter || this.columnDelimiter;
                for (Y || (Y = "tab" === D.datatype || "tsv" === D.datatype ? "\t" : ","); J < H; J++) {
                    var I = B[J]
                      , T = null;
                    if (!this.recordids[T]) {
                        null == D.id && (T = J,
                        this.recordids[T] = I);
                        for (var Z = {}, ra = B[J].split(Y), ia = 0; ia < Q; ia++)
                            if (!(ia >= ra.length)) {
                                var la = D.datafields[ia]
                                  , aa = ra[ia];
                                la.map && e.isFunction(la.map) && (aa = la.map(I));
                                la.type && (aa = this.getvaluebytype(aa, la));
                                Z[la.map || la.name || ia.toString()] = aa;
                                null != D.id && D.id === la.name && (T = aa,
                                this.recordids[T] = I)
                            }
                        null == T && (T = J);
                        u[K + J] = e.extend({}, Z);
                        u[K + J].uid = T;
                        this.originaldata[K + J] = e.extend({}, u[J])
                    }
                }
                this.cachedrecords = this.records = u
            }
        },
        getvaluebytype: function(u, D) {
            var B = u;
            if (null == u)
                return u;
            if (e.isArray(u) && "array" != D.type) {
                for (B = 0; B < u.length; B++)
                    u[B] = this.getvaluebytype(u[B], D);
                return u
            }
            if ("date" == D.type)
                if ("NaN" == u)
                    u = "";
                else {
                    if (u && u instanceof Date)
                        return u;
                    var H = new Date(u);
                    "string" == typeof u && D.format && (D = e.jqx.dataFormat.parsedate(u, D.format),
                    null != D && (H = D));
                    u = "NaN" == H.toString() || "Invalid Date" == H.toString() ? e.jqx.dataFormat ? e.jqx.dataFormat.tryparsedate(u) : H : H;
                    null == u && (u = B)
                }
            else if ("float" == D.type || "number" == D.type || "decimal" == D.type)
                "NaN" == u ? u = "" : (u = parseFloat(u),
                isNaN(u) && (u = B));
            else if ("int" == D.type || "integer" == D.type)
                u = parseInt(u),
                isNaN(u) && (u = B);
            else if ("bool" == D.type || "boolean" == D.type)
                null != u && void 0 != u.toLowerCase && ("false" == u.toLowerCase() ? u = !1 : "true" == u.toLowerCase() && (u = !0)),
                u = 1 == u ? !0 : 0 == u && "" !== u ? !1 : "";
            return u
        }
    };
    e.jqx.dataFormat = {};
    e.extend(e.jqx.dataFormat, {
        regexTrim: /^\s+|\s+$/g,
        regexInfinity: /^[+-]?infinity$/i,
        regexHex: /^0x[a-f0-9]+$/i,
        regexParseFloat: /^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,
        toString: Object.prototype.toString,
        isBoolean: function(u) {
            return "boolean" === typeof u
        },
        isObject: function(u) {
            return u && ("object" === typeof u || e.isFunction(u)) || !1
        },
        isDate: function(u) {
            return u instanceof Date
        },
        arrayIndexOf: function(u, D) {
            if (u.indexOf)
                return u.indexOf(D);
            for (var B = 0, H = u.length; B < H; B++)
                if (u[B] === D)
                    return B;
            return -1
        },
        isString: function(u) {
            return "string" === typeof u
        },
        isNumber: function(u) {
            return "number" === typeof u && isFinite(u)
        },
        isNull: function(u) {
            return null === u
        },
        isUndefined: function(u) {
            return "undefined" === typeof u
        },
        isValue: function(u) {
            return this.isObject(u) || this.isString(u) || this.isNumber(u) || this.isBoolean(u)
        },
        isEmpty: function(u) {
            if (!this.isString(u) && this.isValue(u))
                return !1;
            if (!this.isValue(u))
                return !0;
            u = e.trim(u).replace(/&nbsp;/ig, "").replace(/&#160;/ig, "");
            return "" === u
        },
        startsWith: function(u, D) {
            return 0 === u.indexOf(D)
        },
        endsWith: function(u, D) {
            return u.substr(u.length - D.length) === D
        },
        trim: function(u) {
            return (u + "").replace(this.regexTrim, "")
        },
        isArray: function(u) {
            return "[object Array]" === this.toString.call(u)
        },
        defaultcalendar: function() {
            return {
                "/": "/",
                ":": ":",
                firstDay: 0,
                days: {
                    names: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                    namesAbbr: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                    namesShort: "Su Mo Tu We Th Fr Sa".split(" ")
                },
                months: {
                    names: "January February March April May June July August September October November December ".split(" "),
                    namesAbbr: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec ".split(" ")
                },
                AM: ["AM", "am", "AM"],
                PM: ["PM", "pm", "PM"],
                eras: [{
                    name: "A.D.",
                    start: null,
                    offset: 0
                }],
                twoDigitYearMax: 2029,
                patterns: {
                    d: "M/d/yyyy",
                    D: "dddd, MMMM dd, yyyy",
                    t: "h:mm tt",
                    T: "h:mm:ss tt",
                    f: "dddd, MMMM dd, yyyy h:mm tt",
                    F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    M: "MMMM dd",
                    Y: "yyyy MMMM",
                    S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                    ISO: "yyyy-MM-dd hh:mm:ss",
                    ISO2: "yyyy-MM-dd HH:mm:ss",
                    d1: "dd.MM.yyyy",
                    d2: "dd-MM-yyyy",
                    d3: "MM-dd-yyyy",
                    zone1: "yyyy-MM-ddTHH:mm:ss-HH:mm",
                    zone2: "yyyy-MM-ddTHH:mm:ss+HH:mm",
                    custom: "yyyy-MM-ddTHH:mm:ss.fff",
                    custom2: "yyyy-MM-dd HH:mm:ss.fff"
                },
                percentsymbol: "%",
                currencysymbol: "$",
                currencysymbolposition: "before",
                decimalseparator: ".",
                thousandsseparator: ","
            }
        },
        expandFormat: function(u, D) {
            D = D || "F";
            u = u.patterns;
            var B = D.length;
            if (1 === B) {
                u = u[D];
                if (!u)
                    throw "Invalid date format string '" + D + "'.";
                D = u
            } else
                2 === B && "%" === D.charAt(0) && (D = D.charAt(1));
            return D
        },
        getEra: function(u, D) {
            if (!D || "string" === typeof u)
                return 0;
            for (var B = u.getTime(), H = 0, J = D.length; H < J; H++)
                if (u = D[H].start,
                null === u || B >= u)
                    return H;
            return 0
        },
        toUpperArray: function(u) {
            for (var D = [], B = 0, H = u.length; B < H; B++)
                D[B] = this.toUpper(u[B]);
            return D
        },
        getEraYear: function(u, D, B, H) {
            u = u.getFullYear();
            !H && D.eras && (u -= D.eras[B].offset);
            return u
        },
        toUpper: function(u) {
            return u ? u.toUpperCase() : ""
        },
        getDayIndex: function(u, D, B) {
            var H = u.days
              , J = u._upperDays;
            J || (u._upperDays = J = [this.toUpperArray(H.names), this.toUpperArray(H.namesAbbr), this.toUpperArray(H.namesShort)]);
            D = D.toUpperCase();
            B ? (u = this.arrayIndexOf(J[1], D),
            -1 === u && (u = this.arrayIndexOf(J[2], D))) : u = this.arrayIndexOf(J[0], D);
            return u
        },
        getMonthIndex: function(u, D, B) {
            var H = u.months
              , J = u.monthsGenitive || u.months
              , K = u._upperMonths
              , Q = u._upperMonthsGen;
            K || (u._upperMonths = K = [this.toUpperArray(H.names), this.toUpperArray(H.namesAbbr)],
            u._upperMonthsGen = Q = [this.toUpperArray(J.names), this.toUpperArray(J.namesAbbr)]);
            D = this.toUpper(D);
            u = this.arrayIndexOf(B ? K[1] : K[0], D);
            0 > u && (u = this.arrayIndexOf(B ? Q[1] : Q[0], D));
            return u
        },
        appendPreOrPostMatch: function(u, D) {
            for (var B = 0, H = !1, J = 0, K = u.length; J < K; J++) {
                var Q = u.charAt(J);
                switch (Q) {
                case "'":
                    H ? D.push("'") : B++;
                    H = !1;
                    break;
                case "\\":
                    H && D.push("\\");
                    H = !H;
                    break;
                default:
                    D.push(Q),
                    H = !1
                }
            }
            return B
        },
        getTokenRegExp: function() {
            return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g
        },
        formatlink: function(u, D) {
            var B = "";
            D && D.target && (B = "target=" + D.target);
            return "" != B ? "<a " + B + ' href="' + u + '">' + u + "</a>" : '<a href="' + u + '">' + u + "</a>"
        },
        formatemail: function(u) {
            return '<a href="mailto:' + u + '">' + u + "</a>"
        },
        formatNumber: function(u, D, B) {
            return this.formatnumber(u, D, B)
        },
        formatnumber: function(u, D, B) {
            if (void 0 == B || null == B || "" == B)
                B = this.defaultcalendar();
            if ("" === D || null === D)
                return u;
            this.isNumber(u) || (u *= 1);
            var H;
            1 < D.length && (H = parseInt(D.slice(1), 10));
            var J, K, Q = D.charAt(0).toUpperCase();
            D = B.thousandsseparator;
            var Y = B.decimalseparator;
            switch (Q) {
            case "D":
            case "d":
            case "F":
            case "f":
                break;
            case "N":
            case "n":
                H = 0;
                break;
            case "C":
            case "c":
                "before" == B.currencysymbolposition ? J = B.currencysymbol : K = B.currencysymbol;
                break;
            case "P":
            case "p":
                K = B.percentsymbol;
                break;
            default:
                throw "Bad number format specifier: " + Q;
            }
            if (this.isNumber(u)) {
                B = 0 > u;
                Y = Y ? Y : ".";
                if (this.isNumber(H)) {
                    var I = H;
                    H = Math.pow(10, I);
                    u = (u * H).toFixed(0) / H + "";
                    H = u.lastIndexOf(".");
                    if (0 < I)
                        for (0 > H ? (u += Y,
                        H = u.length - 1) : "." !== Y && (u = u.replace(".", Y)); u.length - 1 - H < I; )
                            u += "0"
                } else
                    u += "",
                    H = u.lastIndexOf("."),
                    0 < H && void 0 == I && "." !== Y && (u = u.replace(".", Y));
                if (D) {
                    H = u.lastIndexOf(Y);
                    H = -1 < H ? H : u.length;
                    I = u.substring(H);
                    Y = -1;
                    for (Q = H; 0 < Q; Q--)
                        Y++,
                        0 === Y % 3 && Q !== H && (!B || 1 < Q) && (I = D + I),
                        I = u.charAt(Q - 1) + I;
                    u = I
                }
                u = J ? J + u : u;
                return K ? u + K : u
            }
            return u
        },
        tryparsedate: function(u, D) {
            if (void 0 == D || null == D)
                D = this.defaultcalendar();
            if ("" == u)
                return null;
            null == u || u.substring || (u = u.toString());
            if (null != u && "/Date(" == u.substring(0, 6)) {
                D = /^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/;
                var B = new Date(+u.replace(/\/Date\((\d+)\)\//, "$1"));
                if ("Invalid Date" == B) {
                    var H = u.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/);
                    B = null;
                    H && (B = new Date(1 * H[1] + 36E5 * H[2] + 6E4 * H[3]))
                }
                if (null == B || "Invalid Date" == B || isNaN(B))
                    if (u = D.exec(u)) {
                        var J = new Date(parseInt(u[1]));
                        u[2] && (D = parseInt(u[3]),
                        "-" === u[2] && (D = -D),
                        u = J.getUTCMinutes(),
                        J.setUTCMinutes(u - D));
                        if (!isNaN(J.valueOf()))
                            return J
                    }
                return B
            }
            var K = D.patterns;
            for (Y in K)
                if (B = this.parsedate(u, K[Y], D))
                    return "ISO" == Y && (D = this.parsedate(u, K.ISO2, D)) ? D : B;
            if (null != u) {
                J = [":", "/", "-"];
                B = !0;
                for (var Q = 0; Q < J.length; Q++)
                    -1 != u.indexOf(J[Q]) && (B = !1);
                if (B && (B = new Number(u),
                !isNaN(B)))
                    return new Date(B)
            }
            if ("string" === e.type(u)) {
                u = this.trim(u);
                var Y = [":", "/", "-", " ", ","];
                u = u.replace(/, /g, ",");
                K = "";
                var I = u;
                0 <= u.indexOf(":") ? (K = u.substring(u.indexOf(":") - 2),
                K = this.trim(K),
                I = u.substring(0, u.indexOf(":") - 2)) : 0 <= u.toUpperCase().indexOf("AM") ? (K = u.substring(u.toUpperCase().indexOf("AM") - 2),
                K = this.trim(K),
                I = u.substring(0, u.toUpperCase().indexOf("AM") - 2)) : 0 <= u.toUpperCase().indexOf("PM") && (K = u.substring(u.toUpperCase().indexOf("PM") - 2),
                K = this.trim(K),
                I = u.substring(0, u.toUpperCase().indexOf("PM") - 2));
                u = new Date;
                B = !1;
                if (I) {
                    for (H = 0; H < Y.length; H++)
                        if (0 <= I.indexOf(Y[H])) {
                            J = I.split(Y[H]);
                            break
                        }
                    Y = [];
                    I = [];
                    var T = []
                      , Z = null
                      , ra = null;
                    for (H = 0; H < J.length; H++) {
                        Q = J[H];
                        var ia = this.parsedate(Q, "d", D) || this.parsedate(Q, "dd", D) || this.parsedate(Q, "ddd", D) || this.parsedate(Q, "dddd", D);
                        if (ia && 2 >= Q.length) {
                            Z = H;
                            Y.push(ia.getDate());
                            break
                        }
                    }
                    for (H = 0; H < J.length; H++)
                        if (Q = J[H],
                        (ia = this.parsedate(Q, "M", D) || this.parsedate(Q, "MM", D) || this.parsedate(Q, "MMM", D) || this.parsedate(Q, "MMMM", D)) && (void 0 == Z || Z != H) && (I.push(ia.getMonth()),
                        2 < Q.length)) {
                            ra = H;
                            break
                        }
                    for (H = 0; H < J.length; H++)
                        Q = J[H],
                        Q = this.parsedate(Q, "yyyy", D),
                        !Q || void 0 != Z && Z == H || (void 0 == ra || ra != H) && T.push(Q.getFullYear());
                    Q = [];
                    for (Z = 0; Z < Y.length; Z++)
                        for (H = 0; H < I.length; H++)
                            for (ra = 0; ra < T.length; ra++)
                                J = new Date(T[ra],I[H],Y[Z]),
                                1970 > T[ra] && J.setFullYear(T[ra]),
                                NaN != J.getTime() && Q.push(J);
                    0 < Q.length && (u = Q[0],
                    B = !0)
                }
                K && (J = 0 <= K.indexOf(":") ? K.split(":") : K,
                D = this.parsedate(K, "h:mm tt", D) || this.parsedate(K, "h:mm:ss tt", D) || this.parsedate(K, "HH:mm:ss.fff", D) || this.parsedate(K, "HH:mm:ss.ff", D) || this.parsedate(K, "HH:mm:ss.tttt", D) || this.parsedate(K, "HH:mm:ss", D) || this.parsedate(K, "HH:mm", D) || this.parsedate(K, "HH", D),
                T = I = Y = K = 0,
                D && NaN != D.getTime() ? (K = D.getHours(),
                Y = D.getMinutes(),
                I = D.getSeconds(),
                T = D.getMilliseconds()) : (1 == J.length && (K = parseInt(J[0])),
                2 == J.length && (K = parseInt(J[0]),
                Y = parseInt(J[1])),
                3 == J.length && (K = parseInt(J[0]),
                Y = parseInt(J[1]),
                0 <= J[2].indexOf(".") ? (I = parseInt(J[2].toString().split(".")[0]),
                T = parseInt(J[2].toString().split(".")[1])) : I = parseInt(J[2])),
                4 == J.length && (K = parseInt(J[0]),
                Y = parseInt(J[1]),
                I = parseInt(J[2]),
                T = parseInt(J[3]))),
                !u || isNaN(K) || isNaN(Y) || isNaN(I) || isNaN(T) || (u.setHours(K, Y, I, T),
                B = !0));
                if (B)
                    return u
            }
            return null
        },
        getparseregexp: function(u, D) {
            var B = u._parseRegExp;
            if (B) {
                var H = B[D];
                if (H)
                    return H
            } else
                u._parseRegExp = B = {};
            H = this.expandFormat(u, D).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1");
            for (var J = ["^"], K = [], Q = 0, Y = 0, I = this.getTokenRegExp(), T; null !== (T = I.exec(H)); ) {
                var Z = H.slice(Q, T.index);
                Q = I.lastIndex;
                Y += this.appendPreOrPostMatch(Z, J);
                if (Y % 2)
                    J.push(T[0]);
                else {
                    Z = T[0];
                    var ra = Z.length;
                    switch (Z) {
                    case "dddd":
                    case "ddd":
                    case "MMMM":
                    case "MMM":
                    case "gg":
                    case "g":
                        Z = "(\\D+)";
                        break;
                    case "tt":
                    case "t":
                        Z = "(\\D*)";
                        break;
                    case "yyyy":
                    case "fff":
                    case "ff":
                    case "f":
                        Z = "(\\d{" + ra + "})";
                        break;
                    case "dd":
                    case "d":
                    case "MM":
                    case "M":
                    case "yy":
                    case "y":
                    case "HH":
                    case "H":
                    case "hh":
                    case "h":
                    case "mm":
                    case "m":
                    case "ss":
                    case "s":
                        Z = "(\\d\\d?)";
                        break;
                    case "zzz":
                        Z = "([+-]?\\d\\d?:\\d{2})";
                        break;
                    case "zz":
                    case "z":
                        Z = "([+-]?\\d\\d?)";
                        break;
                    case "/":
                        Z = "(\\" + u["/"] + ")";
                        break;
                    default:
                        throw "Invalid date format pattern '" + Z + "'.";
                    }
                    Z && J.push(Z);
                    K.push(T[0])
                }
            }
            this.appendPreOrPostMatch(H.slice(Q), J);
            J.push("$");
            u = {
                regExp: J.join("").replace(/\s+/g, "\\s+"),
                groups: K
            };
            return B[D] = u
        },
        outOfRange: function(u, D, B) {
            return u < D || u > B
        },
        expandYear: function(u, D) {
            var B = new Date
              , H = this.getEra(B);
            if (100 > D) {
                var J = u.twoDigitYearMax;
                J = "string" === typeof J ? (new Date).getFullYear() % 100 + parseInt(J, 10) : J;
                u = this.getEraYear(B, u, H);
                D += u - u % 100;
                D > J && (D -= 100)
            }
            return D
        },
        parsedate: function(u, D, B) {
            if (void 0 == B || null == B)
                B = this.defaultcalendar();
            u = this.trim(u);
            D = this.getparseregexp(B, D);
            var H = (new RegExp(D.regExp)).exec(u);
            if (null === H)
                return null;
            var J = D.groups
              , K = D = u = null
              , Q = null
              , Y = null
              , I = 0
              , T = 0
              , Z = 0
              , ra = 0;
            var ia = null;
            for (var la = !1, aa = 0, U = J.length; aa < U; aa++) {
                var fa = H[aa + 1];
                if (fa) {
                    var ma = J[aa]
                      , w = ma.length
                      , pa = parseInt(fa, 10);
                    switch (ma) {
                    case "dd":
                    case "d":
                        Q = pa;
                        if (this.outOfRange(Q, 1, 31))
                            return null;
                        break;
                    case "MMM":
                    case "MMMM":
                        K = this.getMonthIndex(B, fa, 3 === w);
                        if (this.outOfRange(K, 0, 11))
                            return null;
                        break;
                    case "M":
                    case "MM":
                        K = pa - 1;
                        if (this.outOfRange(K, 0, 11))
                            return null;
                        break;
                    case "y":
                    case "yy":
                    case "yyyy":
                        D = 4 > w ? this.expandYear(B, pa) : pa;
                        if (this.outOfRange(D, 0, 9999))
                            return null;
                        break;
                    case "h":
                    case "hh":
                        I = pa;
                        12 === I && (I = 0);
                        if (this.outOfRange(I, 0, 11))
                            return null;
                        break;
                    case "H":
                    case "HH":
                        I = pa;
                        if (this.outOfRange(I, 0, 23))
                            return null;
                        break;
                    case "m":
                    case "mm":
                        T = pa;
                        if (this.outOfRange(T, 0, 59))
                            return null;
                        break;
                    case "s":
                    case "ss":
                        Z = pa;
                        if (this.outOfRange(Z, 0, 59))
                            return null;
                        break;
                    case "tt":
                    case "t":
                        la = B.PM && (fa === B.PM[0] || fa === B.PM[1] || fa === B.PM[2]);
                        if (!la && (!B.AM || fa !== B.AM[0] && fa !== B.AM[1] && fa !== B.AM[2]))
                            return null;
                        break;
                    case "f":
                    case "ff":
                    case "fff":
                        ra = pa * Math.pow(10, 3 - w);
                        if (this.outOfRange(ra, 0, 999))
                            return null;
                        break;
                    case "ddd":
                    case "dddd":
                        Y = this.getDayIndex(B, fa, 3 === w);
                        if (this.outOfRange(Y, 0, 6))
                            return null;
                        break;
                    case "zzz":
                        ma = fa.split(/:/);
                        if (2 !== ma.length)
                            return null;
                        ia = parseInt(ma[0], 10);
                        if (this.outOfRange(ia, -12, 13))
                            return null;
                        ma = parseInt(ma[1], 10);
                        if (this.outOfRange(ma, 0, 59))
                            return null;
                        ia = 60 * ia + (this.startsWith(fa, "-") ? -ma : ma);
                        break;
                    case "z":
                    case "zz":
                        ia = pa;
                        if (this.outOfRange(ia, -12, 13))
                            return null;
                        ia *= 60;
                        break;
                    case "g":
                    case "gg":
                        if (!fa || !B.eras)
                            return null;
                        fa = this.trim(fa.toLowerCase());
                        ma = 0;
                        for (w = B.eras.length; ma < w; ma++)
                            if (fa === B.eras[ma].name.toLowerCase()) {
                                u = ma;
                                break
                            }
                        if (null === u)
                            return null
                    }
                }
            }
            H = new Date;
            aa = B.convert;
            J = H.getFullYear();
            null === D ? D = J : B.eras && (D += B.eras[u || 0].offset);
            null === K && (K = 0);
            null === Q && (Q = 1);
            if (aa) {
                if (H = aa.toGregorian(D, K, Q),
                null === H)
                    return null
            } else if (H.setFullYear(D, K, Q),
            H.getDate() !== Q || null !== Y && H.getDay() !== Y)
                return null;
            la && 12 > I && (I += 12);
            H.setHours(I, T, Z, ra);
            null !== ia && (B = H.getMinutes() - (ia + H.getTimezoneOffset()),
            H.setHours(H.getHours() + parseInt(B / 60, 10), B % 60));
            return H
        },
        cleardatescache: function() {
            this.datescache = []
        },
        formatDate: function(u, D, B) {
            return this.formatdate(u, D, B)
        },
        formatdate: function(u, D, B) {
            function H(U, fa) {
                U += "";
                return 1 < fa && U.length < fa ? (U = Z[fa - 2] + U,
                U.substr(U.length - fa, fa)) : U
            }
            function J(U, fa) {
                if (la)
                    return la[fa];
                if (void 0 != U.getMonth)
                    switch (fa) {
                    case 0:
                        return U.getFullYear();
                    case 1:
                        return U.getMonth();
                    case 2:
                        return U.getDate()
                    }
            }
            if (void 0 == B || null == B)
                B = this.defaultcalendar();
            if ("string" === typeof u)
                return u;
            var K = u.toString() + "_" + D;
            if (this.datescache && this.datescache[K] && -1 == D.indexOf("f"))
                return this.datescache[K];
            if (!D || !D.length || "i" === D) {
                var Q;
                return Q = this.formatDate(u, B.patterns.F, B)
            }
            var Y = B.eras
              , I = "s" === D;
            D = this.expandFormat(B, D);
            Q = [];
            for (var T, Z = ["0", "00", "000"], ra = 0, ia = this.getTokenRegExp(), la; ; ) {
                T = ia.lastIndex;
                var aa = ia.exec(D);
                T = D.slice(T, aa ? aa.index : D.length);
                ra += this.appendPreOrPostMatch(T, Q);
                if (!aa)
                    break;
                if (ra % 2)
                    Q.push(aa[0]);
                else
                    switch (T = aa[0],
                    aa = T.length,
                    T) {
                    case "ddd":
                    case "dddd":
                        Q.push((3 === aa ? B.days.namesAbbr : B.days.names)[u.getDay()]);
                        break;
                    case "d":
                    case "dd":
                        Q.push(H(J(u, 2), aa));
                        break;
                    case "MMM":
                    case "MMMM":
                        T = J(u, 1);
                        Q.push(B.months[3 === aa ? "namesAbbr" : "names"][T]);
                        break;
                    case "M":
                    case "MM":
                        Q.push(H(J(u, 1) + 1, aa));
                        break;
                    case "y":
                    case "yy":
                    case "yyyy":
                        T = this.getEraYear(u, B, this.getEra(u, Y), I);
                        4 > aa && (T %= 100);
                        Q.push(H(T, aa));
                        break;
                    case "h":
                    case "hh":
                        T = u.getHours() % 12;
                        0 === T && (T = 12);
                        Q.push(H(T, aa));
                        break;
                    case "H":
                    case "HH":
                        Q.push(H(u.getHours(), aa));
                        break;
                    case "m":
                    case "mm":
                        Q.push(H(u.getMinutes(), aa));
                        break;
                    case "s":
                    case "ss":
                        Q.push(H(u.getSeconds(), aa));
                        break;
                    case "t":
                    case "tt":
                        T = 12 > u.getHours() ? B.AM ? B.AM[0] : " " : B.PM ? B.PM[0] : " ";
                        Q.push(1 === aa ? T.charAt(0) : T);
                        break;
                    case "f":
                    case "ff":
                    case "fff":
                        Q.push(H(u.getMilliseconds(), 3).substr(0, aa));
                        break;
                    case "z":
                    case "zz":
                        T = u.getTimezoneOffset() / 60;
                        Q.push((0 >= T ? "+" : "-") + H(Math.floor(Math.abs(T)), aa));
                        break;
                    case "zzz":
                        T = u.getTimezoneOffset() / 60;
                        Q.push((0 >= T ? "+" : "-") + H(Math.floor(Math.abs(T)), 2) + ":" + H(Math.abs(u.getTimezoneOffset() % 60), 2));
                        break;
                    case "g":
                    case "gg":
                        B.eras && Q.push(B.eras[this.getEra(u, Y)].name);
                        break;
                    case "/":
                        Q.push(B["/"]);
                        break;
                    default:
                        throw "Invalid date format pattern '" + T + "'.";
                    }
            }
            u = Q.join("");
            this.datescache || (this.datescache = []);
            return this.datescache[K] = u
        }
    });
    e.jqx.data = {};
    var g = /#.*$/
      , h = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg
      , k = /^(?:GET|HEAD)$/
      , l = /^\/\//
      , m = /\?/
      , n = /([?&])_=[^&]*/
      , p = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/
      , q = /\s+/
      , t = {}
      , v = {};
    try {
        var z = location.href
    } catch (u) {
        z = document.createElement("a"),
        z.href = "",
        z = z.href
    }
    var E = p.exec(z.toLowerCase()) || [];
    e.extend(e.jqx.data, {
        ajaxSetup: function(u, D) {
            D ? c(u, e.jqx.data.ajaxSettings) : (D = u,
            u = e.jqx.data.ajaxSettings);
            c(u, D);
            return u
        },
        ajaxSettings: {
            url: z,
            isLocal: /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(E[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": "*/*"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": window.String,
                "text html": !0,
                "text json": e.parseJSON,
                "text xml": e.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: b(t),
        ajaxTransport: b(v),
        ajax: function(u, D) {
            function B(ta, L, O, S) {
                var ha = L;
                if (2 !== fa) {
                    fa = 2;
                    Q && clearTimeout(Q);
                    K = void 0;
                    H = S || "";
                    w.readyState = 0 < ta ? 4 : 0;
                    if (O) {
                        var na = I;
                        S = w;
                        var ja, sa, va = na.contents, ua = na.dataTypes, Ca = na.responseFields;
                        for (Pa in Ca)
                            Pa in O && (S[Ca[Pa]] = O[Pa]);
                        for (; "*" === ua[0]; )
                            ua.shift(),
                            void 0 === ja && (ja = na.mimeType || S.getResponseHeader("content-type"));
                        if (ja)
                            for (Pa in va)
                                if (va[Pa] && va[Pa].test(ja)) {
                                    ua.unshift(Pa);
                                    break
                                }
                        if (ua[0]in O)
                            var Ja = ua[0];
                        else {
                            for (Pa in O) {
                                if (!ua[0] || na.converters[Pa + " " + ua[0]]) {
                                    Ja = Pa;
                                    break
                                }
                                sa || (sa = Pa)
                            }
                            Ja = Ja || sa
                        }
                        Ja ? (Ja !== ua[0] && ua.unshift(Ja),
                        na = O[Ja]) : na = void 0
                    }
                    if (200 <= ta && 300 > ta || 304 === ta)
                        if (I.ifModified && ((O = w.getResponseHeader("Last-Modified")) && (e.lastModified[ka] = O),
                        (O = w.getResponseHeader("Etag")) && (e.etag[ka] = O)),
                        304 === ta) {
                            ha = "notmodified";
                            var Ia = !0
                        } else {
                            a: {
                                var La = I;
                                var Ra = na;
                                var Za;
                                ha = La.dataTypes.slice();
                                ja = ha[0];
                                var Pa = {};
                                Ja = 0;
                                La.dataFilter && (Ra = La.dataFilter(Ra, La.dataType));
                                if (ha[1])
                                    for (Ta in La.converters)
                                        Pa[Ta.toLowerCase()] = La.converters[Ta];
                                for (; O = ha[++Ja]; )
                                    if ("*" !== O) {
                                        if ("*" !== ja && ja !== O) {
                                            var Ta = Pa[ja + " " + O] || Pa["* " + O];
                                            if (!Ta)
                                                for (Za in Pa)
                                                    if (Ia = Za.split(" "),
                                                    Ia[1] === O && (Ta = Pa[ja + " " + Ia[0]] || Pa["* " + Ia[0]])) {
                                                        !0 === Ta ? Ta = Pa[Za] : !0 !== Pa[Za] && (O = Ia[0],
                                                        ha.splice(Ja--, 0, O));
                                                        break
                                                    }
                                            if (!0 !== Ta)
                                                if (Ta && La["throws"])
                                                    Ra = Ta(Ra);
                                                else
                                                    try {
                                                        Ra = Ta(Ra)
                                                    } catch (kb) {
                                                        Ia = {
                                                            state: "parsererror",
                                                            error: Ta ? kb : "No conversion from " + ja + " to " + O
                                                        };
                                                        break a
                                                    }
                                        }
                                        ja = O
                                    }
                                Ia = {
                                    state: "success",
                                    data: Ra
                                }
                            }
                            ha = Ia.state;
                            La = Ia.data;
                            Ra = Ia.error;
                            Ia = !Ra
                        }
                    else if (Ra = ha,
                    !ha || ta)
                        ha = "error",
                        0 > ta && (ta = 0);
                    w.status = ta;
                    w.statusText = (L || ha) + "";
                    Ia ? ra.resolveWith(T, [La, ha, w]) : ra.rejectWith(T, [w, ha, Ra]);
                    w.statusCode(la);
                    la = void 0;
                    pa && Z.trigger("ajax" + (Ia ? "Success" : "Error"), [w, I, Ia ? La : Ra]);
                    ia.fireWith(T, [w, ha]);
                    pa && (Z.trigger("ajaxComplete", [w, I]),
                    --e.active || e.event.trigger("ajaxStop"))
                }
            }
            "object" === typeof u && (D = u,
            u = void 0);
            D = D || {};
            var H, J, K, Q, Y, I = e.jqx.data.ajaxSetup({}, D), T = I.context || I, Z = T !== I && (T.nodeType || T instanceof e) ? e(T) : e.event, ra = e.Deferred(), ia = e.Callbacks("once memory"), la = I.statusCode || {}, aa = {}, U = {}, fa = 0, ma = "canceled", w = {
                readyState: 0,
                setRequestHeader: function(ta, L) {
                    if (!fa) {
                        var O = ta.toLowerCase();
                        ta = U[O] = U[O] || ta;
                        aa[ta] = L
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return 2 === fa ? H : null
                },
                getResponseHeader: function(ta) {
                    var L;
                    if (2 === fa) {
                        if (!J)
                            for (J = {}; L = h.exec(H); )
                                J[L[1].toLowerCase()] = L[2];
                        L = J[ta.toLowerCase()]
                    }
                    return void 0 === L ? null : L
                },
                overrideMimeType: function(ta) {
                    fa || (I.mimeType = ta);
                    return this
                },
                abort: function(ta) {
                    ta = ta || ma;
                    K && K.abort(ta);
                    B(0, ta);
                    return this
                }
            };
            ra.promise(w);
            w.success = w.done;
            w.error = w.fail;
            w.complete = ia.add;
            w.statusCode = function(ta) {
                if (ta)
                    if (2 > fa)
                        for (L in ta)
                            la[L] = [la[L], ta[L]];
                    else {
                        var L = ta[w.status];
                        w.always(L)
                    }
                return this
            }
            ;
            I.url = ((u || I.url) + "").replace(g, "").replace(l, E[1] + "//");
            I.dataTypes = e.trim(I.dataType || "*").toLowerCase().split(q);
            null == I.crossDomain && (u = p.exec(I.url.toLowerCase()),
            I.crossDomain = !(!u || u[1] === E[1] && u[2] === E[2] && (u[3] || ("http:" === u[1] ? 80 : 443)) == (E[3] || ("http:" === E[1] ? 80 : 443))));
            I.data && I.processData && "string" !== typeof I.data && (I.data = e.param(I.data, I.traditional));
            d(t, I, D, w);
            if (2 === fa)
                return w;
            var pa = I.global;
            I.type = I.type.toUpperCase();
            I.hasContent = !k.test(I.type);
            pa && 0 === e.active++ && e.event.trigger("ajaxStart");
            if (!I.hasContent) {
                I.data && (I.url += (m.test(I.url) ? "&" : "?") + I.data,
                delete I.data);
                var ka = I.url;
                if (!1 === I.cache) {
                    u = (new Date).getTime();
                    var wa = I.url.replace(n, "$1_=" + u);
                    I.url = wa + (wa === I.url ? (m.test(I.url) ? "&" : "?") + "_=" + u : "")
                }
            }
            (I.data && I.hasContent && !1 !== I.contentType || D.contentType) && w.setRequestHeader("Content-Type", I.contentType);
            I.ifModified && (ka = ka || I.url,
            e.lastModified[ka] && w.setRequestHeader("If-Modified-Since", e.lastModified[ka]),
            e.etag[ka] && w.setRequestHeader("If-None-Match", e.etag[ka]));
            w.setRequestHeader("Accept", I.dataTypes[0] && I.accepts[I.dataTypes[0]] ? I.accepts[I.dataTypes[0]] + ("*" !== I.dataTypes[0] ? ", */*; q=0.01" : "") : I.accepts["*"]);
            for (Y in I.headers)
                w.setRequestHeader(Y, I.headers[Y]);
            if (I.beforeSend && (!1 === I.beforeSend.call(T, w, I) || 2 === fa))
                return w.abort();
            ma = "abort";
            for (Y in {
                success: 1,
                error: 1,
                complete: 1
            })
                w[Y](I[Y]);
            if (K = d(v, I, D, w)) {
                w.readyState = 1;
                pa && Z.trigger("ajaxSend", [w, I]);
                I.async && 0 < I.timeout && (Q = setTimeout(function() {
                    w.abort("timeout")
                }, I.timeout));
                try {
                    fa = 1,
                    K.send(aa, B)
                } catch (ta) {
                    if (2 > fa)
                        B(-1, ta);
                    else
                        throw ta;
                }
            } else
                B(-1, "No Transport");
            return w
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    var C = []
      , F = /\?/
      , P = /(=)\?(?=&|$)|\?\?/
      , X = (new Date).getTime();
    e.jqx.data.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var u = C.pop() || e.expando + "_" + X++;
            this[u] = !0;
            return u
        }
    });
    e.jqx.data.ajaxPrefilter("json jsonp", function(u, D, B) {
        var H, J = u.data, K = u.url, Q = !1 !== u.jsonp, Y = Q && P.test(K), I = Q && !Y && "string" === typeof J && !(u.contentType || "").indexOf("application/x-www-form-urlencoded") && P.test(J);
        if ("jsonp" === u.dataTypes[0] || Y || I) {
            var T = u.jsonpCallback = e.isFunction(u.jsonpCallback) ? u.jsonpCallback() : u.jsonpCallback;
            var Z = window[T];
            Y ? u.url = K.replace(P, "$1" + T) : I ? u.data = J.replace(P, "$1" + T) : Q && (u.url += (F.test(K) ? "&" : "?") + u.jsonp + "=" + T);
            u.converters["script json"] = function() {
                H || e.error(T + " was not called");
                return H[0]
            }
            ;
            u.dataTypes[0] = "json";
            window[T] = function() {
                H = arguments
            }
            ;
            B.always(function() {
                window[T] = Z;
                u[T] && (u.jsonpCallback = D.jsonpCallback,
                C.push(T));
                H && e.isFunction(Z) && Z(H[0]);
                H = Z = void 0
            });
            return "script"
        }
    });
    e.jqx.data.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(u) {
                e.globalEval(u);
                return u
            }
        }
    });
    e.jqx.data.ajaxPrefilter("script", function(u) {
        void 0 === u.cache && (u.cache = !1);
        u.crossDomain && (u.type = "GET",
        u.global = !1)
    });
    e.jqx.data.ajaxTransport("script", function(u) {
        if (u.crossDomain) {
            var D, B = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
            return {
                send: function(H, J) {
                    D = document.createElement("script");
                    D.async = "async";
                    u.scriptCharset && (D.charset = u.scriptCharset);
                    D.src = u.url;
                    D.onload = D.onreadystatechange = function(K, Q) {
                        if (Q || !D.readyState || /loaded|complete/.test(D.readyState))
                            D.onload = D.onreadystatechange = null,
                            B && D.parentNode && B.removeChild(D),
                            D = void 0,
                            Q || J(200, "success")
                    }
                    ;
                    B.insertBefore(D, B.firstChild)
                },
                abort: function() {
                    if (D)
                        D.onload(0, 1)
                }
            }
        }
    });
    var W, V = window.ActiveXObject ? function() {
        for (var u in W)
            W[u](0, 1)
    }
    : !1, ca = 0;
    e.jqx.data.ajaxSettings.xhr = window.ActiveXObject ? function() {
        var u;
        if (!(u = !this.isLocal && f()))
            a: {
                try {
                    u = new window.ActiveXObject("Microsoft.XMLHTTP");
                    break a
                } catch (D) {}
                u = void 0
            }
        return u
    }
    : f;
    (function(u) {
        e.extend(e.support, {
            ajax: !!u,
            cors: !!u && "withCredentials"in u
        })
    }
    )(e.jqx.data.ajaxSettings.xhr());
    e.support || (e.support = {
        ajax: !0
    });
    e.support.ajax && e.jqx.data.ajaxTransport(function(u) {
        if (!u.crossDomain || e.support.cors) {
            var D;
            return {
                send: function(B, H) {
                    var J, K = u.xhr();
                    u.username ? K.open(u.type, u.url, u.async, u.username, u.password) : K.open(u.type, u.url, u.async);
                    if (u.xhrFields)
                        for (J in u.xhrFields)
                            K[J] = u.xhrFields[J];
                    u.mimeType && K.overrideMimeType && K.overrideMimeType(u.mimeType);
                    u.crossDomain || B["X-Requested-With"] || (B["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (J in B)
                            K.setRequestHeader(J, B[J])
                    } catch (Y) {}
                    K.send(u.hasContent && u.data || null);
                    D = function(Y, I) {
                        var T;
                        try {
                            if (D && (I || 4 === K.readyState))
                                if (D = void 0,
                                Q && (K.onreadystatechange = function() {}
                                ,
                                V && delete W[Q]),
                                I)
                                    4 !== K.readyState && K.abort();
                                else {
                                    var Z = K.status;
                                    var ra = K.getAllResponseHeaders();
                                    var ia = {};
                                    (T = K.responseXML) && T.documentElement && (ia.xml = T);
                                    try {
                                        ia.text = K.responseText
                                    } catch (aa) {}
                                    try {
                                        var la = K.statusText
                                    } catch (aa) {
                                        la = ""
                                    }
                                    Z || !u.isLocal || u.crossDomain ? 1223 === Z && (Z = 204) : Z = ia.text ? 200 : 404
                                }
                        } catch (aa) {
                            I || H(-1, aa)
                        }
                        ia && H(Z, la, ia, ra)
                    }
                    ;
                    if (u.async)
                        if (4 === K.readyState)
                            setTimeout(D, 0);
                        else {
                            var Q = ++ca;
                            V && (W || (W = {},
                            e(window).unload(V)),
                            W[Q] = D);
                            K.onreadystatechange = D
                        }
                    else
                        D()
                },
                abort: function() {
                    D && D(0, 1)
                }
            }
        }
    });
    e.jqx.filter = function() {
        this.operator = "and";
        var u = "EMPTY NOT_EMPTY CONTAINS CONTAINS_CASE_SENSITIVE DOES_NOT_CONTAIN DOES_NOT_CONTAIN_CASE_SENSITIVE STARTS_WITH STARTS_WITH_CASE_SENSITIVE ENDS_WITH ENDS_WITH_CASE_SENSITIVE EQUAL EQUAL_CASE_SENSITIVE NULL NOT_NULL".split(" ")
          , D = "EQUAL NOT_EQUAL LESS_THAN LESS_THAN_OR_EQUAL GREATER_THAN GREATER_THAN_OR_EQUAL NULL NOT_NULL".split(" ")
          , B = "EQUAL NOT_EQUAL LESS_THAN LESS_THAN_OR_EQUAL GREATER_THAN GREATER_THAN_OR_EQUAL NULL NOT_NULL".split(" ")
          , H = ["EQUAL", "NOT_EQUAL"]
          , J = []
          , K = [];
        this.evaluate = function(ia) {
            for (var la = !0, aa = 0; aa < J.length; aa++) {
                var U = J[aa].evaluate(ia);
                la = 0 == aa ? U : 1 == K[aa] || "or" == K[aa] ? la || U : la && U
            }
            return la
        }
        ;
        this.getfilterscount = function() {
            return J.length
        }
        ;
        this.setoperatorsbyfiltertype = function(ia, la) {
            switch (ia) {
            case "numericfilter":
                D = la;
                break;
            case "stringfilter":
                u = la;
                break;
            case "datefilter":
                B = la;
                break;
            case "booleanfilter":
                H = la
            }
        }
        ;
        this.getoperatorsbyfiltertype = function(ia) {
            var la = [];
            switch (ia) {
            case "numericfilter":
                la = D.slice(0);
                break;
            case "stringfilter":
                la = u.slice(0);
                break;
            case "datefilter":
                la = B.slice(0);
                break;
            case "booleanfilter":
                la = H.slice(0)
            }
            return la
        }
        ;
        var Q = function() {
            var ia = function() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
            };
            return ia() + "-" + ia() + "-" + ia()
        };
        this.createfilter = function(ia, la, aa, U, fa, ma) {
            if (null == ia || void 0 == ia)
                return null;
            switch (ia) {
            case "numericfilter":
                return new T(la,aa.toUpperCase());
            case "stringfilter":
                return new Y(la,aa.toUpperCase());
            case "datefilter":
                return new Z(la,aa.toUpperCase(),fa,ma);
            case "booleanfilter":
                return new I(la,aa.toUpperCase());
            case "custom":
                return new ra(la,aa.toUpperCase(),U)
            }
            throw Error("jqxGrid: There is no such filter type. The available filter types are: 'numericfilter', 'stringfilter', 'datefilter' and 'booleanfilter'");
        }
        ;
        this.getfilters = function() {
            for (var ia = [], la = 0; la < J.length; la++) {
                var aa = {
                    value: J[la].filtervalue,
                    condition: J[la].comparisonoperator,
                    operator: K[la],
                    type: J[la].type
                };
                J[la].data && (aa.id = J[la].data);
                ia[la] = aa
            }
            return ia
        }
        ;
        this.addfilter = function(ia, la) {
            J[J.length] = la;
            la.key = Q();
            K[K.length] = ia
        }
        ;
        this.removefilter = function(ia) {
            for (var la = 0; la < J.length; la++)
                if (J[la].key == ia.key) {
                    J.splice(la, 1);
                    K.splice(la, 1);
                    break
                }
        }
        ;
        this.getoperatorat = function(ia) {
            return void 0 == ia || null == ia || 0 > ia || ia > J.length ? null : K[ia]
        }
        ;
        this.setoperatorat = function(ia, la) {
            if (void 0 == ia || null == ia || 0 > ia || ia > J.length)
                return null;
            K[la] = la
        }
        ;
        this.getfilterat = function(ia) {
            return void 0 == ia || null == ia || 0 > ia || ia > J.length ? null : J[ia]
        }
        ;
        this.setfilterat = function(ia, la) {
            if (void 0 == ia || null == ia || 0 > ia || ia > J.length)
                return null;
            la.key = Q();
            J[ia] = la
        }
        ;
        this.clear = function() {
            J = [];
            K = []
        }
        ;
        var Y = function(ia, la) {
            this.filtervalue = ia;
            this.comparisonoperator = la;
            this.type = "stringfilter";
            this.evaluate = function(aa) {
                var U = this.filtervalue
                  , fa = this.comparisonoperator;
                if (null == aa || void 0 == aa || "" == aa) {
                    if ("NULL" == fa)
                        return !0;
                    if ("NOT_NULL" == fa)
                        return !1;
                    if ("EQUAL" == fa && aa == U || "NOT_EQUAL" == fa && aa != U)
                        return !0;
                    if ("EMPTY" != fa)
                        return !1;
                    if ("" == aa)
                        return !0
                }
                var ma = "";
                try {
                    ma = aa.toString()
                } catch (S) {
                    return !0
                }
                var w = function(S, ha) {
                    switch (fa) {
                    case "EQUAL":
                        return e.jqx.string.equalsIgnoreCase(S, ha);
                    case "EQUAL_CASE_SENSITIVE":
                        return e.jqx.string.equals(S, ha);
                    case "NOT_EQUAL":
                        return !e.jqx.string.equalsIgnoreCase(S, ha);
                    case "NOT_EQUAL_CASE_SENSITIVE":
                        return !e.jqx.string.equals(S, ha);
                    case "CONTAINS":
                        return e.jqx.string.containsIgnoreCase(S, ha);
                    case "CONTAINS_CASE_SENSITIVE":
                        return e.jqx.string.contains(S, ha);
                    case "DOES_NOT_CONTAIN":
                        return !e.jqx.string.containsIgnoreCase(S, ha);
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return !e.jqx.string.contains(S, ha);
                    case "EMPTY":
                        return "" == S;
                    case "NOT_EMPTY":
                        return "" != S;
                    case "NOT_NULL":
                        return null != S;
                    case "STARTS_WITH":
                        return e.jqx.string.startsWithIgnoreCase(S, ha);
                    case "ENDS_WITH":
                        return e.jqx.string.endsWithIgnoreCase(S, ha);
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.endsWith(S, ha);
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.startsWith(S, ha);
                    default:
                        return !1
                    }
                }
                  , pa = [];
                if (U && U.indexO && "NOT_EQUAL" !== fa && (0 <= U.indexOf("|") || 0 <= U.indexOf(" AND ") || 0 <= U.indexOf(" OR ") || 0 <= U.indexOf(" and ") || 0 <= U.indexOf(" or "))) {
                    if (aa = w(ma, U))
                        return aa;
                    var ka = 0 <= U.indexOf(" AND ") ? U.split(" AND ") : [];
                    aa = 0 <= U.indexOf(" OR ") ? U.split(" OR ") : [];
                    var wa = 0 <= U.indexOf(" and ") ? U.split(" and ") : []
                      , ta = 0 <= U.indexOf(" or ") ? U.split(" or ") : []
                      , L = 0 <= U.indexOf("|") ? U.split("|") : [];
                    if (0 < L.length)
                        for (var O = 0; O < L.length; O++)
                            L[O] = e.trim(L[O]);
                    U = 0 <= U.indexOf(" ") ? U.split(" ") : [];
                    if (0 < U.length)
                        for (O = 0; O < U.length; O++)
                            U[O] = e.trim(U[O]);
                    ka = ka.concat(U);
                    ka = ka.concat(wa);
                    aa = aa.concat(L);
                    aa = aa.concat(ta);
                    if (0 < ka.length)
                        for (O = 0; O < ka.length; O++)
                            0 <= !ka[O].indexOf(" OR ") && pa.push(ka[O]);
                    if (0 < aa.length)
                        for (O = 0; O < aa.length; O++)
                            0 <= !aa[O].indexOf(" AND ") && pa.push(aa[O]);
                    U = void 0;
                    for (wa = 0; wa < pa.length; wa++)
                        aa = pa[wa],
                        aa = w(ma, aa),
                        ta = wa < ka.length ? "and" : "or",
                        U = void 0 == U ? aa : "or" == ta ? U || aa : U && aa;
                    return U
                }
                return w(ma, U)
            }
        }
          , I = function(ia, la) {
            this.filtervalue = ia;
            this.comparisonoperator = la;
            this.type = "booleanfilter";
            this.evaluate = function(aa) {
                var U = this.filtervalue
                  , fa = this.comparisonoperator;
                if (null == aa || void 0 == aa)
                    return "NULL" == fa ? !0 : !1;
                switch (fa) {
                case "EQUAL":
                    return aa == U || aa.toString() == U.toString();
                case "NOT_EQUAL":
                    return aa != U && aa.toString() != U.toString();
                default:
                    return !1
                }
            }
        }
          , T = function(ia, la) {
            this.filtervalue = ia;
            this.comparisonoperator = la;
            this.type = "numericfilter";
            this.evaluate = function(aa) {
                var U = this.filtervalue
                  , fa = this.comparisonoperator;
                if (null === aa || void 0 === aa || "" === aa) {
                    if ("NOT_NULL" == fa)
                        return !1;
                    if ("NULL" == fa)
                        return !0;
                    switch (fa) {
                    case "EQUAL":
                        return aa == U;
                    case "NOT_EQUAL":
                        return aa != U
                    }
                    return !1
                }
                if ("NULL" == fa)
                    return !1;
                if ("NOT_NULL" == fa)
                    return !0;
                var ma = aa;
                try {
                    ma = parseFloat(ma)
                } catch (O) {
                    if ("" != aa.toString())
                        return !1
                }
                var w = function(O, S) {
                    switch (fa) {
                    case "EQUAL":
                        return O == S;
                    case "NOT_EQUAL":
                        return O != S;
                    case "GREATER_THAN":
                        return O > S;
                    case "GREATER_THAN_OR_EQUAL":
                        return O >= S;
                    case "LESS_THAN":
                        return O < S;
                    case "LESS_THAN_OR_EQUAL":
                        return O <= S;
                    case "STARTS_WITH":
                        return e.jqx.string.startsWithIgnoreCase(O.toString(), S.toString());
                    case "ENDS_WITH":
                        return e.jqx.string.endsWithIgnoreCase(O.toString(), S.toString());
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.endsWith(O.toString(), S.toString());
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.startsWith(O.toString(), S.toString());
                    case "CONTAINS":
                        return e.jqx.string.containsIgnoreCase(O.toString(), S.toString());
                    case "CONTAINS_CASE_SENSITIVE":
                        return e.jqx.string.contains(O.toString(), S.toString());
                    case "DOES_NOT_CONTAIN":
                        return !e.jqx.string.containsIgnoreCase(O.toString(), S.toString());
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return !e.jqx.string.contains(O.toString(), S.toString());
                    default:
                        return !0
                    }
                }
                  , pa = [];
                U && U.indexOf && (U = U.replace("$", ""));
                if (U && U.indexOf && (0 <= U.indexOf("|") || 0 <= U.indexOf(" AND ") || 0 <= U.indexOf(" OR ") || 0 <= U.indexOf(" and ") || 0 <= U.indexOf(" or "))) {
                    var ka = w(ma, U);
                    if (ka)
                        return ka;
                    U = U.toString();
                    var wa = 0 <= U.indexOf(" AND ") ? U.split(" AND ") : []
                      , ta = 0 <= U.indexOf(" OR ") ? U.split(" OR ") : [];
                    aa = 0 <= U.indexOf(" and ") ? U.split(" and ") : [];
                    var L = 0 <= U.indexOf(" or ") ? U.split(" or ") : [];
                    wa = wa.concat(aa);
                    ta = ta.concat(L);
                    U = 0 <= U.indexOf("|") ? U.split("|") : [];
                    if (0 < U.length)
                        for (aa = 0; aa < U.length; aa++)
                            U[aa] = e.trim(U[aa]);
                    ta = ta.concat(U);
                    if (0 < wa.length)
                        for (aa = 0; aa < wa.length; aa++)
                            0 <= !wa[aa].indexOf(" OR ") && pa.push(wa[aa]);
                    if (0 < ta.length)
                        for (aa = 0; aa < ta.length; aa++)
                            0 <= !ta[aa].indexOf(" AND ") && pa.push(ta[aa]);
                    ta = void 0;
                    for (U = 0; U < pa.length; U++)
                        (aa = pa[U]) && aa.indexOf && 0 <= aa.indexOf("..") ? (aa = aa.toString().split(".."),
                        2 == aa.length && (ka = ma >= aa[0] && ma <= aa[1])) : ka = w(ma, aa),
                        aa = U < wa.length ? "and" : "or",
                        ta = void 0 == ta ? ka : "or" == aa ? ta || ka : ta && ka;
                    return ta
                }
                return U && U.indexOf && 0 <= U.indexOf("..") && (pa = U.toString().split(".."),
                2 == pa.length) ? ma >= pa[0] && ma <= pa[1] : w(ma, U)
            }
        }
          , Z = function(ia, la, aa, U) {
            this.filtervalue = ia;
            this.type = "datefilter";
            var fa = this;
            if (void 0 != aa && void 0 != U) {
                var ma = e.jqx.dataFormat.parsedate(ia, aa, U);
                null != ma ? this.filterdate = ma : (ma = e.jqx.dataFormat.tryparsedate(ia, U),
                null != ma && (this.filterdate = ma))
            } else
                ma = new Date(ia),
                this.filterdate = "NaN" == ma.toString() || "Invalid Date" == ma.toString() ? e.jqx.dataFormat.tryparsedate(ia) : ma;
            this.filterdate || (ma = new Date(ia),
            this.filterdate = "NaN" == ma.toString() || "Invalid Date" == ma.toString() ? e.jqx.dataFormat.tryparsedate(ia) : ma);
            this.comparisonoperator = la;
            this.evaluate = function(w) {
                var pa = this.filtervalue
                  , ka = this.comparisonoperator;
                if (null == w || void 0 == w || "" == w) {
                    if ("NOT_NULL" == ka)
                        return !1;
                    if ("NULL" == ka)
                        return !0;
                    switch (ka) {
                    case "EQUAL":
                        return w == pa;
                    case "NOT_EQUAL":
                        return w != pa
                    }
                    return !1
                }
                if ("NULL" == ka)
                    return !1;
                if ("NOT_NULL" == ka)
                    return !0;
                var wa = new Date;
                wa.setFullYear(1900, 0, 1);
                wa.setHours(12, 0, 0, 0);
                try {
                    var ta = new Date(w);
                    wa = w = "NaN" == ta.toString() || "Invalid Date" == ta.toString() ? e.jqx.dataFormat.tryparsedate(w) : ta;
                    var L = !1;
                    if (void 0 != aa && void 0 != U && (0 <= aa.indexOf("t") || 0 <= aa.indexOf("T") || 0 <= aa.indexOf(":") || 0 <= aa.indexOf("f")) && (L = !0,
                    pa && -1 == pa.toString().indexOf(":"))) {
                        var O = e.jqx.dataFormat.tryparsedate(pa.toString() + ":00", U);
                        null != O && (fa.filterdate = O)
                    }
                    void 0 != aa && (0 <= aa.indexOf("hh") || 0 <= aa.indexOf("t")) && (L = !0);
                    L || (wa.setHours(0),
                    wa.setMinutes(0),
                    wa.setSeconds(0))
                } catch (ja) {
                    if ("" != w.toString())
                        return !1
                }
                if (null != fa.filterdate)
                    pa = fa.filterdate;
                else if (pa && pa.indexOf && (-1 != pa.indexOf(":") || !isNaN(parseInt(pa)))) {
                    O = new Date(wa);
                    O.setHours(12, 0, 0, 0);
                    ta = pa.split(":");
                    for (pa = 0; pa < ta.length; pa++)
                        0 == pa && O.setHours(ta[pa]),
                        1 == pa && O.setMinutes(ta[pa]),
                        2 == pa && O.setSeconds(ta[pa]);
                    pa = O
                }
                L && pa && pa.setFullYear && wa && wa.getFullYear && -1 == aa.indexOf("d") && -1 == aa.indexOf("M") && -1 == aa.indexOf("y") && pa.setFullYear(wa.getFullYear(), wa.getMonth(), wa.getDate());
                L = function(ja, sa) {
                    null == ja && (ja = "");
                    switch (ka) {
                    case "EQUAL":
                        return ja.toString() == sa.toString();
                    case "NOT_EQUAL":
                        return ja.toString() != sa.toString();
                    case "GREATER_THAN":
                        return ja > sa;
                    case "GREATER_THAN_OR_EQUAL":
                        return ja >= sa;
                    case "LESS_THAN":
                        return ja < sa;
                    case "LESS_THAN_OR_EQUAL":
                        return ja <= sa;
                    case "STARTS_WITH":
                        return e.jqx.string.startsWithIgnoreCase(ja.toString(), sa.toString());
                    case "ENDS_WITH":
                        return e.jqx.string.endsWithIgnoreCase(ja.toString(), sa.toString());
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.endsWith(ja.toString(), sa.toString());
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return e.jqx.string.startsWith(ja.toString(), sa.toString());
                    case "CONTAINS":
                        return e.jqx.string.containsIgnoreCase(ja.toString(), sa.toString());
                    case "CONTAINS_CASE_SENSITIVE":
                        return e.jqx.string.contains(ja.toString(), sa.toString());
                    case "DOES_NOT_CONTAIN":
                        return !e.jqx.string.containsIgnoreCase(ja.toString(), sa.toString());
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return !e.jqx.string.contains(ja.toString(), sa.toString());
                    default:
                        return !0
                    }
                }
                ;
                ta = [];
                if (pa && pa.indexOf && (0 <= pa.indexOf("|") || 0 <= pa.indexOf(" AND ") || 0 <= pa.indexOf(" OR ") || 0 <= pa.indexOf(" and ") || 0 <= pa.indexOf(" or "))) {
                    if (O = L(wa, pa))
                        return O;
                    var S = 0 <= pa.indexOf(" AND ") ? pa.split(" AND ") : [];
                    w = 0 <= pa.indexOf(" OR ") ? pa.split(" OR ") : [];
                    var ha = 0 <= pa.indexOf(" and ") ? pa.split(" and ") : []
                      , na = 0 <= pa.indexOf(" or ") ? pa.split(" or ") : [];
                    S = S.concat(ha);
                    w = w.concat(na);
                    ha = 0 <= pa.indexOf("|") ? pa.split("|") : [];
                    if (0 < ha.length)
                        for (pa = 0; pa < ha.length; pa++)
                            ha[pa] = e.trim(ha[pa]);
                    w = w.concat(ha);
                    if (0 < S.length)
                        for (pa = 0; pa < S.length; pa++)
                            0 <= !S[pa].indexOf(" OR ") && ta.push(S[pa]);
                    if (0 < w.length)
                        for (pa = 0; pa < w.length; pa++)
                            0 <= !w[pa].indexOf(" AND ") && ta.push(w[pa]);
                    pa = void 0;
                    for (ha = 0; ha < ta.length; ha++)
                        (w = ta[ha]) && w.indexOf && 0 <= w.indexOf("..") ? (w = w.toString().split(".."),
                        2 == w.length && (O = wa >= w[0] && wa <= w[1])) : O = L(wa, w),
                        w = ha < S.length ? "and" : "or",
                        pa = void 0 == pa ? O : "or" == w ? pa || O : pa && O;
                    return pa
                }
                return pa && pa.indexOf && 0 <= pa.indexOf("..") && (ta = pa.toString().split(".."),
                2 == ta.length) ? wa >= ta[0] && wa <= ta[1] : L(wa, pa)
            }
        }
          , ra = function(ia, la, aa) {
            this.filtervalue = ia;
            this.comparisonoperator = la;
            this.evaluate = function(U, fa) {
                return aa(this.filtervalue, U, this.comparisonoperator)
            }
        }
    }
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.cssroundedcorners = function(b) {
        var d = {
            all: "jqx-rc-all",
            top: "jqx-rc-t",
            bottom: "jqx-rc-b",
            left: "jqx-rc-l",
            right: "jqx-rc-r",
            "top-right": "jqx-rc-tr",
            "top-left": "jqx-rc-tl",
            "bottom-right": "jqx-rc-br",
            "bottom-left": "jqx-rc-bl"
        }, c;
        for (c in d)
            if (d.hasOwnProperty(c) && b == c)
                return d[c]
    }
    ;
    e.jqx.jqxWidget("jqxButton", "", {});
    e.extend(e.jqx._jqxButton.prototype, {
        defineInstance: function() {
            var b = {
                type: "",
                cursor: "arrow",
                roundedCorners: "all",
                disabled: !1,
                height: null,
                width: null,
                overrideTheme: !1,
                enableHover: !0,
                enableDefault: !0,
                enablePressed: !0,
                imgPosition: "center",
                imgSrc: "",
                imgWidth: 16,
                imgHeight: 16,
                value: null,
                textPosition: "",
                textImageRelation: "overlay",
                rtl: !1,
                _ariaDisabled: !1,
                _scrollAreaButton: !1,
                template: "default",
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                }
            };
            if (this === e.jqx._jqxButton.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        _addImage: function(b) {
            if ("input" == this.element.nodeName.toLowerCase() || "button" == this.element.nodeName.toLowerCase() || "div" == this.element.nodeName.toLowerCase()) {
                if (this._img)
                    this._img.setAttribute("src", this.imgSrc),
                    this._img.setAttribute("width", this.imgWidth),
                    this._img.setAttribute("height", this.imgHeight),
                    this._text.innerHTML = this.value;
                else {
                    this.field = this.element;
                    this.field.className && (this._className = this.field.className);
                    var d = this.field.title
                      , c = null;
                    this.field.getAttribute("value") ? c = this.field.getAttribute("value") : "input" != this.element.nodeName.toLowerCase() && (c = this.element.innerHTML);
                    this.value && (c = this.value);
                    b = this.field.id.length ? this.field.id.replace(/[^\w]/g, "_") + "_" + b : e.jqx.utilities.createId() + "_" + b;
                    var f = document.createElement("div");
                    f.id = b;
                    f.title = d;
                    f.style.cssText = this.field.style.cssText;
                    f.style.boxSizing = "border-box";
                    d = document.createElement("img");
                    d.setAttribute("src", this.imgSrc);
                    d.setAttribute("width", this.imgWidth);
                    d.setAttribute("height", this.imgHeight);
                    f.appendChild(d);
                    this._img = d;
                    d = document.createElement("span");
                    c && (this.value = d.innerHTML = c);
                    f.appendChild(d);
                    this._text = d;
                    this.field.style.display = "none";
                    this.field.parentNode && this.field.parentNode.insertBefore(f, this.field.nextSibling);
                    c = this.host.data();
                    this.host = e(f);
                    this.host.data(c);
                    this.element = f;
                    this.element.id = this.field.id;
                    this.field.id = b;
                    b = new e(this.element);
                    c = new e(this.field);
                    this._className && (b.addClass(this._className),
                    c.removeClass(this._className));
                    this.field.tabIndex && (b = this.field.tabIndex,
                    this.field.tabIndex = -1,
                    this.element.tabIndex = b)
                }
                this._img.style.display = this.imgSrc ? "inline" : "none";
                this._text.style.display = this.value ? "inline" : "none";
                this._positionTextAndImage()
            }
        },
        _positionTextAndImage: function() {
            var b = this.element.offsetWidth
              , d = this.element.offsetHeight
              , c = this.imgWidth
              , f = this.imgHeight;
            "" == this.imgSrc && (f = c = 0);
            var g = this._text.offsetWidth
              , h = this._text.offsetHeight
              , k = 0
              , l = 0;
            switch (this.textImageRelation) {
            case "imageBeforeText":
            case "textBeforeImage":
                k = c + g + 8 + 4 + 8;
                l = Math.max(f, h) + 8 + 4 + 8;
                break;
            case "imageAboveText":
            case "textAboveImage":
                k = Math.max(c, g) + 8;
                l = f + h + 4 + 8 + 8;
                break;
            case "overlay":
                k = Math.max(c, g) + 8,
                l = Math.max(f, h) + 8
            }
            this.width || (this.element.style.width = k + "px",
            b = k);
            this.height || (this.element.style.height = l + "px",
            d = l);
            this._img.style.position = "absolute";
            this._text.style.position = "absolute";
            this.element.style.position = "relative";
            this.element.style.overflow = "hidden";
            k = {};
            l = {};
            var m = function(F, P, X, W, V) {
                P.width < W && (P.width = W);
                P.height < V && (P.height = V);
                switch (X) {
                case "left":
                    F.style.left = P.left + "px";
                    F.style.top = P.top + P.height / 2 - V / 2 + "px";
                    break;
                case "topLeft":
                    F.style.left = P.left + "px";
                    F.style.top = P.top + "px";
                    break;
                case "bottomLeft":
                    F.style.left = P.left + "px";
                    F.style.top = P.top + P.height - V + "px";
                    break;
                default:
                case "center":
                    F.style.left = P.left + P.width / 2 - W / 2 + "px";
                    F.style.top = P.top + P.height / 2 - V / 2 + "px";
                    break;
                case "top":
                    F.style.left = P.left + P.width / 2 - W / 2 + "px";
                    F.style.top = P.top + "px";
                    break;
                case "bottom":
                    F.style.left = P.left + P.width / 2 - W / 2 + "px";
                    F.style.top = P.top + P.height - V + "px";
                    break;
                case "right":
                    F.style.left = P.left + P.width - W + "px";
                    F.style.top = P.top + P.height / 2 - V / 2 + "px";
                    break;
                case "topRight":
                    F.style.left = P.left + P.width - W + "px";
                    F.style.top = P.top + "px";
                    break;
                case "bottomRight":
                    F.style.left = P.left + P.width - W + "px",
                    F.style.top = P.top + P.height - V + "px"
                }
            }
              , n = 0
              , p = 0
              , q = (b - n) / 2
              , t = (d - p) / 2
              , v = this._img
              , z = this._text
              , E = d - p
              , C = b - n;
            n += 4;
            p += 4;
            b = b - 4 - 2;
            C = C - 8 - 2;
            E = E - 8 - 2;
            switch (this.textImageRelation) {
            case "imageBeforeText":
                switch (this.imgPosition) {
                case "left":
                case "topLeft":
                case "bottomLeft":
                    l = {
                        left: n,
                        top: p,
                        width: n + c,
                        height: E
                    };
                    k = {
                        left: n + c + 4,
                        top: p,
                        width: C - c - 4,
                        height: E
                    };
                    break;
                case "center":
                case "top":
                case "bottom":
                    l = {
                        left: q - g / 2 - c / 2 - 2,
                        top: p,
                        width: c,
                        height: E
                    };
                    k = {
                        left: l.left + c + 4,
                        top: p,
                        width: b - l.left - c - 4,
                        height: E
                    };
                    break;
                case "right":
                case "topRight":
                case "bottomRight":
                    l = {
                        left: b - g - c - 4,
                        top: p,
                        width: c,
                        height: E
                    },
                    k = {
                        left: l.left + c + 4,
                        top: p,
                        width: b - l.left - c - 4,
                        height: E
                    }
                }
                m(v, l, this.imgPosition, c, f);
                m(z, k, this.textPosition, g, h);
                break;
            case "textBeforeImage":
                switch (this.textPosition) {
                case "left":
                case "topLeft":
                case "bottomLeft":
                    k = {
                        left: n,
                        top: p,
                        width: n + g,
                        height: E
                    };
                    l = {
                        left: n + g + 4,
                        top: p,
                        width: C - g - 4,
                        height: E
                    };
                    break;
                case "center":
                case "top":
                case "bottom":
                    k = {
                        left: q - g / 2 - c / 2 - 2,
                        top: p,
                        width: g,
                        height: E
                    };
                    l = {
                        left: k.left + g + 4,
                        top: p,
                        width: b - k.left - g - 4,
                        height: E
                    };
                    break;
                case "right":
                case "topRight":
                case "bottomRight":
                    k = {
                        left: b - g - c - 4,
                        top: p,
                        width: g,
                        height: E
                    },
                    l = {
                        left: k.left + g + 4,
                        top: p,
                        width: b - k.left - g - 4,
                        height: E
                    }
                }
                m(v, l, this.imgPosition, c, f);
                m(z, k, this.textPosition, g, h);
                break;
            case "imageAboveText":
                switch (this.imgPosition) {
                case "topRight":
                case "top":
                case "topLeft":
                    l = {
                        left: n,
                        top: p,
                        width: C,
                        height: f
                    };
                    k = {
                        left: n,
                        top: p + f + 4,
                        width: C,
                        height: E - f - 4
                    };
                    break;
                case "left":
                case "center":
                case "right":
                    l = {
                        left: n,
                        top: t - f / 2 - h / 2 - 2,
                        width: C,
                        height: f
                    };
                    k = {
                        left: n,
                        top: l.top + 4 + f,
                        width: C,
                        height: E - l.top - 4 - f
                    };
                    break;
                case "bottomLeft":
                case "bottom":
                case "bottomRight":
                    l = {
                        left: n,
                        top: d - f - h - 4,
                        width: C,
                        height: f
                    },
                    k = {
                        left: n,
                        top: l.top + 4 + f,
                        width: C,
                        height: h
                    }
                }
                m(v, l, this.imgPosition, c, f);
                m(z, k, this.textPosition, g, h);
                break;
            case "textAboveImage":
                switch (this.textPosition) {
                case "topRight":
                case "top":
                case "topLeft":
                    k = {
                        left: n,
                        top: p,
                        width: C,
                        height: h
                    };
                    l = {
                        left: n,
                        top: p + h + 4,
                        width: C,
                        height: E - h - 4
                    };
                    break;
                case "left":
                case "center":
                case "right":
                    k = {
                        left: n,
                        top: t - f / 2 - h / 2 - 2,
                        width: C,
                        height: h
                    };
                    l = {
                        left: n,
                        top: k.top + 4 + h,
                        width: C,
                        height: E - k.top - 4 - h
                    };
                    break;
                case "bottomLeft":
                case "bottom":
                case "bottomRight":
                    k = {
                        left: n,
                        top: d - f - h - 4,
                        width: C,
                        height: h
                    },
                    l = {
                        left: n,
                        top: k.top + 4 + h,
                        width: C,
                        height: f
                    }
                }
                m(v, l, this.imgPosition, c, f);
                m(z, k, this.textPosition, g, h);
                break;
            default:
                k = {
                    left: n,
                    top: p,
                    width: C,
                    height: E
                },
                l = {
                    left: n,
                    top: p,
                    width: C,
                    height: E
                },
                m(v, l, this.imgPosition, c, f),
                m(z, k, this.textPosition, g, h)
            }
        },
        createInstance: function(b) {
            var d = this;
            d._setSize();
            d.isMaterialized();
            d.buttonObj = new e(d.element);
            if ("" != d.imgSrc || "" != d.textPosition || d.element.value && 0 <= d.element.value.indexOf("<") || null != d.value)
                d.refresh(),
                d._addImage("jqxButton"),
                d.buttonObj = new e(d.element);
            d._ariaDisabled || d.element.setAttribute("role", "button");
            "" !== d.type && d.element.setAttribute("type", d.type);
            d.overrideTheme || (d.buttonObj.addClass(d.toThemeProperty(e.jqx.cssroundedcorners(d.roundedCorners))),
            d.enableDefault && d.buttonObj.addClass(d.toThemeProperty("jqx-button")),
            d.buttonObj.addClass(d.toThemeProperty("jqx-widget")));
            d.isTouchDevice = e.jqx.mobile.isTouchDevice();
            d._ariaDisabled || e.jqx.aria(this);
            "arrow" != d.cursor && (d.element.style.cursor = d.disabled ? "arrow" : d.cursor);
            b = "mouseenter mouseleave mousedown focus blur";
            d._scrollAreaButton && (b = "mousedown");
            d.isTouchDevice && (d.addHandler(d.host, e.jqx.mobile.getTouchEventName("touchstart"), function(c) {
                d.isPressed = !0;
                d.refresh()
            }),
            d.addHandler(e(document), e.jqx.mobile.getTouchEventName("touchend") + "." + d.element.id, function(c) {
                d.isPressed = !1;
                d.refresh()
            }));
            d.addHandler(d.host, b, function(c) {
                switch (c.type) {
                case "mouseenter":
                    d.isTouchDevice || d.disabled || !d.enableHover || (d.isMouseOver = !0,
                    d.refresh());
                    break;
                case "mouseleave":
                    d.isTouchDevice || d.disabled || !d.enableHover || (d.isMouseOver = !1,
                    d.refresh());
                    break;
                case "mousedown":
                    d.disabled || (d.isPressed = !0,
                    d.refresh());
                    break;
                case "focus":
                    d.disabled || (d.isFocused = !0,
                    d.refresh());
                    break;
                case "blur":
                    d.disabled || (d.isFocused = !1,
                    d.refresh())
                }
            });
            d.mouseupfunc = function(c) {
                d.disabled || !d.isPressed && !d.isMouseOver || (d.isPressed = !1,
                d.refresh())
            }
            ;
            d.addHandler(document, "mouseup.button" + d.element.id, d.mouseupfunc);
            try {
                "" == document.referrer && !window.frameElement || null == window.top || window.top == window.that || (b = "",
                window.parent && document.referrer && (b = document.referrer),
                -1 != b.indexOf(document.location.host) && window.top.document && window.top.document.addEventListener("mouseup", d._topDocumentMouseupHandler))
            } catch (c) {}
            d.propertyChangeMap.roundedCorners = function(c, f, g, h) {
                c.buttonObj.removeClass(c.toThemeProperty(e.jqx.cssroundedcorners(g)));
                c.buttonObj.addClass(c.toThemeProperty(e.jqx.cssroundedcorners(h)))
            }
            ;
            d.propertyChangeMap.disabled = function(c, f, g, h) {
                g != h && (c.refresh(),
                c.element.setAttribute("disabled", h),
                c.element.disabled = h,
                c.element.style.cursor = h ? "default" : c.cursor,
                e.jqx.aria(c, "aria-disabled", c.disabled))
            }
            ;
            d.propertyChangeMap.rtl = function(c, f, g, h) {
                g != h && c.refresh()
            }
            ;
            d.propertyChangeMap.template = function(c, f, g, h) {
                g != h && (c.buttonObj.removeClass(c.toThemeProperty("jqx-" + g)),
                c.refresh())
            }
            ;
            d.propertyChangeMap.theme = function(c, f, g, h) {
                c.buttonObj.removeClass(c.element);
                g && (c.buttonObj.removeClass("jqx-button-" + g),
                c.buttonObj.removeClass("jqx-widget-" + g),
                c.buttonObj.removeClass("jqx-fill-state-normal-" + g),
                c.buttonObj.removeClass(c.toThemeProperty(e.jqx.cssroundedcorners(c.roundedCorners)) + "-" + g));
                c.enableDefault && c.buttonObj.addClass(c.toThemeProperty("jqx-button"));
                c.buttonObj.addClass(c.toThemeProperty("jqx-widget"));
                c.overrideTheme || c.buttonObj.addClass(c.toThemeProperty(e.jqx.cssroundedcorners(c.roundedCorners)));
                c._oldCSSCurrent = null;
                c.refresh()
            }
            ;
            d.disabled && (d.element.disabled = !0,
            d.element.setAttribute("disabled", "true"))
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this._setSize()
        },
        val: function(b) {
            var d = this.host.find("input");
            if (0 < d.length) {
                if (0 == arguments.length || "object" == typeof b)
                    return d.val();
                d.val(b);
                this.refresh();
                return d.val()
            }
            if (0 == arguments.length || "object" == typeof b)
                return "button" == this.element.nodeName.toLowerCase() ? e(this.element).text() : this.element.value;
            0 < arguments.length && this._text ? this._text.innerHTML = arguments[0] : (0 < arguments.length && "DIV" === this.element.nodeName && (this.element.innerHTML = arguments[0],
            this.refresh()),
            this.element.value = arguments[0],
            "button" == this.element.nodeName.toLowerCase() && e(this.element).html(arguments[0]));
            this.refresh()
        },
        _setSize: function() {
            var b = this.height
              , d = this.width;
            b && (isNaN(b) || (b += "px"),
            this.element.style.height = b);
            d && (isNaN(d) || (d += "px"),
            this.element.style.width = d)
        },
        _removeHandlers: function() {
            this.removeHandler(this.host, "selectstart");
            this.removeHandler(this.host, "click");
            this.removeHandler(this.host, "focus");
            this.removeHandler(this.host, "blur");
            this.removeHandler(this.host, "mouseenter");
            this.removeHandler(this.host, "mouseleave");
            this.removeHandler(this.host, "mousedown");
            this.removeHandler(e(document), "mouseup.button" + this.element.id, this.mouseupfunc);
            this.isTouchDevice && (this.removeHandler(this.host, e.jqx.mobile.getTouchEventName("touchstart")),
            this.removeHandler(e(document), e.jqx.mobile.getTouchEventName("touchend") + "." + this.element.id));
            this.mouseupfunc = null;
            delete this.mouseupfunc
        },
        focus: function() {
            this.host.focus()
        },
        destroy: function() {
            this._removeHandlers();
            var b = e.data(this.element, "jqxButton");
            b && delete b.instance;
            this.host.removeClass();
            this.host.removeData();
            this.host.remove();
            delete this.set;
            delete this.get;
            delete this.call;
            delete this.element;
            delete this.host
        },
        render: function() {
            this.refresh()
        },
        propertiesChangedHandler: function(b, d, c) {
            c && c.width && c.height && 2 == Object.keys(c).length && (b._setSize(),
            b.refresh())
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (void 0 != this.isInitialized && 0 != this.isInitialized && f != c && !(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 == Object.keys(b.batchUpdate).length)) {
                "type" === d && b.element.setAttribute("type", f);
                if ("textImageRelation" == d || "textPosition" == d || "imgPosition" == d)
                    b._img ? b._positionTextAndImage() : b._addImage("jqxButton");
                "imgSrc" != d && "imgWidth" != d && "imgHeight" != d || b._addImage("jqxButton");
                "value" === d && b.val(f);
                if ("width" == d || "height" == d)
                    b._setSize(),
                    b.refresh()
            }
        },
        refresh: function() {
            if (!this.overrideTheme) {
                var b = this.toThemeProperty("jqx-fill-state-focus")
                  , d = this.toThemeProperty("jqx-fill-state-disabled")
                  , c = this.toThemeProperty("jqx-fill-state-normal");
                this.enableDefault || (c = "");
                var f = this.toThemeProperty("jqx-fill-state-hover")
                  , g = this.toThemeProperty("jqx-fill-state-pressed")
                  , h = this.toThemeProperty("jqx-fill-state-pressed");
                this.enablePressed || (g = "");
                this.host && ((this.element.disabled = this.disabled) ? (this._oldCSSCurrent && this.buttonObj.removeClass(this._oldCSSCurrent),
                d = c + " " + d,
                "default" !== this.template && "" !== this.template && (d += " jqx-" + this.template,
                "" != this.theme && (d += " jqx-" + this.template + "-" + this.theme)),
                this.buttonObj.addClass(d),
                this._oldCSSCurrent = d) : (d = this.isMouseOver && !this.isTouchDevice ? this.isPressed ? h : f : this.isPressed ? g : c,
                this.isFocused && (d += " " + b),
                "default" !== this.template && "" !== this.template && (d += " jqx-" + this.template,
                "" != this.theme && (d += " jqx-" + this.template + "-" + this.theme)),
                d != this._oldCSSCurrent && (this._oldCSSCurrent && this.buttonObj.removeClass(this._oldCSSCurrent),
                this.buttonObj.addClass(d),
                this._oldCSSCurrent = d),
                this.rtl && (this.buttonObj.addClass(this.toThemeProperty("jqx-rtl")),
                this.element.style.direction = "rtl"),
                this.isMaterialized() && this.host.addClass("buttonRipple")))
            }
        }
    });
    e.jqx.jqxWidget("jqxLinkButton", "", {});
    e.extend(e.jqx._jqxLinkButton.prototype, {
        defineInstance: function() {
            this.disabled = !1;
            this.width = this.height = null;
            this.rtl = !1;
            this.href = null
        },
        createInstance: function(b) {
            var d = this;
            this.host.onselectstart = function() {
                return !1
            }
            ;
            this.host.attr("role", "button");
            var c = this.height || this.element.offsetHeight
              , f = this.width || this.element.offsetWidth;
            this.href = this.element.getAttribute("href");
            this.target = this.element.getAttribute("target");
            this.content = this.host.text();
            this.element.innerHTML = "";
            var g = document.createElement("input");
            g.type = "button";
            g.className = "jqx-wrapper " + this.toThemeProperty("jqx-reset");
            this._setSize(g, f, c);
            g.value = this.content;
            (new e(this.element)).addClass(this.toThemeProperty("jqx-link"));
            this.element.style.color = "inherit";
            this.element.appendChild(g);
            this._setSize(g, f, c);
            b = void 0 == b ? {} : b[0] || {};
            e(g).jqxButton(b);
            this.wrapElement = g;
            this.disabled && (this.element.disabled = !0);
            this.propertyChangeMap.disabled = function(h, k, l, m) {
                h.element.disabled = m;
                h.wrapElement.jqxButton({
                    disabled: m
                })
            }
            ;
            this.addHandler(e(g), "click", function(h) {
                if (!this.disabled)
                    d.onclick(h);
                return !1
            })
        },
        _setSize: function(b, d, c) {
            c && (isNaN(c) || (c += "px"),
            b.style.height = c);
            d && (isNaN(d) || (d += "px"),
            b.style.width = d)
        },
        onclick: function(b) {
            null != this.target ? window.open(this.href, this.target) : window.location = this.href
        }
    });
    e.jqx.jqxWidget("jqxRepeatButton", "jqxButton", {});
    e.extend(e.jqx._jqxRepeatButton.prototype, {
        defineInstance: function() {
            this.delay = 50
        },
        createInstance: function(b) {
            var d = this
              , c = e.jqx.mobile.isTouchDevice();
            b = c ? "touchend." + this.base.element.id : "mouseup." + this.base.element.id;
            var f = c ? "touchstart." + this.base.element.id : "mousedown." + this.base.element.id;
            this.addHandler(e(document), b, function(g) {
                null != d.timeout && (clearTimeout(d.timeout),
                d.timeout = null,
                d.refresh());
                void 0 != d.timer && (clearInterval(d.timer),
                d.timer = null,
                d.refresh())
            });
            this.addHandler(this.base.host, f, function(g) {
                null != d.timer && clearInterval(d.timer);
                d.timeout = setTimeout(function() {
                    clearInterval(d.timer);
                    d.timer = setInterval(function(h) {
                        d.ontimer(h)
                    }, d.delay)
                }, 150)
            });
            this.mousemovefunc = function(g) {
                c || 0 != g.which || null == d.timer || (clearInterval(d.timer),
                d.timer = null)
            }
            ;
            this.addHandler(this.base.host, "mousemove", this.mousemovefunc)
        },
        destroy: function() {
            var b = e.jqx.mobile.isTouchDevice()
              , d = b ? "touchend." + this.base.element.id : "mouseup." + this.base.element.id;
            b = b ? "touchstart." + this.base.element.id : "mousedown." + this.base.element.id;
            this.removeHandler(this.base.host, "mousemove", this.mousemovefunc);
            this.removeHandler(this.base.host, b);
            this.removeHandler(e(document), d);
            this.timer = null;
            delete this.mousemovefunc;
            delete this.timer;
            (d = e.data(this.base.element, "jqxRepeatButton")) && delete d.instance;
            e(this.base.element).removeData();
            this.base.destroy();
            delete this.base
        },
        stop: function() {
            clearInterval(this.timer);
            this.timer = null
        },
        ontimer: function(b) {
            b = new e.Event("click");
            null != this.base && null != this.base.host && this.base.host.trigger(b)
        }
    });
    e.jqx.jqxWidget("jqxToggleButton", "jqxButton", {});
    e.extend(e.jqx._jqxToggleButton.prototype, {
        defineInstance: function() {
            this.toggled = !1;
            this.uiToggle = !0;
            this.aria = {
                "aria-checked": {
                    name: "toggled",
                    type: "boolean"
                },
                "aria-disabled": {
                    name: "disabled",
                    type: "boolean"
                }
            }
        },
        createInstance: function(b) {
            var d = this;
            d.base.overrideTheme = !0;
            d.isTouchDevice = e.jqx.mobile.isTouchDevice();
            e.jqx.aria(this);
            d.propertyChangeMap.roundedCorners = function(c, f, g, h) {
                c.base.buttonObj.removeClass(c.toThemeProperty(e.jqx.cssroundedcorners(g)));
                c.base.buttonObj.addClass(c.toThemeProperty(e.jqx.cssroundedcorners(h)))
            }
            ;
            d.propertyChangeMap.toggled = function(c, f, g, h) {
                c.refresh()
            }
            ;
            d.propertyChangeMap.disabled = function(c, f, g, h) {
                c.base.disabled = h;
                c.refresh()
            }
            ;
            d.addHandler(d.base.host, "click", function(c) {
                !d.base.disabled && d.uiToggle && d.toggle()
            });
            d.isTouchDevice || (d.addHandler(d.base.host, "mouseenter", function(c) {
                d.base.disabled || d.refresh()
            }),
            d.addHandler(d.base.host, "mouseleave", function(c) {
                d.base.disabled || d.refresh()
            }));
            d.addHandler(d.base.host, "mousedown", function(c) {
                d.base.disabled || d.refresh()
            });
            d.addHandler(e(document), "mouseup.togglebutton" + d.base.element.id, function(c) {
                d.base.disabled || d.refresh()
            })
        },
        destroy: function() {
            this._removeHandlers();
            this.base.destroy()
        },
        _removeHandlers: function() {
            this.removeHandler(this.base.host, "click");
            this.removeHandler(this.base.host, "mouseenter");
            this.removeHandler(this.base.host, "mouseleave");
            this.removeHandler(this.base.host, "mousedown");
            this.removeHandler(e(document), "mouseup.togglebutton" + this.base.element.id)
        },
        toggle: function() {
            this.toggled = !this.toggled;
            this.refresh();
            e.jqx.aria(this, "aria-checked", this.toggled)
        },
        unCheck: function() {
            this.toggled = !1;
            this.refresh()
        },
        check: function() {
            this.toggled = !0;
            this.refresh()
        },
        refresh: function() {
            var b = this.base.toThemeProperty("jqx-fill-state-disabled")
              , d = this.base.toThemeProperty("jqx-fill-state-normal");
            this.base.enableDefault || (d = "");
            var c = this.base.toThemeProperty("jqx-fill-state-hover")
              , f = this.base.toThemeProperty("jqx-fill-state-pressed")
              , g = this.base.toThemeProperty("jqx-fill-state-pressed");
            if (this.base.element.disabled = this.base.disabled)
                this.base.buttonObj.addClass(d + " " + b);
            else {
                var h = this.base.isMouseOver && !this.isTouchDevice ? this.base.isPressed || this.toggled ? g : c : this.base.isPressed || this.toggled ? f : d;
                "default" !== this.base.template && "" !== this.base.template && (h += " jqx-" + this.base.template,
                "" != this.base.theme && (h += " jqx-" + this.template + "-" + this.base.theme));
                this.base.buttonObj.hasClass(b) && b != h && this.base.buttonObj.removeClass(b);
                this.base.buttonObj.hasClass(d) && d != h && this.base.buttonObj.removeClass(d);
                this.base.buttonObj.hasClass(c) && c != h && this.base.buttonObj.removeClass(c);
                this.base.buttonObj.hasClass(f) && f != h && this.base.buttonObj.removeClass(f);
                this.base.buttonObj.hasClass(g) && g != h && this.base.buttonObj.removeClass(g);
                this.base.buttonObj.hasClass(h) || this.base.buttonObj.addClass(h)
            }
        },
        _topDocumentMouseupHandler: function(b) {
            this.isPressed = !1;
            this.refresh()
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxScrollBar", "", {});
    e.extend(e.jqx._jqxScrollBar.prototype, {
        defineInstance: function() {
            var b = {
                height: null,
                width: null,
                vertical: !1,
                min: 0,
                max: 1E3,
                value: 0,
                step: 10,
                largestep: 50,
                thumbMinSize: 10,
                thumbSize: 0,
                thumbStep: "auto",
                roundedCorners: "all",
                showButtons: !0,
                disabled: !1,
                touchMode: "auto",
                touchModeStyle: "auto",
                thumbTouchSize: 0,
                _triggervaluechanged: !0,
                rtl: !1,
                areaDownCapture: !1,
                areaUpCapture: !1,
                _initialLayout: !1,
                offset: 0,
                reference: 0,
                velocity: 0,
                frame: 0,
                timestamp: 0,
                ticker: null,
                amplitude: 0,
                target: 0
            };
            if (this === e.jqx._jqxScrollBar.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function(b) {
            this.render()
        },
        render: function() {
            this._mouseup = new Date;
            var b = this;
            e.jqx.utilities && "hidden" == e.jqx.utilities.scrollBarButtonsVisibility && (this.showButtons = !1);
            b.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                b.host.html("<div id='jqxScrollOuterWrap' style='box-sizing: content-box; width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='box-sizing: content-box; width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div><div id='jqxScrollAreaUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div></div></div>")
            }) : this.element.innerHTML = "<div id='jqxScrollOuterWrap' style='box-sizing: content-box; width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='box-sizing: content-box; width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div><div id='jqxScrollAreaUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div></div></div>";
            void 0 != this.width && 0 < parseInt(this.width) && this.host.width(parseInt(this.width));
            void 0 != this.height && 0 < parseInt(this.height) && this.host.height(parseInt(this.height));
            this.isPercentage = !1;
            null != this.width && -1 != this.width.toString().indexOf("%") && (this.host.width(this.width),
            this.isPercentage = !0);
            null != this.height && -1 != this.height.toString().indexOf("%") && (this.host.height(this.height),
            this.isPercentage = !0);
            if (this.isPercentage) {
                var d = this;
                e.jqx.utilities.resize(this.host, function() {
                    d._arrange()
                }, !1)
            }
            this.thumbCapture = !1;
            this.scrollOuterWrap = e(this.element.firstChild);
            this.scrollWrap = e(this.scrollOuterWrap[0].firstChild);
            this.btnUp = e(this.scrollWrap[0].firstChild);
            this.areaUp = e(this.btnUp[0].nextSibling);
            this.btnThumb = e(this.areaUp[0].nextSibling);
            this.arrowUp = e(this.btnUp[0].firstChild);
            this.areaDown = e(this.btnThumb[0].nextSibling);
            this.btnDown = e(this.areaDown[0].nextSibling);
            this.arrowDown = e(this.btnDown[0].firstChild);
            var c = this.element.id;
            this.btnUp[0].id = "jqxScrollBtnUp" + c;
            this.btnDown[0].id = "jqxScrollBtnDown" + c;
            this.btnThumb[0].id = "jqxScrollThumb" + c;
            this.areaUp[0].id = "jqxScrollAreaUp" + c;
            this.areaDown[0].id = "jqxScrollAreaDown" + c;
            this.scrollWrap[0].id = "jqxScrollWrap" + c;
            this.scrollOuterWrap[0].id = "jqxScrollOuterWrap" + c;
            if (!this.host.jqxRepeatButton)
                throw Error("jqxScrollBar: Missing reference to jqxbuttons.js.");
            this.btnUp.jqxRepeatButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            });
            this.btnDown.jqxRepeatButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            });
            this.btnDownInstance = e.data(this.btnDown[0], "jqxRepeatButton").instance;
            this.btnUpInstance = e.data(this.btnUp[0], "jqxRepeatButton").instance;
            this.areaUp.jqxRepeatButton({
                _scrollAreaButton: !0,
                _ariaDisabled: !0,
                overrideTheme: !0
            });
            this.areaDown.jqxRepeatButton({
                _scrollAreaButton: !0,
                _ariaDisabled: !0,
                overrideTheme: !0
            });
            this.btnThumb.jqxButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            });
            this.propertyChangeMap.value = function(f, g, h, k) {
                isNaN(k) || h != k && f.setPosition(parseFloat(k), !0)
            }
            ;
            this.propertyChangeMap.width = function(f, g, h, k) {
                void 0 != f.width && 0 < parseInt(f.width) && (f.host.width(parseInt(f.width)),
                f._arrange())
            }
            ;
            this.propertyChangeMap.height = function(f, g, h, k) {
                void 0 != f.height && 0 < parseInt(f.height) && (f.host.height(parseInt(f.height)),
                f._arrange())
            }
            ;
            this.propertyChangeMap.theme = function(f, g, h, k) {
                f.setTheme()
            }
            ;
            this.propertyChangeMap.max = function(f, g, h, k) {
                isNaN(k) || h == k || (f.max = parseInt(k),
                f.min > f.max && (f.max = f.min + 1),
                f._arrange(),
                f.setPosition(f.value))
            }
            ;
            this.propertyChangeMap.min = function(f, g, h, k) {
                isNaN(k) || h == k || (f.min = parseInt(k),
                f.min > f.max && (f.max = f.min + 1),
                f._arrange(),
                f.setPosition(f.value))
            }
            ;
            this.propertyChangeMap.disabled = function(f, g, h, k) {
                h != k && (k ? f.host.addClass(f.toThemeProperty("jqx-fill-state-disabled")) : f.host.removeClass(f.toThemeProperty("jqx-fill-state-disabled")),
                f.btnUp.jqxRepeatButton("disabled", f.disabled),
                f.btnDown.jqxRepeatButton("disabled", f.disabled),
                f.btnThumb.jqxButton("disabled", f.disabled))
            }
            ;
            this.propertyChangeMap.touchMode = function(f, g, h, k) {
                h != k && (f._updateTouchBehavior(),
                !0 === k ? (f.showButtons = !1,
                f.refresh()) : !1 === k && (f.showButtons = !0,
                f.refresh()))
            }
            ;
            this.propertyChangeMap.rtl = function(f, g, h, k) {
                h != k && f.refresh()
            }
            ;
            this.buttonDownCapture = this.buttonUpCapture = !1;
            this._updateTouchBehavior();
            this.setPosition(this.value);
            this._addHandlers();
            this.setTheme()
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this._arrange()
        },
        _updateTouchBehavior: function() {
            this.isTouchDevice = e.jqx.mobile.isTouchDevice();
            1 == this.touchMode ? (e.jqx.browser.msie && 9 > e.jqx.browser.version || (this.isTouchDevice = !0,
            e.jqx.mobile.setMobileSimulator(this.btnThumb[0]),
            this._removeHandlers(),
            this._addHandlers()),
            this.setTheme()) : 0 == this.touchMode && (this.isTouchDevice = !1)
        },
        _addHandlers: function() {
            var b = this
              , d = !1;
            try {
                if ("ontouchstart"in window || window.DocumentTouch && document instanceof DocumentTouch)
                    this._touchSupport = d = !0
            } catch (f) {}
            if (b.isTouchDevice || d)
                this.addHandler(this.btnThumb, e.jqx.mobile.getTouchEventName("touchend"), function(f) {
                    var g = b.vertical ? b.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : b.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")
                      , h = b.toThemeProperty("jqx-fill-state-pressed");
                    b.btnThumb.removeClass(g);
                    b.btnThumb.removeClass(h);
                    b.disabled || b.handlemouseup(b, f);
                    return !1
                }),
                this.addHandler(this.btnThumb, e.jqx.mobile.getTouchEventName("touchstart"), function(f) {
                    b.disabled || (1 == b.touchMode ? (f.clientX = f.originalEvent.clientX,
                    f.clientY = f.originalEvent.clientY) : f.originalEvent.touches && f.originalEvent.touches.length ? (f.clientX = f.originalEvent.touches[0].clientX,
                    f.clientY = f.originalEvent.touches[0].clientY) : (f.clientX = f.originalEvent.clientX,
                    f.clientY = f.originalEvent.clientY),
                    b.handlemousedown(f),
                    f.preventDefault && f.preventDefault())
                }),
                e.jqx.mobile.touchScroll(this.element, b.max, function(f, g, h, k, l) {
                    "visible" == b.host.css("visibility") && (l && (1 == b.touchMode ? (l.clientX = l.originalEvent.clientX,
                    l.clientY = l.originalEvent.clientY) : l.originalEvent.touches && l.originalEvent.touches.length ? (l.clientX = l.originalEvent.touches[0].clientX,
                    l.clientY = l.originalEvent.touches[0].clientY) : (l.clientX = l.originalEvent.clientX,
                    l.clientY = l.originalEvent.clientY)),
                    f = b.vertical ? b.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : b.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"),
                    b.btnThumb.addClass(f),
                    b.btnThumb.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                    b.thumbCapture = !0,
                    b.handlemousemove(l))
                }, b.element.id, b.host, b.host);
            if (!this.isTouchDevice) {
                try {
                    "" == document.referrer && !window.frameElement || null == window.top || window.top == window.self || (d = null,
                    window.parent && document.referrer && (d = document.referrer),
                    d && -1 != d.indexOf(document.location.host) && (d = function(f) {
                        b.disabled || b.handlemouseup(b, f)
                    }
                    ,
                    window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", d, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", d)))
                } catch (f) {}
                this.addHandler(this.btnDown, "click mouseup mousedown", function(f) {
                    var g = b.step;
                    Math.abs(b.max - b.min) <= g && (g = 1);
                    b.rtl && !b.vertical && (g = -b.step);
                    switch (f.type) {
                    case "click":
                        b.buttonDownCapture && !b.isTouchDevice ? b.disabled || b.setPosition(b.value + g) : !b.disabled && b.isTouchDevice && b.setPosition(b.value + g);
                        break;
                    case "mouseup":
                        if (!b.btnDownInstance.base.disabled && b.buttonDownCapture)
                            return b.buttonDownCapture = !1,
                            b.btnDown.removeClass(b.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            b.btnDown.removeClass(b.toThemeProperty("jqx-fill-state-pressed")),
                            b._removeArrowClasses("pressed", "down"),
                            b.handlemouseup(b, f),
                            b.setPosition(b.value + g),
                            !1;
                        break;
                    case "mousedown":
                        if (!b.btnDownInstance.base.disabled)
                            return b.buttonDownCapture = !0,
                            b.btnDown.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                            b.btnDown.addClass(b.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            b._addArrowClasses("pressed", "down"),
                            !1
                    }
                });
                this.addHandler(this.btnUp, "click mouseup mousedown", function(f) {
                    var g = b.step;
                    Math.abs(b.max - b.min) <= g && (g = 1);
                    b.rtl && !b.vertical && (g = -b.step);
                    switch (f.type) {
                    case "click":
                        b.buttonUpCapture && !b.isTouchDevice ? b.disabled || b.setPosition(b.value - g) : !b.disabled && b.isTouchDevice && b.setPosition(b.value - g);
                        break;
                    case "mouseup":
                        if (!b.btnUpInstance.base.disabled && b.buttonUpCapture)
                            return b.buttonUpCapture = !1,
                            b.btnUp.removeClass(b.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            b.btnUp.removeClass(b.toThemeProperty("jqx-fill-state-pressed")),
                            b._removeArrowClasses("pressed", "up"),
                            b.handlemouseup(b, f),
                            b.setPosition(b.value - g),
                            !1;
                        break;
                    case "mousedown":
                        if (!b.btnUpInstance.base.disabled)
                            return b.buttonUpCapture = !0,
                            b.btnUp.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                            b.btnUp.addClass(b.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            b._addArrowClasses("pressed", "up"),
                            !1
                    }
                })
            }
            d = "click";
            this.isTouchDevice && (d = e.jqx.mobile.getTouchEventName("touchend"));
            this.addHandler(this.areaUp, d, function(f) {
                if (!b.disabled)
                    return f = b.largestep,
                    b.rtl && !b.vertical && (f = -b.largestep),
                    b.setPosition(b.value - f),
                    !1
            });
            this.addHandler(this.areaDown, d, function(f) {
                if (!b.disabled)
                    return f = b.largestep,
                    b.rtl && !b.vertical && (f = -b.largestep),
                    b.setPosition(b.value + f),
                    !1
            });
            this.addHandler(this.areaUp, "mousedown", function(f) {
                if (!b.disabled)
                    return b.areaUpCapture = !0,
                    !1
            });
            this.addHandler(this.areaDown, "mousedown", function(f) {
                if (!b.disabled)
                    return b.areaDownCapture = !0,
                    !1
            });
            this.addHandler(this.btnThumb, "mousedown dragstart", function(f) {
                if ("dragstart" === f.type)
                    return !1;
                b.disabled || b.handlemousedown(f);
                f.preventDefault && f.preventDefault()
            });
            this.addHandler(e(document), "mouseup." + this.element.id, function(f) {
                b.disabled || b.handlemouseup(b, f)
            });
            if (!this.isTouchDevice && (this.mousemoveFunc = function(f) {
                b.disabled || b.handlemousemove(f)
            }
            ,
            this.addHandler(e(document), "mousemove." + this.element.id, this.mousemoveFunc),
            this.addHandler(e(document), "mouseleave." + this.element.id, function(f) {
                b.disabled || b.handlemouseleave(f)
            }),
            this.addHandler(e(document), "mouseenter." + this.element.id, function(f) {
                b.disabled || b.handlemouseenter(f)
            }),
            !b.disabled)) {
                this.addHandler(this.btnUp, "mouseenter mouseleave", function(f) {
                    "mouseenter" === f.type ? b.disabled || b.btnUpInstance.base.disabled || 1 == b.touchMode || (b.btnUp.addClass(b.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    b.btnUp.addClass(b.toThemeProperty("jqx-fill-state-hover")),
                    b._addArrowClasses("hover", "up")) : b.disabled || b.btnUpInstance.base.disabled || 1 == b.touchMode || (b.btnUp.removeClass(b.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    b.btnUp.removeClass(b.toThemeProperty("jqx-fill-state-hover")),
                    b._removeArrowClasses("hover", "up"))
                });
                var c = b.toThemeProperty("jqx-scrollbar-thumb-state-hover");
                b.vertical || (c = b.toThemeProperty("jqx-scrollbar-thumb-state-hover-horizontal"));
                this.addHandler(this.btnThumb, "mouseenter mouseleave", function(f) {
                    "mouseenter" === f.type ? b.disabled || 1 == b.touchMode || (b.btnThumb.addClass(c),
                    b.btnThumb.addClass(b.toThemeProperty("jqx-fill-state-hover"))) : b.disabled || 1 == b.touchMode || (b.btnThumb.removeClass(c),
                    b.btnThumb.removeClass(b.toThemeProperty("jqx-fill-state-hover")))
                });
                this.addHandler(this.btnDown, "mouseenter mouseleave", function(f) {
                    "mouseenter" === f.type ? b.disabled || b.btnDownInstance.base.disabled || 1 == b.touchMode || (b.btnDown.addClass(b.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    b.btnDown.addClass(b.toThemeProperty("jqx-fill-state-hover")),
                    b._addArrowClasses("hover", "down")) : b.disabled || b.btnDownInstance.base.disabled || 1 == b.touchMode || (b.btnDown.removeClass(b.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    b.btnDown.removeClass(b.toThemeProperty("jqx-fill-state-hover")),
                    b._removeArrowClasses("hover", "down"))
                })
            }
        },
        destroy: function() {
            var b = this.btnUp
              , d = this.btnDown
              , c = this.btnThumb
              , f = this.areaUp
              , g = this.areaDown;
            this.arrowUp.remove();
            delete this.arrowUp;
            this.arrowDown.remove();
            delete this.arrowDown;
            g.removeClass();
            f.removeClass();
            d.removeClass();
            b.removeClass();
            c.removeClass();
            b.jqxRepeatButton("destroy");
            d.jqxRepeatButton("destroy");
            f.jqxRepeatButton("destroy");
            g.jqxRepeatButton("destroy");
            c.jqxButton("destroy");
            b = e.data(this.element, "jqxScrollBar");
            this._removeHandlers();
            this.scrollOuterWrap = this.areaDown = this.areaUp = this.scrollWrap = this.btnDown = this.btnUp = null;
            delete this.mousemoveFunc;
            delete this.btnDownInstance;
            delete this.btnUpInstance;
            delete this.scrollOuterWrap;
            delete this.scrollWrap;
            delete this.btnDown;
            delete this.areaDown;
            delete this.areaUp;
            delete this.btnDown;
            delete this.btnUp;
            delete this.btnThumb;
            delete this.propertyChangeMap.value;
            delete this.propertyChangeMap.min;
            delete this.propertyChangeMap.max;
            delete this.propertyChangeMap.touchMode;
            delete this.propertyChangeMap.disabled;
            delete this.propertyChangeMap.theme;
            delete this.propertyChangeMap;
            b && delete b.instance;
            this.host.removeData();
            this.host.remove();
            delete this.host;
            delete this.set;
            delete this.get;
            delete this.call;
            delete this.element
        },
        _removeHandlers: function() {
            this.removeHandler(this.btnUp, "mouseenter");
            this.removeHandler(this.btnDown, "mouseenter");
            this.removeHandler(this.btnThumb, "mouseenter");
            this.removeHandler(this.btnUp, "mouseleave");
            this.removeHandler(this.btnDown, "mouseleave");
            this.removeHandler(this.btnThumb, "mouseleave");
            this.removeHandler(this.btnUp, "click");
            this.removeHandler(this.btnDown, "click");
            this.removeHandler(this.btnDown, "mouseup");
            this.removeHandler(this.btnUp, "mouseup");
            this.removeHandler(this.btnDown, "mousedown");
            this.removeHandler(this.btnUp, "mousedown");
            this.removeHandler(this.areaUp, "mousedown");
            this.removeHandler(this.areaDown, "mousedown");
            this.removeHandler(this.areaUp, "click");
            this.removeHandler(this.areaDown, "click");
            this.removeHandler(this.btnThumb, "mousedown");
            this.removeHandler(this.btnThumb, "dragstart");
            this.removeHandler(e(document), "mouseup." + this.element.id);
            this.mousemoveFunc ? this.removeHandler(e(document), "mousemove." + this.element.id, this.mousemoveFunc) : this.removeHandler(e(document), "mousemove." + this.element.id);
            this.removeHandler(e(document), "mouseleave." + this.element.id);
            this.removeHandler(e(document), "mouseenter." + this.element.id)
        },
        _addArrowClasses: function(b, d) {
            "pressed" == b && (b = "selected");
            "" != b && (b = "-" + b);
            this.vertical ? ("up" != d && void 0 != d || this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-up" + b)),
            "down" != d && void 0 != d || this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-down" + b))) : ("up" != d && void 0 != d || this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-left" + b)),
            "down" != d && void 0 != d || this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-right" + b)))
        },
        _removeArrowClasses: function(b, d) {
            "pressed" == b && (b = "selected");
            "" != b && (b = "-" + b);
            this.vertical ? ("up" != d && void 0 != d || this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-up" + b)),
            "down" != d && void 0 != d || this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-down" + b))) : ("up" != d && void 0 != d || this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-left" + b)),
            "down" != d && void 0 != d || this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-right" + b)))
        },
        setTheme: function() {
            var b = this.btnUp
              , d = this.btnDown
              , c = this.btnThumb
              , f = this.scrollWrap
              , g = this.arrowUp
              , h = this.arrowDown;
            this.scrollWrap[0].className = this.toThemeProperty("jqx-reset");
            this.scrollOuterWrap[0].className = this.toThemeProperty("jqx-reset");
            var k = this.toThemeProperty("jqx-reset");
            this.areaDown[0].className = k;
            this.areaUp[0].className = k;
            var l = this.toThemeProperty("jqx-scrollbar") + " " + this.toThemeProperty("jqx-widget") + " " + this.toThemeProperty("jqx-widget-content");
            this.host.addClass(l);
            this.isTouchDevice && this.host.addClass(this.toThemeProperty("jqx-scrollbar-mobile"));
            d[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal");
            b[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal");
            this.vertical ? (g[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-up"),
            h[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-down"),
            g = this.toThemeProperty("jqx-scrollbar-thumb-state-normal")) : (g[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-left"),
            h[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-right"),
            g = this.toThemeProperty("jqx-scrollbar-thumb-state-normal-horizontal"));
            g += " " + this.toThemeProperty("jqx-fill-state-normal");
            c[0].className = g;
            this.disabled ? (f.addClass(this.toThemeProperty("jqx-fill-state-disabled")),
            f.removeClass(this.toThemeProperty("jqx-scrollbar-state-normal"))) : (f.addClass(this.toThemeProperty("jqx-scrollbar-state-normal")),
            f.removeClass(this.toThemeProperty("jqx-fill-state-disabled")));
            "all" == this.roundedCorners ? (this.host.addClass(this.toThemeProperty("jqx-rc-all")),
            this.vertical ? (f = e.jqx.cssroundedcorners("top"),
            f = this.toThemeProperty(f),
            b.addClass(f),
            f = e.jqx.cssroundedcorners("bottom"),
            f = this.toThemeProperty(f),
            d.addClass(f)) : (f = e.jqx.cssroundedcorners("left"),
            f = this.toThemeProperty(f),
            b.addClass(f),
            f = e.jqx.cssroundedcorners("right"),
            f = this.toThemeProperty(f),
            d.addClass(f))) : (f = e.jqx.cssroundedcorners(this.roundedCorners),
            f = this.toThemeProperty(f),
            b.addClass(f),
            d.addClass(f));
            f = e.jqx.cssroundedcorners(this.roundedCorners);
            f = this.toThemeProperty(f);
            c.hasClass(f) || c.addClass(f);
            "none" === b.css("display") && (this.showButtons = !1,
            this.touchModeStyle = !0,
            c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch")));
            this.isTouchDevice && 0 != this.touchModeStyle && (this.showButtons = !1,
            c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch")))
        },
        isScrolling: function() {
            return void 0 == this.thumbCapture || void 0 == this.buttonDownCapture || void 0 == this.buttonUpCapture || void 0 == this.areaDownCapture || void 0 == this.areaUpCapture ? !1 : this.thumbCapture || this.buttonDownCapture || this.buttonUpCapture || this.areaDownCapture || this.areaUpCapture
        },
        track: function() {
            var b = Date.now();
            var d = b - this.timestamp;
            this.timestamp = b;
            b = this.offset - this.frame;
            this.frame = this.offset;
            this.velocity = 1E3 * b / (1 + d) * .2 + .2 * this.velocity
        },
        handlemousedown: function(b) {
            function d(g) {
                f.reference = parseInt(f.btnThumb[0].style.top);
                f.offset = parseInt(f.btnThumb[0].style.top);
                f.vertical || (f.reference = parseInt(f.btnThumb[0].style.left),
                f.offset = parseInt(f.btnThumb[0].style.left));
                f.velocity = f.amplitude = 0;
                f.frame = f.offset;
                f.timestamp = Date.now();
                clearInterval(f.ticker);
                f.ticker = setInterval(function() {
                    f.track()
                }, 100)
            }
            if (void 0 == this.thumbCapture || 0 == this.thumbCapture) {
                this.thumbCapture = !0;
                var c = this.btnThumb;
                null != c && (c.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this.vertical ? c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) : c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")))
            }
            var f = this;
            this.thumbCapture && e.jqx.scrollAnimation && d(b);
            this.dragStartX = b.clientX;
            this.dragStartY = b.clientY;
            this.dragStartValue = this.value
        },
        toggleHover: function(b, d) {},
        refresh: function() {
            this._arrange()
        },
        _setElementPosition: function(b, d, c) {
            isNaN(d) || parseInt(b[0].style.left) == parseInt(d) || (b[0].style.left = d + "px");
            isNaN(c) || parseInt(b[0].style.top) == parseInt(c) || (b[0].style.top = c + "px")
        },
        _setElementTopPosition: function(b, d) {
            isNaN(d) || (b[0].style.top = d + "px")
        },
        _setElementLeftPosition: function(b, d) {
            isNaN(d) || (b[0].style.left = d + "px")
        },
        handlemouseleave: function(b) {
            b = this.btnUp;
            var d = this.btnDown;
            if (this.buttonDownCapture || this.buttonUpCapture)
                b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                d.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                this._removeArrowClasses("pressed");
            1 == this.thumbCapture && (b = this.btnThumb,
            d = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"),
            b.removeClass(d),
            b.removeClass(this.toThemeProperty("jqx-fill-state-pressed")))
        },
        handlemouseenter: function(b) {
            b = this.btnUp;
            var d = this.btnDown;
            this.buttonUpCapture && (b.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            b.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this._addArrowClasses("pressed", "up"));
            this.buttonDownCapture && (d.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            d.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this._addArrowClasses("pressed", "down"));
            1 == this.thumbCapture && (b = this.btnThumb,
            this.vertical ? b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) : b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")),
            b.addClass(this.toThemeProperty("jqx-fill-state-pressed")))
        },
        handlemousemove: function(b) {
            var d = this.btnUp
              , c = this.btnDown;
            if (null != c && null != d) {
                null != d && null != c && void 0 != this.buttonDownCapture && void 0 != this.buttonUpCapture && (this.buttonDownCapture && 0 == b.which ? (c.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                c.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed", "down"),
                this.buttonDownCapture = !1) : this.buttonUpCapture && 0 == b.which && (d.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                d.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed", "up"),
                this.buttonUpCapture = !1));
                if (1 != this.thumbCapture)
                    return !1;
                var f = this.btnThumb;
                if (0 == b.which && !this.isTouchDevice && !this._touchSupport)
                    return this.thumbCapture = !1,
                    this._arrange(),
                    b = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"),
                    f.removeClass(b),
                    f.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                    !0;
                void 0 != b.preventDefault && b.preventDefault();
                null != b.originalEvent && (b.originalEvent.mouseHandled = !0);
                void 0 != b.stopPropagation && b.stopPropagation();
                var g = 0;
                try {
                    g = this.vertical ? b.clientY - this.dragStartY : b.clientX - this.dragStartX;
                    var h = this._btnAndThumbSize;
                    this._btnAndThumbSize || (h = this.vertical ? d.height() + c.height() + f.height() : d.width() + c.width() + f.width());
                    var k = (this.max - this.min) / (this.scrollBarSize - h);
                    if ("auto" == this.thumbStep)
                        g *= k;
                    else {
                        g *= k;
                        if (Math.abs(this.dragStartValue + g - this.value) >= parseInt(this.thumbStep)) {
                            var l = Math.round(parseInt(g) / this.thumbStep) * this.thumbStep;
                            this.rtl && !this.vertical ? this.setPosition(this.dragStartValue - l) : this.setPosition(this.dragStartValue + l)
                        }
                        return !1
                    }
                    l = g;
                    this.rtl && !this.vertical && (l = -g);
                    this.setPosition(this.dragStartValue + l);
                    this.offset = parseInt(f[0].style.left);
                    this.vertical && (this.offset = parseInt(f[0].style.top))
                } catch (m) {
                    alert(m)
                }
                return !1
            }
        },
        handlemouseup: function(b, d) {
            b = !1;
            if (this.thumbCapture) {
                this.thumbCapture = !1;
                b = this.btnThumb;
                var c = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");
                b.removeClass(c);
                b.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));
                b = !0;
                this._mouseup = new Date;
                if (e.jqx.scrollAnimation) {
                    var f = function() {
                        if (g.amplitude) {
                            var h = Date.now() - g.timestamp;
                            h = -g.amplitude * Math.exp(-h / 325);
                            if (.5 < h || -.5 > h) {
                                var k = (g.max - g.min) / (g.scrollBarSize - g._btnAndThumbSize);
                                k = h = k * (g.target + h);
                                g.rtl && !g.vertical && (k = -h);
                                g.setPosition(g.dragStartValue + k);
                                requestAnimationFrame(f)
                            } else
                                k = (g.max - g.min) / (g.scrollBarSize - g._btnAndThumbSize),
                                k = h = k * (g.target + h),
                                g.rtl && !g.vertical && (k = -h),
                                g.setPosition(g.dragStartValue + k)
                        }
                    }
                      , g = this;
                    clearInterval(this.ticker);
                    if (25 < this.velocity || -25 > this.velocity)
                        this.amplitude = .8 * this.velocity,
                        this.target = Math.round(this.offset + this.amplitude),
                        this.target -= this.reference,
                        this.timestamp = Date.now(),
                        requestAnimationFrame(f)
                }
            }
            this.areaDownCapture = this.areaUpCapture = !1;
            if (this.buttonUpCapture || this.buttonDownCapture)
                b = this.btnUp,
                c = this.btnDown,
                this.buttonDownCapture = this.buttonUpCapture = !1,
                b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                c.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                b.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                c.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed"),
                b = !0,
                this._mouseup = new Date;
            b && (void 0 != d.preventDefault && d.preventDefault(),
            null != d.originalEvent && (d.originalEvent.mouseHandled = !0),
            void 0 != d.stopPropagation && d.stopPropagation())
        },
        setPosition: function(b, d) {
            if (void 0 == b || NaN == b)
                b = this.min;
            b >= this.max && (b = this.max);
            b < this.min && (b = this.min);
            if (this.value !== b || 1 == d) {
                b == this.max && (d = new e.Event("complete"),
                this.host.trigger(d));
                d = this.value;
                if (this._triggervaluechanged) {
                    var c = new e.Event("valueChanged");
                    c.previousValue = this.value;
                    c.currentValue = b
                }
                this.value = b;
                this._positionelements();
                this._triggervaluechanged && this.host.trigger(c);
                this.valueChanged && this.valueChanged({
                    currentValue: this.value,
                    previousvalue: d
                })
            }
            return b
        },
        val: function(b) {
            a: {
                for (d in b)
                    if (b.hasOwnProperty(d)) {
                        var d = !1;
                        break a
                    }
                d = "number" == typeof b || "date" == typeof b || "boolean" == typeof b || "string" == typeof b ? !1 : !0
            }
            if (d || 0 == arguments.length)
                return this.value;
            this.setPosition(b);
            return b
        },
        _getThumbSize: function(b) {
            var d = this.max - this.min
              , c = 0;
            1 < d ? c = b / (d + b) * b : 1 == d ? c = b - 1 : 0 == d && (c = b);
            0 < this.thumbSize && (c = this.thumbSize);
            c < this.thumbMinSize && (c = this.thumbMinSize);
            return Math.min(c, b)
        },
        _positionelements: function() {
            var b = this.areaUp
              , d = this.areaDown
              , c = this.btnThumb
              , f = this._height ? this._height : this.host.height()
              , g = this._width ? this._width : this.host.width()
              , h = this.vertical ? g : f;
            this.showButtons || (h = 0);
            var k = this.vertical ? f : g;
            this.scrollBarSize = k;
            f = this._getThumbSize(k - 2 * h);
            f = Math.floor(f);
            f < this.thumbMinSize && (f = this.thumbMinSize);
            this.btnSize = h += 2;
            var l = this._btnAndThumbSize;
            this._btnAndThumbSize || (l = this.vertical ? 2 * this.btnSize + c.outerHeight() : 2 * this.btnSize + c.outerWidth(),
            l = Math.round(l));
            g = (k - l) / (this.max - this.min) * (this.value - this.min);
            this.rtl && !this.vertical && (g = (k - l) / (this.max - this.min) * (this.max - this.value - this.min));
            g = Math.round(g);
            0 > g && (g = 0);
            this.vertical ? (k = k - g - l,
            0 > k && (k = 0),
            d[0].style.height = k + "px",
            b[0].style.height = g + "px",
            this._setElementTopPosition(b, h),
            this._setElementTopPosition(c, h + g),
            this._setElementTopPosition(d, h + g + f)) : (b[0].style.width = g + "px",
            d[0].style.width = 0 <= k - g - l ? k - g - l + "px" : "0px",
            this._setElementLeftPosition(b, h),
            this._setElementLeftPosition(c, h + g),
            this._setElementLeftPosition(d, 2 + h + g + f))
        },
        _arrange: function() {
            if (this._initialLayout)
                this._initialLayout = !1;
            else {
                if (this.min > this.max) {
                    var b = this.min;
                    this.min = this.max;
                    this.max = b
                }
                0 > this.min && (b = this.max - this.min,
                this.min = 0,
                this.max = b);
                b = this.areaUp;
                var d = this.areaDown
                  , c = this.btnUp
                  , f = this.btnDown
                  , g = this.btnThumb
                  , h = this.scrollWrap
                  , k = parseInt(this.element.style.height)
                  , l = parseInt(this.element.style.width);
                this.isPercentage && (k = this.host.height(),
                l = this.host.width());
                isNaN(k) && (k = 0);
                isNaN(l) && (l = 0);
                this._width = l;
                this._height = k;
                var m = this.vertical ? l : k;
                this.showButtons || (m = 0);
                c[0].style.width = m + "px";
                c[0].style.height = m + "px";
                f[0].style.width = m + "px";
                f[0].style.height = m + "px";
                this.vertical ? h[0].style.width = l + 2 + "px" : h[0].style.height = k + 2 + "px";
                this._setElementPosition(c, 0, 0);
                c = m + 2;
                this.vertical ? this._setElementPosition(f, 0, k - c) : this._setElementPosition(f, l - c, 0);
                var n = this.vertical ? k : l;
                this.scrollBarSize = n;
                f = this._getThumbSize(n - 2 * c);
                f = Math.floor(f - 2);
                f < this.thumbMinSize && (f = this.thumbMinSize);
                h = !1;
                this.isTouchDevice && 0 != this.touchModeStyle && (h = !0);
                this.vertical ? (g[0].style.width = l + "px",
                g[0].style.height = f + "px",
                h && 0 !== this.thumbTouchSize && (g.css({
                    width: this.thumbTouchSize + "px"
                }),
                g.css("margin-left", (this.host.width() - this.thumbTouchSize) / 2))) : (g[0].style.width = f + "px",
                g[0].style.height = k + "px",
                h && 0 !== this.thumbTouchSize && (g.css({
                    height: this.thumbTouchSize + "px"
                }),
                g.css("margin-top", (this.host.height() - this.thumbTouchSize) / 2)));
                if (NaN == k || 10 > k)
                    k = 10;
                if (NaN == l || 10 > l)
                    l = 10;
                this.btnSize = m;
                h = this.vertical ? 2 * c + (2 + parseInt(g[0].style.height)) : 2 * c + (2 + parseInt(g[0].style.width));
                this._btnAndThumbSize = h = Math.round(h);
                var p = (n - h) / (this.max - this.min) * (this.value - this.min);
                this.rtl && !this.vertical && (p = (n - h) / (this.max - this.min) * (this.max - this.value - this.min));
                p = Math.round(p);
                if (isNaN(p) || 0 > p || -Infinity === p || Infinity === p)
                    p = 0;
                if (this.vertical) {
                    k = n - p - h;
                    0 > k && (k = 0);
                    d[0].style.height = k + "px";
                    d[0].style.width = l + "px";
                    b[0].style.height = p + "px";
                    b[0].style.width = l + "px";
                    k = parseInt(this.element.style.height);
                    this.isPercentage && (k = this.host.height());
                    g[0].style.visibility = "inherit";
                    if (0 > k - 3 * parseInt(m) || k < h)
                        g[0].style.visibility = "hidden";
                    this._setElementPosition(b, 0, c);
                    this._setElementPosition(g, 0, c + p);
                    this._setElementPosition(d, 0, c + p + f)
                } else {
                    0 < p && (b[0].style.width = p + "px");
                    0 < k && (b[0].style.height = k + "px");
                    l = n - p - h;
                    0 > l && (l = 0);
                    d[0].style.width = l + "px";
                    d[0].style.height = k + "px";
                    k = parseInt(this.element.style.width);
                    this.isPercentage && (k = this.host.width());
                    g[0].style.visibility = "inherit";
                    if (0 > k - 3 * parseInt(m) || k < h)
                        g[0].style.visibility = "hidden";
                    this._setElementPosition(b, c, 0);
                    this._setElementPosition(g, c + p, 0);
                    this._setElementPosition(d, c + p + f, 0)
                }
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxMenu", "", {});
    e.extend(e.jqx._jqxMenu.prototype, {
        defineInstance: function() {
            var b = {
                items: [],
                mode: "horizontal",
                width: null,
                height: null,
                minimizeWidth: "auto",
                easing: "easeInOutSine",
                animationShowDuration: 200,
                animationHideDuration: 200,
                autoCloseInterval: 0,
                animationHideDelay: 100,
                animationShowDelay: 10,
                menuElements: [],
                autoSizeMainItems: !1,
                autoCloseOnClick: !0,
                autoCloseOnMouseLeave: !0,
                enableRoundedCorners: !0,
                disabled: !1,
                autoOpenPopup: !0,
                enableHover: !0,
                autoOpen: !0,
                autoGenerate: !0,
                clickToOpen: !1,
                showTopLevelArrows: !1,
                touchMode: "auto",
                source: null,
                popupZIndex: 1E3,
                rtl: !1,
                keyboardNavigation: !1,
                lockFocus: !1,
                title: "",
                events: "shown closed itemclick initialized open close".split(" ")
            };
            if (this === e.jqx._jqxMenu.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function(b) {
            var d = this;
            this.host.attr("role", "menubar");
            e.jqx.utilities.resize(this.host, function() {
                d.refresh()
            }, !1, "popup" != this.mode);
            "auto" != this.minimizeWidth && null != this.minimizeWidth && this.width && -1 == this.width.toString().indexOf("%") && e(window).resize(function() {
                d.refresh()
            });
            d.isMaterialized() && (b = window.getComputedStyle(this.element).getPropertyValue("--jqx-dropdown-animation")) && (this.animationType = b.trim(),
            "transform" === this.animationType && (this.animationShowDelay = this.animationHideDuration = this.animationShowDuration = 0));
            this.host.css("outline", "none");
            this.source && null != this.source && (b = this.loadItems(this.source),
            this.element.innerHTML = b);
            this._tmpHTML = this.element.innerHTML;
            this.element.innerHTML.indexOf("UL") && (b = this.host.find("ul:first"),
            0 < b.length && this._createMenu(b[0]));
            this.host.data("autoclose", {});
            this._render();
            this._setSize();
            e.jqx.browser.msie && 8 > e.jqx.browser.version && this.host.attr("hideFocus", !0)
        },
        focus: function() {
            try {
                if ("popup" === this.mode && this.keyboardNavigation && this.host.closest("div.jqx-menu-wrapper").focus(),
                this.keyboardNavigation) {
                    this.host.focus();
                    var b = this
                      , d = function() {
                        if (e.jqx.isHidden(e(b.items[0].element))) {
                            var c = b._nextVisibleItem(b.items[0], 0);
                            c && (e(c.element).addClass(b.toThemeProperty("jqx-fill-state-focus")),
                            b.activeItem = c)
                        } else
                            e(b.items[0].element).addClass(b.toThemeProperty("jqx-fill-state-focus")),
                            b.activeItem = b.items[0]
                    };
                    this.activeItem ? e.jqx.isHidden(e(this.activeItem.element)) ? (e(this.activeItem.element).removeClass(this.toThemeProperty("jqx-fill-state-focus")),
                    d()) : e(this.activeItem.element).addClass(this.toThemeProperty("jqx-fill-state-focus")) : d()
                }
            } catch (c) {}
        },
        loadItems: function(b, d) {
            if (null != b) {
                if (0 == b.length)
                    return "";
                var c = this;
                this.items = [];
                var f = '<ul class="jqx-menu-ul">';
                d && (f = '<ul class="jqx-menu-ul" style="width:' + d + ';">');
                e.map(b, function(g) {
                    if (void 0 == g)
                        return null;
                    f += c._parseItem(g)
                });
                return f += "</ul>"
            }
        },
        _parseItem: function(b) {
            if (void 0 == b)
                return null;
            var d = b.label;
            !b.label && b.html && (d = b.html);
            d || (d = "Item");
            "string" === typeof b && (d = b);
            var c = !1;
            void 0 != b.disabled && b.disabled && (c = !0);
            var f = "<li";
            c && (f += ' item-disabled="true" ');
            b.label && !b.html && (f += ' item-label="' + d + '" ');
            null != b.value && (f += ' item-value="' + b.value + '" ');
            void 0 != b.id && (f += ' id="' + b.id + '" ');
            f += ">" + d;
            b.items && (f = b.subMenuWidth ? f + this.loadItems(b.items, b.subMenuWidth) : f + this.loadItems(b.items));
            return f + "</li>"
        },
        _setSize: function() {
            null != this.width && -1 != this.width.toString().indexOf("%") ? this.host.width(this.width) : null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : void 0 == this.width || isNaN(this.width) || this.host.width(this.width);
            null != this.height && -1 != this.height.toString().indexOf("%") ? this.host.height(this.height) : null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : void 0 == this.height || isNaN(this.height) || this.host.height(this.height);
            null === this.height && this.host.height("auto");
            if (null != this.minimizeWidth && "popup" != this.mode) {
                var b = e(window).width();
                if (!e.jqx.response) {
                    var d = !1;
                    navigator.userAgent.match(/Windows|Linux|MacOS/) && (0 <= navigator.userAgent.indexOf("Windows Phone") || 0 <= navigator.userAgent.indexOf("WPDesktop") || 0 <= navigator.userAgent.indexOf("IEMobile") || 0 <= navigator.userAgent.indexOf("ZuneWP7") || (d = !0));
                    var c = this.minimizeWidth;
                    if (d && "auto" == this.minimizeWidth)
                        return
                }
                if ("auto" == this.minimizeWidth && e.jqx.response) {
                    if (b = new e.jqx.response,
                    "Phone" == b.device.type || "Tablet" == b.device.type)
                        this.minimized || this.minimize()
                } else
                    b < c && !this.minimized ? this.minimize() : this.minimized && b >= c && this.restore()
            }
        },
        minimize: function() {
            if (!this.minimized) {
                var b = this;
                this.host.addClass(this.toThemeProperty("jqx-menu-minimized"));
                this.minimized = !0;
                this._tmpMode = this.mode;
                this.mode = "simple";
                var d = this.host.closest("div.jqx-menu-wrapper");
                d.remove();
                e("#menuWrapper" + this.element.id).remove();
                e.each(this.items, function() {
                    e(this.element);
                    e(this.subMenuElement).closest("div.jqx-menu-popup").remove()
                });
                if (this.source) {
                    var c = this.loadItems(this.source);
                    this.element.innerHTML = c;
                    this._tmpHTML = this.element.innerHTML
                }
                this.element.innerHTML = this._tmpHTML;
                this.element.innerHTML.indexOf("UL") && (c = this.host.find("ul:first"),
                0 < c.length && this._createMenu(c[0]));
                this._render();
                c = this.host.find("ul:first");
                c.wrap('<div class="jqx-menu-wrapper" style="z-index:' + this.popupZIndex + '; padding: 0px; display: none; margin: 0px; height: auto; width: auto; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>');
                d = c.closest("div.jqx-menu-wrapper");
                d[0].id = "menuWrapper" + this.element.id;
                d.detach();
                d.appendTo(e(document.body));
                d.addClass(this.toThemeProperty("jqx-widget"));
                d.addClass(this.toThemeProperty("jqx-menu"));
                d.addClass(this.toThemeProperty("jqx-menu-minimized"));
                d.addClass(this.toThemeProperty("jqx-widget-header"));
                c.children().hide();
                d.hide();
                d.find("ul").addClass(this.toThemeProperty("jqx-menu-ul-minimized"));
                this.minimizedItem = e("<div></div>");
                this.minimizedItem.addClass(this.toThemeProperty("jqx-item"));
                this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-item-top"));
                this.addHandler(d, "keydown", function(h) {
                    return b.handleKeyDown(h)
                });
                this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-minimized-button"));
                this.minimizedItem.prependTo(this.host);
                this.titleElement = e("<div>" + this.title + "</div>");
                this.titleElement.addClass(this.toThemeProperty("jqx-item"));
                this.titleElement.addClass(this.toThemeProperty("jqx-menu-title"));
                this.titleElement.prependTo(this.host);
                e("<div style='clear:both;'></div>").insertAfter(this.minimizedItem);
                b.minimizedHidden = !0;
                var f = function(h) {
                    b.minimizedHidden = !0;
                    b.minimizedItem.show();
                    h = !1;
                    "right" == b.minimizedItem.css("float") && (h = !0);
                    d.animate({
                        left: h ? b.host.coord().left + b.host.width() + d.width() : -d.outerWidth(),
                        opacity: 0
                    }, b.animationHideDuration, function() {
                        d.find("ul:first").children().hide();
                        d.hide()
                    })
                }
                  , g = function(h) {
                    if (b.minimizedHidden) {
                        d.find("ul:first").children().show();
                        b.minimizedHidden = !1;
                        d.show();
                        d.css("opacity", 0);
                        d.css("left", -d.outerWidth());
                        var k = !1
                          , l = d.width();
                        "right" == b.minimizedItem.css("float") && (d.css("left", b.host.coord().left + b.host.width() + l),
                        k = !0);
                        d.css("top", b.host.coord().top + b.host.height());
                        d.animate({
                            left: k ? b.host.coord().left + b.host.width() - l : b.host.coord().left,
                            opacity: .95
                        }, b.animationShowDuration, function() {})
                    } else
                        f(h);
                    b._raiseEvent("2", {
                        type: "mouse",
                        item: b.minimizedItem[0],
                        event: h
                    });
                    b._setSize()
                };
                this.addHandler(e(window), "orientationchange.jqxmenu" + this.element.id, function(h) {
                    setTimeout(function() {
                        if (!b.minimizedHidden) {
                            d.width();
                            var k = !1;
                            var l = d.width();
                            "right" == b.minimizedItem.css("float") && (k = !0);
                            d.css("top", b.host.coord().top + b.host.height());
                            d.css({
                                left: k ? b.host.coord().left + b.host.width() - l : b.host.coord().left
                            })
                        }
                    }, 25)
                });
                this.addHandler(this.minimizedItem, "click", function(h) {
                    g(h)
                })
            }
        },
        restore: function() {
            if (this.minimized) {
                this.host.find("ul").removeClass(this.toThemeProperty("jqx-menu-ul-minimized"));
                this.host.removeClass(this.toThemeProperty("jqx-menu-minimized"));
                this.minimized = !1;
                this.mode = this._tmpMode;
                this.minimizedItem && this.minimizedItem.remove();
                e("#menuWrapper" + this.element.id).remove();
                if (this.source) {
                    var b = this.loadItems(this.source);
                    this._tmpHTML = this.element.innerHTML = b
                }
                this.element.innerHTML = this._tmpHTML;
                this.element.innerHTML.indexOf("UL") && (b = this.host.find("ul:first"),
                0 < b.length && this._createMenu(b[0]));
                this._setSize();
                this._render()
            }
        },
        isTouchDevice: function() {
            if (void 0 != this._isTouchDevice)
                return this._isTouchDevice;
            var b = e.jqx.mobile.isTouchDevice();
            1 == this.touchMode ? b = !0 : 0 == this.touchMode && (b = !1);
            b && (this.host.addClass(this.toThemeProperty("jqx-touch")),
            e(".jqx-menu-item").addClass(this.toThemeProperty("jqx-touch")));
            return this._isTouchDevice = b
        },
        refresh: function(b) {
            b || this._setSize()
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this.refresh()
        },
        _closeAll: function(b) {
            var d = null != b ? b.data : this;
            e.each(d.items, function() {
                1 == this.hasItems && this.isOpen && d._closeItem(d, this)
            });
            "popup" == d.mode && null != b && (d._isRightClick(b) || d.close())
        },
        closeItem: function(b) {
            if (null == b)
                return !1;
            var d = document.getElementById(b)
              , c = this;
            e.each(c.items, function() {
                1 == this.isOpen && this.element == d && c._closeItem(c, this)
            });
            return !0
        },
        openItem: function(b) {
            if (null == b)
                return !1;
            var d = document.getElementById(b)
              , c = this;
            e.each(c.items, function() {
                0 == this.isOpen && this.element == d && (c._openItem(c, this),
                this.parentId && c.openItem(this.parentId))
            });
            return !0
        },
        _getClosedSubMenuOffset: function(b) {
            var d = e(b.subMenuElement)
              , c = -d.outerHeight()
              , f = -d.outerWidth()
              , g = 0 == b.level && "horizontal" == this.mode;
            g ? f = 0 : c = 0;
            switch (b.openVerticalDirection) {
            case "up":
            case "center":
                c = d.outerHeight()
            }
            switch (b.openHorizontalDirection) {
            case this._getDir("left"):
                f = g ? 0 : d.outerWidth();
                break;
            case "center":
                f = g ? 0 : d.outerWidth()
            }
            return {
                left: f,
                top: c
            }
        },
        _closeItem: function(b, d, c, f) {
            if (null == b || null == d)
                return !1;
            var g = e(d.subMenuElement)
              , h = 0 == d.level && "horizontal" == this.mode
              , k = this._getClosedSubMenuOffset(d)
              , l = k.top
              , m = k.left;
            e(d.element);
            var n = g.closest("div.jqx-menu-popup");
            if (null != n) {
                n.removeClass("show");
                k = b.animationHideDelay;
                1 == f && (k = 0);
                g.data("timer") && null != g.data("timer").show && (clearTimeout(g.data("timer").show),
                g.data("timer").show = null);
                var p = function() {
                    d.isOpen = !1;
                    h ? g.stop().animate({
                        top: l
                    }, b.animationHideDuration, function() {
                        e(d.element).removeClass(b.toThemeProperty("jqx-fill-state-pressed"));
                        e(d.element).removeClass(b.toThemeProperty("jqx-menu-item-top-selected"));
                        e(d.element).removeClass(b.toThemeProperty("jqx-rc-b-expanded"));
                        n.removeClass(b.toThemeProperty("jqx-rc-t-expanded"));
                        var q = e(d.arrow);
                        0 < q.length && b.showTopLevelArrows && (q.removeClass(),
                        "down" == d.openVerticalDirection ? (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-down")),
                        q.addClass(b.toThemeProperty("jqx-icon-arrow-down"))) : (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-up")),
                        q.addClass(b.toThemeProperty("jqx-icon-arrow-up"))));
                        e.jqx.aria(e(d.element), "aria-expanded", !1);
                        n.css({
                            display: "none"
                        });
                        0 == b.animationHideDuration && g.css({
                            top: l
                        });
                        b._raiseEvent("1", d)
                    }) : g.stop().animate({
                        left: m
                    }, b.animationHideDuration, function() {
                        0 == b.animationHideDuration && g.css({
                            left: m
                        });
                        if (0 < d.level) {
                            e(d.element).removeClass(b.toThemeProperty("jqx-fill-state-pressed"));
                            e(d.element).removeClass(b.toThemeProperty("jqx-menu-item-selected"));
                            var q = e(d.arrow);
                            0 < q.length && (q.removeClass(),
                            "left" != d.openHorizontalDirection ? (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-" + b._getDir("right"))),
                            q.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("right")))) : (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-" + b._getDir("left"))),
                            q.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("left")))))
                        } else
                            e(d.element).removeClass(b.toThemeProperty("jqx-fill-state-pressed")),
                            e(d.element).removeClass(b.toThemeProperty("jqx-menu-item-top-selected")),
                            q = e(d.arrow),
                            0 < q.length && (q.removeClass(),
                            "left" != d.openHorizontalDirection ? (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-top-" + b._getDir("right"))),
                            q.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("right")))) : (q.addClass(b.toThemeProperty("jqx-menu-item-arrow-top-" + b._getDir("left"))),
                            q.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("left")))));
                        e.jqx.aria(e(d.element), "aria-expanded", !1);
                        n.css({
                            display: "none"
                        });
                        b._raiseEvent("1", d)
                    })
                };
                0 < k ? g.data("timer") && (g.data("timer").hide = setTimeout(function() {
                    p()
                }, k)) : p();
                void 0 != c && c && (c = g.children(),
                e.each(c, function() {
                    b.menuElements[this.id] && b.menuElements[this.id].isOpen && (e(b.menuElements[this.id].subMenuElement),
                    b._closeItem(b, b.menuElements[this.id], !0, !0))
                }))
            }
        },
        getSubItems: function(b, d) {
            if (null == b)
                return !1;
            var c = this
              , f = [];
            null != d && e.extend(f, d);
            b = e(this.menuElements[b].subMenuElement).find(".jqx-menu-item");
            e.each(b, function() {
                f[this.id] = c.menuElements[this.id];
                var g = c.getSubItems(this.id, f);
                e.extend(f, g)
            });
            return f
        },
        disable: function(b, d) {
            if (null != b && this.menuElements[b]) {
                b = this.menuElements[b];
                b.disabled = d;
                var c = e(b.element);
                b.element.disabled = d;
                e.each(c.children(), function() {
                    this.disabled = d
                });
                d ? (c.addClass(this.toThemeProperty("jqx-menu-item-disabled")),
                c.addClass(this.toThemeProperty("jqx-fill-state-disabled"))) : (c.removeClass(this.toThemeProperty("jqx-menu-item-disabled")),
                c.removeClass(this.toThemeProperty("jqx-fill-state-disabled")))
            }
        },
        getItem: function(b) {
            return this.menuElements[b] ? this.menuElements[b] : null
        },
        disableItem: function(b) {
            this.disable(b, !0)
        },
        hideItem: function(b) {
            this.menuElements[b] && e(this.menuElements[b].element).hide()
        },
        showItem: function(b) {
            this.menuElements[b] && e(this.menuElements[b].element).show()
        },
        enableItem: function(b) {
            this.disable(b, !1)
        },
        _setItemProperty: function(b, d, c) {
            null != b && this.menuElements[b] && (b = this.menuElements[b],
            b[d] && (b[d] = c))
        },
        setItemOpenDirection: function(b, d, c) {
            if (null != b) {
                var f = e.jqx.browser.msie && 8 > e.jqx.browser.version;
                if (this.menuElements[b]) {
                    b = this.menuElements[b];
                    if (null != d && (b.openHorizontalDirection = d,
                    b.hasItems && 0 < b.level && (d = e(b.element),
                    void 0 != d))) {
                        var g = e(b.arrow);
                        null == b.arrow && (g = e('<span id="arrow' + d[0].id + '"></span>'),
                        f ? g.appendTo(d) : g.prependTo(d),
                        b.arrow = g[0]);
                        g.removeClass();
                        "left" == b.openHorizontalDirection ? (g.addClass(this.toThemeProperty("jqx-menu-item-arrow-" + this._getDir("left"))),
                        g.addClass(this.toThemeProperty("jqx-icon-arrow-" + this._getDir("left")))) : (g.addClass(this.toThemeProperty("jqx-menu-item-arrow-" + this._getDir("right"))),
                        g.addClass(this.toThemeProperty("jqx-icon-arrow-" + this._getDir("right"))));
                        g.css("visibility", "inherit");
                        f ? (g.css("display", "inline-block"),
                        g.css("float", "none")) : (g.css("display", "block"),
                        g.css("float", "right"))
                    }
                    null != c && (b.openVerticalDirection = c,
                    g = e(b.arrow),
                    d = e(b.element),
                    this.showTopLevelArrows && void 0 != d && (null == b.arrow && (g = e('<span id="arrow' + d[0].id + '"></span>'),
                    f ? g.appendTo(d) : g.prependTo(d),
                    b.arrow = g[0]),
                    g.removeClass(),
                    "down" == b.openVerticalDirection ? (g.addClass(this.toThemeProperty("jqx-menu-item-arrow-down")),
                    g.addClass(this.toThemeProperty("jqx-icon-arrow-down"))) : (g.addClass(this.toThemeProperty("jqx-menu-item-arrow-up")),
                    g.addClass(this.toThemeProperty("jqx-icon-arrow-up"))),
                    g.css("visibility", "inherit"),
                    f ? (g.css("display", "inline-block"),
                    g.css("float", "none")) : (g.css("display", "block"),
                    g.css("float", "right"))))
                }
            }
        },
        _getSiblings: function(b) {
            for (var d = [], c = 0, f = 0; f < this.items.length; f++)
                this.items[f] != b && this.items[f].parentId == b.parentId && this.items[f].hasItems && (d[c++] = this.items[f]);
            return d
        },
        _openItem: function(b, d, c) {
            if (null == b || null == d || d.isOpen || d.disabled || b.disabled)
                return !1;
            var f = b.popupZIndex;
            void 0 != c && (f = c);
            c = b.animationHideDuration;
            b.animationHideDuration = 0;
            b._closeItem(b, d, !0, !0);
            b.animationHideDuration = c;
            e(d.element).focus();
            c = [5, 5];
            var g = e(d.subMenuElement);
            null != g && g.stop();
            g.data("timer") && null != g.data("timer").hide && clearTimeout(g.data("timer").hide);
            var h = g.closest("div.jqx-menu-popup")
              , k = e(d.element)
              , l = 0 == d.level ? this._getOffset(d.element) : k.position();
            if (0 < d.level && this.hasTransform) {
                var m = parseInt(k.coord().top) - parseInt(this._getOffset(d.element).top);
                l.top += m
            }
            0 == d.level && "popup" == this.mode && (l = k.coord());
            var n = 0 == d.level && "horizontal" == this.mode;
            m = n ? l.left : null != this.menuElements[d.parentId] && null != this.menuElements[d.parentId].subMenuElement ? parseInt(e(e(this.menuElements[d.parentId].subMenuElement).closest("div.jqx-menu-popup")).outerWidth()) - c[0] : parseInt(g.outerWidth());
            h.css({
                visibility: "visible",
                display: "block",
                left: m,
                top: n ? l.top + k.outerHeight() : l.top,
                zIndex: f
            });
            g.css("display", "block");
            "horizontal" != this.mode && 0 == d.level ? (m = this._getOffset(this.element),
            h.css("left", -1 + m.left + this.host.outerWidth()),
            g.css("left", -g.outerWidth())) : (m = this._getClosedSubMenuOffset(d),
            g.css("left", m.left),
            g.css("top", m.top));
            h.css({
                height: parseInt(g.outerHeight()) + parseInt(c[1]) + "px"
            });
            var p = 0
              , q = 0;
            switch (d.openVerticalDirection) {
            case "up":
                n ? (g.css("top", g.outerHeight()),
                p = c[1],
                m = parseInt(g.parent().css("padding-bottom")),
                isNaN(m) && (m = 0),
                0 < m && h.addClass(this.toThemeProperty("jqx-menu-popup-clear")),
                g.css("top", g.outerHeight() - m),
                h.css({
                    display: "block",
                    top: l.top - h.outerHeight(),
                    zIndex: f
                })) : (p = c[1],
                g.css("top", g.outerHeight()),
                h.css({
                    display: "block",
                    top: l.top - h.outerHeight() + c[1] + k.outerHeight(),
                    zIndex: f
                }));
                break;
            case "center":
                n ? (g.css("top", 0),
                h.css({
                    display: "block",
                    top: l.top - h.outerHeight() / 2 + c[1],
                    zIndex: f
                })) : (g.css("top", 0),
                h.css({
                    display: "block",
                    top: l.top + k.outerHeight() / 2 - h.outerHeight() / 2 + c[1],
                    zIndex: f
                }))
            }
            switch (d.openHorizontalDirection) {
            case this._getDir("left"):
                n ? h.css({
                    left: l.left - (h.outerWidth() - k.outerWidth() - c[0])
                }) : (q = 0,
                g.css("left", h.outerWidth()),
                h.css({
                    left: l.left - h.outerWidth() + 2 * d.level
                }));
                break;
            case "center":
                n ? h.css({
                    left: l.left - (h.outerWidth() / 2 - k.outerWidth() / 2 - c[0] / 2)
                }) : (h.css({
                    left: l.left - (h.outerWidth() / 2 - k.outerWidth() / 2 - c[0] / 2)
                }),
                g.css("left", h.outerWidth()))
            }
            if (n) {
                if (parseInt(g.css("top")) == p) {
                    d.isOpen = !0;
                    return
                }
            } else if (parseInt(g.css("left")) == q) {
                1 == d.isOpen;
                return
            }
            e.each(b._getSiblings(d), function() {
                b._closeItem(b, this, !0, !0)
            });
            f = e.data(b.element, "animationHideDelay");
            b.animationHideDelay = f;
            0 < this.autoCloseInterval && (null != this.host.data("autoclose") && null != this.host.data("autoclose").close && clearTimeout(this.host.data("autoclose").close),
            null != this.host.data("autoclose") && (this.host.data("autoclose").close = setTimeout(function() {
                b._closeAll()
            }, this.autoCloseInterval)));
            g.data("timer") && (g.data("timer").show = setTimeout(function() {
                if (null != h)
                    if (n) {
                        g.stop();
                        g.css("left", q);
                        k.addClass(b.toThemeProperty("jqx-fill-state-pressed"));
                        k.addClass(b.toThemeProperty("jqx-menu-item-top-selected"));
                        "down" == d.openVerticalDirection ? (e(d.element).addClass(b.toThemeProperty("jqx-rc-b-expanded")),
                        h.addClass(b.toThemeProperty("jqx-rc-t-expanded"))) : (e(d.element).addClass(b.toThemeProperty("jqx-rc-t-expanded")),
                        h.addClass(b.toThemeProperty("jqx-rc-b-expanded")));
                        h.addClass(b.toThemeProperty("show"));
                        var t = e(d.arrow);
                        0 < t.length && b.showTopLevelArrows && (t.removeClass(),
                        "down" == d.openVerticalDirection ? (t.addClass(b.toThemeProperty("jqx-menu-item-arrow-down-selected")),
                        t.addClass(b.toThemeProperty("jqx-icon-arrow-down"))) : (t.addClass(b.toThemeProperty("jqx-menu-item-arrow-up-selected")),
                        t.addClass(b.toThemeProperty("jqx-icon-arrow-up"))));
                        0 == b.animationShowDuration ? (g.css({
                            top: p
                        }),
                        d.isOpen = !0,
                        b._raiseEvent("0", d),
                        e.jqx.aria(e(d.element), "aria-expanded", !0)) : g.animate({
                            top: p
                        }, b.animationShowDuration, b.easing, function() {
                            d.isOpen = !0;
                            e.jqx.aria(e(d.element), "aria-expanded", !0);
                            b._raiseEvent("0", d)
                        })
                    } else
                        g.stop(),
                        g.css("top", p),
                        h.addClass(b.toThemeProperty("show")),
                        0 < d.level ? (k.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                        k.addClass(b.toThemeProperty("jqx-menu-item-selected"))) : (k.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                        k.addClass(b.toThemeProperty("jqx-menu-item-top-selected"))),
                        t = e(d.arrow),
                        0 < t.length && (t.removeClass(),
                        "left" != d.openHorizontalDirection ? (t.addClass(b.toThemeProperty("jqx-menu-item-arrow-" + b._getDir("right") + "-selected")),
                        t.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("right")))) : (t.addClass(b.toThemeProperty("jqx-menu-item-arrow-" + b._getDir("left") + "-selected")),
                        t.addClass(b.toThemeProperty("jqx-icon-arrow-" + b._getDir("left"))))),
                        0 == b.animationShowDuration ? (g.css({
                            left: q
                        }),
                        b._raiseEvent("0", d),
                        d.isOpen = !0,
                        e.jqx.aria(e(d.element), "aria-expanded", !0)) : g.animate({
                            left: q
                        }, b.animationShowDuration, b.easing, function() {
                            b._raiseEvent("0", d);
                            d.isOpen = !0;
                            e.jqx.aria(e(d.element), "aria-expanded", !0)
                        })
            }, this.animationShowDelay))
        },
        _getDir: function(b) {
            switch (b) {
            case "left":
                return this.rtl ? "right" : "left";
            case "right":
                return this.rtl ? "left" : "right"
            }
            return "left"
        },
        _applyOrientation: function(b, d) {
            var c = this
              , f = 0;
            c.host.removeClass(c.toThemeProperty("jqx-menu-horizontal"));
            c.host.removeClass(c.toThemeProperty("jqx-menu-vertical"));
            c.host.removeClass(c.toThemeProperty("jqx-menu"));
            c.host.removeClass(c.toThemeProperty("jqx-widget"));
            c.host.addClass(c.toThemeProperty("jqx-widget"));
            c.host.addClass(c.toThemeProperty("jqx-menu"));
            void 0 != b && void 0 != d && "popup" == d ? 0 < c.host.parent().length && 0 < c.host.parent().parent().length && c.host.parent().parent()[0] == document.body && (b = e.data(document.body, "jqxMenuOldHost" + c.element.id),
            null != b && (d = c.host.closest("div.jqx-menu-wrapper"),
            d.remove(),
            d.appendTo(b),
            c.host.css("display", "block"),
            c.host.css("visibility", "visible"),
            d.css("display", "block"),
            d.css("visibility", "visible"))) : void 0 == b && void 0 == d && e.data(document.body, "jqxMenuOldHost" + c.element.id, c.host.parent()[0]);
            c.autoOpenPopup ? "popup" == c.mode ? (c.addHandler(e(document), "contextmenu." + c.element.id, function(g) {
                return !1
            }),
            c.addHandler(e(document), "mousedown.menu" + c.element.id, function(g) {
                c._openContextMenu(g)
            })) : (c.removeHandler(e(document), "contextmenu." + c.element.id),
            c.removeHandler(e(document), "mousedown.menu" + c.element.id)) : (c.removeHandler(e(document), "contextmenu." + c.element.id),
            c.removeHandler(e(document), "mousedown.menu" + c.element.id),
            c.addHandler(e(document), "contextmenu." + c.element.id, function(g) {
                if (g.target && g.target.className.indexOf && 0 <= g.target.className.indexOf("jqx-menu"))
                    return !1
            }));
            c.rtl && c.host.addClass(c.toThemeProperty("jqx-rtl"));
            switch (c.mode) {
            case "horizontal":
                c.host.addClass(c.toThemeProperty("jqx-widget-header"));
                c.host.addClass(c.toThemeProperty("jqx-menu-horizontal"));
                e.each(c.items, function() {
                    var g = e(this.element)
                      , h = e(this.arrow);
                    h.removeClass();
                    this.hasItems && 0 < this.level && (h = e('<span style="border: none; background-color: transparent;" id="arrow' + g[0].id + '"></span>'),
                    h.prependTo(g),
                    h.css("float", c._getDir("right")),
                    h.addClass(c.toThemeProperty("jqx-menu-item-arrow-" + c._getDir("right"))),
                    h.addClass(c.toThemeProperty("jqx-icon-arrow-" + c._getDir("right"))),
                    this.arrow = h[0]);
                    if (0 == this.level) {
                        e(this.element).css("float", c._getDir("left"));
                        if (!this.ignoretheme && this.hasItems && c.showTopLevelArrows) {
                            h = e('<span style="border: none; background-color: transparent;" id="arrow' + g[0].id + '"></span>');
                            var k = e.jqx.browser.msie && 8 > e.jqx.browser.version;
                            null == this.arrow ? k ? h.appendTo(g) : h.prependTo(g) : h = e(this.arrow);
                            "down" == this.openVerticalDirection ? (h.addClass(c.toThemeProperty("jqx-menu-item-arrow-down")),
                            h.addClass(c.toThemeProperty("jqx-icon-arrow-down"))) : (h.addClass(c.toThemeProperty("jqx-menu-item-arrow-up")),
                            h.addClass(c.toThemeProperty("jqx-icon-arrow-up")));
                            h.css("visibility", "inherit");
                            k ? h.css("display", "inline-block") : (h.css("display", "block"),
                            h.css("float", "right"));
                            this.arrow = h[0]
                        } else
                            this.ignoretheme || !this.hasItems || c.showTopLevelArrows || null == this.arrow || (h = e(this.arrow),
                            h.remove(),
                            this.arrow = null);
                        f = Math.max(f, g.height())
                    }
                });
                break;
            case "vertical":
            case "popup":
            case "simple":
                c.host.addClass(c.toThemeProperty("jqx-menu-vertical")),
                e.each(c.items, function() {
                    var g = e(this.element);
                    if (this.hasItems && !this.ignoretheme) {
                        this.arrow && e(this.arrow).remove();
                        if ("simple" == c.mode)
                            return !0;
                        var h = e('<span style="border: none; background-color: transparent;" id="arrow' + g[0].id + '"></span>');
                        h.prependTo(g);
                        h.css("float", "right");
                        0 == this.level ? h.addClass(c.toThemeProperty("jqx-menu-item-arrow-top-" + c._getDir("right"))) : h.addClass(c.toThemeProperty("jqx-menu-item-arrow-" + c._getDir("right")));
                        h.addClass(c.toThemeProperty("jqx-icon-arrow-" + c._getDir("right")));
                        this.arrow = h[0]
                    }
                    g.css("float", "none")
                }),
                "popup" == c.mode ? (c.host.addClass(c.toThemeProperty("jqx-widget-content")),
                c.host.wrap('<div tabindex=0 class="jqx-menu-wrapper" style="z-index:' + c.popupZIndex + '; border: none; background-color: transparent; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>'),
                d = c.host.closest("div.jqx-menu-wrapper"),
                c.host.addClass(c.toThemeProperty("jqx-popup")),
                d[0].id = "menuWrapper" + c.element.id,
                d.appendTo(e(document.body)),
                c.addHandler(d, "keydown", function(g) {
                    return c.handleKeyDown(g)
                })) : c.host.addClass(c.toThemeProperty("jqx-widget-header")),
                "popup" == c.mode && (b = c.host.height(),
                c.host.css("position", "absolute"),
                c.host.css("top", "0"),
                c.host.css("left", "0"),
                "simple" != c.mode && (c.host.height(b),
                c.host.css("display", "none")))
            }
            b = c.isTouchDevice();
            c.autoCloseOnClick && (c.removeHandler(e(document), "mousedown.menu" + c.element.id, c._closeAfterClick),
            c.addHandler(e(document), "mousedown.menu" + c.element.id, c._closeAfterClick, c),
            b && (c.removeHandler(e(document), e.jqx.mobile.getTouchEventName("touchstart") + ".menu" + c.element.id, c._closeAfterClick, c),
            c.addHandler(e(document), e.jqx.mobile.getTouchEventName("touchstart") + ".menu" + c.element.id, c._closeAfterClick, c)))
        },
        _getBodyOffset: function() {
            var b = 0
              , d = 0;
            "0px" != e("body").css("border-top-width") && (b = parseInt(e("body").css("border-top-width")),
            isNaN(b) && (b = 0));
            "0px" != e("body").css("border-left-width") && (d = parseInt(e("body").css("border-left-width")),
            isNaN(d) && (d = 0));
            return {
                left: d,
                top: b
            }
        },
        _getOffset: function(b) {
            var d = e.jqx.mobile.isSafariMobileBrowser()
              , c = e(b).coord(!0)
              , f = c.top;
            c = c.left;
            "0px" != e("body").css("border-top-width") && (f = parseInt(f) + this._getBodyOffset().top);
            "0px" != e("body").css("border-left-width") && (c = parseInt(c) + this._getBodyOffset().left);
            var g = e.jqx.mobile.isWindowsPhone()
              , h = e.jqx.mobile.isTouchDevice();
            return this.hasTransform || null != d && d || g || h ? {
                left: e.jqx.mobile.getLeftPos(b),
                top: e.jqx.mobile.getTopPos(b)
            } : {
                left: c,
                top: f
            }
        },
        _isRightClick: function(b) {
            var d;
            b || (b = window.event);
            b.which ? d = 3 == b.which : b.button && (d = 2 == b.button);
            return d
        },
        _openContextMenu: function(b) {
            this._isRightClick(b) && this.open(parseInt(b.clientX) + 5, parseInt(b.clientY) + 5)
        },
        close: function() {
            var b = this;
            e.data(this.element, "contextMenuOpened" + this.element.id) && (b.host.removeClass("jqx-popup-show"),
            e.each(b.items, function() {
                this.hasItems && b._closeItem(b, this)
            }),
            e.each(b.items, function() {
                1 == this.isOpen && e(this.subMenuElement).closest("div.jqx-menu-popup").hide(this.animationHideDuration)
            }),
            this.host.hide(this.animationHideDuration),
            e.data(b.element, "contextMenuOpened" + this.element.id, !1),
            b._raiseEvent("1", b),
            b._raiseEvent("5"))
        },
        open: function(b, d) {
            if ("popup" == this.mode) {
                var c = 0;
                "block" == this.host.css("display") && (this.close(),
                c = this.animationHideDuration);
                var f = this;
                if (void 0 == b || null == b)
                    b = 0;
                if (void 0 == d || null == d)
                    d = 0;
                setTimeout(function() {
                    f.host.show(f.animationShowDuration);
                    f.host.css("visibility", "visible");
                    f.host.addClass("jqx-popup-show");
                    e.data(f.element, "contextMenuOpened" + f.element.id, !0);
                    f._raiseEvent("0", f);
                    f._raiseEvent("4", {
                        left: b,
                        top: d
                    });
                    f.host.css("z-index", f.popupZIndex);
                    void 0 != b && void 0 != d && f.host.css({
                        left: b,
                        top: d
                    });
                    f.focus()
                }, c)
            }
        },
        _renderHover: function(b, d, c) {
            var f = this;
            d.ignoretheme || (this.addHandler(b, "mouseenter", function() {
                f.hoveredItem = d;
                d.disabled || d.separator || !f.enableHover || f.disabled || (0 < d.level ? (b.addClass(f.toThemeProperty("jqx-fill-state-hover")),
                b.addClass(f.toThemeProperty("jqx-menu-item-hover"))) : (b.addClass(f.toThemeProperty("jqx-fill-state-hover")),
                b.addClass(f.toThemeProperty("jqx-menu-item-top-hover"))))
            }),
            this.addHandler(b, "mouseleave", function() {
                d.disabled || d.separator || !f.enableHover || f.disabled || (0 < d.level ? (b.removeClass(f.toThemeProperty("jqx-fill-state-hover")),
                b.removeClass(f.toThemeProperty("jqx-menu-item-hover"))) : (b.removeClass(f.toThemeProperty("jqx-fill-state-hover")),
                b.removeClass(f.toThemeProperty("jqx-menu-item-top-hover"))))
            }))
        },
        _closeAfterClick: function(b) {
            var d = null != b ? b.data : this
              , c = !1;
            d.autoCloseOnClick && (e.each(e(b.target).parents(), function() {
                if (this.className.indexOf && -1 != this.className.indexOf("jqx-menu"))
                    return c = !0,
                    !1
            }),
            c || (b.data = d,
            d._closeAll(b)))
        },
        _autoSizeHorizontalMenuItems: function() {
            var b = this;
            if (b.autoSizeMainItems && "horizontal" == this.mode) {
                var d = this.maxHeight;
                parseInt(d) > parseInt(this.host.height()) && (d = parseInt(this.host.height()));
                d = parseInt(this.host.height());
                e.each(this.items, function() {
                    var c = e(this.element);
                    if (0 == this.level && 0 < d) {
                        var f = 0 < c.children().length ? parseInt(c.children().height()) : c.height()
                          , g = b.host.find("ul:first")
                          , h = parseInt(g.css("padding-top"));
                        g = parseInt(g.css("margin-top"));
                        h = d - 2 * (g + h);
                        g = parseInt(h) / 2 - f / 2;
                        f = parseInt(g);
                        g = parseInt(g);
                        c.css("padding-top", f);
                        c.css("padding-bottom", g);
                        parseInt(c.outerHeight()) > h && c.css("padding-top", f - 1)
                    }
                })
            }
            e.each(this.items, function() {
                e(this.element);
                if (this.hasItems && 0 < this.level && this.arrow) {
                    var c = e(this.arrow)
                      , f = e(this.element).height();
                    15 < f && c.css("margin-top", (f - 15) / 2)
                }
            })
        },
        _nextVisibleItem: function(b, d) {
            if (null == b || void 0 == b)
                return null;
            for (; null != b; )
                if (b = b.nextItem,
                this._isVisible(b) && !b.disabled && "separator" !== b.type && (this.minimized || void 0 == d || !b || b.level == d))
                    return b;
            return null
        },
        _prevVisibleItem: function(b, d) {
            if (null == b || void 0 == b)
                return null;
            for (; null != b; )
                if (b = b.prevItem,
                this._isVisible(b) && !b.disabled && "separator" !== b.type && (this.minimized || void 0 == d || !b || b.level == d))
                    return b;
            return null
        },
        _parentItem: function(b) {
            if (null == b || void 0 == b)
                return null;
            var d = b.parentElement;
            if (!d)
                return null;
            var c = null;
            e.each(this.items, function() {
                if (this.element == d)
                    return c = this,
                    !1
            });
            return c
        },
        _isElementVisible: function(b) {
            return null == b ? !1 : "none" != e(b).css("display") && "hidden" != e(b).css("visibility") ? !0 : !1
        },
        _isVisible: function(b) {
            if (null == b || void 0 == b || !this._isElementVisible(b.element))
                return !1;
            b = this._parentItem(b);
            if (null == b || this.minimized)
                return !0;
            if (null != b)
                if (this._isElementVisible(b.element) && (b.isOpen || this.minimized))
                    for (; null != b; ) {
                        if (b = this._parentItem(b),
                        null != b && !this._isElementVisible(b.element) || null != b && !b.isOpen)
                            return !1
                    }
                else
                    return !1;
            return !0
        },
        _render: function(b, d) {
            this.disabled && (this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")),
            this.host.addClass(this.toThemeProperty("jqx-menu-disabled")));
            void 0 == this.host.attr("tabindex") && this.host.attr("tabindex", 0);
            var c = this.popupZIndex
              , f = [5, 5]
              , g = this;
            e.data(g.element, "animationHideDelay", g.animationHideDelay);
            var h = this.isTouchDevice()
              , k = h && (e.jqx.mobile.isWindowsPhone() || 0 <= navigator.userAgent.indexOf("Touch"));
            -1 != navigator.platform.toLowerCase().indexOf("win") && (0 <= navigator.userAgent.indexOf("Windows Phone") || 0 <= navigator.userAgent.indexOf("WPDesktop") || 0 <= navigator.userAgent.indexOf("IEMobile") || 0 <= navigator.userAgent.indexOf("ZuneWP7") ? this.touchDevice = !0 : 0 <= navigator.userAgent.indexOf("Touch") && ("MSPointerDown"in window || e.jqx.mobile.isWindowsPhone() || 0 <= navigator.userAgent.indexOf("ARM")) && (k = !0,
            g.clickToOpen = !0,
            g.autoCloseOnClick = !1,
            g.enableHover = !1));
            e.data(document.body, "menuel", this);
            this.hasTransform = e.jqx.utilities.hasTransform(this.host);
            this._applyOrientation(b, d);
            this.removeHandler(this.host, "blur");
            this.removeHandler(this.host, "focus");
            this.addHandler(this.host, "blur", function(l) {
                !g.keyboardNavigation || !g.activeItem || "popup" === g.mode && document.activeElement && 0 <= document.activeElement.className.indexOf("jqx-menu-wrapper") || (e(g.activeItem.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                g.activeItem = null)
            });
            this.addHandler(this.host, "focus", function(l) {
                g.keyboardNavigation && !g.activeItem && (g.hoveredItem ? (e(g.hoveredItem.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                g.activeItem = g.hoveredItem) : (l = function() {
                    if (e.jqx.isHidden(e(g.items[0].element))) {
                        var m = g._nextVisibleItem(g.items[0], 0);
                        m && (e(m.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = m)
                    } else
                        e(g.items[0].element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = g.items[0]
                }
                ,
                g.activeItem ? e.jqx.isHidden(e(g.activeItem.element)) ? (e(g.activeItem.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                l()) : e(g.activeItem.element).addClass(g.toThemeProperty("jqx-fill-state-focus")) : l()))
            });
            this.removeHandler(this.host, "keydown.menu" + this.element.id);
            g.handleKeyDown = function(l) {
                if (g.keyboardNavigation) {
                    if ("input" === l.target.nodeName.toLowerCase())
                        return !0;
                    var m = null
                      , n = null;
                    e.each(g.items, function() {
                        if (this.disabled)
                            return !0;
                        0 <= this.element.className.indexOf("pressed") && (n = this);
                        if (0 <= this.element.className.indexOf("focus"))
                            return m = this,
                            !1
                    });
                    if (!m && n)
                        return m = n,
                        !1;
                    if (!m)
                        return e(g.items[0].element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = g.items[0],
                        m = g.activeItem,
                        !1;
                    if (27 == l.keyCode && (l.data = g,
                    g._closeAll(l),
                    m))
                        for (var p = m; null != p; )
                            p.parentItem || (e(g.activeItem.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = p,
                            e(g.activeItem.element).addClass(g.toThemeProperty("jqx-fill-state-focus"))),
                            p = p.parentItem;
                    if (13 == l.keyCode && m) {
                        g._raiseEvent("2", {
                            item: m.element,
                            event: l,
                            type: "keyboard"
                        });
                        var q = null != m.anchor ? e(m.anchor) : null;
                        null != q && 0 < q.length && (p = q.attr("href"),
                        q = q.attr("target"),
                        null != p && (null != q ? window.open(p, q) : window.location = p));
                        l.preventDefault();
                        l.stopPropagation();
                        e(m.element).focus()
                    }
                    q = function(E) {
                        if (null == E)
                            return [];
                        for (var C = [], F = 0, P = 0; P < g.items.length; P++)
                            g.items[P].parentId == E.parentId && (C[F++] = g.items[P]);
                        return C
                    }
                    ;
                    var t = "";
                    switch (l.keyCode) {
                    case 40:
                        t = "down";
                        break;
                    case 38:
                        t = "up";
                        break;
                    case 39:
                        t = "right";
                        break;
                    case 37:
                        t = "left"
                    }
                    m && "left" === m.openHorizontalDirection && "left" === t && (t = "right");
                    m && "left" === m.openHorizontalDirection && "right" === t && (t = "left");
                    m && "top" === m.openVerticalDirection && "top" === t && (t = "bottom");
                    m && "top" === m.openVerticalDirection && "bottom" === t && (t = "top");
                    g.rtl && ("right" === t ? t = "left" : "left" === t && (t = "right"));
                    if ("right" === t && !g.minimized) {
                        if (l.altKey && (0 != m.level && m.hasItems || "horizontal" != g.mode))
                            g._openItem(g, m);
                        else {
                            var v = g._nextVisibleItem(m, 0)
                              , z = g._nextVisibleItem(m);
                            p = q(z);
                            v || (v = z);
                            v && (v.parentId === m.parentId && 0 == v.level && "horizontal" == g.mode || z.id == p[0].id && 0 != z.level) && (z.id == p[0].id && (0 != m.level || 0 == m.level && "horizontal" != g.mode) && (v = z),
                            e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = v)
                        }
                        l.preventDefault();
                        l.stopPropagation()
                    }
                    "left" !== t || g.minimized || (l.altKey && (0 != m.level && "horizontal" !== g.mode || 1 < m.level && "horizontal" === g.mode || 1 == m.level && m.hasItems && "horizontal" === g.mode) ? m.hasItems ? g._closeItem(g, m) : m.parentItem && (g._closeItem(g, m.parentItem),
                    e(m.parentItem.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                    e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                    g.activeItem = m.parentItem) : (v = g._prevVisibleItem(m, 0),
                    p = m.parentItem,
                    v && v.parentId === m.parentId && 0 == v.level && "horizontal" == g.mode ? (e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                    e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                    g.activeItem = v) : p && 0 == p.level && "horizontal" == g.mode || !p || p.level != m.level - 1 || (e(p.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                    e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                    g.activeItem = p)),
                    l.preventDefault(),
                    l.stopPropagation());
                    if ("down" === t)
                        l.altKey ? (0 == m.level && m.hasItems && g._openItem(g, m),
                        g.minimized && g.minimizedHidden && g.minimizedItem.trigger("click")) : (v = g._nextVisibleItem(m, m.level),
                        p = q(v),
                        g.minimized && v ? (e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = v) : (!v || v.parentId !== m.parentId && (v.id != p[0].id || "horizontal" != g.mode) || 0 == v.level && "horizontal" == g.mode || (e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = v),
                        "horizontal" === g.mode && 0 === m.level && m.isOpen && m.hasItems && (v = g._nextVisibleItem(m),
                        e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                        e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                        g.activeItem = v))),
                        l.preventDefault(),
                        l.stopPropagation();
                    else if ("up" === t) {
                        if (l.altKey)
                            m.parentItem && 0 == m.parentItem.level ? (g._closeItem(g, m.parentItem),
                            e(m.parentItem.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = m.parentItem) : null === m.parentItem && 0 === m.level && "horizontal" === g.mode && g._closeItem(g, m),
                            g.minimized && (g.minimizedHidden || g.minimizedItem.trigger("click"));
                        else if (v = g._prevVisibleItem(m, m.level),
                        p = q(m),
                        g.minimized && v)
                            e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = v;
                        else if (v && (v.parentId === m.parentId || v.id == m.parentId && 0 == v.level && "horizontal" == g.mode)) {
                            if (0 != v.level || "horizontal" !== g.mode || 0 !== m.level)
                                e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                                e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                                g.activeItem = v
                        } else
                            m && m.id == p[0].id && m.parentItem && 0 === m.parentItem.level && "horizontal" === g.mode && (v = m.parentItem,
                            e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = v);
                        l.preventDefault();
                        l.stopPropagation()
                    }
                    if (9 == l.keyCode)
                        if (v = l.shiftKey ? g._prevVisibleItem(m) : g._nextVisibleItem(m))
                            e(v.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = v,
                            l.preventDefault(),
                            l.stopPropagation();
                        else if (g.lockFocus) {
                            p = [];
                            for (t = q = 0; t < g.items.length; t++)
                                g.items[t] != m && g.items[t].parentId == m.parentId && (p[q++] = g.items[t]);
                            0 < p.length && (l.shiftKey ? (e(p[p.length - 1].element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = p[p.length - 1]) : (e(p[0].element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = p[0]),
                            e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")));
                            l.preventDefault();
                            l.stopPropagation()
                        } else
                            m && (e(m.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                            g.activeItem = null)
                } else
                    return !0
            }
            ;
            this.addHandler(this.host, "keydown.menu" + this.element.id, function(l) {
                g.handleKeyDown(l)
            });
            g.enableRoundedCorners && this.host.addClass(g.toThemeProperty("jqx-rc-all"));
            e.each(this.items, function() {
                var l = this
                  , m = e(l.element);
                m.attr("role", "menuitem");
                g.enableRoundedCorners && m.addClass(g.toThemeProperty("jqx-rc-all"));
                g.removeHandler(m, "click");
                g.addHandler(m, "click", function(C) {
                    if (!l.disabled && !g.disabled && (g.keyboardNavigation && (g.activeItem && e(g.activeItem.element).removeClass(g.toThemeProperty("jqx-fill-state-focus")),
                    g.activeItem = l,
                    e(l.element).addClass(g.toThemeProperty("jqx-fill-state-focus")),
                    g.minimized && C.stopPropagation()),
                    g._raiseEvent("2", {
                        type: "mouse",
                        item: l.element,
                        event: C
                    }),
                    g.autoOpen ? g.autoCloseOnClick && !h && !g.clickToOpen && l.closeOnClick && (C.data = g,
                    g._closeAll(C)) : 0 < l.level && g.autoCloseOnClick && !h && !g.clickToOpen && (C.data = g,
                    g._closeAll(C)),
                    h && g.autoCloseOnClick && (C.data = g,
                    l.hasItems || g._closeAll(C)),
                    "A" != C.target.tagName && "a" != C.target.tagName)) {
                        var F = null != l.anchor ? e(l.anchor) : null;
                        null != F && 0 < F.length && (C = F.attr("href"),
                        F = F.attr("target"),
                        null != C && (null != F ? window.open(C, F) : window.location = C))
                    }
                });
                g.removeHandler(m, "mouseenter");
                g.removeHandler(m, "mouseleave");
                k || "simple" == g.mode || g._renderHover(m, l, h);
                if (null != l.subMenuElement) {
                    var n = e(l.subMenuElement);
                    if ("simple" == g.mode)
                        return n.show(),
                        !0;
                    n.wrap('<div class="jqx-menu-popup ' + g.toThemeProperty("jqx-menu-popup") + '" style="border: none; background-color: transparent; z-index:' + c + '; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: hidden;"><div style="background-color: transparent; border: none; position:absolute; overflow:hidden; left: 0; top: 0; right: 0; width: 100%; height: 100%;"></div></div>');
                    n.css({
                        overflow: "hidden",
                        position: "absolute",
                        left: 0,
                        display: "inherit",
                        top: -n.outerHeight()
                    });
                    n.data("timer", {});
                    0 < l.level ? n.css("left", -n.outerWidth()) : "horizontal" == g.mode && n.css("left", 0);
                    c++;
                    var p = e(l.subMenuElement).closest("div.jqx-menu-popup").css({
                        width: parseInt(e(l.subMenuElement).outerWidth()) + parseInt(f[0]) + "px",
                        height: parseInt(e(l.subMenuElement).outerHeight()) + parseInt(f[1]) + "px"
                    })
                      , q = m.closest("div.jqx-menu-popup");
                    if (0 < q.length) {
                        var t = n.css("margin-left")
                          , v = n.css("margin-right")
                          , z = n.css("padding-left")
                          , E = n.css("padding-right");
                        p.addClass("horizontal");
                        p.appendTo(q)
                    } else
                        t = n.css("margin-left"),
                        v = n.css("margin-right"),
                        z = n.css("padding-left"),
                        E = n.css("padding-right"),
                        "horizontal" === g.mode ? p.addClass("top") : p.addClass("horizontal"),
                        p.appendTo(e(document.body));
                    n.css("margin-left", t);
                    n.css("margin-right", v);
                    n.css("padding-left", z);
                    n.css("padding-right", E);
                    if (g.clickToOpen)
                        g.removeHandler(m, "mousedown"),
                        g.addHandler(m, "mousedown", function(C) {
                            clearTimeout(n.data("timer").hide);
                            null != n && n.stop();
                            0 != l.level || l.isOpen || (C.data = g,
                            g._closeAll(C));
                            l.isOpen ? g._closeItem(g, l, !0) : g._openItem(g, l)
                        });
                    else {
                        if (h || k)
                            g.removeHandler(m, e.jqx.mobile.getTouchEventName("touchstart")),
                            g.addHandler(m, e.jqx.mobile.getTouchEventName("touchstart"), function(C) {
                                clearTimeout(n.data("timer").hide);
                                null != n && n.stop();
                                0 != l.level || l.isOpen || "popup" == g.mode || (C.data = g,
                                g._closeAll(C));
                                l.isOpen ? g._closeItem(g, l, !0) : g._openItem(g, l);
                                return !1
                            });
                        k || (g.addHandler(m, "mouseenter", function() {
                            (g.autoOpen || 0 < l.level && !g.autoOpen) && clearTimeout(n.data("timer").hide);
                            if (!l.parentId || 0 == l.parentId || !g.menuElements[l.parentId] || g.menuElements[l.parentId].isOpen)
                                return (g.autoOpen || 0 < l.level && !g.autoOpen) && g._openItem(g, l),
                                !1
                        }),
                        g.addHandler(m, "mousedown", function() {
                            g.autoOpen || 0 != l.level || (clearTimeout(n.data("timer").hide),
                            null != n && n.stop(),
                            l.isOpen ? g._closeItem(g, l, !0) : g._openItem(g, l))
                        }),
                        g.addHandler(m, "mouseleave", function(C) {
                            if (g.autoCloseOnMouseLeave) {
                                clearTimeout(n.data("timer").hide);
                                var F = e(l.subMenuElement)
                                  , P = parseInt(C.pageX);
                                C = parseInt(C.pageY);
                                var X = parseInt(F.coord().left)
                                  , W = parseInt(F.coord().top)
                                  , V = parseInt(F.outerWidth());
                                F = parseInt(F.outerHeight());
                                var ca = !0;
                                X - 5 <= P && P <= X + V + 5 && W <= C && C <= W + F && (ca = !1);
                                ca && g._closeItem(g, l, !0)
                            }
                        }),
                        g.removeHandler(p, "mouseenter"),
                        g.addHandler(p, "mouseenter", function() {
                            clearTimeout(n.data("timer").hide)
                        }),
                        g.removeHandler(p, "mouseleave"),
                        g.addHandler(p, "mouseleave", function(C) {
                            g.autoCloseOnMouseLeave && (clearTimeout(n.data("timer").hide),
                            clearTimeout(n.data("timer").show),
                            null != n && n.stop(),
                            g._closeItem(g, l, !0))
                        }))
                    }
                }
            });
            "simple" == this.mode && this._renderSimpleMode();
            this._autoSizeHorizontalMenuItems();
            this._raiseEvent("3", this)
        },
        _renderSimpleMode: function() {
            this.host.show()
        },
        createID: function() {
            var b = Math.random() + "";
            b = b.replace(".", "");
            for (b = ("99" + b) / 1; this.items[b]; )
                b = Math.random() + "",
                b = b.replace(".", ""),
                b /= 1;
            return "menuItem" + b
        },
        _createMenu: function(b, d) {
            if (null != b) {
                void 0 == d && (d = !0);
                null == d && (d = !0);
                e(b).addClass("jqx-menu-ul");
                b = e(b).find("li");
                var c = 0;
                this.itemMapping = [];
                for (var f = 0; f < b.length; f++) {
                    var g = b[f]
                      , h = e(g);
                    if (-1 != g.className.indexOf("jqx-menu") || 0 != this.autoGenerate) {
                        var k = g.id;
                        k || (k = this.createID());
                        d && (g.id = k,
                        this.items[c] = new e.jqx._jqxMenu.jqxMenuItem,
                        this.menuElements[k] = this.items[c]);
                        c += 1;
                        var l = 0
                          , m = this;
                        h.children().each(function() {
                            d || (this.className = "",
                            m.autoGenerate && (e(m.items[c - 1].subMenuElement)[0].className = "",
                            m.minimized || e(m.items[c - 1].subMenuElement).addClass(m.toThemeProperty("jqx-widget-content")),
                            e(m.items[c - 1].subMenuElement).addClass(m.toThemeProperty("jqx-menu-dropdown")),
                            e(m.items[c - 1].subMenuElement).addClass(m.toThemeProperty("jqx-popup"))));
                            if (-1 != this.className.indexOf("jqx-menu-dropdown"))
                                return d && (m.items[c - 1].subMenuElement = this),
                                !1;
                            if (m.autoGenerate && ("ul" == this.tagName || "UL" == this.tagName))
                                return d && (m.items[c - 1].subMenuElement = this),
                                this.className = "",
                                m.minimized || e(this).addClass(m.toThemeProperty("jqx-widget-content")),
                                e(this).addClass(m.toThemeProperty("jqx-menu-dropdown")),
                                e(this).addClass(m.toThemeProperty("jqx-popup")),
                                e(this).attr("role", "menu"),
                                m.rtl ? e(this).addClass(m.toThemeProperty("jqx-rc-l")) : e(this).addClass(m.toThemeProperty("jqx-rc-r")),
                                e(this).addClass(m.toThemeProperty("jqx-rc-b")),
                                !1
                        });
                        h.parents().each(function() {
                            if (-1 != this.className.indexOf("jqx-menu-item") || m.autoGenerate && ("li" == this.tagName || "LI" == this.tagName))
                                return l = this.id,
                                !1
                        });
                        var n = !1
                          , p = g.getAttribute("type")
                          , q = g.getAttribute("ignoretheme") || g.getAttribute("data-ignoretheme");
                        if (q) {
                            if ("true" == q || 1 == q)
                                q = !0
                        } else
                            q = !1;
                        p ? "separator" == p && (n = !0) : p = g.type;
                        n || (p = l ? "sub" : "top");
                        var t = this.items[c - 1];
                        d && (t.id = k,
                        t.parentId = l,
                        t.type = p,
                        t.separator = n,
                        t.element = b[f],
                        k = h.children("a"),
                        t.disabled = "true" == g.getAttribute("item-disabled") ? !0 : !1,
                        t.level = h.parents("li").length,
                        t.anchor = 0 < k.length ? k : null,
                        t.anchor && e(t.anchor).attr("tabindex", -1));
                        t.ignoretheme = q;
                        g = this.menuElements[l];
                        null != g && (g.ignoretheme && (q = t.ignoretheme = g.ignoretheme),
                        t.parentItem = g,
                        t.parentElement = g.element);
                        this.autoGenerate && ("separator" == p ? (h.removeClass(),
                        h.addClass(this.toThemeProperty("jqx-menu-item-separator")),
                        h.attr("role", "separator")) : q || (0 <= h[0].className.indexOf("jqx-grid-menu-item-touch") ? h[0].className = this.toThemeProperty("jqx-grid-menu-item-touch") : h[0].className = "",
                        this.rtl && h.addClass(this.toThemeProperty("jqx-rtl")),
                        0 < t.level && !m.minimized ? (h.addClass(this.toThemeProperty("jqx-item")),
                        h.addClass(this.toThemeProperty("jqx-menu-item"))) : (h.addClass(this.toThemeProperty("jqx-item")),
                        h.addClass(this.toThemeProperty("jqx-menu-item-top")))));
                        t.disabled && (h.addClass(m.toThemeProperty("jqx-menu-item-disabled")),
                        h.addClass(m.toThemeProperty("jqx-fill-state-disabled")));
                        this.itemMapping[f] = {
                            element: b[f],
                            item: t
                        };
                        this.itemMapping["id" + b[f].id] = this.itemMapping[f];
                        d && !q && (t.hasItems = 0 < h.find("li").length,
                        t.hasItems && t.element && (e.jqx.aria(e(t.element), "aria-haspopup", !0),
                        t.subMenuElement.id || (t.subMenuElement.id = e.jqx.utilities.createId()),
                        e.jqx.aria(e(t.element), "aria-owns", t.subMenuElement.id)))
                    }
                }
                for (f = 0; f < b.length; f++)
                    if (t = b[f],
                    this.itemMapping["id" + t.id] && (t = this.itemMapping["id" + t.id].item))
                        t.prevItem = null,
                        t.nextItem = null,
                        0 < f && this.itemMapping["id" + b[f - 1].id] && (t.prevItem = this.itemMapping["id" + b[f - 1].id].item),
                        f < b.length - 1 && this.itemMapping["id" + b[f + 1].id] && (t.nextItem = this.itemMapping["id" + b[f + 1].id].item)
            }
        },
        destroy: function() {
            var b = this;
            e.jqx.utilities.resize(b.host, null, !0);
            var d = b.host.closest("div.jqx-menu-wrapper");
            b.removeHandler(d, "keydown");
            d.remove();
            b.removeHandler(e("#menuWrapper" + b.element.id), "keydown");
            e("#menuWrapper" + b.element.id).remove();
            b.removeHandler(b.host, "keydown");
            b.removeHandler(b.host, "focus");
            b.removeHandler(b.host, "blur");
            b.removeHandler(e(document), "mousedown.menu" + b.element.id, b._closeAfterClick);
            b.removeHandler(e(document), "mouseup.menu" + b.element.id, b._closeAfterClick);
            b.removeHandler(e(document), "contextmenu." + b.element.id);
            b.removeHandler(b.host, "contextmenu." + b.element.id);
            e.data(document.body, "jqxMenuOldHost" + b.element.id, null);
            b.isTouchDevice() && b.removeHandler(e(document), e.jqx.mobile.getTouchEventName("touchstart") + ".menu" + b.element.id, b._closeAfterClick, this);
            e(window).off && e(window).off("resize.menu" + b.element.id);
            e.each(b.items, function() {
                var c = e(this.element);
                b.removeHandler(c, "click");
                b.removeHandler(c, "selectstart");
                b.removeHandler(c, "mouseenter");
                b.removeHandler(c, "mouseleave");
                b.removeHandler(c, "mousedown");
                b.removeHandler(c, "mouseleave");
                e(this.subMenuElement).closest("div.jqx-menu-popup").remove();
                delete this.subMenuElement;
                delete this.element
            });
            e.data(document.body, "menuel", null);
            delete b.menuElements;
            b.items = [];
            delete b.items;
            (d = e.data(b.element, "jqxMenu")) && delete d.instance;
            b.host.removeClass();
            b.host.remove();
            delete b.host;
            delete b.element
        },
        _raiseEvent: function(b, d) {
            void 0 == d && (d = {
                owner: null
            });
            var c = this.events[b]
              , f = d;
            f.owner = this;
            c = new e.Event(c);
            "2" == b && (f = d.item,
            f.owner = this,
            f.clickType = d.type,
            e.extend(c, d.event),
            c.type = "itemclick");
            c.owner = this;
            c.args = f;
            return this.host.trigger(c)
        },
        propertiesChangedHandler: function(b, d, c) {
            c.width && c.height && 2 == Object.keys(c).length && (b._setSize(),
            "popup" === b.mode && (this.host.closest("div.jqx-menu-wrapper")[d](c),
            e("#" + this.host[0].id)[d](c)))
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (void 0 != this.isInitialized && 0 != this.isInitialized && !(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 == Object.keys(b.batchUpdate).length) && ("disabled" == d && (b.disabled ? (b.host.addClass(b.toThemeProperty("jqx-fill-state-disabled")),
            b.host.addClass(b.toThemeProperty("jqx-menu-disabled"))) : (b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled")),
            b.host.removeClass(b.toThemeProperty("jqx-menu-disabled")))),
            f != c))
                if ("touchMode" == d && (this._isTouchDevice = null,
                b._render(f, c)),
                "width" === d || "height" === d)
                    b._setSize(),
                    "popup" === b.mode && (this.host.closest("div.jqx-menu-wrapper")[d](f),
                    e("#" + this.host[0].id)[d](f));
                else {
                    if ("source" == d && null != b.source) {
                        var g = b.loadItems(b.source);
                        b.element.innerHTML = g;
                        g = b.host.find("ul:first");
                        0 < g.length && (b.refresh(),
                        b._createMenu(g[0]),
                        b._render())
                    }
                    "autoCloseOnClick" == d ? 0 == f ? b.removeHandler(e(document), "mousedown.menu" + this.element.id, b._closeAll) : b.addHandler(e(document), "mousedown.menu" + this.element.id, b, b._closeAll) : "mode" == d || "width" == d || "height" == d || "showTopLevelArrows" == d ? (b.refresh(),
                    "mode" == d ? b._render(f, c) : b._applyOrientation()) : "theme" == d && e.jqx.utilities.setTheme(c, f, b.host)
                }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx._jqxMenu.jqxMenuItem = function(b, d, c) {
        return {
            id: b,
            parentId: d,
            parentItem: null,
            anchor: null,
            type: c,
            disabled: !1,
            level: 0,
            isOpen: !1,
            hasItems: !1,
            element: null,
            subMenuElement: null,
            arrow: null,
            openHorizontalDirection: "right",
            openVerticalDirection: "down",
            closeOnClick: !0
        }
    }
}
)(jqxBaseFramework);
(function(e) {
    function b(c, f) {
        this.owner = c;
        this.displayfield = this.datafield = null;
        this.text = "";
        this.createfilterpanel = null;
        this.editable = this.hideable = this.sortable = !0;
        this.adaptivehidden = this.hidden = !1;
        this.groupable = !0;
        this.checkchange = this.cellsrenderer = this.renderer = null;
        this.threestatecheckbox = !1;
        this.columntype = this.buttonclick = null;
        this.cellsformat = "";
        this.cellsalign = this.align = "left";
        this.width = "auto";
        this.minwidth = 25;
        this.maxwidth = "auto";
        this.pinned = !1;
        this.visibleindex = -1;
        this.filterable = !0;
        this.filter = null;
        this.filteritems = [];
        this.resizable = !0;
        this.validation = this.geteditorvalue = this.destroyeditor = this.destroywidget = this.initwidget = this.createwidget = this.createeditor = this.initeditor = null;
        this.cellclassname = this.classname = "";
        this.aggregatesrenderer = this.aggregates = this.cellvaluechanging = this.cellbeginedit = this.cellendedit = null;
        this.menu = !0;
        this.createfilterwidget = null;
        this.filtertype = "default";
        this.rendered = this.filtercondition = null;
        this.exportable = !0;
        this.exporting = !1;
        this.clipboard = this.nullable = this.draggable = !0;
        this.selectable = !1;
        this.autofill = !0;
        this._applyStyle = function() {
            this.hovered ? (this.style.headerBackgroundHoveredColor && (this.element.style.backgroundColor = this.style.headerBackgroundHoveredColor),
            this.style.headerHoveredColor && (this.element.style.color = this.style.headerHoveredColor)) : this.selected ? (this.style.headerBackgroundSelectedColor && (this.element.style.backgroundColor = this.style.headerBackgroundSelectedColor),
            this.style.headerSelectedColor && (this.element.style.color = this.style.headerSelectedColor)) : (this.element.style.backgroundColor = this.style.headerBackgroundColor ? this.style.headerBackgroundColor : "",
            this.element.style.color = this.style.headerColor ? this.style.headerColor : "")
        }
        ;
        this._applyCellStyle = function(g) {
            var h = !1;
            if (g.length)
                for (h = 0; h < g.length; h++)
                    this._applyCellStyle(g[h]);
            else {
                if (this.style.backgroundColor || this.style.color || this.style.hoveredColor || this.style.hoveredColor || this.style.backgroundSelectedColor || this.style.selectedColor)
                    h = !0;
                h && (0 <= g.className.indexOf("hover") ? (this.style.backgroundHoveredColor && (g.style.backgroundColor = this.style.backgroundHoveredColor),
                this.style.hoveredColor && (g.style.color = this.style.hoveredColor)) : 0 <= g.className.indexOf("selected") ? (this.style.backgroundSelectedColor && (g.style.backgroundColor = this.style.backgroundSelectedColor),
                this.style.selectedColor && (g.style.color = this.style.selectedColor)) : (this.style.backgroundColor && (g.style.backgroundColor = this.style.backgroundColor),
                this.style.color && (g.style.color = this.style.color)))
            }
        }
        ;
        this.style = {
            headerBackgroundColor: "",
            headerColor: "",
            headerBackgroundHoveredColor: "",
            headerHoveredColor: "",
            headerBackgroundSelectedColor: "",
            headerSelectedColor: "",
            backgroundColor: "",
            color: "",
            backgroundHoveredColor: "",
            hoveredColor: "",
            backgroundSelectedColor: "",
            selectedColor: ""
        };
        this.enabletooltips = !0;
        this.columngroup = null;
        this.filterdelay = 800;
        this.destroyeverpresentrowwidget = this.validateeverpresentrowwidgetvalue = this.initeverpresentrowwidget = this.createeverpresentrowwidget = this.geteverpresentrowwidgetvalue = this.reseteverpresentrowwidgetvalue = null;
        this.getcolumnproperties = function() {
            return {
                nullable: this.nullable,
                sortable: this.sortable,
                hideable: this.hideable,
                hidden: this.hidden,
                groupable: this.groupable,
                width: this.width,
                align: this.align,
                editable: this.editable,
                minwidth: this.minwidth,
                maxwidth: this.maxwidth,
                resizable: this.resizable,
                datafield: this.datafield,
                text: this.text,
                exportable: this.exportable,
                cellsalign: this.cellsalign,
                pinned: this.pinned,
                cellsformat: this.cellsformat,
                columntype: this.columntype,
                classname: this.classname,
                cellclassname: this.cellclassname,
                menu: this.menu
            }
        }
        ;
        this.setproperty = function(g, h) {
            if (this[g]) {
                var k = this[g];
                this[g] = h;
                this.owner._columnPropertyChanged(this, g, h, k)
            } else
                this[g.toLowerCase()] && (k = this[g.toLowerCase()],
                this[g.toLowerCase()] = h,
                this.owner._columnPropertyChanged(this, g.toLowerCase(), h, k))
        }
        ;
        this._initfields = function(g) {
            if (null != g) {
                var h = this.that;
                e.jqx.hasProperty(g, "dataField") && (this.datafield = e.jqx.get(g, "dataField"));
                e.jqx.hasProperty(g, "selectable") && (this.selectable = e.jqx.get(g, "selectable"));
                e.jqx.hasProperty(g, "displayField") ? this.displayfield = e.jqx.get(g, "displayField") : this.displayfield = this.datafield;
                e.jqx.hasProperty(g, "enableTooltips") && (this.enabletooltips = e.jqx.get(g, "enableTooltips"));
                e.jqx.hasProperty(g, "text") ? this.text = e.jqx.get(g, "text") : this.text = this.displayfield;
                e.jqx.hasProperty(g, "style") && (this.style = e.jqx.get(g, "style"));
                e.jqx.hasProperty(g, "createfilterpanel") && (this.createfilterpanel = e.jqx.get(g, "createfilterpanel"));
                e.jqx.hasProperty(g, "sortable") && (this.sortable = e.jqx.get(g, "sortable"));
                e.jqx.hasProperty(g, "hideable") && (this.hideable = e.jqx.get(g, "hideable"));
                e.jqx.hasProperty(g, "hidden") && (this.hidden = e.jqx.get(g, "hidden"));
                e.jqx.hasProperty(g, "adaptivehidden") && (this.adaptivehidden = e.jqx.get(g, "adaptivehidden"));
                e.jqx.hasProperty(g, "groupable") && (this.groupable = e.jqx.get(g, "groupable"));
                e.jqx.hasProperty(g, "renderer") && (this.renderer = e.jqx.get(g, "renderer"));
                e.jqx.hasProperty(g, "align") && (this.align = e.jqx.get(g, "align"));
                e.jqx.hasProperty(g, "cellsAlign") && (this.cellsalign = e.jqx.get(g, "cellsAlign"));
                e.jqx.hasProperty(g, "clipboard") && (this.clipboard = e.jqx.get(g, "clipboard"));
                e.jqx.hasProperty(g, "cellsFormat") && (this.cellsformat = e.jqx.get(g, "cellsFormat"));
                e.jqx.hasProperty(g, "width") && (this.width = e.jqx.get(g, "width"));
                e.jqx.hasProperty(g, "autofill") && (this.autofill = e.jqx.get(g, "autofill"));
                e.jqx.hasProperty(g, "minWidth") && (this.minwidth = parseInt(e.jqx.get(g, "minWidth")),
                isNaN(this.minwidth) && (this.minwidth = 25));
                e.jqx.hasProperty(g, "maxWidth") && (this.maxwidth = parseInt(e.jqx.get(g, "maxWidth")),
                isNaN(this.maxwidth) && (this.maxwidth = "auto"));
                e.jqx.hasProperty(g, "cellsRenderer") ? this.cellsrenderer = e.jqx.get(g, "cellsRenderer") : g.cellsRenderer && (this.cellsrenderer = g.cellsRenderer);
                e.jqx.hasProperty(g, "columnType") && (this.columntype = e.jqx.get(g, "columnType"));
                e.jqx.hasProperty(g, "checkChange") && (this.checkchange = e.jqx.get(g, "checkChange"));
                e.jqx.hasProperty(g, "buttonClick") ? this.buttonclick = e.jqx.get(g, "buttonClick") : g.buttonClick && (this.buttonclick = g.buttonClick);
                e.jqx.hasProperty(g, "pinned") && (this.pinned = e.jqx.get(g, "pinned"));
                e.jqx.hasProperty(g, "visibleIndex") && (this.visibleindex = e.jqx.get(g, "visibleIndex"));
                e.jqx.hasProperty(g, "filterable") && (this.filterable = e.jqx.get(g, "filterable"));
                e.jqx.hasProperty(g, "filter") && (this.filter = e.jqx.get(g, "filter"));
                e.jqx.hasProperty(g, "resizable") && (this.resizable = e.jqx.get(g, "resizable"));
                e.jqx.hasProperty(g, "editable") && (this.editable = e.jqx.get(g, "editable"));
                e.jqx.hasProperty(g, "initEditor") ? this.initeditor = e.jqx.get(g, "initEditor") : g.initEditor && (this.initeditor = g.initEditor);
                e.jqx.hasProperty(g, "createEditor") ? this.createeditor = e.jqx.get(g, "createEditor") : g.createEditor && (this.createeditor = g.createEditor);
                e.jqx.hasProperty(g, "initWidget") ? this.initwidget = e.jqx.get(g, "initWidget") : g.initWidget && (this.initwidget = g.initWidget);
                e.jqx.hasProperty(g, "createWidget") ? this.createwidget = e.jqx.get(g, "createWidget") : g.createWidget && (this.createwidget = g.createWidget);
                e.jqx.hasProperty(g, "destroyWidget") ? this.destroywidget = e.jqx.get(g, "destroyWidget") : g.destroyWidget && (this.destroywidget = g.destroyWidget);
                e.jqx.hasProperty(g, "reseteverpresentrowwidgetvalue") || e.jqx.hasFunction(g, "reseteverpresentrowwidgetvalue") ? this.reseteverpresentrowwidgetvalue = e.jqx.get(g, "reseteverpresentrowwidgetvalue") : g.resetEverPresentRowWidgetValue && (this.reseteverpresentrowwidgetvalue = g.resetEverPresentRowWidgetValue);
                e.jqx.hasProperty(g, "geteverpresentrowwidgetvalue") || e.jqx.hasFunction(g, "geteverpresentrowwidgetvalue") ? this.geteverpresentrowwidgetvalue = e.jqx.get(g, "geteverpresentrowwidgetvalue") : g.getEverPresentRowWidgetValue && (this.geteverpresentrowwidgetvalue = g.getEverPresentRowWidgetValue);
                e.jqx.hasProperty(g, "createeverpresentrowwidget") || e.jqx.hasFunction(g, "createeverpresentrowwidget") ? this.createeverpresentrowwidget = e.jqx.get(g, "createeverpresentrowwidget") : g.createEverPresentRowWidget && (this.createeverpresentrowwidget = g.createEverPresentRowWidget);
                e.jqx.hasProperty(g, "initeverpresentrowwidget") || e.jqx.hasFunction(g, "initeverpresentrowwidget") ? this.initeverpresentrowwidget = e.jqx.get(g, "initeverpresentrowwidget") : g.initEverPresentRowWidget && (this.initeverpresentrowwidget = g.initEverPresentRowWidget);
                e.jqx.hasProperty(g, "validateeverpresentrowwidgetvalue") ? this.validateeverpresentrowwidgetvalue = e.jqx.get(g, "validateeverpresentrowwidgetvalue") : g.validateEverPresentRowWidgetValue && (this.validateeverpresentrowwidgetvalue = g.validateEverPresentRowWidgetValue);
                e.jqx.hasProperty(g, "destroyeverpresentrowwidget") || e.jqx.hasFunction(g, "destroyeverpresentrowwidget") ? this.destroyeverpresentrowwidget = e.jqx.get(g, "destroyeverpresentrowwidget") : g.destroyEverPresentRowWidget && (this.destroyEverPresentRowWidget = g.destroyEverPresentRowWidget);
                e.jqx.hasProperty(g, "destroyEditor") ? this.destroyeditor = e.jqx.get(g, "destroyEditor") : g.destroyEditor && (this.destroyeditor = g.destroyEditor);
                e.jqx.hasProperty(g, "getEditorValue") ? this.geteditorvalue = e.jqx.get(g, "getEditorValue") : g.getEditorValue && (this.geteditorvalue = g.getEditorValue);
                e.jqx.hasProperty(g, "validation") ? this.validation = e.jqx.get(g, "validation") : g.validation && (this.validation = g.validation);
                e.jqx.hasProperty(g, "cellBeginEdit") ? this.cellbeginedit = e.jqx.get(g, "cellBeginEdit") : g.cellBeginEdit && (this.cellbeginedit = g.cellBeginEdit);
                e.jqx.hasProperty(g, "cellEndEdit") ? this.cellendedit = e.jqx.get(g, "cellEndEdit") : g.cellEndEdit && (this.cellendedit = g.cellEndEdit);
                e.jqx.hasProperty(g, "className") && (this.classname = e.jqx.get(g, "className"));
                e.jqx.hasProperty(g, "cellClassName") ? this.cellclassname = e.jqx.get(g, "cellClassName") : g.cellClassName && (this.cellclassname = g.cellClassName);
                e.jqx.hasProperty(g, "menu") && (this.menu = e.jqx.get(g, "menu"));
                e.jqx.hasProperty(g, "aggregates") && (this.aggregates = e.jqx.get(g, "aggregates"));
                e.jqx.hasProperty(g, "aggregatesRenderer") && (this.aggregatesrenderer = e.jqx.get(g, "aggregatesRenderer"));
                e.jqx.hasProperty(g, "createFilterWidget") && (this.createfilterwidget = e.jqx.get(g, "createFilterWidget"));
                e.jqx.hasProperty(g, "filterType") && (this.filtertype = e.jqx.get(g, "filterType"));
                e.jqx.hasProperty(g, "filterDelay") && (this.filterdelay = e.jqx.get(g, "filterDelay"));
                e.jqx.hasProperty(g, "rendered") && (this.rendered = e.jqx.get(g, "rendered"));
                e.jqx.hasProperty(g, "exportable") && (this.exportable = e.jqx.get(g, "exportable"));
                e.jqx.hasProperty(g, "filterItems") && (this.filteritems = e.jqx.get(g, "filterItems"));
                e.jqx.hasProperty(g, "cellValueChanging") && (this.cellvaluechanging = e.jqx.get(g, "cellValueChanging"));
                e.jqx.hasProperty(g, "draggable") && (this.draggable = e.jqx.get(g, "draggable"));
                e.jqx.hasProperty(g, "filterCondition") && (this.filtercondition = e.jqx.get(g, "filterCondition"));
                e.jqx.hasProperty(g, "threeStateCheckbox") && (this.threestatecheckbox = e.jqx.get(g, "threeStateCheckbox"));
                e.jqx.hasProperty(g, "nullable") && (this.nullable = e.jqx.get(g, "nullable"));
                e.jqx.hasProperty(g, "columnGroup") && (this.columngroup = e.jqx.get(g, "columnGroup"));
                if (!g instanceof String && "string" != typeof g)
                    for (var k in g)
                        if (!h.hasOwnProperty(k) && !h.hasOwnProperty(k.toLowerCase()))
                            throw c.host.remove(),
                            Error("jqxGrid: Invalid property name - " + k + ".");
            }
        }
        ;
        this._initfields(f);
        return this
    }
    function d(c, f) {
        this.setdata = function(g) {
            null != g && (this.bounddata = g,
            this.boundindex = g.boundindex,
            this.visibleindex = g.visibleindex,
            this.group = g.group,
            this.parentbounddata = g.parentItem,
            this.uniqueid = g.uniqueid,
            this.level = g.level)
        }
        ;
        this.setdata(f);
        this.parentrow = null;
        this.subrows = [];
        this.owner = c;
        this.height = 25;
        this.hidden = !1;
        this.rowdetails = null;
        this.rowdetailsheight = 100;
        this.rowdetailshidden = !0;
        this.top = -1;
        this.setrowinfo = function(g) {
            this.hidden = g.hidden;
            this.rowdetails = g.rowdetails;
            this.rowdetailsheight = g.rowdetailsheight;
            this.rowdetailshidden = !g.showdetails;
            this.height = g.height
        }
        ;
        return this
    }
    e.jqx.jqxWidget("jqxGrid", "", {});
    e.extend(e.jqx._jqxGrid.prototype, {
        defineInstance: function() {
            var c = {
                adaptive: !1,
                adaptivewidth: 600,
                disabled: !1,
                width: 600,
                height: 400,
                pagerheight: 40,
                groupsheaderheight: 34,
                pagesize: 10,
                pagesizeoptions: ["5", "10", "20"],
                rowsheight: 32,
                columnsheight: 36,
                filterrowheight: 36,
                groupindentwidth: 30,
                rowdetails: !1,
                enablerowdetailsindent: !0,
                enablemousewheel: !0,
                initrowdetails: null,
                layoutrowdetails: null,
                editable: !1,
                editmode: "selectedcell",
                pageable: !1,
                pagermode: "default",
                pagerbuttonscount: 5,
                groupable: !1,
                sortable: !1,
                sortmode: "one",
                filterable: !1,
                filtermode: "default",
                filterbarmode: "default",
                autoshowfiltericon: !0,
                showfiltercolumnbackground: !0,
                showpinnedcolumnbackground: !0,
                showsortcolumnbackground: !0,
                altrows: !1,
                altstart: 1,
                altstep: 1,
                showrowdetailscolumn: !0,
                showrowlines: !0,
                showcolumnlines: !0,
                showcolumnheaderlines: !0,
                showtoolbar: !1,
                showfilterbar: !1,
                toolbarheight: 36,
                showstatusbar: !1,
                statusbarheight: 36,
                enableellipsis: !0,
                groups: [],
                groupsrenderer: null,
                groupcolumnrenderer: null,
                groupsexpandedbydefault: !1,
                pagerrenderer: null,
                touchmode: "auto",
                columns: [],
                selectedrowindex: -1,
                selectedrowindexes: [],
                selectedcells: [],
                autobind: !0,
                selectedcell: null,
                tableZIndex: 79,
                headerZIndex: 29,
                updatefilterconditions: null,
                showgroupaggregates: !1,
                showaggregates: !1,
                showfilterrow: !1,
                showeverpresentrow: !1,
                everpresentrowposition: "top",
                everpresentrowactions: "add reset",
                everpresentrowactionsmode: "buttons",
                everpresentrowheight: 30,
                autorowheight: !1,
                autokoupdates: !0,
                handlekeyboardnavigation: null,
                showsortmenuitems: !0,
                showfiltermenuitems: !0,
                showgroupmenuitems: !0,
                enablebrowserselection: !1,
                enablekeyboarddelete: !0,
                clipboard: !0,
                clipboardbegin: null,
                clipboardend: null,
                copytoclipboardwithheaders: !1,
                copytoclipboardhiddencolumns: !1,
                ready: null,
                updatefilterpanel: null,
                autogeneratecolumns: !1,
                rowdetailstemplate: null,
                scrollfeedback: null,
                rendertoolbar: null,
                renderstatusbar: null,
                rendered: null,
                multipleselectionbegins: null,
                columngroups: null,
                cellhover: null,
                source: {
                    beforeprocessing: null,
                    beforesend: null,
                    loaderror: null,
                    localdata: null,
                    data: null,
                    datatype: "array",
                    datafields: [],
                    url: "",
                    root: "",
                    record: "",
                    id: "",
                    totalrecords: 0,
                    recordstartindex: 0,
                    recordendindex: 0,
                    loadallrecords: !0,
                    sortcolumn: null,
                    sortdirection: null,
                    sort: null,
                    filter: null,
                    sortcomparer: null
                },
                filter: null,
                dataview: null,
                updatedelay: null,
                autoheight: !1,
                autowidth: !1,
                showheader: !0,
                showgroupsheader: !0,
                closeablegroups: !0,
                scrollbarsize: e.jqx.utilities.scrollBarSize,
                touchscrollbarsize: e.jqx.utilities.touchScrollBarSize,
                scrollbarautoshow: e.jqx.utilities.scrollBarAutoShow,
                virtualmode: !1,
                sort: null,
                columnsmenu: !0,
                columnsresize: !1,
                columnsautoresize: !0,
                columnsreorder: !1,
                columnsmenuwidth: 16,
                autoshowcolumnsmenubutton: !0,
                showcolumnsactionbutton: !1,
                popupwidth: "auto",
                popupheight: "auto",
                columnmenuopening: null,
                columnmenuclosing: null,
                sorttogglestates: 2,
                rendergridrows: null,
                enableanimations: !0,
                enablecolumnsvirtualization: !0,
                enabletooltips: !1,
                selectionmode: "singlerow",
                autofill: !1,
                enableoptimization: !1,
                enablehover: !0,
                loadingerrormessage: "The data is still loading. When the data binding is completed, the Grid raises the 'bindingcomplete' event. Call this function in the 'bindingcomplete' event handler.",
                verticalscrollbarstep: 30,
                verticalscrollbarlargestep: 400,
                horizontalscrollbarstep: 10,
                horizontalscrollbarlargestep: 50,
                keyboardnavigation: !0,
                keyboardmenunavigation: !0,
                touchModeStyle: "auto",
                autoshowloadelement: !0,
                showdefaultloadelement: !0,
                showemptyrow: !0,
                autosavestate: !1,
                autoloadstate: !1,
                cardview: !1,
                cardviewcolumns: ["20%", "20%", "20%", "20%", "20%"],
                cardheight: 250,
                cardsize: 3,
                _updating: !1,
                _pagescache: [],
                _pageviews: [],
                _cellscache: [],
                _rowdetailscache: [],
                _rowdetailselementscache: [],
                _requiresupdate: !1,
                _hasOpenedMenu: !1,
                scrollmode: "physical",
                deferreddatafields: null,
                localization: null,
                rtl: !1,
                menuitemsarray: [],
                charting: {
                    appendTo: null,
                    colorScheme: "scheme02",
                    dialog: {
                        header: "Data Visualization",
                        height: 400,
                        width: 400,
                        position: "center",
                        enabled: !0
                    },
                    ready: null,
                    formatSettings: {}
                },
                events: "initialized rowClick rowSelect rowUnselect groupExpand groupCollapse sort columnClick cellClick pageChanged pageSizeChanged bindingComplete groupsChanged filter columnResized cellSelect cellUnselect cellBeginEdit cellEndEdit cellValueChanged rowExpand rowCollapse rowDoubleClick cellDoubleClick columnReordered pageChanging".split(" ")
            };
            if (this === e.jqx._jqxGrid.prototype)
                return c;
            e.extend(!0, this, c);
            return c
        },
        _applyThemeSettings: function() {
            if (this.isMaterialized()) {
                var c = window.getComputedStyle(this.element)
                  , f = c.getPropertyValue("--jqx-grid-row-height")
                  , g = c.getPropertyValue("--jqx-grid-column-height")
                  , h = c.getPropertyValue("--jqx-grid-show-column-lines")
                  , k = c.getPropertyValue("--jqx-grid-filter-menu-items-height");
                c = c.getPropertyValue("--jqx-scrollbar-size");
                f && 32 === this.rowsheight && !this.cardview && (this.rowsheight = parseInt(f));
                g && 36 === this.columnsheight && (this.columnsheight = parseInt(g));
                h && (this.showcolumnlines = this.showcolumnheaderlines = parseInt(h));
                this.filterMenuItemsHeight = k ? parseInt(k) : 23;
                c && (this.scrollbarsize = c,
                e.jqx.utilities.scrollBarSize = c)
            }
        },
        createInstance: function(c) {
            this.that = this;
            this.pagesize = parseInt(this.pagesize);
            this.toolbarheight = parseInt(this.toolbarheight);
            this.columnsheight = parseInt(this.columnsheight);
            this.filterrowheight = parseInt(this.filterrowheight);
            this.statusbarheight = parseInt(this.statusbarheight);
            this.groupsheaderheight = parseInt(this.groupsheaderheight);
            this._undoRedo = [];
            this._undoRedoIndex = -1;
            this.cardview && (this.__rowsheight = this.rowsheight,
            this.rowsheight = this.cardheight);
            this._applyThemeSettings();
            this.detailsVisibility = [];
            this.savedArgs = c && 0 < c.length ? c[0] : null;
            c = "<div class='jqx-clear jqx-border-reset jqx-overflow-hidden jqx-max-size jqx-position-relative'><div tabindex='1' class='jqx-clear jqx-max-size jqx-position-relative jqx-overflow-hidden jqx-background-reset' id='wrapper" + this.element.id + "'><div class='jqx-clear jqx-position-absolute' id='toolbar' style='visibility: hidden;'></div><div class='jqx-clear jqx-position-absolute' id='groupsheader' style='visibility: hidden;'></div><div class='jqx-clear jqx-position-absolute' id='filter' style='visibility: hidden;'></div><div class='jqx-clear jqx-overflow-hidden jqx-position-absolute jqx-border-reset jqx-background-reset' id='content" + this.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='verticalScrollBar" + this.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='horizontalScrollBar" + this.element.id + "'></div><div class='jqx-clear jqx-position-absolute jqx-border-reset' id='bottomRight'></div><div class='jqx-clear jqx-position-absolute' id='addrow'></div><div class='jqx-clear jqx-position-absolute' id='statusbar'></div><div class='jqx-clear jqx-position-absolute' id='pager' style='z-index: 20;'></div></div></div>";
            this.element.innerHTML = "";
            if (this.source) {
                if (!this.source.dataBind) {
                    if (!e.jqx.dataAdapter)
                        throw Error("jqxGrid: Missing reference to jqxdata.js");
                    this.source = new e.jqx.dataAdapter(this.source)
                }
                var f = this.source._source.datafields;
                f && 0 < f.length && (this.editmode = this.editmode.toLowerCase(),
                this.selectionmode = this.selectionmode.toLowerCase())
            }
            this.host.attr("role", "grid");
            this.host.attr("align", "left");
            this.element.innerHTML = c;
            this.host.addClass(this.toTP("jqx-grid"));
            this.host.addClass(this.toTP("jqx-reset"));
            this.host.addClass(this.toTP("jqx-rc-all"));
            this.host.addClass(this.toTP("jqx-widget"));
            this.host.addClass(this.toTP("jqx-widget-content"));
            this.wrapper = this.host.find("#wrapper" + this.element.id);
            this.content = this.host.find("#content" + this.element.id);
            this.content.addClass(this.toTP("jqx-reset"));
            this.filterbar = this.host.find("#filter");
            this.filterbar[0].id = "filter" + this.element.id;
            this.filterbar.addClass(this.toTP("jqx-widget-header"));
            this.filterbar.addClass(this.toTP("jqx-grid-toolbar"));
            c = this.host.find("#verticalScrollBar" + this.element.id);
            f = this.host.find("#horizontalScrollBar" + this.element.id);
            this.bottomRight = this.host.find("#bottomRight").addClass(this.toTP("jqx-grid-bottomright jqx-scrollbar-state-normal"));
            if (!c.jqxScrollBar)
                throw Error("jqxGrid: Missing reference to jqxscrollbar.js");
            this.editors = [];
            this.vScrollBar = c.jqxScrollBar({
                vertical: !0,
                rtl: this.rtl,
                touchMode: this.touchmode,
                step: this.verticalscrollbarstep,
                largestep: this.verticalscrollbarlargestep,
                theme: this.theme,
                _triggervaluechanged: !1
            });
            this.hScrollBar = f.jqxScrollBar({
                vertical: !1,
                rtl: this.rtl,
                touchMode: this.touchmode,
                step: this.horizontalscrollbarstep,
                largestep: this.horizontalscrollbarlargestep,
                theme: this.theme,
                _triggervaluechanged: !1
            });
            this.addnewrow = this.host.find("#addrow");
            this.addnewrow[0].id = "addrow" + this.element.id;
            this.addnewrow.addClass(this.toTP("jqx-widget-header"));
            this.pager = this.host.find("#pager");
            this.pager[0].id = "pager" + this.element.id;
            this.toolbar = this.host.find("#toolbar");
            this.toolbar[0].id = "toolbar" + this.element.id;
            this.toolbar.addClass(this.toTP("jqx-grid-toolbar"));
            this.toolbar.addClass(this.toTP("jqx-widget-header"));
            this.statusbar = this.host.find("#statusbar");
            this.statusbar[0].id = "statusbar" + this.element.id;
            this.statusbar.addClass(this.toTP("jqx-grid-statusbar"));
            this.statusbar.addClass(this.toTP("jqx-widget-header"));
            this.pager.addClass(this.toTP("jqx-grid-pager"));
            this.pager.addClass(this.toTP("jqx-widget-header"));
            this.groupsheader = this.host.find("#groupsheader");
            this.groupsheader.addClass(this.toTP("jqx-grid-groups-header"));
            this.groupsheader.addClass(this.toTP("jqx-widget-header"));
            this.groupsheader[0].id = "groupsheader" + this.element.id;
            this.vScrollBar.css("visibility", "hidden");
            this.hScrollBar.css("visibility", "hidden");
            this.vScrollInstance = e.data(this.vScrollBar[0], "jqxScrollBar").instance;
            this.hScrollInstance = e.data(this.hScrollBar[0], "jqxScrollBar").instance;
            this.gridtable = null;
            this.isNestedGrid = this.host.parent() ? 299 == this.host.parent().css("z-index") : !1;
            this.touchdevice = this.isTouchDevice();
            this.localizestrings && (this.localizestrings(),
            null != this.localization && this.localizestrings(this.localization, !1));
            this.rowdetailstemplate && "function" !== typeof this.rowdetailstemplate && (void 0 == this.rowdetailstemplate.rowdetails && (this.rowdetailstemplate.rowdetails = "<div></div>"),
            void 0 == this.rowdetailstemplate.rowdetailsheight && (this.rowdetailstemplate.rowdetailsheight = 200),
            void 0 == this.rowdetailstemplate.rowdetailshidden && (this.rowdetailstemplate.rowdetailshidden = !0));
            if (this.showfilterrow && !this.filterable)
                throw Error('jqxGrid: "showfilterrow" requires setting the "filterable" property to true!');
            if (!this.autorowheight || this.autoheight || this.pageable) {
                if (this.virtualmode && null == this.rendergridrows)
                    throw Error('jqxGrid: "virtualmode" requires setting the "rendergridrows"!');
                if (this.virtualmode && !this.pageable && this.groupable)
                    throw Error('jqxGrid: "grouping" in "virtualmode" without paging is not supported!');
                if (!this._testmodules()) {
                    this._builddataloadelement();
                    (this._cachedcolumns = this.columns) && this.columns.length > this.headerZIndex && (this.headerZIndex = this.columns.length + 100);
                    if (this.theme && 0 <= this.theme.indexOf("material")) {
                        f = e("<span>Test</span>");
                        c = e("<span>Test</span>");
                        f.addClass(this.toTP("jqx-grid-row-cell"));
                        c.addClass(this.toTP("jqx-grid-column-header-cell"));
                        this.host.append(f);
                        this.host.append(c);
                        var g = f.outerHeight()
                          , h = c.outerHeight();
                        g > this.rowsheight && (this._cellheight = this.rowsheight = g);
                        h > this.columnsheight && (this._columnHeight = this.columnsheight = h);
                        f.remove();
                        c.remove()
                    }
                    31 != this.rowsheight && this._measureElement("cell");
                    (32 != this.columnsheight || this.columngroups) && this._measureElement("column");
                    if (this.source && (f = this.source.datafields,
                    null == f && this.source._source && (f = this.source._source.datafields),
                    f))
                        for (g = 0; g < this.columns.length; g++)
                            if ((c = this.columns[g]) && c.cellsformat && 2 < c.cellsformat.length)
                                for (h = 0; h < f.length; h++)
                                    if (f[h].name == c.datafield && !f[h].format) {
                                        f[h].format = c.cellsformat;
                                        break
                                    }
                    this.databind(this.source);
                    this.showtoolbar && this.toolbar.css("visibility", "inherit");
                    this.showfilterbar && this.filterbar.css("visibility", "inherit");
                    this.showstatusbar && this.statusbar.css("visibility", "inherit");
                    this._arrange();
                    this.pageable && this._initpager && this._initpager();
                    this.tableheight = null;
                    var k = this.that
                      , l = function() {
                        k.content && (k.content[0].scrollTop = 0,
                        k.content[0].scrollLeft = 0);
                        k.gridcontent && (k.gridcontent[0].scrollLeft = 0,
                        k.gridcontent[0].scrollTop = 0)
                    };
                    this.addHandler(this.content, "mousedown", function() {
                        l()
                    });
                    this.addHandler(this.content, "scroll", function(m) {
                        l();
                        return !1
                    });
                    this.showfilterrow || (this.showstatusbar || this.showtoolbar || this.host.addClass("jqx-disableselect"),
                    this.content.addClass("jqx-disableselect"));
                    this.enablebrowserselection && (this.content.removeClass("jqx-disableselect"),
                    this.host.removeClass("jqx-disableselect"));
                    this._resizeWindow();
                    this.disabled && this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
                    this.hasTransform = e.jqx.utilities.hasTransform(this.host);
                    "logical" == this.scrollmode && (this.vScrollInstance.thumbStep = this.rowsheight,
                    this.vScrollInstance.step = this.rowsheight);
                    e.jqx.isHidden(this.host) || (this.filterable || this.groupable || this.sortable) && this._initmenu()
                }
            } else
                throw Error('jqxGrid: "autorowheight" requires setting the "autoheight" or "pageable" property to true!');
        },
        _resizeWindow: function() {
            var c = this.that;
            if (null != this.width && -1 != this.width.toString().indexOf("%") || null != this.height && -1 != this.height.toString().indexOf("%")) {
                this._updatesizeonwindowresize = !0;
                e.jqx.utilities.resize(this.host, function(h) {
                    var k = e(window).width()
                      , l = e(window).height()
                      , m = c.host.width()
                      , n = c.host.height();
                    if (c.pageable) {
                        var p = c.host.find(".jqx-grid-pager-input");
                        350 > k ? p.hide() : p.show()
                    }
                    c.autoheight && (c._lastHostWidth = l);
                    if (c._lastHostWidth != m || c._lastHostHeight != n) {
                        if (c.touchdevice && c.editcell && "orientationchange" !== h)
                            return;
                        c._updatesize(c._lastHostWidth != m, c._lastHostHeight != n)
                    }
                    c._lastWidth = k;
                    c._lastHeight = l;
                    c._lastHostWidth = m;
                    c._lastHostHeight = n
                });
                var f = c.host.width()
                  , g = c.host.height();
                c._lastHostWidth = f;
                c._lastHostHeight = g
            }
        },
        _builddataloadelement: function() {
            this.dataloadelement && this.dataloadelement.remove();
            this.dataloadelement = e('<div style="overflow: hidden; position: absolute;"></div>');
            if (this.showdefaultloadelement) {
                var c = e('<div style="z-index: 99; margin-left: -66px; left: 50%; top: 50%; margin-top: -24px; position: relative; width: 100px; height: 33px; padding: 5px; font-family: verdana; font-size: 12px; color: #767676; border-color: #898989; border-width: 1px; border-style: solid; background: #f6f6f6; border-collapse: collapse;"><div style="float: left;"><div style="float: left; overflow: hidden; width: 32px; height: 32px;" class="jqx-grid-load"/><span style="margin-top: 10px; float: left; display: block; margin-left: 5px;" >' + this.gridlocalization.loadtext + "</span></div></div>");
                c.addClass(this.toTP("jqx-rc-all"));
                this.dataloadelement.addClass(this.toTP("jqx-rc-all"));
                c.addClass(this.toTP("jqx-fill-state-normal"));
                this.dataloadelement.append(c)
            } else
                this.dataloadelement.addClass(this.toTP("jqx-grid-load"));
            this.dataloadelement.width(this.host.width());
            this.dataloadelement.height(this.host.height());
            this.wrapper.prepend(this.dataloadelement)
        },
        _measureElement: function(c) {
            var f = e("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
            f.addClass(this.toTP("jqx-widget"));
            e(document.body).append(f);
            "cell" == c ? this._cellheight = f.height() : this._columnheight = f.height();
            f.remove()
        },
        _measureMenuElement: function() {
            var c = e("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
            c.addClass(this.toTP("jqx-widget"));
            c.addClass(this.toTP("jqx-menu"));
            c.addClass(this.toTP("jqx-menu-item-top"));
            c.addClass(this.toTP("jqx-fill-state-normal"));
            this.isTouchDevice() && c.addClass(this.toTP("jqx-grid-menu-item-touch"));
            e(document.body).append(c);
            var f = c.outerHeight();
            "light" !== this.theme && "dark" !== this.theme || this._isIE10() || (f += 10,
            36 < f && (f = 36));
            c.remove();
            return f
        },
        _measureElementWidth: function(c) {
            c = e("<span style='visibility: hidden; white-space: nowrap;'>" + c + "</span>");
            c.addClass(this.toTP("jqx-widget"));
            c.addClass(this.toTP("jqx-grid"));
            c.addClass(this.toTP("jqx-grid-column-header"));
            c.addClass(this.toTP("jqx-widget-header"));
            e(document.body).append(c);
            var f = c.outerWidth() + 20;
            c.remove();
            return f
        },
        _getBodyOffset: function() {
            var c = 0
              , f = 0;
            "0px" != e("body").css("border-top-width") && (c = parseInt(e("body").css("border-top-width")),
            isNaN(c) && (c = 0));
            "0px" != e("body").css("border-left-width") && (f = parseInt(e("body").css("border-left-width")),
            isNaN(f) && (f = 0));
            return {
                left: f,
                top: c
            }
        },
        _testmodules: function() {
            var c = ""
              , f = this.that
              , g = function() {
                "" != c.length && (c += ",")
            };
            this.columnsmenu && !this.host.jqxMenu && (this.sortable || this.groupable || this.filterable) && (g(),
            c += " jqxmenu.js");
            this.host.jqxScrollBar || (g(),
            c += " jqxscrollbar.js");
            this.host.jqxButton || (g(),
            c += " jqxbuttons.js");
            e.jqx.dataAdapter || (g(),
            c += " jqxdata.js");
            this.pageable && !this.gotopage && (g(),
            c += "jqxgrid.pager.js");
            this.filterable && !this.applyfilters && (g(),
            c += " jqxgrid.filter.js");
            this.groupable && !this._initgroupsheader && (g(),
            c += " jqxgrid.grouping.js");
            this.columnsresize && !this.autoresizecolumns && (g(),
            c += " jqxgrid.columnsresize.js");
            this.columnsreorder && !this.setcolumnindex && (g(),
            c += " jqxgrid.columnsreorder.js");
            this.sortable && !this.sortby && (g(),
            c += " jqxgrid.sort.js");
            this.editable && !this.begincelledit && (g(),
            c += " jqxgrid.edit.js");
            this.showaggregates && !this.getcolumnaggregateddata && (g(),
            c += " jqxgrid.aggregates.js");
            this.keyboardnavigation && !this.selectrow && (g(),
            c += " jqxgrid.selection.js");
            if ("" != c || this.editable || this.filterable || this.pageable) {
                var h = []
                  , k = function(n) {
                    switch (n) {
                    case "checkbox":
                        f.host.jqxCheckBox || h.checkbox || (h.checkbox = !0,
                        g(),
                        c += " jqxcheckbox.js");
                        break;
                    case "numberinput":
                        f.host.jqxNumberInput || h.numberinput || (h.numberinput = !0,
                        g(),
                        c += " jqxnumberinput.js");
                        break;
                    case "datetimeinput":
                        f.host.jqxDateTimeInput || h.datetimeinput ? f.host.jqxCalendar || h.calendar || (g(),
                        c += " jqxcalendar.js") : (g(),
                        h.datetimeinput = !0,
                        c += " jqxdatetimeinput.js(requires: jqxcalendar.js)");
                        break;
                    case "combobox":
                        f.host.jqxComboBox || h.combobox ? f.host.jqxListBox || h.listbox || (g(),
                        h.listbox = !0,
                        c += " jqxlistbox.js") : (g(),
                        h.combobox = !0,
                        c += " jqxcombobox.js(requires: jqxlistbox.js)");
                        break;
                    case "dropdownlist":
                        f.host.jqxDropDownList || h.dropdownlist ? f.host.jqxListBox || h.listbox || (g(),
                        h.listbox = !0,
                        c += " jqxlistbox.js") : (g(),
                        h.dropdownlist = !0,
                        c += " jqxdropdownlist.js(requires: jqxlistbox.js)")
                    }
                };
                (this.filterable || this.pageable) && k("dropdownlist");
                for (var l = 0; l < this.columns.length; l++)
                    if (void 0 != this.columns[l]) {
                        var m = this.columns[l].columntype;
                        k(m);
                        this.filterable && this.showfilterrow && (m = this.columns[l].filtertype,
                        "checkedlist" != m && "bool" != m || k("checkbox"),
                        "date" == m && k("datetimeinput"))
                    }
                if ("" != c)
                    throw Error("jqxGrid: Missing references to the following module(s): " + c);
            }
            return !1
        },
        focus: function() {
            try {
                this.wrapper.focus();
                var c = this.that;
                setTimeout(function() {
                    c.wrapper.focus()
                }, 25);
                this.focused = !0
            } catch (f) {}
        },
        hiddenParent: function() {
            return e.jqx.isHidden(this.host)
        },
        resize: function(c, f) {
            this.width = c;
            this.height = f;
            this._updatesize(!0, !0)
        },
        _updatesize: function(c, f) {
            if (!this._loading) {
                var g = this.that;
                g._newmax = null;
                var h = g.host.width()
                  , k = g.host.height();
                g._oldWidth || (g._oldWidth = h);
                g._oldHeight || (g._oldHeight = k);
                g._resizeTimer && clearTimeout(g._resizeTimer);
                g.resizingGrid = !0;
                if (!e.jqx.isHidden(g.host)) {
                    g.editcell && (g.endcelledit(g.editcell.row, g.editcell.column, !0, !0),
                    g._oldselectedcell = null);
                    if (k != g._oldHeight || 1 == f) {
                        var l = g.groupable && 0 < g.groups.length
                          , m = g.vScrollBar.css("visibility");
                        if (!g.autoheight) {
                            g.virtualmode && (g._pageviews = []);
                            if (l || g.rowdetails || g.pageable) {
                                g._arrange();
                                g.prerenderrequired = !0;
                                k = Math.round(g.host.height()) + 2 * g.rowsheight;
                                g._gettableheight();
                                l = Math.round(k / g.rowsheight);
                                var n = Math.max(g.dataview.totalrows, g.dataview.totalrecords);
                                g.pageable && (n = g.pagesize,
                                g.pagesize > Math.max(g.dataview.totalrows, g.dataview.totalrecords) && g.autoheight ? n = Math.max(g.dataview.totalrows, g.dataview.totalrecords) : g.autoheight || g.dataview.totalrows < g.pagesize && (n = Math.max(g.dataview.totalrows, g.dataview.totalrecords)));
                                g._getpagesize();
                                !g.pageable && g.autoheight && (l = n);
                                g.virtualsizeinfo && (g.virtualsizeinfo.visiblerecords = l);
                                g.rendergridcontent(!0, !1);
                                g._renderrows(g.virtualsizeinfo)
                            } else
                                g._arrange(),
                                g.virtualsizeinfo = g._calculatevirtualheight(),
                                k = Math.round(g.host.height()) + 2 * g.rowsheight,
                                parseInt(k) >= parseInt(g._oldHeight) && (g.prerenderrequired = !0),
                                g._renderrows(g.virtualsizeinfo),
                                g.rtl && (g._updatecolumnwidths(),
                                g.table && g.table.width(g.columnsheader.width()),
                                g._updatecellwidths());
                            m != g.vScrollBar.css("visibility") && (g.vScrollInstance.setPosition(0),
                            g._arrange(),
                            g._updatecolumnwidths(),
                            g.table && g.table.width(g.columnsheader.width()),
                            g._updatecellwidths())
                        }
                    }
                    if (h != g._oldWidth || 1 == c) {
                        m = !1;
                        if (g.editcell && g.editcell.editor)
                            switch (g.editcell.columntype) {
                            case "dropdownlist":
                                if (m = g.editcell.editor.jqxDropDownList("isOpened") || g.editcell.editor.jqxDropDownList("isanimating") && !g.editcell.editor.jqxDropDownList("ishiding")) {
                                    g.editcell.editor.jqxDropDownList({
                                        openDelay: 0
                                    });
                                    g.editcell.editor.jqxDropDownList("open");
                                    g.editcell.editor.jqxDropDownList({
                                        openDelay: 250
                                    });
                                    return
                                }
                                break;
                            case "combobox":
                                if (m = g.editcell.editor.jqxComboBox("isOpened") || g.editcell.editor.jqxComboBox("isanimating") && !g.editcell.editor.jqxComboBox("ishiding")) {
                                    g.editcell.editor.jqxComboBox({
                                        openDelay: 0
                                    });
                                    g.editcell.editor.jqxComboBox("open");
                                    g.editcell.editor.jqxComboBox({
                                        openDelay: 250
                                    });
                                    return
                                }
                                break;
                            case "datetimeinput":
                                if (m) {
                                    m = g.editcell.editor.jqxDateTimeInput("isOpened") || g.editcell.editor.jqxDateTimeInput("isanimating") && !g.editcell.editor.jqxDateTimeInput("ishiding");
                                    g.editcell.editor.jqxDateTimeInput({
                                        openDelay: 0
                                    });
                                    g.editcell.editor.jqxDateTimeInput("open");
                                    g.editcell.editor.jqxDateTimeInput({
                                        openDelay: 250
                                    });
                                    return
                                }
                            }
                        m = g.hScrollBar.css("visibility");
                        g._arrange();
                        g._updatecolumnwidths();
                        g.table && g.table.width(g.columnsheader.width());
                        g._updatecellwidths();
                        0 == c && g._oldWidth > h || f && 0 != g.dataview.rows.length || g._renderrows(g.virtualsizeinfo);
                        m != g.hScrollBar.css("visibility") && g.hScrollInstance.setPosition(0);
                        if (g.adaptive && g.element.offsetWidth <= g.adaptivewidth) {
                            var p = 0
                              , q = g.element.offsetWidth - 2;
                            e.each(g.columns.records, function(t, v) {
                                p += this.width;
                                if ("adaptive" === this.columntype)
                                    return !0;
                                p >= q && (this.adaptivehidden = !0)
                            });
                            g._updatecolumnwidths();
                            g._updatecellwidths();
                            g._renderrows(g.virtualsizeinfo)
                        } else
                            g.adaptive && (e.each(g.columns.records, function(t, v) {
                                if ("adaptive" === this.columntype)
                                    return !0;
                                this.adaptivehidden = !1;
                                delete this.adaptivewidth
                            }),
                            g._updatecolumnwidths(),
                            g._updatecellwidths(),
                            g._renderrows(g.virtualsizeinfo))
                    }
                    g._oldWidth = h;
                    g._oldHeight = k;
                    g.resizingGrid = !1
                }
            }
        },
        getTouches: function(c) {
            return e.jqx.mobile.getTouches(c)
        },
        _updateTouchScrolling: function() {
            var c = this.that;
            if (c.isTouchDevice()) {
                c.scrollmode = "logical";
                c.vScrollInstance.thumbStep = c.rowsheight;
                var f = e.jqx.mobile.getTouchEventName("touchstart")
                  , g = e.jqx.mobile.getTouchEventName("touchend")
                  , h = e.jqx.mobile.getTouchEventName("touchmove");
                c.enablehover = !1;
                c.gridcontent && (c.removeHandler(c.gridcontent, f + ".touchScroll"),
                c.removeHandler(c.gridcontent, h + ".touchScroll"),
                c.removeHandler(c.gridcontent, g + ".touchScroll"),
                c.removeHandler(c.gridcontent, "touchcancel.touchScroll"),
                e.jqx.mobile.touchScroll(c.gridcontent[0], c.vScrollInstance.max, function(k, l) {
                    null != l && "visible" == c.vScrollBar.css("visibility") && c.vScrollInstance.setPosition(l);
                    null != k && "visible" == c.hScrollBar.css("visibility") && c.hScrollInstance.setPosition(k);
                    c.vScrollInstance.thumbCapture = !0;
                    c._lastScroll = new Date
                }, this.element.id, this.hScrollBar, this.vScrollBar),
                c._overlayElement && (c.removeHandler(c._overlayElement, f + ".touchScroll"),
                c.removeHandler(c._overlayElement, h + ".touchScroll"),
                c.removeHandler(c._overlayElement, g + ".touchScroll"),
                c.removeHandler(c._overlayElement, "touchcancel.touchScroll"),
                e.jqx.mobile.touchScroll(c._overlayElement[0], c.vScrollInstance.max, function(k, l) {
                    null != l && "visible" == c.vScrollBar.css("visibility") && c.vScrollInstance.setPosition(l);
                    null != k && "visible" == c.hScrollBar.css("visibility") && c.hScrollInstance.setPosition(k);
                    c.vScrollInstance.thumbCapture = !0;
                    c._lastScroll = new Date
                }, this.element.id, this.hScrollBar, this.vScrollBar),
                this.addHandler(this.host, f, function() {
                    c.editcell ? c._overlayElement.css("visibility", "hidden") : c._overlayElement.css("visibility", "visible")
                }),
                this.addHandler(this.host, g, function() {
                    c.editcell ? c._overlayElement.css("visibility", "hidden") : c._overlayElement.css("visibility", "visible")
                })))
            }
        },
        _rendercelltexts: function() {},
        isTouchDevice: function() {
            if (void 0 != this.touchDevice)
                return this.touchDevice;
            var c = e.jqx.mobile.isTouchDevice();
            this.touchDevice = c;
            if (1 == this.touchmode) {
                if (e.jqx.browser.msie && 9 > e.jqx.browser.version)
                    return this.enablehover = !1;
                c = !0;
                e.jqx.mobile.setMobileSimulator(this.element);
                this.touchDevice = c
            } else
                0 == this.touchmode && (c = !1);
            c && 0 != this.touchModeStyle && (this.touchDevice = !0,
            this.host.addClass(this.toThemeProperty("jqx-touch")),
            this.host.find("jqx-widget-content").addClass(this.toThemeProperty("jqx-touch")),
            this.host.find("jqx-widget-header").addClass(this.toThemeProperty("jqx-touch")),
            this.scrollbarsize = this.touchscrollbarsize);
            return c
        },
        toTP: function(c) {
            return this.toThemeProperty(c)
        },
        localizestrings: function(c, f) {
            this._cellscache = [];
            e.jqx.dataFormat && e.jqx.dataFormat.cleardatescache();
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            if (null != c) {
                for (var g in c)
                    g.toLowerCase() !== g && (c[g.toLowerCase()] = c[g]);
                c.okstring && (this.gridlocalization.okstring = c.okstring);
                c.cancelstring && (this.gridlocalization.cancelstring = c.cancelstring);
                c.pagergotopagestring && (this.gridlocalization.pagergotopagestring = c.pagergotopagestring);
                c.pagershowrowsstring && (this.gridlocalization.pagershowrowsstring = c.pagershowrowsstring);
                c.pagerrangestring && (this.gridlocalization.pagerrangestring = c.pagerrangestring);
                c.pagernextbuttonstring && (this.gridlocalization.pagernextbuttonstring = c.pagernextbuttonstring);
                c.pagerpreviousbuttonstring && (this.gridlocalization.pagerpreviousbuttonstring = c.pagerpreviousbuttonstring);
                c.pagerfirstbuttonstring && (this.gridlocalization.pagerfirstbuttonstring = c.pagerfirstbuttonstring);
                c.pagerlastbuttonstring && (this.gridlocalization.pagerlastbuttonstring = c.pagerlastbuttonstring);
                c.groupsheaderstring && (this.gridlocalization.groupsheaderstring = c.groupsheaderstring);
                c.sortascendingstring && (this.gridlocalization.sortascendingstring = c.sortascendingstring);
                c.sortdescendingstring && (this.gridlocalization.sortdescendingstring = c.sortdescendingstring);
                c.sortremovestring && (this.gridlocalization.sortremovestring = c.sortremovestring);
                c.groupbystring && (this.gridlocalization.groupbystring = c.groupbystring);
                c.groupremovestring && (this.gridlocalization.groupremovestring = c.groupremovestring);
                c.firstDay && (this.gridlocalization.firstDay = c.firstDay);
                c.days && (this.gridlocalization.days = c.days);
                c.months && (this.gridlocalization.months = c.months);
                c.AM && (this.gridlocalization.AM = c.AM);
                c.PM && (this.gridlocalization.PM = c.PM);
                c.patterns && (this.gridlocalization.patterns = c.patterns);
                c.percentsymbol && (this.gridlocalization.percentsymbol = c.percentsymbol);
                c.currencysymbol && (this.gridlocalization.currencysymbol = c.currencysymbol);
                c.currencysymbolposition && (this.gridlocalization.currencysymbolposition = c.currencysymbolposition);
                void 0 != c.decimalseparator && (this.gridlocalization.decimalseparator = c.decimalseparator);
                void 0 != c.thousandsseparator && (this.gridlocalization.thousandsseparator = c.thousandsseparator);
                c.filterclearstring && (this.gridlocalization.filterclearstring = c.filterclearstring);
                c.filterstring && (this.gridlocalization.filterstring = c.filterstring);
                c.filtershowrowstring && (this.gridlocalization.filtershowrowstring = c.filtershowrowstring);
                c.filtershowrowdatestring && (this.gridlocalization.filtershowrowdatestring = c.filtershowrowdatestring);
                c.filterselectallstring && (this.gridlocalization.filterselectallstring = c.filterselectallstring);
                c.filterchoosestring && (this.gridlocalization.filterchoosestring = c.filterchoosestring);
                c.filterorconditionstring && (this.gridlocalization.filterorconditionstring = c.filterorconditionstring);
                c.filterandconditionstring && (this.gridlocalization.filterandconditionstring = c.filterandconditionstring);
                c.filterstringcomparisonoperators && (this.gridlocalization.filterstringcomparisonoperators = c.filterstringcomparisonoperators);
                c.filternumericcomparisonoperators && (this.gridlocalization.filternumericcomparisonoperators = c.filternumericcomparisonoperators);
                c.filterdatecomparisonoperators && (this.gridlocalization.filterdatecomparisonoperators = c.filterdatecomparisonoperators);
                c.filterbooleancomparisonoperators && (this.gridlocalization.filterbooleancomparisonoperators = c.filterbooleancomparisonoperators);
                c.emptydatastring && (this.gridlocalization.emptydatastring = c.emptydatastring);
                c.filterselectstring && (this.gridlocalization.filterselectstring = c.filterselectstring);
                c.todaystring && (this.gridlocalization.todaystring = c.todaystring);
                c.clearstring && (this.gridlocalization.clearstring = c.clearstring);
                c.validationstring && (this.gridlocalization.validationstring = c.validationstring);
                c.loadtext && (this.gridlocalization.loadtext = c.loadtext);
                c.addrowstring && (this.gridlocalization.addrowstring = c.addrowstring);
                c.udpaterowstring && (this.gridlocalization.udpaterowstring = c.udpaterowstring);
                c.deleterowstring && (this.gridlocalization.deleterowstring = c.deleterowstring);
                c.resetrowstring && (this.gridlocalization.resetrowstring = c.resetrowstring);
                c.everpresentrowplaceholder && (this.gridlocalization.everpresentrowplaceholder = c.everpresentrowplaceholder);
                if (!1 !== f) {
                    this._initpager && this._initpager();
                    this._initgroupsheader && this._initgroupsheader();
                    this._initmenu && this._initmenu();
                    this._builddataloadelement();
                    e(this.dataloadelement).css("visibility", "hidden");
                    e(this.dataloadelement).css("display", "none");
                    if (this.filterable && this.showfilterrow && this._updatefilterrow) {
                        for (g in this._filterrowcache)
                            e(this._filterrowcache[g]).remove();
                        this._filterrowcache = [];
                        this._updatefilterrow()
                    }
                    this.showaggregates && this.refresheaggregates && this.refresheaggregates();
                    this._renderrows(this.virtualsizeinfo)
                }
            } else
                this.gridlocalization = {
                    "/": "/",
                    ":": ":",
                    firstDay: 0,
                    days: {
                        names: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                        namesAbbr: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                        namesShort: "Su Mo Tu We Th Fr Sa".split(" ")
                    },
                    months: {
                        names: "January February March April May June July August September October November December ".split(" "),
                        namesAbbr: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec ".split(" ")
                    },
                    AM: ["AM", "am", "AM"],
                    PM: ["PM", "pm", "PM"],
                    eras: [{
                        name: "A.D.",
                        start: null,
                        offset: 0
                    }],
                    twoDigitYearMax: 2029,
                    patterns: {
                        d: "M/d/yyyy",
                        D: "dddd, MMMM dd, yyyy",
                        t: "h:mm tt",
                        T: "h:mm:ss tt",
                        f: "dddd, MMMM dd, yyyy h:mm tt",
                        F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                        M: "MMMM dd",
                        Y: "yyyy MMMM",
                        S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                        ISO: "yyyy-MM-dd hh:mm:ss",
                        ISO2: "yyyy-MM-dd HH:mm:ss",
                        d1: "dd.MM.yyyy",
                        d2: "dd-MM-yyyy",
                        d3: "dd-MMMM-yyyy",
                        d4: "dd-MM-yy",
                        d5: "H:mm",
                        d6: "HH:mm",
                        d7: "HH:mm tt",
                        d8: "dd/MMMM/yyyy",
                        d9: "MMMM-dd",
                        d10: "MM-dd",
                        d11: "MM-dd-yyyy"
                    },
                    percentsymbol: "%",
                    currencysymbol: "$",
                    currencysymbolposition: "before",
                    decimalseparator: ".",
                    thousandsseparator: ",",
                    pagergotopagestring: "Go to page:",
                    pagershowrowsstring: "Show rows:",
                    pagerrangestring: " of ",
                    pagerpreviousbuttonstring: "previous",
                    pagernextbuttonstring: "next",
                    pagerfirstbuttonstring: "first",
                    pagerlastbuttonstring: "last",
                    groupsheaderstring: "Drag a column and drop it here to group by that column",
                    sortascendingstring: "Sort Ascending",
                    sortdescendingstring: "Sort Descending",
                    sortremovestring: "Remove Sort",
                    groupbystring: "Group By this column",
                    groupremovestring: "Remove from groups",
                    filterclearstring: "Clear",
                    filtersearchstring: "Search:",
                    filterstring: "Filter",
                    filtershowrowstring: "Show rows where:",
                    filtershowrowdatestring: "Show rows where date:",
                    filterorconditionstring: "Or",
                    filterandconditionstring: "And",
                    filterselectallstring: "(Select All)",
                    filterchoosestring: "Please Choose:",
                    filterstringcomparisonoperators: "empty;not empty;contains;contains(match case);does not contain;does not contain(match case);starts with;starts with(match case);ends with;ends with(match case);equal;equal(match case);null;not null".split(";"),
                    filternumericcomparisonoperators: "equal;not equal;less than;less than or equal;greater than;greater than or equal;null;not null".split(";"),
                    filterdatecomparisonoperators: "equal;not equal;less than;less than or equal;greater than;greater than or equal;null;not null".split(";"),
                    filterbooleancomparisonoperators: ["equal", "not equal"],
                    validationstring: "Entered value is not valid",
                    emptydatastring: "No data to display",
                    filterselectstring: "Select Filter",
                    loadtext: "Loading...",
                    clearstring: "Clear",
                    todaystring: "Today",
                    addrowstring: "Add",
                    udpaterowstring: "Update",
                    deleterowstring: "Delete",
                    resetrowstring: "Reset",
                    everpresentrowplaceholder: "Enter ",
                    okstring: "Ok",
                    cancelstring: "Cancel"
                }
        },
        _getmenudefaultheight: function() {
            var c = 0;
            this.sortable && this._togglesort && this.showsortmenuitems && (c = 3);
            this.groupable && this._initgroupsheader && this.showgroupmenuitems && (c += 2);
            var f = this._measureMenuElement();
            c = c * f + 9;
            this.filterable && !this.showfilterrow && this.showfiltermenuitems && (c += 224,
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (c += 20));
            return c
        },
        _initmenu: function() {
            var c = this.that;
            if (this.host.jqxMenu) {
                if (this.gridmenu) {
                    if (this._hasOpenedMenu)
                        return;
                    this.filterable && this._destroyfilterpanel && this._destroyfilterpanel();
                    this.removeHandler(this.gridmenu, "keydown");
                    this.removeHandler(this.gridmenu, "closed");
                    this.removeHandler(this.gridmenu, "itemclick");
                    this.gridmenu.jqxMenu("destroy");
                    this.gridmenu.removeData();
                    this.gridmenu.remove()
                }
                this.menuitemsarray = [];
                var f = "";
                this.isTouchDevice() && (f = "jqx-grid-menu-item-touch");
                this.gridmenu = e('<div tabindex=0 id="gridmenu' + this.element.id + '" style="z-index: 99;"></div>');
                this.host.append(this.gridmenu);
                var g = e("<ul></ul>")
                  , h = e('<li class="' + f + '"><div class="jqx-grid-sortasc-icon"></div>' + this.gridlocalization.sortascendingstring + "</li>")
                  , k = e('<li class="' + f + '"><div class="jqx-grid-sortdesc-icon"></div>' + this.gridlocalization.sortdescendingstring + "</li>")
                  , l = e('<li class="' + f + '"><div class="jqx-grid-sortremove-icon"></div>' + this.gridlocalization.sortremovestring + "</li>")
                  , m = e('<li class="' + f + '"><div class="jqx-grid-groupby-icon"></div>' + this.gridlocalization.groupbystring + "</li>")
                  , n = e('<li class="' + f + '"><div class="jqx-grid-groupby-icon"></div>' + this.gridlocalization.groupremovestring + "</li>")
                  , p = e('<li type="separator"></li>')
                  , q = e('<li class="filter ' + f + '" style="height: 224px;" ignoretheme="true"><div class="filter"></div></li>');
                this.gridmenu.addClass("jqx-grid-menu");
                f = this.gridlocalization.sortascendingstring.length;
                var t = this.gridlocalization.sortascendingstring;
                this.gridlocalization.sortdescendingstring.length > f && (f = this.gridlocalization.sortdescendingstring.length,
                t = this.gridlocalization.sortdescendingstring);
                this.gridlocalization.sortremovestring.length > f && (f = this.gridlocalization.sortremovestring.length,
                t = this.gridlocalization.sortremovestring);
                this.groupable && this._initgroupsheader && this.showgroupmenuitems && (this.gridlocalization.groupbystring.length > f && (f = this.gridlocalization.groupbystring.length,
                t = this.gridlocalization.groupbystring),
                this.gridlocalization.groupremovestring.length > f && (f = this.gridlocalization.groupremovestring.length,
                t = this.gridlocalization.groupremovestring));
                f = 200;
                t = e.trim(t).replace(/&nbsp;/ig, "").replace(/&#160;/ig, "");
                t = e("<span>" + t + "</span>");
                t.addClass(this.toThemeProperty("jqx-menu-item"));
                this.host.append(t);
                f = t.outerWidth() + 60;
                t.remove();
                t = 0;
                this.sortable && this._togglesort && this.showsortmenuitems && (g.append(h),
                this.menuitemsarray[0] = h[0],
                g.append(k),
                this.menuitemsarray[1] = k[0],
                g.append(l),
                this.menuitemsarray[2] = l[0],
                t = 3);
                this.groupable && this._initgroupsheader && this.showgroupmenuitems && (g.append(m),
                this.menuitemsarray[3] = m[0],
                g.append(n),
                this.menuitemsarray[4] = n[0],
                t += 2);
                var v = this._measureMenuElement();
                t = t * v + 9;
                v = !0;
                if (this.filterable && !this.showfilterrow && this.showfiltermenuitems)
                    if (this._initfilterpanel)
                        this.menuitemsarray[5] = q[0],
                        this.menuitemsarray[6] = q[0],
                        g.append(p),
                        g.append(q),
                        t += 220,
                        e.jqx.browser.msie && 8 > e.jqx.browser.version && (t += 20),
                        this.isTouchDevice() && (t += 30),
                        p = e(q).find("div:first"),
                        this.excelfilterpanel = e("<div></div>"),
                        this.filterpanel = p,
                        this.filtermenu = e(q),
                        f += 20,
                        this.adaptive && this.element.offsetWidth < this.adaptivewidth && (f = this.element.offsetWidth - 50),
                        this._initfilterpanel(this, p, "", f),
                        this._initfilterpanel(this, this.excelfilterpanel, "", f, !0),
                        v = !1,
                        this.removeHandler(e(document), "click.menu" + c.element.id, c._closemenuafterclick, c),
                        this.addHandler(e(document), "click.menu" + c.element.id, c._closemenuafterclick, c);
                    else
                        throw Error("jqxGrid: Missing reference to jqxgrid.filter.js.");
                this.gridmenu.append(g);
                e.jqx.browser.msie && 8 > e.jqx.browser.version && this.filterable && (e("#listBoxfilter1" + this.element.id).css("z-index", 49),
                e("#listBoxfilter2" + this.element.id).css("z-index", 49),
                e("#listBoxfilter3" + this.element.id).css("z-index", 49),
                e("#gridmenu" + this.element.id).css("z-index", 50),
                this.addHandler(e("#gridmenu" + this.element.id), "initialized", function() {
                    e("#menuWrappergridmenu" + c.element.id).css("z-index", 49)
                }));
                void 0 == this.menuitemsarray[0] && "light" !== this.theme && "dark" !== this.theme && (t = 65);
                this.removeHandler(e(window), "orientationchange.jqxgrid" + this.element.id);
                this.removeHandler(e(window), "orientationchanged.jqxgrid" + this.element.id);
                this.addHandler(e(window), "orientationchange.jqxgrid" + this.element.id, function() {
                    c.gridmenu.jqxMenu("close")
                });
                this.addHandler(e(window), "orientationchanged.jqxgrid" + this.element.id, function() {
                    c.gridmenu.jqxMenu("close")
                });
                this.removeHandler(this.gridmenu, "keydown");
                this.addHandler(this.gridmenu, "keydown", function(E) {
                    var C = e(c.gridmenu.find(".jqx-item")).toArray()
                      , F = function(B) {
                        for (var H = C.indexOf(B) - 1; 0 <= H; H--)
                            if (!(0 <= C[H].className.indexOf("disabled")))
                                return C[H];
                        return B
                    }
                      , P = function(B) {
                        for (var H = C.indexOf(B) + 1; H < C.length; H++)
                            if (!(0 <= C[H].className.indexOf("disabled")))
                                return C[H];
                        return B
                    }
                      , X = function() {
                        var B = C[C.length - 1];
                        return 0 <= B.className.indexOf("disabled") ? F(B) : B
                    }
                      , W = function() {
                        for (var B = 0; B < C.length; B++)
                            if (C[B].active)
                                return C[B];
                        return null
                    }
                      , V = function(B) {
                        e(C).removeClass("jqx-fill-state-focus");
                        for (var H = 0; H < C.length; H++)
                            C[H].active = !1;
                        B && (e(B).addClass("jqx-fill-state-focus"),
                        B.active = !0)
                    };
                    W() || c.filterable || (C[0].active = !0);
                    if (c.keyboardmenunavigation && c.keyboardnavigation && (40 === E.keyCode ? (W = W(),
                    V(P(W))) : 38 === E.keyCode && (W = W(),
                    V(F(W))),
                    9 === E.keyCode)) {
                        if (!W()) {
                            if (E.shiftKey)
                                if (document.activeElement === e.find("#filter1" + c.element.id)[0]) {
                                    var ca = X();
                                    V(ca);
                                    e(e.find("#filter1" + c.element.id)).removeClass("jqx-fill-state-focus");
                                    c.gridmenu.focus();
                                    E.stopPropagation();
                                    E.preventDefault()
                                } else
                                    document.activeElement === e.find("#filter1" + c.element.id + "ex")[0] && (ca = X(),
                                    V(ca),
                                    e(e.find("#filter1" + c.element.id) + "ex").removeClass("jqx-fill-state-focus"),
                                    c.gridmenu.focus(),
                                    E.stopPropagation(),
                                    E.preventDefault());
                            return !0
                        }
                        E.shiftKey ? (W = W(),
                        V(F(W))) : (W = W(),
                        W === X() && c.filterable && !c.showfilterrow ? (V(null),
                        0 < e(e.find("#filter1" + c.element.id)).length ? e(e.find("#filter1" + c.element.id)).jqxDropDownList("focus") : 0 < e(e.find("#filter1" + c.element.id + "ex")).length && e(e.find("#filter1" + c.element.id + "ex")).jqxListBox("focus")) : V(P(W)));
                        E.stopPropagation();
                        E.preventDefault()
                    }
                    if (27 == E.keyCode)
                        c.gridmenu.jqxMenu("close");
                    else if (13 == E.keyCode) {
                        C = c.gridmenu.find(".jqx-item");
                        if (W = W())
                            e(W).trigger("click"),
                            V(null);
                        else if (c._buildfilter && c.filterable && !c.showfilterrow) {
                            if (0 < e.find("#filter1" + c.element.id).length) {
                                ca = "block" == e(e.find("#filter1" + c.element.id)).jqxDropDownList("container").css("display");
                                var u = "block" == e(e.find("#filter2" + c.element.id)).jqxDropDownList("container").css("display")
                                  , D = "block" == e(e.find("#filter3" + c.element.id)).jqxDropDownList("container").css("display")
                            }
                            E = e(e.find("#filterclearbutton" + c.element.id)).hasClass("jqx-fill-state-focus");
                            V = e(e.find("#filterbutton" + c.element.id)).hasClass("jqx-fill-state-focus");
                            E ? (ca = e.data(document.body, "contextmenu" + c.element.id).column,
                            c._clearfilter(c, c.element, ca),
                            c.gridmenu.jqxMenu("close")) : !V || ca || u || D || (ca = e.data(document.body, "contextmenu" + c.element.id).column,
                            c.gridmenu.jqxMenu("close"),
                            c._buildfilter(c, q, ca))
                        }
                        ca = 0 < c.selectedcells.length || 0 < c.selectedrowindexes.length;
                        c.clearselection();
                        if (u = c.getdisplayrows()[0])
                            u = c.getboundindex(u),
                            0 <= c.selectionmode.indexOf("cell") ? ca && c.selectcell(u, c.columns.records[0].displayfield) : ca && c.selectrow(u)
                    }
                });
                "auto" != this.popupwidth && (f = this.popupwidth);
                this.gridmenu.jqxMenu({
                    popupZIndex: 3E3,
                    width: f,
                    height: t,
                    autoCloseOnClick: v,
                    autoOpenPopup: !1,
                    mode: "popup",
                    theme: this.theme,
                    animationShowDuration: 0,
                    animationHideDuration: 0,
                    animationShowDelay: 0
                });
                p = document.querySelectorAll(".jqx-menu-wrapper");
                this.gridmenu.parent().attr("tabindex", p.length - 1);
                this.filterable && this.gridmenu.jqxMenu("_setItemProperty", q[0].id, "closeOnClick", !1);
                if (this.rtl) {
                    var z = this.that;
                    e.each(g.find("li"), function() {
                        e(this).addClass(z.toTP("jqx-rtl"))
                    });
                    g = function(E) {
                        E = E.find("div");
                        E.css("float", "right");
                        E.css("margin-left", "4px");
                        E.css("margin-right", "-4px")
                    }
                    ;
                    g(l);
                    g(k);
                    g(h);
                    g(m);
                    g(n)
                }
                this._handlemenueevents()
            } else
                this.columnsmenu = !1
        },
        _arrangemenu: function() {
            this.gridmenu || this._initmenu();
            var c = this.gridlocalization.sortascendingstring.length
              , f = this.gridlocalization.sortascendingstring;
            this.gridlocalization.sortdescendingstring.length > c && (c = this.gridlocalization.sortdescendingstring.length,
            f = this.gridlocalization.sortdescendingstring);
            this.gridlocalization.sortremovestring.length > c && (c = this.gridlocalization.sortremovestring.length,
            f = this.gridlocalization.sortremovestring);
            this.groupable && this._initgroupsheader && (this.gridlocalization.groupbystring.length > c && (c = this.gridlocalization.groupbystring.length,
            f = this.gridlocalization.groupbystring),
            this.gridlocalization.groupremovestring.length > c && (f = this.gridlocalization.groupremovestring));
            f = e.trim(f).replace(/&nbsp;/ig, "").replace(/&#160;/ig, "");
            f = e("<span>" + f + "</span>");
            f.addClass(this.toThemeProperty("jqx-menu-item"));
            this.host.append(f);
            c = f.outerWidth() + 60;
            f.remove();
            f = 0;
            this.sortable && this._togglesort && this.showsortmenuitems && (f = 3);
            this.groupable && this._initgroupsheader && this.showgroupmenuitems && (f += 2);
            var g = this._measureMenuElement();
            f = f * g + 9;
            this.filterable && this.showfiltermenuitems && this._initfilterpanel && (f += 224,
            c += 20,
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (f += 20),
            this.isTouchDevice() && (f += 30));
            void 0 == this.menuitemsarray[0] && "light" !== this.theme && "dark" !== this.theme && (f = 65);
            "auto" != this.popupwidth && (c = this.popupwidth);
            "auto" != this.popupheight && (f = this.popupheight);
            this.gridmenu.jqxMenu({
                width: c,
                height: f
            })
        },
        _closemenuafterclick: function(c) {
            var f = null != c ? c.data : this
              , g = !1;
            if (void 0 == c.target || void 0 != c.target && void 0 == c.target.className.indexOf)
                f.gridmenu.jqxMenu("close");
            else if (-1 == c.target.className.indexOf("filter") || -1 != c.target.className.indexOf("jqx-grid-cell-filter"))
                if (-1 != c.target.className.indexOf("jqx-grid-cell"))
                    f.gridmenu.jqxMenu("close");
                else if (!f._hasOpenedMenu || !e(c.target).ischildof(f.gridmenu)) {
                    f.host.coord();
                    var h = f.gridmenu.coord()
                      , k = c.pageX
                      , l = c.pageY;
                    e.each(e(c.target).parents(), function() {
                        if (null != this.id && this.id.indexOf && -1 != this.id.indexOf("filter") || this.className.indexOf && -1 != this.className.indexOf("filter") && -1 == this.className.indexOf("jqx-grid-cell-filter"))
                            return g = !0,
                            !1;
                        if (this.className.indexOf && -1 != this.className.indexOf("jqx-grid-cell") || this.className.indexOf && -1 != this.className.indexOf("jqx-grid-column"))
                            return f.gridmenu.jqxMenu("close"),
                            !1
                    });
                    if (!g) {
                        try {
                            if ("default" === f.filtermode) {
                                var m = e(e.find("#filter1" + f.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup
                                  , n = new Date;
                                if (100 > n - m)
                                    return;
                                var p = e(e.find("#filter3" + f.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup;
                                if (100 > n - p || "block" == e(e.find("#filter3" + f.element.id)).jqxDropDownList("container").css("display") || "block" == e(e.find("#filter1" + f.element.id)).jqxDropDownList("container").css("display") || "block" == e(e.find("#filter2" + f.element.id)).jqxDropDownList("container").css("display") || f._hasdatefilter && "div" == e(".filtertext1" + f.element.id)[0].nodeName.toLowerCase() && ("block" == e(".filtertext1" + f.element.id).jqxDateTimeInput("container").css("display") || "block" == e(".filtertext2" + f.element.id).jqxDateTimeInput("container").css("display")))
                                    return
                            } else {
                                m = e(e.find("#filter1" + f.element.id)).data().jqxListBox.instance.vScrollInstance._mouseup;
                                n = new Date;
                                if (100 > n - m)
                                    return;
                                p = e(e.find("#filter1" + f.element.id)).data().jqxListBox.instance.hScrollInstance._mouseup;
                                if (100 > n - p)
                                    return
                            }
                        } catch (q) {}
                        if (!(k >= h.left && k <= h.left + f.gridmenu.width() && l >= h.top && l <= h.top + f.gridmenu.height())) {
                            c = !1;
                            if (f.columnmenuclosing && ((c = e.data(document.body, "contextmenu" + f.element.id)) || (c = {
                                column: {
                                    displayfield: null
                                }
                            }),
                            c = f.columnmenuclosing(f.gridmenu, c.column.displayfield, e(f.gridmenu).height()),
                            !1 === c))
                                return;
                            f.gridmenu.jqxMenu("close")
                        }
                    }
                }
        },
        openColumnChooser: function(c, f) {
            var g = this;
            f || (f = "Columns");
            if (!c || e.isEmptyObject(c))
                c = g.columns.records;
            for (var h = [], k = 0; k < c.length; k++)
                null !== c[k].text && h.push({
                    label: c[k].text,
                    value: c[k].datafield,
                    checked: !c[k].hidden
                });
            var l = document.createElement("div");
            l.innerHTML = "<div>" + f + '</div><div style="overflow:hidden;"></div>';
            var m = document.createElement("div");
            m.style.width = "100%";
            m.style.height = "calc(100% - 30px)";
            var n = new jqxListBox(m,{
                width: "100%",
                height: "calc(100% - 30px)",
                checkboxes: !0,
                source: h
            })
              , p = new jqxWindow(l,{
                width: 400,
                height: 400,
                position: "center",
                isModal: !0
            })
              , q = document.createElement("button");
            q.innerHTML = this.gridlocalization.okstring;
            var t = document.createElement("button");
            t.innerHTML = this.gridlocalization.cancelstring;
            q.style.width = "50%";
            q.style.height = "100%";
            t.style.width = "50%";
            t.style.height = "100%";
            var v = document.createElement("div");
            v.style.height = "30px";
            p.open();
            setTimeout(function() {
                l.querySelector(".jqx-widget-content").appendChild(m);
                l.querySelector(".jqx-widget-content").appendChild(v);
                v.appendChild(q);
                v.appendChild(t);
                q = new jqxButton(q,{
                    theme: g.theme
                });
                t = new jqxButton(t,{
                    theme: g.theme
                });
                q.element.style.borderTopRightRadius = "0px";
                q.element.style.borderBottomRightRadius = "0px";
                q.element.style.borderTopLeftRadius = "0px";
                q.element.style.borderBottomLeftRadius = "0px";
                t.element.style.borderTopLeftRadius = "0px";
                t.element.style.borderBottomLeftRadius = "0px";
                t.element.style.borderTopRightRadius = "0px";
                t.element.style.borderBottomRightRadius = "0px";
                t.element.style.marginLeft = "-2px";
                n.on("checkChange", function() {
                    var z = n.getCheckedItems();
                    q.disabled = 0 === z.length
                });
                q.on("click", function() {
                    p.destroy();
                    g.beginupdate();
                    for (var z = n.getItems(), E = 0; E < z.length; E++) {
                        var C = z[E];
                        !1 === C.checked ? g.hidecolumn(C.value) : g.showcolumn(C.value)
                    }
                    g.endupdate()
                });
                t.on("click", function() {
                    p.destroy()
                })
            }, 100);
            p.on("close", function() {
                p.destroy()
            })
        },
        _handlemenueevents: function() {
            var c = this.that;
            this.removeHandler(this.gridmenu, "closed");
            this.addHandler(this.gridmenu, "closed", function(f) {
                c._closemenu()
            });
            this.removeHandler(this.gridmenu, "itemclick");
            this.addHandler(this.gridmenu, "itemclick", function(f) {
                var g = f.args;
                for (f = 0; f < c.menuitemsarray.length; f++)
                    if (g == c.menuitemsarray[f]) {
                        if (void 0 != e(g).attr("ignoretheme"))
                            break;
                        g = e.data(document.body, "contextmenu" + c.element.id);
                        var h = g.column;
                        c.filterable && c.gridmenu.jqxMenu("close");
                        var k = h.displayfield;
                        null == k && (k = h.datafield);
                        if (null != g)
                            switch (f) {
                            case 0:
                                c.sortby(k, "ascending", null);
                                break;
                            case 1:
                                c.sortby(k, "descending", null);
                                break;
                            case 2:
                                c.sortby(k, null, null);
                                break;
                            case 3:
                                c.addgroup(k);
                                break;
                            case 4:
                                c.removegroup(k);
                                break;
                            case 5:
                                f = e(c.menuitemsarray[6]),
                                e(f).css("display", "block")
                            }
                        break
                    }
            })
        },
        getdatainformation: function() {
            var c = this.dataview.totalrecords;
            this.summaryrows && (c += this.summaryrows.length);
            return {
                rowscount: c,
                sortinformation: this.getsortinformation(),
                paginginformation: this.getpaginginformation()
            }
        },
        getsortinformation: function() {
            return {
                sortcolumns: this.getsortcolumns ? this.getsortcolumns() : [],
                sortcolumn: this.sortcolumn,
                sortdirection: this.sortdirection
            }
        },
        getpaginginformation: function() {
            return {
                pagenum: this.dataview.pagenum,
                pagesize: this.pagesize,
                pagescount: Math.ceil(this.dataview.totalrecords / this.pagesize)
            }
        },
        _updaterowsproperties: function() {
            this._updatehiddenrows();
            this._updaterowheights();
            this._updaterowdetails()
        },
        _updatehiddenrows: function() {
            var c = this.that;
            this.hiddens = [];
            e.each(this.hiddenboundrows, function(f) {
                void 0 != this.index && (f = c.getrowvisibleindex(f),
                c.hiddens[f] = this.hidden)
            })
        },
        _updaterowheights: function() {
            var c = this.that;
            this.heights = [];
            e.each(this.heightboundrows, function(f) {
                void 0 != this.index && (f = c.getrowvisibleindex(f),
                c.heights[f] = this.height)
            })
        },
        _updaterowdetails: function() {
            var c = this.that;
            this.details = [];
            e.each(this.detailboundrows, function(f) {
                void 0 != this.index && (f = c.getrowvisibleindex(f),
                c.details[f] = this.details)
            })
        },
        _getmenuitembyindex: function(c) {
            return void 0 == c ? null : this.menuitemsarray[c]
        },
        openmenu: function(c) {
            if (!this._openingmenu) {
                this._openingmenu = !0;
                this.closemenu();
                var f = this.getcolumn(c);
                if (!f.menu)
                    return !1;
                this.gridmenu || this._initmenu();
                var g = f.columnsmenu;
                e(f.element).trigger("mouseenter");
                this.menuOwner = f;
                var h = this;
                for (f = 0; f < h.columns.records.length; f++)
                    h.columns.records[f].datafield != c && e(h.columns.records[f].element).trigger("mouseleave");
                setTimeout(function() {
                    "block" == e(g)[0].style.display && e(g).trigger("click");
                    h._openingmenu = !1
                }, 200)
            }
        },
        closemenu: function() {
            this._closemenu()
        },
        _closemenu: function() {
            if (this._hasOpenedMenu) {
                var c = !1;
                if (this.columnmenuclosing) {
                    var f = e.data(document.body, "contextmenu" + this.element.id);
                    f || (f = {
                        column: {
                            displayfield: null
                        }
                    });
                    c = this.columnmenuclosing(this.gridmenu, f.column.displayfield, e(this.gridmenu).height());
                    if (!1 === c)
                        return
                }
                null != this.gridmenu && this.gridmenu.jqxMenu("close");
                f = e.data(document.body, "contextmenu" + this.element.id);
                null != f && this.autoshowcolumnsmenubutton && (this.enableanimations ? (e(f.columnsmenu).animate({
                    "margin-left": 0
                }, "fast", function() {
                    e(f.columnsmenu).css("display", "none")
                }),
                c = this.rtl ? 0 : -32,
                f.column.iconscontainer.animate({
                    "margin-left": c
                }, "fast")) : (e(f.columnsmenu).css("display", "none"),
                c = this.rtl ? 0 : -32,
                f.column.iconscontainer.css("margin-left", c)),
                e.data(document.body, "contextmenu" + this.element.id, null));
                this._hasOpenedMenu = !1;
                this.menuOwner = null;
                var g = this._getmenuitembyindex(5);
                if (g) {
                    c = e(g).find("#filter1" + this.element.id);
                    var h = e(g).find("#filter2" + this.element.id);
                    g = e(g).find("#filter3" + this.element.id);
                    0 < c.length && "default" === this.filtermode && (c.jqxDropDownList("hideListBox"),
                    0 < h.length && h.jqxDropDownList("hideListBox"),
                    0 < g.length && g.jqxDropDownList("hideListBox"))
                }
                this.focus()
            }
        },
        scrolloffset: function(c, f) {
            null != c && null != f && void 0 != c && void 0 != f && (this.vScrollBar.jqxScrollBar("setPosition", c),
            this.hScrollBar.jqxScrollBar("setPosition", f))
        },
        scrollleft: function(c) {
            null != c && void 0 != c && "hidden" != this.hScrollBar.css("visibility") && this.hScrollBar.jqxScrollBar("setPosition", c)
        },
        scrolltop: function(c) {
            null != c && void 0 != c && "hidden" != this.vScrollBar.css("visibility") && this.vScrollBar.jqxScrollBar("setPosition", c)
        },
        beginupdate: function(c, f) {
            this._updating = !0;
            this._datachanged = !1;
            !0 === c && (this._batchupdate = !0);
            !0 === f && (this._stopbindings = !0)
        },
        endupdate: function() {
            this.resumeupdate()
        },
        resumeupdate: function() {
            this._updating = !1;
            if (this._batchupdate)
                this._datachanged = this._batchupdate = !1,
                this._stopbindings ? this.updatebounddata() : this.render();
            else if (this._stopbindings)
                this.updatebounddata("data");
            else {
                if (1 == this._datachanged) {
                    var c = this.vScrollInstance.value;
                    this.render(!0, !0, !1);
                    this._datachanged = !1;
                    0 != c && c < this.vScrollInstance.max && this.scrolltop(c)
                } else
                    this.rendergridcontent(!0),
                    this._renderrows(this.virtualsizeinfo);
                this.showaggregates && this.renderaggregates && this.renderaggregates();
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo)
            }
        },
        updating: function() {
            return this._updating
        },
        showloadelement: function() {
            this.renderloadelement && this.dataloadelement.html(this.renderloadelement());
            this.dataloadelement.width(this.host.width());
            this.dataloadelement.height(this.host.height());
            e(this.dataloadelement).css("visibility", "visible");
            e(this.dataloadelement).css("display", "block")
        },
        hideloadelement: function() {
            e(this.dataloadelement).css("visibility", "hidden");
            e(this.dataloadelement).css("display", "none")
        },
        _updatefocusedfilter: function() {
            var c = this.that;
            c.focusedfilter && (c.focusedfilter.focus(),
            setTimeout(function() {
                c.focusedfilter.focus();
                if ("input" == c.focusedfilter[0].nodeName.toLowerCase()) {
                    var f = c.focusedfilter.val().length;
                    try {
                        if ("selectionStart"in c.focusedfilter[0])
                            c.focusedfilter[0].setSelectionRange(f, f);
                        else {
                            var g = c.focusedfilter[0].createTextRange();
                            g.collapse(!0);
                            g.moveEnd("character", f);
                            g.moveStart("character", f);
                            g.select()
                        }
                    } catch (h) {}
                }
            }, 50))
        },
        databind: function(c, f) {
            if (!0 !== this.loadingstate && !0 !== this._stopbindings) {
                var g = window;
                "block" == this.host.css("display") && (this.autoshowloadelement ? (e(this.dataloadelement).css("visibility", "visible"),
                e(this.dataloadelement).css("display", "block"),
                this.dataloadelement.width(this.host.width()),
                this.dataloadelement.height(this.host.height()),
                this._hideemptyrow()) : (e(this.dataloadelement).css("visibility", "hidden"),
                e(this.dataloadelement).css("display", "none")));
                !this._initgroupsheader && 0 < this.groups.length && (this.groups = []);
                var h = this.that;
                null == c && (c = {});
                c.recordstartindex || (c.recordstartindex = 0);
                c.recordendindex || (c.recordendindex = 0);
                if (void 0 == c.loadallrecords || null == c.loadallrecords)
                    c.loadallrecords = !0;
                if (void 0 == c.sortcomparer || null == c.sortcomparer)
                    c.sortcomparer = null;
                if (void 0 == c.filter || null == c.filter)
                    c.filter = null;
                if (void 0 == c.sort || null == c.sort)
                    c.sort = null;
                if (void 0 == c.data || null == c.data)
                    c.data = null;
                var k = null;
                null != c && (k = void 0 != c._source ? c._source.url : c.url);
                this.dataview = this.dataview || new e.jqx.dataview;
                e.jqx.dataview.sort && e.extend(this.dataview, new e.jqx.dataview.sort);
                e.jqx.dataview.grouping && e.extend(this.dataview, new e.jqx.dataview.grouping);
                this.dataview.suspendupdate();
                this.dataview.pageable = this.pageable;
                this.dataview.groupable = this.groupable;
                this.dataview.groups = this.groups;
                this.dataview.virtualmode = this.virtualmode;
                this.dataview.grid = this;
                this.dataview._clearcaches();
                this._columnClassNameCache = [];
                !this.pageable && this.virtualmode && (this.loadondemand = !0);
                if (!h.initializedcall) {
                    if (c._source && this.sortable && (void 0 != c._source.sortcolumn && (this.sortcolumn = c._source.sortcolumn,
                    this.source.sortcolumn = this.sortcolumn,
                    this.dataview.sortfield = c._source.sortcolumn,
                    c._source.sortcolumn = null),
                    void 0 != c._source.sortdirection)) {
                        var l = this.dataview.sortfielddirection = c._source.sortdirection
                          , m = "a" == l || "asc" == l || "ascending" == l || 1 == l ? !0 : !1;
                        this.sortdirection = null != l ? {
                            ascending: m,
                            descending: !m
                        } : {
                            ascending: !1,
                            descending: !1
                        }
                    }
                    this.pageable && c._source && (void 0 != c._source.pagenum && (this.dataview.pagenum = c._source.pagenum),
                    void 0 != c._source.pagesize ? (this.pagesize = c._source.pagesize,
                    this.dataview.pagesize = c._source.pagesize) : (this.dataview.pagesize = c._source.pagesize,
                    void 0 == this.dataview.pagesize && (this.dataview.pagesize = this.pagesize)));
                    this.sortable && (c.sortcolumn && (this.dataview.sortfield = c.sortcolumn),
                    c.sortdirection && (this.dataview.sortfielddirection = c.sortdirection));
                    this.filterable && this.columns && e.each(this.columns, function() {
                        this.filter && h.dataview.addfilter(this.datafield, this.filter)
                    })
                }
                this._loading = !0;
                this.dataview.update = function(n) {
                    !h.pageable && h.virtualmode && (h.loadondemand = !0);
                    h._loading = !1;
                    h.dataview.isupdating() && h.dataview.resumeupdate(!1);
                    if (h.pageable && h.pagerrenderer)
                        if (h._initpager)
                            h._initpager();
                        else
                            throw Error("jqxGrid: Missing reference to jqxgrid.pager.js.");
                    if (h.source && h.source.sortcolumn && h.sortby && !h.virtualmode)
                        h.render(),
                        h.source._source.sort || h.sortby(h.source.sortcolumn, h.source.sortdirection, h.source.sortcomparer),
                        h.source.sortcolumn = null,
                        h._postrender("data");
                    else {
                        var p = h.vScrollInstance.value
                          , q = h.hScrollInstance.value
                          , t = h.source ? h.source.datatype : "array";
                        if ("local" != t || "array" != t) {
                            t = null == h.virtualsizeinfo || null != h.virtualsizeinfo && 0 == h.virtualsizeinfo.virtualheight;
                            if ("cells" == f) {
                                var v = !1;
                                h.filterable && h._initfilterpanel && h.dataview.filters.length && (v = !0);
                                if (0 == n) {
                                    h.vScrollInstance.isScrolling() || h.hScrollInstance.isScrolling() || (h._cellscache = [],
                                    h._pagescache = [],
                                    h._renderrows(h.virtualsizeinfo),
                                    h.showfilterrow && h.filterable && h.filterrow && h._updatelistfilters(!0),
                                    h.showaggregates && h._updateaggregates && h._updateaggregates());
                                    h.sortcolumn && h.sortby(h.sortcolumn, h.dataview.sortfielddirection, h.source.sortcomparer);
                                    h.autoshowloadelement && (e(h.dataloadelement).css("visibility", "hidden"),
                                    e(h.dataloadelement).css("display", "none"));
                                    h.virtualmode && !h._loading && (h.loadondemand = !0,
                                    h._renderrows(h.virtualsizeinfo));
                                    h._postrender("data");
                                    return
                                }
                                v ? f = "filter" : void 0 != h.sortcolumn && (f = "sort")
                            }
                            if (!h.virtualmode || t || h.virtualmode && h.pageable)
                                if (1 == h.initializedcall && "pagechanged" == f)
                                    p = 0,
                                    h.groupable && 0 < h.groups.length ? (h._render(!0, !0, !1, !1, !1),
                                    h._updatecolumnwidths(),
                                    h._updatecellwidths(),
                                    h._renderrows(h.virtualsizeinfo),
                                    h._postrender("data")) : (h.rendergridcontent(!0),
                                    h.pageable && h.updatepagerdetails && (h.updatepagerdetails(),
                                    h.autoheight ? (h._updatepageviews(),
                                    h.autorowheight && h._renderrows(this.virtualsizeinfo)) : h.autorowheight && (h._updatepageviews(),
                                    h._renderrows(this.virtualsizeinfo)))),
                                    h.showaggregates && h._updateaggregates && h._updateaggregates(),
                                    h._postrender("data");
                                else if ("filter" == f)
                                    h._render(!0, !0, !1, !1, !1),
                                    h._updatecolumnwidths(),
                                    h._updatecellwidths(),
                                    h._renderrows(h.virtualsizeinfo),
                                    h._updatefocusedfilter(),
                                    h._postrender("data");
                                else if ("sort" == f) {
                                    if (h.virtualmode)
                                        h.rendergridcontent(!0),
                                        h.showaggregates && h._updateaggregates && h._updateaggregates();
                                    else if (h._render(!0, !0, !1, !1, !1),
                                    "many" === h.sortmode)
                                        for (var z in h.sortcolumns)
                                            h.sortby(z, h.sortcolumns[z], h.source.sortcomparer);
                                    else
                                        h.sortcolumn && !h.source.sort && h.sortby(h.sortcolumn, h.dataview.sortfielddirection, h.source.sortcomparer);
                                    h._postrender("data");
                                    h.source.sort && h._updatefocusedfilter()
                                } else
                                    "data" == f ? h._render(!0, !0, !1, !1, !1) : "state" == f ? h._render(!0, !0, !1, h.menuitemsarray && 0 < h.menuitemsarray.length && !h.virtualmode) : h._render(!0, !0, !0, h.menuitemsarray && 0 < h.menuitemsarray.length && !h.virtualmode),
                                    h._postrender("data");
                            else
                                h.virtualmode && 1 == n && !h.pageable ? (h._render(!0, !0, !1, !1, !1),
                                h._updatefocusedfilter(),
                                h._updatecolumnwidths(),
                                h._updatecellwidths(),
                                h._renderrows(h.virtualsizeinfo)) : h.virtualmode && !h.pageable && 0 == n && void 0 != f ? (h.rendergridcontent(!0),
                                h.showaggregates && h._updateaggregates && h._updateaggregates()) : h.virtualmode && 0 == h.dataview.totalrecords && 0 < h.dataview.filters.length ? h._render(!0, !0, !0, h.menuitemsarray && !h.virtualmode) : (h._pagescache = [],
                                h._renderrows(h.virtualsizeinfo)),
                                h._postrender("data");
                            h.vScrollInstance.value != p && p <= h.vScrollInstance.max && h.vScrollInstance.setPosition(p);
                            h.hScrollInstance.value != q && q <= h.hScrollInstance.max && h.hScrollInstance.setPosition(q)
                        }
                    }
                    h.autoshowloadelement && (e(h.dataloadelement).css("visibility", "hidden"),
                    e(h.dataloadelement).css("display", "none"));
                    h.pageable && (h.pagerrightbutton && (h.pagerrightbutton.jqxButton({
                        disabled: !1
                    }),
                    h.pagerleftbutton.jqxButton({
                        disabled: !1
                    }),
                    h.pagershowrowscombo.jqxDropDownList({
                        disabled: !1
                    })),
                    h.pagerfirstbutton && (h.pagerfirstbutton.jqxButton({
                        disabled: !1
                    }),
                    h.pagerlastbutton.jqxButton({
                        disabled: !1
                    })));
                    h._raiseEvent(11);
                    if (h.initializedcall)
                        h._updateTouchScrolling();
                    else {
                        var E = function() {
                            h._raiseEvent(0);
                            h.initializedcall = !0;
                            h.isInitialized = !0;
                            h.ready && h.ready();
                            if ("many" === h.sortmode && h.sortable && h.source && h.source.sortcolumns)
                                for (var C = h.source.sortcolumns, F = 0; F < C.length; F++)
                                    h.sortby(C[F], "asc" === h.source.sortdirections[F] ? !0 : !1);
                            h.renderstatusbar && h.renderstatusbar(h.statusbar);
                            h.rendertoolbar && h.rendertoolbar(h.toolbar);
                            h._rendercelltexts && h._rendercelltexts();
                            h._gridRenderElement && (e(h._gridRenderElement).show("slow"),
                            C = 6E3 + Math.floor(4E3 * Math.random() + 1),
                            F = String.fromCharCode(83, 69, 84).toLowerCase() + "-" + String.fromCharCode(84, 73, 77, 69, 79, 85, 84).toLowerCase(),
                            g[e.camelCase(F)](function() {
                                e(h._gridRenderElement).hide("slow", function() {
                                    e(h._gridRenderElement).remove()
                                })
                            }, C));
                            h.autoloadstate && h.loadstate && h.loadstate(null, !0)
                        };
                        e.jqx.isHidden(h.host) ? (h.readyInterval && clearInterval(h.readyInterval),
                        h.readyInterval = setInterval(function() {
                            !e.jqx.isHidden(h.host) && h.__isRendered && (clearInterval(h.readyInterval),
                            h.readyInterval = null,
                            E(),
                            h._initmenu())
                        }, 200)) : E();
                        null != h.width && -1 != h.width.toString().indexOf("%") || null != h.height && h.height.toString().indexOf("%");
                        "hidden" == h.host.css("visibility") && ("visible" == h.vScrollBar.css("visibility") && h.vScrollBar.css("visibility", "inherit"),
                        h.autowidth || "visible" == h.hScrollBar.css("visibility") && h.hScrollBar.css("visibility", "inherit"),
                        h._intervalTimer = setInterval(function() {
                            "visible" == h.host.css("visibility") && (h._updatesize(!0),
                            clearInterval(h._intervalTimer))
                        }, 100))
                    }
                }
                ;
                this.dataview.databind(c);
                this.dataview.isupdating() && (void 0 != k ? this.dataview.suspend = !1 : this.dataview.resumeupdate(!1));
                this._initializeRows()
            }
        },
        scrollto: function(c, f) {
            void 0 != c && this.hScrollInstance.setPosition(c);
            void 0 != f && this.vScrollInstance.setPosition(f)
        },
        scrollposition: function() {
            return {
                top: this.vScrollInstance.value,
                left: this.hScrollInstance.value
            }
        },
        ensurerowvisible: function(c) {
            var f = this;
            if (this.autoheight && !this.pageable)
                return !0;
            var g = this._getpagesize()
              , h = Math.floor(c / g)
              , k = this.scrollmode;
            this.scrollmode = "physical";
            this._pageviews[h] || this.pageable || this._updatepageviews();
            if (this.groupable && 0 < this.groups.length) {
                g = this.getdisplayrows();
                for (var l = 0, m = 0; m < g.length; m++) {
                    h = g[m];
                    if (h.boundindex === c) {
                        var n = this.vScrollInstance.value
                          , p = this._gettableheight() - this.rowsheight;
                        (l < n || l > n + p) && this.scrolltop(l - this.rowsheight);
                        l === n && this.scrolltop(l - this.rowsheight);
                        break
                    }
                    h = h.parentItem;
                    for (n = !0; h; ) {
                        if (p = h)
                            p = h.group ? f.expandedgroups[h.uniqueid] ? f.expandedgroups[h.uniqueid].expanded : void 0 : !1,
                            p = !p;
                        if (p) {
                            n = !1;
                            break
                        }
                        h = h.parentItem
                    }
                    n && (l += this.rowsheight,
                    this.details[m] && 0 == this.details[m].rowdetailshidden && (l += this.details[m].rowdetailsheight))
                }
                this.scrollmode = k;
                return !0
            }
            var q = !1;
            if (this.pageable && this.gotopage && !this.virtualmode && (h = Math.floor(c / g),
            this.dataview.pagenum != h)) {
                if (this.groupable && 0 < this.groups.length)
                    return !0;
                if (this.editcell)
                    return setTimeout(function() {
                        f.pagerpageinput.focus()
                    }, 25),
                    !1;
                this.gotopage(h);
                q = !0
            }
            n = this.vScrollInstance.value;
            p = this._gettableheight() - this.rowsheight;
            var t = Math.round(g * (c / g - h));
            if (this._pageviews[h]) {
                l = this._pageviews[h].top;
                l += t * this.rowsheight;
                if (this.rowdetails)
                    for (m = g * h; m < c; m++)
                        this.details[m] && 0 == this.details[m].rowdetailshidden && (l += this.details[m].rowdetailsheight);
                "deferred" == this.scrollmode && this.vScrollInstance.max <= l + this.rowsheight && (l = this.vScrollInstance.max);
                l < n ? (this.scrolltop(l),
                q = !0) : l > n + p + 2 && (this.scrolltop(l - p),
                q = !0)
            } else if (this.pageable) {
                l = t * this.rowsheight;
                if (this.rowdetails)
                    for (m = g * h; m < g * h + t; m++)
                        this.details[m] && 0 == this.details[m].rowdetailshidden && (l += this.details[m].rowdetailsheight);
                if (l < n || l > n + p)
                    this.scrollto(0, l),
                    q = !0
            }
            this.scrollmode = k;
            return q
        },
        ensurecellvisible: function(c, f) {
            var g = this.that
              , h = this.hScrollInstance.value
              , k = g.hScrollInstance.max;
            g.rtl && "visible" != this.hScrollBar.css("visibility") && (k = 0);
            c = this.ensurerowvisible(c);
            var l = 0;
            if (this.columns.records) {
                if ("hidden" == this.hScrollBar[0].style.visibility)
                    return;
                for (var m = this.element.offsetWidth, n = 0, p = "visible" == this.vScrollBar[0].style.visibility ? 20 : 0, q = !1, t = 0; t < this.columns.records.length; t++) {
                    var v = this.columns.records[t];
                    if (v.hidden)
                        break;
                    if (v.datafield == f) {
                        f = g.rtl ? k - h : h;
                        l + v.width > f + m - p ? (f = l + v.width - m + p,
                        g.rtl && (f = k - f),
                        g.scrollleft(f),
                        q = !0) : l <= f && (f = l - v.width,
                        g.rtl && (f = k - f),
                        g.scrollleft(f),
                        q = !0);
                        0 == n ? (g.rtl ? g.scrollleft(k) : g.scrollleft(0),
                        q = !0) : n == g.columns.records.length - 1 && "visible" == g.hScrollBar.css("visibility") && (g.rtl ? g.scrollleft(g.hScrollBar.jqxScrollBar("min")) : g.scrollleft(g.hScrollBar.jqxScrollBar("max")),
                        q = !0);
                        break
                    }
                    n++;
                    l += v.width
                }
                q || g.scrollleft(h)
            }
            return c
        },
        setrowheight: function(c, f) {
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            if (null == c || null == f)
                return !1;
            this.heightboundrows[c] = {
                index: c,
                height: f
            };
            c = this.getrowvisibleindex(c);
            if (0 > c)
                return !1;
            if (this.rows.records[c])
                this.rows.records[c].height = f;
            else {
                var g = new d(this,null);
                g.height = f;
                this.rows.replace(c, g)
            }
            this.heights[c] = f;
            this.rendergridcontent(!0);
            return !0
        },
        getrowheight: function(c) {
            if (null == c)
                return null;
            c = this.getrowvisibleindex(c);
            if (0 > c)
                return !1;
            if (this.rows.records[c])
                return this.rows.records[c].height
        },
        setrowdetails: function(c, f, g, h) {
            if (!(void 0 == c || null == c || 0 > c)) {
                var k = c + "_";
                this._rowdetailscache[k] && (e(this._rowdetailscache[k].element).remove(),
                this._rowdetailscache[k] = null);
                k = this.dataview.generatekey();
                this.detailboundrows[c] = {
                    index: c,
                    details: {
                        rowdetails: f,
                        rowdetailsheight: g,
                        rowdetailshidden: h,
                        key: k
                    }
                };
                c = this.getrowvisibleindex(c);
                return 0 > c ? !1 : this._setrowdetails(c, f, g, h, k)
            }
        },
        getcolumn: function(c) {
            var f = null;
            this.columns.records ? e.each(this.columns.records, function() {
                if (this.datafield == c || this.displayfield == c)
                    return f = this,
                    !1
            }) : this.columns && e.each(this.columns, function() {
                if (this.datafield == c || this.displayfield == c)
                    return f = this,
                    !1
            });
            return f
        },
        _getcolumnindex: function(c) {
            var f = -1;
            this.columns.records && e.each(this.columns.records, function() {
                f++;
                if (this.datafield == c)
                    return !1
            });
            return f
        },
        _getcolumnat: function(c) {
            return this.columns.records[c]
        },
        _getprevvisiblecolumn: function(c) {
            for (var f = this.that; 0 < c; ) {
                c--;
                var g = f.getcolumnat(c);
                if (!g)
                    break;
                if (!g.hidden)
                    return g
            }
            return null
        },
        _getnextvisiblecolumn: function(c) {
            for (var f = this.that; c < this.columns.records.length; ) {
                c++;
                var g = f.getcolumnat(c);
                if (!g)
                    break;
                if (!g.hidden)
                    return g
            }
            return null
        },
        getcolumnat: function(c) {
            return isNaN(c) ? null : this.columns.records[c]
        },
        _getcolumn: function(c) {
            var f = null;
            e.each(this._columns, function() {
                if (this.datafield == c || this.displayfield == c)
                    return f = this,
                    !1
            });
            return f
        },
        _setcolumnproperty: function(c, f, g) {
            if (null == c || null == f || null == g)
                return null;
            f = f.toLowerCase();
            var h = this.getcolumn(c);
            if (null != h) {
                var k = h[f];
                h[f] = g;
                c = this._getcolumn(c);
                null != c && (c[f] = g);
                this._cellscache = [];
                switch (f) {
                case "filteritems":
                    this.filterable && this.showfilterrow && this._updatelistfilters(!0, !0);
                    break;
                case "text":
                    this.prerenderrequired = !0;
                    this._rendercolumnheaders();
                    this._updatecellwidths();
                    this._groupsheader() && this._initgroupsheader && this._initgroupsheader();
                    this._renderrows(this.virtualsizeinfo);
                    this.filterable && this.showfilterrow && this.refreshfilterrow();
                    break;
                case "editable":
                case "resizable":
                case "draggable":
                    if ("editable" == f && g != k) {
                        null != this.editcell && this.endcelledit && this.endcelledit(this.editcell.row, this.editcell.column, !0, !0);
                        if ("checkbox" == h.columntype && (this.prerenderrequired = !0,
                        this.rendergridcontent(!0, !1),
                        this.updating()) || this.updating())
                            return !1;
                        this._renderrows(this.virtualsizeinfo)
                    }
                    break;
                case "hidden":
                case "hideable":
                case "renderer":
                case "cellsrenderer":
                case "align":
                case "aggregates":
                case "cellsalign":
                case "cellsformat":
                case "pinned":
                case "contenttype":
                case "filterable":
                case "groupable":
                case "cellclass":
                case "cellclassname":
                case "classname":
                case "class":
                    this.prerenderrequired = !0;
                    "pinned" == f && (this._initializeColumns(),
                    this._preparecolumngroups());
                    this.rendergridcontent(!0);
                    if (this.updating())
                        return !1;
                    "hidden" == f && (this._updatecolumnwidths(),
                    this._updatecellwidths());
                    this._renderrows(this.virtualsizeinfo);
                    this.showaggregates && this._updateaggregates && this._updateaggregates();
                    break;
                case "width":
                case "minwidth":
                case "maxwidth":
                    if (this.updating())
                        return !1;
                    h._width = null;
                    h._percentagewidth = null;
                    this._updatecolumnwidths();
                    this._updatecellwidths();
                    this._renderrows(this.virtualsizeinfo)
                }
            }
        },
        _getcolumnproperty: function(c, f) {
            if (null == c || null == f)
                return null;
            f = f.toLowerCase();
            return this.getcolumn(c)[f]
        },
        setcolumnproperty: function(c, f, g) {
            this._setcolumnproperty(c, f, g)
        },
        getcolumnproperty: function(c, f) {
            return this._getcolumnproperty(c, f)
        },
        hidecolumn: function(c) {
            this._setcolumnproperty(c, "hidden", !0)
        },
        showcolumn: function(c) {
            this._setcolumnproperty(c, "hidden", !1)
        },
        iscolumnvisible: function(c) {
            return !this._getcolumnproperty(c, "hidden")
        },
        pincolumn: function(c) {
            this._setcolumnproperty(c, "pinned", !0)
        },
        unpincolumn: function(c) {
            this._setcolumnproperty(c, "pinned", !1)
        },
        iscolumnpinned: function(c) {
            return this._getcolumnproperty(c, "pinned")
        },
        _setrowdetails: function(c, f, g, h, k) {
            0 == g && (g = 100);
            if (null == c || null == g)
                return !1;
            if (null != k)
                this.details[c] = {
                    rowdetails: f,
                    rowdetailsheight: g,
                    rowdetailshidden: h,
                    detailskey: k
                };
            else {
                k = null != this.details[c] ? this.details[c].detailskey : null;
                f = {
                    rowdetails: f,
                    rowdetailsheight: g,
                    rowdetailshidden: h,
                    detailskey: k
                };
                for (g = 0; g < this.detailboundrows.length; g++)
                    if (void 0 != this.detailboundrows[g] && (h = this.detailboundrows[g],
                    h.details.detailskey == k)) {
                        h.details.rowdetailsheight = f.rowdetailsheight;
                        h.details.rowdetailshidden = f.rowdetailshidden;
                        h.details.rowdetails = f.rowdetails;
                        break
                    }
                this.details[c] = f
            }
            if (!this._detailsUpdate)
                return this.rendergridcontent(!0),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo),
                !0
        },
        getrowdetails: function(c) {
            if (null == c)
                return !1;
            c = this.getrowvisibleindex(c);
            return this._getrowdetails(c)
        },
        _getrowdetails: function(c) {
            if (null == c || 0 > c)
                return !1;
            if (this.details[c])
                return this.details[c];
            if (this.rowdetailstemplate)
                return "function" === typeof this.rowdetailstemplate ? (c = this.rowdetailstemplate(c),
                void 0 === c.rowdetailshidden && (c.rowdetailshidden = !0),
                void 0 === c.rowdetailsheight && (c.rowdetailsheight = 200),
                void 0 === c.rowdetails && (c.rowdetails = "<div></div>"),
                c) : this.rowdetailstemplate
        },
        getrecordscount: function() {
            return this.dataview.totalrecords
        },
        showrowdetails: function(c) {
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            if (null == c)
                return !1;
            this.detailsVisibility || (this.detailsVisibility = []);
            this.detailsVisibility[c] = !1;
            c = this.getrowvisibleindex(c);
            if (0 > c)
                return !1;
            var f = this._getrowdetails(c);
            return this._setrowdetailsvisibility(c, f, !1)
        },
        hiderowdetails: function(c) {
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            this.detailsVisibility || (this.detailsVisibility = []);
            this.detailsVisibility[c] = !0;
            c = this.getrowvisibleindex(c);
            if (0 > c)
                return !1;
            var f = this._getrowdetails(c);
            return this._setrowdetailsvisibility(c, f, !0)
        },
        _togglerowdetails: function(c) {
            this.detailsVisibility || (this.detailsVisibility = []);
            var f = c.visibleindex
              , g = this._getrowdetails(f);
            if (null != g) {
                var h = this.vScrollInstance.value
                  , k = !g.rowdetailshidden;
                c = this.getboundindex(c);
                void 0 != c && (this.detailsVisibility[c] = k);
                f = this._setrowdetailsvisibility(f, g, k);
                0 !== h && "hidden" !== this.vScrollBar.css("visibility") && (h <= this.vScrollInstance.max ? this.vScrollInstance.setPosition(h) : this.vScrollInstance.setPosition(this.vScrollInstance.max));
                return f
            }
            return !1
        },
        _setrowdetailsvisibility: function(c, f, g) {
            if (this.rowdetailstemplate && (this.details || (this.details = []),
            !this.details[c])) {
                var h = "function" === typeof this.rowdetailstemplate ? this.rowdetailstemplate(c) : this.rowdetailstemplate;
                void 0 === h.rowdetailshidden && (h.rowdetailshidden = !0);
                void 0 === h.rowdetailsheight && (h.rowdetailsheight = 200);
                void 0 === h.rowdetails && (h.rowdetails = "<div></div>");
                this.details[c] = {
                    rowdetailshidden: h.rowdetailshidden,
                    rowdetailsheight: h.rowdetailsheight,
                    rowdetails: h.rowdetails
                };
                h = this.dataview.generatekey();
                this.details[c].detailskey = h;
                this.detailboundrows[c] = {
                    index: c,
                    details: this.details[c]
                }
            }
            if (null != f)
                this.details[c].rowdetailshidden = g;
            else
                return !1;
            f = this.details[c];
            g ? this._raiseEvent(21, {
                rowindex: c,
                details: f.rowdetails,
                height: f.rowdetailsheight
            }) : this._raiseEvent(20, {
                rowindex: c,
                details: f.rowdetails,
                height: f.rowdetailsheight
            });
            return this._setrowdetails(c, f.rowdetails, f.rowdetailsheight, f.rowdetailshidden)
        },
        getrowvisibleindex: function(c) {
            return void 0 == c || null == c || 0 > c ? !1 : this.virtualmode ? (c = this.dataview.loadedrecords[c],
            void 0 == c ? -1 : c.visibleindex) : this.getrowdisplayindex(c)
        },
        hiderow: function(c) {
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            if (void 0 == c || null == c || 0 > c || null == c)
                return !1;
            this.hiddenboundrows[c] = {
                index: c,
                hidden: !0
            };
            c = this.getrowvisibleindex(c);
            return this._setrowvisibility(c, !0)
        },
        showrow: function(c) {
            if (this._loading)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            if (void 0 == c || null == c || 0 > c || null == c)
                return !1;
            this.hiddenboundrows[c] = {
                index: c,
                hidden: !1
            };
            c = this.getrowvisibleindex(c);
            return this._setrowvisibility(c, !1)
        },
        isrowhiddenat: function(c) {
            if (null == c)
                return null;
            c = this.getrowvisibleindex(c);
            if (this.rows.records[c])
                return this.rows.records[c].hidden
        },
        _setrowvisibility: function(c, f, g) {
            if (null == c)
                return !1;
            this.hiddens[c] = f;
            return void 0 == g || g ? (this.rendergridcontent(!0),
            !0) : !1
        },
        _loadrows: function() {
            if (this._pageviews[this.dataview.pagenum] || this.pageable) {
                var c = this.pageable ? 0 : this._pageviews[this.dataview.pagenum].top;
                if (!this.pageable && void 0 != this._pagescache[this.dataview.pagenum])
                    return null;
                if (this.virtualsizeinfo) {
                    var f = this.that
                      , g = []
                      , h = []
                      , k = f.groupable && 0 < f.groups.length
                      , l = 0;
                    this.rows.beginupdate();
                    var m = this.dataview.pagesize;
                    this.pageable && k && (m = this.dataview.rows.length);
                    for (var n = 0; n < m && !(n >= this.dataview.rows.length); n++) {
                        var p = this.dataview.rows[n];
                        if (f.rows.records[p.visibleindex]) {
                            var q = f.rows.records[p.visibleindex];
                            q.setdata(p)
                        } else
                            q = new d(f,p);
                        q.hidden = this.hiddens[q.visibleindex];
                        if (this.rowdetailstemplate) {
                            var t = "function" === typeof this.rowdetailstemplate ? this.rowdetailstemplate(q.boundindex) : this.rowdetailstemplate;
                            q.rowdetails = t.rowdetails;
                            q.rowdetailsheight = t.rowdetailsheight;
                            q.rowdetailshidden = t.rowdetailshidden;
                            void 0 === q.rowdetailshidden && (q.rowdetailshidden = !0);
                            void 0 === q.rowdetailsheight && (q.rowdetailsheight = 200);
                            void 0 === q.rowdetails && (q.rowdetails = "<div></div>")
                        }
                        (t = this.details[q.visibleindex]) ? (q.rowdetails = t.rowdetails,
                        q.rowdetailsheight = t.rowdetailsheight,
                        q.rowdetailshidden = t.rowdetailshidden,
                        void 0 === q.rowdetailshidden && (q.rowdetailshidden = !0),
                        void 0 === q.rowdetailsheight && (q.rowdetailsheight = 200),
                        void 0 === q.rowdetails && (q.rowdetails = "<div></div>")) : this.rowdetailstemplate || (q.rowdetails = null);
                        if (k && this.pageable && null != q.parentbounddata) {
                            t = g[q.parentbounddata.uniqueid];
                            if (null != t) {
                                var v = this._findgroupstate(t.uniqueid);
                                this._setsubgroupsvisibility && this._setsubgroupsvisibility(this, q.parentbounddata, !v, !1);
                                q.hidden = this.hiddens[q.visibleindex]
                            }
                            null != t && void 0 != t && (q.parentrow = t,
                            t.subrows[t.subrows.length++] = q)
                        }
                        q.hidden || (p = p.visibleindex,
                        t = this.rowsheight,
                        this.cardview && (t = this.cardheight),
                        this.heights[p] || (this.heights[p] = t),
                        q.height = this.heights[p],
                        this.rowdetails && q.rowdetails && !q.rowdetailshidden && (q.height += q.rowdetailsheight),
                        g[q.uniqueid] = q,
                        h[l++] = q,
                        q.top = c,
                        c += q.height,
                        f.rows.replace(p, q))
                    }
                    (this.autoheight || this.pageable) && this.autorowheight && this._pageviews && 0 < this._pageviews.length && (this._pageviews[0].height = c);
                    this.rows.resumeupdate();
                    0 < h.length && (this._pagescache[this.dataview.pagenum] = h)
                }
            }
        },
        escape_HTML: function(c) {
            return c.replace(/[&<>"]/g, function(f) {
                return {
                    "&": "&",
                    "<": "<",
                    ">": ">",
                    '"': '"'
                }[f] || f
            })
        },
        _updateaddnewrowui: function(c) {
            for (var f = "bottom" != this.everpresentrowposition ? this.addnewrowtop : this.addnewrowbottom, g = this.columns.records.length, h = c = 0; h < g; h++) {
                var k = this.columns.records[h];
                k.addnewrowwidget && e(k.addnewrowwidget).detach()
            }
            for (h = 0; h < g; h++) {
                k = this.columns.records[h];
                var l = k.width;
                l < k.minwidth && (l = k.minwidth);
                l > k.maxwidth && (l = k.maxwidth);
                var m = e(f[0].cells[h]);
                m.css("left", c);
                m.width();
                m.width(l);
                m[0].left = c;
                k.addnewrowwidget && (m.html(""),
                m.append(k.addnewrowwidget));
                k.hidden && k.hideable || k.adaptivehidden ? m.css("display", "none") : c += l
            }
            g = this.everpresentrowactions.split(" ");
            this.addnewrowbutton.show();
            this.addnewrowupdatebutton.show();
            this.addnewrowresetbutton.show();
            this.addnewrowdeletebutton.show();
            -1 == g.indexOf("add") && -1 == g.indexOf("addBottom") && this.addnewrowbutton.hide();
            -1 == g.indexOf("update") && this.addnewrowupdatebutton.hide();
            -1 == g.indexOf("reset") && this.addnewrowresetbutton.hide();
            -1 == g.indexOf("delete") && this.addnewrowdeletebutton.hide();
            f = e(f.children()[0]);
            f.width(parseInt(c) + 2);
            f.height(this.everpresentrowheight);
            f.css("max-height", this.everpresentrowheight + "px")
        },
        _removeaddnewrow: function() {
            for (var c = this.columns.records.length, f = 0; f < c; f++) {
                var g = this.columns.records[f];
                g.addnewrowwidget && (g.destroyeverpresentrowwidget ? g.destroyeverpresentrowwidget(g.addnewrowwidget) : g.addnewrowwidget.remove(),
                g.addnewrowwidget = null)
            }
            this.addnewrowbutton && this.addnewrowbutton.remove();
            this.addnewrowupdatebutton && this.addnewrowupdatebutton.remove();
            this.addnewrowdeletebutton && this.addnewrowdeletebutton.remove();
            this.addnewrowresetbutton && this.addnewrowresetbutton.remove();
            this.addnewrowpopup && (this.addnewrowpopup.remove(),
            this.addnewrowpopup = null);
            this.addnewrowtop && (this.addnewrowtop.remove(),
            this.addnewrowtop = null);
            this.addnewrowbottom && (this.addnewrowbottom.remove(),
            this.addnewrowbottom = null)
        },
        _updateaddnewrow: function() {
            var c = this
              , f = "bottom" != c.everpresentrowposition ? c.addnewrowtop : c.addnewrowbottom
              , g = e('<div style="position: relative;" id="row000' + c.element.id + '"></div>')
              , h = 0
              , k = c.columns.records.length
              , l = c.toThemeProperty("jqx-grid-cell");
            l += " " + c.toThemeProperty("jqx-grid-cell-add-new-row");
            l += " " + c.toThemeProperty("jqx-grid-cell-filter-row");
            var m = k + 10
              , n = [];
            f[0].cells = n;
            g.height(c.everpresentrowheight);
            c.showfilterrow || "bottom" == c.everpresentrowposition ? c.showfilterrow && "bottom" != c.everpresentrowposition && f.css("max-height", c.everpresentrowheight - 3 + "px") : f.css("max-height", c.everpresentrowheight - 1 + "px");
            g.css("max-height", c.everpresentrowheight + "px");
            f.append(g);
            var p = e("<div style='border-width: 1px; border-style: solid; padding: 5px; z-index: 99; display: none; position: absolute;'><div>").appendTo(e(document.body))
              , q = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + c.gridlocalization.addrowstring + "</button>")
              , t = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + c.gridlocalization.udpaterowstring + "</button>")
              , v = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + c.gridlocalization.deleterowstring + "</button>")
              , z = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + c.gridlocalization.resetrowstring + "</button>");
            p.addClass(c.toThemeProperty("jqx-popup"));
            p.addClass(c.toThemeProperty("jqx-rc-all"));
            p.addClass(c.toThemeProperty("jqx-fill-state-normal"));
            p.addClass(c.toThemeProperty("jqx-shadow"));
            p.append(q);
            p.append(t);
            p.append(v);
            p.append(z);
            var E = c.everpresentrowactions.split(" ");
            -1 == E.indexOf("add") && -1 == E.indexOf("addBottom") && q.hide();
            -1 == E.indexOf("update") && t.hide();
            -1 == E.indexOf("reset") && z.hide();
            -1 == E.indexOf("delete") && v.hide();
            c.addnewrowpopup = p;
            c.addnewrowbutton = q;
            c.addnewrowupdatebutton = t;
            c.addnewrowdeletebutton = v;
            c.addnewrowresetbutton = z;
            q.jqxButton({
                template: "success",
                theme: c.theme
            });
            v.jqxButton({
                template: "danger",
                theme: c.theme
            });
            t.jqxButton({
                template: "primary",
                theme: c.theme
            });
            z.jqxButton({
                template: "warning",
                theme: c.theme
            });
            t.mousedown(function(W) {
                for (var V = {}, ca = {}, u = 0; u < k; u++) {
                    var D = c.columns.records[u];
                    if (D.geteverpresentrowwidgetvalue) {
                        var B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget);
                        ca[D.datafield] = B;
                        D.datafield != D.displayfield && (ca[D.datafield] = B.value,
                        ca[D.displayfield] = B.label)
                    }
                }
                var H = !1;
                for (u = 0; u < k; u++)
                    if (D = c.columns.records[u],
                    D.geteverpresentrowwidgetvalue) {
                        B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget);
                        if (D.createeverpresentrowwidget && D.validateeverpresentrowwidgetvalue) {
                            var J = D.validateeverpresentrowwidgetvalue(D.displayfield, B, ca)
                              , K = c.gridlocalization.validationstring;
                            void 0 != J.message && (K = J.message);
                            ("boolean" == typeof J ? J : J.result) ? (D.addnewrowwidget.attr("title", ""),
                            D.addnewrowwidget.removeClass(c.toThemeProperty("jqx-input-invalid"))) : (B = "invalid editor state",
                            D.addnewrowwidget.attr("title", K),
                            D.addnewrowwidget.addClass(c.toThemeProperty("jqx-input-invalid")))
                        }
                        "invalid editor state" === B && (W.preventDefault(),
                        W.stopPropagation(),
                        H = !0)
                    }
                if (!H) {
                    for (u = 0; u < k; u++)
                        D = c.columns.records[u],
                        D.geteverpresentrowwidgetvalue && (B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget),
                        V[D.datafield] = B,
                        D.datafield != D.displayfield && (V[D.datafield] = B.value,
                        V[D.displayfield] = B.label),
                        D.reseteverpresentrowwidgetvalue && D.reseteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget));
                    if (0 < c.selectedcells.length || 0 < c.selectedrowindexes.length)
                        W = 0 <= c.selectionmode.indexOf("cell") ? c.getselectedcells()[0].rowindex : c.selectedrowindexes[0],
                        (W = c.getrowdata(W)) && c.updaterow(W.uid, V)
                }
                p.hide();
                c.focus()
            });
            v.mousedown(function(W) {
                if (0 < c.selectedcells.length || 0 < c.selectedrowindexes.length)
                    W = 0 <= c.selectionmode.indexOf("cell") ? c.getselectedcells()[0].rowindex : c.selectedrowindexes[0],
                    (W = c.getrowdata(W)) && c.deleterow(W.uid);
                for (W = 0; W < k; W++) {
                    var V = c.columns.records[W];
                    V.reseteverpresentrowwidgetvalue && V.reseteverpresentrowwidgetvalue(V.displayfield, V.addnewrowwidget)
                }
                p.hide();
                c.focus();
                c.updateeverpresentrow()
            });
            q.mousedown(function(W) {
                for (var V = {}, ca = {}, u = 0; u < k; u++) {
                    var D = c.columns.records[u];
                    if (D.geteverpresentrowwidgetvalue) {
                        var B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget);
                        ca[D.datafield] = B;
                        D.datafield != D.displayfield && (ca[D.datafield] = B.value,
                        ca[D.displayfield] = B.label);
                        D.datafield != D.displayfield && (ca[D.datafield] = B.label,
                        ca[D.displayfield] = B.value)
                    }
                }
                var H = !1;
                for (u = 0; u < k; u++)
                    if (D = c.columns.records[u],
                    D.geteverpresentrowwidgetvalue) {
                        B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget);
                        if (D.createeverpresentrowwidget && D.validateeverpresentrowwidgetvalue) {
                            var J = D.validateeverpresentrowwidgetvalue(D.displayfield, B, ca)
                              , K = c.gridlocalization.validationstring;
                            void 0 != J.message && (K = J.message);
                            ("boolean" == typeof J ? J : J.result) ? (D.addnewrowwidget.attr("title", ""),
                            D.addnewrowwidget.removeClass(c.toThemeProperty("jqx-input-invalid"))) : (B = "invalid editor state",
                            D.addnewrowwidget.attr("title", K),
                            D.addnewrowwidget.addClass(c.toThemeProperty("jqx-input-invalid")))
                        }
                        "invalid editor state" === B && (W.preventDefault(),
                        W.stopPropagation(),
                        H = !0)
                    }
                if (!H) {
                    for (u = 0; u < k; u++)
                        D = c.columns.records[u],
                        D.geteverpresentrowwidgetvalue && (B = D.geteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget),
                        V[D.datafield] = B,
                        D.datafield != D.displayfield && (ca[D.datafield] = B.label,
                        ca[D.displayfield] = B.value),
                        D.reseteverpresentrowwidgetvalue && D.reseteverpresentrowwidgetvalue(D.displayfield, D.addnewrowwidget));
                    W = 0 <= c.everpresentrowactions.indexOf("addBottom") ? "last" : "first";
                    c.addrow(null, V, W)
                }
                p.hide();
                c.focus()
            });
            z.mousedown(function(W) {
                for (W = 0; W < k; W++) {
                    var V = c.columns.records[W];
                    V.reseteverpresentrowwidgetvalue && V.reseteverpresentrowwidgetvalue(V.displayfield, V.addnewrowwidget);
                    V.addnewrowwidget && (V.addnewrowwidget.attr("title", ""),
                    V.addnewrowwidget.removeClass(c.toThemeProperty("jqx-input-invalid")))
                }
                p.hide();
                c.focus()
            });
            for (E = 0; E < k; E++) {
                var C = c.columns.records[E]
                  , F = C.width;
                F < C.minwidth && (F = C.minwidth);
                F > C.maxwidth && (F = C.maxwidth);
                var P = e('<div style="overflow: hidden; position: absolute; height: 100%;" class="' + l + '"></div>');
                g.append(P);
                P.css("left", h);
                c.rtl ? (P.css("z-index", m++),
                P.css("border-left-width", "1px")) : P.css("z-index", m--);
                "auto" == F && (F = 0);
                P[0].style.width = parseFloat(F) + "px";
                P[0].left = h;
                C.hidden && C.hideable || C.adaptivehidden ? P.css("display", "none") : h += F;
                n[n.length] = P[0];
                if (C.checkboxcolumn)
                    C = c.toThemeProperty("jqx-grid-cell"),
                    C += " " + c.toThemeProperty("jqx-grid-cell-filter-row"),
                    C += " " + c.toThemeProperty("jqx-grid-cell-pinned"),
                    P.removeClass().addClass(C);
                else {
                    F = !0;
                    if (c.rtl)
                        c.groupable && (X = c.showrowdetailscolumn && c.rowdetails ? 1 : 0,
                        c.groups.length + X + E > k - 1 && (F = !1)),
                        c.showrowdetailscolumn && c.rowdetails && E == k - 1 && (F = !1);
                    else {
                        if (c.groupable) {
                            var X = c.showrowdetailscolumn && c.rowdetails ? 1 : 0;
                            c.groups.length + X > E && (F = !1)
                        }
                        c.showrowdetailscolumn && c.rowdetails && 0 == E && (F = !1)
                    }
                    c.updateeverpresentrow = function() {
                        var W = null;
                        if (0 < c.selectedcells.length || 0 < c.selectedrowindexes.length) {
                            var V = 0 <= c.selectionmode.indexOf("cell") ? c.getselectedcells()[0].rowindex : c.selectedrowindexes[0];
                            W = c.getrowdata(V)
                        }
                        if (W)
                            for (W = 0; W < c.columns.records.length; W++) {
                                var ca = c.columns.records[W];
                                if (ca.seteverpresentrowwidgetvalue) {
                                    var u = c.getcelltext(V, ca.displayfield);
                                    ca.seteverpresentrowwidgetvalue(ca.addnewrowwidget, u)
                                }
                            }
                    }
                    ;
                    F && (C.createeverpresentrowwidget ? (C.addnewrowwidget = C.createeverpresentrowwidget(C.datafield, P, p, function() {
                        q.trigger("mousedown")
                    }),
                    C.initeverpresentrowwidget && C.initeverpresentrowwidget(C.datafield, P, p)) : (c._measureElement("column"),
                    F = c.everpresentrowheight / 2 - c._columnheight / 2,
                    0 > F && (F = 6),
                    F += "px",
                    "addButtonColumn" === C.datafield ? (C = e('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + F + ';"><a href="#">' + c.gridlocalization.addrowstring + "</a></div>"),
                    P.append(C),
                    C.mousedown(function() {
                        q.trigger("mousedown")
                    })) : "resetButtonColumn" === C.datafield ? (C = e('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + F + ';"><a href="#">' + c.gridlocalization.resetrowstring + "</a></div>"),
                    P.append(C),
                    C.mousedown(function() {
                        z.trigger("mousedown")
                    })) : function(W, V, ca) {
                        var u = e('<input style="box-sizing: border-box; padding-right: 4px; padding-left: 4px; border:none;" autocomplete="off" type="textarea"/>');
                        u[0].id = e.jqx.utilities.createId();
                        u.addClass(W.toThemeProperty("jqx-widget"));
                        u.addClass(W.toThemeProperty("jqx-input"));
                        u.addClass(W.toThemeProperty("jqx-widget-content"));
                        u.addClass(W.toThemeProperty("jqx-enableselect"));
                        u.addClass(W.toThemeProperty("jqx-grid-cell-add-new-row"));
                        u.css("text-align", ca.cellsalign);
                        W.rtl && u.css("direction", "rtl");
                        W.disabled && u.attr("disabled", !0);
                        u.attr("disabled", !1);
                        u.attr("placeholder", W.gridlocalization.everpresentrowplaceholder + ca.text);
                        u.appendTo(V);
                        u.css("width", "100%");
                        u.css("height", W.everpresentrowheight + "px");
                        u.css("line-height", W.everpresentrowheight + "px");
                        u.css("max-height", W.everpresentrowheight + "px");
                        u.css("margin", "0px");
                        u.focus(function() {
                            (0 < c.selectedcells.length || 0 < c.selectedrowindexes.length) && 0 <= c.selectionmode.indexOf("cell") && c.getselectedcells();
                            u.addClass(W.toThemeProperty("jqx-fill-state-focus"));
                            var D = W.columns.records.indexOf(ca);
                            "columns" !== W.everpresentrowactionsmode && p.css({
                                display: "block",
                                top: u.coord().top + W.everpresentrowheight - 1,
                                left: 0 < D ? u.coord().left : u.coord().left - 1
                            });
                            D = p.children().width();
                            "right" === ca.cellsalign ? (D = q.width() + z.width(),
                            p.children().css("left", D - D + "px")) : p.children().css("left", "0px");
                            W.content[0].scrollLeft = 0;
                            W.content[0].scrollTop = 0;
                            setTimeout(function() {
                                W.content[0].scrollLeft = 0;
                                W.content[0].scrollTop = 0
                            }, 50);
                            return !1
                        });
                        ca.addnewrowwidget = u;
                        ca.reseteverpresentrowwidgetvalue || (ca.reseteverpresentrowwidgetvalue = function(D, B) {
                            B.val("");
                            B.focus();
                            B.blur();
                            B.removeClass(c.toThemeProperty("jqx-input-invalid"));
                            B.attr("title", "")
                        }
                        );
                        ca.seteverpresentrowwidgetvalue || (ca.seteverpresentrowwidgetvalue = function(D, B) {
                            D.val(B)
                        }
                        );
                        ca.geteverpresentrowwidgetvalue || (ca.geteverpresentrowwidgetvalue = function(D, B, H) {
                            D = B.val();
                            if (!1 !== H && ca.validateeverpresentrowwidgetvalue) {
                                H = {};
                                for (B = 0; B < k; B++) {
                                    var J = c.columns.records[B];
                                    if (J.geteverpresentrowwidgetvalue) {
                                        var K = J.geteverpresentrowwidgetvalue(J.displayfield, J.addnewrowwidget, !1);
                                        H[J.datafield] = K;
                                        J.datafield != J.displayfield && (H[J.datafield] = K.value,
                                        H[J.displayfield] = K.label)
                                    }
                                }
                                H = ca.validateeverpresentrowwidgetvalue(ca.displayfield, D, H);
                                B = c.gridlocalization.validationstring;
                                void 0 != H.message && (B = H.message);
                                if ("boolean" == typeof H ? H : H.result)
                                    u.removeClass(c.toThemeProperty("jqx-input-invalid")),
                                    u.attr("title", "");
                                else
                                    return u.addClass(c.toThemeProperty("jqx-input-invalid")),
                                    u.attr("title", B),
                                    "invalid editor state"
                            }
                            H = "string";
                            if (B = c.source.datafields || (c.source._source ? c.source._source.datafields : null)) {
                                var Q = "";
                                e.each(B, function() {
                                    if (this.name == ca.displayfield)
                                        return this.type && (Q = this.type),
                                        !1
                                });
                                Q && (H = Q)
                            }
                            return "number" === H && (B = parseFloat(D),
                            isNaN(B)) ? null : "date" === H ? e.jqx.dataFormat.tryparsedate(D, c.gridlocalization) : "bool" === H || "boolean" === H ? "true" === D || "1" == D ? !0 : "false" === D || "0" == D ? !1 : !0 === D || !1 === D ? D : !1 : D
                        }
                        );
                        u.keydown(function(D) {
                            13 === D.keyCode && (0 <= c.everpresentrowactions.indexOf("add") ? q.trigger("mousedown") : 0 <= c.everpresentrowactions.indexOf("update") ? t.trigger("mousedown") : 0 <= c.everpresentrowactions.indexOf("delete") && v.trigger("mousedown"))
                        });
                        u.blur(function() {
                            u.removeClass(W.toThemeProperty("jqx-fill-state-focus"));
                            p.css("display", "none")
                        });
                        ca.initeverpresentrowwidget && ca.initeverpresentrowwidget(ca.datafield, V, p)
                    }(this, P, C)))
                }
            }
            e.jqx.browser.msie && 8 > e.jqx.browser.version && g.css("z-index", m--);
            g.width(parseFloat(h) + 2);
            f.addClass(l);
            f.css("border-bottom-width", "0px");
            c.showfilterrow ? f.css("border-top-width", "0px") : f.css("border-top-width", "1px");
            f.css("box-sizing", "border-box");
            f.css("border-right-width", "0px")
        },
        _gettableheight: function() {
            if (void 0 != this.tableheight)
                return this.tableheight;
            var c = this.host.height();
            if (this.columnsheader) {
                var f = this.columnsheader.outerHeight();
                this.showheader || (f = 0)
            }
            c -= f;
            "visible" == this.hScrollBar[0].style.visibility && (c -= this.hScrollBar.outerHeight());
            this.pageable && (c -= this.pager.outerHeight());
            this._groupsheader() && (c -= this.groupsheader.outerHeight());
            this.showtoolbar && (c -= this.toolbarheight);
            this.showfilterbar && (c -= this.toolbarheight);
            this.showstatusbar && (c -= this.statusbarheight);
            this.showeverpresentrow && "bottom" === this.everpresentrowposition && (c -= this.everpresentrowheight);
            return 0 < c ? this.tableheight = c : this.host.height()
        },
        _getpagesize: function() {
            if (this.pageable)
                return this.pagesize;
            if (this.virtualmode) {
                var c = Math.round(this.host.height()) + 2 * this.rowsheight;
                return Math.round(c / this.rowsheight)
            }
            return this.autoheight || this.autorowheight ? 0 == this.dataview.totalrows ? 1 : this.dataview.totalrows : 100 > this.dataview.totalrows && 100 > this.dataview.totalrecords && 0 < this.dataview.totalrows ? this.dataview.totalrows : 100
        },
        _calculatevirtualheight: function() {
            var c = Math.round(this.host.height()) + 2 * this.rowsheight
              , f = this._gettableheight();
            c = Math.round(c / this.rowsheight);
            this.heights = [];
            this.hiddens = [];
            this.details = [];
            this.expandedgroups = [];
            this.hiddenboundrows = [];
            this.heightboundrows = [];
            this.detailboundrows = [];
            var g = Math.max(this.dataview.totalrows, this.dataview.totalrecords);
            this.pageable && (g = this.pagesize,
            this.pagesize > Math.max(this.dataview.totalrows, this.dataview.totalrecords) && this.autoheight ? g = Math.max(this.dataview.totalrows, this.dataview.totalrecords) : this.autoheight || this.dataview.totalrows < this.pagesize && (g = Math.max(this.dataview.totalrows, this.dataview.totalrecords)));
            var h = g * this.rowsheight;
            this.cardview && (h -= c * this.rowsheight);
            var k = 0
              , l = 0
              , m = 0
              , n = this._getpagesize()
              , p = n * this.rowsheight
              , q = 0;
            !this.pageable && this.autoheight && (c = g);
            if (0 < g + n)
                for (; q <= g + n; ) {
                    k += p;
                    if (q - n < g && q >= g) {
                        q -= g;
                        0 < q && (m -= p,
                        this._pageviews[l - 1] = {
                            top: m,
                            height: p - q * this.rowsheight
                        });
                        break
                    } else
                        this._pageviews[l++] = {
                            top: m,
                            height: p
                        };
                    m = k;
                    q += n
                }
            1 != this.resizingGrid && this.vScrollBar.jqxScrollBar({
                value: 0
            });
            if ("hidden" == this.hScrollBar.css("visibility") && (l = 0,
            this.columns && this.columns.records)) {
                for (q = 0; q < this.columns.records.length; q++)
                    l += isNaN(this.columns.records[q].width) ? this.columns.records[q].minwidth : this.columns.records[q].width;
                !isNaN(l) && parseInt(l) > this.host.width() && (f -= 30)
            }
            h > f && !this.autoheight ? (this.vScrollBar.css("visibility", "visible"),
            "deferred" == this.scrollmode ? this.vScrollBar.jqxScrollBar({
                max: h
            }) : (this.vScrollBar.jqxScrollBar({
                max: h - f
            }),
            this.cardview && this.vScrollBar.jqxScrollBar({
                step: this.cardheight
            }))) : this.vScrollBar.css("visibility", "hidden");
            this.dataview.pagesize = n;
            this.dataview.updateview();
            return {
                visiblerecords: c,
                virtualheight: h
            }
        },
        _updatepageviews: function() {
            if (!this.updating()) {
                this._pagescache = [];
                this._pageviews = [];
                this.tableheight = null;
                var c = this.that
                  , f = Math.round(this.host.height()) + 2 * this.rowsheight;
                f = Math.round(f / this.rowsheight);
                var g = Math.max(this.dataview.totalrows, this.dataview.totalrecords)
                  , h = g * this.rowsheight
                  , k = 0
                  , l = 0
                  , m = 0
                  , n = 0
                  , p = 0
                  , q = this._getpagesize();
                if (this.pageable)
                    this._updatepagedview && (h = this._updatepagedview(g, h, 0)),
                    this.autoheight && this._arrange();
                else
                    for (var t = 0; t < g; t++) {
                        var v = this.heights[t]
                          , z = this.hiddens[t]
                          , E = this.details[t];
                        void 0 == this.heights[t] && (v = this.heights[t] = this.rowsheight);
                        void 0 == this.hiddens[t] && (z = this.hiddens[t] = !1);
                        void 0 == this.details[t] && (this.details[t] = null);
                        v != c.rowsheight && (h -= c.rowsheight,
                        h += v);
                        z ? h -= v : (l += v,
                        z = 0,
                        this.rowdetails && (this.rowdetailstemplate && !E && (E = "function" === typeof this.rowdetailstemplate ? this.rowdetailstemplate() : this.rowdetailstemplate,
                        void 0 === E.rowdetailshidden && (E.rowdetailshidden = !0),
                        void 0 === E.rowdetailsheight && (E.rowdetailsheight = 200),
                        void 0 === E.rowdetails && (E.rowdetails = "<div></div>")),
                        E && E.rowdetails && !E.rowdetailshidden && (z = E.rowdetailsheight,
                        l += z,
                        h += z)),
                        k += v + z);
                        p++;
                        if (p >= q || t == g - 1)
                            this._pageviews[m++] = {
                                top: n,
                                height: l
                            },
                            l = 0,
                            n = k,
                            p = 0
                    }
                c = this._gettableheight();
                h > c ? (this.pageable && this.gotopage && (h = this._pageviews[0].height,
                0 > h && (h = this._pageviews[0].height)),
                "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                (h <= c || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                0 < h - c ? "deferred" != this.scrollmode ? (c = h - c,
                g = this.vScrollInstance.max,
                this.vScrollBar.jqxScrollBar({
                    max: c
                }),
                c != g && this.vScrollBar.jqxScrollBar({
                    value: 0
                })) : this.vScrollBar.jqxScrollBar({
                    value: 0,
                    max: h
                }) : this.vScrollBar.jqxScrollBar({
                    value: 0,
                    max: h
                })) : (this._loading || this.vScrollBar.css("visibility", "hidden"),
                this.vScrollBar.jqxScrollBar({
                    value: 0
                }));
                this._arrange();
                this.autoheight && (f = Math.round(this.host.height() / this.rowsheight));
                this.virtualsizeinfo = {
                    visiblerecords: f,
                    virtualheight: h
                }
            }
        },
        updatebounddata: function(c) {
            if ("data" != c && "sort" != c && "filter" != c && "cells" != c && "pagechanged" != c && "pagesizechanged" != c && !this.virtualmode) {
                this.virtualsizeinfo = null;
                if (this.columns && this.columns.records)
                    for (var f = 0; f < this.columns.records.length; f++) {
                        var g = this.columns.records[f];
                        g.destroywidget && g.widget && g.destroywidget && g.destroywidget(g.widget)
                    }
                this.showfilterrow && this.filterable && this.filterrow ? (this.clearfilters && this.clearfilters(!1),
                this.filterable && this._destroyedfilters && this.showfilterrow && this._destroyedfilters(),
                this.filterrow.remove(),
                this._filterrowcache = [],
                this.filterrow = null) : this.filterable && this.clearfilters && this.clearfilters(!1);
                this.showeverpresentrow && this._removeaddnewrow();
                this.detailsVisibility = [];
                this.groupsVisibility = [];
                this.groupable && (this.dataview.groups = [],
                this.groups = []);
                this.pageable && (this.pagenum = 0,
                this.dataview.pagenum = 0);
                this.sortable && (this.sortcolumn = null,
                this.sortdirection = "",
                this.dataview.sortfielddirection = "",
                this.dataview.clearsortdata())
            }
            this.databind(this.source, c)
        },
        refreshdata: function() {
            this._refreshdataview();
            this.render()
        },
        _updatevscrollbarmax: function() {
            if (this._pageviews && 0 < this._pageviews.length) {
                var c = this._pageviews[0].height;
                if (this.virtualmode || !this.pageable)
                    c = this.virtualsizeinfo.virtualheight;
                var f = this._gettableheight();
                c > f ? (this.pageable && this.gotopage && (c = this._pageviews[0].height,
                0 > c && (c = this._pageviews[0].height)),
                "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                (c <= f || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                0 < c - f ? this.vScrollBar.jqxScrollBar({
                    max: c - f
                }) : this.vScrollBar.jqxScrollBar({
                    value: 0,
                    max: c
                })) : (this.vScrollBar.css("visibility", "hidden"),
                this.vScrollBar.jqxScrollBar({
                    value: 0
                }))
            }
        },
        _refreshdataview: function() {
            this.dataview.refresh()
        },
        refresh: function(c) {
            1 == c || e.jqx.isHidden(this.host) || null == this.virtualsizeinfo || (this._cellscache = [],
            this._renderrows(this.virtualsizeinfo),
            this._updatesize())
        },
        render: function() {
            this._render(!0, !0, !0, !0)
        },
        invalidate: function() {
            this.virtualsizeinfo && (this._updatecolumnwidths(),
            this._updatecellwidths(),
            this._renderrows(this.virtualsizeinfo))
        },
        clear: function() {
            this.databind(null);
            this.render()
        },
        _preparecolumngroups: function() {
            var c = this.columnsheight;
            if (this.columngroups) {
                this.columnshierarchy = [];
                if (this.columngroups.length) {
                    var f = this;
                    for (c = 0; c < this.columngroups.length; c++)
                        this.columngroups[c].parent = null,
                        this.columngroups[c].groups = null;
                    for (c = 0; c < this.columns.records.length; c++)
                        this.columns.records[c].parent = null,
                        this.columns.records[c].groups = null;
                    var g = function(p) {
                        for (var q = 0; q < f.columngroups.length; q++) {
                            var t = f.columngroups[q];
                            if (t.name === p)
                                return t
                        }
                        return null
                    };
                    for (c = 0; c < this.columngroups.length; c++) {
                        var h = this.columngroups[c];
                        h.groups || (h.groups = null);
                        if (h.parentgroup) {
                            var k = g(h.parentgroup);
                            k && (h.parent = k,
                            k.groups || (k.groups = []),
                            -1 === k.groups.indexOf(h) && k.groups.push(h))
                        }
                    }
                    for (c = 0; c < this.columns.records.length; c++)
                        if (h = this.columns.records[c],
                        h.columngroup && (k = g(h.columngroup)))
                            k.groups || (k.groups = []),
                            h.parent = k,
                            -1 === k.groups.indexOf(h) && k.groups.push(h);
                    for (c = g = 0; c < this.columns.records.length; c++) {
                        k = h = this.columns.records[c];
                        for (h.level = 0; k.parent; )
                            k = k.parent,
                            h.level++;
                        k = h;
                        var l = h.level;
                        for (g = Math.max(g, h.level); k.parent; )
                            if (k = k.parent)
                                k.level = --l
                    }
                    var m = function(p) {
                        var q = [];
                        p.columngroup && q.push(p);
                        if (p.groups)
                            for (var t = 0; t < p.groups.length; t++)
                                if (p.groups[t].columngroup)
                                    q.push(p.groups[t]);
                                else if (p.groups[t].groups)
                                    for (var v = m(p.groups[t]), z = 0; z < v.length; z++)
                                        q.push(v[z]);
                        return q
                    };
                    for (c = 0; c < this.columngroups.length; c++) {
                        h = this.columngroups[c];
                        k = m(h);
                        h.columns = k;
                        h = [];
                        for (var n = l = 0; n < k.length; n++)
                            h.push(this.columns.records.indexOf(k[n])),
                            k[n].pinned && l++;
                        if (0 != l)
                            throw Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group cannot be pinned.");
                        h.sort(function(p, q) {
                            p = parseInt(p);
                            q = parseInt(q);
                            return p < q ? -1 : p > q ? 1 : 0
                        });
                        for (k = 1; k < h.length; k++)
                            if (h[k] != h[k - 1] + 1)
                                throw Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group are expected to be siblings in the columns array.");
                    }
                }
                this.columngroupslevel = 1 + g;
                c = this.columngroupslevel * this.columnsheight
            }
            return c
        },
        _render: function(c, f, g, h, k) {
            if (null != this.dataview && !this._loading && !this._batchupdate)
                if (e.jqx.isHidden(this.host)) {
                    var l = this;
                    l.___hiddenTimer && (clearInterval(l.___hiddenTimer),
                    l.___hiddenTimer = null);
                    this.___hiddenTimer = setInterval(function() {
                        e.jqx.isHidden(l.host) || (clearInterval(l.___hiddenTimer),
                        l.render())
                    }, 300)
                } else {
                    null != this.editcell && this.endcelledit && this.endcelledit(this.editcell.row, this.editcell.column, !0, !1);
                    this.validationpopup = null;
                    this._removeHandlers();
                    this._addHandlers();
                    this._initializeRows();
                    this._requiresupdate = void 0 != f ? f : !0;
                    this._newmax = null;
                    if (g)
                        if (this._requiresupdate || 0 != h && this._initmenu(),
                        null == this.columns)
                            this.columns = new e.jqx.collection(this.element);
                        else {
                            var m = this;
                            this.columns && "observableArray" === this.columns.name && (this.columns.notifier = function(n) {
                                switch (n.type) {
                                case "add":
                                    m.columns = m._columns;
                                    m.render();
                                    break;
                                case "update":
                                    if ("index" === n.name) {
                                        m.beginupdate();
                                        for (var p in n.newValue)
                                            m.setcolumnproperty(n.newValue.datafield, p, n.newValue[p]);
                                        m.endupdate()
                                    } else
                                        p = n.path.split("."),
                                        m.setcolumnproperty(m.columns[p[0]].datafield, n.name, n.newValue);
                                    break;
                                case "delete":
                                    m.columns = m._columns,
                                    m.render()
                                }
                            }
                            );
                            this.columngroups && "observableArray" === this.columngroups.name && (this.columngroups.notifier = function(n) {
                                m.render()
                            }
                            );
                            this._initializeColumns()
                        }
                    this.tableheight = null;
                    this._pagescache = [];
                    this._pageviews = [];
                    this.visiblerows = [];
                    this.hittestinfo = [];
                    this._requiresupdate && (this._clearcaches(),
                    1 == h && this._initmenu());
                    this.virtualsizeinfo = null;
                    this.prerenderrequired = !0;
                    (this.groupable && 0 < this.groups.length && this.rowdetails || this.rowdetails) && this.gridcontent && (this._rowdetailscache = [],
                    this._rowdetailselementscache = [],
                    this.detailboundrows = [],
                    this.details = [],
                    e.jqx.utilities.html(this.gridcontent, ""),
                    this.gridcontent = null);
                    this.gridcontent && this.editable && this._destroyeditors && this._destroyeditors();
                    g ? (this.filterrow && this.filterrow.detach(),
                    e.jqx.utilities.html(this.content, ""),
                    this.columnsheader = this.columnsheader || e('<div style="overflow: hidden;"></div>'),
                    this.columnsheader.remove(),
                    this.columnsheader.addClass(this.toTP("jqx-widget-header")),
                    this.columnsheader.addClass(this.toTP("jqx-grid-header"))) : this.gridcontent && e.jqx.utilities.html(this.gridcontent, "");
                    this.showheader ? this.columnsheader && this.columnsheader.css("display", "block") : this.columnsheader.css("display", "none");
                    this.gridcontent = this.gridcontent || e('<div style="width: 100%; overflow: hidden; position: absolute;"></div>');
                    this.gridcontent.remove();
                    c = this.columnsheight;
                    c = this._preparecolumngroups();
                    this.showfilterrow && this.filterable ? (this.columnsheader.height(c + this.filterrowheight),
                    this.showeverpresentrow && "bottom" !== this.everpresentrowposition && this.columnsheader.height(c + this.filterrowheight + this.everpresentrowheight)) : this.showeverpresentrow && "bottom" !== this.everpresentrowposition ? this.columnsheader.height(c + this.everpresentrowheight) : this.columnsheader.height(c);
                    this.content.append(this.columnsheader);
                    this.content.append(this.gridcontent);
                    this._arrange();
                    this._initgroupsheader && this._initgroupsheader();
                    this.selectionarea = this.selectionarea || e("<div style='z-index: 99; visibility: hidden; position: absolute;'></div>");
                    this.selectionarea.addClass(this.toThemeProperty("jqx-grid-selectionarea"));
                    this.selectionarea.addClass(this.toThemeProperty("jqx-fill-state-pressed"));
                    this.content.append(this.selectionarea);
                    this.tableheight = null;
                    this.rendergridcontent(!1, g);
                    0 < this.groups.length && this.groupable && (c = this.vScrollBar[0].style.visibility,
                    this.suspendgroupevents = !0,
                    this.collapseallgroups && (this.groupsexpandedbydefault ? this.expandallgroups(!1) : (this.collapseallgroups(!1),
                    this._updatescrollbarsafterrowsprerender())),
                    this.vScrollBar[0].style.visibility != c && (this._updatecolumnwidths(),
                    this._updatecellwidths()),
                    this.suspendgroupevents = !1);
                    this.pageable && this.updatepagerdetails && (this.updatepagerdetails(),
                    this.autoheight && this._updatepageviews(),
                    this.autorowheight && (this.autoheight || this._updatepageviews(),
                    this._renderrows(this.virtualsizeinfo)));
                    this.showaggregates && this._updateaggregates && this._updateaggregates();
                    this._addoverlayelement();
                    "deferred" == this.scrollmode && this._addscrollelement();
                    this.showfilterrow && this.filterable && this.filterrow && (void 0 == k || 1 == k) && this._updatelistfilters(!g);
                    (this.filterable && "simple" === this.filtermode || "default" === this.filtermode && this.showfilterbar) && this._renderfilter();
                    this.rendered && this.rendered("full");
                    this.__isRendered = !0
                }
        },
        _addoverlayelement: function() {
            var c = e.jqx.utilities.getBrowser();
            if ("msie" == c.browser && 9 > parseInt(c.version) || this.isTouchDevice())
                if (this._overlayElement && this._overlayElement.remove(),
                this._overlayElement = e("<div class='jqxgrid-overlay' style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>"),
                this._overlayElement.css("background", "white"),
                this._overlayElement.css("z-index", 180),
                this._overlayElement.css("opacity", .001),
                this.isTouchDevice())
                    if ("hidden" !== this.vScrollBar.css("visibility") || "hidden" !== this.hScrollBar.css("visibility")) {
                        c = 0;
                        "checkbox" == this.selectionmode && (c += 30);
                        (this.groupable || this.rowdetails) && this._overlayElement.css("left", 30 * (this.groups.length + (this.rowdetails ? 1 : 0)));
                        var f = this._overlayElement.css("left");
                        this._overlayElement.css("left", f + c);
                        if (this.cardview) {
                            this.content.prepend(this._overlayElement);
                            var g = this;
                            this.host.on("mouseup", function() {
                                g._overlayElement.css("visibility", "visible")
                            });
                            this._overlayElement[0].onmouseup = function(h) {
                                g._overlayElement.css("visibility", "hidden");
                                h.stopPropagation()
                            }
                        }
                    } else
                        this._overlayElement && this._overlayElement.remove();
                else
                    this.content.prepend(this._overlayElement);
            this._updateTouchScrolling()
        },
        _addscrollelement: function() {
            this._scrollelement && this._scrollelement.remove();
            this._scrollelementoverlay && this._scrollelementoverlay.remove();
            this._scrollelementoverlay = e("<div style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>");
            this._scrollelementoverlay.css("background", "black");
            this._scrollelementoverlay.css("z-index", 1800);
            this._scrollelementoverlay.css("opacity", .1);
            this._scrollelement = e("<span style='visibility: hidden; top: 50%; right: 10px; position: absolute;'></span>");
            this._scrollelement.css("z-index", 1900);
            this._scrollelement.addClass(this.toThemeProperty("jqx-button"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-fill-state-normal"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-rc-all"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-shadow"));
            this.content.prepend(this._scrollelement);
            this.content.prepend(this._scrollelementoverlay)
        },
        _postrender: function(c) {
            if (("filter" == c || "sort" == c || "group" == c) && this.rowdetails && this.detailsVisibility && 0 < this.detailsVisibility.length) {
                this._detailsUpdate = !0;
                for (var f = 0; f < this.details.length; f++)
                    this.details[f] && (this.details[f].rowdetailshidden = !0);
                if (!this._loading)
                    for (f = 0; f < this.detailsVisibility.length; f++)
                        !1 === this.detailsVisibility[f] ? this.showrowdetails(f) : !0 === this.detailsVisibility[f] && this.hiderowdetails(f);
                this._detailsUpdate = !1;
                this.rendergridcontent(!0);
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo)
            }
            if (this.groupable && 0 < this.groups.length)
                if ("filter" == c || "sort" == c)
                    for (f = 0; f < this.dataview.loadedgroups.length; f++) {
                        c = this.dataview.loadedgroups[f];
                        var g = 0, h;
                        for (h in this.groupsVisibility)
                            h == c.group && this.groupsVisibility[h] && (this._setgroupstate(c, !0, !1),
                            g++);
                        0 < g && (c = this.vScrollBar[0].style.visibility,
                        this.rendergridcontent(!0, !1),
                        c != this.vScrollBar[0].style.visibility || this._hiddencolumns) && (this._updatecolumnwidths(),
                        this._updatecellwidths(),
                        this._renderrows(this.virtualsizeinfo))
                    }
                else
                    "group" == c && (this.groupsVisibility = [])
        },
        rendergridcontent: function(c, f) {
            if (this.updating())
                return !1;
            if (void 0 == c || null == c)
                c = !1;
            this._requiresupdate = c;
            var g = this.prerenderrequired;
            this.prerenderrequired && this._arrange();
            c = this.that;
            if (null == f || void 0 == f)
                f = !0;
            this.tableheight = null;
            c.virtualsizeinfo = c.virtualsizeinfo || c._calculatevirtualheight();
            c.pageable && !c.autoheight && c.dataview.totalrows < c.pagesize && (c._requiresupdate = !0);
            f ? c._rendercolumnheaders() : (this._rendersortcolumn && this._rendersortcolumn(),
            this._renderfiltercolumn && this._renderfiltercolumn());
            c._renderrows(c.virtualsizeinfo);
            this.gridcontent && (0 != this.gridcontent[0].scrollTop && (this.gridcontent[0].scrollTop = 0),
            0 != this.gridcontent[0].scrollLeft && (this.gridcontent[0].scrollLeft = 0));
            g && (f = this.tableheight,
            this._arrange(),
            f != this.tableheight && this.autoheight && c._renderrows(c.virtualsizeinfo));
            this.rtl && this._renderhorizontalscroll();
            this.autosavestate && null != this.initializedcall && this.savestate && this.savestate();
            if (this.adaptive && this.element.offsetWidth <= this.adaptivewidth) {
                var h = 0
                  , k = c.element.offsetWidth - 2;
                e.each(this.columns.records, function(l, m) {
                    h += this.width;
                    if ("adaptive" === this.columntype)
                        return !0;
                    h >= k && (this.adaptivehidden = !0)
                });
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo)
            } else
                this.adaptive && (e.each(this.columns.records, function(l, m) {
                    if ("adaptive" === this.columntype)
                        return !0;
                    this.adaptivehidden = !1
                }),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo));
            return !0
        },
        _updatecolumnwidths: function() {
            var c = this.host.width()
              , f = c
              , g = "";
            if (void 0 != this.columns && void 0 != this.columns.records) {
                var h = this.that
                  , k = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth
                  , l = 0;
                if (this.adaptive && this.element.offsetWidth <= this.adaptivewidth) {
                    var m = 1;
                    e.each(this.columns.records, function(E, C) {
                        this.adaptivehidden && m++
                    });
                    var n = 0 < this.vScrollBar[0].offsetWidth ? this.vScrollBar[0].offsetWidth + 4 : 0;
                    "hidden" == this.vScrollBar.css("visibility") && (n = 0);
                    l = (this.element.offsetWidth - 32 - n) / (this.columns.records.length - m)
                }
                e.each(this.columns.records, function(E, C) {
                    if (!(this.hidden && this.hideable || this.adaptivehidden))
                        if (-1 != this.width.toString().indexOf("%") || void 0 != this._percentagewidth) {
                            E = "hidden" == h.vScrollBar[0].style.visibility ? 0 : h.scrollbarsize + 5;
                            if (h.scrollbarautoshow || 0 == h.scrollbarsize)
                                E = 0;
                            var F = f;
                            C = parseFloat(this.width) * F / 100;
                            E += k;
                            void 0 != this._percentagewidth && (C = parseFloat(this._percentagewidth) * (F - E) / 100);
                            C < this.minwidth && "auto" != this.minwidth && (C = this.minwidth);
                            C > this.maxwidth && "auto" != this.maxwidth && (C = this.maxwidth);
                            c -= C
                        } else
                            "auto" == this.width || this._width ? g += this.text : c -= this.width
                });
                n = this._gettableheight();
                if (!this.autoheight && this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > n)
                    if (this.groupable && 0 < this.groups.length)
                        if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                            var p = this.dataview.loadedrootgroups.length * this.rowsheight;
                            if (this.pageable)
                                for (var q = 0; q < this.dataview.rows.length; q++)
                                    this.dataview.rows[q].group && 0 === this.dataview.rows[q].level && (p += this.rowsheight);
                            p > n ? (c -= this.scrollbarsize + 5,
                            f -= this.scrollbarsize + 5) : "visible" == this.vScrollBar.css("visibility") && (c -= this.scrollbarsize + 5,
                            f -= this.scrollbarsize + 5)
                        } else
                            c -= this.scrollbarsize + 5,
                            f -= this.scrollbarsize + 5;
                    else
                        "hidden" != this.vScrollBar.css("visibility") && 0 < this.scrollbarsize && (c -= this.scrollbarsize + 5,
                        f -= this.scrollbarsize + 5);
                k = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                f -= k;
                if (this.columnsheader && (n = this.columnsheader.find("#columntable" + this.element.id),
                0 != n.length)) {
                    var t = 0
                      , v = this
                      , z = 0;
                    e.each(this.columns.records, function(E, C) {
                        C = e(this.element);
                        this.hidden || this.adaptivehidden || "none" !== this.element.style.display || (this.element.style.display = "block");
                        this.adaptivehidden && (this.element.style.display = "none");
                        var F = !1
                          , P = this.width;
                        if (-1 != this.width.toString().indexOf("%") || void 0 != this._percentagewidth)
                            P = void 0 != this._percentagewidth ? parseFloat(this._percentagewidth) * f / 100 : parseFloat(this.width) * f / 100,
                            F = !0;
                        0 < l && "adaptive" !== this.columntype ? (C.width(l),
                        this.adaptivewidth = l) : "auto" == this.width || this._width || F ? F ? (P < this.minwidth && "auto" != this.minwidth && (this.width = P = this.minwidth),
                        P > this.maxwidth && "auto" != this.maxwidth && (this.width = P = this.maxwidth),
                        parseInt(C[0].style.width) != P && (C.width(P),
                        this.width = P)) : (F = Math.floor(this.text.length / g.length * c),
                        z += F,
                        3 > c - z && c != z && .01 < c - z ? 1 === c - z ? F++ : F += 2 : E == h.columns.records.length - 1 && z < c && (F += c - z),
                        isNaN(F) && (F = this.minwidth),
                        isNaN(F) && (F = this.minwidth),
                        Infinity == F && (F = 0),
                        0 > F && (E = e("<span>" + v.escape_HTML(this.text) + "</span>"),
                        e(document.body).append(E),
                        F = 10 + E.width(),
                        E.remove()),
                        F < this.minwidth && (F = this.minwidth),
                        F > this.maxwidth && (F = this.maxwidth),
                        this._width = "auto",
                        this.width = F,
                        C.width(this.width)) : parseInt(C[0].style.width) != this.width && C.width(this.width);
                        parseInt(C[0].style.left) != t && C.css("left", t);
                        this.hidden && this.hideable || this.adaptivehidden || (t = 0 < l && "adaptive" !== this.columntype ? t + l : t + this.width);
                        this._requirewidthupdate = !0
                    });
                    this.columnsheader.width(2 + t);
                    n.width(this.columnsheader.width());
                    this.columnsheader[0].style.visibility = 0 == t ? "hidden" : "inherit";
                    this._resizecolumngroups();
                    this.showfilterrow && this.filterrow && (this.filterrow.width(this.columnsheader.width()),
                    this._updatefilterrowui());
                    this.showeverpresentrow && ("bottom" !== this.everpresentrowposition ? this.addnewrowtop.width(this.columnsheader.width()) : this.addnewrowbottom.width(this.columnsheader.width()),
                    this._updateaddnewrowui());
                    this.autowidth && this._arrange()
                }
            }
        },
        _rendercolumnheaders: function() {
            var c = this.that;
            this.cardview ? (0 < c.cardviewcolumns.length && e.each(this.columns.records, function(V, ca) {
                if ("string" !== typeof c.cardviewcolumns[0]) {
                    V = !1;
                    for (ca = 0; ca < c.cardviewcolumns.length; ca++)
                        c.cardviewcolumns[ca].datafield === this.datafield && (this.__width = this.width,
                        this.width = c.cardviewcolumns[ca].width || "",
                        V = !0);
                    V || (this.__hidden = this.hidden,
                    this.hidden = !0)
                } else
                    c.cardviewcolumns[V] ? (this.__width = this.width,
                    this.width = c.cardviewcolumns[V]) : this.hideable && (this.__hidden = this.hidden,
                    this.hidden = !0)
            }),
            this._cardviewmode = !0) : this._cardviewmode && (e.each(this.columns.records, function(V, ca) {
                void 0 !== this.__width && (this.width = this.__width,
                delete this.__width);
                void 0 !== this.__hidden && (this.hidden = this.__hidden,
                delete this.__hidden)
            }),
            this._cardviewmode = !1);
            if (this.prerenderrequired) {
                this._columnsbydatafield = [];
                this.columnsheader.find("#columntable" + this.element.id).remove();
                var f = e('<div id="columntable' + this.element.id + '" style="height: 100%; position: relative;"></div>');
                f[0].cells = [];
                var g = 0
                  , h = 0
                  , k = ""
                  , l = this.host.width()
                  , m = l
                  , n = []
                  , p = []
                  , q = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                e.each(this.columns.records, function(V, ca) {
                    this.hidden && this.hideable || this.adaptivehidden || ("auto" == this.width || this._width ? k += this.text : this.width < this.minwidth && "auto" != this.minwidth ? l -= this.minwidth : this.width > this.maxwidth && "auto" != this.maxwidth ? l -= this.maxwidth : -1 != this.width.toString().indexOf("%") ? (V = "hidden" == c.vScrollBar[0].style.visibility ? 0 : c.scrollbarsize + 5,
                    V += q,
                    ca = parseFloat(this.width) * (m - V) / 100,
                    ca < this.minwidth && "auto" != this.minwidth && (ca = this.minwidth),
                    ca > this.maxwidth && "auto" != this.maxwidth && (ca = this.maxwidth),
                    l -= ca) : ("string" == typeof this.width && (this.width = parseInt(this.width)),
                    l -= this.width));
                    this.pinned || this.grouped || this.checkboxcolumn ? (c._haspinned && (this.pinned = !0),
                    n[n.length] = this) : p[p.length] = this
                });
                if (this.rtl) {
                    var t = 0;
                    n.reverse();
                    for (v = this.columns.records.length - 1; v >= this.columns.records.length - n.length; v--)
                        this.columns.replace(v, n[t++]);
                    for (t = 0; t < p.length; t++)
                        this.columns.replace(t, p[t])
                } else {
                    for (var v = 0; v < n.length; v++)
                        this.columns.replace(v, n[v]);
                    for (t = 0; t < p.length; t++)
                        this.columns.replace(n.length + t, p[t])
                }
                var z = this.headerZIndex
                  , E = c.groupable ? c.groups.length : 0;
                this.rowdetails && this.showrowdetailscolumn && E++;
                var C = c.columnsheader.height();
                this.showfilterrow && (C = this.columngroups ? C - this.filterrowheight : this.columnsheight);
                this.showeverpresentrow && "bottom" !== this.everpresentrowposition && (C = this.columngroups ? C - this.everpresentrowheight : this.columnsheight);
                t = this._gettableheight();
                if (this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > t && !this.scrollbarautoshow)
                    if (this.groupable && 0 < this.groups.length)
                        if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                            v = 0;
                            if (!this.pageable)
                                v = this.dataview.loadedrootgroups.length * this.rowsheight;
                            else if (this.pageable)
                                for (var F = 0; F < this.dataview.rows.length; F++)
                                    this.dataview.rows[F].group && 0 === this.dataview.rows[F].level && (v += this.rowsheight);
                            v > t && (l -= this.scrollbarsize + 5,
                            m -= this.scrollbarsize + 5)
                        } else
                            l -= this.scrollbarsize + 5,
                            m -= this.scrollbarsize + 5;
                    else
                        !this.autoheight && 0 < this.scrollbarsize && (l -= this.scrollbarsize + 5,
                        m -= this.scrollbarsize + 5);
                m -= q;
                var P = function(V, ca) {
                    V = c.columngroupslevel * c.columnsheight;
                    return V -= ca.level * c.columnsheight
                }
                  , X = document.createDocumentFragment()
                  , W = 0;
                e.each(this.columns.records, function(V, ca) {
                    this.height = c.columnsheight;
                    c.columngroups && c.columngroups.length && (C = this.height = P(this.datafield, this));
                    ca = c.toTP("jqx-grid-column-header") + " " + c.toTP("jqx-widget-header");
                    c.rtl && (ca += " " + c.toTP("jqx-grid-column-header-rtl"));
                    var u = c.rtl ? 150 + z + 1 : 150 + z - 1
                      , D = c.rtl ? z++ : z--
                      , B = e('<div role="columnheader" style="z-index: ' + D + ';position: absolute; height: 100%;" class="' + ca + '"><div style="height: 100%; width: 100%;"></div></div>');
                    c.columngroups && (B[0].style.height = C + "px",
                    B[0].style.bottom = "0px",
                    this.pinned && (B[0].style.zIndex = u));
                    this.uielement = B;
                    "" != this.classname && this.classname && B.addClass(this.classname);
                    ca = this.width;
                    u = !1;
                    null === this.width && (this.width = "auto");
                    if (-1 != this.width.toString().indexOf("%") || void 0 != this._percentagewidth)
                        ca = void 0 != this._percentagewidth ? parseFloat(this._percentagewidth) * m / 100 : parseFloat(this.width) * m / 100,
                        u = !0;
                    if ("auto" == this.width || this._width || u)
                        if (u) {
                            ca < this.minwidth && "auto" != this.minwidth && (ca = this.minwidth);
                            ca > this.maxwidth && "auto" != this.maxwidth && (ca = this.maxwidth);
                            if (void 0 == this._percentagewidth || -1 != this.width.toString().indexOf("%"))
                                this._percentagewidth = this.width;
                            B.width(ca);
                            this.width = ca
                        } else
                            this.hidden || this.adaptivehidden || (ca = Math.floor(this.text.length / k.length * l),
                            W += ca,
                            3 > l - W && l != W && .01 < l - W ? 1 === l - W ? ca++ : ca += 2 : V == c.columns.records.length - 1 && W < l && (ca += l - W),
                            isNaN(ca) && (ca = this.minwidth),
                            0 > ca && (u = e("<span>" + this.text + "</span>"),
                            e(document.body).append(u),
                            ca = 10 + u.width(),
                            u.remove()),
                            ca < this.minwidth && (ca = this.minwidth),
                            ca > this.maxwidth && (ca = this.maxwidth),
                            this._width = "auto",
                            ca = this.width = ca,
                            B.width(this.width));
                    else
                        ca < this.minwidth && "auto" != this.minwidth && (this.width = ca = this.minwidth),
                        ca > this.maxwidth && "auto" != this.maxwidth && (this.width = ca = this.maxwidth),
                        B[0].style.width = parseInt(ca) + "px";
                    (this.hidden && this.hideable || this.adaptivehidden) && B.css("display", "none");
                    var H = e(B.children()[0]);
                    u = c.rtl ? c.toTP("jqx-grid-column-menubutton") + " " + c.toTP("jqx-grid-column-menubutton-rtl") : c.toTP("jqx-grid-column-menubutton");
                    u += " " + c.toTP("jqx-icon-arrow-down");
                    u = e('<div style="height: ' + C + 'px; display: none; left: 100%; top: 0%; position: absolute;"><div class="' + u + '" style="width: 100%; height:100%;"></div></div>');
                    c.enableanimations || u.css("margin-left", -16);
                    c.rtl && u.css("left", "0px");
                    this.columnsmenu = u[0];
                    f[0].cells[V] = B[0];
                    u[0].style.width = parseInt(c.columnsmenuwidth) + "px";
                    D = c.columnsmenu;
                    var J = !1
                      , K = !1
                      , Q = c.groupable && 0 < E && g < E || c.rowdetails && g < E;
                    c.rtl && (Q = c.groupable && 0 < E && g < E || c.rowdetails && g < E,
                    Q &= V > c.columns.records.length - 1 - E);
                    if (Q)
                        g++,
                        D &= 0,
                        this.editable = this.sortable = !1,
                        K = !0;
                    else {
                        var Y = null != this.renderer ? this.renderer(this.text, this.align, C) : c._rendercolumnheader(this.text, this.align, C, c);
                        null == Y && (Y = c._rendercolumnheader(this.text, this.align, C, c));
                        null != this.renderer && (Y = e(Y));
                        D &= 1;
                        J = !0
                    }
                    c.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                        H.append(e(Y))
                    }) : this.renderer ? H.append(e(Y)) : Y && (H[0].innerHTML = Y);
                    if (null != Y) {
                        var I = e('<div class="iconscontainer" style="height: ' + C + 'px; margin-left: -32px; display: block; position: absolute; left: 100%; top: 0%; width: 32px;"><div class="filtericon ' + c.toTP("jqx-widget-header") + '" style="height: ' + C + 'px; float: right; display: none; width: 16px;"><div class="' + c.toTP("jqx-grid-column-filterbutton") + '" style="width: 100%; height:100%;"></div></div><div class="sortasc ' + c.toTP("jqx-widget-header") + '" style="height: ' + C + 'px; float: right; display: none; width: 16px;"><div class="' + c.toTP("jqx-grid-column-sortascbutton") + " " + c.toTP("jqx-icon-arrow-up") + '" style="width: 100%; height:100%;"></div></div><div class="sortdesc ' + c.toTP("jqx-widget-header") + '" style="height: ' + C + 'px; float: right; display: none; width: 16px;"><div class="' + c.toTP("jqx-grid-column-sortdescbutton") + " " + c.toTP("jqx-icon-arrow-down") + '" style="width: 100%; height:100%;"></div></div><div class="sorticon ' + c.toTP("jqx-widget-header") + '" style="height: ' + C + 'px; float: right; visibility: hidden; width: 16px;"><div class="' + c.toTP("jqx-grid-column-sorticon") + " " + c.toTP("jqx-icon-arrow-down") + '" style="width: 100%; height:100%;"></div></div></div>');
                        u.addClass(c.toTP("jqx-widget-header"));
                        H.append(I);
                        V = I.children();
                        this.sorticon = V[3];
                        this.sortasc = V[1];
                        this.sortdesc = V[2];
                        this.filtericon = V[0];
                        this.iconscontainer = I;
                        c.rtl && (I.css("margin-left", "0px"),
                        I.css("left", "0px"),
                        e(this.sorticon).css("float", "left"),
                        e(this.sortasc).css("float", "left"),
                        e(this.filtericon).css("float", "left"),
                        e(this.sortdesc).css("float", "left"));
                        !c.autoshowfiltericon && this.filterable && e(this.filtericon).css("display", "block")
                    }
                    this.element = B[0];
                    D && (c._handlecolumnsmenu(c, H, B, u, this),
                    this.menu || u.hide());
                    X.appendChild(B[0]);
                    if (c.groupable && J)
                        if (B[0].id = c.dataview.generatekey(),
                        c._handlecolumnstogroupsdragdrop)
                            c._handlecolumnstogroupsdragdrop(this, B);
                        else
                            throw Error("jqxGrid: Missing reference to jqxgrid.grouping.js.");
                    c.columnsreorder && this.draggable && c._handlecolumnsdragreorder && c._handlecolumnsdragreorder(this, B);
                    var T = this;
                    T._applyStyle();
                    c.addHandler(B, "mouseenter", function(la) {
                        T.hovered = !0;
                        T._applyStyle()
                    });
                    c.addHandler(B, "mouseleave", function(la) {
                        T.hovered = !1;
                        T._applyStyle()
                    });
                    var Z = function(la, aa, U) {
                        if (la.selectable) {
                            var fa = c.getrows();
                            void 0 === la.selected && (la.selected = !1);
                            aa.shiftKey && void 0 !== c._clickedcolumn || (c._clickedcolumn = la);
                            if (aa.shiftKey && c._clickedcolumn && void 0 === U) {
                                var ma = c.columns.records.indexOf(c._clickedcolumn);
                                U = c.columns.records.indexOf(la);
                                la = Math.min(ma, U);
                                U = Math.max(ma, U);
                                c.clearselection();
                                for (ma = la; ma <= U; ma++)
                                    Z(c.columns.records[ma], aa, !0);
                                c._renderrows(this.virtualsizeinfo)
                            } else {
                                U ? la.selected = !0 : (aa.ctrlKey || c.clearselection(),
                                la.selected = !la.selected);
                                for (ma = 0; ma < fa.length; ma++)
                                    c._applycellselection(fa[ma].boundindex, la.displayfield, la.selected, !1, !1);
                                la.selected ? la.element.setAttribute("selected", "") : la.element.removeAttribute("selected");
                                la._applyStyle();
                                void 0 === U && (c.virtualsizeinfo = c._calculatevirtualheight(),
                                c._renderrows(c.virtualsizeinfo))
                            }
                        }
                    };
                    c.addHandler(B, "click", function(la) {
                        if (T.checkboxcolumn)
                            return !0;
                        if (0 < c.sorttogglestates && c._togglesort && !c._loading) {
                            if (c.suspendClick)
                                return !0;
                            c._togglesort(T)
                        }
                        Z(T, la);
                        la.preventDefault();
                        c._raiseEvent(7, {
                            column: T.getcolumnproperties(),
                            datafield: T.datafield,
                            originalEvent: la
                        })
                    });
                    T.toggleSelection = Z;
                    if (T.resizable && c.columnsresize && !K) {
                        var ra = !1;
                        V = "mousemove";
                        c.isTouchDevice() && !0 !== c.touchmode && (ra = !0,
                        V = e.jqx.mobile.getTouchEventName("touchstart"));
                        c.addHandler(B, V, function(la) {
                            var aa = parseInt(la.pageX)
                              , U = parseInt(B.coord().left);
                            c.hasTransform && (U = e.jqx.utilities.getOffset(B).left);
                            if (c.resizing)
                                return !0;
                            if (c._handlecolumnsresize) {
                                if (ra)
                                    return aa = c.getTouches(la)[0].pageX,
                                    aa >= U + T.width - 40 ? (c.resizablecolumn = {
                                        columnelement: B,
                                        column: T
                                    },
                                    B.css("cursor", "col-resize")) : (B.css("cursor", ""),
                                    c.resizablecolumn = null),
                                    !0;
                                la = T.width;
                                c.rtl && (la = 0);
                                if (aa >= U + la - 5) {
                                    if (aa <= U + la + 5)
                                        return c.resizablecolumn = {
                                            columnelement: B,
                                            column: T
                                        },
                                        B.css("cursor", "col-resize"),
                                        !1;
                                    B.css("cursor", "")
                                } else
                                    B.css("cursor", ""),
                                    aa < U + la - 5 && (T._animating || T._menuvisible || B.mouseenter());
                                c.resizablecolumn = null
                            }
                        })
                    }
                    B.css("left", h);
                    this.hidden && this.hideable || this.adaptivehidden || (h += ca);
                    T.rendered && T.rendered(e(H[0].firstChild), T.align, C) && null != I && I.hide();
                    if (T.checkboxcolumn) {
                        I && I.hide();
                        if (!c.host.jqxCheckBox)
                            throw Error("jqxGrid: Missing reference to jqxcheckbox.js");
                        H.html('<div style="cursor: pointer; margin-left: 3px; top: 50%; margin-top: -9px; position: relative;"></div>');
                        var ia = H.find("div:first");
                        ia.jqxCheckBox({
                            _canFocus: !1,
                            disabled: c.disabled,
                            disabledContainer: !0,
                            theme: c.theme,
                            enableContainerClick: !1,
                            animationShowDelay: 0,
                            animationHideDelay: 0
                        });
                        ia.addClass(c.toThemeProperty("jqx-checkbox"));
                        T.checkboxelement = ia;
                        I = ia.data().jqxCheckBox.instance;
                        c._checkboxcolumn = T;
                        I.updated = function(la, aa, U) {
                            c._checkboxcolumnupdating = !0;
                            c.disabled && (ia.jqxCheckBox({
                                disabled: c.disabled
                            }),
                            aa = U);
                            aa ? c.selectallrows() : c.unselectallrows();
                            c._checkboxcolumnupdating = !1
                        }
                    }
                });
                0 < h ? this.columnsheader.width(2 + h) : this.columnsheader.width(h);
                f[0].appendChild(X);
                this.columnsrow = f;
                c.columnsheader.append(f);
                this.showfilterrow && this._updatefilterrow && (this.columngroups ? f.height(this.columngroupslevel * this.columnsheight) : f.height(this.columnsheight),
                this.filterrow || (t = e("<div style='position: relative !important; '></div>"),
                t[0].id = "filterrow." + this.element.id,
                t.height(this.filterrowheight),
                this.filterrow = t),
                this.filterrow.width(2 + h),
                this.columnsheader.append(this.filterrow),
                this._updatefilterrow());
                this.showeverpresentrow && "bottom" !== this.everpresentrowposition ? (this.columngroups ? f.height(this.columngroupslevel * this.columnsheight) : f.height(this.columnsheight),
                this.addnewrowtop || (t = e("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>"),
                t[0].id = "addnewrowtop." + this.element.id,
                t.height(this.everpresentrowheight),
                this.addnewrowtop = t),
                this.addnewrowtop.width(2 + h),
                "topAboveFilterRow" == this.everpresentrowposition ? this.filterrow ? this.addnewrowtop.insertBefore(this.filterrow) : this.columnsheader.append(this.addnewrowtop) : this.columnsheader.append(this.addnewrowtop),
                this._updateaddnewrow()) : this.showeverpresentrow && "bottom" === this.everpresentrowposition && (this.addnewrowbottom || (t = e("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>"),
                t[0].id = "addnewrowbottom." + this.element.id,
                t.height(this.everpresentrowheight),
                this.addnewrowbottom = t),
                this.addnewrowbottom.width(2 + h),
                this.addnewrow.append(this.addnewrowbottom),
                this._updateaddnewrow());
                f[0].style.visibility = 0 == h ? "hidden" : "inherit";
                f.width(h);
                this._handlecolumnsdragdrop && this._handlecolumnsdragdrop();
                this._handlecolumnsreorder && this._handlecolumnsreorder();
                this._rendersortcolumn && this._rendersortcolumn();
                this._renderfiltercolumn && this._renderfiltercolumn();
                this._handlecolumnsresize && this._handlecolumnsresize();
                this.columngroups && this._rendercolumngroups();
                this._updatecheckboxselection && this._updatecheckboxselection()
            } else
                this._rendersortcolumn && this._rendersortcolumn(),
                this._renderfiltercolumn && this._renderfiltercolumn(),
                this.showfilterrow && this.filterrow && (this.filterrow.width(this.columnsheader.width()),
                this._updatefilterrowui()),
                this.showeverpresentrow && ("bottom" !== this.everpresentrowposition ? this.addnewrowtop.width(this.columnsheader.width()) : this.addnewrowbottom.width(this.columnsheader.width()),
                this._updateaddnewrowui())
        },
        _rendercolumngroups: function() {
            if (this.columngroups) {
                for (var c = 0, f = 0; f < this.columns.records.length; f++)
                    this.columns.records[f].pinned && c++;
                c = this.headerZIndex - c + this.columns.records.length;
                f = this.that;
                var g = f.toTP("jqx-grid-column-header") + " " + f.toTP("jqx-grid-columngroup-header") + " " + f.toTP("jqx-widget-header");
                f.rtl && (g += " " + f.toTP("jqx-grid-columngroup-header-rtl"));
                var h = this.columnsheader.find("#columntable" + this.element.id);
                h.find("jqx-grid-columngroup-header").remove();
                for (var k = 0; k < this.columngroupslevel - 1; k++)
                    for (f = 0; f < this.columngroups.length; f++) {
                        var l = this.columngroups[f]
                          , m = l.level;
                        if (m === k) {
                            m *= this.columnsheight;
                            var n = 99999;
                            if (l.groups) {
                                var p = function(E) {
                                    for (var C = 0, F = 0; F < E.groups.length; F++) {
                                        var P = E.groups[F];
                                        P.groups ? C += p(P) : P.hidden || (C += P.width,
                                        n = Math.min(parseFloat(P.element.style.left), n))
                                    }
                                    return C
                                };
                                l.width = p(l);
                                l.left = n;
                                var q = this.columnsheight
                                  , t = c--;
                                t = e('<div role="columnheader" style="z-index: ' + t + ';position: absolute;" class="' + g + '"></div>');
                                var v = e(this._rendercolumnheader(l.text, l.align, this.columnsheight, this));
                                if (l.renderer) {
                                    v = e("<div style='height: 100%; width: 100%;'></div>");
                                    var z = l.renderer(l.text, l.align, q);
                                    v.html(z)
                                }
                                t.append(v);
                                t[0].style.left = n + "px";
                                0 === n && (t[0].style.borderLeftColor = "transparent");
                                this.showcolumnheaderlines || (t[0].style.borderRightColor = "transparent",
                                t[0].style.borderBottomColor = "transparent",
                                t[0].style.boxShadow = "none");
                                t[0].style.top = m + "px";
                                t[0].style.height = q + "px";
                                t[0].style.width = -1 + l.width + "px";
                                h.append(t);
                                l.element = t;
                                l.rendered && l.rendered(v, l.align, q)
                            }
                        }
                    }
            }
        },
        _resizecolumngroups: function() {
            if (this.columngroups)
                for (var c = 0; c < this.columngroups.length; c++) {
                    var f = this.columngroups[c]
                      , g = f.level * this.columnsheight
                      , h = 99999;
                    if (f.groups) {
                        var k = function(n) {
                            for (var p = 0, q = 0; q < n.groups.length; q++) {
                                var t = n.groups[q];
                                t.groups ? p += k(t) : t.hidden || (p += t.width,
                                h = Math.min(parseFloat(t.element.style.left), h))
                            }
                            return p
                        };
                        f.width = k(f);
                        f.left = h;
                        var l = this.columnsheight
                          , m = f.element;
                        m[0].style.left = h + "px";
                        m[0].style.top = g + "px";
                        m[0].style.height = l + "px";
                        m[0].style.width = -1 + f.width + "px"
                    }
                }
        },
        _handlecolumnsmenu: function(c, f, g, h, k) {
            c.dragmousedown = null;
            h[0].id = c.dataview.generatekey();
            f.append(h);
            g[0].columnsmenu = h[0];
            k.element = g[0];
            var l = this.columnsmenuwidth + 1
              , m = function() {
                if (!k.menu)
                    return !1;
                if (!c.resizing) {
                    if (k._menuvisible && c._hasOpenedMenu)
                        return !1;
                    k._animating = !0;
                    if (c.menuitemsarray && 0 < c.menuitemsarray.length)
                        if (c.enableanimations)
                            h.css("display", "block"),
                            h.stop(),
                            k.iconscontainer.stop(),
                            c.rtl ? (h.css("margin-left", -l),
                            h.animate({
                                "margin-left": "0px"
                            }, "fast", function() {
                                h.css("display", "block");
                                k._animating = !1;
                                k._menuvisible = !0
                            })) : (h.css("margin-left", "0px"),
                            h.animate({
                                "margin-left": -l
                            }, "fast", function() {
                                h.css("display", "block");
                                k._animating = !1;
                                k._menuvisible = !0
                            })),
                            t = c.rtl ? l : -(32 + l),
                            k.iconscontainer.animate({
                                "margin-left": t
                            }, "fast");
                        else {
                            h.css("display", "block");
                            var t = c.rtl ? 16 : -48;
                            k.iconscontainer.css("margin-left", t + "px");
                            k._animating = !1;
                            k._menuvisible = !0
                        }
                }
            };
            f = "mouseenter";
            c.isTouchDevice() && (f = "touchstart");
            c.addHandler(g, f, function(t) {
                t = parseInt(t.pageX);
                var v = c.columnsresize && k.resizable ? 3 : 0
                  , z = parseInt(g.coord().left);
                c.hasTransform && (z = e.jqx.utilities.getOffset(g).left);
                var E = k.width;
                c.rtl && (E = 0);
                if (0 != v && t >= z + E - v && t <= z + E + v)
                    return !1;
                t = c.vScrollInstance.isScrolling();
                k.menu && c.autoshowcolumnsmenubutton && !t && !c.disabled && m()
            });
            c.autoshowcolumnsmenubutton || (h.css("display", "block"),
            k.iconscontainer.css("margin-left", (c.rtl ? 16 : -48) + "px"),
            c.rtl ? h.css({
                "margin-left": "0px"
            }) : h.css({
                "margin-left": -l
            }));
            c.addHandler(g, "mouseleave", function(t) {
                c.menuitemsarray && 0 < c.menuitemsarray.length && k.menu && (t = e.data(document.body, "contextmenu" + c.element.id),
                void 0 != t && h[0].id == t.columnsmenu.id || !c.autoshowcolumnsmenubutton || (c.enableanimations ? (c.rtl ? h.css("margin-left", "0px") : h.css("margin-left", -l),
                h.stop(),
                k.iconscontainer.stop(),
                c.rtl ? h.animate({
                    "margin-left": -l
                }, "fast", function() {
                    h.css("display", "none");
                    k._menuvisible = !1
                }) : h.animate({
                    "margin-left": 0
                }, "fast", function() {
                    h.css("display", "none");
                    k._menuvisible = !1
                }),
                t = c.rtl ? 0 : -32,
                k.iconscontainer.animate({
                    "margin-left": t
                }, "fast")) : (h.css("display", "none"),
                t = c.rtl ? 0 : -32,
                k.iconscontainer.css("margin-left", t + "px"),
                k._menuvisible = !1)))
            });
            var n = !0
              , p = "";
            f = e(k.filtericon);
            c.addHandler(h, "mousedown", function(t) {
                c.gridmenu || c._initmenu();
                n = !e.data(c.gridmenu[0], "contextMenuOpened" + c.gridmenu[0].id);
                p = e.data(document.body, "contextmenu" + c.element.id);
                null != p && (p = p.column.datafield)
            });
            c.addHandler(f, "mousedown", function(t) {
                c.gridmenu || c._initmenu();
                n = !e.data(c.gridmenu[0], "contextMenuOpened" + c.gridmenu[0].id);
                p = e.data(document.body, "contextmenu" + c.element.id);
                null != p && (p = p.column.datafield)
            });
            var q = function() {
                if (!k.menu)
                    return !1;
                c.gridmenu || c._initmenu();
                if (c.disabled)
                    return !1;
                for (var t = 0; t < c.columns.records.length; t++)
                    c.columns.records[t].datafield != k.datafield && (c.columns.records[t]._menuvisible = !1);
                t = h.coord(!0);
                var v = h.height();
                if (!n && (n = !0,
                p == k.datafield))
                    return c._closemenu(),
                    !1;
                var z = c.host.coord(!0);
                c.hasTransform && (z = e.jqx.utilities.getOffset(c.host),
                t = e.jqx.utilities.getOffset(h));
                z.left + c.host.width() > parseInt(t.left) + c.gridmenu.width() ? c.gridmenu.jqxMenu("open", t.left, t.top + v) : c.gridmenu.jqxMenu("open", h.width() + t.left - c.gridmenu.width(), t.top + v);
                100 > c.gridmenu.width() && c._arrangemenu();
                if (c.adaptive && c.element.offsetWidth < c.adaptivewidth) {
                    c.gridmenu.jqxMenu("close");
                    c.gridmenu.jqxMenu("open", z.left, t.top + v);
                    for (t = v = 0; t < c.columns.records.length; t++)
                        z = c.columns.records[t],
                        z.hidden || z.adaptivehidden || "adaptive" === z.columntype || (v += z.adaptivewidth);
                    c.gridmenu.width(v);
                    c.gridmenu.height(c.content.height())
                }
                (!c.filterable || c.filterable && c.showfilterrow) && setTimeout(function() {
                    c.gridmenu.focus();
                    for (var W = c.gridmenu.find(".jqx-item"), V = 0; V < W.length; V++)
                        W[V].active && (W[V].active = !1);
                    V = W[0];
                    0 <= W[0].className.indexOf("disabled") && (V = W[1]);
                    e(W).removeClass("jqx-fill-state-focus");
                    e(V).addClass("jqx-fill-state-focus");
                    V.active = !0
                }, 225);
                c._hasOpenedMenu = !0;
                v = c._getmenuitembyindex(0);
                z = c._getmenuitembyindex(1);
                var E = c._getmenuitembyindex(2)
                  , C = c._getmenuitembyindex(3)
                  , F = c._getmenuitembyindex(4);
                t = c._getmenuitembyindex(5);
                if (null != v && null != z && null != E) {
                    var P = k.sortable && c.sortable;
                    c.gridmenu.jqxMenu("disable", v.id, !P);
                    c.gridmenu.jqxMenu("disable", z.id, !P);
                    c.gridmenu.jqxMenu("disable", E.id, !P);
                    if (void 0 != k.displayfield) {
                        var X = c.getsortinformation();
                        X = X && X.sortcolumns && X.sortcolumns.find(function(W) {
                            return W.dataField === k.displayfield
                        });
                        c.sortcolumn == k.displayfield || X ? (X = c.getsortinformation(),
                        P && (X.sortdirection.ascending ? c.gridmenu.jqxMenu("disable", v.id, !0) : c.gridmenu.jqxMenu("disable", z.id, !0))) : c.gridmenu.jqxMenu("disable", E.id, !0)
                    }
                }
                null != C && null != F && (c.groupable && k.groupable ? c.groups && -1 != c.groups.indexOf(k.datafield) ? (c.gridmenu.jqxMenu("disable", C.id, !0),
                c.gridmenu.jqxMenu("disable", F.id, !1)) : (c.gridmenu.jqxMenu("disable", C.id, !1),
                c.gridmenu.jqxMenu("disable", F.id, !0)) : (c.gridmenu.jqxMenu("disable", F.id, !0),
                c.gridmenu.jqxMenu("disable", C.id, !0)));
                null != t && (c.menuOwner = k,
                c._updatefilterpanel(c, t, k),
                v = 0,
                c.sortable && c._togglesort && c.showsortmenuitems && (v += 3),
                c.groupable && c.addgroup && c.showgroupmenuitems && (v += 2),
                z = 36 * v + 6,
                z = c._measureMenuElement(),
                z = v * z + 20,
                e.jqx.browser.msie && 8 > e.jqx.browser.version && (z += 20,
                e(t).height(220)),
                c.isTouchDevice() && (z += 10),
                c.filterable && c.showfiltermenuitems && (k.filterable ? (c.gridmenu.height(z + 230),
                e(t).css("display", "block")) : (c.gridmenu.height(z),
                e(t).css("display", "none"))));
                c.columnmenuopening && !1 === c.columnmenuopening(c.gridmenu, k.displayfield, c.gridmenu.height()) && setTimeout(function() {
                    c._closemenu()
                });
                e.data(document.body, "contextmenu" + c.element.id, {
                    column: k,
                    columnsmenu: h[0]
                })
            };
            c.addHandler(f, "click", function(t) {
                if (!k.menu)
                    return !1;
                c.showfilterrow || ("block" != h[0].style.display && g.trigger("mouseenter"),
                setTimeout(function() {
                    "block" != h[0].style.display && g.trigger("mouseenter");
                    q()
                }, 200));
                return !1
            });
            c.addHandler(h, "click", function(t) {
                if (!k.menu)
                    return !1;
                q();
                return !1
            });
            c.isTouchDevice() && c.addHandler(h, e.jqx.mobile.getTouchEventName("touchstart"), function(t) {
                if (!k.menu)
                    return !1;
                c._hasOpenedMenu ? c._closemenu() : q();
                return !1
            })
        },
        _removecolumnhandlers: function(c) {
            var f = this.that
              , g = e(c.element);
            0 < g.length && (f.removeHandler(g, "mouseenter"),
            f.removeHandler(g, "mouseleave"),
            c = e(c.filtericon),
            f.removeHandler(c, "mousedown"),
            f.removeHandler(c, "click"),
            f.removeHandler(g, "click"),
            f.removeHandler(g, "mousemove"),
            f.columnsreorder && (f.removeHandler(g, "mousedown.drag"),
            f.removeHandler(g, "mousemove.drag")),
            f.removeHandler(g, "dragstart"),
            g[0].columnsmenu && (g = e(g[0].columnsmenu),
            f.removeHandler(g, "click"),
            f.removeHandler(g, "mousedown"),
            f.removeHandler(g, e.jqx.mobile.getTouchEventName("touchstart"))))
        },
        _rendercolumnheader: function(c, f, g, h) {
            return this.enableellipsis ? "left" == f ? '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + f + "; margin-left: 4px; margin-right: 2px; line-height: " + g + 'px;"><span style="text-overflow: ellipsis; cursor: default;">' + c + "</span></div>" : '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + f + "; margin-left: 2px; margin-right: 4px; line-height: " + g + 'px;"><span style="text-overflow: ellipsis; cursor: default;">' + c + "</span></div>" : "center" == f || "middle" == f ? '<div style="padding-bottom: 2px; text-align: center; line-height: ' + g + 'px;"><a href="#">' + c + "</a></div>" : '<a style="line-height: ' + g + "px; float: " + f + ';" href="#">' + c + "</a>"
        },
        _renderrows: function(c, f, g) {
            var h = this.that;
            (this.pageable || this.groupable) && (this.autoheight || this.autorowheight) && null != this.table && null != this.table[0].rows && this.table[0].rows.length < this.dataview.rows.length && (h.prerenderrequired = !0);
            this.pageable || !this.autoheight && !this.autorowheight || !this.virtualmode && !this.unboundmode || (g = this.source.totalrecords,
            isNaN(g) || null == this.table || null == this.table[0].rows || this.table[0].rows.length == g || (h.prerenderrequired = !0));
            (this.autoheight || this.autorowheight) && !h.prerenderrequired && this.table && this.table[0].rows && (this.table[0].rows.length < this.dataview.records.length && (this.pageable && this.table[0].rows.length < this.dataview.pagesize ? h.prerenderrequired = !0 : this.pageable || (h.prerenderrequired = !0)),
            this.table[0].rows.length < this.dataview.cachedrecords.length && (this.pageable && this.table[0].rows.length < this.dataview.pagesize ? h.prerenderrequired = !0 : this.pageable || (h.prerenderrequired = !0)));
            h._prerenderrows(c);
            h._requiresupdate && (h._requiresupdate = !1,
            h._updatepageviews());
            var k = function() {
                h._loading || (h.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                    h._rendervisualrows()
                }) : h._rendervisualrows(),
                h.virtualmode && h.showaggregates && h._updateaggregates && h.refreshaggregates())
            };
            c = e.jqx.browser.msie && 10 > e.jqx.browser.version;
            if (this.virtualmode)
                g = function() {
                    if (h.rendergridrows) {
                        var n = h._startboundindex;
                        void 0 == n && (n = 0);
                        var p = n + 1 + h.dataview.pagesize;
                        if (null != n && null != p) {
                            var q = h.source._source ? !0 : !1;
                            if ((q ? h.source._source.recordstartindex : h.source.recordstartindex) != n || 1 == f) {
                                if (q) {
                                    if (p >= h.source._source.totalrecords && (p = h.source._source.totalrecords,
                                    n = p - h.dataview.pagesize - 1,
                                    0 > n && (n = 0),
                                    h.source._source.recordendindex == p && h.source._source.recordstartindex == n))
                                        return;
                                    h.source._source.recordstartindex = n;
                                    h.source._source.recordendindex = p
                                } else
                                    h.source.recordstartindex = n,
                                    h.source.recordendindex = p;
                                h.updatebounddata("cells")
                            }
                        }
                    }
                }
                ,
                this.loadondemand && (k(),
                g(),
                this.loadondemand = !1),
                g = void 0 == this._browser ? this._isIE10() : this._browser,
                this.editable && this.editcell && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling() ? k() : this.autoheight ? k() : g || c || navigator && -1 != navigator.userAgent.indexOf("Safari") ? (null != this._scrolltimer && clearTimeout(this._scrolltimer),
                this._scrolltimer = setTimeout(function() {
                    k()
                }, 5)) : k();
            else {
                if ("deferred" == this.scrollmode && (this.hScrollInstance.isScrolling() || this.vScrollInstance.isScrolling())) {
                    null != this._scrolltimer && clearInterval(this._scrolltimer);
                    var l = this._getfirstvisualrow();
                    null != l && (c = function(n) {
                        if (null == l)
                            return "";
                        n = "<table>";
                        var p = h.deferreddatafields;
                        null == p && 0 < h.columns.records.length && (p = [],
                        p.push(h.columns.records[0].displayfield));
                        for (var q = 0; q < p.length; q++) {
                            var t = h._getcolumnbydatafield(p[q]);
                            if (t) {
                                var v = h._getcellvalue(t, l);
                                "" != t.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(v) ? v = e.jqx.dataFormat.formatdate(v, t.cellsformat, h.gridlocalization) : e.jqx.dataFormat.isNumber(v) && (v = e.jqx.dataFormat.formatnumber(v, t.cellsformat, h.gridlocalization)));
                                n += "<tr><td>" + v + "</td></tr>"
                            }
                        }
                        return n + "</table>"
                    }
                    ,
                    c = this.scrollfeedback ? this.scrollfeedback(l.bounddata) : c(l.bounddata),
                    c != this._scrollelementcontent && (this._scrollelementcontent = this._scrollelement[0].innerHTML = c));
                    this._scrollelement.css("visibility", "visible");
                    this._scrollelementoverlay.css("visibility", "visible");
                    this._scrollelement.css("margin-top", -this._scrollelement.height() / 2);
                    this._scrolltimer = setInterval(function() {
                        h.hScrollInstance.isScrolling() || h.vScrollInstance.isScrolling() || (k(),
                        h._scrollelement.css("visibility", "hidden"),
                        h._scrollelementoverlay.css("visibility", "hidden"),
                        clearInterval(h._scrolltimer),
                        l && h.ensurerowvisible(l.visibleindex))
                    }, 100);
                    return
                }
                navigator && -1 == navigator.userAgent.indexOf("Chrome") && -1 != navigator.userAgent.indexOf("Safari") && (this._updatedelay = 1);
                void 0 != this.touchDevice && 1 == this.touchDevice && (this._updatedelay = 5);
                if ((g = void 0 == this._browser ? this._isIE10() : this._browser) || c)
                    this._updatedelay = 5;
                if (g && this.hScrollInstance.isScrolling()) {
                    k();
                    return
                }
                e.jqx.browser.mozilla && 0 == this._updatedelay && (this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling()) && (this._updatedelay = 0);
                this.isTouchDevice() && (this._updatedelay = 0);
                null != this.updatedelay && (this._updatedelay = this.updatedelay);
                0 == this._updatedelay ? k() : (c = this._jqxgridrendertimer,
                null != c && clearTimeout(c),
                this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling() ? (this._updatedelay ? c = setTimeout(function() {
                    k()
                }, this._updatedelay) : (c = null,
                k()),
                this._jqxgridrendertimer = c) : (this._jqxgridrendertimer = c,
                k()))
            }
            if (h.autorowheight && !h.autoheight && 0 < this._pageviews.length) {
                g = this._gettableheight();
                c = this._pageviews[0].height;
                if (c > g)
                    if (this.pageable && this.gotopage && (c = this._pageviews[0].height,
                    0 > c && (c = this._pageviews[0].height)),
                    "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                    (c <= g || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                    0 < c - g) {
                        if ("deferred" != this.scrollmode) {
                            g = c - g;
                            var m = this.vScrollInstance.max;
                            this.vScrollBar.jqxScrollBar({
                                max: g
                            });
                            Math.round(g) != Math.round(m) && this.vScrollBar.jqxScrollBar("value") > g && this.vScrollBar.jqxScrollBar({
                                value: 0
                            })
                        }
                    } else
                        this.vScrollBar.jqxScrollBar({
                            value: 0,
                            max: c
                        });
                else
                    this._loading || this.vScrollBar.css("visibility", "hidden"),
                    this.vScrollBar.jqxScrollBar({
                        value: 0
                    });
                this._arrange();
                this.virtualsizeinfo && (this.virtualsizeinfo.virtualheight = c)
            }
        },
        scrolling: function() {
            var c = this.vScrollInstance.isScrolling()
              , f = this.hScrollInstance.isScrolling();
            return {
                vertical: c,
                horizontal: f
            }
        },
        _renderhorizontalscroll: function() {
            var c = this.hScrollInstance
              , f = c.value;
            "hidden" === this.hScrollBar.css("visibility") && (f = c.value = 0);
            var g = parseInt(f);
            if (null != this.table) {
                var h = this.table[0].rows.length
                  , k = this.columnsrow
                  , l = this.groupable && 0 < this.groups.length ? this.groups.length : 0
                  , m = this.columns.records.length - l
                  , n = this.columns.records
                  , p = 0 == this.dataview.rows.length;
                this.rtl && "hidden" != this.hScrollBar.css("visibility") && (g = c.max - g);
                if (p && !this._haspinned) {
                    for (c = 0; c < h; c++) {
                        p = this.table[0].rows[c];
                        for (var q = 0; q < l + m; q++) {
                            var t = p.cells[q];
                            if (void 0 != t) {
                                var v = n[q];
                                v.pinned && (t.style.marginLeft = g + "px",
                                0 == c && (t = k[0].cells[q],
                                t.style.marginLeft = g + "px"))
                            }
                        }
                    }
                    this.table[0].style.marginLeft = -g + "px";
                    k[0].style.marginLeft = -g + "px"
                } else if (this._haspinned || void 0 == this._haspinned) {
                    for (c = 0; c < h; c++)
                        for (p = this.table[0].rows[c],
                        q = 0; q < l + m; q++)
                            if (t = p.cells[q],
                            void 0 != t && (v = n[q],
                            v.pinned && (0 != g || "" != t.style.marginLeft))) {
                                var z = v = null
                                  , E = null;
                                this.showeverpresentrow && this.addnewrowtop && this.addnewrowtop[0].cells && (E = this.addnewrowtop[0].cells[q]);
                                this.showfilterrow && this.filterrow && this.filterrow[0].cells && (z = this.filterrow[0].cells[q]);
                                this.showaggregates && this.statusbar[0].cells && (v = this.statusbar[0].cells[q]);
                                this.rtl ? (t.style.marginLeft = -parseInt(f) + "px",
                                0 == c && (t = k[0].cells[q],
                                t.style.marginLeft = -parseInt(f) + "px",
                                v && (v.style.marginLeft = -parseInt(f) + "px"),
                                z && (z.style.marginLeft = -parseInt(f) + "px"),
                                E && (E.style.marginLeft = -parseInt(f) + "px"))) : (t.style.marginLeft = g + "px",
                                0 == c && (t = k[0].cells[q],
                                t.style.marginLeft = g + "px",
                                v && (v.style.marginLeft = g + "px"),
                                z && (z.style.marginLeft = g + "px"),
                                E && (E.style.marginLeft = g + "px")))
                            }
                    this.table[0].style.marginLeft = -g + "px";
                    k[0].style.marginLeft = -g + "px"
                } else
                    0 == this._haspinned && (this.table[0].style.marginLeft = -g + "px",
                    k[0].style.marginLeft = -g + "px");
                this.showaggregates && this.statusbar[0].cells && (f = 0,
                this.rtl && "hidden" != this.vScrollBar.css("visibility") && "hidden" != this.hScrollBar.css("visibility") && (f = 2 + parseInt(this.hScrollBar.css("left"))),
                this.statusbar[0].style.marginLeft = -g + f + "px");
                this.showfilterrow && this.filterrow && this.filterrow[0].cells && (this.filterrow[0].style.marginLeft = -g + "px");
                this.showeverpresentrow && this.addnewrowtop && this.addnewrowtop[0].cells && (this.addnewrowtop[0].style.marginLeft = -g + "px")
            }
        },
        _updaterowdetailsvisibility: function() {
            if (this.rowdetails)
                for (var c = 0; c < this._rowdetailselementscache.length; c++)
                    e(this._rowdetailselementscache[c]).css("display", "none")
        },
        _getvisualcolumnsindexes: function(c, f, g, h, k, l, m) {
            var n = this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling() || this._keydown;
            if ((this.rowdetails || this.rtl || this.editcell && n || this.width && 0 <= this.width.toString().indexOf("%") && !n && !this.editcell || this.exporting) && !m)
                return {
                    start: 0,
                    end: g + h
                };
            m = 0;
            n = -1;
            var p = g + h
              , q = !1;
            if (this.autorowheight)
                return {
                    start: 0,
                    end: g + h
                };
            if (!k)
                for (k = 0; k < g + h; k++)
                    if (q || this.columns.records[k].pinned && l && (q = !0),
                    this.columns.records[k].hidden || this.columns.records[k].adaptivehidden || (m += this.columns.records[k].width),
                    m >= c && -1 == n && (n = k),
                    m > f + c) {
                        p = k;
                        break
                    }
            p++;
            p > g + h && (p = g + h);
            if (-1 == n || q)
                n = 0;
            return {
                start: n,
                end: p
            }
        },
        _getvirtualcolumnsindexes: function(c, f, g, h, k) {
            var l = this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling() || this._keydown;
            if (this.enableoptimization && (this.rowdetails || this.rtl || this.editcell && l || this.width && 0 <= this.width.toString().indexOf("%") && !l && !this.editcell || this.exporting) || this.rtl || this.editcell || this.exporting)
                return {
                    start: 0,
                    end: g + h
                };
            l = 0;
            var m = -1
              , n = g + h;
            if (this.autorowheight)
                return {
                    start: 0,
                    end: g + h
                };
            if (!k)
                for (k = 0; k < g + h; k++)
                    if (this.columns.records[k].hidden || this.columns.records[k].adaptivehidden || (l += this.columns.records[k].width),
                    l >= c && -1 == m && (m = k),
                    l > f + c) {
                        n = k;
                        break
                    }
            n++;
            n > g + h && (n = g + h);
            -1 == m && (m = 0);
            return {
                start: m,
                end: n
            }
        },
        _getfirstvisualrow: function() {
            var c = parseInt(this.vScrollInstance.value);
            0 == this._pagescache.length && (this.dataview.updateview(),
            this._loadrows());
            "visible" != this.vScrollBar[0].style.visibility && (c = 0);
            if (!this.pageable) {
                var f = this._findvisiblerow(c, this._pageviews);
                if (-1 == f)
                    return null;
                f != this.dataview.pagenum ? (this.dataview.pagenum = f,
                this.dataview.updateview(),
                this._loadrows()) : this._pagescache[this.dataview.pagenum] || this._loadrows()
            }
            c = this._findvisiblerow(c, this._pagescache[this.dataview.pagenum]);
            if ((f = this._pagescache[this.dataview.pagenum]) && f[0])
                return f[c]
        },
        _rendervisualrows: function() {
            if (this.virtualsizeinfo) {
                var c = this.vScrollInstance
                  , f = this.hScrollInstance
                  , g = f.value
                  , h = parseInt(c.value)
                  , k = parseInt(g)
                  , l = this._gettableheight()
                  , m = void 0 != this._hostwidth ? this._hostwidth : this.host.width();
                "visible" == this.hScrollBar[0].style.visibility && (l += 29);
                "deferred" == this.scrollmode && 0 != this._newmax && h > this._newmax && null != this._newmax && (h = this._newmax);
                var n = c.isScrolling() || f.isScrolling() || this._keydown
                  , p = this.groupable && 0 < this.groups.length;
                this.visiblerows = [];
                this.hittestinfo = [];
                this.editcell && void 0 == this.editrow && this._hidecelleditor(!1);
                void 0 != this.editrow && this._hideeditors();
                this.virtualmode && !this.pageable && (this._pagescache = []);
                0 == this._pagescache.length && (this.dataview.updateview(),
                this._loadrows());
                "hidden" == this.vScrollBar[0].style.visibility && (h = 0);
                this.pageable || (f = this._findvisiblerow(h, this._pageviews),
                -1 == f && (this._clearvisualrows(),
                this._renderemptyrow(),
                this._updaterowdetailsvisibility()),
                f != this.dataview.pagenum ? (this.dataview.pagenum = f,
                this.dataview.updateview(),
                this._loadrows()) : this._pagescache[this.dataview.pagenum] || this._loadrows());
                var q = this.groupable && 0 < this.groups.length ? this.groups.length : 0;
                if (this.columns.records) {
                    var t = this.columns.records.length - q;
                    f = this._findvisiblerow(h, this._pagescache[this.dataview.pagenum]);
                    var v = this._pagescache[this.dataview.pagenum]
                      , z = f;
                    0 > z && (z = 0);
                    var E = 0
                      , C = 0
                      , F = 0
                      , P = 0
                      , X = this.virtualsizeinfo.visiblerecords
                      , W = this.groupable ? this.groups.length : 0
                      , V = this.toTP("jqx-grid-cell") + " " + this.toTP("jqx-item");
                    this.rtl && (V += " " + this.toTP("jqx-grid-cell-rtl"));
                    (this.autoheight || this.autorowheight) && this.pageable && (!this.groupable || this.groupable && 0 === this.groups.length) && (X = this.dataview.pagesize);
                    p && (V = " " + this.toTP("jqx-grid-group-cell"));
                    this.isTouchDevice() && (V += " " + this.toTP("jqx-touch"));
                    this.autorowheight && (V += " jqx-grid-cell-wrap");
                    var ca = this.rowsheight;
                    this.cardview && (ca = this.cardheight);
                    var u = this._rendercell;
                    g = this._getvisualcolumnsindexes(k, m, q, t, p, !0);
                    f = g.start;
                    g = g.end;
                    var D = this._getvirtualcolumnsindexes(k, m, q, t, p)
                      , B = D.start
                      , H = D.end;
                    (this.autoheight || this.pageable) && this.autorowheight && this._pageviews[0] && (this._oldpageviewheight = this._pageviews[0].height);
                    this.autorowheight && (z = 0);
                    if (0 <= z) {
                        this._updaterowdetailsvisibility();
                        this._startboundindex = null != v ? v[z].bounddata.boundindex : 0;
                        this._startvisibleindex = null != v ? v[z].bounddata.visibleindex : 0;
                        var J = this.table[0].rows;
                        if (10 < this.columns.records.length && this.enablecolumnsvirtualization)
                            for (var K = function(ma) {
                                return ma && ma.parentNode && "#document-fragment" != ma.parentNode.nodeName ? !0 : !1
                            }, Q = 0; Q < J.length; Q++) {
                                D = J[Q];
                                D.className = "";
                                for (var Y = 0; Y < B; Y++) {
                                    var I = Y;
                                    if (!this.columns.records[I].pinned && null != this.columns.records[I].datafield) {
                                        var T = D.cells[I];
                                        K(T) && T.parentNode.removeChild(T);
                                        var Z = this.columns.records[I].element;
                                        this.columns.records[I]._rendered = !1;
                                        K(Z) && this.columnsrow[0].removeChild(Z);
                                        this.filterrow && K(this.filterrow[0].cells[I]) && this.columns.records[I].filterable && this.filterrow[0].cells[I].parentNode.removeChild(this.filterrow[0].cells[I])
                                    }
                                }
                                for (Y = H; Y < this.columns.records.length; Y++)
                                    I = Y,
                                    this.columns.records[I].pinned || null == this.columns.records[I].datafield || (T = D.cells[I],
                                    K(T) && T.parentNode.removeChild(T),
                                    Z = this.columns.records[I].element,
                                    this.columns.records[I]._rendered = !1,
                                    K(Z) && this.columnsrow[0].removeChild(Z),
                                    this.filterrow && K(this.filterrow[0].cells[I]) && this.columns.records[I].filterable && this.filterrow[0].cells[I].parentNode.removeChild(this.filterrow[0].cells[I]));
                                for (Y = B; Y < H; Y++)
                                    I = Y,
                                    T = D.cells[I],
                                    K(T) || D.appendChild(T),
                                    Z = this.columns.records[I].element,
                                    this.columns.records[I]._rendered = !0,
                                    Z.selectable && (T.removeAttribute("selected"),
                                    Z.selected && T.setAttribute("selected", "")),
                                    K(Z) || this.columnsrow[0].appendChild(Z),
                                    this.filterrow && this.showfilterrow && !K(this.filterrow[0].cells[I]) && this.columns.records[I].filterable && this.filterrow[0].firstChild.appendChild(this.filterrow[0].cells[I])
                            }
                        for (Q = 0; Q < X && C < X; Q += 1) {
                            H = void 0 != v ? v[z + Q] : null;
                            this.virtualmode && Q >= this.source.totalrecords && (H = null);
                            if (null == H) {
                                z = -Q;
                                if (this._pagescache[this.dataview.pagenum + 1])
                                    v = this._pagescache[this.dataview.pagenum + 1],
                                    this.dataview.pagenum++;
                                else {
                                    D = this._pageviews.length;
                                    do
                                        if (this.dataview.pagenum < this._pageviews.length - 1)
                                            this.dataview.pagenum++,
                                            v = void 0,
                                            0 < this._pageviews[this.dataview.pagenum].height && (this.dataview.updateview(),
                                            this._loadrows(),
                                            v = this._pagescache[this.dataview.pagenum]);
                                        else {
                                            v = void 0;
                                            break
                                        }
                                    while (void 0 == v && this.dataview.pagenum < D)
                                }
                                void 0 != v && (H = v[z + Q])
                            }
                            if (null != H) {
                                if (H.hidden)
                                    continue;
                                this._endboundindex = this._startboundindex + Q;
                                this._endvisibleindex = this._startvisibleindex + Q;
                                if (0 == Q) {
                                    var ra = Math.abs(h - H.top);
                                    this.table[0].style.top = -ra + "px";
                                    var ia = this.table;
                                    e.jqx.browser.chrome && (this._chromeTimer && clearTimeout(this._chromeTimer),
                                    this._chromeTimer = setTimeout(function() {
                                        ia[0].style.top = -ra + .01 + "px"
                                    }, 50));
                                    P = -ra
                                }
                                D = this.table[0].rows[C];
                                if (!D)
                                    continue;
                                parseInt(D.style.height) != H.height && (D.style.height = parseInt(H.height) + "px");
                                F += H.height;
                                J = this.rowdetails && H.rowdetails;
                                K = !H.rowdetailshidden;
                                J && K && (D.style.height = parseInt(H.height - H.rowdetailsheight) + "px",
                                X++);
                                B = this._isrowselected(!0, H);
                                for (Y = f; Y < g; Y++)
                                    I = Y,
                                    this._rendervisualcell(u, V, B, J, K, p, W, D, H, I, C, n);
                                void 0 != H.group && this._rendergroup && this._rendergroup(W, D, H, q, t, C, m);
                                if (this.autorowheight && (this.autoheight || this.pageable)) {
                                    ca = this.rowsheight;
                                    for (Y = f; Y < g; Y++)
                                        this.editable && this.editcell && this.editcell.column == this.columns.records[Y].datafield && this.editcell.row == this.getboundindex(H) && this.editcell.editor ? ca = Math.max(ca, this.editcell.editor.height()) : D.cells[Y].firstChild && (ca = Math.max(ca, 8 + parseInt(D.cells[Y].firstChild.offsetHeight)));
                                    D.style.height = parseInt(ca) + "px";
                                    this.heights[this._startboundindex + Q] = ca;
                                    J && K && (ca += H.rowdetailsheight);
                                    H.height = ca
                                }
                                if (this.cardview) {
                                    D.innerHTML = "";
                                    J = '<div class="jqx-grid-card-row"';
                                    K = "";
                                    J += 'style="grid-template-columns: ';
                                    Z = 100 / this.cardsize + "%";
                                    for (var la = 0; la < this.cardsize; la++)
                                        if (void 0 != v && (H = v[z + Q * this.cardsize + la]),
                                        H) {
                                            J += Z + " ";
                                            var aa = '<div id="' + H.bounddata.uid + '" class="jqx-grid-card-cell">';
                                            aa += "<table>";
                                            for (Y = f; Y < g; Y++)
                                                if (I = Y,
                                                T = null,
                                                B = this.columns.records[I],
                                                !B.hidden || void 0 !== B.__hidden) {
                                                    var U = this._getcellvalue(B, H);
                                                    "" != B.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(U) ? U = e.jqx.dataFormat.formatdate(U, B.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(U) && (U = e.jqx.dataFormat.formatnumber(U, B.cellsformat, this.gridlocalization)));
                                                    if (null != B.cellsrenderer) {
                                                        var fa = B.cellsrenderer(this.getboundindex(H), B.datafield, U, null, B.getcolumnproperties(), H.bounddata);
                                                        void 0 != fa && (U = fa)
                                                    }
                                                    T = D.cells[I];
                                                    fa = this.editable && B.editable ? '<span row="' + H.bounddata.uid + '"  class="jqx-icon-edit"></span>' : "";
                                                    aa += '<tr class="jqx-grid-card-table-row">';
                                                    aa += '<td class="jqx-grid-card-cell-label"><div>' + B.text + "</div></td>";
                                                    aa += '<td class="jqx-grid-card-cell-value"><div>' + U + "</div></td>";
                                                    aa += "</tr>"
                                                }
                                            aa += "</table>";
                                            aa += fa;
                                            aa += "</div>";
                                            K += aa
                                        }
                                    J += ';">' + K + "</div>";
                                    D.innerHTML += J;
                                    C++;
                                    continue
                                }
                                this.visiblerows[this.visiblerows.length] = H;
                                this.hittestinfo[this.hittestinfo.length] = {
                                    row: H,
                                    visualrow: D,
                                    details: !1
                                };
                                J && K && (C++,
                                D = this.table[0].rows[C],
                                this._renderrowdetails(V, D, H, q, t, C),
                                this.visiblerows[this.visiblerows.length] = H,
                                this.hittestinfo[this.hittestinfo.length] = {
                                    row: H,
                                    visualrow: D,
                                    details: !0
                                });
                                if (!this.autorowheight && F + P >= l)
                                    break
                            } else
                                this._clearvisualrow(k, p, C, q, t),
                                F + E + P <= l && (E += ca);
                            C++
                        }
                        this._horizontalvalue = k;
                        0 < E && "visible" == this.vScrollBar[0].style.visibility && (parseInt(this.table.css("top")),
                        k = this._pageviews[this._pageviews.length - 1],
                        h = c.max,
                        l = k.top + k.height - l,
                        "visible" == this.hScrollBar.css("visibility") && (l += this.scrollbarsize + 22),
                        h != l && !this.autorowheight && 0 <= l && ("deferred" != this.scrollmode ? (c.max = l,
                        c.setPosition(c.max)) : this._newmax != l && (this._newmax = l,
                        this._rendervisualrows())))
                    }
                    if ((this.autoheight || this.pageable) && this.autorowheight) {
                        this._pagescache = [];
                        for (Q = l = c = 0; Q < this.visiblerows.length; Q++)
                            for (h = this.visiblerows[Q],
                            h.top = c,
                            c += h.height,
                            l += h.height,
                            J = this.rowdetails && h.rowdetails,
                            K = !h.rowdetailshidden,
                            D = this.table[0].rows[Q],
                            J && K && Q++,
                            Y = f; Y < g; Y++)
                                B = this.columns.records[Y],
                                B.hidden || B.adaptivehidden || B.cellsrenderer || (T = D.cells[Y],
                                k = 0,
                                T.firstChild ? (k = (h.height - parseInt(T.firstChild.offsetHeight) - 8) / 2,
                                J && K && (k = (h.height - h.rowdetailsheight - e(T.firstChild).height() - 8) / 2)) : k = (h.height - parseInt(e(T).height()) - 8) / 2,
                                0 <= k && (k = parseInt(k) + 4,
                                !T.firstChild || -1 != T.firstChild.className.indexOf("jqx-grid-groups-row") || "checkbox" == B.columntype || "button" == B.columntype || this.editable && this.editcell && this.editcell.column == B.datafield && this.editcell.row == this.getboundindex(h) || (T.firstChild.style.marginTop = k + "px")));
                        this._pageviews[0] && (this._pageviews[0].height = l);
                        this._arrange()
                    }
                    this._renderemptyrow();
                    this.toCompile && 0 < this.toCompile.length && e.each(this.toCompile, function(ma, w) {
                        if (this.compiled)
                            return !0;
                        ma = this.cell;
                        if (!ma)
                            return !0;
                        e.jqx.angularCompile && e.jqx.angularCompile(ma, "<div>" + this.value + "</div>");
                        this.compiled = !0
                    })
                }
            }
        },
        _hideemptyrow: function() {
            if (this.showemptyrow && this.table && this.table[0].rows) {
                var c = this.table[0].rows[0];
                if (c)
                    for (var f = !1, g = 0; g < c.cells.length; g++) {
                        var h = e(c.cells[g]);
                        "none" == h.css("display") || f || h.width() != this.host.width() && h.text() != this.gridlocalization.emptydatastring || (h[0].checkbox = null,
                        h[0].button = null,
                        f = !0,
                        h[0].innerHTML = "")
                    }
            }
        },
        _renderemptyrow: function() {
            if (!this._loading && 0 == this.dataview.records.length && this.showemptyrow) {
                var c = !1
                  , f = this.toTP("jqx-grid-cell");
                if (this.table && 0 < this.table.length && this.table[0].rows && 0 < this.table[0].rows.length) {
                    var g = this.table[0].rows[0];
                    this.table[0].style.top = "0px";
                    for (var h = 0; h < g.cells.length; h++) {
                        var k = e(g.cells[h]);
                        if ("none" != k.css("display") && !c) {
                            k[0].checkbox = null;
                            k[0].button = null;
                            k[0].className = f;
                            c = !0;
                            k[0].innerHTML = "";
                            var l = e("<span style='white-space: nowrap; float: left; margin-left: 50%; position: relative;'></span>");
                            l.text(this.gridlocalization.emptydatastring);
                            k.append(l);
                            var m = 0;
                            this.oldhscroll || (m = parseInt(this.table[0].style.marginLeft),
                            this.rtl && (k.css("z-index", 999),
                            k.css("overflow", "visible")));
                            l.css("left", -m - l.width() / 2);
                            l.css("top", this._gettableheight() / 2 - l.height() / 2);
                            e.jqx.browser.msie && 8 > e.jqx.browser.version && (l.css("margin-left", "0px"),
                            l.css("left", this.host.width() / 2 - l.width() / 2));
                            l = Math.abs(parseInt(this.table[0].style.top));
                            isNaN(l) && (l = 0);
                            e(g).height(this._gettableheight() + l);
                            k.css("margin-left", "0px");
                            k.width(this.host.width());
                            this.table.width() < this.host.width() && this.table.width(this.host.width())
                        }
                        k.addClass(this.toThemeProperty("jqx-grid-empty-cell"))
                    }
                }
            }
        },
        _clearvisualrows: function() {
            var c = this.virtualsizeinfo.visiblerecords
              , f = parseInt(this.hScrollInstance.value)
              , g = this.groupable && 0 < this.groups.length;
            if (this.columns.records)
                for (var h = 0; h < c; h++)
                    this._clearvisualrow(f, g, h, 0, this.columns.records.length)
        },
        _iscellselected: function(c, f, g) {
            var h = !1
              , k = 0;
            this.virtualmode && this.pageable && this.groupable && 0 < this.groups.length && (k = this.dataview.pagesize * this.dataview.pagenum);
            if (0 < this.groups.length && this.pageable && this.groupable) {
                c = this.getrowboundindexbyid(f.bounddata.uid);
                if (-1 != c) {
                    for (var l in this.selectedcells)
                        l == c + "_" + g && (h = !0);
                    return h
                }
                return !1
            }
            if (c && null != f.bounddata)
                if ("singlerow" != this.selectionmode)
                    if (0 < this.dataview.filters.length)
                        if (this.virtualmode || void 0 == f.bounddata.dataindex)
                            for (l in this.selectedcells)
                                l == k + f.bounddata.boundindex + "_" + g && (h = !0);
                        else
                            for (l in this.selectedcells)
                                l == k + f.bounddata.dataindex + "_" + g && (h = !0);
                    else
                        for (l in this.selectedcells) {
                            if (l == k + f.bounddata.boundindex + "_" + g) {
                                h = !0;
                                break
                            }
                        }
                else if (0 < this.dataview.filters.length)
                    if (!this.virtualmode && void 0 != f.bounddata.dataindex)
                        for (l in this.selectedcells) {
                            if (l == k + f.bounddata.dataindex + "_" + g) {
                                h = !0;
                                break
                            }
                        }
                    else
                        for (l in this.selectedcells) {
                            if (l == k + f.bounddata.boundindex + "_" + g) {
                                h = !0;
                                break
                            }
                        }
                else
                    for (l in this.selectedcells)
                        if (l == k + f.bounddata.boundindex == this.selectedrowindex) {
                            h = !0;
                            break
                        }
            return h
        },
        _isrowselected: function(c, f) {
            var g = !1
              , h = 0;
            this.virtualmode && this.pageable && this.groupable && 0 < this.groups.length && (h = this.dataview.pagesize * this.dataview.pagenum);
            if (this.groupable && 0 < this.groups.length && this.pageable) {
                c = this.getrowboundindexbyid(f.bounddata.uid);
                if (void 0 == c || -1 == c)
                    return !1;
                -1 != this.selectedrowindexes.indexOf(c) && (g = !0);
                g || (g = c == this.selectedrowindex && -1 != this.selectedrowindex);
                return g
            }
            c && null != f.bounddata && ("singlerow" != this.selectionmode ? 0 < this.dataview.filters.length ? this.virtualmode || void 0 == f.bounddata.dataindex ? -1 != this.selectedrowindexes.indexOf(h + f.bounddata.boundindex) && (g = !0) : -1 != this.selectedrowindexes.indexOf(h + f.bounddata.dataindex) && (g = !0) : -1 != this.selectedrowindexes.indexOf(h + f.bounddata.boundindex) && (g = !0) : 0 < this.dataview.filters.length ? this.virtualmode || void 0 == f.bounddata.dataindex ? -1 != this.selectedrowindexes.indexOf(h + f.bounddata.boundindex) && (g = !0) : -1 != this.selectedrowindexes.indexOf(h + f.bounddata.dataindex) && (g = !0) : h + f.bounddata.boundindex == this.selectedrowindex && (g = !0));
            return g
        },
        _rendervisualcell: function(c, f, g, h, k, l, m, n, p, q, t, v) {
            var z = this.columns.records[q];
            if (z.hidden || z.adaptivehidden)
                t = n.cells[q],
                t.innerHTML = "";
            else {
                var E = this._getcellvalue(z, p);
                t = n.cells[q];
                -1 != this.selectionmode.indexOf("cell") && (g = 0 < this.dataview.filters.length ? this.selectedcells[p.bounddata.dataindex + "_" + z.datafield] ? !0 : !1 : this.selectedcells[p.boundindex + "_" + z.datafield] ? !0 : !1,
                this.editcell && this.editcell.row === p.boundindex && this.editcell.column === z.datafield && "checkbox" !== z.columntype && (g = !1),
                this.virtualmode || this.groupable && 0 < this.groups.length && this.pageable) && (g = this._iscellselected(!0, p, z.datafield));
                if ("" != z.cellclassname && z.cellclassname)
                    if ("string" == typeof z.cellclassname)
                        f += " " + z.cellclassname;
                    else {
                        this._columnClassNameCache || (this._columnClassNameCache = []);
                        var C = this.getboundindex(p);
                        if (void 0 !== this._columnClassNameCache[C + "_" + z.datafield + "_" + E] && this.enableoptimization) {
                            var F = this._columnClassNameCache[C + "_" + z.datafield + "_" + E];
                            F && (f += " " + F)
                        } else
                            (F = z.cellclassname(C, z.datafield, E, p.bounddata)) && (f += " " + F),
                            this._columnClassNameCache[C + "_" + z.datafield + "_" + E] = F
                    }
                C = this.showsortcolumnbackground && this.sortcolumn && z.displayfield == this.sortcolumn;
                if ("many" === this.sortmode && this.showsortcolumnbackground) {
                    F = this.getsortcolumns();
                    for (var P = 0; P < F.length; P++)
                        z.displayfield === F[P].dataField && (C = !0)
                }
                C && (f += " " + this.toTP("jqx-grid-cell-sort"));
                z.filter && this.showfiltercolumnbackground && (f += " " + this.toTP("jqx-grid-cell-filter"));
                p.bounddata.totalsrow && (f += " " + this.toTP("jqx-grid-cell-pinned"));
                if (z.pinned && this.showpinnedcolumnbackground || z.grouped)
                    l ? p.bounddata.totalsrow || (f += " " + this.toTP("jqx-grid-cell-pinned")) : f += " " + this.toTP("jqx-grid-cell-pinned");
                this.altrows && void 0 == p.group && (F = p.visibleindex,
                F >= this.altstart && 0 == (this.altstart + F) % (1 + this.altstep) && (f = C ? f + (" " + this.toTP("jqx-grid-cell-sort-alt")) : f + (" " + this.toTP("jqx-grid-cell-alt")),
                z.filter && this.showfiltercolumnbackground && (f += " " + this.toTP("jqx-grid-cell-filter-alt")),
                z.pinned && this.showpinnedcolumnbackground && (f += " " + this.toTP("jqx-grid-cell-pinned-alt"))));
                if (q <= m) {
                    if (l || this.rowdetails || this.pageable && this.virtualmode)
                        C = e(t),
                        F = this.columns.records[q].width,
                        t.style.width != parseInt(F) + "px" && C.width(F)
                } else
                    (l || this.rowdetails) && this._hiddencolumns && (C = e(t),
                    F = this.columns.records[q].width,
                    parseInt(t.style.width) != F && C.width(F));
                if (this.rowdetails && h && (k && !l ? f += " " + this.toTP("jqx-grid-details-cell") : l && (f += " " + this.toTP("jqx-grid-group-details-cell")),
                this.showrowdetailscolumn))
                    if (!this.rtl) {
                        if (void 0 == p.group && q == m && !p.bounddata.totalsrow) {
                            c = this.toThemeProperty("jqx-icon-arrow-down");
                            k ? f += " " + this.toTP("jqx-grid-group-expand") : (f += " " + this.toTP("jqx-grid-group-collapse"),
                            c = this.toThemeProperty("jqx-icon-arrow-right"));
                            f += " " + c;
                            t.title = "";
                            t.innerHTML = "";
                            t.className != f && (t.className = f);
                            return
                        }
                    } else if (void 0 == p.group && q == n.cells.length - m - 1) {
                        c = this.toThemeProperty("jqx-icon-arrow-down");
                        k ? f += " " + this.toTP("jqx-grid-group-expand-rtl") : (f += " " + this.toTP("jqx-grid-group-collapse-rtl"),
                        c = this.toThemeProperty("jqx-icon-arrow-left"));
                        f += " " + c;
                        t.title = "";
                        t.innerHTML = "";
                        t.className != f && (t.className = f);
                        return
                    }
                g && q >= m && (f += " " + this.toTP("jqx-grid-cell-selected"),
                f += " " + this.toTP("jqx-fill-state-pressed"));
                t.className != f && (t.className = f);
                z._applyCellStyle(t);
                void 0 != p.group ? (t.title = "",
                t.innerHTML = "") : c(this, z, p, E, t, v)
            }
        },
        _rendercell: function(c, f, g, h, k, l) {
            var m = h + "_" + f.visibleindex;
            if ("number" == f.columntype || null != f.cellsrenderer)
                m = g.uniqueid + "_" + f.visibleindex;
            "number" == f.columntype && (h = g.visibleindex);
            "adaptive" === f.columntype && (h = "...");
            f._applyCellStyle(k);
            k.style.borderBottomColor = c.showrowlines ? "" : "transparent";
            c.showcolumnheaderlines ? (f.element.style.borderRightColor = "",
            f.element.style.boxShadow = "") : (f.element.style.borderRightColor = "transparent",
            f.element.style.boxShadow = "none");
            k.style.borderRightColor = c.showcolumnlines ? "" : "transparent";
            if (c.editcell && void 0 == c.editrow)
                if ("selectedrow" == c.editmode && f.editable && c.editable) {
                    if (c.editcell.row == c.getboundindex(g) && c._showcelleditor) {
                        c.hScrollInstance.isScrolling() || c.vScrollInstance.isScrolling() ? c._showcelleditor(c.editcell.row, f, k, !1, !1) : c._showcelleditor(c.editcell.row, f, k, c.editcell.init);
                        k.className += " " + c.toTP("jqx-grid-cell-edit");
                        return
                    }
                } else if (c.editcell.row == c.getboundindex(g) && c.editcell.column == f.datafield && (c.editcell.element = k,
                c.editcell.editing && c._showcelleditor)) {
                    c.hScrollInstance.isScrolling() || c.vScrollInstance.isScrolling() ? c._showcelleditor(c.editcell.row, f, c.editcell.element, c.editcell.init, !1) : c._showcelleditor(c.editcell.row, f, c.editcell.element, c.editcell.init);
                    k.className += " " + c.toTP("jqx-grid-cell-edit");
                    return
                }
            var n = c._defaultcellsrenderer(h, f)
              , p = c._cellscache[m];
            if (p) {
                if ("checkbox" == f.columntype) {
                    if (c.host.jqxCheckBox) {
                        "" === h && (h = null);
                        m = 0 == k.innerHTML.toString().length;
                        !k.checkbox || c.groupable || m ? c._rendercheckboxcell(c, k, f, g, h) : (k.checkboxrow = c.getboundindex(g),
                        "" == h && (h = !1),
                        "1" == h && (h = !0),
                        "0" == h && (h = !1),
                        1 == h && (h = !0),
                        0 == h && (h = !1),
                        "true" == h && (h = !0),
                        "false" == h && (h = !1),
                        null != h || f.threestatecheckbox || (h = !1),
                        f.checkboxcolumn && (h = !1,
                        0 < c.dataview.filters.length && !c.virtualmode && void 0 != g.bounddata.dataindex ? -1 != c.selectedrowindexes.indexOf(g.bounddata.dataindex) && (h = !0) : -1 != c.selectedrowindexes.indexOf(g.bounddata.boundindex) && (h = !0)),
                        c.disabled || (k.checkboxinstance ? k.checkboxinstance._setState(h) : k.checkbox.jqxCheckBox("_setState", h)));
                        null != f.cellsrenderer && (c = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata),
                        void 0 != c && (k.innerHTML = c));
                        return
                    }
                } else if ("button" == f.columntype) {
                    if (c.host.jqxButton) {
                        "" == h && (h = !1);
                        null != f.cellsrenderer && (h = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata));
                        "" == k.innerHTML && (k.buttonrow = c.getboundindex(g),
                        k.button = null,
                        c._renderbuttoncell(c, k, f, g, h));
                        k.button && !c.groupable ? (k.buttonrow = c.getboundindex(g),
                        k.button.val(h)) : c._renderbuttoncell(c, k, f, g, h);
                        return
                    }
                } else if (("progressbar" == f.columntype || "rating" === f.columntype) && c.host.jqxButton) {
                    "" == h && (h = !1);
                    null != f.cellsrenderer && (h = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata));
                    "" == k.innerHTML && (k.progressrow = c.getboundindex(g),
                    k.progress = null,
                    c._renderprogresscell(c, k, f, g, h));
                    k.progress && !c.groupable ? (k.progressrow = c.getboundindex(g),
                    k.progress.val(h)) : c._renderprogresscell(c, k, f, g, h);
                    return
                }
                if (f.createwidget)
                    if ("" == k.innerHTML && (k.widgetrow = c.getboundindex(g),
                    k.widget = null,
                    f.widget = null,
                    c._renderwidgetcell(c, k, f, g, h)),
                    k.widget && !c.groupable)
                        if (k.widgetrow = c.getboundindex(g),
                        f.initwidget)
                            f.initwidget(c.getboundindex(g), f.datafield, h, k.firstChild);
                        else
                            throw Error("jqxGrid: 'initwidget' column function is not implemented. Please, implement 'initwidget'");
                    else
                        c._renderwidgetcell(c, k, f, g, h);
                else {
                    var q = p.element;
                    null != f.cellsrenderer || k.childNodes && 0 == k.childNodes.length || c.groupable || c.rowdetails ? k.innerHTML != q && (k.innerHTML = q) : 0 <= k.innerHTML.indexOf("editor") ? k.innerHTML = q : l ? (h = q.indexOf(">"),
                    n = q.indexOf("</"),
                    n = q.substring(h + 1, n),
                    h = k.childNodes[0],
                    0 <= n.indexOf(">") ? k.innerHTML = q : h.childNodes[0] ? n != h.childNodes[0].nodeValue && (0 <= n.indexOf("&") ? k.innerHTML = q : h.childNodes[0].nodeValue = n) : (q = document.createTextNode(n),
                    h.appendChild(q))) : k.innerHTML != q && (k.innerHTML = q);
                    c.enabletooltips && f.enabletooltips && (k.title = p.title)
                }
            } else if ("checkbox" == f.columntype)
                c._rendercheckboxcell(c, k, f, g, h),
                c._cellscache[m] = {
                    element: "",
                    title: h
                },
                c.enabletooltips && f.enabletooltips && (k.title = "" + h);
            else if ("button" == f.columntype)
                null != f.cellsrenderer && (h = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata)),
                c._renderbuttoncell(c, k, f, g, h),
                c._cellscache[m] = {
                    element: "",
                    title: h
                },
                c.enabletooltips && f.enabletooltips && (k.title = "" + h);
            else if ("progressbar" == f.columntype || "rating" === f.columntype)
                null != f.cellsrenderer && (h = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata)),
                c._renderprogresscell(c, k, f, g, h),
                c._cellscache[m] = {
                    element: "",
                    title: h
                },
                c.enabletooltips && f.enabletooltips && (k.title = "" + h);
            else if ("number" == f.columntype && (h = g.visibleindex),
            f.createwidget)
                null != f.cellsrenderer && (h = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata)),
                c._renderwidgetcell(c, k, f, g, h),
                c._cellscache[m] = {
                    element: "",
                    title: h
                },
                c.enabletooltips && f.enabletooltips && (k.title = h);
            else {
                if (null != f.cellsrenderer) {
                    if (c._columnCellsRenderCache || (c._columnCellsRenderCache = []),
                    p = c.getboundindex(g),
                    void 0 !== c._columnCellsRenderCache[p + "_" + f.datafield + "_" + h] && c.enableoptimization ? q = c._columnCellsRenderCache[p + "_" + f.datafield + "_" + h] : (q = f.cellsrenderer(c.getboundindex(g), f.datafield, h, n, f.getcolumnproperties(), g.bounddata),
                    c._columnCellsRenderCache[p + "_" + f.datafield + "_" + h] = q),
                    q && (0 <= q.indexOf("<jqx-") || 0 <= q.indexOf(" ng-"))) {
                        c.toCompile && c.toCompile.push({
                            cell: k,
                            value: q,
                            row: c.getboundindex(g)
                        });
                        return
                    }
                } else
                    q = n;
                null == q && (q = n);
                p = h;
                c.enabletooltips && f.enabletooltips && ("" != f.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(h) ? p = e.jqx.dataFormat.formatdate(p, f.cellsformat, c.gridlocalization) : e.jqx.dataFormat.isNumber(h) && (p = e.jqx.dataFormat.formatnumber(p, f.cellsformat, c.gridlocalization))),
                k.title = p);
                c.WinJS ? e(k).html(q) : (g = k.innerHTML,
                0 <= g.indexOf("editor") || null != f.cellsrenderer || c.groupable || c.virtualmode ? k.innerHTML = q : 0 < g.length ? (h = q.indexOf(">"),
                n = q.indexOf("</"),
                n = q.substring(h + 1, n),
                h = k.childNodes[0],
                0 <= n.indexOf(">") ? k.innerHTML = q : h.childNodes[0] ? n != h.childNodes[0].nodeValue && (0 <= n.indexOf("&") || 0 <= g.indexOf("span") ? k.innerHTML = q : h.childNodes[0].nodeValue = n) : (q = document.createTextNode(n),
                h.appendChild(q))) : g != q && (k.innerHTML = q));
                c._cellscache[m] = {
                    element: k.innerHTML,
                    title: p
                };
                return !0
            }
        },
        _isIE10: function() {
            if (void 0 == this._browser) {
                var c = e.jqx.utilities.getBrowser();
                "msie" == c.browser && 9 < parseInt(c.version) ? this._browser = !0 : (this._browser = !1,
                "msie" == c.browser && (c = "Browser CodeName: " + navigator.appCodeName,
                c += "Browser Name: " + navigator.appName,
                c += "Browser Version: " + navigator.appVersion,
                c += "Platform: " + navigator.platform,
                c += "User-agent header: " + navigator.userAgent,
                -1 != c.indexOf("Zune 4.7") && (this._browser = !0)))
            }
            return this._browser
        },
        _renderinlinecell: function(c, f, g, h, k) {
            e(f);
            f.innerHTML = '<div style="position: absolute;"></div>'
        },
        _rendercheckboxcell: function(c, f, g, h, k) {
            if (c.host.jqxCheckBox) {
                var l = e(f);
                "" === k && (k = g.threestatecheckbox ? null : !1);
                null !== k || g.threestatecheckbox || (k = !1);
                "1" == k && (k = !0);
                "0" == k && (k = !1);
                1 == k && (k = !0);
                0 == k && (k = !1);
                "true" == k && (k = !0);
                "false" == k && (k = !1);
                if (g.checkboxcolumn) {
                    k = !1;
                    var m = this.getboundindex(h);
                    -1 != this.selectedrowindexes.indexOf(m) && (k = !0)
                }
                0 == l.find(".jqx-checkbox").length ? (f.innerHTML = '<div style="position: absolute; top: 50%; left: 50%; margin-top: -9px; margin-left: -12px;"></div>',
                e(f.firstChild).jqxCheckBox({
                    disabled: c.disabled,
                    _canFocus: !1,
                    hasInput: !1,
                    hasThreeStates: g.threestatecheckbox,
                    enableContainerClick: !1,
                    animationShowDelay: 0,
                    animationHideDelay: 0,
                    locked: !0,
                    theme: c.theme,
                    checked: k
                }),
                this.enabletooltips && g.enabletooltips && (f.title = "" + k),
                this.editable && g.editable && e(f.firstChild).jqxCheckBox({
                    locked: !1
                }),
                g.checkboxcolumn && e(f.firstChild).jqxCheckBox({
                    locked: !1
                }),
                f.checkbox = e(f.firstChild),
                f.checkboxinstance = f.checkbox.data().jqxCheckBox.instance,
                f.checkboxrow = this.getboundindex(h),
                e.data(f.firstChild, "jqxCheckBox").instance.updated = function(n, p, q) {
                    if (c.disabled) {
                        p = q;
                        n = c.table[0].rows.length;
                        for (var t = c._getcolumnindex(g.datafield), v = 0; v < n; v++) {
                            var z = c.table[0].rows[v].cells[t].firstChild;
                            z && e(z).jqxCheckBox({
                                disabled: c.disabled
                            })
                        }
                    }
                    if (g.editable && !c.disabled) {
                        if (n = c.table[0].rows.length,
                        t = c._getcolumnindex(g.datafield),
                        void 0 == c.editrow)
                            if (g.cellbeginedit && 0 == g.cellbeginedit(f.checkboxrow, g.datafield, g.columntype, !p))
                                c.setcellvalue(f.checkboxrow, g.datafield, !p, !0);
                            else {
                                g.cellvaluechanging && (v = g.cellvaluechanging(f.checkboxrow, g.datafield, g.columntype, q, p),
                                void 0 != v && (p = v));
                                if ("selectedrow" !== c.editmode)
                                    for (v = 0; v < n; v++)
                                        (z = c.table[0].rows[v].cells[t].firstChild) && e(z).jqxCheckBox("destroy");
                                c.editcell && 0 == c.editcell.validated ? c.setcellvalue(f.checkboxrow, g.datafield, !p, !0) : "selectedrow" !== c.editmode || null == c.editcell ? (n = c.getrowdata(f.checkboxrow),
                                c._raiseEvent(17, {
                                    rowindex: f.checkboxrow,
                                    row: n,
                                    datafield: g.datafield,
                                    value: q,
                                    columntype: g.columntype
                                }),
                                c.pushToHistory = !0,
                                c.setcellvalue(f.checkboxrow, g.datafield, p, !0),
                                c.pushToHistory = !1,
                                c._raiseEvent(18, {
                                    rowindex: f.checkboxrow,
                                    row: n,
                                    datafield: g.datafield,
                                    oldvalue: q,
                                    value: p,
                                    columntype: g.columntype
                                })) : (c.pushToHistory = !0,
                                c.setcellvalue(f.checkboxrow, g.datafield, p, !1, !1),
                                c.pushToHistory = !1);
                                g.cellendedit && g.cellendedit(f.checkboxrow, g.datafield, g.columntype, p)
                            }
                    } else
                        g.checkboxcolumn && (c.editcell && c.endcelledit(c.editcell.row, c.editcell.column, !1, !0),
                        c.disabled || (p ? c.selectrow(f.checkboxrow) : c.unselectrow(f.checkboxrow),
                        c.autosavestate && c.savestate && c.savestate()))
                }
                ) : (f.checkboxrow = this.getboundindex(h),
                e(f.firstChild).jqxCheckBox("_setState", k, !(this.editable && g.editable) && !g.checkboxcolumn))
            }
        },
        _renderwidgetcell: function(c, f, g, h, k) {
            0 == e(f).find(".jqx-grid-widget").length ? (f.innerHTML = '<div class="jqx-grid-widget" style="opacity: 0.99; position: absolute; width: 100%; height:100%; top: 0%; left: 0%; padding: 0px;"></div>',
            g.createwidget(h, g.datafield, k, f.firstChild),
            e(f.firstChild).attr("hideFocus", "true"),
            e(f.firstChild).children().addClass("jqx-grid-widget"),
            f.widget = e(f.firstChild),
            f.widgetrow = c.getboundindex(h),
            g.widget = e(f.firstChild)) : (g.initwidget(c.getboundindex(h), g.datafield, k, f.firstChild),
            f.widgetrow = c.getboundindex(h),
            e(f.firstChild).val(k))
        },
        _renderprogresscell: function(c, f, g, h, k) {
            var l = e(f);
            if ("rating" === g.columntype) {
                c._linkadded || (h = document.createElement("link"),
                h.rel = "stylesheet",
                h.href = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css",
                document.head.appendChild(h),
                c._linkadded = !0);
                g.ratingmax || (g.ratingmax = 5);
                c = "";
                for (h = 0; h < g.ratingmax; h++)
                    c = k >= h + 1 ? c + '<span style="color: rgba(255, 165, 0, 1);" class="fa fa-star checked"></span>' : c + '<span style="color: rgba(255, 165, 0, .3);" class="fa fa-star"></span>';
                g = g.cellsalign;
                "right" === g && (g = "flex-end");
                f.innerHTML = '<div style="display: flex; width: 100%; height: 100%; justify-content: ' + g + '; padding: 5px; box-sizing: border-box; font-size: 16px; align-items: center;">' + c + "</div>"
            } else
                "" == k && (k = !1),
                0 == l.find(".jqx-progress").length ? (f.innerHTML = '<progress class="jqx-progress" max="100" style="opacity: 0.99; position: absolute; top: 10%; left: 10%; width:80%; height:80%; padding: 0px;"/>',
                e(f.firstChild).val(k),
                f.progress = e(f.firstChild),
                f.progressrow = c.getboundindex(h)) : (f.progressrow = c.getboundindex(h),
                e(f.firstChild).val(k))
        },
        _renderbuttoncell: function(c, f, g, h, k) {
            if (c.host.jqxButton) {
                var l = e(f);
                "" == k && (k = !1);
                0 == l.find(".jqx-button").length ? (f.innerHTML = '<input type="button" style="opacity: 0.99; position: absolute; top: 0%; left: 0%; padding: 0px; margin-top: 2px; margin-left: 2px;"/>',
                e(f.firstChild).val(k),
                e(f.firstChild).attr("hideFocus", "true"),
                e(f.firstChild).jqxButton({
                    disabled: c.disabled,
                    theme: c.theme,
                    height: c.rowsheight - 4,
                    width: g.width - 4
                }),
                f.button = e(f.firstChild),
                f.buttonrow = c.getboundindex(h),
                this.isTouchDevice() ? (h = e.jqx.mobile.getTouchEventName("touchend"),
                c.addHandler(e(f.firstChild), h, function(m) {
                    g.buttonclick && g.buttonclick(f.buttonrow, m)
                })) : c.addHandler(e(f.firstChild), "click", function(m) {
                    g.buttonclick && g.buttonclick(f.buttonrow, m)
                })) : (f.buttonrow = c.getboundindex(h),
                e(f.firstChild).val(k))
            }
        },
        _clearvisualrow: function(c, f, g, h, k) {
            var l = this.toTP("jqx-grid-cell");
            f && (l = " " + this.toTP("jqx-grid-group-cell"));
            l += " " + this.toTP("jqx-grid-cleared-cell");
            f = this.table[0].rows;
            for (var m = 0; m < h + k; m++)
                if (f[g]) {
                    var n = f[g].cells[m];
                    n.className != l && (n.className = l);
                    var p = this.columns.records[m];
                    this._horizontalvalue == c || p.pinned || 1 != this.oldhscroll || (n.style.marginLeft = -c + "px");
                    var q = p.width;
                    p.adaptivewidth && (q = p.adaptivewidth);
                    q < p.minwidth && (q = p.minwidth);
                    q > p.maxwidth && (q = p.maxwidth);
                    parseInt(n.style.width) != q && ("auto" != q ? e(n)[0].style.width = q + "px" : e(n)[0].style.width = q);
                    "" != n.title && (n.title = "");
                    "" != n.innerHTML && (n.innerHTML = "")
                }
            f[g] && (c = this.rowsheight,
            this.cardview && (c = this.cardheight),
            parseInt(f[g].style.height) != c && (f[g].style.height = parseInt(c) + "px"))
        },
        _findgroupstate: function(c) {
            c = this._findgroup(c);
            return null == c ? !1 : c.expanded
        },
        _findgroup: function(c) {
            return this.expandedgroups[c] ? this.expandedgroups[c] : null
        },
        _clearcaches: function() {
            this._columnsbydatafield = [];
            this._pagescache = [];
            this._pageviews = [];
            this._cellscache = [];
            this._columnClassNameCache = [];
            this._columnCellsRenderCache = [];
            this.heights = [];
            this.hiddens = [];
            this.hiddenboundrows = [];
            this.heightboundrows = [];
            this.detailboundrows = [];
            this.details = [];
            this.expandedgroups = [];
            this._rowdetailscache = [];
            this._rowdetailselementscache = [];
            e.jqx.dataFormat && e.jqx.dataFormat.cleardatescache();
            this.tableheight = null
        },
        _getColumnText: function(c) {
            void 0 == this._columnsbydatafield && (this._columnsbydatafield = []);
            if (this._columnsbydatafield[c])
                return this._columnsbydatafield[c];
            var f = c
              , g = null;
            e.each(this.columns.records, function() {
                if (this.datafield == c || this.displayfield == c)
                    return f = this.text,
                    g = this,
                    !1
            });
            this._columnsbydatafield[c] = {
                label: f,
                column: g
            };
            return this._columnsbydatafield[c]
        },
        _getcolumnbydatafield: function(c) {
            void 0 == this.__columnsbydatafield && (this.__columnsbydatafield = []);
            if (this.__columnsbydatafield[c])
                return this.__columnsbydatafield[c];
            var f = null;
            e.each(this.columns.records, function() {
                if (this.datafield == c || this.displayfield == c)
                    return f = this,
                    !1
            });
            this.__columnsbydatafield[c] = f;
            return this.__columnsbydatafield[c]
        },
        isscrollingvertically: function() {
            return this.vScrollBar.jqxScrollBar("isScrolling")
        },
        _renderrowdetails: function(c, f, g, h, k, l) {
            if (void 0 != f) {
                var m = e(f);
                l = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                if (this.groupable && 0 < this.groups.length)
                    for (var n = 0; n <= k; n++) {
                        var p = e(f.cells[n]);
                        p[0].innerHTML = "";
                        p[0].className = "jqx-grid-details-cell"
                    }
                p = e(f.cells[0]);
                if ("none" == p[0].style.display) {
                    p = f.cells[0];
                    for (n = 2; void 0 != p && "none" == p.style.display && 10 > n; )
                        p = f.cells[0 + n - 1],
                        n++;
                    p = e(p)
                }
                if (this.rtl)
                    for (; h < k; h++)
                        f.cells[h].innerHTML = "",
                        f.cells[h].className = "jqx-grid-details-cell";
                p.css("width", "100%");
                m.height(g.rowdetailsheight);
                p[0].className = c;
                c = this.getboundindex(g);
                k = c + "_";
                this._rowdetailscache[k] ? (f = this._rowdetailscache[k].html,
                this.initrowdetails ? this._rowdetailscache[k].element && (f = this._rowdetailscache[k].element,
                p = p.coord(),
                h = this.gridcontent.coord(),
                g = parseInt(p.top) - parseInt(h.top),
                p = parseInt(p.left) - parseInt(h.left),
                this.rtl && (p = 0),
                e(f).css("top", g),
                e(f).css("left", p),
                e(f).css("display", "block"),
                e(f).width(this.host.width() - l),
                this.layoutrowdetails && this.layoutrowdetails(c, f, this.element, this.getrowdata(c))) : p[0].innerHTML = f) : (p[0].innerHTML = "",
                this.enablerowdetailsindent || (l = 0),
                h = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: ' + l + 'px;">' + g.rowdetails + "</div>",
                this.rtl && (h = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: 0px; margin-right: ' + l + 'px;">' + g.rowdetails + "</div>"),
                this._rowdetailscache[k] = {
                    id: f.id,
                    html: h
                },
                this.initrowdetails ? (f = e(h)[0],
                e(this.gridcontent).prepend(e(f)),
                e(f).css("position", "absolute"),
                e(f).width(this.host.width() - l),
                e(f).height(p.height()),
                p.coord(),
                e(f).css("z-index", 1799),
                this.isTouchDevice() && e(f).css("z-index", 1999),
                e(f).addClass(this.toThemeProperty("jqx-widget-content")),
                p = p.coord(),
                h = this.gridcontent.coord(),
                g = parseInt(p.top) - parseInt(h.top),
                p = parseInt(p.left) - parseInt(h.left),
                e(f).css("top", g),
                e(f).css("left", p),
                this.content[0].scrollTop = 0,
                this.content[0].scrollLeft = 0,
                l = e(e(f).children()[0]),
                "" != l[0].id && (l[0].id += c),
                this.initrowdetails(c, f, this.element, this.getrowdata(c)),
                this._rowdetailscache[k].element = f,
                this._rowdetailselementscache[c] = f) : p[0].innerHTML = h)
            }
        },
        _defaultcellsrenderer: function(c, f) {
            "" != f.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(c) ? c = e.jqx.dataFormat.formatdate(c, f.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(c) && (c = e.jqx.dataFormat.formatnumber(c, f.cellsformat, this.gridlocalization)));
            var g = "8px";
            31 != this.rowsheight && (g = this.rowsheight / 2 - this._cellheight / 2,
            0 > g && (g = 4),
            g += "px");
            if (this.enableellipsis) {
                if ("center" == f.cellsalign || "middle" == f.cellsalign)
                    return '<div class="jqx-grid-cell-middle-align" style="margin-top: ' + g + ';">' + c + "</div>";
                if ("left" == f.cellsalign)
                    return '<div class="jqx-grid-cell-left-align" style="margin-top: ' + g + ';">' + c + "</div>";
                if ("right" == f.cellsalign)
                    return '<div class="jqx-grid-cell-right-align" style="margin-top: ' + g + ';">' + c + "</div>"
            }
            return "center" == f.cellsalign || "middle" == f.cellsalign ? '<div style="text-align: center; margin-top: ' + g + ';">' + c + "</div>" : '<span style="margin-left: 4px; margin-right: 2px; margin-top: ' + g + "; float: " + f.cellsalign + ';">' + c + "</span>"
        },
        getcelltext: function(c, f) {
            if (null == c || null == f)
                return null;
            c = this.getcellvalue(c, f);
            (f = this.getcolumn(f)) && "" != f.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(c) ? c = e.jqx.dataFormat.formatdate(c, f.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(c) && (c = e.jqx.dataFormat.formatnumber(c, f.cellsformat, this.gridlocalization)));
            return c
        },
        getcelltextbyid: function(c, f) {
            if (null == c || null == f)
                return null;
            c = this.getcellvaluebyid(c, f);
            (f = this.getcolumn(f)) && "" != f.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(c) ? c = e.jqx.dataFormat.formatdate(c, f.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(c) && (c = e.jqx.dataFormat.formatnumber(c, f.cellsformat, this.gridlocalization)));
            return c
        },
        _getcellvalue: function(c, f) {
            var g = f.bounddata[c.datafield];
            null != c.displayfield && (g = f.bounddata[c.displayfield]);
            null == g && (g = "");
            return g
        },
        getcell: function(c, f) {
            if (null == c || null == f)
                return null;
            var g = parseInt(c)
              , h = c
              , k = "";
            isNaN(g) || (h = this.getrowdata(g));
            null != h && (k = h[f]);
            return this._getcellresult(k, c, f)
        },
        getrenderedcell: function(c, f) {
            if (null == c || null == f)
                return null;
            var g = parseInt(c)
              , h = c
              , k = "";
            isNaN(g) || (h = this.getrenderedrowdata(g));
            null != h && (k = h[f]);
            return this._getcellresult(k, c, f)
        },
        _getcellresult: function(c, f, g) {
            var h = this.getcolumn(g);
            if (null == h || void 0 == h)
                return null;
            var k = h.getcolumnproperties();
            h = k.hidden;
            var l = k.width
              , m = k.pinned
              , n = k.cellsalign;
            k = k.cellsformat;
            var p = this.getrowheight(f);
            return 0 == p ? null : {
                value: c,
                row: f,
                column: g,
                datafield: g,
                width: l,
                height: p,
                hidden: h,
                pinned: m,
                align: n,
                format: k
            }
        },
        setcellvaluebyid: function(c, f, g, h, k) {
            c = this.getrowboundindexbyid(c);
            return this.setcellvalue(c, f, g, h, k)
        },
        getcellvaluebyid: function(c, f) {
            c = this.getrowboundindexbyid(c);
            return this.getcellvalue(c, f)
        },
        setcellvalue: function(c, f, g, h, k) {
            if (null == c || null == f)
                return !1;
            var l = parseInt(c);
            this._columnClassNameCache = [];
            var m = c;
            isNaN(l) || (m = this.getrowdata(l));
            var n = !1;
            this.filterable && this._initfilterpanel && this.dataview.filters.length && (n = !0);
            this.virtualmode && (this._pagescache = []);
            this.sortcache && (this.sortcache = {});
            var p = ""
              , q = "";
            if (null != m && m[f] !== g) {
                if (null === m[f] && "" === g)
                    return;
                var t = this._getcolumnbydatafield(f)
                  , v = "string";
                this.source || (this.source = new e.jqx.dataAdapter({}));
                var z = this.source.datafields || (this.source._source ? this.source._source.datafields : null);
                if (z) {
                    var E = "";
                    e.each(z, function() {
                        if (this.name == t.displayfield)
                            return this.type && (E = this.type),
                            !1
                    });
                    E && (v = E);
                    q = m[t.displayfield]
                }
                p = m[f];
                this.pushToHistory && (this._undoRedoIndex = -1,
                this._undoRedo.push({
                    action: "setcellvalue",
                    data: {
                        oldvalue: p,
                        value: g,
                        datafield: f,
                        row: c
                    }
                }));
                if (!t.nullable || null != g && "" !== g && t.nullable && void 0 === g.label)
                    if (e.jqx.dataFormat.isNumber(p) || "number" == v || "float" == v || "int" == v || "decimal" == v && "date" != v ? (this.gridlocalization && "," == this.gridlocalization.decimalseparator && g && g.indexOf && 0 <= g.indexOf(",") && (g = g.replace(",", ".")),
                    g = new Number(g),
                    g = parseFloat(g),
                    isNaN(g) && (g = 0)) : !e.jqx.dataFormat.isDate(p) && "date" != v || "" == g || (z = new Date(g),
                    "Invalid Date" != z && null != z ? g = z : "Invalid Date" == z && (g = z = e.jqx.dataFormat.parsedate(g, t.cellsformat))),
                    m[f] === g) {
                        this._updating || 0 == h || this._renderrows(this.virtualsizeinfo);
                        return
                    }
                z = this.source && this.source._source.localdata && "observableArray" === this.source._source.localdata.name;
                m[f] = g;
                if (z) {
                    var C = this.source._source.localdata;
                    C._updating || (C._updating = !0,
                    C[c][f] = g,
                    C._updating = !1)
                }
                v = this.getrenderedrowdata(l, !0);
                if (!v)
                    return;
                v[f] = g;
                null != g && null != g.label && (t = this._getcolumnbydatafield(f),
                m[t.displayfield] = g.label,
                v[t.displayfield] = g.label,
                m[f] = g.value,
                v[f] = g.value,
                z && !C._updating && (C._updating = !0,
                C[c][f] = g.value,
                C[c][t.displayfield] = g.label,
                C._updating = !1));
                n && void 0 != m.dataindex && (this.dataview.cachedrecords[m.dataindex][f] = g,
                null != g && void 0 != g.label && (this.dataview.cachedrecords[m.dataindex][f] = g.value,
                this.dataview.cachedrecords[m.dataindex][t.displayfield] = g.label))
            } else
                return this._updating || 0 == h || this._renderrows(this.virtualsizeinfo),
                !1;
            if (this.source && this.source._knockoutdatasource && !this._updateFromAdapter && this.autokoupdates && this.source._source._localdata) {
                C = l;
                n && void 0 != m.dataindex && (C = m.dataindex);
                C = this.source._source._localdata()[C];
                this.source.suspendKO = !0;
                if (C[f] && C[f].subscribe)
                    if (null != g && null != g.label)
                        C[t.displayfield](g.label),
                        C[f](g.value);
                    else
                        C[f](g);
                else {
                    z = this.source._source.datafields;
                    var F = null;
                    z && e.each(z, function() {
                        if (this.name == f)
                            return F = this.map,
                            !1
                    });
                    if (null == F)
                        null != g && null != g.label ? (C[f] = g.value,
                        C[t.displayfield] = g.label) : C[f] = g;
                    else if (z = F.split(this.source.mapChar),
                    0 < z.length) {
                        v = C;
                        for (var P = 0; P < z.length - 1; P++)
                            v = v[z[P]];
                        v[z[z.length - 1]] = g
                    }
                    this.source._source._localdata.replace(C, e.extend({}, C))
                }
                this.source.suspendKO = !1
            }
            if (this.sortcolumn && this.dataview.sortby && !this._updating)
                if (C = this.getsortinformation(),
                this.sortcolumn == f && "many" !== this.sortmode)
                    this.dataview.clearsortdata(),
                    this.dataview.sortby(C.sortcolumn, C.sortdirection.ascending);
                else {
                    if ("many" === this.sortmode)
                        for (C = this.getsortcolumns(),
                        this.dataview.clearsortdata(),
                        this.sortby(null),
                        z = 0; z < C.length; z++)
                            this.sortby(C[z].dataField, C[z].ascending)
                }
            else
                this._updating || this.dataview.sortby && this.dataview.sortcache[f] && (this.dataview.sortcache[f] = null);
            this._cellscache = [];
            this._pagescache = [];
            if (this.source.updaterow && (void 0 == k || 1 == k)) {
                k = !1;
                var X = this.that;
                C = function(V) {
                    0 == V && (X.setcellvalue(c, f, p, !0, !1),
                    p != q && X.setcellvalue(c, X.getcolumn(f).displayfield, q, !0, !1))
                }
                ;
                try {
                    var W = this.getrowid(l);
                    k = this.source.updaterow(W, m, C);
                    void 0 == k && (k = !0)
                } catch (V) {
                    k = !1;
                    X.setcellvalue(c, f, p, !0, !1);
                    p != q && X.setcellvalue(c, X.getcolumn(f).displayfield, q, !0, !1);
                    return
                }
            }
            l = this.vScrollInstance.value;
            this._updating && 1 != h && (h = !1);
            if (1 == h || void 0 == h)
                if (X = this.that,
                h = function() {
                    X.pageable && X.updatepagerdetails && (X.updatepagerdetails(),
                    (X.autoheight || X.autorowheight) && X._updatepageviews())
                }
                ,
                m = this.groupable && 0 < this.groups.length,
                n && !m) {
                    if (this.autoheight || this.autorowheight)
                        this.prerenderrequired = !0;
                    this.dataview.refresh();
                    this.rendergridcontent(!0, !1);
                    h();
                    this._renderrows(this.virtualsizeinfo)
                } else if (this.sortcolumn && !m) {
                    if (this.autoheight || this.autorowheight)
                        this.prerenderrequired = !0;
                    this.dataview.reloaddata();
                    this.rendergridcontent(!0, !1);
                    h();
                    this._renderrows(this.virtualsizeinfo)
                } else if (this.groupable && 0 < this.groups.length) {
                    if (this.autoheight || this.autorowheight)
                        this.prerenderrequired = !0;
                    this.pageable ? -1 != this.groups.indexOf(f) ? (this._pagescache = [],
                    this._cellscache = [],
                    this.dataview.refresh(),
                    this._render(!0, !0, !1, !1)) : (this._pagescache = [],
                    this._cellscache = [],
                    this.dataview.updateview(),
                    this._renderrows(this.virtualsizeinfo)) : (this._pagescache = [],
                    this._cellscache = [],
                    this.dataview.updateview(),
                    this._renderrows(this.virtualsizeinfo))
                } else
                    this.dataview.updateview(),
                    this._renderrows(this.virtualsizeinfo);
            this.vScrollInstance.setPosition(l);
            this.showaggregates && this._updatecolumnsaggregates && this._updatecolumnsaggregates();
            this.showfilterrow && this.filterable && this.filterrow && (n = this.getcolumn(f).filtertype,
            "list" != n && "checkedlist" != n || this._updatelistfilters(!0));
            this._raiseEvent(19, {
                rowindex: c,
                datafield: f,
                newvalue: g,
                value: g,
                oldvalue: p
            });
            return !0
        },
        getcellvalue: function(c, f) {
            if (null == c || null == f)
                return null;
            var g = parseInt(c);
            isNaN(g) || (c = this.getrowdata(g));
            return null != c ? c[f] : null
        },
        getrows: function() {
            var c = this.dataview.records.length;
            if (this.virtualmode) {
                for (var f = [], g = 0; g < this.dataview.records.length; g++)
                    (c = this.dataview.records[g]) && f.push(c);
                void 0 === this.dataview.records.length && e.each(this.dataview.records, function() {
                    this && f.push(this)
                });
                g = 0;
                this.pageable && (g = this.dataview.pagenum * this.dataview.pagesize);
                return f.length > this.source._source.totalrecords - g ? f.slice(0, this.source._source.totalrecords - g) : f
            }
            if (this.dataview.sortdata) {
                f = [];
                for (g = 0; g < c; g++) {
                    var h = {};
                    h = e.extend({}, this.dataview.sortdata[g].value);
                    f[g] = h
                }
                return f
            }
            return this.dataview.records
        },
        getrowboundindexbyid: function(c) {
            var f = this.dataview.recordsbyid["id" + c];
            if (f && f.boundindex)
                return this.getboundindex(f);
            f = this.getboundrows();
            for (var g = 0; g < f.length; g++)
                if (f[g] && f[g].uid == c)
                    return g;
            return -1
        },
        getrowdatabyid: function(c) {
            var f = this.dataview.recordsbyid["id" + c];
            if (f)
                return f;
            c = this.getrowboundindexbyid(c);
            return this.getboundrows()[c]
        },
        getrowdata: function(c) {
            void 0 == c && (c = 0);
            return this.virtualmode ? this.dataview.records[c] : this.getboundrows()[c]
        },
        getrenderedrowdata: function(c, f) {
            void 0 == c && (c = 0);
            if (this.virtualmode) {
                var g = this.getrowvisibleindex(c);
                return g = this.dataview.loadedrecords[g]
            }
            g = this.getrowvisibleindex(c);
            return 0 <= g ? (this.groupable && 0 < this.groups.length ? g = this.dataview.loadedrecords[g] : (g = this.dataview.loadedrecords[g],
            !this.pageable || void 0 != f && 0 != f || (g = this.dataview.loadedrecords[this.dataview.pagesize * this.dataview.pagenum + c])),
            g) : null
        },
        getboundrows: function() {
            return this.dataview.cachedrecords
        },
        getrowdisplayindex: function(c) {
            for (var f = this.getdisplayrows(), g = 0; g < f.length; g++)
                if (f[g])
                    if (void 0 !== f[g].dataindex) {
                        if (f[g].dataindex == c)
                            return f[g].visibleindex
                    } else if (f[g].boundindex == c)
                        return f[g].visibleindex;
            return -1
        },
        getboundindex: function(c) {
            var f = c.boundindex;
            this.groupable && 0 < this.groups.length && this.pageable && c.bounddata && (f = this.getrowboundindexbyid(c.bounddata.uid));
            0 < this.dataview.filters.length && (c.bounddata ? void 0 !== c.bounddata.dataindex && (f = c.bounddata.dataindex) : void 0 !== c.dataindex && (f = c.dataindex));
            return f
        },
        getrowboundindex: function(c) {
            return (c = this.getdisplayrows()[c]) ? void 0 !== c.dataindex ? c.dataindex : c.boundindex : -1
        },
        getdisplayrows: function() {
            return this.dataview.loadedrecords
        },
        getloadedrows: function() {
            return this.getdisplayrows()
        },
        getvisiblerowdata: function(c) {
            var f = this.getvisiblerows();
            return f ? f[c] : null
        },
        getloadedrowdata: function(c) {
            var f = this.getloadedrows();
            return f ? f[c] : null
        },
        getvisiblerows: function() {
            if (this.virtualmode)
                return this.dataview.loadedrecords;
            if (this.pageable) {
                for (var c = [], f = 0; f < this.dataview.pagesize; f++) {
                    var g = this.dataview.loadedrecords[f + this.dataview.pagesize * this.dataview.pagenum];
                    if (void 0 == g)
                        break;
                    c.push(g)
                }
                return c
            }
            if (void 0 != this._startboundindex && void 0 != this._endboundindex) {
                c = [];
                for (f = this._startvisibleindex; f <= this._endvisibleindex; f++) {
                    g = this.dataview.loadedrecords[f];
                    if (void 0 == g)
                        break;
                    c.push(g)
                }
                return c
            }
            return this.dataview.loadedrecords
        },
        getrowid: function(c) {
            void 0 == c && (c = 0);
            if (this.virtualmode) {
                var f = this.getrowvisibleindex(c);
                if (f = this.dataview.loadedrecords[f])
                    return f.uid
            } else if (f = 0 < this.dataview.filters.length,
            0 <= c && c < this.dataview.bounditems.length && !f && (f = this.getrowvisibleindex(c),
            f = this.dataview.loadedrecords[f]) || 0 < this.dataview.filters.length && (f = this.getboundrows()[c]) && null != f.uid)
                return f.uid;
            return null
        },
        _updateGridData: function(c) {
            var f = !1;
            this.filterable && this._initfilterpanel && this.dataview.filters.length && (f = !0);
            f ? (this.dataview.refresh(),
            "updaterow" == c ? (this._render(!0, !0, !1, !1, !1),
            this.invalidate()) : this.render()) : this.sortcolumn || this.groupable && 0 < this.groups.length ? (this.dataview.reloaddata(),
            this.render()) : ("updaterow" === c && (this.dataview.refresh(),
            this.virtualmode || this._render(!0, !0, !1, !1, !1)),
            this._cellscache = [],
            this._pagescache = [],
            this._renderrows(this.virtualsizeinfo));
            this.showfilterrow && this.filterable && this.filterrow && this._updatelistfilters(!0)
        },
        updaterow: function(c, f, g) {
            if (void 0 != c && void 0 != f) {
                var h = this.that
                  , k = !1;
                h._datachanged = !0;
                this._columnClassNameCache = [];
                if (this.pushToHistory) {
                    var l = this.getrowdatabyid(c);
                    this._undoRedoIndex = -1;
                    this._undoRedo.push({
                        action: "updaterow",
                        data: {
                            id: c,
                            rowdata: f,
                            oldrowdata: l
                        }
                    })
                }
                var m = function(n, p, q) {
                    if (n._loading)
                        throw Error("jqxGrid: " + n.loadingerrormessage);
                    var t = !1;
                    e.isArray(p) ? (e.each(p, function(C, F) {
                        t = n.dataview.updaterow(this, q[C], !1)
                    }),
                    n._cellscache = [],
                    n._pagescache = [],
                    n.dataview.refresh()) : t = n.dataview.updaterow(p, q);
                    var v = n.vScrollInstance.value;
                    void 0 != g && 1 != g || void 0 != n._updating && 0 != n._updating || n._updateGridData("updaterow");
                    n.showaggregates && n._updatecolumnsaggregates && n._updatecolumnsaggregates();
                    if (n.source && n.source._knockoutdatasource && !n._updateFromAdapter && n.autokoupdates && n.source._source._localdata) {
                        var z = n.dataview.recordsbyid["id" + p]
                          , E = n.dataview.records.indexOf(z);
                        E = n.source._source._localdata()[E];
                        n.source.suspendKO = !0;
                        n.source._source._localdata.replace(E, e.extend({}, z));
                        n.source.suspendKO = !1
                    }
                    n.source && n.source._source.localdata && "observableArray" === n.source._source.localdata.name && !n.source._source.localdata._updating && (n.source._source.localdata._updating = !0,
                    p = n.getrowboundindexbyid(p),
                    n.source._source.localdata.set(p, q),
                    n.source._source.localdata._updating = !1);
                    n.vScrollInstance.setPosition(v);
                    return t
                };
                if (this.source.updaterow) {
                    l = function(n) {
                        1 == n || void 0 == n ? m(h, c, f) : k = !1
                    }
                    ;
                    try {
                        k = this.source.updaterow(c, f, l),
                        void 0 == k && (k = !0)
                    } catch (n) {
                        k = !1
                    }
                } else
                    k = m(h, c, f);
                return k
            }
            return !1
        },
        deleterow: function(c, f) {
            if (void 0 != c) {
                this._datachanged = !0;
                var g = !1
                  , h = this.that
                  , k = this.getrowboundindexbyid(c)
                  , l = [];
                if (void 0 != k && (0 <= this.selectedrowindexes.indexOf(k) && this.selectedrowindexes.splice(this.selectedrowindexes.indexOf(k), 1),
                this.selectedrowindex == k && (this.selectedrowindex = -1),
                !this.virtualmode)) {
                    if (0 <= h.selectionmode.indexOf("row"))
                        e.each(this.selectedrowindexes, function() {
                            var t = h.getrowid(this);
                            l.push(t)
                        }),
                        this.selectedrowindexes = [],
                        this.selectedrowindex = -1;
                    else if (0 <= h.selectionmode.indexOf("cell"))
                        for (var m in h.selectedcells) {
                            var n = h.selectedcells[m]
                              , p = h.getrowid(n.rowindex);
                            n.rowid = p
                        }
                    this._rendervisualrows()
                }
                var q = function(t, v) {
                    if (t._loading)
                        throw Error("jqxGrid: " + t.loadingerrormessage);
                    var z = !1
                      , E = t.vScrollInstance.value;
                    e.isArray(v) ? (e.each(v, function() {
                        z = t.dataview.deleterow(this, !1)
                    }),
                    t._cellscache = [],
                    t._pagescache = [],
                    t.dataview.refresh()) : z = t.dataview.deleterow(v);
                    if (!t.virtualmode)
                        if (0 <= t.selectionmode.indexOf("row"))
                            e.each(l, function() {
                                var X = t.getrowboundindexbyid(this);
                                -1 != X && t.selectrow(X, !1)
                            });
                        else {
                            v = [];
                            for (var C in t.selectedcells) {
                                var F = t.selectedcells[C]
                                  , P = t.getrowboundindexbyid(F.rowid);
                                -1 != P && (F.rowindex = P,
                                v[P + "_" + F.datafield] = F)
                            }
                            t.selectedcells = v
                        }
                    void 0 != t._updating && 0 != t._updating || void 0 != f && 1 != f || setTimeout(function() {
                        t._render(!0, !0, !1, !1);
                        "visible" != t.vScrollBar.css("visibility") && (t._arrange(),
                        t._updatecolumnwidths(),
                        t._updatecellwidths(),
                        t._renderrows(t.virtualsizeinfo))
                    });
                    t.source && t.source._knockoutdatasource && !t._updateFromAdapter && t.autokoupdates && t.source._source._localdata && (t.source.suspendKO = !0,
                    t.source._source._localdata.pop(),
                    t.source.suspendKO = !1);
                    t.source && t.source._source.localdata && "observableArray" === t.source._source.localdata.name && !t.source._source.localdata._updating && (t.source._source.localdata._updating = !0,
                    t.source._source.localdata.splice(k, 1),
                    t.source._source.localdata._updating = !1);
                    t.dataview.sortby && "many" !== t.sortmode && (C = t.getsortinformation(),
                    C.sortcolumn && (t.dataview.clearsortdata(),
                    t.dataview.sortby(C.sortcolumn, C.sortdirection ? C.sortdirection.ascending : null)));
                    t.vScrollInstance.setPosition(E);
                    return z
                };
                if (this.source.deleterow) {
                    m = function(t) {
                        1 != t && void 0 != t || q(h, c)
                    }
                    ;
                    try {
                        this.source.deleterow(c, m),
                        void 0 == g && (g = !0)
                    } catch (t) {
                        g = !1
                    }
                } else
                    g = q(h, c);
                return g
            }
            return !1
        },
        addrow: function(c, f, g) {
            if (void 0 != f) {
                this._datachanged = !0;
                void 0 == g && (g = "last");
                var h = !1
                  , k = this.that;
                if (null == c) {
                    var l = this.dataview.filters && 0 < this.dataview.filters.length ? this.dataview.cachedrecords.length : this.dataview.totalrecords;
                    if (e.isArray(f)) {
                        var m = [];
                        e.each(f, function(q, t) {
                            q = k.dataview.getid(k.dataview.source.id, f[q], l + q);
                            m.push(q)
                        });
                        c = m
                    } else
                        for (c = this.dataview.getid(this.dataview.source.id, f, l); null != this.dataview.recordsbyid["id" + c]; )
                            c++
                }
                var n = function(q, t, v, z) {
                    if (q._loading)
                        throw Error("jqxGrid: " + q.loadingerrormessage);
                    var E = q.vScrollInstance.value
                      , C = !1;
                    e.isArray(v) ? (e.each(v, function(P, X) {
                        void 0 != this.dataindex && delete this.dataindex;
                        X = null;
                        null != t && null != t[P] && (X = t[P]);
                        C = q.dataview.addrow(X, this, z, !1)
                    }),
                    q._cellscache = [],
                    q._pagescache = [],
                    q.dataview.refresh()) : (void 0 != v && void 0 != v.dataindex && delete v.dataindex,
                    C = q.dataview.addrow(t, v, z));
                    if (void 0 == q._updating || 0 == q._updating)
                        q._render(!0, !0, !1, !1),
                        q.invalidate();
                    q.source && q.source._knockoutdatasource && !q._updateFromAdapter && q.autokoupdates && q.source._source._localdata && (q.source.suspendKO = !0,
                    q.source._source._localdata.push(v),
                    q.source.suspendKO = !1);
                    if (q.source && q.source._source.localdata && "observableArray" === q.source._source.localdata.name && !q.source._source.localdata._updating) {
                        q.source._source.localdata._updating = !0;
                        var F = q.getrowboundindexbyid(t);
                        q.source._source.localdata.set(F, v);
                        q.source._source.localdata._updating = !1
                    }
                    "deferred" != q.scrollmode ? q.vScrollInstance.setPosition(E) : q.vScrollInstance.setPosition(0);
                    return C
                };
                if (this.source && this.source.addrow) {
                    var p = function(q, t) {
                        if (1 == q || void 0 == q)
                            void 0 != t && (c = t),
                            n(k, c, f, g)
                    };
                    try {
                        h = this.source.addrow(c, f, g, p),
                        void 0 == h && (h = !0)
                    } catch (q) {
                        h = !1
                    }
                    if (0 == h)
                        return !1
                } else
                    n(this, c, f, g);
                return h
            }
            return !1
        },
        _findvisiblerow: function(c, f) {
            void 0 == c && (c = parseInt(this.vScrollInstance.value));
            var g = 0;
            if (void 0 == f || null == f)
                f = this.rows.records;
            for (var h = f.length; g <= h; ) {
                var k = parseInt((g + h) / 2)
                  , l = f[k];
                if (void 0 == l)
                    break;
                if (l.top > c && l.top + l.height > c)
                    h = k - 1;
                else if (l.top < c && l.top + l.height < c)
                    g = k + 1;
                else
                    return k
            }
            return -1
        },
        _updatecellwidths: function() {
            var c = this.virtualsizeinfo;
            if (c) {
                var f = this.that;
                if (void 0 != f.gridcontent) {
                    void 0 == f.table && (f.table = f.gridcontent.find("#contenttable" + f.element.id));
                    var g = f.groupable && 0 < f.groups.length
                      , h = 0;
                    c = c.visiblerecords;
                    f.pageable && (f.autoheight || f.autorowheight) && (c = f.dataview.pagesize,
                    f.groupable && (f.dataview.updateview(),
                    c = f.dataview.rows.length));
                    f.groupable || f.pageable || !f.autoheight && !f.autorowheight || (c = f.dataview.totalrecords);
                    f.rowdetails && (c += f.dataview.pagesize);
                    if (f.columns.records) {
                        for (var k = f.columns.records.length, l = f.table[0].rows, m = 0; m < c; m++) {
                            var n = l[m];
                            if (!n)
                                break;
                            n = n.cells;
                            for (var p = 0, q = 0; q < k; q++) {
                                var t = f.columns.records[q]
                                  , v = t.width;
                                t.adaptivewidth && (v = t.adaptivewidth);
                                var z = n[q];
                                parseInt(z.style.left) != p && (z.style.left = p + "px");
                                parseInt(z.style.width) != v && (z.style.width = v + "px");
                                t.hidden && t.hideable || t.adaptivehidden ? z.style.display = "none" : (p += parseFloat(v),
                                f.adaptive && (z.style.display = ""))
                            }
                            0 == h && (f.table.width(parseFloat(p) + 2),
                            h = p)
                        }
                        f.showaggregates && f._updateaggregates && f._updateaggregates();
                        f.showfilterrow && f.filterable && f._updatefilterrowui && f._updatefilterrowui();
                        f.showeverpresentrow && f._updateaddnewrowui();
                        f._updatescrollbarsafterrowsprerender();
                        g && f._renderrows(f.virtualsizeinfo)
                    }
                }
            }
        },
        _updatescrollbarsafterrowsprerender: function() {
            var c = this.that
              , f = c.hScrollBar[0].style.visibility
              , g = 0
              , h = c.vScrollBar[0].style.visibility;
            "visible" == h && (g = c.scrollbarsize + 3);
            0 == c.scrollbarsize && (g = 0);
            c.scrollbarautoshow && (g = 0);
            var k = c.element.style.width;
            k = 0 <= k.toString().indexOf("%") ? c.host.width() : parseInt(k);
            parseInt(c.table[0].style.width) - 2 > k - g ? ("visible" != f && (c.autowidth || (c.hScrollBar[0].style.visibility = "visible"),
            c._arrange()),
            "visible" == h ? "deferred" == c.scrollmode || c.virtualmode ? c._updatevscrollbarmax() : c.virtualsizeinfo && (h = c.virtualsizeinfo.virtualheight - c._gettableheight(),
            !isNaN(h) && 0 < h && ("hidden" != f ? c.vScrollBar.jqxScrollBar("max", h + c.scrollbarsize + 4) : c.vScrollBar.jqxScrollBar("max", h))) : g = -2,
            c.hScrollBar.jqxScrollBar("max", g + c.table.width() - c.host.width())) : "hidden" != f && (c.hScrollBar.css("visibility", "hidden"),
            c._arrange());
            c._renderhorizontalscroll()
        },
        _hascolumnstyle: function() {
            if (void 0 !== this._hascolumnstyles)
                return this._hascolumnstyles;
            this._hascolumnstyles = !1;
            for (var c = 0; c < this.columns.records.length; c++) {
                var f = this.columns.records[c];
                if (f.style.headerBackgroundColor || f.style.headerColor || f.style.headerBackgroundHoveredColor || f.style.headerHoveredColor || f.style.headerBackgroundSelectedColor || f.style.headerSelectedColor || f.style.backgroundColor || f.style.color || f.style.backgroundHoveredColor || f.style.hoveredColor || f.style.backgroundSelectedColor || f.style.selectedColor)
                    return this._hascolumnstyles = !0
            }
            return !1
        },
        _prerenderrows: function(c) {
            var f = this.that;
            if (1 == f.prerenderrequired && (f.prerenderrequired = !1,
            f.editable && f._destroyeditors && f._destroyeditors(),
            void 0 != f.gridcontent)) {
                f.gridcontent.find("#contenttable" + f.element.id).remove();
                null != f.table && (f.table.remove(),
                f.table = null);
                f.table = e('<div id="contenttable' + f.element.id + '" style="overflow: hidden; position: relative;"></div>');
                f.gridcontent.addClass(f.toTP("jqx-grid-content"));
                f.gridcontent.addClass(f.toTP("jqx-widget-content"));
                f.gridcontent.append(f.table);
                var g = f.groupable && 0 < f.groups.length
                  , h = 0;
                f.table[0].rows = [];
                var k = f.toTP("jqx-grid-cell");
                g && (k = " " + f.toTP("jqx-grid-group-cell"));
                c = c.visiblerecords;
                f.pageable && (f.autoheight || f.autorowheight) && (c = f.dataview.pagesize,
                f.groupable && (f.dataview.updateview(),
                c = f.dataview.rows.length,
                c < f.dataview.pagesize && (c = f.dataview.pagesize)));
                f.pageable || !f.autoheight && !f.autorowheight || (c = f.dataview.totalrecords);
                f.groupable && 0 < f.groups.length && (f.autoheight || f.autorowheight) && !f.pageable && (c = f.dataview.rows.length);
                f.rowdetails && (c = f.autoheight || f.autorowheight ? c + f.dataview.pagesize : c + c);
                if (f.columns.records) {
                    g = f.columns.records.length;
                    e.jqx.browser.msie && 8 < e.jqx.browser.version && f.table.css("opacity", "0.99");
                    -1 != navigator.userAgent.indexOf("Safari") && f.table.css("opacity", "0.99");
                    var l = e.jqx.browser.msie && 8 > e.jqx.browser.version;
                    l && f.host.attr("hideFocus", "true");
                    var m = f.tableZIndex;
                    c * g > m && (m = c * g);
                    f.isTouchDevice();
                    var n = "";
                    f._hiddencolumns = !1;
                    for (var p = 5 + f.columns.records.length, q = 0; q < c; q++) {
                        var t = '<div role="row" style="position: relative; height:' + f.rowsheight + 'px;" id="row' + q + f.element.id + '">';
                        l && (t = '<div role="row" style="position: relative; z-index: ' + m + "; height:" + f.rowsheight + 'px;" id="row' + q + f.element.id + '">',
                        m--);
                        for (var v = 0, z = 0; z < g; z++) {
                            var E = f.columns.records[z]
                              , C = E.width;
                            C < E.minwidth && (C = E.minwidth);
                            C > E.maxwidth && (C = E.maxwidth);
                            if (f.rtl) {
                                var F = '<div columnindex="' + z + '" role="gridcell" style="left: ' + v + "px; z-index: " + (m - g + 2 * z) + "; width:" + C + "px;";
                                m--
                            } else
                                F = '<div columnindex="' + z + '" role="gridcell" style="left: ' + v + "px; z-index: " + m-- + "; width:" + C + "px;";
                            E.hidden && E.hideable || E.adaptivehidden ? (F += "display: none;",
                            f._hiddencolumns = !0,
                            m++) : v += C;
                            0 === q && 0 === z && (F += '" tabindex="' + p + '"');
                            F += '" class="' + k + '">';
                            E = this._defaultcellsrenderer("", E);
                            F += E;
                            F += "</div>";
                            t += F
                        }
                        0 == h && (f.table.width(parseInt(v) + 2),
                        h = v);
                        t += "</div>";
                        n += t
                    }
                    f.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                        f.table.html(n)
                    }) : f.table[0].innerHTML = n;
                    f.table[0].rows = [];
                    h = f.table.children();
                    for (q = 0; q < c; q++)
                        for (l = h[q],
                        f.table[0].rows.push(l),
                        l.cells = [],
                        p = e(l).children(),
                        z = 0; z < g; z++)
                            l.cells.push(p[z]);
                    if (0 == c) {
                        v = 0;
                        f.showemptyrow && (t = e('<div style="position: relative;" id="row0' + f.element.id + '"></div>'),
                        f.table.append(t),
                        t.height(f.rowsheight),
                        f.table[0].rows[0] = t[0],
                        f.table[0].rows[0].cells = []);
                        for (z = 0; z < g; z++)
                            E = f.columns.records[z],
                            C = E.width,
                            f.showemptyrow && (F = e('<div style="position: absolute; height: 100%; left: ' + v + "px; z-index: " + m-- + "; width:" + C + 'px;" class="' + k + '"></div>'),
                            F.height(f.rowsheight),
                            t.append(F),
                            f.table[0].rows[0].cells[z] = F[0]),
                            C < E.minwidth && (C = E.minwidth),
                            C > E.maxwidth && (C = E.maxwidth),
                            E.hidden && E.hideable || E.adaptivehidden || (v += C);
                        f.table.width(parseInt(v) + 2);
                        h = v
                    }
                    f._updatescrollbarsafterrowsprerender();
                    f.rendered && f.rendered("rows");
                    f.toCompile = [];
                    f._addoverlayelement()
                }
            }
        },
        _groupsheader: function() {
            return this.groupable && this.showgroupsheader
        },
        _arrange: function() {
            var c = null
              , f = null;
            this.tableheight = null;
            var g = this.that
              , h = !1
              , k = !1;
            null != g.width && -1 != g.width.toString().indexOf("px") ? c = g.width : void 0 == g.width || isNaN(g.width) || (c = g.width);
            null != g.width && -1 != g.width.toString().indexOf("%") && (c = g.width,
            h = !0);
            g.scrollbarautoshow && (g.vScrollBar[0].style.display = "none",
            g.hScrollBar[0].style.display = "none",
            g.vScrollBar[0].style.zIndex = g.tableZIndex + g.headerZIndex,
            g.hScrollBar[0].style.zIndex = g.tableZIndex + g.headerZIndex);
            if (g.autowidth) {
                for (var l = c = 0; l < g.columns.records.length; l++) {
                    var m = g.columns.records[l].width;
                    "auto" == m && (m = g._measureElementWidth(g.columns.records[l].text));
                    c += m
                }
                "hidden" != g.vScrollBar.css("visibility") && (c += g.scrollbarsize + 4);
                g.width = c
            }
            null != g.height && -1 != g.height.toString().indexOf("px") ? f = g.height : void 0 == g.height || isNaN(g.height) || (f = g.height);
            null != g.height && -1 != g.height.toString().indexOf("%") && (f = g.height,
            k = !0);
            l = function() {
                var v = 0
                  , z = g.showheader ? null != g.columnsheader ? g.columnsheader.height() + 2 : 0 : 0;
                v += z;
                g.pageable && (v += g.pagerheight);
                g._groupsheader() && (v += g.groupsheaderheight);
                g.showtoolbar && (v += g.toolbarheight);
                g.showfilterbar && (v += g.toolbarheight);
                g.showstatusbar && (v += g.statusbarheight);
                g.showeverpresentrow && "bottom" === g.everpresentrowposition && (v += g.everpresentrowheight);
                "visible" == g.hScrollBar[0].style.visibility && (v += 15);
                return v
            }
            ;
            g.autoheight && g.virtualsizeinfo ? g.pageable && g.gotopage ? (f = 0 + (g._pageviews[0] ? g._pageviews[0].height : 0),
            f += l(),
            g.showemptyrow && 0 == g.dataview.totalrecords && (f += g.rowsheight)) : (f = g.host.height() - g._gettableheight(),
            0 < g._pageviews.length ? (f = f + g._pageviews[g._pageviews.length - 1].height + g._pageviews[g._pageviews.length - 1].top,
            g.vScrollBar[0].style.visibility = "hidden") : (f = l(),
            g.showemptyrow && (f += g.rowsheight))) : g.autoheight && (f = g.dataview.totalrecords * g.rowsheight,
            g.pageable && g.gotopage && (f = g.pagesize * g.rowsheight),
            g._loading && (f = 250,
            g.dataloadelement.height(f)),
            f += l(),
            1E4 < f && (f = 1E4));
            null != c ? (c = parseInt(c),
            h ? g.element.style.width = g.width : g.element.style.width != parseInt(g.width) + "px" && (g.element.style.width = parseInt(g.width) + "px"),
            h && (c = g.host.width(),
            2 >= c && (c = 600,
            g.host.width(c)),
            g._oldWidth || (g._oldWidth = c))) : g.host.width(250);
            null != f ? (this.autoheight && (f += 2),
            k || (f = parseInt(f)),
            k ? g.element.style.height = g.height : g.element.style.height != parseInt(f) + "px" && (g.element.style.height = parseInt(f) + "px"),
            k && !g.autoheight && (f = g.host.height(),
            0 == f && (f = 400,
            g.host.height(f)),
            g._oldHeight || (g._oldHeight = f))) : g.host.height(250);
            g.autoheight && (g.tableheight = null,
            g._gettableheight());
            h = 0;
            g.showtoolbar ? (g.toolbar.width(c),
            g.toolbar.height(g.toolbarheight - 1),
            g.toolbar.css("top", 0),
            h += g.toolbarheight,
            f -= parseInt(g.toolbarheight)) : g.toolbar[0].style.height = "0px";
            g.showfilterbar ? (g.filterbar.width(c),
            g.filterbar.height(g.toolbarheight - 1),
            g.filterbar.css("top", h),
            h += g.toolbarheight,
            f -= parseInt(g.toolbarheight)) : g.filterbar[0].style.height = "0px";
            g.showstatusbar ? (g.showaggregates ? g.statusbar.width(g.table ? Math.max(c, g.table.width()) : c) : g.statusbar.width(c),
            g.statusbar.height(g.statusbarheight)) : g.statusbar[0].style.height = "0px";
            g.showeverpresentrow && "bottom" === g.everpresentrowposition ? (g.addnewrow.width(c),
            g.addnewrow.height(g.everpresentrowheight)) : g.addnewrow[0].style.height = "0px";
            g._groupsheader() ? (g.groupsheader.width(c),
            g.groupsheader.height(g.groupsheaderheight),
            g.groupsheader.css("top", h),
            k = g.groupsheader.height() + 1,
            h += k,
            f > k && (f -= parseInt(k))) : (g.groupsheader[0].style.width != c + "px" && (g.groupsheader[0].style.width = parseInt(c) + "px"),
            g.groupsheader[0].style.height = "0px",
            g.groupsheader[0].style.top != h + "px" && g.groupsheader.css("top", h),
            k = g.showgroupsheader && g.groupable ? g.groupsheaderheight : 0,
            g.content[0].style.top != h + k + "px" && g.content.css("top", h + g.groupsheaderheight));
            var n = g.scrollbarsize;
            isNaN(n) && (n = parseInt(n),
            n = isNaN(n) ? "17px" : n + "px");
            n = parseInt(n);
            m = 2;
            k = 0;
            "visible" == g.vScrollBar[0].style.visibility && (k = n + 4);
            "visible" == g.hScrollBar[0].style.visibility && (m = n + 4 + 2);
            0 == n && (m = k = 0);
            l = 0;
            g.pageable && (l = g.pagerheight,
            m += g.pagerheight);
            g.showstatusbar && (m += g.statusbarheight,
            l += g.statusbarheight);
            g.showeverpresentrow && "bottom" === g.everpresentrowposition && (m += g.everpresentrowheight,
            l += g.everpresentrowheight);
            g.hScrollBar[0].style.height != n + "px" && (g.hScrollBar[0].style.height = parseInt(n) + "px");
            g.hScrollBar[0].style.top == h + f - 4 - n - l + "px" && "0px" == g.hScrollBar[0].style.left || g.hScrollBar.css({
                top: h + f - 4 - n - l + "px",
                left: "0px"
            });
            var p = g.hScrollBar[0].style.width
              , q = !1
              , t = !1;
            0 == k ? p != c - 2 + "px" && (g.hScrollBar.width(c - 2),
            q = !0) : p != c - n - 4 + "px" && (g.hScrollBar.width(c - n - 4 + "px"),
            q = !0);
            g.autoheight || (g.vScrollBar[0].style.width != n + "px" && (g.vScrollBar.width(n),
            t = !0),
            g.vScrollBar[0].style.height != parseInt(f) - m + "px" && (g.vScrollBar.height(parseInt(f) - m + "px"),
            t = !0),
            g.vScrollBar[0].style.left == parseInt(c) - parseInt(n) - 4 + "px" && g.vScrollBar[0].style.top == h + "px" || g.vScrollBar.css({
                left: parseInt(c) - parseInt(n) - 4 + "px",
                top: h
            }));
            g.rtl && (g.vScrollBar.css({
                left: "0px",
                top: h
            }),
            "hidden" != g.vScrollBar.css("visibility") && g.hScrollBar.css({
                left: n + 2
            }));
            p = g.vScrollInstance;
            p.disabled = g.disabled;
            g.autoheight || t && p.refresh();
            t = g.hScrollInstance;
            t.disabled = g.disabled;
            q && t.refresh();
            g.autowidth && (g.hScrollBar[0].style.visibility = "hidden");
            g.statusbarheight = parseInt(g.statusbarheight);
            g.toolbarheight = parseInt(g.toolbarheight);
            q = function(v) {
                if ("visible" == v.vScrollBar[0].style.visibility && "visible" == v.hScrollBar[0].style.visibility) {
                    v.bottomRight[0].style.visibility = "visible";
                    v.bottomRight.css({
                        left: 1 + parseInt(v.vScrollBar.css("left")),
                        top: parseInt(v.hScrollBar.css("top"))
                    });
                    v.rtl && v.bottomRight.css("left", "0px");
                    v.bottomRight.width(parseInt(n) + 3);
                    v.bottomRight.height(parseInt(n) + 4);
                    var z = v.showeverpresentrow && "bottom" == v.everpresentrowposition ? v.everpresentrowheight : 0;
                    0 < z && !v.showaggregates && (v.bottomRight.css("z-index", 99),
                    v.bottomRight.height(parseInt(n) + 4 + z),
                    v.bottomRight.css({
                        top: parseInt(v.hScrollBar.css("top")) - z
                    }));
                    v.showaggregates && (v.bottomRight.css("z-index", 99),
                    v.bottomRight.height(parseInt(n) + 4 + v.statusbarheight + z),
                    v.bottomRight.css({
                        top: parseInt(v.hScrollBar.css("top")) - v.statusbarheight - z
                    }))
                } else
                    v.bottomRight[0].style.visibility = "hidden"
            }
            ;
            q(this);
            g.content[0].style.width != c - k + "px" && g.content.width(c - k);
            g.content[0].style.height != f - m + 3 + "px" && g.content.height(f - m + 3);
            g.scrollbarautoshow && (g.content[0].style.width != c + "px" && g.content.width(c),
            g.content[0].style.height != f + "px" && g.content.height(f));
            g.content[0].style.top != h + "px" && g.content.css("top", h);
            g.rtl && (g.content.css("left", k),
            g.scrollbarautoshow && g.content.css("left", "0px"),
            g.table && (m = g.table.width(),
            m < c - k && g.content.css("left", c - m)));
            g.showstatusbar && (g.statusbar.css("top", h + f - g.statusbarheight - (g.pageable ? g.pagerheight : 0)),
            g.showaggregates && ("visible" == g.hScrollBar.css("visibility") && (g.hScrollBar.css({
                top: h + f - 4 - n - l + g.statusbarheight + "px"
            }),
            g.statusbar.css("top", 1 + h + f - n - 5 - g.statusbarheight - (g.pageable ? g.pagerheight : 0))),
            q(this)),
            g.rtl && ("visible" != g.hScrollBar.css("visibility") ? g.statusbar.css("left", g.content.css("left")) : g.statusbar.css("left", "0px")));
            g.showeverpresentrow && "bottom" === g.everpresentrowposition && (g.addnewrow.css("top", h + f - (g.showstatusbar ? g.statusbarheight : 0) - (g.pageable ? g.pagerheight : 0) - g.everpresentrowheight),
            g.rtl && ("visible" != g.hScrollBar.css("visibility") ? g.addnewrow.css("left", g.content.css("left")) : g.addnewrow.css("left", "0px")));
            g.pageable ? (g.pager.width(c),
            g.pager.height(g.pagerheight),
            g.pager.css("top", h + f - g.pagerheight - 1)) : g.pager[0].style.height = "0px";
            null != g.table && (h = -2,
            "visible" == g.vScrollBar[0].style.visibility && (h = g.scrollbarsize + 3),
            "visible" == g.hScrollBar[0].style.visibility && (h = h + g.table.width() - g.host.width(),
            0 <= h && g.hScrollBar.jqxScrollBar("max", h),
            "visible" == g.hScrollBar[0].style.visibility && 0 == h && (g.hScrollBar[0].style.visibility = "hidden",
            g._arrange())));
            c != parseInt(g.dataloadelement[0].style.width) && (g.dataloadelement[0].style.width = g.element.style.width);
            f != parseInt(g.dataloadelement[0].style.height) && (g.dataloadelement[0].style.height = g.element.style.height);
            this.pagergotoinput && (this.pagergotoinput.offset().top !== this.pagergoto.offset().top ? (this.pagergotoinput.css("visibility", "hidden"),
            this.pagergoto.css("visibility", "hidden")) : (this.pagergotoinput.css("visibility", "inherit"),
            this.pagergoto.css("visibility", "inherit")));
            g._hostwidth = c
        },
        destroy: function() {
            delete e.jqx.dataFormat.datescache;
            delete this.gridlocalization;
            delete this._undoRedo;
            e.jqx.utilities.resize(this.host, null, !0);
            ("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self && this.removeHandler(e(window.top.document), "mouseup.grid" + this.element.id);
            if (this.table && this.table[0]) {
                for (var c = this.table[0].rows.length, f = 0; f < c; f++) {
                    for (var g = this.table[0].rows[f], h = g.cells.length, k = 0; k < h; k++)
                        e(g.cells[k]).remove(),
                        g.cells[k] = null,
                        delete g.cells[k];
                    g.cells = null;
                    g.cells && delete g.cells;
                    e(this.table[0].rows[f]).remove();
                    this.table[0].rows[f] = null
                }
                try {
                    delete this.table[0].rows
                } catch (l) {}
                this.table.remove();
                delete this.table
            }
            if (this.columns && this.columns.records) {
                for (f = 0; f < this.columns.records.length; f++)
                    c = this.columns.records[f],
                    c.addnewrowwidget && c.destroyeverpresentrowwidget && c.destroyeverpresentrowwidget(c.addnewrowwidget),
                    c.destroywidget && c.destroywidget && c.destroywidget(c.widget),
                    this._removecolumnhandlers(this.columns.records[f]),
                    c.element && (e(c.element).remove(),
                    e(c.sortasc).remove(),
                    e(c.sortdesc).remove(),
                    e(c.filtericon).remove(),
                    e(c.menu).remove(),
                    c.element = null,
                    c.uielement = null,
                    c.sortasc = null,
                    c.sortdesc = null,
                    c.filtericon = null,
                    c.menu = null,
                    delete c.element,
                    delete c.uielement,
                    delete c.sortasc,
                    delete c.sortdesc,
                    delete c.filtericon,
                    delete c.menu,
                    delete this.columnsrow[0].cells[f]);
                try {
                    delete this.columnsrow[0].cells
                } catch (l) {}
                delete this.columnsrow
            }
            e.removeData(document.body, "contextmenu" + this.element.id);
            this.host.jqxDropDownList && this._destroyfilterpanel && this._destroyfilterpanel();
            this.editable && this._destroyeditors && this._destroyeditors();
            this.filterable && this._destroyedfilters && this.showfilterrow && this._destroyedfilters();
            this.host.jqxMenu && this.gridmenu && (this.removeHandler(e(document), "click.menu" + this.element.id),
            this.removeHandler(this.gridmenu, "keydown"),
            this.removeHandler(this.gridmenu, "closed"),
            this.removeHandler(this.gridmenu, "itemclick"),
            this.gridmenu.jqxMenu("destroy"),
            this.gridmenu = null);
            this.pagershowrowscombo && (this.pagershowrowscombo.jqxDropDownList("destroy"),
            this.pagershowrowscombo = null);
            this.pagerrightbutton && (this.removeHandler(this.pagerrightbutton, "mousedown"),
            this.removeHandler(this.pagerrightbutton, "mouseup"),
            this.removeHandler(this.pagerrightbutton, "click"),
            this.pagerrightbutton.jqxButton("destroy"),
            this.pagerrightbutton = null);
            this.pagerleftbutton && (this.removeHandler(this.pagerleftbutton, "mousedown"),
            this.removeHandler(this.pagerleftbutton, "mouseup"),
            this.removeHandler(this.pagerleftbutton, "click"),
            this.pagerleftbutton.jqxButton("destroy"),
            this.removeHandler(e(document), "mouseup.pagerbuttons" + this.element.id),
            this.pagerleftbutton = null);
            this.removeHandler(e(document), "selectstart." + this.element.id);
            this.removeHandler(e(document), "mousedown.resize" + this.element.id);
            this.removeHandler(e(document), "mouseup.resize" + this.element.id);
            this.removeHandler(e(document), "mousemove.resize" + this.element.id);
            this.isTouchDevice() && (f = e.jqx.mobile.getTouchEventName("touchmove") + ".resize" + this.element.id,
            c = e.jqx.mobile.getTouchEventName("touchstart") + ".resize" + this.element.id,
            g = e.jqx.mobile.getTouchEventName("touchend") + ".resize" + this.element.id,
            this.removeHandler(e(document), f),
            this.removeHandler(e(document), c),
            this.removeHandler(e(document), g));
            this.removeHandler(e(document), "mousedown.reorder" + this.element.id);
            this.removeHandler(e(document), "mouseup.reorder" + this.element.id);
            this.removeHandler(e(document), "mousemove.reorder" + this.element.id);
            this.isTouchDevice() && (f = e.jqx.mobile.getTouchEventName("touchmove") + ".reorder" + this.element.id,
            c = e.jqx.mobile.getTouchEventName("touchstart") + ".reorder" + this.element.id,
            g = e.jqx.mobile.getTouchEventName("touchend") + ".reorder" + this.element.id,
            this.removeHandler(e(document), f),
            this.removeHandler(e(document), c),
            this.removeHandler(e(document), g));
            this.removeHandler(e(window), "resize." + this.element.id);
            this.resizeline && this.resizeline.remove();
            this.resizestartline && this.resizestartline.remove();
            this.groupable && (f = "mousemove.grouping" + this.element.id,
            c = "mousedown.grouping" + this.element.id,
            g = "mouseup.grouping" + this.element.id,
            this.removeHandler(e(document), f),
            this.removeHandler(e(document), c),
            this.removeHandler(e(document), g));
            this.columnsreorder && (f = "mousemove.reorder" + this.element.id,
            c = "mousedown.reorder" + this.element.id,
            g = "mouseup.reorder" + this.element.id,
            this.removeHandler(e(document), f),
            this.removeHandler(e(document), c),
            this.removeHandler(e(document), g),
            delete this.columnsbounds);
            this.content && (this.removeHandler(this.content, "mousedown"),
            this.removeHandler(this.content, "scroll"));
            this._removeHandlers();
            this.hScrollInstance.destroy();
            this.vScrollInstance.destroy();
            this.hScrollBar.remove();
            this.vScrollBar.remove();
            this._clearcaches();
            delete this.hScrollInstance;
            delete this.vScrollInstance;
            delete this.visiblerows;
            delete this.hittestinfo;
            delete this.rows;
            delete this.columns;
            delete this.columnsbydatafield;
            delete this.pagescache;
            delete this.pageviews;
            delete this.cellscache;
            delete this.heights;
            delete this.hiddens;
            delete this.hiddenboundrows;
            delete this.heightboundrows;
            delete this.detailboundrows;
            delete this.details;
            delete this.expandedgroups;
            delete this._rowdetailscache;
            delete this._rowdetailselementscache;
            delete this.columnsmenu;
            this.columnsheader && (this.columnsheader.remove(),
            delete this.columnsheader);
            this.selectionarea && (this.selectionarea.remove(),
            delete this.selectionarea);
            if (this.menuitemsarray && this.menuitemsarray.length)
                for (c = this.menuitemsarray.length,
                f = 0; f < c; f++)
                    e(this.menuitemsarray[f]).remove();
            delete this.menuitemsarray;
            this.dataview._clearcaches();
            this.content.removeClass();
            this.content.remove();
            this.content = null;
            delete this.content;
            this.hScrollBar = this.vScrollBar = null;
            delete this.hScrollBar;
            delete this.hScrollBar;
            this.gridcontent && (this.gridcontent.remove(),
            delete this.gridcontent);
            this.gridmenu && (this.gridmenu = null,
            delete this.gridmenu);
            delete this._mousemovefunc;
            delete this._mousewheelfunc;
            this.dataview.destroy();
            delete this.dataview;
            this.bottomRight.remove();
            delete this.bottomRight;
            this.wrapper.remove();
            delete this.wrapper;
            this.pagerdiv && (this.pagerdiv.remove(),
            delete this.pagerdiv);
            this.pagerpageinput && (this.pagerpageinput.remove(),
            delete this.pagerpageinput);
            this.pagergoto && (this.pagergoto.remove(),
            delete this.pagergoto);
            this.pagershowrows && (this.pagershowrows.remove(),
            delete this.pagershowrows);
            this.pagerfirstbutton && (this.pagerfirstbutton.remove(),
            delete this.pagerfirstbutton);
            this.pagerlastbutton && (this.pagerlastbutton.remove(),
            delete this.pagerlastbutton);
            this.pagerbuttons && (this.pagerbuttons.remove(),
            delete this.pagerbuttons);
            this.pagerdetails && (this.pagerdetails.remove(),
            delete this.pagerdetails);
            this.pagergotoinput && (this.pagergotoinput.remove(),
            delete this.pagergotoinput);
            this.pager.remove();
            delete this.pager;
            this.groupsheader.remove();
            delete this.groupsheader;
            this.dataloadelement.remove();
            delete this.dataloadelement;
            this.toolbar.remove();
            delete this.toolbar;
            this.statusbar.remove();
            delete this.statusbar;
            this.host.removeData();
            this.host.removeClass();
            this.host.remove();
            this.host = null;
            delete this.host;
            delete this.element;
            delete this.set;
            delete this.get;
            delete this.that;
            delete this.call
        },
        _initializeColumns: function() {
            var c = this.source ? this.source.datafields : null;
            null == c && this.source && this.source._source && (c = this.source._source.datafields);
            var f = c ? 0 < c.length : !1;
            if (this.autogeneratecolumns) {
                var g = [];
                if (c)
                    e.each(c, function() {
                        g.push({
                            datafield: this.name,
                            text: this.text || this.name,
                            cellsformat: this.format || ""
                        })
                    });
                else if (0 < this.source.records.length) {
                    c = this.source.records[0];
                    for (var h in c)
                        "uid" != h && (c = {
                            width: 100,
                            datafield: h,
                            text: h
                        },
                        g.push(c))
                }
                this.columns = g
            }
            if (this.columns && this.columns.records)
                for (h = 0; h < this.columns.records.length; h++)
                    this._removecolumnhandlers(this.columns.records[h]);
            var k = this.that
              , l = new e.jqx.collection(this.element)
              , m = 0;
            this._haspinned = !1;
            this._columns ? this.columns = this._columns : this._columns = this.columns;
            this.groupable && e.each(this.groups, function(p) {
                p = new b(k,this);
                p.visibleindex = m++;
                p.width = k.groupindentwidth;
                l.add(p);
                p.grouped = !0;
                p.filterable = !1;
                p.sortable = !1;
                p.editable = !1;
                p.resizable = !1;
                p.draggable = !1
            });
            this.rowdetails && this.showrowdetailscolumn && (c = new b(k,this),
            c.visibleindex = m++,
            c.width = k.groupindentwidth,
            c.pinned = !0,
            c.editable = !1,
            c.filterable = !1,
            c.draggable = !1,
            c.groupable = !1,
            c.resizable = !1,
            l.add(c),
            k._haspinned = !0);
            "checkbox" == this.selectionmode && (c = new b(k,null),
            c.visibleindex = m++,
            c.width = k.groupindentwidth,
            c.checkboxcolumn = !0,
            c.editable = !1,
            c.columntype = "checkbox",
            c.groupable = !1,
            c.draggable = !1,
            c.filterable = !1,
            c.resizable = !1,
            c.datafield = "_checkboxcolumn",
            l.add(c));
            var n = [];
            e.each(this.columns, function(p) {
                if (void 0 != k.columns[p]) {
                    var q = new b(k,this);
                    q.visibleindex = m++;
                    void 0 != this.dataField && (this.datafield = this.dataField);
                    this.pinned && (k._haspinned = !0);
                    !k.showeverpresentrow || "addButtonColumn" !== this.datafield && "resetButtonColumn" !== this.datafield && "updateButtonColumn" !== this.datafield && "deleteButtonColumn" !== this.datafield || (q.editable = !1,
                    q.groupable = !1,
                    q.draggable = !1,
                    q.filterable = !1,
                    q.resizable = !1,
                    q.menu = !1);
                    if (null == this.datafield)
                        k.source && k.source._source && "array" == k.source._source.datatype && (f || (k.source._source.datafields || (k.source._source.datafields = []),
                        k.source._source.datafields.push({
                            name: p.toString()
                        })),
                        this.datafield = p.toString(),
                        this.displayfield = p.toString(),
                        q.datafield = this.datafield,
                        q.displayfield = this.displayfield);
                    else {
                        if (n[this.datafield])
                            throw Error("jqxGrid: Invalid column 'datafield' setting. jqxGrid's columns should be initialized with unique data fields.");
                        n[this.datafield] = !0
                    }
                    l.add(q)
                }
            });
            this.adaptive && (c = new b(k,null),
            c.visibleindex = m++,
            c.width = k.groupindentwidth,
            c.editable = !1,
            c.columntype = "adaptive",
            c.cellsalign = "center",
            c.groupable = !1,
            c.draggable = !1,
            c.menu = !1,
            c.sortable = !1,
            c.filterable = !1,
            c.resizable = !1,
            c.datafield = "_adaptivecolumn",
            l.add(c));
            this.rtl && l.records.reverse();
            this.columns = l
        },
        _initializeRows: function() {
            var c = new e.jqx.collection(this.element);
            this.rows && this.rows.clear();
            this.rows = c
        },
        _raiseEvent: function(c, f) {
            void 0 == f && (f = {
                owner: null
            });
            if (!1 !== this._trigger) {
                var g = this.events[c];
                this._camelCase || (g = g.toLowerCase());
                if ((2 == c || 15 == c) && this.showeverpresentrow && (0 <= this.everpresentrowactions.indexOf("delete") || 0 <= this.everpresentrowactions.indexOf("update"))) {
                    if (this.updateeverpresentrow)
                        var h = this;
                    setTimeout(function() {
                        h.updateeverpresentrow()
                    }, 50)
                }
                f.owner = this;
                g = new e.Event(g);
                g.owner = this;
                g.args = f;
                c = this.host.trigger(g);
                f = g.args;
                return c
            }
        },
        wheel: function(c, f) {
            if (f.autoheight && "visible" != f.hScrollBar.css("visibility"))
                return c.returnValue = !0;
            var g = 0;
            c || (c = window.event);
            c.originalEvent && c.originalEvent.wheelDelta && (c.wheelDelta = c.originalEvent.wheelDelta);
            c.wheelDelta ? g = c.wheelDelta / 120 : c.detail && (g = -c.detail / 3);
            if (g) {
                if (f = f._handleDelta(g))
                    c.preventDefault && c.preventDefault(),
                    null != c.originalEvent && (c.originalEvent.mouseHandled = !0),
                    void 0 != c.stopPropagation && c.stopPropagation();
                return f ? (f = !1,
                c.returnValue = f) : !1
            }
            c.preventDefault && c.preventDefault();
            c.returnValue = !1
        },
        _handleDelta: function(c) {
            if ("hidden" != this.vScrollBar.css("visibility")) {
                var f = this.vScrollInstance.value;
                0 > c ? this.scrollDown() : this.scrollUp();
                c = this.vScrollInstance.value;
                if (f != c)
                    return !0
            } else if ("hidden" != this.hScrollBar.css("visibility") && (f = this.hScrollInstance.value,
            0 < c ? this.hScrollInstance.value > 2 * this.horizontalscrollbarstep ? this.hScrollInstance.setPosition(this.hScrollInstance.value - 2 * this.horizontalscrollbarstep) : this.hScrollInstance.setPosition(0) : this.hScrollInstance.value < this.hScrollInstance.max ? this.hScrollInstance.setPosition(this.hScrollInstance.value + 2 * this.horizontalscrollbarstep) : this.hScrollInstance.setPosition(this.hScrollInstance.max),
            c = this.hScrollInstance.value,
            f != c))
                return this._activeFilterElement && this._activeFilterElement.jqxDropDownList("close"),
                !0;
            return !1
        },
        scrollDown: function() {
            if ("hidden" != this.vScrollBar.css("visibility")) {
                var c = this.vScrollInstance;
                c.value + this.rowsheight <= c.max ? c.setPosition(parseInt(c.value) + this.rowsheight) : c.setPosition(c.max)
            }
        },
        scrollUp: function() {
            if ("hidden" != this.vScrollBar.css("visibility")) {
                var c = this.vScrollInstance;
                c.value - this.rowsheight >= c.min ? c.setPosition(parseInt(c.value) - this.rowsheight) : c.setPosition(c.min)
            }
        },
        _removeHandlers: function() {
            var c = this.that;
            c.removeHandler(e(window), "orientationchange.jqxgrid" + c.element.id);
            c.removeHandler(e(window), "orientationchanged.jqxgrid" + c.element.id);
            c.removeHandler(c.vScrollBar, "valueChanged");
            c.removeHandler(c.hScrollBar, "valueChanged");
            c.vScrollInstance.valueChanged = null;
            c.hScrollInstance.valueChanged = null;
            var f = "mousedown.jqxgrid";
            c.isTouchDevice() && (f = e.jqx.mobile.getTouchEventName("touchend"));
            c.removeHandler(c.host, "dblclick.jqxgrid");
            c.removeHandler(c.host, f);
            c.removeHandler(c.content, "mousemove", c._mousemovefunc);
            c.removeHandler(c.host, "mouseleave.jqxgrid");
            c.removeHandler(c.content, "mouseenter");
            c.removeHandler(c.content, "mouseleave");
            c.removeHandler(c.content, "mousedown");
            c.removeHandler(c.content, "scroll");
            c.removeHandler(c.content, "selectstart." + c.element.id);
            c.removeHandler(c.host, "dragstart." + c.element.id);
            c.removeHandler(c.host, "keydown.edit" + c.element.id);
            c.removeHandler(e(document), "keydown.edit" + c.element.id);
            c.removeHandler(e(document), "keyup.edit" + c.element.id);
            c._mousemovedocumentfunc && c.removeHandler(e(document), "mousemove.selection" + c.element.id, c._mousemovedocumentfunc);
            c.removeHandler(e(document), "mouseup.selection" + c.element.id);
            c._mousewheelfunc && c.removeHandler(c.host, "mousewheel", c._mousewheelfunc);
            c.editable && c.removeHandler(e(document), "mousedown.gridedit" + c.element.id);
            c.host.off && (c.content.off("mousemove"),
            c.host.off("mousewheel"))
        },
        _addHandlers: function() {
            var c = this.that
              , f = c.isTouchDevice();
            f || c.addHandler(c.host, "dragstart." + c.element.id, function(h) {
                return !1
            });
            c.scrollbarautoshow && (c.addHandler(c.host, "mouseenter.gridscroll" + c.element.id, function(h) {
                c.vScrollBar.fadeIn("fast");
                c.hScrollBar.fadeIn("fast")
            }),
            c.addHandler(c.host, "mouseleave.gridscroll" + c.element.id, function(h) {
                c.vScrollInstance.isScrolling() || c.hScrollInstance.isScrolling() || (c.vScrollBar.fadeOut("fast"),
                c.hScrollBar.fadeOut("fast"))
            }));
            c.editable && c.addHandler(e(document), "mousedown.gridedit" + c.element.id, function(h) {
                if (c.editable && c.begincelledit && c.editcell && !c.vScrollInstance.isScrolling() && !c.vScrollInstance.isScrolling()) {
                    var k = c.host.coord()
                      , l = c.host.width()
                      , m = c.host.height()
                      , n = !1
                      , p = !1;
                    if (h.pageY < k.top || h.pageY > k.top + m)
                        p = n = !0;
                    if (h.pageX < k.left || h.pageX > k.left + l)
                        n = !0;
                    if (n) {
                        if (c.editcell && c.editcell.editor)
                            switch (c.editcell.columntype) {
                            case "datetimeinput":
                                if (c.editcell.editor.jqxDateTimeInput && c.editcell.editor.jqxDateTimeInput("container") && "block" == c.editcell.editor.jqxDateTimeInput("container")[0].style.display)
                                    if (k = c.editcell.editor.jqxDateTimeInput("container").coord().top,
                                    l = c.editcell.editor.jqxDateTimeInput("container").coord().top + c.editcell.editor.jqxDateTimeInput("container").height(),
                                    p && (h.pageY < k || h.pageY > l))
                                        c.editcell.editor.jqxDateTimeInput("close");
                                    else
                                        return;
                                break;
                            case "combobox":
                                if (c.editcell.editor.jqxComboBox && c.editcell.editor.jqxComboBox("container") && "block" == c.editcell.editor.jqxComboBox("container")[0].style.display)
                                    if (k = c.editcell.editor.jqxComboBox("container").coord().top,
                                    l = c.editcell.editor.jqxComboBox("container").coord().top + c.editcell.editor.jqxComboBox("container").height(),
                                    p && (h.pageY < k || h.pageY > l))
                                        c.editcell.editor.jqxComboBox("close");
                                    else
                                        return;
                                break;
                            case "dropdownlist":
                                if (c.editcell.editor.jqxDropDownList && c.editcell.editor.jqxDropDownList("container") && "block" == c.editcell.editor.jqxDropDownList("container")[0].style.display)
                                    if (k = c.editcell.editor.jqxDropDownList("container").coord().top,
                                    l = c.editcell.editor.jqxDropDownList("container").coord().top + c.editcell.editor.jqxDropDownList("container").height(),
                                    p && (h.pageY < k || h.pageY > l))
                                        c.editcell.editor.jqxDropDownList("close");
                                    else
                                        return;
                                break;
                            case "template":
                            case "custom":
                                for (k = ["jqxDropDownList", "jqxComboBox", "jqxDropDownButton", "jqxDateTimeInput"],
                                l = 0; l < k.length; l++) {
                                    m = k[l];
                                    n = c.editcell.editor.data();
                                    if (n[m] && n[m].instance.container && "block" == n[m].instance.container[0].style.display) {
                                        m = n[m].instance;
                                        n = m.container.coord().top;
                                        var q = m.container.coord().top + m.container.height();
                                        p && (h.pageY < n || h.pageY > q) ? (m.close(),
                                        m = !0) : m = !1
                                    } else
                                        m = void 0;
                                    if (0 == m)
                                        return
                                }
                            }
                        c.endcelledit(c.editcell.row, c.editcell.column, !1, !0);
                        c._oldselectedcell = null
                    }
                }
            });
            c.vScrollInstance.valueChanged = function(h) {
                c.virtualsizeinfo && (c._closemenu(),
                c._renderrows(c.virtualsizeinfo),
                c.currentScrollValue = h.currentValue,
                c.pageable || c.groupable || !c.dataview.virtualmode || (c.loadondemandupdate && clearTimeout(c.loadondemandupdate),
                c.loadondemandupdate = setTimeout(function() {
                    c.loadondemand = !0;
                    c._renderrows(c.virtualsizeinfo)
                }, 100)),
                f && (c._lastScroll = new Date))
            }
            ;
            c.hScrollInstance.valueChanged = function(h) {
                if (c.virtualsizeinfo) {
                    c._closemenu();
                    var k = function() {
                        c._renderhorizontalscroll();
                        c._renderrows(c.virtualsizeinfo);
                        c.editcell && !c.editrow && c._showcelleditor && c.editcell.editing && (c.hScrollInstance.isScrolling() || c._showcelleditor(c.editcell.row, c.getcolumn(c.editcell.column), c.editcell.element, c.editcell.init))
                    };
                    f ? k() : (void 0 == c._browser && c._isIE10(),
                    navigator && -1 != navigator.userAgent.indexOf("Safari") && -1 == navigator.userAgent.indexOf("Chrome") ? (c._hScrollTimer && clearTimeout(c._hScrollTimer),
                    c._hScrollTimer = setTimeout(function() {
                        k()
                    }, 1)) : e.jqx.browser.msie ? (c._hScrollTimer && clearTimeout(c._hScrollTimer),
                    c._hScrollTimer = setTimeout(function() {
                        k()
                    }, .01)) : k());
                    f && (c._lastScroll = new Date)
                }
            }
            ;
            c._mousewheelfunc = c._mousewheelfunc || function(h) {
                if (!c.editcell && c.enablemousewheel)
                    return c.wheel(h, c),
                    !1
            }
            ;
            c.removeHandler(c.host, "mousewheel", c._mousewheelfunc);
            c.addHandler(c.host, "mousewheel", c._mousewheelfunc);
            var g = "mousedown.jqxgrid";
            f && (g = e.jqx.mobile.getTouchEventName("touchend"));
            c.addHandler(c.host, g, function(h) {
                if (c.isTouchDevice() && (c._newScroll = new Date,
                500 > c._newScroll - c._lastScroll || e(h.target).ischildof(c.vScrollBar) || e(h.target).ischildof(c.hScrollBar)))
                    return !1;
                c._mousedown = new Date;
                var k = c._handlemousedown(h, c);
                c.isNestedGrid && (c.resizablecolumn || c.columnsreorder || h.stopPropagation());
                c._lastmousedown = new Date;
                return k
            });
            f || (c.addHandler(c.host, "dblclick.jqxgrid", function(h) {
                c.editable && c.begincelledit && "dblclick" == c.editmode ? c._handledblclick(h, c) : e.jqx.browser.msie && 9 > e.jqx.browser.version && c._handlemousedown(h, c);
                c.mousecaptured = !1;
                c._lastmousedown = new Date;
                return !0
            }),
            c._mousemovefunc = function(h) {
                if (c._handlemousemove)
                    return c._handlemousemove(h, c)
            }
            ,
            c.addHandler(c.content, "mousemove", c._mousemovefunc),
            c._handlemousemoveselection && (c._mousemovedocumentfunc = function(h) {
                if (c._handlemousemoveselection)
                    return c._handlemousemoveselection(h, c)
            }
            ,
            c.addHandler(e(document), "mousemove.selection" + c.element.id, c._mousemovedocumentfunc)),
            c.addHandler(e(document), "mouseup.selection" + c.element.id, function(h) {
                if (c._handlemouseupselection) {
                    if (h.shiftKey && e(h.target).ischildof(c.host)) {
                        var k = c.editable;
                        c.editable = !1;
                        c._lastmousedown = new Date(2E3,1,1);
                        c._handlemousedown(h, c);
                        c.mousecaptured = !0;
                        c.editable = k
                    }
                    c._handlemouseupselection(h, c)
                }
            }));
            try {
                "" == document.referrer && !window.frameElement || null == window.top || window.top == window.self || (g = null,
                window.parent && document.referrer && (g = document.referrer),
                g && -1 != g.indexOf(document.location.host) && c.addHandler(e(window.top.document), "mouseup.grid" + c.element.id, function(h) {
                    if (c._handlemouseupselection)
                        try {
                            c._handlemouseupselection(h, c)
                        } catch (k) {}
                }))
            } catch (h) {}
            c.focused = !1;
            f || (c.addHandler(c.content, "mouseenter", function(h) {
                c.focused = !0;
                c.wrapper && (c.wrapper.attr("tabindex", 1),
                c.content.attr("tabindex", 2));
                c._overlayElement && (c.vScrollInstance.isScrolling() || c.hScrollInstance.isScrolling() ? c._overlayElement[0].style.visibility = "visible" : c._overlayElement[0].style.visibility = "hidden")
            }),
            c.addHandler(c.content, "mouseleave", function(h) {
                c._handlemousemove && c.enablehover && c._clearhoverstyle();
                c._overlayElement && (c._overlayElement[0].style.visibility = "hidden");
                c.focused = !1
            }),
            (c.groupable || c.columnsreorder) && c.addHandler(e(document), "selectstart." + c.element.id, function(h) {
                if (!0 === c.__drag)
                    return !1
            }),
            c.addHandler(c.content, "selectstart." + c.element.id, function(h) {
                if (c.enablebrowserselection || c.showfilterrow && e(h.target).ischildof(c.filterrow) || c.showeverpresentrow && (e(h.target).ischildof(c.addnewrow) || c.addnewrowtop && e(h.target).ischildof(c.addnewrowtop)) || h.target.className && 0 <= h.target.className.indexOf("jqx-grid-widget"))
                    return !0;
                if (!c.editcell)
                    return !1;
                h.stopPropagation && h.stopPropagation()
            }),
            c.addHandler(e(document), "keyup.edit" + c.element.id, function(h) {
                c._keydown = !1
            }),
            c.addHandler(e(document), "keydown.edit" + c.element.id, function(h) {
                if (c.adaptiveview)
                    return !0;
                c._keydown = !c.editcell;
                var k = h.charCode ? h.charCode : h.keyCode ? h.keyCode : 0;
                20 === k && (c._capsLock = c._capsLock ? !1 : !0);
                if (c.handlekeyboardnavigation && (c.focused || h.target === c.element || e(h.target).ischildof(c.host)) && 1 == c.handlekeyboardnavigation(h))
                    return !1;
                c.editable && c.editcell && (13 == k || 27 == k || 9 == k || 32 == k) && c._handleeditkeydown && (l = c._handleeditkeydown(h, c));
                27 == k && (c.mousecaptured = !1,
                "visible" == c.selectionarea.css("visibility") && c.selectionarea.css("visibility", "hidden"));
                if (e.jqx.browser.msie && 12 > e.jqx.browser.version && c.focused && !c.isNestedGrid) {
                    if (13 == k && 0 == l)
                        return l;
                    var l = !0;
                    !c.editcell && c.editable && "programmatic" != c.editmode && c._handleeditkeydown && (l = c._handleeditkeydown(h, c));
                    if (l && c.keyboardnavigation && c._handlekeydown)
                        return l = c._handlekeydown(h, c),
                        l || (h.preventDefault && h.preventDefault(),
                        void 0 != h.stopPropagation && h.stopPropagation()),
                        l
                }
                return !0
            }),
            c.addHandler(c.host, "keyup.edit" + c.element.id, function(h) {
                if (c.adaptiveview)
                    return !0;
                if (9 === h.keyCode && !e(document.activeElement).ischildof(c.filterrow) && !e(document.activeElement).ischildof(c.pager))
                    switch (c.selectionmode) {
                    case "singlecell":
                    case "multiplecells":
                    case "multiplecellsextended":
                    case "multiplecellsadvanced":
                        c.getselectedcell();
                        break;
                    default:
                        c.getselectedrowindex()
                    }
            }),
            c.addHandler(c.host, "keydown.edit" + c.element.id, function(h) {
                var k = !0;
                if (c.adaptiveview)
                    return !0;
                if (c.handlekeyboardnavigation && 1 == c.handlekeyboardnavigation(h))
                    return !1;
                c.editable && "programmatic" != c.editmode && c._handleeditkeydown && (k = c._handleeditkeydown(h, c),
                c.isNestedGrid && h.stopPropagation());
                if (!c.editcell && h.altKey && !e(document.activeElement).ischildof(c.filterrow) && !e(document.activeElement).ischildof(c.pager))
                    if (40 === h.keyCode) {
                        var l = c.getselectedcell();
                        l && c.openmenu(l.column)
                    } else
                        38 === h.keyCode && c._closemenu();
                e.jqx.browser.msie && 8 > e.jqx.browser.version ? c.isNestedGrid && k && c.keyboardnavigation && c._handlekeydown && (k = c._handlekeydown(h, c),
                h.stopPropagation()) : k && c.keyboardnavigation && c._handlekeydown && (k = c._handlekeydown(h, c),
                c.isNestedGrid && h.stopPropagation());
                k || (h.preventDefault && h.preventDefault(),
                void 0 != h.stopPropagation && h.stopPropagation());
                k && c.selectedcells && 0 < c.selectedcells.length && 9 === h.keyCode && h.shiftKey && c.table && c.table[0].rows && 0 < c.table[0].rows.length && (e(document.activeElement).ischildof(c.filterrow) || e(document.activeElement).ischildof(c.pager) || c.table[0].rows[0].cells[0].focus());
                return k
            }))
        },
        _hittestrow: function(c, f) {
            if (null != this.vScrollInstance && null != this.hScrollInstance) {
                void 0 == f && 0 == f;
                var g = this.hScrollInstance;
                c = this.vScrollInstance.value;
                "visible" != this.vScrollBar.css("visibility") && (c = 0);
                g = g.value;
                "visible" != this.hScrollBar.css("visibility") && (g = 0);
                "deferred" == this.scrollmode && null != this._newmax && c > this._newmax && (c = this._newmax);
                var h = parseInt(c) + f;
                parseInt(g);
                if (null != this.visiblerows && 0 != this.visiblerows.length) {
                    c = !1;
                    g = this._findvisiblerow(h, this.visiblerows);
                    if (0 <= g) {
                        var k = this.visiblerows[g];
                        h = !k.rowdetailshidden;
                        if (this.rowdetails && k.rowdetails) {
                            var l = this.visiblerows[g - 1];
                            l == k && (k = l,
                            g--);
                            h && (h = e(this.hittestinfo[g].visualrow).position().top + parseInt(this.table.css("top")),
                            l = e(this.hittestinfo[g].visualrow).height(),
                            f >= h && f <= h + l || (g++,
                            k = this.visiblerows[g],
                            c = !0))
                        }
                    }
                    return {
                        index: g,
                        row: k,
                        details: c
                    }
                }
            }
        },
        getcellatposition: function(c, f) {
            var g = this.that
              , h = this.showheader ? this.columnsheader.height() + 2 : 0
              , k = this._groupsheader() ? this.groupsheader.height() : 0;
            k = k + (this.showtoolbar ? this.toolbarheight : 0) + (this.showfilterbar ? this.toolbarheight : 0);
            var l = this.host.coord();
            this.hasTransform && (l = e.jqx.utilities.getOffset(this.host));
            var m = c - l.left;
            c = f - h - l.top - k;
            h = this._hittestrow(m, c);
            f = h.row;
            h = this.table[0].rows[h.index];
            if (this.dataview && 0 == this.dataview.records.length) {
                f = this.table[0].rows;
                for (k = l = 0; k < f.length; k++) {
                    if (c >= l && c < l + this.rowsheight) {
                        h = f[k];
                        break
                    }
                    l += this.rowsheight
                }
                f = {
                    boundindex: k
                }
            }
            if (null == h)
                return !0;
            l = this.hScrollInstance.value;
            var n = 0;
            for (k = 0; k < h.cells.length; k++) {
                var p = parseInt(e(this.columnsrow[0].cells[k]).css("left"));
                c = p - l;
                g.columns.records[k].pinned && (c = p);
                if (!g.columns.records[k].hidden && !g.columns.records[k].adaptivehidden && c + e(this.columnsrow[0].cells[k]).width() >= m && m >= c) {
                    n = k;
                    break
                }
            }
            return null != f ? (g = this._getcolumnat(n),
            {
                row: this.getboundindex(f),
                column: g.datafield,
                value: this.getcellvalue(this.getboundindex(f), g.datafield)
            }) : null
        },
        _handlecardedit: function(c) {
            var f = c.target.getAttribute("row")
              , g = document.createElement("div");
            c = this.getrowdatabyid(f);
            var h = '<div class="jqx-grid-card-cell"><table>';
            for (var k = 0; k < this.columns.records.length; k++) {
                var l = this.columns.records[k];
                if (!l.hidden || void 0 !== l.__hidden) {
                    var m = c[l.datafield];
                    "" != l.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(m) ? m = e.jqx.dataFormat.formatdate(m, l.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(m) && (m = e.jqx.dataFormat.formatnumber(m, l.cellsformat, this.gridlocalization)));
                    h += '<tr class="jqx-grid-card-table-row">';
                    h += '<td class="jqx-grid-card-cell-label"><div>' + l.text + "</div></td>";
                    h += '<td class="jqx-grid-card-cell-value"><div><input datafield="' + l.datafield + '" class="jqx-widget jqx-input" value="' + m + '"/></div></td>';
                    h += "</tr>"
                }
            }
            g.innerHTML = "<div>" + this.gridlocalization.udpaterowstring + " " + f + '</div><div style="overflow: hidden;">' + (h + '</table></div><div class="jqx-card-edit-buttons"><input style="margin-right: 5px;" type="button" dataid="Save" value="Save" /><input dataid="Cancel" type="button" value="Cancel" /></td></div></div></div>');
            c = g.querySelector('[dataid="Save"]');
            h = g.querySelector('[dataid="Cancel"]');
            e(c).jqxButton({
                template: "primary",
                width: "40%",
                theme: this.theme
            });
            e(h).jqxButton({
                width: "40%",
                theme: this.theme
            });
            var n = this;
            c.onclick = function() {
                for (var p = e(g).find("[datafield]"), q = {}, t = 0; t < p.length; t++) {
                    for (var v = p[t].getAttribute("datafield"), z = p[t].value, E = 0; E < n.dataview.source.datafields.length; E++) {
                        var C = n.dataview.source.datafields[E];
                        if (C.name === v) {
                            if ("bool" === C.type || "boolean" === C.type)
                                z = !0;
                            var F = n._getcolumnbydatafield(C.name);
                            C = C.type;
                            var P = "date" === C || "time" === C;
                            if ("number" === C || "float" === C || "int" === C || "integer" === C || "string" === C && (-1 != F.cellsformat.indexOf("p") || -1 != F.cellsformat.indexOf("c") || -1 != F.cellsformat.indexOf("n") || -1 != F.cellsformat.indexOf("f"))) {
                                if ("" === z && F.nullable)
                                    return "";
                                z.indexOf && -1 < z.indexOf(n.gridlocalization.currencysymbol) && (z = z.replace(n.gridlocalization.currencysymbol, ""));
                                var X = z;
                                X = parseFloat(X);
                                if (isNaN(X)) {
                                    X = n.gridlocalization.thousandsseparator;
                                    var W = z;
                                    if ("" != X) {
                                        for (z = W.indexOf(X); -1 != z; )
                                            W = W.replace(X, ""),
                                            z = W.indexOf(X);
                                        z = W
                                    }
                                    z = z.replace(n.gridlocalization.decimalseparator, ".");
                                    -1 < z.indexOf(n.gridlocalization.percentsymbol) && (z = z.replace(n.gridlocalization.percentsymbol, ""));
                                    X = "";
                                    for (W = 0; W < z.length; W++) {
                                        var V = z.substring(W, W + 1);
                                        "-" === V && (X += "-");
                                        "." === V && (X += ".");
                                        null != V.match(/^[0-9]+$/) && (X += V)
                                    }
                                    z = X;
                                    z = z.replace(/ /g, "");
                                    z = new Number(z);
                                    isNaN(z) && (z = "")
                                } else
                                    z = X
                            }
                            if (P || "string" === C && (-1 != F.cellsformat.indexOf("H") || -1 != F.cellsformat.indexOf("m") || -1 != F.cellsformat.indexOf("M") || -1 != F.cellsformat.indexOf("y") || -1 != F.cellsformat.indexOf("h") || -1 != F.cellsformat.indexOf("d"))) {
                                if ("" === z && F.nullable)
                                    return "";
                                F = z;
                                e.jqx.dataFormat && (z = e.jqx.dataFormat.tryparsedate(F, n.gridlocalization));
                                if ("Invalid Date" == z || null == z)
                                    z = ""
                            }
                        }
                    }
                    q[v] = z
                }
                n.updaterow(f, q);
                e(g).jqxWindow("close")
            }
            ;
            h.onclick = function() {
                e(g).jqxWindow("close")
            }
            ;
            document.body.appendChild(g);
            e(g).jqxWindow({
                position: {
                    left: this.host.offset().left,
                    top: this.host.offset().top
                },
                modalOpacity: .01,
                width: this.element.offsetWidth,
                height: this.element.offsetHeight,
                isModal: !0,
                autoOpen: !1,
                resizable: !1,
                draggable: !1
            });
            e(g).jqxWindow("open");
            this.cardwindow && e(this.cardwindow).remove();
            this.cardwindow = g
        },
        _handlemousedown: function(c, f) {
            if (null == c.target || f.disabled || e(c.target).ischildof(this.columnsheader) || e(c.target).ischildof(this.hScrollBar) || e(c.target).ischildof(this.vScrollBar) || c.target === f.bottomRight[0])
                return !0;
            f.cardview && c.target && 0 <= c.target.className.indexOf("jqx-icon-edit") && f._handlecardedit(c);
            var g;
            c.which ? g = 3 == c.which : c.button && (g = 2 == c.button);
            var h;
            c.which ? h = 2 == c.which : c.button && (h = 1 == c.button);
            if (h || this.adaptiveview && (e(c.target).ischildof(e(this.adaptiveview)) || c.target == this.adaptiveview) || this.showstatusbar && (e(c.target).ischildof(this.statusbar) || c.target == this.statusbar[0]) || this.showtoolbar && (e(c.target).ischildof(this.toolbar) || c.target == this.toolbar[0]) || this.showfilterbar && (e(c.target).ischildof(this.filterbar) || c.target == this.filterbar[0]) || this.pageable && (e(c.target).ischildof(this.pager) || c.target == this.pager[0]) || !this.columnsheader || !this.editcell && this.pageable && e(c.target).ischildof(this.pager))
                return !0;
            h = this.showheader ? this.columnsheader.height() + 2 : 0;
            var k = this._groupsheader() ? this.groupsheader.height() : 0;
            k = k + (this.showtoolbar ? this.toolbarheight : 0) + (this.showfilterbar ? this.toolbarheight : 0);
            var l = this.host.coord();
            if (this.hasTransform) {
                l = e.jqx.utilities.getOffset(this.host);
                var m = this._getBodyOffset();
                l.left -= m.left;
                l.top -= m.top
            }
            var n = parseInt(c.pageX);
            m = parseInt(c.pageY);
            if (this.isTouchDevice()) {
                var p = f.getTouches(c)[0];
                n = parseInt(p.pageX);
                m = parseInt(p.pageY);
                1 == f.touchmode && void 0 != p._pageX && (n = parseInt(p._pageX),
                m = parseInt(p._pageY))
            }
            p = n - l.left;
            m = m - h - l.top - k;
            if (this.pageable && !this.autoheight && this.gotopage && (h = this.pager.coord().top - l.top - k - h,
            m > h))
                return;
            if ((l = this._hittestrow(p, m)) && !l.details) {
                h = l.row;
                m = l.index;
                var q = c.target.className
                  , t = this.table[0].rows[m];
                if (null == t)
                    return f.editable && f.begincelledit && f.editcell && f.endcelledit(f.editcell.row, f.editcell.column, !1, !0),
                    !0;
                f.mousecaptured = !0;
                f.mousecaptureposition = {
                    left: c.pageX,
                    top: c.pageY - k,
                    clickedrow: t
                };
                k = this.hScrollInstance;
                var v = k.value;
                this.rtl && "hidden" != this.hScrollBar.css("visibility") && (v = k.max - k.value);
                var z = -1
                  , E = this.groupable ? this.groups.length : 0;
                this.rtl && ("hidden" != this.vScrollBar[0].style.visibility && (v -= this.scrollbarsize + 4),
                "hidden" == this.hScrollBar[0].style.visibility && (v = -parseInt(this.content.css("left"))));
                for (var C = 0; C < t.cells.length; C++)
                    if (k = parseInt(e(this.columnsrow[0].cells[C]).css("left")),
                    n = k - v,
                    f.columns.records[C].pinned && !f.rtl && (n = k),
                    k = this._getcolumnat(C),
                    null == k || !k.hidden)
                        if (null == k || !k.adaptivehidden)
                            if (k = n + e(this.columnsrow[0].cells[C]).width(),
                            k >= p && p >= n) {
                                z = C;
                                f.mousecaptureposition.clickedcell = C;
                                break
                            }
                if (this.rtl && this._haspinned)
                    for (C = t.cells.length - 1; 0 <= C && f.columns.records[C].pinned; C--)
                        if (n = k = e(this.columnsrow[0].cells[C]).coord().left - this.host.coord().left,
                        k = this._getcolumnat(C),
                        null == k || !k.hidden)
                            if (null == k || !k.adaptivehidden)
                                if (k = n + e(this.columnsrow[0].cells[C]).width(),
                                k >= p && p >= n) {
                                    z = C;
                                    f.mousecaptureposition.clickedcell = C;
                                    break
                                }
                if (null != h && 0 <= z) {
                    this._raiseEvent(1, {
                        rowindex: this.getboundindex(h),
                        visibleindex: h.visibleindex,
                        row: h,
                        group: h.group,
                        rightclick: g,
                        originalEvent: c
                    });
                    k = this._getcolumnat(z);
                    p = this.getcellvalue(this.getboundindex(h), k.datafield);
                    this.editable && this.editcell && (this._currentEditableColumn = z,
                    k.datafield == this.editcell.column && this.getboundindex(h) == this.editcell.row && (this.mousecaptured = !1));
                    if ("adaptive" === k.columntype) {
                        var F = document.createElement("div")
                          , P = document.createElement("div");
                        g = document.createElement("a");
                        k = document.createElement("a");
                        l = document.createElement("div");
                        var X = this.getrowdata(this.getboundindex(h));
                        g.href = "#";
                        k.href = "#";
                        F.style.zIndex = 99999;
                        F.style.position = "absolute";
                        F.style.left = "0px";
                        F.style.top = "0px";
                        F.style.width = "100%";
                        F.style.height = "100%";
                        F.className = "jqx-adaptive-view jqx-widget-content";
                        l.style.position = "relative";
                        l.style.top = "100%";
                        l.style.textAlign = "center";
                        l.style.marginTop = "-40px";
                        P.style.position = "absolute";
                        P.style.left = "0px";
                        P.style.top = "0px";
                        P.style.width = "100%";
                        P.style.height = "100%";
                        this.theme && (F.className = "jqx-widget-content jqx-widget-content-" + this.theme);
                        h = document.createElement("span");
                        h.className = "jqx-icon-close";
                        this.theme && (h.className = "jqx-icon-close jqx-widget-close-" + this.theme);
                        h.style.zIndex = 99;
                        h.style.position = "absolute";
                        h.style.right = "10px";
                        h.style.top = "10px";
                        h.style.width = "16px";
                        h.style.height = "16px";
                        F.appendChild(P);
                        F.appendChild(h);
                        g.innerHTML = this.gridlocalization.okstring;
                        k.innerHTML = this.gridlocalization.cancelstring;
                        g.addEventListener("mousedown", function(W) {
                            for (var V = {}, ca = f.adaptiveview.querySelectorAll("input"), u = 0; u < ca.length; u++) {
                                var D = f.escape_HTML(ca[u].value)
                                  , B = ca[u].getAttribute("data-column");
                                V[B] = D
                            }
                            f.updaterow(X.uid, V);
                            F.parentNode.removeChild(F);
                            f.adaptiveview = null;
                            W.stopPropagation();
                            return !1
                        });
                        k.addEventListener("mousedown", function() {
                            F.parentNode.removeChild(F);
                            f.adaptiveview = null;
                            c.stopPropagation();
                            return !1
                        });
                        this.editable && (l.appendChild(g),
                        l.appendChild(k),
                        F.appendChild(l));
                        g = "<table class='jqx-adaptive-table'><tr>";
                        for (C = m = 0; C < this.columns.records.length; C++)
                            k = this.columns.records[C],
                            "adaptive" !== k.columntype && (0 < C && 0 === m % 2 && (g += "</tr><tr>"),
                            l = X[k.displayfield],
                            "" != k.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(l) ? l = e.jqx.dataFormat.formatdate(l, k.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(l) && (l = e.jqx.dataFormat.formatnumber(l, k.cellsformat, this.gridlocalization))),
                            p = this.filterable ? '<div datafield="' + k.datafield + '" class="' + f.toTP("jqx-grid-column-filterbutton") + '" style="position: relative; top: 4px; display: inline-block; width: 16px; height:16px;"></div>' : "",
                            g = this.editable ? k.editable ? g + ("<td>" + p + this.escape_HTML(k.text) + ": <input data-column='" + k.displayfield + "' value='" + l + "'/></td>") : g + ("<td>" + p + this.escape_HTML(k.text) + ": <input data-column='" + k.displayfield + "' readonly value='" + l + "'/></td>") : g + ("<td>" + p + this.escape_HTML(k.text) + ": " + l + "</td>"),
                            m++);
                        P.innerHTML = g + "</tr></table>";
                        h.addEventListener("mousedown", function(W) {
                            F.parentNode.removeChild(F);
                            f.adaptiveview = null
                        });
                        this.wrapper[0].appendChild(F);
                        this.adaptiveview = F;
                        e(this.adaptiveview).find(".jqx-grid-column-filterbutton").on("click", function() {
                            var W = this.getAttribute("datafield")
                              , V = this.offsetTop;
                            f.openmenu(W);
                            setTimeout(function() {
                                f.gridmenu.css("top", 30 + V);
                                f.gridmenu.css("left", 25);
                                f.gridmenu.css("z-index", 99999);
                                f.gridmenu.parent().css("z-index", 99999)
                            }, 300)
                        });
                        return
                    }
                    this._raiseEvent(8, {
                        rowindex: this.getboundindex(h),
                        column: k ? k.getcolumnproperties() : null,
                        row: h,
                        visibleindex: h.visibleindex,
                        datafield: k ? k.datafield : null,
                        columnindex: z,
                        value: p,
                        rightclick: g,
                        originalEvent: c
                    });
                    if (k.createwidget)
                        return !0;
                    if (this.isTouchDevice())
                        if ("checkbox" == k.columntype && this.editable && this._overlayElement) {
                            if (!this.editcell)
                                return this._overlayElement.css("visibility", "hidden"),
                                this.editcell = this.getcell(m, k.datafield),
                                !0
                        } else if ("button" == k.columntype && this._overlayElement)
                            return k.buttonclick && k.buttonclick(t.cells[z].buttonrow, c),
                            !0;
                    m = !1;
                    if (null != this._lastmousedown && 300 > this._mousedown - this._lastmousedown && this._clickedrowindex == this.getboundindex(h) && (this._raiseEvent(22, {
                        rowindex: this.getboundindex(h),
                        row: h,
                        visibleindex: h.visibleindex,
                        group: h.group,
                        rightclick: g,
                        originalEvent: c
                    }),
                    this._clickedcolumn == k.datafield && this._raiseEvent(23, {
                        rowindex: this.getboundindex(h),
                        row: h,
                        visibleindex: h.visibleindex,
                        column: k ? k.getcolumnproperties() : null,
                        datafield: k ? k.datafield : null,
                        columnindex: z,
                        value: p,
                        rightclick: g,
                        originalEvent: c
                    }),
                    m = !0,
                    this._clickedrowindex = -1,
                    this._clickedcolumn = null,
                    c.isPropagationStopped && c.isPropagationStopped()))
                        return !1;
                    if (g)
                        return !0;
                    m || (this._clickedrowindex = this.getboundindex(h),
                    this._clickedcolumn = k.datafield);
                    g = e.jqx.utilities.getBrowser();
                    "msie" == g.browser && 7 >= parseInt(g.version) && (0 == z && this.rowdetails && (q = "jqx-grid-group-collapse"),
                    0 < E && z <= E && (q = "jqx-grid-group-collapse"));
                    if (-1 != q.indexOf("jqx-grid-group-expand") || -1 != q.indexOf("jqx-grid-group-collapse"))
                        this.rtl ? 0 < E && z > t.cells.length - E - 1 && this._togglegroupstate ? this._togglegroupstate(h.bounddata, !0) : z == t.cells.length - 1 - E && this.rowdetails && this.showrowdetailscolumn && (this._togglerowdetails(h.bounddata, !0),
                        this.gridcontent[0].scrollTop = 0,
                        this.gridcontent[0].scrollLeft = 0) : 0 < E && z < E && this._togglegroupstate ? this._togglegroupstate(h.bounddata, !0) : z == E && this.rowdetails && this.showrowdetailscolumn && (this._togglerowdetails(h.bounddata, !0),
                        this.gridcontent[0].scrollTop = 0,
                        this.gridcontent[0].scrollLeft = 0);
                    else if (-1 != h.boundindex) {
                        p = this.selectedrowindexes.slice(0);
                        g = !1;
                        if ("none" != f.selectionmode && "checkbox" != f.selectionmode && this._selectrowwithmouse) {
                            "multiplecellsadvanced" != f.selectionmode && "multiplecellsextended" != f.selectionmode && "multiplerowsextended" != f.selectionmode && "multiplerowsadvanced" != f.selectionmode || c.ctrlKey || c.shiftKey || c.metaKey || (f.selectedrowindexes = [],
                            f.selectedcells = []);
                            P = !1;
                            m = this.getboundindex(h);
                            if (f._oldselectedrow === m || "none" === f.selectionmode)
                                P = !0;
                            if (-1 == f.selectionmode.indexOf("cell")) {
                                if ("singlerow" != f.selectionmode || f.selectedrowindex != m && "singlerow" == f.selectionmode)
                                    this._applyrowselection(m, !0, !1, null, k.datafield),
                                    this._selectrowwithmouse(f, l, p, k.datafield, c.ctrlKey || c.metaKey, c.shiftKey)
                            } else
                                null != k.datafield && (this._selectrowwithmouse(f, l, p, k.datafield, c.ctrlKey || c.metaKey, c.shiftKey),
                                c.shiftKey || this._applycellselection(m, k.datafield, !0, !1));
                            f._oldselectedcell && f._oldselectedcell.datafield == f.selectedcell.datafield && f._oldselectedcell.rowindex == f.selectedcell.rowindex && (g = !0);
                            f._oldselectedcell = f.selectedcell;
                            f._oldselectedrow = m
                        }
                        f.autosavestate && f.savestate && f.savestate();
                        if (f.editable && f.begincelledit && "programmatic" != f.editmode) {
                            if (c.isPropagationStopped && c.isPropagationStopped())
                                return !1;
                            "selectedrow" == f.editmode ? P && !f.editcell ? "checkbox" !== k.columntype && (this._currentEditableColumn = z,
                            f.beginrowedit(this.getboundindex(h))) : f.editcell && !P && "none" != f.selectionmode && f.endrowedit(f.editcell.row) : (m = this.getboundindex(h),
                            P = "click" == f.editmode || g && "selectedcell" == f.editmode,
                            -1 == f.selectionmode.indexOf("cell") && "dblclick" != f.editmode && (P = !0),
                            P && void 0 != h.boundindex && k.editable && (f.begincelledit(this.getboundindex(h), k.datafield, k.defaulteditorvalue, !1),
                            -1 != f.selectionmode.indexOf("cell") && f._applycellselection(m, k.datafield, !1, !1)),
                            -1 != f.selectionmode.indexOf("cell") && "selectedcell" == f.editmode && !g && f.editcell && f.endcelledit(f.editcell.row, f.editcell.column, !1, !0),
                            "dblclick" != f.editmode || g || !f.editcell || f.editcell.row == m && k.datafield == f.editcell.column || f.endcelledit(f.editcell.row, f.editcell.column, !1, !0))
                        }
                    }
                }
                return !0
            }
        },
        _columnPropertyChanged: function(c, f, g, h) {},
        _rowPropertyChanged: function(c, f, g, h) {},
        _serializeObject: function(c) {
            if (null == c)
                return "";
            var f = "";
            e.each(c, function(g) {
                0 < g && (f += ", ");
                f += "[";
                g = 0;
                for (var h in this)
                    0 < g && (f += ", "),
                    f += "{" + h + ":" + this[h] + "}",
                    g++;
                f += "]"
            });
            return f
        },
        isbindingcompleted: function() {
            return !this._loading
        },
        propertiesChangedHandler: function(c, f, g) {
            g.width && g.height && 2 == Object.keys(g).length && (c._updatesize(!0, !0),
            c._resizeWindow(),
            c.virtualmode && !c._loading ? c.vScrollInstance.setPosition(0) : setTimeout(function() {
                c._renderrows(c.virtualsizeinfo)
            }, 100))
        },
        propertyChangedHandler: function(c, f, g, h) {
            if (void 0 != this.isInitialized && 0 != this.isInitialized && !(c.batchUpdate && c.batchUpdate.width && c.batchUpdate.height && 2 == Object.keys(c.batchUpdate).length))
                switch (f = f.toLowerCase(),
                f) {
                case "cardview":
                case "cardviewsize":
                case "cardviewcolumns":
                case "cardheight":
                    c.rowsheight = 32;
                    c.__rowsheight = c.rowsheight;
                    c.virtualsizeinfo = null;
                    c.cardview && (c.__rowsheight = c.rowsheight,
                    c.rowsheight = c.cardheight);
                    c.render();
                    break;
                case "editable":
                case "showcolumnheaderlines":
                case "showcolumnlines":
                case "showrowlines":
                    c.refresh();
                    break;
                case "everpresentrowactionsmode":
                    g != h && (c._removeaddnewrow(),
                    c.render());
                    break;
                case "everpresentrowactions":
                    c._updateaddnewrowui();
                    break;
                case "showeverpresentrow":
                case "everpresentrowposition":
                case "everpresentrowheight":
                    g != h && (c._removeaddnewrow(),
                    c.render());
                    break;
                case "rtl":
                    c.content.css("left", "");
                    c.columns = c._columns;
                    c._filterrowcache = [];
                    c.vScrollBar.jqxScrollBar({
                        rtl: h
                    });
                    c.hScrollBar.jqxScrollBar({
                        rtl: h
                    });
                    c._initpager && c._initpager();
                    c._initgroupsheader && c._initgroupsheader();
                    c.render();
                    break;
                case "enablebrowserselection":
                    c.showfilterrow || (c.showstatusbar || c.showtoolbar || c.host.addClass("jqx-disableselect"),
                    c.content.addClass("jqx-disableselect"));
                    c.enablebrowserselection && (c.content.removeClass("jqx-disableselect"),
                    c.host.removeClass("jqx-disableselect"));
                    break;
                case "columnsheight":
                    (32 != c.columnsheight || c.columngroups) && c._measureElement("column");
                    c._render(!0, !0, !0, !1, !1);
                    break;
                case "rowsheight":
                    h != g && (31 != c.rowsheight && c._measureElement("cell"),
                    c.virtualsizeinfo = null,
                    c.rendergridcontent(!0, !1),
                    c.refresh());
                    break;
                case "scrollMode":
                    c.vScrollInstance.thumbStep = c.rowsheight;
                    break;
                case "showdefaultloadelement":
                    c._builddataloadelement();
                    break;
                case "showfiltermenuitems":
                case "showsortmenuitems":
                case "showgroupmenuitems":
                case "filtermode":
                    c._initmenu();
                    break;
                case "touchmode":
                    g != h && (c._removeHandlers(),
                    c.touchDevice = null,
                    c.vScrollBar.jqxScrollBar({
                        touchMode: h
                    }),
                    c.hScrollBar.jqxScrollBar({
                        touchMode: h
                    }),
                    c._updateTouchScrolling(),
                    c._arrange(),
                    c._updatecolumnwidths(),
                    c._updatecellwidths(),
                    c._addHandlers());
                    break;
                case "autoshowcolumnsmenubutton":
                    g != h && c._rendercolumnheaders();
                    break;
                case "rendergridrows":
                    g != h && c.updatebounddata();
                    break;
                case "editmode":
                    g != h && (c._removeHandlers(),
                    c._addHandlers());
                    break;
                case "source":
                    c.updatebounddata();
                    c.virtualmode && !c._loading && (c.loadondemand = !0,
                    c._renderrows(c.virtualsizeinfo));
                    break;
                case "horizontalscrollbarstep":
                case "verticalscrollbarstep":
                case "horizontalscrollbarlargestep":
                case "verticalscrollbarlargestep":
                    this.vScrollBar.jqxScrollBar({
                        step: this.verticalscrollbarstep,
                        largestep: this.verticalscrollbarlargestep
                    });
                    this.hScrollBar.jqxScrollBar({
                        step: this.horizontalscrollbarstep,
                        largestep: this.horizontalscrollbarlargestep
                    });
                    break;
                case "closeablegroups":
                    c._initgroupsheader && c._initgroupsheader();
                    break;
                case "showgroupsheader":
                    g != h && (c._arrange(),
                    c._initgroupsheader && c._initgroupsheader(),
                    c._renderrows(c.virtualsizeinfo));
                    break;
                case "theme":
                    h != g && (e.jqx.utilities.setTheme(g, h, c.host),
                    c.gridmenu && c.gridmenu.jqxMenu({
                        theme: h
                    }),
                    c.pageable && c._updatepagertheme(),
                    c.filterable && c._updatefilterrowui(!0),
                    c.showeverpresentrow && c._updateaddnewrowui(!0),
                    c._applyThemeSettings());
                    break;
                case "showtoolbar":
                case "showfilterbar":
                case "toolbarheight":
                    g != h && (c._arrange(),
                    c.refresh());
                    break;
                case "showstatusbar":
                    g != h && (c.statusbar && (h ? c.statusbar.show() : c.statusbar.hide()),
                    c._arrange(),
                    c.refresh());
                    break;
                case "statusbarheight":
                    g != h && (c._arrange(),
                    c.refresh());
                    break;
                case "filterable":
                case "showfilterrow":
                    g != h && c.render();
                    break;
                case "autoshowfiltericon":
                case "showfiltercolumnbackground":
                case "showpinnedcolumnbackground":
                case "showsortcolumnbackground":
                    g != h && c.rendergridcontent();
                    break;
                case "showrowdetailscolumn":
                    g != h && c.render();
                    break;
                case "scrollbarsize":
                    g != h && (e.jqx.utilities.scrollBarSize = h,
                    c._arrange());
                    break;
                case "width":
                case "height":
                    g != h && (c._updatesize(!0, !0),
                    c._resizeWindow(),
                    c.virtualmode && !c._loading ? c.vScrollInstance.setPosition(0) : setTimeout(function() {
                        c._renderrows(c.virtualsizeinfo)
                    }, 100));
                    break;
                case "altrows":
                case "altstart":
                case "altstep":
                    g != h && c._renderrows(c.virtualsizeinfo);
                    break;
                case "groupsheaderheight":
                    g != h && (c._arrange(),
                    c._initgroupsheader && c._initgroupsheader());
                    break;
                case "pagerheight":
                    g != h && c._initpager();
                    break;
                case "selectedrowindex":
                    c.selectrow(h);
                    break;
                case "selectionmode":
                    g != h && ("none" == h && (c.selectedrowindexes = [],
                    c.selectedcells = [],
                    c.selectedrowindex = -1),
                    c._renderrows(c.virtualsizeinfo),
                    "checkbox" == h && c._render(!1, !1, !0, !1, !1));
                    break;
                case "showheader":
                    h ? c.columnsheader.css("display", "block") : c.columnsheader.css("display", "none");
                    break;
                case "virtualmode":
                    g != h && (c.dataview.virtualmode = c.virtualmode,
                    c.dataview.refresh(!1),
                    c._render(!1, !1, !1));
                    break;
                case "columnsmenu":
                    g != h && c.render();
                    break;
                case "columngroups":
                    c._render(!0, !0, !0, !1, !1);
                    break;
                case "columns":
                    c.columns && c.columns.length > c.headerZIndex && (c.headerZIndex = c.columns.length + 100);
                    if (c._serializeObject(c._cachedcolumns) !== c._serializeObject(h)) {
                        var k = !1;
                        c.filterable && g && g.records && e.each(g.records, function() {
                            this.filter && (k = !0);
                            c.dataview.removefilter(this.displayfield, this.filter)
                        });
                        c._columns = null;
                        c._filterrowcache = [];
                        c.render();
                        k && c.applyfilters();
                        c._cachedcolumns = c.columns;
                        c.removesort && c.removesort()
                    } else
                        c[f] = g;
                    break;
                case "autoheight":
                    g != h && c._render(!1, !1, !0);
                    break;
                case "pagermode":
                case "pagerbuttonscount":
                    g != h && c._initpager && (c.pagershowrowscombo && (c.pagershowrowscombo.jqxDropDownList("destroy"),
                    c.pagershowrowscombo = null),
                    c.pagerrightbutton && (c.removeHandler(c.pagerrightbutton, "mousedown"),
                    c.removeHandler(c.pagerrightbutton, "mouseup"),
                    c.removeHandler(c.pagerrightbutton, "click"),
                    c.pagerrightbutton.jqxButton("destroy"),
                    c.pagerrightbutton = null),
                    c.pagerleftbutton && (c.removeHandler(c.pagerleftbutton, "mousedown"),
                    c.removeHandler(c.pagerleftbutton, "mouseup"),
                    c.removeHandler(c.pagerleftbutton, "click"),
                    c.pagerleftbutton.jqxButton("destroy"),
                    c.removeHandler(e(document), "mouseup.pagerbuttons" + c.element.id),
                    c.pagerleftbutton = null),
                    c.pagerdiv.remove(),
                    c._initpager());
                    break;
                case "pagesizeoptions":
                case "pageable":
                case "pagesize":
                    if (g != h) {
                        if (c._loading)
                            throw Error("jqxGrid: " + c.loadingerrormessage);
                        if (c.host.jqxDropDownList && c.host.jqxListBox) {
                            if (c._initpager) {
                                if ("pageable" != f && "pagermode" != f && "string" == typeof h)
                                    throw g = "The expected value type is: Int.",
                                    "pagesize" != f && (g = "The expected value type is: Array of Int values."),
                                    Error("Invalid Value for: " + f + ". " + g);
                                c.dataview.pageable = c.pageable;
                                c.dataview.pagenum = 0;
                                c.dataview.pagesize = c._getpagesize();
                                c.virtualmode && c.updatebounddata();
                                c.dataview.refresh(!0);
                                c._initpager();
                                "pagesizeoptions" == f && null != h && 0 < h.length && (c.pagesize = parseInt(h[0]),
                                c.dataview.pagesize = parseInt(h[0]),
                                c.prerenderrequired = !0,
                                c._requiresupdate = !0,
                                c.dataview.pagenum = -1,
                                c.gotopage(0))
                            }
                            c._render(!1, !1, !1)
                        } else
                            c._testmodules()
                    }
                    break;
                case "groups":
                    c._serializeObject(g) !== c._serializeObject(h) && (c.dataview.groups = h,
                    c._refreshdataview(),
                    c._render(!0, !0, !0, !1));
                    break;
                case "groupable":
                    g != h && (c.dataview.groupable = c.groupable,
                    c.dataview.pagenum = 0,
                    c.dataview.refresh(!1),
                    c._render(!1, !1, !0));
                    break;
                case "renderstatusbar":
                    null != h && c.renderstatusbar(c.statusbar);
                    break;
                case "rendertoolbar":
                    null != h && c.rendertoolbar(c.toolbar);
                    break;
                case "disabled":
                    h ? c.host.addClass(c.toThemeProperty("jqx-fill-state-disabled")) : c.host.removeClass(c.toThemeProperty("jqx-fill-state-disabled")),
                    e.jqx.aria(c, "aria-disabled", c.disabled),
                    c.pageable && (c.pagerrightbutton && (c.pagerrightbutton.jqxButton({
                        disabled: h
                    }),
                    c.pagerleftbutton.jqxButton({
                        disabled: h
                    }),
                    c.pagershowrowscombo.jqxDropDownList({
                        disabled: h
                    }),
                    c.pagergotoinput.attr("disabled", h)),
                    c.pagerfirstbutton && (c.pagerfirstbutton.jqxButton({
                        disabled: h
                    }),
                    c.pagerlastbutton.jqxButton({
                        disabled: h
                    }))),
                    c.vScrollBar.jqxScrollBar({
                        disabled: h
                    }),
                    c.hScrollBar.jqxScrollBar({
                        disabled: h
                    }),
                    c.filterable && c.showfilterrow && c._updatefilterrowui(!0),
                    c.showeverpresentrow && c._updateaddnewrowui(!0)
                }
        }
    });
    e.jqx.collection = function(c) {
        this.records = [];
        this.owner = c;
        this.updating = !1;
        this.beginupdate = function() {
            this.updating = !0
        }
        ;
        this.resumeupdate = function() {
            this.updating = !1
        }
        ;
        this._raiseEvent = function(f) {}
        ;
        this.clear = function() {
            this.records = []
        }
        ;
        this.replace = function(f, g) {
            this.records[f] = g;
            this.updating || this._raiseEvent({
                type: "replace",
                element: g
            })
        }
        ;
        this.isempty = function(f) {
            return void 0 == this.records[f] ? !0 : !1
        }
        ;
        this.initialize = function(f) {
            1 > f && (f = 1);
            this.records[f - 1] = -1
        }
        ;
        this.length = function() {
            return this.records.length
        }
        ;
        this.indexOf = function(f) {
            return this.records.indexOf(f)
        }
        ;
        this.add = function(f) {
            if (null == f)
                return !1;
            this.records[this.records.length] = f;
            this.updating || this._raiseEvent({
                type: "add",
                element: f
            });
            return !0
        }
        ;
        this.insertAt = function(f, g) {
            return null == f || void 0 == f || null == g ? !1 : 0 <= f ? f < this.records.length ? (this.records.splice(f, 0, g),
            this.updating || this._raiseEvent({
                type: "insert",
                index: f,
                element: g
            }),
            !0) : this.add(g) : !1
        }
        ;
        this.remove = function(f) {
            if (null == f || void 0 == f)
                return !1;
            var g = this.records.indexOf(f);
            return -1 != g ? (this.records.splice(g, 1),
            this.updating || this._raiseEvent({
                type: "remove",
                element: f
            }),
            !0) : !1
        }
        ;
        this.removeAt = function(f) {
            if (null == f || void 0 == f || 0 > f)
                return !1;
            if (f < this.records.length) {
                var g = this.records[f];
                this.records.splice(f, 1);
                this.updating || this._raiseEvent({
                    type: "removeAt",
                    index: f,
                    element: g
                });
                return !0
            }
            return !1
        }
        ;
        return this
    }
    ;
    e.jqx.dataview = function() {
        this.self = this;
        this.aggregates = !1;
        this.grid = null;
        this.uniqueId = "id";
        this.records = [];
        this.rows = [];
        this.columns = [];
        this.groups = [];
        this.filters = [];
        this.update = this.updated = null;
        this.suspend = !1;
        this.totalrecords = this.totalrows = this.pagenum = this.pagesize = 0;
        this.groupable = !0;
        this.loadedrecords = [];
        this.loadedrootgroups = [];
        this.loadedgroups = [];
        this.loadedgroupsByKey = [];
        this.virtualmode = !0;
        this._cachegrouppages = [];
        this.source = null;
        this.changedrecords = [];
        this.rowschangecallback = null;
        this.that = this;
        this.destroy = function() {
            delete this.self;
            delete this.grid;
            delete this.uniqueId;
            delete this.records;
            delete this.rows;
            delete this.columns;
            delete this.groups;
            delete this.filters;
            delete this.updated;
            delete this.update;
            delete this.suspend;
            delete this.pagesize;
            delete this.pagenum;
            delete this.totalrows;
            delete this.totalrecords;
            delete this.groupable;
            delete this.loadedrecords;
            delete this.loadedrootgroups;
            delete this.loadedgroups;
            delete this.loadedgroupsByKey;
            delete this.virtualmode;
            delete this._cachegrouppages;
            delete this.source;
            delete this.changedrecords;
            delete this.rowschangecallback;
            delete this.that
        }
        ;
        this.suspendupdate = function() {
            this.suspend = !0
        }
        ;
        this.isupdating = function() {
            return this.suspend
        }
        ;
        this.resumeupdate = function(c) {
            this.suspend = !1;
            void 0 == c && (c = !0);
            this.refresh(c)
        }
        ;
        this.getrecords = function() {
            return this.records
        }
        ;
        this.clearrecords = function() {
            this.recordids = []
        }
        ;
        this.databind = function(c, f) {
            f = c._source ? !0 : !1;
            var g = null;
            this.grid && (this.aggregates = this.grid.showgroupaggregates);
            f ? (g = c,
            c = c._source) : g = new e.jqx.dataAdapter(c,{
                autoBind: !1
            });
            var h = function(F) {
                F.totalrecords = g.totalrecords;
                if (F.virtualmode) {
                    var P = {
                        startindex: F.pagenum * F.pagesize,
                        endindex: F.pagenum * F.pagesize + F.pagesize
                    };
                    void 0 != c.recordstartindex && (P.startindex = parseInt(c.recordstartindex));
                    void 0 != c.recordendindex ? P.endindex = parseInt(c.recordendindex) : F.grid.pageable || (P.endindex = P.startindex + 100,
                    F.grid.autoheight && (P.endindex = P.startindex + F.totalrecords));
                    c.recordendindex || (F.grid.pageable ? P = {
                        startindex: F.pagenum * F.pagesize,
                        endindex: F.pagenum * F.pagesize + F.pagesize
                    } : (P.endindex = P.startindex + 100,
                    F.grid.autoheight && (P.endindex = P.startindex + F.totalrecords)));
                    P.data = g.records;
                    if (F.grid.rendergridrows && 0 < F.totalrecords) {
                        var X = 0;
                        c.records = F.grid.rendergridrows(P);
                        c.records.length && (X = c.records.length);
                        if (c.records && !c.records[P.startindex]) {
                            var W = []
                              , V = P.startindex;
                            e.each(c.records, function() {
                                W[V] = this;
                                V++;
                                X++
                            });
                            c.records = W
                        }
                        0 == X && c.records && e.each(c.records, function() {
                            X++
                        });
                        if (0 < X && X < P.endindex - P.startindex && !F.grid.groupable)
                            for (var ca = c.records[0], u = 0; u < P.endindex - P.startindex - X; u++) {
                                var D = {}, B;
                                for (B in ca)
                                    D[B] = "";
                                c.records.push && c.records.push(D)
                            }
                    }
                    c.records && 0 != F.totalrecords || (c.records = []);
                    F.originaldata = c.records;
                    F.records = c.records;
                    F.cachedrecords = c.records
                } else
                    F.originaldata = g.originaldata,
                    F.records = g.records,
                    F.recordids = g.recordids,
                    F.cachedrecords = g.cachedrecords
            };
            g.recordids = [];
            g.records = [];
            g.cachedrecords = [];
            g.originaldata = [];
            g._options.virtualmode = this.virtualmode;
            g._options.totalrecords = this.totalrecords;
            g._options.originaldata = this.originaldata;
            g._options.recordids = this.recordids;
            g._options.cachedrecords = [];
            g._options.pagenum = this.pagenum;
            g._options.pageable = this.pageable;
            void 0 != c.type && (g._options.type = c.type);
            void 0 != c.formatdata && (g._options.formatData = c.formatdata);
            void 0 != c.contenttype && (g._options.contentType = c.contenttype);
            void 0 != c.async && (g._options.async = c.async);
            void 0 != c.updaterow && (g._options.updaterow = c.updaterow);
            void 0 != c.addrow && (g._options.addrow = c.addrow);
            void 0 != c.deleterow && (g._options.deleterow = c.deleterow);
            0 == this.pagesize && (this.pagesize = 10);
            g._options.pagesize = this.pagesize;
            this.source = c;
            var k = this.that;
            switch (c.datatype) {
            default:
                null == c.localdata && (c.localdata = []);
                null != c.localdata && (g.unbindBindingUpdate(k.grid.element.id),
                (!k.grid.autobind && k.grid.isInitialized || k.grid.autobind) && g.dataBind(),
                f = function(F) {
                    if (void 0 != F && "" != F) {
                        if (g._changedrecords[0]) {
                            var P = [];
                            e.each(g._changedrecords, function(W) {
                                var V = this.index
                                  , ca = this.record;
                                k.grid._updateFromAdapter = !0;
                                switch (F) {
                                case "update":
                                    V = k.grid.getrowid(V);
                                    W == g._changedrecords.length - 1 ? k.grid.updaterow(V, ca) : k.grid.updaterow(V, ca, !1);
                                    k.grid._updateFromAdapter = !1;
                                    break;
                                case "add":
                                    k.grid.addrow(null, ca);
                                    k.grid._updateFromAdapter = !1;
                                    break;
                                case "remove":
                                    V = k.grid.getrowid(V),
                                    P.push(V)
                                }
                            });
                            0 < P.length && (k.grid.deleterow(P, !1),
                            k.grid._updateFromAdapter = !1)
                        }
                        if ("update" == F)
                            return
                    }
                    var X = k.totalrecords;
                    h(k, F);
                    null === c.localdata.notifier && "observableArray" == c.localdata.name && (c.localdata.notifier = function(W) {
                        if (!k._updating) {
                            k._updating = !0;
                            var V = k.grid.getrowid(W.index);
                            switch (W.type) {
                            case "add":
                                var ca = e.extend({}, W.object[W.index]);
                                V = g.getid(c.id, ca, W.index);
                                0 === W.index ? k.grid.addrow(V, ca, "first") : k.grid.addrow(V, ca);
                                break;
                            case "delete":
                                k.grid.deleterow(V);
                                break;
                            case "update":
                                W.path && 1 < W.path.split(".").length ? (ca = W.path.split("."),
                                k.grid.setcellvalue(W.index, ca[ca.length - 1], W.newValue)) : (ca = e.extend({}, W.object[W.index]),
                                k.grid.updaterow(V, ca))
                            }
                            k._updating = !1
                        }
                    }
                    );
                    "updateData" == F ? (k.refresh(),
                    k.grid._updateGridData()) : (c.recordstartindex && k.virtualmode ? k.updateview(c.recordstartindex, c.recordstartindex + k.pagesize) : k.refresh(),
                    k.update(X != k.totalrecords))
                }
                ,
                f(),
                g.bindBindingUpdate(k.grid.element.id, f));
                break;
            case "json":
            case "jsonp":
            case "xml":
            case "xhtml":
            case "script":
            case "text":
            case "csv":
            case "tab":
                if (null != c.localdata)
                    g.unbindBindingUpdate(k.grid.element.id),
                    (!k.grid.autobind && k.grid.isInitialized || k.grid.autobind) && g.dataBind(),
                    f = function(F) {
                        var P = k.totalrecords;
                        h(k);
                        "updateData" == F ? (k.refresh(),
                        k.grid._updateGridData()) : (c.recordstartindex && k.virtualmode ? k.updateview(c.recordstartindex, c.recordstartindex + k.pagesize) : k.refresh(),
                        k.update(P != k.totalrecords))
                    }
                    ,
                    f(),
                    g.bindBindingUpdate(k.grid.element.id, f);
                else {
                    var l = []
                      , m = 0;
                    f = {};
                    for (var n = 0; n < k.filters.length; n++) {
                        var p = k.filters[n].datafield
                          , q = k.filters[n].filter;
                        if (q.getfilters) {
                            var t = q.getfilters();
                            f[p + "operator"] = q.operator;
                            for (q = 0; q < t.length; q++) {
                                t[q].datafield = p;
                                var v = t[q].value;
                                if ("datefilter" == t[q].type)
                                    if (t[q].value && t[q].value.toLocaleString) {
                                        var z = k.grid.getcolumn(t[q].datafield);
                                        z && z.cellsformat ? (z = k.grid.source.formatDate(t[q].value, z.cellsformat, k.grid.gridlocalization),
                                        f["filtervalue" + m] = z ? z : t[q].value.toLocaleString()) : f["filtervalue" + m] = v.toString()
                                    } else
                                        f["filtervalue" + m] = v.toString();
                                else
                                    f["filtervalue" + m] = v.toString(),
                                    t[q].data && (f["filterid" + m] = t[q].data.toString()),
                                    t[q].id && (f["filterid" + m] = t[q].id.toString());
                                f["filtercondition" + m] = t[q].condition;
                                f["filteroperator" + m] = t[q].operator;
                                f["filterdatafield" + m] = p;
                                z = {
                                    label: v.toString()
                                };
                                t[q].data && (z.value = t[q].data.toString());
                                z.value = t[q].id ? t[q].id.toString() : v.toString();
                                z.condition = t[q].condition;
                                z.operator = 0 == t[q].operator ? "and" : "or";
                                z.field = p;
                                z.type = t[q].type;
                                v = !1;
                                if (0 < l.length)
                                    for (var E = 0; E < l.length; E++) {
                                        var C = l[E];
                                        if (C.field == p) {
                                            C.filters.push(z);
                                            v = !0;
                                            break
                                        }
                                    }
                                v || (l.push({
                                    field: p,
                                    filters: []
                                }),
                                l[l.length - 1].filters.push(z));
                                m++
                            }
                        }
                    }
                    f.filterGroups = l;
                    f.filterscount = m;
                    f.groupscount = k.groups.length;
                    for (n = 0; n < k.groups.length; n++)
                        f["group" + n] = k.groups[n];
                    void 0 == c.recordstartindex && (c.recordstartindex = 0);
                    if (void 0 == c.recordendindex || 0 == c.recordendindex)
                        k.grid.height && -1 == k.grid.height.toString().indexOf("%") ? (c.recordendindex = parseInt(k.grid.height) / k.grid.rowsheight,
                        c.recordendindex += 2) : c.recordendindex = e(window).height() / k.grid.rowsheight,
                        c.recordendindex = parseInt(c.recordendindex),
                        k.pageable && (c.recordendindex = k.pagesize);
                    k.pageable && (c.recordstartindex = k.pagenum * k.pagesize,
                    c.recordendindex = (k.pagenum + 1) * k.pagesize);
                    e.extend(f, {
                        sortdatafield: k.sortfield,
                        sortorder: k.sortfielddirection,
                        pagenum: k.pagenum,
                        pagesize: k.grid.pagesize,
                        recordstartindex: c.recordstartindex,
                        recordendindex: c.recordendindex
                    });
                    (l = g._options.data) ? e.extend(g._options.data, f) : (c.data && e.extend(f, c.data),
                    g._options.data = f);
                    f = function() {
                        var F = function() {
                            var P = k.totalrecords;
                            h(k);
                            c.recordstartindex && k.virtualmode ? k.updateview(c.recordstartindex, c.recordstartindex + k.pagesize) : k.refresh();
                            k.update(P != k.totalrecords)
                        };
                        if (e.jqx.browser.msie && 9 > e.jqx.browser.version)
                            try {
                                F()
                            } catch (P) {}
                        else
                            F()
                    }
                    ;
                    g.unbindDownloadComplete(k.grid.element.id);
                    g.bindDownloadComplete(k.grid.element.id, f);
                    !k.grid.autobind && k.grid.isInitialized || k.grid.autobind ? g.dataBind() : k.grid.isInitialized || k.grid.autobind || f();
                    g._options.data = l
                }
            }
        }
        ;
        this.getid = function(c, f, g) {
            return 0 < e(c, f).length ? e(c, f).text() : c && 0 < c.toString().length && (c = e(f).attr(c),
            null != c && 0 < c.toString().length) ? c : g
        }
        ;
        this.getvaluebytype = function(c, f) {
            var g = c;
            "date" == f.type ? (f = new Date(c),
            c = "NaN" == f.toString() || "Invalid Date" == f.toString() ? e.jqx.dataFormat ? e.jqx.dataFormat.tryparsedate(c) : f : f,
            null == c && (c = g)) : "float" == f.type ? (c = parseFloat(c),
            isNaN(c) && (c = g)) : "int" == f.type ? (c = parseInt(c),
            isNaN(c) && (c = g)) : "bool" == f.type && (null != c && ("false" == c.toLowerCase() ? c = !1 : "true" == c.toLowerCase() && (c = !0)),
            c = 1 == c ? !0 : 0 == c ? !1 : "");
            return c
        }
        ;
        this.setpaging = function(c) {
            void 0 != c.pageSize && (this.pagesize = c.pageSize);
            void 0 != c.pageNum && (this.pagenum = Math.min(c.pageNum, Math.ceil(this.totalrows / this.pagesize)));
            this.refresh()
        }
        ;
        this.getpagingdetails = function() {
            return {
                pageSize: this.pagesize,
                pageNum: this.pagenum,
                totalrows: this.totalrows
            }
        }
        ;
        this._clearcaches = function() {
            this.sortcache = {};
            this.sortdata = null;
            this.changedrecords = [];
            this.records = [];
            this.rows = [];
            this.cacheddata = [];
            this.originaldata = [];
            this.bounditems = [];
            this.loadedrecords = [];
            this.loadedrootgroups = [];
            this.loadedgroups = [];
            this.loadedgroupsByKey = [];
            this._cachegrouppages = [];
            this.recordsbyid = [];
            this.cachedrecords = [];
            this.recordids = []
        }
        ;
        this.addfilter = function(c, f) {
            for (var g = -1, h = 0; h < this.filters.length; h++)
                if (this.filters[h].datafield == c) {
                    g = h;
                    break
                }
            -1 == g ? this.filters[this.filters.length] = {
                filter: f,
                datafield: c
            } : this.filters[g] = {
                filter: f,
                datafield: c
            }
        }
        ;
        this.removefilter = function(c) {
            for (var f = 0; f < this.filters.length; f++)
                if (this.filters[f].datafield == c) {
                    this.filters.splice(f, 1);
                    break
                }
        }
        ;
        this.getItemFromIndex = function(c) {
            return this.records[c]
        }
        ;
        this.updaterow = function(c, f, g) {
            if (!(this.filters && 0 < this.filters.length && !this.virtualmode || void 0 == f) && void 0 != c) {
                f.uid = c;
                f[this.source.id] || (f[this.source.id] = f.uid);
                var h = this.recordsbyid["id" + c]
                  , k = this.records.indexOf(h);
                if (-1 == k)
                    return !1;
                this.records[k] = f;
                this.cachedrecords && (this.cachedrecords[k] = f);
                1 != g && void 0 != g || this.refresh();
                this.changedrecords[f.uid] = {
                    Type: "Update",
                    OldData: h,
                    Data: f
                };
                return !0
            }
            if (this.filters && 0 < this.filters.length) {
                var l = this.cachedrecords;
                h = null;
                k = -1;
                for (var m = 0; m < l.length; m++)
                    if (l[m].uid == c) {
                        h = l[m];
                        k = m;
                        break
                    }
                if (h) {
                    c = this.that;
                    for (var n in f)
                        c.cachedrecords[k][n] = f[n];
                    1 != g && void 0 != g || this.refresh();
                    return !0
                }
            }
            return !1
        }
        ;
        this.addrow = function(c, f, g, h) {
            if (void 0 != f) {
                e.isEmptyObject(f) && this.source && this.source.datafields && e.each(this.source.datafields, function() {
                    var k = "";
                    "number" == this.type && (k = null);
                    "date" == this.type && (k = null);
                    if ("bool" == this.type || "boolean" == this.type)
                        k = !1;
                    f[this.name] = k
                });
                if (!c || this.recordsbyid["id" + c])
                    for (f.uid = this.getid(this.source.id, f, this.totalrecords),
                    c = this.recordsbyid["id" + f.uid]; null != c; )
                        c = Math.floor(1E4 * Math.random()).toString(),
                        f.uid = c,
                        c = this.recordsbyid["id" + c];
                else
                    f.uid = c;
                f[this.source.id] || void 0 == this.source.id || (f[this.source.id] = f.uid);
                f.boundindex = this.records.length;
                "last" == g ? this.records.push(f) : "number" === typeof g && isFinite(g) ? this.records.splice(g, 0, f) : this.records.splice(0, 0, f);
                this.filters && 0 < this.filters.length && ("last" == g ? this.cachedrecords.push(f) : "number" === typeof g && isFinite(g) ? this.cachedrecords.splice(g, 0, f) : this.cachedrecords.splice(0, 0, f));
                this.totalrecords++;
                this.virtualmode && (this.source.totalrecords = this.totalrecords);
                1 != h && void 0 != h || this.refresh();
                this.changedrecords[f.uid] = {
                    Type: "New",
                    Data: f
                };
                return !0
            }
            return !1
        }
        ;
        this.deleterow = function(c, f) {
            if (void 0 != c) {
                var g = this.filters && 0 < this.filters.length;
                if (this.recordsbyid["id" + c] && !g) {
                    g = this.recordsbyid["id" + c];
                    var h = this.records.indexOf(g);
                    if (this.grid && this.grid.sortable && "many" == this.grid.sortmode)
                        for (var k = 0; k < this.records.length; k++)
                            if (this.records[k].boundindex === g.boundindex) {
                                h = k;
                                break
                            }
                    this.changedrecords[c] = {
                        Type: "Delete",
                        Data: this.records[h]
                    };
                    this.records.splice(h, 1);
                    this.totalrecords--;
                    this.virtualmode && (this.source.totalrecords = this.totalrecords);
                    1 != f && void 0 != f || this.refresh();
                    return !0
                }
                if (this.filters && 0 < this.filters.length) {
                    var l = this.cachedrecords;
                    g = null;
                    h = -1;
                    for (k = 0; k < l.length; k++)
                        if (l[k].uid == c) {
                            g = l[k];
                            h = k;
                            break
                        }
                    if (g) {
                        this.cachedrecords.splice(h, 1);
                        if (1 == f || void 0 == f)
                            this.totalrecords = 0,
                            this.records = this.cachedrecords,
                            this.refresh();
                        return !0
                    }
                }
            }
            return !1
        }
        ;
        this.reload = function(c, f, g, h, k, l, m) {
            var n = this.that;
            k = [];
            var p = f.length
              , q = 0;
            this.columns = [];
            this.bounditems = [];
            this.loadedrecords = [];
            this.loadedrootgroups = [];
            this.loadedgroups = [];
            this.loadedgroupsByKey = [];
            this._cachegrouppages = [];
            this.recordsbyid = {};
            0 == this.totalrecords && (Object.size = function(v) {
                var z = 0, E;
                for (E in v)
                    v.hasOwnProperty(E) && z++;
                return z
            }
            ,
            this.totalrecords = Object.size(c),
            e.each(this.records, function(v) {
                var z = 0;
                e.each(this, function(E, C) {
                    n.columns[z++] = E
                });
                return !1
            }));
            if (this.virtualmode) {
                if (this.pageable) {
                    this.updateview();
                    return
                }
                l = 0;
                if (this.groupable)
                    m = this.totalrecords;
                else {
                    this.updateview();
                    return
                }
            } else
                l = 0,
                m = this.totalrecords;
            if (this.groupable && 0 < this.groups.length && this.loadgrouprecords) {
                var t = l;
                t = this.loadgrouprecords(0, l, m, g, 0, h, f, p, k)
            } else
                q = this.loadflatrecords(l, m, g, 0, h, f, p, k);
            0 < p && f.splice(0, p - 0);
            this.totalrows = 0 < this.groups.length && this.groupable ? t : q;
            return k
        }
        ;
        this.loadflatrecords = function(c, f, g, h, k, l, m, n) {
            var p = this.that
              , q = g = c;
            f = Math.min(f, this.totalrecords);
            for (var t = null != this.sortdata, v = t ? this.sortdata : this.records; c < f; c++) {
                var z = {};
                if (t)
                    z = e.extend({}, v[c].value),
                    E = z[p.uniqueId],
                    z.boundindex = v[c].index,
                    void 0 == z.uid && (z.uid = p.getid(p.source.id, z, z.boundindex)),
                    p.recordsbyid["id" + z.uid] = v[c].value,
                    p.loadedrecords[g] = z,
                    z.uniqueid = p.generatekey(),
                    p.bounditems[z.boundindex] = z;
                else {
                    z = Object(v[c]);
                    var E = z[p.uniqueId];
                    z.boundindex = g;
                    p.loadedrecords[g] = z;
                    void 0 == z.uid && (z.uid = p.getid(p.source.id, z, g));
                    p.recordsbyid["id" + z.uid] = v[c];
                    z.uniqueid = p.generatekey();
                    p.bounditems[this.bounditems.length] = z
                }
                if (h >= m || E != l[h][p.uniqueId] || k && k[E])
                    n[n.length] = h;
                l[h] = z;
                h++;
                z.visibleindex = q;
                q++;
                g++
            }
            if (p.grid.summaryrows) {
                var C = g;
                e.each(p.grid.summaryrows, function() {
                    var F = e.extend({}, this);
                    F.boundindex = f++;
                    p.loadedrecords[C] = F;
                    F.uniqueid = p.generatekey();
                    p.bounditems[p.bounditems.length] = F;
                    l[h] = F;
                    h++;
                    F.visibleindex = q;
                    q++;
                    C++
                })
            }
            return q
        }
        ;
        this.updateview = function(c, f) {
            var g = this.that
              , h = this.pagesize * this.pagenum
              , k = 0
              , l = []
              , m = this.filters
              , n = this.updated
              , p = l.length;
            if (this.pageable) {
                if (this.virtualmode)
                    if (!this.groupable || 0 == this.groups.length)
                        this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), m, k, n, l, p, []),
                        this.totalrows = l.length;
                    else if (this.groupable && 0 < this.groups.length && this.loadgrouprecords) {
                        if (void 0 != this._cachegrouppages[this.pagenum + "_" + this.pagesize]) {
                            this.rows = this._cachegrouppages[this.pagenum + "_" + this.pagesize];
                            this.totalrows = this.rows.length;
                            return
                        }
                        g = this.pagesize * (1 + this.pagenum);
                        g > this.totalrecords && (g = this.totalrecords);
                        this.loadgrouprecords(0, this.pagesize * this.pagenum, g, m, k, n, l, p, []);
                        this._cachegrouppages[this.pagenum + "_" + this.pagesize] = this.rows;
                        this.totalrows = this.rows.length;
                        return
                    }
            } else if (this.virtualmode && (!this.groupable || 0 == this.groups.length)) {
                var q = this.pagesize;
                0 == q && (q = Math.min(100, this.totalrecords));
                null != c && null != f ? this.loadflatrecords(c, f, m, k, n, l, p, []) : this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), m, k, n, l, p, []);
                this.totalrows = this.loadedrecords.length;
                this.rows = l;
                if (l.length >= q)
                    return
            }
            if (this.groupable && this.pageable && 0 < this.groups.length && this._updategroupsinpage)
                l = this._updategroupsinpage(g, m, h, k, p, this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum));
            else
                for (m = this.pagesize * this.pagenum; m < this.pagesize * (1 + this.pagenum); m++)
                    if (n = m < this.loadedrecords.length ? this.loadedrecords[m] : null,
                    null != n) {
                        if (!this.pagesize || h >= this.pagesize * this.pagenum && h <= this.pagesize * (this.pagenum + 1))
                            l[k] = n,
                            k++;
                        h++
                    }
            if ((0 == l.length || l.length < this.pagesize) && !this.pageable && this.virtualmode)
                for (h = k = l.length,
                m = this.pagesize * this.pagenum; m < this.pagesize * (1 + this.pagenum) - h; m++)
                    n = {},
                    n.boundindex = m + h,
                    n.visibleindex = m + h,
                    n.uniqueid = g.generatekey(),
                    n.empty = !0,
                    g.bounditems[m + h] = n,
                    l[k] = n,
                    k++;
            this.rows = l
        }
        ;
        this.generatekey = function() {
            var c = function() {
                return 16 * (1 + Math.random()) | 0
            };
            return "" + c() + c() + "-" + c() + "-" + c() + "-" + c() + "-" + c() + c() + c()
        }
        ;
        this.reloaddata = function() {
            this.reload(this.records, this.rows, this.filter, this.updated, !0)
        }
        ;
        this.refresh = function(c) {
            if (!this.suspend) {
                void 0 == c && (c = !0);
                var f = this.rows.length
                  , g = this.totalrows;
                if (0 < this.filters.length && !this.virtualmode) {
                    var h = this.cachedrecords.length
                      , k = [];
                    this.totalrecords = 0;
                    var l = this.cachedrecords;
                    this._dataIndexToBoundIndex = [];
                    var m = this.filters.length;
                    if (null != this.source && void 0 != this.source.filter && void 0 != this.source.localdata) {
                        var n = this.source.filter(this.filters, l, h);
                        void 0 == n && (n = []);
                        for (var p = 0; p < h; p++) {
                            var q = l[p]
                              , t = 0 <= n.indexOf(q);
                            t ? (k[k.length] = e.extend({
                                dataindex: p
                            }, q),
                            this._dataIndexToBoundIndex[p] = {
                                boundindex: k.length - 1
                            }) : this._dataIndexToBoundIndex[p] = null
                        }
                        this.records = k
                    } else if (null == this.source.filter || void 0 == this.source.filter) {
                        for (p = 0; p < h; p++) {
                            q = l[p];
                            t = void 0;
                            for (var v = 0; v < m; v++) {
                                n = this.filters[v].filter;
                                var z = q[this.filters[v].datafield]
                                  , E = n && n.evaluate ? n.evaluate(z) : !0;
                                this.grid.filter && (z = this.grid.filter(z, q, this.filters[v].datafield, n, E),
                                void 0 !== z && (E = z));
                                t = void 0 == t ? E : "or" == n.operator ? t || E : t && E
                            }
                            t ? (k[k.length] = e.extend({
                                dataindex: p
                            }, q),
                            this._dataIndexToBoundIndex[p] = {
                                boundindex: k.length - 1
                            }) : this._dataIndexToBoundIndex[p] = null
                        }
                        this.records = k
                    }
                    if (this.sortdata)
                        if (this.grid && "many" !== this.grid.sortmode) {
                            if (h = this.sortfield,
                            this.sortcache[h]) {
                                this.sortdata = null;
                                f = this.sortcache[h].direction;
                                this.sortcache[h] = null;
                                this.sortby(this.sortfield, f);
                                return
                            }
                        } else {
                            f = this.grid.getsortcolumns();
                            for (g = 0; g < f.length; g++)
                                c = f[g],
                                h = c.dataField,
                                this.grid.sortby(h, c.ascending, null);
                            return
                        }
                } else if (0 == this.filters.length && !this.virtualmode && this.cachedrecords && (this.totalrecords = 0,
                this.records = l = this.cachedrecords,
                this.sortdata))
                    if (this.grid && "many" !== this.grid.sortmode) {
                        if (h = this.sortfield,
                        this.sortcache[h]) {
                            this.sortdata = null;
                            f = this.sortcache[h].direction;
                            this.sortcache[h] = null;
                            this.sortby(this.sortfield, f);
                            return
                        }
                    } else {
                        f = this.grid.getsortcolumns();
                        for (g = 0; g < f.length; g++)
                            c = f[g],
                            h = c.dataField,
                            this.grid.sortby(h, c.ascending, null);
                        return
                    }
                c = this.reload(this.records, this.rows, this.filter, this.updated, c);
                this.updated = null;
                null != this.rowschangecallback && (h = this.rows,
                g != this.totalrows && this.rowschangecallback({
                    type: "PagingChanged",
                    data: this.getpagingdetails()
                }),
                f != h.length && this.rowschangecallback({
                    type: "RowsCountChanged",
                    data: {
                        previous: f,
                        current: h.length
                    }
                }),
                (0 < c.length || f != h.length) && this.rowschangecallback({
                    type: "RowsChanged",
                    data: {
                        previous: f,
                        current: h.length,
                        diff: c
                    }
                }))
            }
        }
        ;
        return this
    }
}
)(jqxBaseFramework);
(function(e) {
    e.extend(e.jqx._jqxGrid.prototype, {
        selectallrows: function() {
            this._trigger = !1;
            var b = this.virtualmode ? this.dataview.totalrecords : this.dataview.loadedrecords.length;
            this.selectedrowindexes = [];
            this.selectedcells = [];
            for (var d = this.dataview.loadedrecords, c = 0; c < b; c++) {
                var f = d[c];
                if (f) {
                    f = this.getboundindex(f);
                    void 0 != f && (this.selectedrowindexes[c] = f);
                    for (var g = 0; g < this.columns.records.length; g++)
                        this.selectedcells[f + "_" + this.columns.records[g].datafield] = !0
                } else
                    this.selectedrowindexes[c] = c
            }
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn && this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !0
            });
            this._renderrows(this.virtualsizeinfo);
            this._trigger = !0;
            "checkbox" == this.selectionmode && this._raiseEvent(2, {
                rowindex: this.selectedrowindexes
            })
        },
        unselectallrows: function() {
            this._trigger = !1;
            this.selectedrowindexes = [];
            this.selectedcells = [];
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn && this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !1
            });
            this._renderrows(this.virtualsizeinfo);
            this._trigger = !0;
            "checkbox" == this.selectionmode && this._raiseEvent(2, {
                rowindex: this.selectedrowindexes
            })
        },
        selectrow: function(b, d) {
            "none" !== this.selectionmode && (this._applyrowselection(b, !0, d),
            !1 !== d && this._updatecheckboxselection())
        },
        _updatecheckboxselection: function() {
            if ("checkbox" == this.selectionmode) {
                var b = this.getrows();
                if (b && this._checkboxcolumn)
                    if (0 === b.length)
                        this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: !1
                        });
                    else {
                        b = b.length;
                        this.groupable && (b = this.dataview.loadedrecords.length);
                        this.virtualmode && (b = this.source._source.totalrecords);
                        var d = this.selectedrowindexes.length;
                        d === b ? this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: !0
                        }) : 0 === d ? this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: !1
                        }) : this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: null
                        })
                    }
            }
        },
        unselectrow: function(b, d) {
            this._applyrowselection(b, !1, d);
            !1 !== d && this._updatecheckboxselection()
        },
        selectcell: function(b, d) {
            this._applycellselection(b, d, !0)
        },
        unselectcell: function(b, d) {
            this._applycellselection(b, d, !1)
        },
        clearselection: function(b, d) {
            this._trigger = !1;
            this.selectedrowindex = -1;
            this._oldselectedcell = null;
            if (!1 !== d)
                for (d = 0; d < this.selectedrowindexes.length; d++)
                    this._raiseEvent(3, {
                        rowindex: this.selectedrowindexes[d]
                    });
            this.selectedrowindexes = [];
            this.selectedcells = [];
            this.selectedcell = null;
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !1
            });
            for (d = 0; d < this.columns.records.length; d++)
                this.columns.records[d].selected = !1,
                this.columns.records[d]._applyStyle();
            !1 === b ? this._trigger = !0 : (this._renderrows(this.virtualsizeinfo),
            this._trigger = !0,
            "checkbox" == this.selectionmode && this._raiseEvent(3, {
                rowindex: this.selectedrowindexes
            }))
        },
        getselectedrowindex: function() {
            if (-1 == this.selectedrowindex || void 0 == this.selectedrowindex)
                for (; 0 < this.selectedrowindexes.length; )
                    return this.selectedrowindexes[0];
            return this.selectedrowindex
        },
        getselectedrowindexes: function() {
            return this.selectedrowindexes
        },
        getselectedcell: function() {
            if (!this.selectedcell)
                return null;
            var b = this.selectedcell;
            b.row = this.selectedcell.rowindex;
            b.column = this.selectedcell.datafield;
            b.value = this.getcellvalue(b.row, b.column);
            return b
        },
        getselectedcells: function() {
            var b = [], d;
            for (d in this.selectedcells)
                b[b.length] = this.selectedcells[d];
            return b
        },
        getselection: function() {
            return {
                cells: this.getselectedcells(),
                rows: this.getselectedrowindexes()
            }
        },
        _getcellsforcopypaste: function() {
            var b = [];
            if (-1 == this.selectionmode.indexOf("cell"))
                for (var d = this.selectedrowindexes, c = 0; c < d.length; c++)
                    for (var f = d[c], g = 0; g < this.columns.records.length; g++)
                        "_checkboxcolumn" !== this.columns.records[g].datafield && b.push({
                            rowindex: f,
                            datafield: this.columns.records[g].datafield
                        });
            return b
        },
        deleteselection: function() {
            var b = this.getselectedcells();
            -1 == this.selectionmode.indexOf("cell") && (b = this._getcellsforcopypaste());
            if (null != b && 0 < b.length) {
                for (var d = 0; d < b.length; d++) {
                    var c = b[d]
                      , f = this.getcolumn(c.datafield)
                      , g = this.getcellvalue(c.rowindex, c.datafield);
                    if (f && "" !== g) {
                        var h = null;
                        "checkbox" == f.columntype && (f.threestatecheckbox || (h = !1));
                        this._raiseEvent(17, {
                            rowindex: c.rowindex,
                            datafield: c.datafield,
                            value: g
                        });
                        d == b.length - 1 ? this.setcellvalue(c.rowindex, c.datafield, h, !0) : this.setcellvalue(c.rowindex, c.datafield, h, !1);
                        f.displayfield != f.datafield && this.setcellvalue(c.rowindex, f.displayfield, h, !0);
                        this._raiseEvent(18, {
                            rowindex: c.rowindex,
                            datafield: c.datafield,
                            oldvalue: g,
                            value: h
                        })
                    }
                }
                this.dataview.updateview();
                this._renderrows(this.virtualsizeinfo)
            }
        },
        copyselection: function() {
            var b = ""
              , d = this;
            this.clipboardselection = {};
            this.logicalclipboardselection = {};
            this._clipboardselection = [];
            var c = d.getselectedcells();
            -1 == this.selectionmode.indexOf("cell") && (c = this._getcellsforcopypaste());
            var f = [];
            if (null != c && 0 < c.length) {
                for (var g = 999999999999999, h = -1, k = 0; k < c.length; k++) {
                    var l = c[k]
                      , m = d.getcolumn(l.datafield);
                    if (null != m && m.clipboard && (!m.hidden || this.copytoclipboardhiddencolumns)) {
                        -1 == f.indexOf(m.text) && f.push(m.text);
                        var n = d.getcelltext(l.rowindex, m.displayfield)
                          , p = this.getrowdisplayindex(l.rowindex);
                        this.clipboardselection[p] || (this.clipboardselection[p] = {});
                        this.clipboardselection[p][m.displayfield] = n;
                        this.logicalclipboardselection[p] || (this.logicalclipboardselection[p] = {});
                        this.logicalclipboardselection[p][m.displayfield] = n;
                        m.displayfield != m.datafield && (this.logicalclipboardselection[p][m.datafield] = d.getcellvalue(l.rowindex, m.datafield));
                        g = Math.min(g, p);
                        h = Math.max(h, p)
                    }
                }
                c = [];
                for (k = g; k <= h; k++)
                    this.logicalclipboardselection[k] && (l = e.extend({}, this.logicalclipboardselection[k]),
                    c.push(l));
                this.logicalclipboardselection = c;
                if (this.copytoclipboardwithheaders) {
                    for (c = 0; c < f.length; c++)
                        0 < c && (b += "\t"),
                        b += f[c];
                    b += "\r\n"
                }
                for (k = g; k <= h; k++) {
                    var q = 0;
                    this._clipboardselection[this._clipboardselection.length] = [];
                    void 0 != this.clipboardselection[k] && (e.each(this.clipboardselection[k], function(t, v) {
                        0 < q && (b += "\t");
                        t = v;
                        null == v && (t = "");
                        d._clipboardselection[d._clipboardselection.length - 1][q] = t;
                        q++;
                        b += t
                    }),
                    k < h && (b += "\r\n"))
                }
            }
            return this.clipboardselectedtext = b
        },
        pasteselection: function() {
            var b = this.getselectedcells();
            this._oldselectedcell = null;
            -1 == this.selectionmode.indexOf("cell") && (b = this._getcellsforcopypaste());
            if (null != b && 0 < b.length) {
                var d = this.getrowdisplayindex(b[0].rowindex)
                  , c = this._getcolumnindex(b[0].datafield);
                this.selectedrowindexes = [];
                this.selectedcells = [];
                var f = 0
                  , g = []
                  , h = [];
                this.copytoclipboardwithheaders && this._clipboardselection.splice(0, 1);
                this._clipboardselection || (this._clipboardselection = []);
                for (var k = 0; k < this._clipboardselection.length; k++) {
                    f += this._clipboardselection[k].length;
                    g[k] = [];
                    for (var l = 0; l < this._clipboardselection[k].length; l++) {
                        var m = this._clipboardselection[k][l];
                        g[k].push(m)
                    }
                }
                if (f < b.length) {
                    d = [];
                    for (k = 0; k < b.length; k++)
                        f = b[k],
                        d[f.rowindex] || (d[f.rowindex] = []),
                        d[f.rowindex].push(f);
                    var n = c = 0;
                    for (k = 0; k < d.length; k++)
                        if (d[k]) {
                            for (l = 0; l < d[k].length; l++) {
                                f = d[k][l];
                                b = f.rowindex;
                                var p = this.getcolumn(f.datafield);
                                if ("_checkboxcolumn" !== p.datafield && !p.hidden) {
                                    m = "";
                                    g[c] && void 0 == g[c][n] && (n = 0);
                                    m = "" + g[c][n];
                                    n++;
                                    if (p.cellsformat && (-1 != p.cellsformat.indexOf("p") || -1 != p.cellsformat.indexOf("c") || -1 != p.cellsformat.indexOf("n") || -1 != p.cellsformat.indexOf("f"))) {
                                        m.indexOf && -1 < m.indexOf(this.gridlocalization.currencysymbol) && (m = m.replace(this.gridlocalization.currencysymbol, ""));
                                        var q = function(E, C, F) {
                                            var P = E;
                                            if (C == F)
                                                return E;
                                            for (E = P.indexOf(C); -1 != E; )
                                                P = P.replace(C, F),
                                                E = P.indexOf(C);
                                            return P
                                        };
                                        m = q(m, this.gridlocalization.thousandsseparator, "");
                                        m = m.replace(this.gridlocalization.decimalseparator, ".");
                                        -1 < m.indexOf(this.gridlocalization.percentsymbol) && (m = m.replace(this.gridlocalization.percentsymbol, ""));
                                        q = "";
                                        for (var t = 0; t < m.length; t++) {
                                            var v = m.substring(t, t + 1);
                                            "-" === v && (q += "-");
                                            "." === v && (q += ".");
                                            null != v.match(/^[0-9]+$/) && (q += v)
                                        }
                                        m = q;
                                        m = m.replace(/ /g, "");
                                        m = new Number(m);
                                        isNaN(m) && (m = "")
                                    }
                                    this._raiseEvent(17, {
                                        rowindex: b,
                                        datafield: f.datafield,
                                        value: m
                                    });
                                    var z = this.getrowdata(b);
                                    h.push({
                                        oldvalue: z[f.datafield],
                                        value: m,
                                        datafield: f.datafield,
                                        row: b
                                    });
                                    this.pushToHistory = !0;
                                    this.setcellvalue(b, p.displayfield, m, !1);
                                    this.pushToHistory = !1;
                                    p.displayfield != p.datafield && this.logicalclipboardselection && this.logicalclipboardselection[b] && (q = this.logicalclipboardselection[b][p.datafield],
                                    void 0 != q && this.setcellvalue(b, p.datafield, q, !1));
                                    this._raiseEvent(18, {
                                        rowindex: b,
                                        datafield: f.datafield,
                                        oldvalue: this.getcellvalue(f.rowindex, f.datafield),
                                        value: m
                                    });
                                    this._applycellselection(b, f.datafield, !0, !1)
                                }
                            }
                            c++;
                            n = 0;
                            g[c] || (c = 0)
                        }
                } else {
                    if (!this._clipboardselection)
                        return;
                    for (z = 0; z < this._clipboardselection.length; z++)
                        for (g = 0; g < this._clipboardselection[z].length; g++)
                            if ((p = this.getcolumnat(c + g)) && "_checkboxcolumn" !== p.datafield && !p.hidden && (b = this.getrowboundindex(d + z),
                            f = this.getcell(b, p.datafield),
                            m = null,
                            m = this._clipboardselection[z][g],
                            null != m)) {
                                if (p.cellsformat && (-1 != p.cellsformat.indexOf("p") || -1 != p.cellsformat.indexOf("c") || -1 != p.cellsformat.indexOf("n") || -1 != p.cellsformat.indexOf("f"))) {
                                    -1 < m.indexOf(this.gridlocalization.currencysymbol) && (m = m.replace(this.gridlocalization.currencysymbol, ""));
                                    q = function(E, C, F) {
                                        var P = E;
                                        if (C == F)
                                            return E;
                                        for (E = P.indexOf(C); -1 != E; )
                                            P = P.replace(C, F),
                                            E = P.indexOf(C);
                                        return P
                                    }
                                    ;
                                    m = q(m, this.gridlocalization.thousandsseparator, "");
                                    m = m.replace(this.gridlocalization.decimalseparator, ".");
                                    -1 < m.indexOf(this.gridlocalization.percentsymbol) && (m = m.replace(this.gridlocalization.percentsymbol, ""));
                                    q = "";
                                    for (t = 0; t < m.length; t++)
                                        v = m.substring(t, t + 1),
                                        "-" === v && (q += "-"),
                                        "." === v && (q += "."),
                                        null != v.match(/^[0-9]+$/) && (q += v);
                                    m = q;
                                    m = m.replace(/ /g, "");
                                    m = new Number(m);
                                    isNaN(m) && (m = "")
                                }
                                this._raiseEvent(17, {
                                    rowindex: b,
                                    datafield: f.datafield,
                                    value: m
                                });
                                k = this.getrowdata(b);
                                h.push({
                                    oldvalue: k[f.datafield],
                                    value: m,
                                    datafield: f.datafield,
                                    row: b
                                });
                                this.pushToHistory = !0;
                                this.setcellvalue(b, p.displayfield, m, !1);
                                this.pushToHistory = !1;
                                p.displayfield != p.datafield && this.logicalclipboardselection && (q = this.logicalclipboardselection[z][p.datafield],
                                void 0 != q && this.setcellvalue(b, p.datafield, q, !1));
                                this._raiseEvent(18, {
                                    rowindex: b,
                                    datafield: f.datafield,
                                    oldvalue: this.getcellvalue(f.rowindex, f.datafield),
                                    value: m
                                });
                                this._applycellselection(b, f.datafield, !0, !1)
                            }
                }
                "checkbox" == this.selectionmode && this._updatecheckboxselection();
                this.dataview.updateview();
                this._renderrows(this.virtualsizeinfo)
            }
            this._undoRedo.push({
                action: "paste",
                data: h
            });
            this._undoRedoIndex = -1;
            this.clipboardend && this.clipboardend("paste")
        },
        _applyrowselection: function(b, d, c, f, g) {
            if (null == b)
                return !1;
            g = this.selectedrowindex;
            "singlerow" == this.selectionmode && (d ? this._raiseEvent(2, {
                rowindex: b,
                row: this.getrowdata(b)
            }) : this._raiseEvent(3, {
                rowindex: b,
                row: this.getrowdata(b)
            }),
            this._raiseEvent(3, {
                rowindex: g
            }),
            this.selectedrowindexes = [],
            this.selectedcells = []);
            1 == f && (this.selectedrowindexes = []);
            0 < this.dataview.filters.length && ((f = this.getrowdata(b)) && void 0 !== f.dataindex ? b = f.dataindex : f && void 0 === f.dataindex && void 0 != f.uid && (b = this.getrowboundindexbyid(f.uid)));
            f = this.selectedrowindexes.indexOf(b);
            if (d)
                this.selectedrowindex = b,
                -1 == f ? (this.selectedrowindexes.push(b),
                "singlerow" != this.selectionmode && this._raiseEvent(2, {
                    rowindex: b,
                    row: this.getrowdata(b)
                })) : "multiplerows" == this.selectionmode && (this.selectedrowindexes.splice(f, 1),
                this._raiseEvent(3, {
                    rowindex: this.selectedrowindex,
                    row: this.getrowdata(b)
                }),
                this.selectedrowindex = 0 < this.selectedrowindexes.length ? this.selectedrowindexes[this.selectedrowindexes.length - 1] : -1);
            else if (0 <= f || "singlerow" == this.selectionmode || "multiplerowsextended" == this.selectionmode || "multiplerowsadvanced" == this.selectionmode)
                d = this.selectedrowindexes[f],
                this.selectedrowindexes.splice(f, 1),
                this._raiseEvent(3, {
                    rowindex: d,
                    row: this.getrowdata(b)
                }),
                this.selectedrowindex = -1;
            (void 0 == c || c) && this._rendervisualrows();
            return !0
        },
        _applycellselection: function(b, d, c, f, g) {
            if (null == b || null == d)
                return !1;
            this._autofill && (this._autofill.remove(),
            e(document).off("pointermove.autofill"),
            e(document).off("pointerup.autofill"),
            this._autofill = null);
            if ("singlecell" == this.selectionmode) {
                var h = this.selectedcell;
                null != h && this._raiseEvent(16, {
                    rowindex: h.rowindex,
                    datafield: h.datafield
                });
                this.selectedcells = []
            }
            if ("multiplecellsextended" == this.selectionmode || "multiplecellsadvanced" == this.selectionmode)
                h = this.selectedcell,
                null != h && this._raiseEvent(16, {
                    rowindex: h.rowindex,
                    datafield: h.datafield
                });
            h = b + "_" + d;
            if (0 < this.dataview.filters.length) {
                var k = this.getrowdata(b);
                k && void 0 !== k.dataindex ? (b = k.dataindex,
                h = b + "_" + d) : k && void 0 === k.dataindex && k.uid && (b = this.getrowboundindexbyid(k.uid),
                h = b + "_" + d)
            }
            b = {
                rowindex: b,
                datafield: d
            };
            if (c)
                if (c = this.selectedcell,
                this.selectedcell = b,
                !this.selectedcells[h])
                    this.selectedcells[h] = b,
                    this.selectedcells.length++,
                    h = !0,
                    c && c.datafield === b.datafield && b.rowindex === c.rowindex && (h = !1),
                    h && !1 !== g && this._raiseEvent(15, b);
                else {
                    if ("multiplecells" == this.selectionmode || "multiplecellsextended" == this.selectionmode || "multiplecellsadvanced" == this.selectionmode)
                        delete this.selectedcells[h],
                        0 < this.selectedcells.length && this.selectedcells.length--,
                        !1 !== g && this._raiseEvent(16, b)
                }
            else
                delete this.selectedcells[h],
                0 < this.selectedcells.length && this.selectedcells.length--,
                !1 !== g && this._raiseEvent(16, b);
            (void 0 == f || f) && this._rendervisualrows();
            return !0
        },
        _getcellindex: function(b) {
            var d = -1;
            e.each(this.selectedcells, function() {
                d++;
                if (this[b])
                    return !1
            });
            return d
        },
        _clearhoverstyle: function() {
            if (void 0 != this.hoveredrow && -1 != this.hoveredrow && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling()) {
                var b = this.table.find(".jqx-grid-cell-hover");
                0 < b.length && (b.removeClass(this.toTP("jqx-grid-cell-hover")),
                b.removeClass(this.toTP("jqx-fill-state-hover")));
                for (var d = 0; d < b.length; d++) {
                    var c = b[d].getAttribute("columnindex");
                    c && (c = this.columns.records[parseInt(c)]) && c._applyCellStyle(b[d])
                }
                this.hoveredrow = -1
            }
        },
        _clearselectstyle: function() {
            for (var b = this.table[0].rows.length, d = this.table[0].rows, c = this.toTP("jqx-grid-cell-selected"), f = this.toTP("jqx-fill-state-pressed"), g = this.toTP("jqx-grid-cell-hover"), h = this.toTP("jqx-fill-state-hover"), k = 0; k < b; k++) {
                var l = d[k]
                  , m = l.cells.length;
                l = l.cells;
                for (var n = 0; n < m; n++) {
                    var p = l[n]
                      , q = e(p);
                    -1 != p.className.indexOf("jqx-grid-cell-selected") && (q.removeClass(c),
                    q.removeClass(f));
                    -1 != p.className.indexOf("jqx-grid-cell-hover") && (q.removeClass(g),
                    q.removeClass(h));
                    (q = p.getAttribute("columnindex")) && (q = this.columns.records[parseInt(q)]) && q._applyCellStyle(p)
                }
            }
        },
        _selectpath: function(b, d) {
            var c = this._lastClickedCell ? Math.min(this._lastClickedCell.row, b) : 0
              , f = this._lastClickedCell ? Math.max(this._lastClickedCell.row, b) : 0;
            if (c <= f) {
                b = this._getcolumnindex(this._lastClickedCell.column || this._lastClickedCell.datafield);
                var g = this._getcolumnindex(d);
                d = Math.min(b, g);
                g = Math.max(b, g);
                this.selectedcells = [];
                for (var h = this.dataview.loadedrecords; c <= f; c++)
                    for (var k = d; k <= g; k++)
                        b = h[c],
                        this._applycellselection(this.getboundindex(b), this._getcolumnat(k).datafield, !0, !1),
                        this.getboundindex(b),
                        this._getcolumnat(k);
                this._rendervisualrows()
            }
        },
        _selectrowpath: function(b) {
            if ("multiplerowsextended" == this.selectionmode) {
                var d = this._lastClickedCell ? Math.min(this._lastClickedCell.row, b) : 0;
                b = this._lastClickedCell ? Math.max(this._lastClickedCell.row, b) : 0;
                if (d <= b) {
                    for (this.selectedrowindexes = []; d <= b; d++) {
                        var c = this.getrowboundindex(d);
                        this._applyrowselection(c, !0, !1)
                    }
                    this._rendervisualrows()
                }
            }
        },
        _selectrowwithmouse: function(b, d, c, f, g, h) {
            var k = d.row;
            if (void 0 != k && (d = d.index,
            void 0 != this.hittestinfo[d])) {
                for (var l = 0; l < this.columns.records.length; l++) {
                    var m = this.columns.records[l];
                    m.selected = !1;
                    m.element && m.element.removeAttribute("selected");
                    m._applyStyle()
                }
                l = this.hittestinfo[d].visualrow;
                if (!this.hittestinfo[d].details && !k.group) {
                    if ("multiplerows" == this.selectionmode || "multiplecells" == this.selectionmode || "checkbox" == this.selectionmode || -1 != this.selectionmode.indexOf("multiple") && (1 == h || 1 == g)) {
                        m = this.getboundindex(k);
                        if (0 < this.dataview.filters.length) {
                            var n = this.getrowdata(m);
                            n && (m = n.dataindex,
                            void 0 == m && (m = this.getboundindex(k)))
                        }
                        m = -1 != c.indexOf(m);
                        c = this.getboundindex(k) + "_" + f;
                        if (-1 != this.selectionmode.indexOf("cell"))
                            g = void 0 != this.selectedcells[c],
                            void 0 != this.selectedcells[c] && g ? this._selectcellwithstyle(b, !1, d, f, l) : this._selectcellwithstyle(b, !0, d, f, l),
                            h && void 0 == this._lastClickedCell && (b = this.getselectedcells()) && 0 < b.length && (this._lastClickedCell = {
                                row: b[0].rowindex,
                                column: b[0].datafield
                            }),
                            h && this._lastClickedCell && (this._selectpath(k.visibleindex, f),
                            this.mousecaptured = !1,
                            "visible" == this.selectionarea.css("visibility") && this.selectionarea.css("visibility", "hidden"));
                        else if (m ? g ? this._applyrowselection(this.getboundindex(k), !1) : this._selectrowwithstyle(b, l, !1, f) : this._selectrowwithstyle(b, l, !0, f),
                        h && void 0 == this._lastClickedCell && (b = this.getselectedrowindexes()) && 0 < b.length && (this._lastClickedCell = {
                            row: b[0],
                            column: f
                        }),
                        h && this._lastClickedCell) {
                            this.selectedrowindexes = [];
                            b = this._lastClickedCell ? Math.max(this._lastClickedCell.row, k.visibleindex) : 0;
                            g = this.dataview.loadedrecords;
                            for (d = this._lastClickedCell ? Math.min(this._lastClickedCell.row, k.visibleindex) : 0; d <= b; d++)
                                (k = g[d]) && this._applyrowselection(this.getboundindex(k), !0, !1, !1);
                            this._rendervisualrows()
                        }
                    } else
                        this._clearselectstyle(),
                        this._selectrowwithstyle(b, l, !0, f),
                        -1 != this.selectionmode.indexOf("cell") && this._selectcellwithstyle(b, !0, d, f, l);
                    h || (this._lastClickedCell = {
                        row: k.visibleindex,
                        column: f
                    })
                }
            }
        },
        _selectcellwithstyle: function(b, d, c, f, g) {
            b = e(g.cells[b._getcolumnindex(f)]);
            b.removeClass(this.toTP("jqx-grid-cell-hover"));
            b.removeClass(this.toTP("jqx-fill-state-hover"));
            d ? (b.addClass(this.toTP("jqx-grid-cell-selected")),
            b.addClass(this.toTP("jqx-fill-state-pressed"))) : (b.removeClass(this.toTP("jqx-grid-cell-selected")),
            b.removeClass(this.toTP("jqx-fill-state-pressed")));
            this.getcolumn(f)._applyCellStyle(b)
        },
        _selectrowwithstyle: function(b, d, c, f) {
            var g = d.cells.length
              , h = 0;
            b.rowdetails && b.showrowdetailscolumn ? this.rtl ? g = g - 1 - this.groups.length : h = 1 + this.groups.length : this.groupable && (this.rtl ? g -= this.groups.length : h = this.groups.length);
            for (; h < g; h++) {
                var k = d.cells[h];
                c ? (e(k).removeClass(this.toTP("jqx-grid-cell-hover")),
                e(k).removeClass(this.toTP("jqx-fill-state-hover")),
                -1 == b.selectionmode.indexOf("cell") && (e(k).addClass(this.toTP("jqx-grid-cell-selected")),
                e(k).addClass(this.toTP("jqx-fill-state-pressed")))) : (e(k).removeClass(this.toTP("jqx-grid-cell-hover")),
                e(k).removeClass(this.toTP("jqx-grid-cell-selected")),
                e(k).removeClass(this.toTP("jqx-fill-state-hover")),
                e(k).removeClass(this.toTP("jqx-fill-state-pressed")));
                (f = k.getAttribute("columnindex")) && (f = this.columns.records[parseInt(f)]) && f._applyCellStyle(k)
            }
        },
        _handlemousemoveselection: function(b, d, c) {
            if (d.hScrollInstance.isScrolling() || d.vScrollInstance.isScrolling())
                return !1;
            if (("multiplerowsextended" == d.selectionmode || "multiplecellsextended" == d.selectionmode || "multiplecellsadvanced" == d.selectionmode) && d.mousecaptured) {
                if (d.multipleselectionbegins && !1 === d.multipleselectionbegins(b))
                    return !0;
                var f = this.showheader ? this.columnsheader.height() + 2 : 0
                  , g = this._groupsheader() ? this.groupsheader.height() : 0
                  , h = this.showtoolbar ? this.toolbar.height() : 0;
                g = g + h + (this.showfilterbar ? this.toolbarheight : 0);
                h = this.host.coord();
                if (this.hasTransform) {
                    h = e.jqx.utilities.getOffset(this.host);
                    var k = this._getBodyOffset();
                    h.left -= k.left;
                    h.top -= k.top
                }
                "0px" === this.host.css("border-top-width") && (g -= 2);
                var l = b.pageX;
                k = b.pageY - g;
                b._pageX && (l = b._pageX,
                k = b._pageY - g);
                if (3 < Math.abs(this.mousecaptureposition.left - l) || 3 < Math.abs(this.mousecaptureposition.top - k) || d.autofill) {
                    parseInt(this.columnsheader.coord().top);
                    this.hasTransform && e.jqx.utilities.getOffset(this.columnsheader);
                    l < h.left && (l = h.left);
                    l > h.left + this.host.width() && (l = h.left + this.host.width());
                    f = h.top + f;
                    k < f && (k = f + 5);
                    var m = parseInt(Math.min(d.mousecaptureposition.left, l));
                    f = -5 + parseInt(Math.min(d.mousecaptureposition.top, k));
                    var n = parseFloat(Math.abs(d.mousecaptureposition.left - l))
                      , p = parseInt(Math.abs(d.mousecaptureposition.top - k));
                    m -= h.left;
                    f -= h.top;
                    this.selectionarea.css("visibility", "visible");
                    if ("multiplecellsadvanced" == d.selectionmode) {
                        l = m;
                        var q = l + n
                          , t = d.hScrollInstance;
                        k = t.value;
                        this.rtl && "hidden" != this.hScrollBar.css("visibility") && (k = t.max - t.value);
                        var v = d.table[0].rows[0]
                          , z = 0
                          , E = t = d.mousecaptureposition.clickedcell;
                        z = !1;
                        var C = 0
                          , F = v.cells.length;
                        d.mousecaptureposition.left <= b.pageX && (C = t);
                        for (var P = !1; C < F; C++) {
                            var X = parseFloat(e(this.columnsrow[0].cells[C]).css("left"))
                              , W = X - k;
                            if (d.columns.records[C].pinned && !d.columns.records[C].hidden)
                                if (C == t && (P = !0),
                                X += e(this.columnsrow[0].cells[C]).width(),
                                d.mousecaptureposition.left > b.pageX) {
                                    if (X >= l && l >= W) {
                                        E = C;
                                        z = !0;
                                        break
                                    }
                                } else {
                                    if (X >= q && q >= W) {
                                        E = C;
                                        z = !0;
                                        break
                                    }
                                }
                            else {
                                if (P) {
                                    z = !0;
                                    E--;
                                    break
                                }
                                X = this._getcolumnat(C);
                                if (!(null != X && X.hidden || d.groupable && 0 < d.groups.length && C < d.groups.length))
                                    if (X = W + e(this.columnsrow[0].cells[C]).width(),
                                    d.mousecaptureposition.left > b.pageX) {
                                        if (X >= l && l >= W) {
                                            E = C;
                                            z = !0;
                                            break
                                        }
                                    } else if (X >= q && q >= W) {
                                        E = C;
                                        z = !0;
                                        break
                                    }
                            }
                        }
                        if (!z)
                            if (d.mousecaptureposition.left > b.pageX)
                                e.each(this.columns.records, function(u, D) {
                                    if (d.groupable && 0 < d.groups.length && u < d.groups.length)
                                        return !0;
                                    if (!this.pinned && !this.hidden)
                                        return E = u,
                                        !1
                                });
                            else if (!d.groupable || d.groupable && 0 < !d.groups.length)
                                E = v.cells.length - 1;
                        C = t;
                        t = Math.min(t, E);
                        E = Math.max(C, E);
                        f = f + 5 + g;
                        d.table[0].rows.indexOf(d.mousecaptureposition.clickedrow);
                        q = 0;
                        l = b = -1;
                        for (C = v = 0; C < d.table[0].rows.length; C++) {
                            F = e(d.table[0].rows[C]);
                            0 == C && (v = F.coord().top);
                            W = F.height();
                            X = v - h.top;
                            if (-1 == b && X + W >= f) {
                                z = !1;
                                for (var V = 0; V < d.groups.length; V++) {
                                    var ca = F[0].cells[V].className;
                                    if (-1 != ca.indexOf("jqx-grid-group-collapse") || -1 != ca.indexOf("jqx-grid-group-expand")) {
                                        z = !0;
                                        break
                                    }
                                }
                                if (z)
                                    continue;
                                b = C
                            }
                            v += W;
                            if (d.groupable && 0 < d.groups.length) {
                                z = !1;
                                for (V = 0; V < d.groups.length; V++)
                                    if (ca = F[0].cells[V].className,
                                    -1 != ca.indexOf("jqx-grid-group-collapse") || -1 != ca.indexOf("jqx-grid-group-expand")) {
                                        z = !0;
                                        break
                                    }
                                if (z)
                                    continue;
                                z = 0;
                                for (V = d.groups.length; V < F[0].cells.length; V++)
                                    "" == e(F[0].cells[V]).html() && z++;
                                if (z == F[0].cells.length - d.groups.length)
                                    continue
                            }
                            -1 != b && (q += W);
                            if (X + W > f + p) {
                                l = C;
                                break
                            }
                        }
                        if (-1 != b && (f = e(d.table[0].rows[b]).coord().top - h.top - g - 2,
                        g = 0,
                        this.filterable && this.showfilterrow && (g = this.filterrowheight),
                        0 > parseFloat(d.table[0].style.top) && f < this.rowsheight + g && (f -= parseFloat(d.table[0].style.top),
                        q += parseFloat(d.table[0].style.top)),
                        p = q,
                        h = e(this.columnsrow[0].cells[t]),
                        g = e(this.columnsrow[0].cells[E]),
                        m = parseFloat(h.css("left")),
                        n = parseFloat(g.css("left")) - parseFloat(m) + g.width() - 2,
                        m -= k,
                        P && (m += k),
                        d.editcell && d.editable && d.endcelledit && (t != E || b != l))) {
                            if (0 == d.editcell.validated)
                                return;
                            d.endcelledit(d.editcell.row, d.editcell.column, !0, !0)
                        }
                    }
                    this.selectionarea.width(n);
                    this.selectionarea.css("left", m);
                    null !== c && (this.selectionarea.css("top", f),
                    this.selectionarea.height(p))
                }
            }
        },
        _handlemouseupselection: function(b, d, c) {
            if (this.selectionarea) {
                if ("visible" != this.selectionarea[0].style.visibility) {
                    d._handlemousemoveselection(b, d);
                    if (!1 !== c)
                        if (d.__firstcell) {
                            if (c = d.getselectedcell())
                                d.__firstcell.index = d.columns.records.indexOf(d.getcolumn(c.datafield)),
                                d.__firstcell.row = c.row,
                                d.__firstcell.rowindex = c.rowindex,
                                d._handleAutofill(b, d)
                        } else
                            d.__firstcell = d.getselectedcell(),
                            d.__firstcell && (d.__firstcell.index = d.columns.records.indexOf(d.getcolumn(d.__firstcell.datafield)),
                            d._handleAutofill(b, d));
                    d.mousecaptured = !1;
                    d.selectionarea[0].style.visibility = "hidden";
                    return !0
                }
                if (d.mousecaptured && ("multiplerowsextended" == d.selectionmode || "multiplerowsadvanced" == d.selectionmode || "multiplecellsextended" == d.selectionmode || "multiplecellsadvanced" == d.selectionmode)) {
                    d.mousecaptured = !1;
                    if ("visible" == this.selectionarea.css("visibility")) {
                        this.selectionarea.css("visibility", "hidden");
                        var f = this.showheader ? this.columnsheader.height() + 2 : 0
                          , g = this._groupsheader() ? this.groupsheader.height() : 0;
                        "0px" === this.host.css("border-top-width") && (g -= 2);
                        var h = this.showtoolbar ? this.toolbar.height() : 0;
                        g = g + h + (this.showfilterbar ? this.toolbarheight : 0);
                        var k = this.selectionarea.coord()
                          , l = this.host.coord();
                        this.hasTransform && (l = e.jqx.utilities.getOffset(this.host),
                        k = e.jqx.utilities.getOffset(this.selectionarea));
                        "0px" === this.host.css("border-top-width") && (g -= 2);
                        h = k.left - l.left;
                        var m = f = k.top - f - l.top - g;
                        g = h + this.selectionarea.width();
                        l = [];
                        k = [];
                        if ("multiplerowsextended" == d.selectionmode) {
                            for (; f < m + this.selectionarea.height(); ) {
                                var n = this._hittestrow(h, f)
                                  , p = n.row
                                  , q = n.index;
                                -1 == q || k[q] || (k[q] = !0,
                                l[l.length] = n);
                                f += 20
                            }
                            m = 0;
                            e.each(l, function() {
                                var X = this.row;
                                "none" != d.selectionmode && d._selectrowwithmouse && (b.ctrlKey || b.metaKey ? d._applyrowselection(d.getboundindex(X), !0, !1, !1) : 0 == m ? d._applyrowselection(d.getboundindex(X), !0, !1, !0) : d._applyrowselection(d.getboundindex(X), !0, !1, !1),
                                m++)
                            })
                        } else {
                            l = n = null;
                            "multiplecellsadvanced" == d.selectionmode && (f += 2);
                            var t = d.hScrollInstance
                              , v = t.value;
                            this.rtl && ("hidden" != this.hScrollBar.css("visibility") && (v = t.max - t.value),
                            "hidden" != this.vScrollBar[0].style.visibility && (v -= this.scrollbarsize + 4));
                            t = d.table[0].rows[0];
                            var z = d.selectionarea.height();
                            !b.ctrlKey && !b.metaKey && 0 < z && (d.selectedcells = []);
                            parseInt(this.vScrollInstance.value);
                            n = parseInt(this.hScrollInstance.value);
                            this._gettableheight();
                            p = void 0 != this._hostwidth ? this._hostwidth : this.host.width();
                            q = this.groupable && 0 < this.groups.length ? this.groups.length : 0;
                            p = this._getvisualcolumnsindexes(n, p, q, this.columns.records.length - q, this.groupable && 0 < this.groups.length, !0, !0);
                            var E = p.start
                              , C = p.end;
                            for (this.__firstcell = null; f < m + z; ) {
                                if (n = d._hittestrow(h, f))
                                    if (p = n.row,
                                    q = n.index,
                                    -1 != q && !k[q])
                                        if (k[q] = !0,
                                        this.enableoptimization)
                                            for (F = E; F < C; F++) {
                                                if (n = parseFloat(d.columnsrow[0].cells[F].style.left) - v,
                                                P = n + d.columns.records[F].width,
                                                h >= n && h <= P || g >= n && g <= P || n >= h && n <= g)
                                                    d._applycellselection(d.getboundindex(p), d._getcolumnat(F).datafield, !0, !1),
                                                    n = {
                                                        x: h,
                                                        y: f,
                                                        rowindex: q,
                                                        row: d.getboundindex(p),
                                                        index: F,
                                                        datafield: d._getcolumnat(F).datafield
                                                    },
                                                    d.__lastcell = n,
                                                    l || (l = n,
                                                    d.__firstcell = l)
                                            }
                                        else
                                            for (var F = 0; F < t.cells.length; F++) {
                                                n = parseFloat(e(d.columnsrow[0].cells[F]).css("left")) - v;
                                                var P = n + e(d.columnsrow[0].cells[F]).width();
                                                if (h >= n && h <= P || g >= n && g <= P || n >= h && n <= g)
                                                    d._applycellselection(d.getboundindex(p), d._getcolumnat(F).datafield, !0, !1),
                                                    n = {
                                                        x: h,
                                                        y: f,
                                                        rowindex: q,
                                                        row: d.getboundindex(p),
                                                        index: F,
                                                        datafield: d._getcolumnat(F).datafield
                                                    },
                                                    d.__lastcell = n,
                                                    l || (l = n,
                                                    d.__firstcell = l)
                                            }
                                f += 5
                            }
                        }
                        d.autosavestate && d.savestate && d.savestate()
                    }
                    d._renderrows(d.virtualsizeinfo);
                    !1 !== c && d._handleAutofill(b, d)
                }
            }
        },
        _handleAutofill: function(b, d) {
            if (this.autofill) {
                var c = this;
                this.showheader && this.columnsheader.height();
                this._groupsheader() && this.groupsheader.height();
                this.host.css("border-top-width");
                this.showtoolbar && this.toolbar.height();
                var f = this.selectionarea.coord()
                  , g = this.host.coord();
                this.hasTransform && (g = e.jqx.utilities.getOffset(this.host),
                f = e.jqx.utilities.getOffset(this.selectionarea));
                this.host.css("border-top-width");
                g = f.left - g.left + this.selectionarea.width();
                var h = c.__firstcell;
                this.rtl && this.hScrollBar.css("visibility");
                var k = d.selectionarea.height()
                  , l = parseInt(b.pageX)
                  , m = parseInt(b.pageY);
                c = d;
                c._autofill && c._autofill.remove();
                h && !c.getcolumn(h.datafield).autofill || !c.autofill || (c._autofill = document.createElement("div"),
                c._autofill.style.width = "6px",
                c._autofill.style.height = "6px",
                c._autofill.style.position = "absolute",
                c._autofill.style.top = f.top - c.host.offset().top + k + 1 + "px",
                c._autofill.style.left = g + 2 + "px",
                c._autofill.style.cursor = "crosshair",
                c._autofill.style.paddingLeft = "0px",
                c._autofill.style.paddingTop = "0px",
                c._autofill.style.paddingRight = "0px",
                c._autofill.style.paddingBottom = "0px",
                c._autofill.style.borderTopLeftRadius = "0px",
                c._autofill.style.borderTopRightRadius = "0px",
                c._autofill.style.borderBottomLeftRadius = "0px",
                c._autofill.style.borderBottomRightRadius = "0px",
                c._autofill.style.background = "transparent",
                e(c._autofill).addClass(c.toThemeProperty("jqx-widget")),
                e(c._autofill).addClass(c.toThemeProperty("jqx-button")),
                e(c._autofill).addClass(c.toThemeProperty("primary")),
                e(c._autofill).addClass(c.toThemeProperty("jqx-fill-state-pressed")),
                c._autofill.onpointerdown = function(n) {
                    c._handlemouseupselection(n, c, !1);
                    n = n.originalEvent ? n.originalEvent : n;
                    c._autofillDragStart = !0;
                    c.mousecaptured = !0;
                    var p = c.showheader ? c.columnsheader.height() + 2 : 0
                      , q = c._groupsheader() ? c.groupsheader.height() : 0;
                    q = q + (c.showtoolbar ? c.toolbarheight : 0) + (c.showfilterbar ? c.toolbarheight : 0);
                    var t = c.host.coord()
                      , v = l - t.left
                      , z = m - p - t.top - q;
                    if (c.pageable && !c.autoheight && c.gotopage && (p = c.pager.coord().top - t.top - q - p,
                    z > p))
                        return;
                    (v = c._hittestrow(v, z)) && !v.details && (v = c.table[0].rows[h.rowindex],
                    z = e(d.columnsrow[0].cells[h.index]).coord().left,
                    p = e(v).coord().top + 1,
                    c.mousecaptured = !0,
                    c.mousecaptureposition = {
                        x: z,
                        y: p,
                        left: n.pageX,
                        top: n.pageY,
                        clickedrow: v
                    },
                    c.copyselection(),
                    n.stopPropagation(),
                    n.preventDefault())
                }
                ,
                e(document).off("pointermove.autofill"),
                e(document).off("pointerup.autofill"),
                e(document).on("pointermove.autofill", function(n) {
                    c._autofillDragStart && (n = n.originalEvent ? n.originalEvent : n,
                    c.mousecaptureposition.position ? "y" === c.mousecaptureposition.position ? (n._pageX = c.mousecaptureposition.x,
                    n._pageY = n.pageY,
                    c.mousecaptureposition.top = c.mousecaptureposition.y,
                    c._handlemousemoveselection(n, c)) : (n._pageX = n.pageX,
                    n._pageY = c.mousecaptureposition.y,
                    c.mousecaptureposition.clickedcell = h.index,
                    c.mousecaptureposition.left = c.mousecaptureposition.x,
                    c._handlemousemoveselection(n, c, null)) : 5 <= Math.abs(c.mousecaptureposition.left - n.pageX) ? c.mousecaptureposition.position = "x" : Math.abs(c.mousecaptureposition.top - n.pageY) && (c.mousecaptureposition.position = "y"))
                }),
                e(document).on("pointerup.autofill", function(n) {
                    n = n.originalEvent ? n.originalEvent : n;
                    c._autofillDragStart ? (c._handlemouseupselection(n, c),
                    c._autofillDragStart = !1,
                    c.mousecaptureposition = null,
                    c.mousecaptured = !1,
                    c.pasteselection(),
                    c._handlemouseupselection(n, c)) : (c._autofill && c._autofill.remove(),
                    c.clearselection())
                }),
                c.wrapper[0].appendChild(c._autofill))
            }
        },
        selectprevcell: function(b, d) {
            d = this._getcolumnindex(d);
            d = this._getprevvisiblecolumn(d);
            null != d && (this.clearselection(),
            this.selectcell(b, d.datafield))
        },
        selectnextcell: function(b, d) {
            d = this._getcolumnindex(d);
            d = this._getnextvisiblecolumn(d);
            null != d && (this.clearselection(),
            this.selectcell(b, d.datafield))
        },
        _getfirstvisiblecolumn: function() {
            for (var b = this.columns.records.length, d = 0; d < b; d++) {
                var c = this.columns.records[d];
                if (!c.hidden && null != c.datafield)
                    return c
            }
            return null
        },
        _getlastvisiblecolumn: function() {
            for (var b = this.columns.records.length - 1; 0 <= b; b--) {
                var d = this.columns.records[b];
                if (!d.hidden && null != d.datafield)
                    return d
            }
            return null
        },
        _handlekeydown: function(b, d) {
            if (d.disabled)
                return !1;
            var c = b.charCode ? b.charCode : b.keyCode ? b.keyCode : 0;
            if (32 === c && (b.metaKey || b.ctrlKey) && "multiplecellsadvanced" == d.selectionmode) {
                var f = this.getselectedcell();
                if (b.shiftKey) {
                    this.clearselection();
                    this.selectallrows();
                    if (30 > this.columns.records.length)
                        for (f = 0; f < this.columns.records.length; f++) {
                            var g = this.columns.records[f];
                            g.selectable && g.toggleSelection(g, b, !0)
                        }
                    this._renderrows(this.virtualsizeinfo);
                    return
                }
                f && (g = this.getcolumn(f.datafield),
                g.selectable && (this.clearselection(),
                g.toggleSelection(g, b, !0),
                this._renderrows(this.virtualsizeinfo)))
            }
            if (d.editcell && "multiplecellsadvanced" != d.selectionmode)
                return !0;
            if (d.editcell && "multiplecellsadvanced" == d.selectionmode)
                if (33 <= c && 40 >= c) {
                    if (b.altKey || void 0 != d._cancelkeydown && 0 != d._cancelkeydown)
                        return d._cancelkeydown = !1,
                        !0;
                    if ("selectedrow" !== d.editmode) {
                        if (d.endcelledit(d.editcell.row, d.editcell.column, !1, !0),
                        d._cancelkeydown = !1,
                        d.editcell && !d.editcell.validated)
                            return d._rendervisualrows(),
                            d.endcelledit(d.editcell.row, d.editcell.column, !1, !0),
                            !1
                    } else
                        return !0
                } else
                    return !0;
            if ("none" == d.selectionmode || d.showfilterrow && d.filterable && this.filterrow && e(b.target).ischildof(d.filterrow) || d.showeverpresentrow && (d.addnewrowtop && e(b.target).ischildof(d.addnewrowtop) || d.addnewrowbottom && e(b.target).ischildof(d.addnewrowbottom)) || b.target.className && 0 <= b.target.className.indexOf("jqx-grid-widget") || d.pageable && e(b.target).ischildof(this.pager) || this.showtoolbar && e(b.target).ischildof(this.toolbar) || this.showfilterbar && e(b.target).ischildof(this.filterbar) || this.showstatusbar && e(b.target).ischildof(this.statusbar))
                return !0;
            var h = !1;
            if (b.altKey)
                return !0;
            if ((b.ctrlKey || b.metaKey) && this.clipboard) {
                g = String.fromCharCode(c).toLowerCase();
                if ("z" === g && this._undoRedo) {
                    -1 === this._undoRedoIndex && (this._undoRedoIndex = this._undoRedo.length - 1);
                    var k = this._undoRedo[this._undoRedoIndex];
                    if (k)
                        if ("setcellvalue" === k.action)
                            this.setcellvalue(k.data.row, k.data.datafield, k.data.oldvalue),
                            this.clearselection(),
                            this.selectcell(k.data.row, k.data.datafield),
                            this.ensurecellvisible(k.data.row, k.data.datafield);
                        else if ("paste" === k.action) {
                            this.clearselection();
                            if (k.data)
                                for (f = 0; f < k.data.length; f++) {
                                    var l = k.data[f];
                                    this.setcellvalue(l.row, l.datafield, l.oldvalue);
                                    this._applycellselection(l.row, l.datafield, !0, !1);
                                    0 === f && this.ensurecellvisible(l.row, l.datafield)
                                }
                            this._rendervisualrows()
                        }
                    0 < this._undoRedoIndex && this._undoRedoIndex--
                }
                if ("y" === g && this._undoRedo) {
                    -1 === this._undoRedoIndex && (this._undoRedoIndex = this._undoRedo.length - 1);
                    if (k = this._undoRedo[this._undoRedoIndex])
                        if ("setcellvalue" === k.action)
                            this.setcellvalue(k.data.row, k.data.datafield, k.data.value),
                            this.clearselection(),
                            this.selectcell(k.data.row, k.data.datafield),
                            this.ensurecellvisible(k.data.row, k.data.datafield);
                        else if ("paste" === k.action) {
                            this.clearselection();
                            for (f = 0; f < k.data.length; f++)
                                l = k.data[f],
                                this.setcellvalue(l.row, l.datafield, l.value),
                                this._applycellselection(l.row, l.datafield, !0, !1),
                                0 === f && this.ensurecellvisible(l.row, l.datafield);
                            this._rendervisualrows()
                        }
                    this._undoRedoIndex < this._undoRedo.length - 1 && this._undoRedoIndex++
                }
                "d" === g && (this.copyselection(),
                this._clipboardselection = [this._clipboardselection[0]],
                this.pasteselection(),
                b.preventDefault(),
                b.stopPropagation());
                if (this.clipboardbegin && (f = null,
                "c" == g ? f = this.clipboardbegin("copy", this.copyselection()) : "x" == g ? f = this.clipboardbegin("cut", this.copyselection()) : "v" == g && (f = this.clipboardbegin("paste")),
                !1 === f))
                    return !1;
                if ("c" == g || "x" == g) {
                    f = this.copyselection();
                    "c" == g && this.clipboardend && this.clipboardend("copy");
                    "x" == g && this.clipboardend && this.clipboardend("cut");
                    if (window.clipboardData)
                        window.clipboardData.setData("Text", f);
                    else {
                        var m = e('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                        m.val(f);
                        e("body").append(m);
                        m.select();
                        setTimeout(function() {
                            document.designMode = "off";
                            m.select();
                            m.remove();
                            d.focus()
                        }, 100)
                    }
                    if ("c" == g && e.jqx.browser.msie)
                        return !1;
                    if ("c" == g)
                        return !0
                } else if ("v" == g) {
                    if (document.activeElement && "INPUT" === document.activeElement.nodeName)
                        return !0;
                    var n = e('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                    e("body").append(n);
                    n.select();
                    var p = this;
                    setTimeout(function() {
                        p._clipboardselection = [];
                        var V = n.val();
                        0 == V.length && window.clipboardData && (n.val(window.clipboardData.getData("Text")),
                        V = n.val());
                        V = V.split("\n");
                        for (var ca = 0; ca < V.length; ca++)
                            if (0 < V[ca].split("\t").length) {
                                var u = V[ca].split("\t");
                                (1 != u.length || ca != V.length - 1 || "" != u[0]) && 0 < u.length && p._clipboardselection.push(u)
                            }
                        p.pasteselection();
                        n.remove();
                        p.focus()
                    }, 100);
                    return !0
                }
                if ("x" == g)
                    return this.deleteselection(),
                    this.host.focus(),
                    !1
            }
            g = Math.round(d._gettableheight());
            var q = Math.round(g / d.rowsheight)
              , t = d.getdatainformation();
            switch (d.selectionmode) {
            case "singlecell":
            case "multiplecells":
            case "multiplecellsextended":
            case "multiplecellsadvanced":
                f = d.getselectedcell();
                null === f && d.selectcell(0, d.columns.records[0].displayfield);
                if (null != f) {
                    g = this.getrowvisibleindex(f.rowindex);
                    var v = f.datafield
                      , z = d._getcolumnindex(v)
                      , E = function(V, ca, u, D) {
                        var B = function(H, J) {
                            var K = d.dataview.loadedrecords[H];
                            if (d.groupable && 0 < d.groups.length) {
                                var Q = H;
                                "up" == D && Q++;
                                "down" == D && Q--;
                                K = d.getdisplayrows()[Q];
                                for (var Y = 1, I = !0; I && 300 > Y; ) {
                                    I = !1;
                                    "down" == D ? K = d.getdisplayrows()[Q + Y] : "up" == D && (K = d.getdisplayrows()[Q - Y]);
                                    if (!K)
                                        break;
                                    K && K.group && (I = !0);
                                    K && K.totalsrow && (I = !0);
                                    for (var T = K.parentItem; T; ) {
                                        var Z;
                                        if (Z = T)
                                            Z = T.group ? d.expandedgroups[T.uniqueid] ? d.expandedgroups[T.uniqueid].expanded : void 0 : !1,
                                            Z = !Z;
                                        Z && (I = !0);
                                        T = T.parentItem
                                    }
                                    if (!I)
                                        break;
                                    Y++
                                }
                                300 == Y && (K = null);
                                if (d.pageable && (Q = !1,
                                K)) {
                                    for (Y = 0; Y < d.dataview.rows.length; Y++)
                                        d.dataview.rows[Y].boundindex == K.boundindex && (Q = !0);
                                    Q || (K = null)
                                }
                            } else if (d.pageable && (Q = !1,
                            K)) {
                                for (Y = 0; Y < d.dataview.rows.length; Y++)
                                    d.dataview.rows[Y].boundindex == K.boundindex && (Q = !0);
                                Q || (d.pagerpageinput && 9 === b.keyCode && K.boundindex > d.dataview.rows[d.dataview.rows.length - 1].boundindex && (d.pagerpageinput.focus(),
                                b.preventDefault()),
                                d.ensurerowvisible(K))
                            }
                            return void 0 == K || null == J || K.totalsrow ? !1 : ((u || void 0 == u) && d.clearselection(),
                            K = d.getboundindex(K),
                            d.selectcell(K, J),
                            d._oldselectedcell = d.selectedcell,
                            h = !0,
                            d.groupable ? d.ensurecellvisible(K, J) : d.ensurecellvisible(H, J),
                            !0)
                        };
                        B(V, ca) || d.groupable || (d.ensurecellvisible(V, ca),
                        B(V, ca),
                        d.virtualmode && d.host.focus());
                        d.groupable && 0 < d.groups.length || (b.shiftKey && 9 != b.keyCode ? "multiplecellsextended" != d.selectionmode && "multiplecellsadvanced" != d.selectionmode || !d._lastClickedCell || (d._selectpath(V, ca),
                        V = d.getboundindex(d.dataview.loadedrecords[V]),
                        d.selectedcell = {
                            rowindex: V,
                            datafield: ca
                        }) : b.shiftKey || (d._lastClickedCell = {
                            row: V,
                            column: ca
                        }))
                    }
                      , C = b.shiftKey && "singlecell" != d.selectionmode && "multiplecells" != d.selectionmode;
                    f = function() {
                        d.pageable ? E(d.dataview.pagenum * d.dataview.pagesize, v, !C) : E(0, v, !C)
                    }
                    ;
                    k = function() {
                        var V = t.rowscount - 1;
                        d.pageable && (V = d.dataview.pagenum * d.dataview.pagesize + d.dataview.rows.length - 1);
                        E(V, v, !C)
                    }
                    ;
                    var F = 9 == c && !b.shiftKey
                      , P = 9 == c && b.shiftKey;
                    d.rtl && (l = F,
                    F = P,
                    P = l);
                    if (F || P)
                        C = !1;
                    if ((F || P) && document.activeElement && document.activeElement.className && 0 <= document.activeElement.className.indexOf("jqx-grid-cell-add-new-row"))
                        return !0;
                    if ((l = b.ctrlKey || b.metaKey) && 37 == c)
                        q = d._getfirstvisiblecolumn(z),
                        null != q && E(g, q.datafield);
                    else if (l && 39 == c)
                        q = d._getlastvisiblecolumn(z),
                        null != q && E(g, q.datafield);
                    else if (39 == c || F)
                        q = d._getnextvisiblecolumn(z),
                        null != q ? E(g, q.datafield, !C) : F ? (q = d._getfirstvisiblecolumn(),
                        c = 40,
                        v = q.displayfield) : h = !0;
                    else if (37 == c || P)
                        q = d._getprevvisiblecolumn(z),
                        null != q ? E(g, q.datafield, !C) : P ? (q = d._getlastvisiblecolumn(),
                        c = 38,
                        v = q.displayfield) : h = !0;
                    else if (36 == c)
                        f();
                    else if (35 == c)
                        k();
                    else if (33 == c)
                        if (0 <= g - q) {
                            var X = g - q;
                            E(X, v, !C);
                            d.pageable && d.virtualmode && (d.gotoprevpage(),
                            setTimeout(function() {
                                E(X, v, !C)
                            }, 25))
                        } else
                            f();
                    else
                        34 == c && (t.rowscount > g + q ? (X = g + q,
                        E(X, v, !C),
                        d.pageable && d.virtualmode && (d.gotonextpage(),
                        setTimeout(function() {
                            E(X, v, !C)
                        }, 25))) : k());
                    38 == c && (l ? f() : 0 < g ? E(g - 1, v, !C, "up") : h = !1);
                    40 == c && (l ? k() : t.rowscount > g + 1 || d.groupable && 0 < d.groups.length ? E(g + 1, v, !C, "down") : h = !0)
                }
                break;
            case "singlerow":
            case "multiplerows":
            case "multiplerowsextended":
            case "multiplerowsadvanced":
                g = d.getselectedrowindex();
                if (null == g || -1 == g)
                    return !0;
                g = this.getrowvisibleindex(g);
                var W = function(V, ca, u) {
                    var D = function(B) {
                        var H = d.dataview.loadedrecords[B];
                        if (d.groupable && 0 < d.groups.length) {
                            "up" == u && B++;
                            "down" == u && B--;
                            H = d.getdisplayrows()[B];
                            for (var J = 1, K = !0; K && 300 > J; ) {
                                K = !1;
                                "down" == u ? H = d.getdisplayrows()[B + J] : "up" == u && (H = d.getdisplayrows()[B - J]);
                                if (!H)
                                    break;
                                H && H.group && (K = !0);
                                H && H.totalsrow && (K = !0);
                                for (var Q = H.parentItem; Q; ) {
                                    var Y;
                                    if (Y = Q)
                                        Y = Q.group ? d.expandedgroups[Q.uniqueid] ? d.expandedgroups[Q.uniqueid].expanded : void 0 : !1,
                                        Y = !Y;
                                    Y && (K = !0);
                                    Q = Q.parentItem
                                }
                                if (!K)
                                    break;
                                J++
                            }
                            300 == J && (H = null);
                            if (d.pageable && (J = !1,
                            H)) {
                                for (K = 0; K < d.dataview.rows.length; K++)
                                    d.dataview.rows[K].boundindex == H.boundindex && (J = !0);
                                J || (H = null)
                            }
                        }
                        return void 0 != H ? (H = d.getboundindex(H),
                        J = d.selectedrowindex,
                        (ca || void 0 == ca) && d.clearselection(),
                        d.selectedrowindex = J,
                        d.selectrow(H, !1),
                        (d.groupable ? d.ensurerowvisible(H) : d.ensurerowvisible(B)) && !d.autoheight && !d.groupable || d._rendervisualrows(),
                        h = !0) : !1
                    };
                    D(V) || d.groupable || (d.ensurerowvisible(V),
                    D(V, ca),
                    d.virtualmode && setTimeout(function() {
                        D(V, ca)
                    }, 25),
                    d.virtualmode && d.host.focus());
                    d.groupable && 0 < d.groups.length || (b.shiftKey && 9 != c ? "multiplerowsextended" == d.selectionmode && d._lastClickedCell && (d._selectrowpath(V),
                    d.selectedrowindex = d.getrowboundindex(V)) : b.shiftKey || (d._lastClickedCell = {
                        row: V
                    },
                    d.selectedrowindex = d.getrowboundindex(V)))
                };
                C = b.shiftKey && "singlerow" != d.selectionmode && "multiplerows" != d.selectionmode;
                f = function() {
                    d.pageable ? W(d.dataview.pagenum * d.dataview.pagesize, !C) : W(0, !C)
                }
                ;
                k = function() {
                    var V = t.rowscount - 1;
                    d.pageable && (V = d.dataview.pagenum * d.dataview.pagesize + d.dataview.rows.length - 1);
                    W(V, !C)
                }
                ;
                l = b.ctrlKey || b.metaKey;
                36 == c || l && 38 == c ? f() : 35 == c || l && 40 == c ? k() : 33 == c ? 0 <= g - q ? (X = g - q,
                W(X, !C, "up"),
                d.pageable && d.virtualmode && (d.gotoprevpage(),
                setTimeout(function() {
                    W(X, !C)
                }, 25))) : f() : 34 == c ? t.rowscount > g + q ? (X = g + q,
                W(X, !C, "down"),
                d.pageable && d.virtualmode && (d.gotonextpage(),
                setTimeout(function() {
                    W(X, !C)
                }, 25))) : k() : 38 == c ? 0 < g ? W(g - 1, !C, "up") : h = !0 : 40 == c && (t.rowscount > g + 1 || d.groupable && 0 < d.groups.length ? W(g + 1, !C, "down") : h = !0)
            }
            return h ? (d.autosavestate && d.savestate && d.savestate(),
            !1) : !0
        },
        _handlemousemove: function(b, d) {
            if (!d.vScrollInstance.isScrolling() && !d.hScrollInstance.isScrolling()) {
                if (d.enablehover || "multiplerows" == d.selectionmode) {
                    var c = this.showheader ? this.columnsheader.height() + 2 : 0;
                    var f = this._groupsheader() ? this.groupsheader.height() : 0;
                    f = f + (this.showtoolbar ? this.toolbarheight : 0) + (this.showfilterbar ? this.toolbarheight : 0);
                    var g = this.host.coord();
                    if (this.hasTransform) {
                        g = e.jqx.utilities.getOffset(this.host);
                        var h = this._getBodyOffset();
                        g.left -= h.left;
                        g.top -= h.top
                    }
                    h = b.pageX - g.left;
                    c = b.pageY - c - g.top - f
                }
                if ("multiplerowsextended" != d.selectionmode && "multiplecellsextended" != d.selectionmode && "multiplecellsadvanced" != d.selectionmode || 1 != d.mousecaptured)
                    if (d.enablehover) {
                        if (!(d.disabled || this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling()) && (c = this._hittestrow(h, c))) {
                            var k = c.row;
                            c = c.index;
                            if (-1 == this.hoveredrow || -1 == c || this.hoveredrow != c || -1 != this.selectionmode.indexOf("cell") || "checkbox" == this.selectionmode)
                                if (this._clearhoverstyle(),
                                -1 != c && void 0 != k && (f = this.hittestinfo[c].visualrow,
                                !(null == f || this.hittestinfo[c].details || b.clientX > e(f).width() + e(f).coord().left))) {
                                    var l = 0;
                                    g = f.cells.length;
                                    d.rowdetails && d.showrowdetailscolumn ? this.rtl ? g = g - 1 - this.groups.length : l = 1 + this.groups.length : this.groupable && (this.rtl ? g -= this.groups.length : l = this.groups.length);
                                    if (0 != f.cells.length && (d = f.cells[l].className,
                                    !(k.group || 0 <= this.selectionmode.indexOf("row") && -1 != d.indexOf("jqx-grid-cell-selected"))))
                                        if (this.hoveredrow = c,
                                        -1 != this.selectionmode.indexOf("cell") || "checkbox" == this.selectionmode) {
                                            d = -1;
                                            var m = this.hScrollInstance;
                                            k = m.value;
                                            for (this.rtl && "hidden" != this.hScrollBar.css("visibility") && (k = m.max - m.value); l < g; l++)
                                                if (m = parseInt(this.columnsrow[0].cells[l].style.left) - k,
                                                this.columns.records[l].pinned && !this.rtl && (m = parseInt(this.columnsrow[0].cells[l].style.left)),
                                                m + this.columns.records[l].width >= h && h >= m) {
                                                    d = l;
                                                    break
                                                }
                                            if (-1 != d) {
                                                h = f.cells[d];
                                                this.cellhover && this.cellhover(h, b.pageX, b.pageY);
                                                if (-1 == h.className.indexOf("jqx-grid-cell-selected") && this.editcell && (k = this._getcolumnat(d)) && this.editcell.row == c && this.editcell.column == k.datafield)
                                                    return;
                                                e(h).addClass(this.toTP("jqx-grid-cell-hover"));
                                                e(h).addClass(this.toTP("jqx-fill-state-hover"));
                                                k = this._getcolumnat(d);
                                                k._applyCellStyle(h)
                                            }
                                        } else
                                            for (; l < g; l++)
                                                h = f.cells[l],
                                                e(h).addClass(this.toTP("jqx-grid-cell-hover")),
                                                e(h).addClass(this.toTP("jqx-fill-state-hover")),
                                                this.cellhover && this.cellhover(h, b.pageX, b.pageY),
                                                k = this._getcolumnat(l),
                                                k._applyCellStyle(h)
                                }
                        }
                    } else
                        return !0
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.dataview.grouping = function() {
        this.loadgrouprecords = function(b, d, c, f, g, h, k, l, m) {
            var n = b;
            n = [];
            for (var p = 0; p < this.groups.length; p++)
                n[p] = this.generatekey();
            f = [];
            var q = 0
              , t = []
              , v = d
              , z = d
              , E = this.groups.length;
            this.loadedrecords = [];
            this.bounditems = [];
            this.loadedrecords = [];
            this.loadedrootgroups = [];
            this.loadedgroups = [];
            this.loadedgroupsByKey = [];
            this.sortedgroups = [];
            var C = null != this.sortdata
              , F = C ? this.sortdata : this.records;
            if (this.pageable) {
                var P = []
                  , X = 0;
                F[d] || (e.each(F, function(Q, Y) {
                    P[d + Q++] = this
                }),
                F = P)
            }
            if (this.virtualmode) {
                P = [];
                for (v = X = 0; v < c - d; v++)
                    F[v] ? P[d + X++] = F[v] : F[d + X] && (P[d + X] = F[d + X],
                    X++);
                v = 0;
                F = P
            }
            for (X = d; X < c; X++) {
                var W = {};
                W = C ? e.extend({}, F[X].value) : e.extend({}, F[X]);
                var V = W[this.uniqueId];
                if (g >= l || V != k[g][this.uniqueId] || h && h[V])
                    m[m.length] = g;
                V = [];
                var ca = 0;
                for (p = 0; p < E; p++) {
                    var u = this.groups[p];
                    u = W[u];
                    null == u && (u = "");
                    V[ca++] = {
                        value: u,
                        hash: n[p]
                    }
                }
                if (V.length != E)
                    break;
                u = null;
                p = "";
                ca = -1;
                for (var D = 0; D < V.length; D++) {
                    ca++;
                    var B = V[D].value;
                    p = p + "_" + V[D].hash + "_" + B;
                    if (void 0 != t[p] && null != t[p])
                        u = t[p];
                    else {
                        if (null == u)
                            u = {
                                group: B,
                                subItems: [],
                                subGroups: [],
                                level: 0
                            },
                            f[q++] = u,
                            u.uniqueid = this.generatekey(),
                            this.loadedgroupsByKey[B] = u;
                        else {
                            var H = {
                                group: B,
                                subItems: [],
                                subGroups: [],
                                parentItem: u,
                                level: u.level + 1
                            };
                            this.loadedgroupsByKey[u.uniqueid + "_" + B] = H;
                            H.uniqueid = this.generatekey();
                            u = u.subGroups[u.subGroups.length++] = H
                        }
                        t[p] = u
                    }
                }
                null != u ? (void 0 == W.uid && (W.uid = this.getid(this.source.id, W, v)),
                C ? (W.boundindex = F[X].index,
                this.recordsbyid["id" + W.uid] = F[X].value) : (W.boundindex = v,
                this.recordsbyid["id" + W.uid] = F[X]),
                this.bounditems[W.boundindex] = W,
                this.sortedgroups[v] = W,
                W.uniqueid = this.generatekey(),
                W.parentItem = u,
                W.level = u.level + 1,
                u.subItems[u.subItems.length++] = W) : (void 0 == W.uid && (W.uid = this.getid(this.source.id, W, v)),
                C ? (W.boundindex = F[X].index,
                this.recordsbyid["id" + W.uid] = F[X].value) : (W.boundindex = v,
                this.recordsbyid["id" + W.uid] = F[X]),
                this.sortedgroups[v] = W,
                this.bounditems[W.boundindex] = W,
                W.uniqueid = this.generatekey());
                g++;
                v++;
                z++
            }
            var J = function(Q, Y, I) {
                for (var T = 0; T < Y.subItems.length; T++)
                    Y.subItems[T].visibleindex = b + I,
                    Q.rows[I] = Y.subItems[T],
                    Q.loadedrecords[I] = Y.subItems[T],
                    I++;
                return I
            }
              , K = function(Q, Y, I) {
                var T = 1
                  , Z = Q.grid.columns.records ? Q.grid.columns.records : Q.grid.columns;
                if (1 == Q.aggregates)
                    for (var ra = 0; ra < Z.length; ra++)
                        Z[ra].aggregates && (T = Math.max(T, Z[ra].aggregates.length));
                for (var ia in Y.subGroups)
                    ra = Y.subGroups[ia],
                    ra.subGroups && (Q.loadedgroups[Q.loadedgroups.length] = ra,
                    ra.visibleindex = b + I,
                    Q.rows[I] = ra,
                    Q.loadedrecords[I] = ra,
                    I++,
                    0 < ra.subGroups.length ? I = K(Q, ra, I) : 0 < ra.subItems.length && (I = J(Q, ra, I)));
                0 < Y.subItems.length && (I = J(Q, Y, I));
                (function(la) {
                    if (1 == Q.aggregates)
                        for (var aa = function(fa) {
                            var ma = la
                              , w = {}
                              , pa = function(ta) {
                                for (var L = 0; L < Z.length; L++)
                                    if (Z[L].aggregates)
                                        for (var O = Q.grid.getcolumnaggregateddata(Z[L].datafield, Z[L].aggregates, !0, ta), S = 0; S < Z[L].aggregates.length; S++)
                                            if (Z[L].aggregates[fa]) {
                                                var ha = Z[L]
                                                  , na = Z[L].aggregates[fa]
                                                  , ja = na;
                                                ja = Q.grid._getaggregatename(ja);
                                                var sa = ja + ":" + O[na];
                                                w[ha.datafield] = O[na] ? sa : ja + ":" + O[ja]
                                            }
                            };
                            if (null != ma)
                                if (w.level = ma.level,
                                w.visibleindex = b + I,
                                w.uniqueid = Q.generatekey(),
                                Q.rows[I] = w,
                                Q.loadedrecords[I++] = w,
                                w.totalsrow = !0,
                                0 < la.subItems.length) {
                                    ma = la.subItems[la.subItems.length - 1];
                                    w.parentItem = ma.parentItem;
                                    w.parentItem.subItems && (w.parentItem.subItems[w.parentItem.subItems.length] = w);
                                    var ka = []
                                      , wa = function() {
                                        for (var ta = 0; ta < la.subItems.length; ta++)
                                            la.subItems[ta].totalsrow || (ka[ka.length] = la.subItems[ta])
                                    };
                                    wa(la);
                                    pa(ka)
                                } else
                                    0 < la.subGroups.length && (ma = la.subGroups[la.subGroups.length - 1],
                                    w.level = ma.level,
                                    w.parentItem = la,
                                    la.subGroups[la.subGroups.length] = w,
                                    ka = [],
                                    wa = function(ta) {
                                        if (!ta.totalsrow) {
                                            for (var L = 0; L < ta.subItems.length; L++)
                                                ta.subItems[L].totalsrow || (ka[ka.length] = ta.subItems[L]);
                                            for (L = 0; L < ta.subGroups.length; L++)
                                                wa(ta.subGroups[L])
                                        }
                                    }
                                    ,
                                    wa(la),
                                    pa(ka))
                        }, U = 0; U < T; U++)
                            aa(U)
                }
                )(Y);
                return I
            };
            c = f.length;
            this.loadedgroups = [];
            this.rows = [];
            for (v = n = 0; v < c; v++)
                u = f[v],
                this.loadedrootgroups[v] = u,
                this.loadedgroups[this.loadedgroups.length] = u,
                u.visibleindex = b + n,
                this.rows[n] = u,
                this.loadedrecords[n] = u,
                n++,
                n = K(this, u, n);
            return n
        }
        ;
        this._updategroupsinpage = function(b, d, c, f, g, h, k) {
            var l = [];
            if (this.groupable && 0 < this.groups.length) {
                d = 0;
                g = [];
                for (var m = [], n = 0; n < b.groups.length; n++)
                    m[n] = b.generatekey();
                var p = 0
                  , q = []
                  , t = 0;
                k > this.totalrecords && (k = this.totalrecords);
                for (; h < k; h++) {
                    var v = e.extend({}, b.sortedgroups[h]);
                    if (!b.pagesize || c >= b.pagesize * b.pagenum && c < b.pagesize * (b.pagenum + 1)) {
                        var z = []
                          , E = 0;
                        for (n = 0; n < b.groups.length; n++) {
                            var C = b.groups[n];
                            C = v[C];
                            null == C && (C = "");
                            z[E++] = {
                                value: C,
                                hash: m[n]
                            }
                        }
                        if (z.length != b.groups.length)
                            break;
                        n = null;
                        E = "";
                        C = -1;
                        for (var F = 0; F < z.length; F++) {
                            C++;
                            var P = z[F].value;
                            E = E + "_" + z[F].hash + "_" + P;
                            if (void 0 != g[E] && null != g[E])
                                n = g[E];
                            else {
                                if (null == n)
                                    n = {
                                        group: P,
                                        subItems: [],
                                        subGroups: [],
                                        level: 0
                                    },
                                    q[t++] = n,
                                    P = b.loadedgroupsByKey[P],
                                    void 0 != P && (n.visibleindex = P.visibleindex,
                                    n.uniqueid = P.uniqueid);
                                else {
                                    var X = {
                                        group: P,
                                        subItems: [],
                                        subGroups: [],
                                        parentItem: n,
                                        level: n.level + 1
                                    };
                                    P = b.loadedgroupsByKey[n.uniqueid + "_" + P];
                                    X.visibleindex = P.visibleindex;
                                    X.uniqueid = P.uniqueid;
                                    n = n.subGroups[n.subGroups.length++] = X
                                }
                                g[E] = n
                            }
                        }
                        null != n && (v.parentItem = n,
                        v.level = n.level + 1,
                        n.subItems[n.subItems.length++] = v);
                        f++
                    }
                    p++;
                    c++
                }
                var W = function(u, D, B) {
                    for (u = 0; u < D.subItems.length; u++)
                        l[B] = e.extend({}, D.subItems[u]),
                        B++;
                    return B
                }
                  , V = function(u) {
                    for (var D in u.subGroups) {
                        var B = u.subGroups[D];
                        if (B.subGroups && (0 < B.subGroups.length && V(B) || 0 < B.subItems.length))
                            return !0
                    }
                    return 0 < u.subItems.length ? !0 : !1
                }
                  , ca = function(u, D, B) {
                    var H = 1
                      , J = u.grid.columns.records ? u.grid.columns.records : u.grid.columns;
                    if (1 == u.aggregates)
                        for (var K = 0; K < J.length; K++)
                            J[K].aggregates && (H = Math.max(H, J[K].aggregates.length));
                    for (var Q in D.subGroups)
                        K = D.subGroups[Q],
                        K.subGroups && V(K) && (l[B] = K,
                        B++,
                        0 < K.subGroups.length ? B = ca(u, K, B) : 0 < K.subItems.length && (B = W(u, K, B)));
                    0 < D.subItems.length && (B = W(u, D, B));
                    (function(Y) {
                        if (1 == u.aggregates)
                            for (var I = function(Z) {
                                var ra = Y
                                  , ia = {}
                                  , la = function(fa) {
                                    for (var ma = 0; ma < J.length; ma++)
                                        if (J[ma].aggregates)
                                            for (var w = u.grid.getcolumnaggregateddata(J[ma].datafield, J[ma].aggregates, !0, fa), pa = 0; pa < J[ma].aggregates.length; pa++)
                                                if (J[ma].aggregates[Z]) {
                                                    var ka = J[ma]
                                                      , wa = J[ma].aggregates[Z]
                                                      , ta = wa;
                                                    ta = u.grid._getaggregatename(ta);
                                                    ia[ka.datafield] = ta + ":" + w[wa]
                                                }
                                };
                                if (null != ra)
                                    if (ia.level = ra.level,
                                    ia.visibleindex = B,
                                    ia.uniqueid = u.generatekey(),
                                    l[B] = ia,
                                    u.loadedrecords[B++] = ia,
                                    ia.totalsrow = !0,
                                    0 < Y.subItems.length) {
                                        ra = Y.subItems[Y.subItems.length - 1];
                                        ia.parentItem = ra.parentItem;
                                        ia.parentItem.subItems && (ia.parentItem.subItems[ia.parentItem.subItems.length] = ia);
                                        var aa = []
                                          , U = function() {
                                            for (var fa = 0; fa < Y.subItems.length; fa++)
                                                Y.subItems[fa].totalsrow || (aa[aa.length] = Y.subItems[fa])
                                        };
                                        U(Y);
                                        la(aa)
                                    } else
                                        0 < Y.subGroups.length && (ra = Y.subGroups[Y.subGroups.length - 1],
                                        ia.level = ra.level,
                                        ia.parentItem = Y,
                                        Y.subGroups[Y.subGroups.length] = ia,
                                        aa = [],
                                        U = function(fa) {
                                            if (!fa.totalsrow) {
                                                for (var ma = 0; ma < fa.subItems.length; ma++)
                                                    fa.subItems[ma].totalsrow || (aa[aa.length] = fa.subItems[ma]);
                                                for (ma = 0; ma < fa.subGroups.length; ma++)
                                                    U(fa.subGroups[ma])
                                            }
                                        }
                                        ,
                                        U(Y),
                                        la(aa))
                            }, T = 0; T < H; T++)
                                I(T)
                    }
                    )(D);
                    return B
                };
                for (p = 0; p < q.length; p++)
                    C = q[p],
                    V(C) && (l[d] = C,
                    d++,
                    d = ca(this, C, d))
            }
            return l
        }
    }
    ;
    e.extend(e.jqx._jqxGrid.prototype, {
        _initgroupsheader: function() {
            this.groupsheader.css("visibility", "hidden");
            if (this._groupsheader()) {
                this.groupsheader.css("visibility", "inherit");
                var b = this
                  , d = this.gridlocalization.groupsheaderstring;
                this.groupsheaderdiv = this.groupsheaderdiv || e('<div style="width: 100%; position: relative;"></div>');
                this.groupsheaderdiv.height(this.groupsheaderheight);
                this.groupsheaderdiv.css("top", 0);
                this.groupsheader.append(this.groupsheaderdiv);
                this.groupheadersbounds = [];
                var c = this.groups.length;
                this.groupsheaderdiv.children().remove();
                this.groupsheaderdiv[0].innerHTML = "";
                var f = [];
                0 < c ? e.each(this.groups, function(g) {
                    var h = this
                      , k = b._getColumnText(this).label;
                    k = b._rendergroupcolumn(k, h);
                    k.addClass(b.toThemeProperty("jqx-grid-group-column"));
                    b.groupsheaderdiv.append(k);
                    if (b.closeablegroups) {
                        var l = e(k.find(".jqx-icon-close"));
                        b.isTouchDevice() && !0 !== b.touchmode ? b.addHandler(l, "touchstart", function() {
                            b.removegroupat(g);
                            return !1
                        }) : b.addHandler(l, "click", function() {
                            b.removegroupat(g);
                            return !1
                        })
                    }
                    b.sortable && b.addHandler(k, "click", function() {
                        var m = b.getcolumn(h);
                        null != m && b._togglesort(m);
                        return !1
                    });
                    f[f.length] = k;
                    b._handlegroupstocolumnsdragdrop(this, k);
                    g < c - 1 && (k = k.height(),
                    l = e('<div style="float: left; position: relative;"></div>'),
                    b.rtl && l.css("float", "right"),
                    l.width(b.groupindentwidth / 3),
                    l.height(1),
                    l.css("top", k / 2),
                    l.addClass(b.toThemeProperty("jqx-grid-group-column-line")),
                    b.groupsheaderdiv.append(l))
                }) : (d = e('<div style="position: relative;">' + d + "</div>"),
                this.groupsheaderdiv.append(d),
                this.rtl && d.addClass(this.toThemeProperty("jqx-rtl")));
                this._groupheaders = f;
                this._updategroupheadersbounds()
            }
        },
        _updategroupheadersbounds: function() {
            var b = this
              , d = this.groupsheaderdiv.children().outerHeight();
            d = (this.groupsheader.height() - d) / 2;
            this.groupsheaderdiv.css("top", d);
            this.rtl ? (this.groupsheaderdiv.css("left", ""),
            this.groupsheaderdiv.css("right", d)) : (this.groupsheaderdiv.css("left", d),
            this.groupsheaderdiv.css("right", ""));
            this.rtl && this._groupheaders.reverse();
            e.each(this._groupheaders, function(c) {
                var f = this.coord();
                b.groupheadersbounds[c] = {
                    left: f.left,
                    top: f.top,
                    width: this.outerWidth(),
                    height: this.outerHeight(),
                    index: c
                }
            })
        },
        addgroup: function(b) {
            b && (this.groups !== this.dataview.groups && (this.dataview.groups = this.groups),
            this.groups[this.groups.length] = b,
            this.refreshgroups(),
            this._raiseEvent(12, {
                type: "Add",
                index: this.groups[this.groups.length],
                groups: this.groups
            }))
        },
        insertgroup: function(b, d) {
            void 0 != b && null != b && 0 <= b && b <= this.groups.length && d && (this.groups !== this.dataview.groups && (this.dataview.groups = this.groups),
            this.groups.splice(b, 0, d.toString()),
            this.refreshgroups(),
            this._raiseEvent(12, {
                type: "Insert",
                index: b,
                groups: this.groups
            }))
        },
        refreshgroups: function() {
            this._refreshdataview();
            this._render(!0, !0, !0, !1);
            this._postrender("group")
        },
        _insertaftergroup: function(b, d) {
            b = this._getGroupIndexByDataField(b);
            this.insertgroup(b + 1, d)
        },
        _insertbeforegroup: function(b, d) {
            b = this._getGroupIndexByDataField(b);
            this.insertgroup(b, d)
        },
        removegroupat: function(b) {
            return 0 <= b && null != b && void 0 != b ? (this.groups !== this.dataview.groups && (this.dataview.groups = this.groups),
            this.groups.splice(b, 1),
            this.refreshgroups(),
            this.virtualmode && this.updatebounddata(),
            this._raiseEvent(12, {
                type: "Remove",
                index: b,
                groups: this.groups
            }),
            !0) : !1
        },
        cleargroups: function() {
            this.groups = [];
            this.dataview.groups = this.groups;
            this.refreshgroups();
            this._raiseEvent(12, {
                type: "Clear",
                index: -1,
                groups: this.groups
            });
            return !0
        },
        removegroup: function(b) {
            if (null == b)
                return !1;
            b = this.groups.indexOf(b.toString());
            return this.removegroupat(b)
        },
        getrootgroupscount: function() {
            return this.dataview.loadedrootgroups.length
        },
        collapsegroup: function(b) {
            if (0 <= b && -1 === b.toString().indexOf("."))
                return this._setrootgroupstate(b, !1);
            var d = b.toString().split(".")
              , c = null;
            this.groupsVisibility || (this.groupsVisibility = []);
            for (var f = 0; f < d.length; f++)
                if (b = parseInt(d[f]),
                0 == f)
                    c = this.dataview.loadedrootgroups[b],
                    this.groupsVisibility[c.group] = null;
                else if (b = c.subGroups[b])
                    c = b,
                    f == d.length - 1 && (this._setgroupstate(c, !1, !0),
                    this.groupsVisibility[c.group] = null)
        },
        expandgroup: function(b) {
            if (0 <= b && -1 === b.toString().indexOf("."))
                return this._setrootgroupstate(b, !0);
            for (var d = b.toString().split("."), c = null, f = 0; f < d.length; f++)
                if (b = parseInt(d[f]),
                0 == f)
                    c = this.dataview.loadedrootgroups[b],
                    this._setrootgroupstate(b, !0),
                    this.groupsVisibility || (this.groupsVisibility = []),
                    this.groupsVisibility[c.group] = c;
                else if (b = c.subGroups[b])
                    c = b,
                    this._setgroupstate(c, !0, !0),
                    this.groupsVisibility || (this.groupsVisibility = []),
                    this.groupsVisibility[c.group] = c
        },
        collapseallgroups: function(b) {
            this._setbatchgroupstate(!1, b)
        },
        expandallgroups: function(b) {
            this._setbatchgroupstate(!0, b)
        },
        isgroupexpanded: function(b) {
            b = this.dataview.loadedrootgroups[b];
            return null == b ? null : this.expandedgroups[b.uniqueid].expanded
        },
        jsonParser: function() {
            function b(q, t, v) {
                var z = !1, E = !!t, C = [], F = [q], P = [q], X = [v ? "~" : "[Circular]"], W = q, V = 1, ca, u;
                E && (u = "object" === typeof t ? function(D, B) {
                    return "" !== D && 0 > m.call(t, D) ? void 0 : B
                }
                : t);
                return function(D, B) {
                    E && (B = u.call(this, D, B));
                    z ? (W !== this && (ca = V - m.call(F, this) - 1,
                    V -= ca,
                    F.splice(V, F.length),
                    C.splice(V - 1, C.length),
                    W = this),
                    "object" === typeof B && B ? (0 > m.call(F, B) && F.push(W = B),
                    V = F.length,
                    ca = m.call(P, B),
                    0 > ca ? (ca = P.push(B) - 1,
                    v ? (C.push(("" + D).replace(h, f)),
                    X[ca] = "~" + C.join("~")) : X[ca] = X[0]) : B = X[ca]) : "string" === typeof B && v && (B = B.replace(f, g).replace("~", f))) : z = !0;
                    return B
                }
            }
            function d(q) {
                return function(t, v) {
                    var z = "string" === typeof v;
                    if (z && "~" === v.charAt(0))
                        return new n(v.slice(1));
                    "" === t && (v = c(v, v, {}));
                    z && (v = v.replace(l, "$1~").replace(g, f));
                    return q ? q.call(this, t, v) : v
                }
            }
            function c(q, t, v) {
                if (t instanceof Array)
                    for (var z = 0, E = t.length; z < E; z++)
                        t[z] = c(q, t[z], v);
                else if (t instanceof n)
                    if (t.length)
                        if (v.hasOwnProperty(t))
                            t = v[t];
                        else {
                            z = t.split("~");
                            E = 0;
                            for (var C = z.length; E < C; q = q[z[E++].replace(k, "~")])
                                ;
                            t = v[t] = q
                        }
                    else
                        t = q;
                else if (t instanceof Object)
                    for (z in t)
                        t.hasOwnProperty(z) && (t[z] = c(q, t[z], v));
                return t
            }
            var f = "\\x" + ("0" + (126).toString(16)).slice(-2)
              , g = "\\" + f
              , h = new RegExp(f,"g")
              , k = new RegExp(g,"g")
              , l = new RegExp("(?:^|([^\\\\]))" + g)
              , m = [].indexOf || function(q) {
                for (var t = this.length; t-- && this[t] !== q; )
                    ;
                return t
            }
              , n = String
              , p = {
                stringify: function(q, t, v, z) {
                    return p.parser.stringify(q, b(q, t, !z), v)
                },
                parse: function(q, t) {
                    return p.parser.parse(q, d(t))
                },
                parser: JSON
            };
            return p
        },
        getgroup: function(b) {
            b = this.dataview.loadedrootgroups[b];
            if (null == b)
                return null;
            var d = this.expandedgroups[b.uniqueid].expanded
              , c = b.group
              , f = b.level
              , g = [];
            this._getsubgroups(g, b);
            var h = this;
            d = {
                group: c,
                level: f,
                expanded: d,
                subgroups: g
            };
            if (b.subItems) {
                var k = [];
                e.each(b.subItems, function() {
                    k[k.length] = h.getrowdata(this.boundindex)
                });
                0 < k.length && (d.subrows = k)
            }
            b = this.jsonParser().stringify(b);
            b = b.replace(/subItems/ig, "subrows");
            b = b.replace(/subGroups/ig, "subgroups");
            return d = this.jsonParser().parse(b)
        },
        getrootgroups: function() {
            for (var b = this.dataview.loadedrootgroups.length, d = [], c = 0; c < b; c++)
                d[c] = this.getgroup(c);
            return d
        },
        _getsubgroups: function(b, d) {
            var c = this, f;
            for (f in d.subGroups) {
                var g = d.subGroups[f];
                b[b.length] = {
                    group: g.group,
                    level: g.level,
                    expanded: c.expandedgroups[g.uniqueid].expanded
                };
                if (g.subItems) {
                    var h = [];
                    e.each(g.subItems, function() {
                        h[h.length] = c.getrowdata(this.boundindex)
                    });
                    b[b.length - 1].subrows = h
                }
                g.subGroups && c._getsubgroups([], g)
            }
            return b
        },
        _setbatchgroupstate: function(b, d) {
            for (var c in this.dataview.loadedrootgroups)
                this._setrootgroupstate(c, b, !1, !0);
            if (0 == d)
                return this._requiresupdate = !0,
                this._renderrows(this.virtualsizeinfo),
                !0;
            b = this.vScrollBar[0].style.visibility;
            this.rendergridcontent(!0, !1);
            if (b != this.vScrollBar[0].style.visibility || this._hiddencolumns)
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo);
            return !0
        },
        _setrootgroupstate: function(b, d, c, f) {
            if (void 0 == b || null == b || 0 > b || !this.groupable || 0 == this.groups.length)
                return !1;
            c = void 0 != c ? c : !0;
            if (0 <= b && b < this.dataview.loadedrootgroups.length) {
                var g = this.dataview.loadedrootgroups[b];
                if (this.pageable) {
                    g = [];
                    for (var h = 0; h < this.dataview.rows.length; h++)
                        null != this.dataview.rows[h].group && 0 === this.dataview.rows[h].level && g.push(this.dataview.rows[h]);
                    g = g[b];
                    if (!g)
                        return
                }
                return this._setgroupstate(g, d, c, f)
            }
            return !1
        },
        _togglegroupstate: function(b, d) {
            if (null == b || void 0 == b)
                return !1;
            var c = this.vScrollInstance.value
              , f = this.expandedgroups[b.uniqueid];
            f = void 0 == f ? !1 : f.expanded;
            f = !f;
            this.groupsVisibility || (this.groupsVisibility = []);
            this.groupsVisibility[b.group] = f ? b : null;
            b = this._setgroupstate(b, f, d);
            this._newmax = null;
            0 !== c && "hidden" !== this.vScrollBar.css("visibility") && (c <= this.vScrollInstance.max ? this.vScrollInstance.setPosition(c) : this.vScrollInstance.setPosition(this.vScrollInstance.max));
            return b
        },
        _setgroupstate: function(b, d, c, f) {
            if (null == b || void 0 == b)
                return !1;
            var g = !1;
            this.editable && this.editcell && this.endcelledit(this.editcell.row, this.editcell.column, !1, !1);
            var h = this.expandedgroups[b.uniqueid];
            void 0 == h && (h = {
                expanded: !1
            },
            g = !0);
            h.expanded != d && (g = !0);
            if (g) {
                this.expandedgroups[b.uniqueid] = {
                    expanded: d,
                    group: b
                };
                this._setsubgroupsvisibility(this, b, !d, f);
                c && (c = this.vScrollBar[0].style.visibility,
                this.rendergridcontent(!0, !1),
                c != this.vScrollBar[0].style.visibility || this._hiddencolumns) && (this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo));
                if (void 0 == this.suspendgroupevents || 0 == this.suspendgroupevents)
                    d ? this._raiseEvent(4, {
                        group: b.group,
                        parentgroup: b.parentItem ? b.parentItem.group : null,
                        level: b.level,
                        visibleindex: b.visibleindex
                    }) : this._raiseEvent(5, {
                        group: b.group,
                        parentgroup: b.parentItem ? b.parentItem.group : null,
                        level: b.level,
                        visibleindex: b.visibleindex
                    });
                return !0
            }
            return !1
        },
        _setgroupitemsvisibility: function(b, d, c) {
            for (var f = 0; f < d.subItems.length; f++)
                b._setrowvisibility(d.subItems[f].visibleindex, c, !1)
        },
        _setsubgroupsvisibility: function(b, d, c, f) {
            if (null != d.parentItem) {
                if (this.hiddens[d.parentItem.visibleindex])
                    return
            } else if (null == d.parentItem && this.hiddens[d.visibleindex])
                return;
            for (var g in d.subGroups) {
                var h = d.subGroups[g];
                c || b._setrowvisibility(h.visibleindex, c, !1);
                var k = !c;
                f ? this.expandedgroups[h.uniqueid] = {
                    expanded: k,
                    group: h
                } : k = void 0 == b.expandedgroups[h.uniqueid] ? !1 : b.expandedgroups[h.uniqueid].expanded;
                h.subGroups && (0 < h.subGroups.length ? b._setsubgroupsvisibility(b, h, !k || c, f) : 0 < h.subItems.length && b._setgroupitemsvisibility(b, h, !k || c));
                c && b._setrowvisibility(h.visibleindex, c, !1)
            }
            d.subItems && 0 < d.subItems.length && b._setgroupitemsvisibility(b, d, c)
        },
        _handlecolumnsdragdrop: function() {
            var b = this
              , d = -1
              , c = !1;
            if (b.groupable) {
                var f = "mousemove.grouping" + this.element.id
                  , g = "mouseup.grouping" + this.element.id
                  , h = !1;
                this.isTouchDevice() && !0 !== this.touchmode && (h = !0,
                f = e.jqx.mobile.getTouchEventName("touchmove") + ".grouping" + this.element.id,
                e.jqx.mobile.getTouchEventName("touchstart"),
                g = e.jqx.mobile.getTouchEventName("touchend") + ".grouping" + this.element.id);
                this.removeHandler(e(document), f);
                this.addHandler(e(document), f, function(k) {
                    if (!b.showgroupsheader)
                        return !0;
                    if (null != b.dragcolumn) {
                        var l = parseInt(k.pageX)
                          , m = parseInt(k.pageY);
                        h && (m = b.getTouches(k)[0],
                        l = parseInt(m.pageX),
                        m = parseInt(m.pageY));
                        var n = b.host.coord()
                          , p = parseInt(n.left);
                        n = parseInt(n.top);
                        if (void 0 == b.dragmousedownoffset || null == b.dragmousedownoffset)
                            b.dragmousedownoffset = {
                                left: 0,
                                top: 0
                            };
                        var q = parseInt(l) - parseInt(b.dragmousedownoffset.left)
                          , t = parseInt(m) - parseInt(b.dragmousedownoffset.top);
                        b.dragcolumn.css({
                            left: q + "px",
                            top: t + "px"
                        });
                        c = !1;
                        l >= p && l <= p + b.host.width() && m >= n && m <= n + b.host.height() && (c = !0);
                        d = -1;
                        c ? (b.dragcolumnicon.removeClass(b.toThemeProperty("jqx-grid-dragcancel-icon")),
                        b.dragcolumnicon.addClass(b.toThemeProperty("jqx-grid-drag-icon")),
                        p = b.groupsheader.coord(),
                        n = p.top + b.groupsheader.height(),
                        q = (q = e.data(b.dragcolumn[0], "datarecord")) ? b.groups.indexOf(q.toString()) : -1,
                        q = -1 == q || 1 < b.groups.length && -1 < q,
                        null != b.dropline && (m >= p.top && m <= n ? q && (d = b._handlegroupdroplines(l)) : b.dropline.fadeOut("slow"))) : (null != b.dropline && b.dropline.fadeOut("slow"),
                        b.dragcolumnicon.removeClass(b.toThemeProperty("jqx-grid-drag-icon")),
                        b.dragcolumnicon.addClass(b.toThemeProperty("jqx-grid-dragcancel-icon")));
                        if (h)
                            return k.preventDefault(),
                            k.stopPropagation(),
                            !1
                    }
                }, {
                    passive: !1
                });
                this.removeHandler(e(document), g);
                this.addHandler(e(document), g, function(k) {
                    if (!b.showgroupsheader)
                        return !0;
                    b.__drag = !1;
                    e(document.body).removeClass("jqx-disableselect");
                    parseInt(k.pageX);
                    var l = parseInt(k.pageY);
                    h && (k = b.getTouches(k)[0],
                    parseInt(k.pageX),
                    l = parseInt(k.pageY));
                    k = b.host.coord();
                    parseInt(k.left);
                    var m = parseInt(k.top)
                      , n = b.groupsheader.height();
                    b.showtoolbar && (m += b.toolbarheight);
                    b.dragstarted = !1;
                    b.dragmousedown = null;
                    null != b.dragcolumn && (k = e.data(b.dragcolumn[0], "datarecord"),
                    b.dragcolumn.remove(),
                    b.dragcolumn = null,
                    null != k && (b.getcolumn(k).groupable && c && (-1 != d ? (l = d.index,
                    m = b.groups[l],
                    n = b._getGroupIndexByDataField(k),
                    n != l && (void 0 != n && 0 <= n && b.groups.splice(n, 1),
                    "before" == d.position ? b.rtl ? b._insertaftergroup(m, k) : b._insertbeforegroup(m, k) : b.rtl ? b._insertbeforegroup(m, k) : b._insertaftergroup(m, k))) : 0 == b.groups.length ? l > m && l <= m + n && b.addgroup(k) : l > m + n && (n = b._getGroupIndexByDataField(k),
                    b.removegroupat(n))),
                    null != b.dropline && (b.dropline.remove(),
                    b.dropline = null)))
                })
            }
        },
        _getGroupIndexByDataField: function(b) {
            for (var d = 0; d < this.groups.length; d++)
                if (this.groups[d] == b)
                    return d;
            return -1
        },
        _isColumnInGroups: function(b) {
            for (var d = 0; d < this.groups.length; d++)
                if (this.groups[d] == b)
                    return !0;
            return !1
        },
        _handlegroupdroplines: function(b) {
            var d = this
              , c = -1;
            e.each(d.groupheadersbounds, function(f) {
                if (b <= this.left + this.width / 2) {
                    var g = this.left - 3;
                    0 < f && (g = this.left - 1 - d.groupindentwidth / 6);
                    d.dropline.css("left", g);
                    d.dropline.css("top", this.top);
                    d.dropline.height(this.height);
                    d.dropline.fadeIn("slow");
                    c = {
                        index: f,
                        position: "before"
                    };
                    d.rtl && (c = {
                        index: d.groupheadersbounds.length - 1 - f,
                        position: "before"
                    });
                    return !1
                }
                b >= this.left + this.width / 2 && (d.dropline.css("left", 1 + this.left + this.width),
                d.dropline.css("top", this.top),
                d.dropline.height(this.height),
                d.dropline.fadeIn("slow"),
                c = {
                    index: f,
                    position: "after"
                },
                d.rtl && (c = {
                    index: d.groupheadersbounds.length - 1 - f,
                    position: "after"
                }))
            });
            return c
        },
        _handlegroupstocolumnsdragdrop: function(b, d) {
            this.dragmousedownoffset = this.dragmousedown = null;
            this.dragstarted = !1;
            this.dragcolumn = null;
            var c = this, f, g = "mousedown", h = "mousemove", k = !1;
            this.isTouchDevice() && !0 !== this.touchmode && (k = !0,
            g = e.jqx.mobile.getTouchEventName("touchstart"),
            h = e.jqx.mobile.getTouchEventName("touchmove"));
            this.addHandler(d, "dragstart", function(l) {
                return !1
            });
            this.addHandler(d, g, function(l) {
                if (!c.showgroupsheader)
                    return !0;
                var m = l.pageX
                  , n = l.pageY;
                c.__drag = !0;
                c.dragmousedown = {
                    left: m,
                    top: n
                };
                k && (n = c.getTouches(l)[0],
                m = n.pageX,
                n = n.pageY,
                c.dragmousedown = {
                    left: m,
                    top: n
                },
                l.preventDefault && l.preventDefault());
                l = e(l.target).coord();
                c.dragmousedownoffset = {
                    left: parseInt(m) - parseInt(l.left),
                    top: parseInt(n - l.top)
                }
            });
            this.addHandler(d, h, function(l) {
                if (!c.showgroupsheader)
                    return !0;
                if (c.dragmousedown) {
                    f = {
                        left: l.pageX,
                        top: l.pageY
                    };
                    if (k) {
                        var m = c.getTouches(l)[0];
                        f = {
                            left: m.pageX,
                            top: m.pageY
                        }
                    }
                    !c.dragstarted && null == c.dragcolumn && (m = Math.abs(f.top - c.dragmousedown.top),
                    3 < Math.abs(f.left - c.dragmousedown.left) || 3 < m) && (c._createdragcolumn(d, f, !0),
                    e(document.body).addClass("jqx-disableselect"),
                    e.data(c.dragcolumn[0], "datarecord", b),
                    l.preventDefault && l.preventDefault())
                }
            }, {
                passive: !1
            })
        },
        _createdragcolumn: function(b, d, c) {
            this.dragcolumn = e("<div></div>");
            var f = b.clone();
            this.dragcolumn.css("z-index", 999999);
            f.css("border-width", "1px");
            f.css("opacity", "0.4");
            var g = e(f.find("." + this.toThemeProperty("jqx-grid-column-menubutton")));
            0 < g.length && g.css("display", "none");
            g = e(f.find(".jqx-icon-close"));
            0 < g.length && g.css("display", "none");
            this.dragcolumnicon = e('<div style="z-index: 9999; position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px;"></div>');
            this.dragcolumnicon.addClass(this.toThemeProperty("jqx-grid-drag-icon"));
            this.dragcolumn.css("float", "left");
            this.dragcolumn.css("position", "absolute");
            this.host.coord();
            f.width(b.width() + 16);
            this.dragcolumn.append(f);
            this.dragcolumn.height(b.height());
            this.dragcolumn.width(f.width());
            this.dragcolumn.append(this.dragcolumnicon);
            e(document.body).append(this.dragcolumn);
            f.css("margin-left", 0);
            f.css("left", 0);
            f.css("top", 0);
            this.dragcolumn.css("left", d.left + this.dragmousedown.left);
            this.dragcolumn.css("top", d.top + this.dragmousedown.top);
            void 0 != c && c && (this.dropline = e('<div style="display: none; position: absolute;"></div>'),
            this.dropline.width(2),
            this.dropline.addClass(this.toThemeProperty("jqx-grid-group-drag-line")),
            e(document.body).append(this.dropline))
        },
        iscolumngroupable: function(b) {
            return this._getcolumnproperty(b, "groupable")
        },
        _handlecolumnstogroupsdragdrop: function(b, d) {
            this.dragmousedownoffset = this.dragmousedown = null;
            this.dragstarted = !1;
            this.dragcolumn = null;
            var c = this
              , f = !1;
            this.isTouchDevice() && !0 !== this.touchmode && (f = !0);
            var g = "mousedown.drag";
            var h = "mousemove.drag";
            f ? (g = e.jqx.mobile.getTouchEventName("touchstart") + ".drag",
            h = e.jqx.mobile.getTouchEventName("touchmove") + ".drag") : this.addHandler(d, "dragstart", function(k) {
                return !1
            });
            this.addHandler(d, g, function(k) {
                if (!c.showgroupsheader)
                    return !0;
                c.__drag = !0;
                if (c._isColumnInGroups(b.displayfield))
                    return d.css("cursor"),
                    !0;
                if (0 == b.groupable)
                    return !0;
                var l = k.pageX
                  , m = k.pageY;
                f && (m = c.getTouches(k)[0],
                l = m.pageX,
                m = m.pageY);
                c.dragmousedown = {
                    left: l,
                    top: m
                };
                f && k.preventDefault && k.preventDefault();
                k = e(k.target).coord();
                c.dragmousedownoffset = {
                    left: parseInt(l) - parseInt(k.left),
                    top: parseInt(m - k.top)
                }
            });
            this.addHandler(d, h, function(k) {
                if (!c.showgroupsheader)
                    return !0;
                if (c._isColumnInGroups(b.displayfield))
                    return d.css("cursor"),
                    !0;
                if (c.dragmousedown) {
                    var l = k.pageX
                      , m = k.pageY;
                    f && (m = c.getTouches(k)[0],
                    l = m.pageX,
                    m = m.pageY);
                    h = {
                        left: l,
                        top: m
                    };
                    !c.dragstarted && null == c.dragcolumn && (l = Math.abs(h.top - c.dragmousedown.top),
                    3 < Math.abs(h.left - c.dragmousedown.left) || 3 < l) && (c._createdragcolumn(d, h, !0),
                    e.data(c.dragcolumn[0], "datarecord", b.displayfield),
                    k.preventDefault && k.preventDefault())
                }
            })
        },
        _rendergroupcolumn: function(b, d) {
            var c = e('<div style="float: left; position: relative;"></div>');
            this.rtl && c.css("float", "right");
            null != this.groupcolumnrenderer && (c[0].innerHTML = this.groupcolumnrenderer(b),
            c.addClass(this.toThemeProperty("jqx-grid-group-column")),
            c.addClass(this.toThemeProperty("jqx-fill-state-normal")));
            if (this.closeablegroups) {
                "" == c[0].innerHTML && (c[0].innerHTML = '<a style="float: left;" href="#">' + b + "</a>");
                this.rtl && (c[0].innerHTML = '<a style="float: right;" href="#">' + b + "</a>");
                b = this.rtl ? "left" : "right";
                var f = '<div style="float: ' + b + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>';
                e.jqx.browser.msie && 8 > e.jqx.browser.version && (f = '<div style="float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>');
                this.rtl && (f = '<div style="float: ' + b + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>',
                e.jqx.browser.msie && 8 > e.jqx.browser.version && (f = '<div style="float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>'));
                c[0].innerHTML += f
            } else
                "" == c[0].innerHTML && (c[0].innerHTML = '<a href="#">' + b + "</a>");
            this.sortable && (b = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
            f = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>'),
            this.closeablegroups && (b = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -32px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
            f = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -32px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>')),
            this.rtl && (b = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 0px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
            f = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 0px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>'),
            this.closeablegroups && (b = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
            f = e('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>'))),
            b.css("display", "none"),
            f.css("display", "none"),
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (b.css("float", "left"),
            f.css("float", "left")),
            c.append(b),
            c.append(f),
            e.data(document.body, "groupsortelements" + d, {
                sortasc: b,
                sortdesc: f
            }));
            c.addClass(this.toThemeProperty("jqx-fill-state-normal"));
            c.addClass(this.toThemeProperty("jqx-grid-group-column"));
            return c
        },
        _rendergroup: function(b, d, c, f, g, h, k) {
            f = d.cells[c.level];
            this.rtl && (f = d.cells[d.cells.length - 1 - c.level]);
            var l = this._findgroupstate(c.uniqueid);
            if (0 < c.bounddata.subGroups.length || 0 < c.bounddata.subItems.length)
                g = this.rtl ? "-rtl" : "",
                h = this.toThemeProperty("jqx-icon-arrow-right"),
                g && (h = this.toThemeProperty("jqx-icon-arrow-left")),
                f.className = l ? f.className + (" " + this.toThemeProperty("jqx-grid-group-expand" + g) + " " + this.toThemeProperty("jqx-icon-arrow-down")) : f.className + (" " + this.toThemeProperty("jqx-grid-group-collapse" + g) + " " + h);
            g = this._getColumnText(this.groups[c.level]).label;
            f = this.groupindentwidth;
            var m = this.rowdetails && this.showrowdetailscolumn ? (1 + b) * f : b * f
              , n = k - m;
            h = c.level + 1;
            this.rtl && (h = 0);
            b = d.cells[h];
            for (m = 2; void 0 != b && "none" == b.style.display && m < d.cells.length - 1; )
                b = d.cells[h + m - 1],
                m++;
            h = e(b);
            if (b) {
                b.style.width = parseInt(n) + "px";
                -1 != b.className.indexOf("jqx-grid-cell-filter") && h.removeClass(this.toThemeProperty("jqx-grid-cell-filter"));
                -1 != b.className.indexOf("jqx-grid-cell-sort") && h.removeClass(this.toThemeProperty("jqx-grid-cell-sort"));
                -1 != b.className.indexOf("jqx-grid-cell-pinned") && h.removeClass(this.toThemeProperty("jqx-grid-cell-pinned"));
                if (null != this.groupsrenderer)
                    if (n = {
                        group: c.group,
                        level: c.level,
                        parent: c.bounddata.parentItem,
                        subGroups: c.bounddata.subGroups,
                        subItems: c.bounddata.subItems,
                        groupcolumn: this._getColumnText(this.groups[c.level]).column
                    },
                    l = this.groupsrenderer(g + ": " + c.group, c.group, l, n))
                        b.innerHTML = l,
                        d.classList.add("jqx-grid-groups-custom-row"),
                        this.theme && d.classList.add("jqx-grid-groups-custom-row-" + this.theme);
                    else {
                        l = 0 < c.bounddata.subItems.length ? c.bounddata.subItems.length : c.bounddata.subGroups.length;
                        if (this.showgroupaggregates)
                            for (n = 0 < c.bounddata.subItems.length ? c.bounddata.subItems : c.bounddata.subGroups,
                            m = l = 0; m < n.length; m++)
                                n[m].totalsrow || l++;
                        b.innerHTML = '<div class="' + this.toThemeProperty("jqx-grid-groups-row") + '" style="position: absolute;"><span>' + g + ': </span><span class="' + this.toThemeProperty("jqx-grid-groups-row-details") + '">' + c.group + " (" + l + ")</span></div>"
                    }
                else {
                    var p = this._getcolumnbydatafield(this.groups[c.level])
                      , q = c.group;
                    if (null != p) {
                        p.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(q) ? q = e.jqx.dataFormat.formatdate(q, p.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(q) && (q = e.jqx.dataFormat.formatnumber(q, p.cellsformat, this.gridlocalization)));
                        l = 0 < c.bounddata.subItems.length ? c.bounddata.subItems.length : c.bounddata.subGroups.length;
                        if (this.showgroupaggregates)
                            for (n = 0 < c.bounddata.subItems.length ? c.bounddata.subItems : c.bounddata.subGroups,
                            m = l = 0; m < n.length; m++)
                                n[m].totalsrow || l++;
                        b.innerHTML = '<div class="' + this.toThemeProperty("jqx-grid-groups-row") + '" style="position: absolute;"><span>' + g + ': </span><span class="' + this.toThemeProperty("jqx-grid-groups-row-details") + '">' + q + " (" + l + ")</span></div>"
                    } else
                        throw Error("jqxGrid: Unable to find '" + this.groups[c.level] + "' group in the Grid's columns collection.");
                }
                this.rtl && (p || (p = this._getcolumnbydatafield(this.groups[c.level])),
                g = "hidden" == this.hScrollBar.css("visibility") ? 0 : this.hScrollInstance.max - this.hScrollInstance.value,
                l = "hidden" == this.vScrollBar.css("visibility") ? 0 : this.scrollbarsize + 6,
                m = this.rowdetails && this.showrowdetailscolumn ? (2 + c.level) * f : (1 + c.level) * f,
                b.style.width = k + parseInt(g) - m - l + "px",
                h.addClass(this.toThemeProperty("jqx-rtl")),
                f = e(d.cells[d.cells.length - 1]).css("z-index"),
                h.css("z-index", f),
                f = h.find("div"),
                n = f.width(),
                f.css("left", "100%"),
                d = null != this.columns.records[d.cells.length - 2 - c.level] ? this.columns.records[d.cells.length - 2 - c.level].pinned : !1,
                this.table.width() < k && (k = this.table.width(),
                "hidden" != this.vScrollBar.css("visibility") && (k += this.vScrollBar.outerWidth())),
                p.pinned || d ? (this.rowdetails && this.showrowdetailscolumn && (k += 30),
                f.css("margin-left", -n),
                b.style.width = k + g - m - l + "px") : (g = "hidden" == this.hScrollBar.css("visibility") ? 0 : this.hScrollInstance.max,
                b.style.width = k + g - m - l + "px",
                n = f.width(),
                f.css("margin-left", -n)))
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.extend(e.jqx._jqxGrid.prototype, {
        autoresizecolumns: function(b, d) {
            "cells" != b && "all" != b && "column" != b && (b = "all");
            var c = this.that
              , f = this.getrows();
            this.pageable && (f = this.dataview.rows,
            this.groupable && (f = this.dataview.records));
            d = void 0 == d ? 0 : parseInt(d);
            var g = f.length;
            if (void 0 == g && void 0 != f) {
                var h = [];
                e.each(f, function(X) {
                    h.push(this)
                });
                f = h;
                g = f.length
            }
            var k = e("<span></span>");
            k.addClass(this.toThemeProperty("jqx-widget"));
            k.addClass(this.toThemeProperty("jqx-grid-cell"));
            e(document.body).append(k);
            var l = []
              , m = []
              , n = []
              , p = []
              , q = c.host.width();
            "hidden" != c.vScrollBar[0].style.visibility && (q -= this.scrollbarsize + 5);
            0 > q && (q = 0);
            for (var t = 0; t < g; t++) {
                var v = f[t];
                for (q = 0; q < this.columns.records.length; q++) {
                    var z = this.columns.records[q];
                    if (!(z.hidden || 0 < this.groups.length && q <= this.groups.length - 1)) {
                        void 0 == m[z.displayfield] && (m[z.displayfield] = 0);
                        void 0 == n[z.displayfield] && (n[z.displayfield] = "");
                        var E = v[z.displayfield];
                        "" != z.cellsformat ? e.jqx.dataFormat && (e.jqx.dataFormat.isDate(E) ? E = e.jqx.dataFormat.formatdate(E, z.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(E) && (E = e.jqx.dataFormat.formatnumber(E, z.cellsformat, this.gridlocalization))) : z.cellsrenderer && (l = c._defaultcellsrenderer(E, z),
                        l = z.cellsrenderer(t, z.datafield, E, l, z.getcolumnproperties(), v),
                        void 0 != l && (E = e(l).text()));
                        if ((void 0 == b || "cells" == b || "all" == b) && null != E) {
                            l = E.toString().length;
                            var C = E.toString();
                            C = C.replace(/[^A-Z]/g, "").length;
                            l > m[z.displayfield] && (m[z.displayfield] = l,
                            n[z.displayfield] = E,
                            p[z.displayfield] = C);
                            if (0 < l && l >= C) {
                                var F = 20 * C + 15 * (l - C)
                                  , P = 20 * p[z.displayfield] + 15 * (m[z.displayfield] - p[z.displayfield]);
                                F > P && 0 < F && 0 < P && (m[z.displayfield] = l,
                                n[z.displayfield] = E,
                                p[z.displayfield] = C)
                            }
                        }
                        if ("column" == b || "all" == b)
                            z.text.toString().length > m[z.displayfield] && (n[z.displayfield] = z.text,
                            m[z.displayfield] = z.text.length,
                            C = z.text.toString(),
                            C = C.replace(/[^A-Z]/g, "").length,
                            p[z.displayfield] = C),
                            E = z.text,
                            l = E.toString().length,
                            C = E.toString(),
                            C = C.replace(/[^A-Z]/g, "").length,
                            0 < l && l >= C && (F = 20 * C + 15 * (l - C),
                            P = 20 * p[z.displayfield] + 15 * (m[z.displayfield] - p[z.displayfield]),
                            F > P && 0 < F && 0 < P && (m[z.displayfield] = l,
                            n[z.displayfield] = E,
                            p[z.displayfield] = C))
                    }
                }
            }
            if (this.columns.records) {
                for (q = 0; q < this.columns.records.length; q++)
                    if (z = this.columns.records[q],
                    z.displayfield && (void 0 == n[z.displayfield] && (n[z.displayfield] = z.text),
                    0 <= k[0].className.indexOf("jqx-grid-column-header") && k.removeClass(this.toThemeProperty("jqx-grid-column-header")),
                    n[z.displayfield] == z.text && k.addClass(this.toThemeProperty("jqx-grid-column-header")),
                    k[0].innerHTML = this.escape_HTML(n[z.displayfield].toString()),
                    b = k.outerWidth() + 10,
                    0 < k.children().length && (b = k.children().outerWidth() + 10),
                    e.jqx.browser.msie && 8 > e.jqx.browser.version && (b += 10),
                    this.filterable && this.showfilterrow && (b += 5),
                    b += d,
                    b += 20,
                    b > z.maxwidth && (b = z.maxwidth),
                    void 0 != z._width && (z.__width = z._width),
                    z._width = null,
                    "auto" == z.maxwidth || b <= z.maxwidth))
                        c = z.width,
                        b < z.minwidth && (b = z.minwidth),
                        z.width = b,
                        void 0 != z._percentagewidth && (z._percentagewidth = null),
                        this._raiseEvent(14, {
                            columntext: z.text,
                            column: z.getcolumnproperties(),
                            datafield: z.datafield,
                            displayfield: z.displayfield,
                            oldwidth: c,
                            newwidth: b
                        });
                k.remove();
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo);
                for (q = 0; q < this.columns.records.length; q++)
                    z = this.columns.records[q],
                    void 0 != z.__width && (z._width = z.__width)
            }
        },
        autoresizecolumn: function(b, d, c) {
            "cells" != d && "all" != d && "column" != d && (d = "all");
            if (void 0 == b)
                return !1;
            var f = this.getrows();
            this.pageable && (f = this.dataview.rows,
            this.groupable && (f = this.dataview.records));
            var g = this.getcolumn(b);
            if (void 0 == g)
                return !1;
            c = void 0 == c ? 0 : parseInt(c);
            var h = f.length
              , k = e("<span></span>");
            k.addClass(this.toThemeProperty("jqx-widget"));
            k.addClass(this.toThemeProperty("jqx-grid-cell"));
            e(document.body).append(k);
            var l = 0
              , m = ""
              , n = 0;
            this.that.host.width();
            if (void 0 == d || "cells" == d || "all" == d)
                for (var p = 0; p < h; p++) {
                    var q = f[p][g.displayfield];
                    if ("" != g.cellsformat)
                        e.jqx.dataFormat && (e.jqx.dataFormat.isDate(q) ? q = e.jqx.dataFormat.formatdate(q, g.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(q) && (q = e.jqx.dataFormat.formatnumber(q, g.cellsformat, this.gridlocalization)));
                    else if (g.cellsrenderer) {
                        var t = g.cellsrenderer(p, g, q);
                        void 0 != t && (q = e(t).text())
                    }
                    if (null != q) {
                        t = q.toString().length;
                        var v = q.toString();
                        v = v.replace(/[^A-Z]/g, "").length;
                        t > l && (l = t,
                        m = q,
                        n = v);
                        if (0 < t && t >= v) {
                            var z = 20 * v + 15 * (t - v)
                              , E = 20 * n + 15 * (l - n);
                            z > E && 0 < z && 0 < E && (l = t,
                            m = q,
                            n = v)
                        }
                    }
                }
            if ("column" == d || "all" == d)
                g.text.toString().length > l && (m = g.text),
                q = g.text.toString(),
                t = q.toString().length,
                v = q.toString(),
                v = v.replace(/[^A-Z]/g, "").length,
                0 < t && t >= v && (z = 20 * v + 15 * (t - v),
                E = 20 * n + 15 * (l - n),
                z > E && 0 < z && 0 < E && (m = q));
            void 0 == m && (m = g.text);
            k[0].innerHTML = this.escape_HTML(m);
            m == g.text && k.addClass(this.toThemeProperty("jqx-grid-column-header"));
            d = k.outerWidth() + 10;
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (d += 5);
            this.filterable && this.showfilterrow && (d += 5);
            d += c;
            k.remove();
            d > g.maxwidth && (d = g.maxwidth);
            if ("auto" == g.maxwidth || d <= g.maxwidth)
                c = g.width,
                d < g.minwidth && (d = g.minwidth),
                g.width = d,
                void 0 != g._width && (g.__width = g._width),
                g._width = null,
                void 0 != g._percentagewidth && (g._percentagewidth = null),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._raiseEvent(14, {
                    columntext: g.text,
                    column: g.getcolumnproperties(),
                    datafield: b,
                    displayfield: g.displayfield,
                    oldwidth: c,
                    newwidth: d
                }),
                this._renderrows(this.virtualsizeinfo),
                void 0 != g._width && (g._width = g.__width)
        },
        _handlecolumnsresize: function() {
            var b = this.that;
            if (this.columnsresize) {
                var d = !1;
                b.isTouchDevice() && !0 !== b.touchmode && (d = !0);
                var c = "mousemove.resize" + this.element.id
                  , f = "mousedown.resize" + this.element.id
                  , g = "mouseup.resize" + this.element.id;
                d && (c = e.jqx.mobile.getTouchEventName("touchmove") + ".resize" + this.element.id,
                f = e.jqx.mobile.getTouchEventName("touchstart") + ".resize" + this.element.id,
                g = e.jqx.mobile.getTouchEventName("touchend") + ".resize" + this.element.id);
                this.removeHandler(e(document), c);
                this.addHandler(e(document), c, function(k) {
                    if (null != e.data(document.body, "contextmenu" + b.element.id) && b.autoshowcolumnsmenubutton)
                        return !0;
                    if (null != b.resizablecolumn && !b.disabled && b.resizing && null != b.resizeline) {
                        var l = b.host.coord()
                          , m = parseInt(b.resizestartline.coord().left)
                          , n = m - b._startcolumnwidth
                          , p = b.resizablecolumn.column.minwidth;
                        p = "auto" == p ? 0 : parseInt(p);
                        var q = b.resizablecolumn.column.maxwidth;
                        q = "auto" == q ? 0 : parseInt(q);
                        var t = k.pageX;
                        d && (t = b.getTouches(k)[0].pageX);
                        n += p;
                        p = 0 < q ? m + q : 0;
                        m = 0 == q ? !0 : b._startcolumnwidth + t - m < q ? !0 : !1;
                        b.rtl && (m = !0);
                        if (m)
                            if (!b.rtl) {
                                if (t >= l.left && t >= n && (0 != p && k.pageX < p ? b.resizeline.css("left", t) : 0 == p && b.resizeline.css("left", t),
                                d))
                                    return !1
                            } else if (t >= l.left && t <= l.left + b.host.width() && (b.resizeline.css("left", t),
                            d))
                                return !1
                    }
                    if (!d && null != b.resizablecolumn)
                        return !1
                });
                this.removeHandler(e(document), f);
                this.addHandler(e(document), f, function(k) {
                    if (null != e.data(document.body, "contextmenu" + b.element.id) && b.autoshowcolumnsmenubutton)
                        return !0;
                    if (null != b.resizablecolumn && !b.disabled) {
                        var l = b.resizablecolumn.columnelement;
                        if (l.coord().top + l.height() + 5 < k.pageY)
                            b.resizablecolumn = null;
                        else if (l.coord().top - 5 > k.pageY)
                            b.resizablecolumn = null;
                        else {
                            b._startcolumnwidth = b.resizablecolumn.column.width;
                            b.resizablecolumn.column._width = null;
                            e(document.body).addClass("jqx-disableselect");
                            e(document.body).addClass("jqx-position-reset");
                            b.host.addClass("jqx-disableselect");
                            b.content.addClass("jqx-disableselect");
                            b._mouseDownResize = new Date;
                            b.resizing = !0;
                            if (b._lastmouseDownResize && b.columnsautoresize && 300 > b._lastmouseDownResize - b._mouseDownResize && -500 < b._lastmouseDownResize - b._mouseDownResize && (l = b.resizablecolumn.column,
                            l.resizable)) {
                                var m = b.hScrollBar[0].style.visibility;
                                b._resizecolumn = null;
                                b.resizeline.hide();
                                b.resizestartline.hide();
                                b.resizebackground.remove();
                                b.resizablecolumn = null;
                                b.columndragstarted = !1;
                                b.dragmousedown = null;
                                b.__drag = !1;
                                b.autoresizecolumn(l.displayfield, "all");
                                m != b.hScrollBar[0].style.visibility && b.hScrollInstance.setPosition(0);
                                b.rtl && b._arrange();
                                b.autosavestate && b.savestate && b.savestate();
                                k.stopPropagation();
                                b.suspendClick = !0;
                                setTimeout(function() {
                                    b.suspendClick = !1
                                }, 100);
                                return !1
                            }
                            b._lastmouseDownResize = new Date;
                            b._resizecolumn = b.resizablecolumn.column;
                            b.resizeline = b.resizeline || e('<div style="position: absolute;"></div>');
                            b.resizestartline = b.resizestartline || e('<div style="position: absolute;"></div>');
                            b.resizebackground = b.resizebackground || e('<div style="position: absolute; left: 0; top: 0; background: #000;"></div>');
                            b.resizebackground.css("opacity", .01);
                            b.resizebackground.css("cursor", "col-resize");
                            b.resizeline.css("cursor", "col-resize");
                            b.resizestartline.css("cursor", "col-resize");
                            b.resizeline.addClass(b.toThemeProperty("jqx-grid-column-resizeline"));
                            b.resizestartline.addClass(b.toThemeProperty("jqx-grid-column-resizestartline"));
                            e(document.body).append(b.resizeline);
                            e(document.body).append(b.resizestartline);
                            e(document.body).append(b.resizebackground);
                            var n = b.resizablecolumn.columnelement.coord();
                            b.resizebackground.css("left", b.host.coord().left);
                            b.resizebackground.css("top", b.host.coord().top);
                            b.resizebackground.width(b.host.width());
                            b.resizebackground.height(b.host.height());
                            b.resizebackground.css("z-index", 9999);
                            k = function(p) {
                                b.rtl ? p.css("left", parseInt(n.left)) : p.css("left", parseInt(n.left) + b._startcolumnwidth);
                                var q = b._groupsheader() ? b.groupsheader.height() : 0;
                                q = q + (b.showtoolbar ? b.toolbarheight : 0) + (b.showstatusbar ? b.statusbarheight : 0);
                                var t = 0;
                                b.pageable && (t = b.pagerheight);
                                var v = "visible" == b.hScrollBar.css("visibility") ? 17 : 0;
                                p.css("top", parseInt(n.top));
                                p.css("z-index", 99999);
                                b.columngroups ? p.height(b.host.height() + b.resizablecolumn.columnelement.height() - t - q - v - b.columngroupslevel * b.columnsheight) : p.height(b.host.height() - t - q - v);
                                b.enableanimations ? p.show("fast") : p.show()
                            }
                            ;
                            k(b.resizeline);
                            k(b.resizestartline);
                            b.dragmousedown = null
                        }
                    }
                });
                var h = function() {
                    e(document.body).removeClass("jqx-disableselect");
                    e(document.body).removeClass("jqx-position-reset");
                    if (b.showfilterrow || b.showstatusbar || b.showtoolbar || b.enablebrowserselection)
                        b.host.removeClass("jqx-disableselect"),
                        b.content.removeClass("jqx-disableselect");
                    if (b.resizing)
                        if (b._mouseUpResize = new Date,
                        200 > b._mouseUpResize - b._mouseDownResize)
                            b.resizing = !1,
                            null != b._resizecolumn && null != b.resizeline && "block" == b.resizeline.css("display") && (b._resizecolumn = null,
                            b.resizeline.hide(),
                            b.resizestartline.hide(),
                            b.resizebackground.remove());
                        else if (b.resizing = !1,
                        !b.disabled) {
                            var k = b.host.width();
                            "hidden" != b.vScrollBar[0].style.visibility && (k -= 20);
                            0 > k && (k = 0);
                            if (null != b._resizecolumn && null != b.resizeline && "block" == b.resizeline.css("display")) {
                                var l = parseInt(b.resizeline.css("left"))
                                  , m = parseInt(b.resizestartline.css("left"))
                                  , n = b._startcolumnwidth + l - m;
                                b.rtl && (n = b._startcolumnwidth - l + m);
                                l = b._resizecolumn.width;
                                b._closemenu();
                                n < b._resizecolumn.minwidth && (n = b._resizecolumn.minwidth);
                                b._resizecolumn.width = n;
                                void 0 != b._resizecolumn._percentagewidth && (b._resizecolumn._percentagewidth = n / k * 100);
                                for (k = 0; k < b._columns.length; k++)
                                    if (b._columns[k].datafield === b._resizecolumn.datafield) {
                                        b._columns[k].width = b._resizecolumn.width;
                                        b._columns[k].width < b._resizecolumn.minwidth && (b._columns[k].width = b._resizecolumn.minwidth);
                                        break
                                    }
                                k = b.hScrollBar[0].style.visibility;
                                b._updatecolumnwidths();
                                b._updatecellwidths();
                                b._raiseEvent(14, {
                                    columntext: b._resizecolumn.text,
                                    column: b._resizecolumn.getcolumnproperties(),
                                    datafield: b._resizecolumn.datafield,
                                    oldwidth: l,
                                    newwidth: n
                                });
                                b._renderrows(b.virtualsizeinfo);
                                b.autosavestate && b.savestate && b.savestate();
                                k != b.hScrollBar[0].style.visibility && b.hScrollInstance.setPosition(0);
                                b.rtl && b._arrange();
                                b._resizecolumn = null;
                                b.resizeline.hide();
                                b.resizestartline.hide();
                                b.resizebackground.remove()
                            }
                            b.resizablecolumn = null
                        }
                };
                try {
                    if ("" != document.referrer || window.frameElement)
                        c = null,
                        null != window.top && window.top != window.self && window.parent && document.referrer && (c = document.referrer),
                        c && -1 != c.indexOf(document.location.host) && (c = function(k) {
                            h()
                        }
                        ,
                        window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", c, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", c))
                } catch (k) {}
                this.removeHandler(e(document), g);
                this.addHandler(e(document), g, function(k) {
                    if (null != e.data(document.body, "contextmenu" + b.element.id) && b.autoshowcolumnsmenubutton)
                        return !0;
                    h()
                })
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.dataview.sort = function() {
        this.sortby = function(b, d, c) {
            var f = Object.prototype.toString;
            if (null == d && (this.sortdata = null,
            "many" !== this.grid.sortmode ? this.sortcache = {} : this.sortcache[b] && delete this.sortcache[b],
            this.grid._pagescache = [],
            this.grid._cellscache = [],
            "many" !== this.grid.sortmode)) {
                this.refresh();
                return
            }
            "many" === this.grid.sortmode && (this.grid._pagescache = [],
            this.grid._cellscache = []);
            null != d && (d = "a" == d || "asc" == d || "ascending" == d || 1 == d ? !0 : !1);
            var g = b;
            this.sortfield = b;
            this.sortfielddirection = d ? "asc" : "desc";
            null == d && (this.sortfielddirection = null);
            void 0 == this.sortcache && (this.sortcache = {});
            this.sortdata = [];
            var h = []
              , k = !1;
            "constructor" == g && (g = "");
            if (!this.virtualmode && null != this.sortcache[g] && "many" !== this.grid.sortmode) {
                var l = this.sortcache[g];
                h = l._sortdata;
                l.direction == d ? h.reverse() : (!l.direction && d && h.reverse(),
                k = !0);
                h.length < this.totalrecords && (this.sortcache = {},
                k = !1,
                h = [])
            }
            Object.prototype.toString = "function" == typeof b ? b : function() {
                return this[b]
            }
            ;
            var m = this.records
              , n = "";
            this.source.datafields && e.each(this.source.datafields, function() {
                if (this.name == b)
                    return this.type && (n = this.type),
                    !1
            });
            if (0 == h.length)
                if (m.length)
                    for (var p = m.length, q = 0; q < p; q++)
                        l = m[q],
                        null != l && h.push({
                            sortkey: l.toString(),
                            value: l,
                            index: q
                        });
                else {
                    q = !1;
                    for (p in m) {
                        l = m[p];
                        if (void 0 == l) {
                            q = !0;
                            break
                        }
                        h.push({
                            sortkey: l.toString(),
                            value: l,
                            index: p
                        })
                    }
                    q && e.each(m, function(z, E) {
                        h.push({
                            sortkey: E.toString(),
                            value: E,
                            index: z
                        })
                    })
                }
            if (!k)
                if (null == c) {
                    this._sortcolumntype = n;
                    var t = this;
                    h.sort(function(z, E) {
                        return t._compare(z, E, n)
                    })
                } else
                    h.sort(c);
            d || h.reverse();
            Object.prototype.toString = f;
            this.sortdata = h;
            null !== d && (this.sortcache[g] = {
                _sortdata: h,
                direction: d,
                dataType: this._sortcolumntype,
                dataField: g
            });
            if ("many" === this.grid.sortmode) {
                d = [];
                c = [];
                f = [];
                for (var v in this.sortcache)
                    "data" !== v && (l = this.sortcache[v],
                    d.push(l.dataField),
                    c.push(l.direction ? "asc" : "desc"),
                    f.push(l.dataType));
                if (0 < d.length)
                    m = this.multiSort(m, d, c, f),
                    h = [],
                    m && e.each(m, function(z, E) {
                        h.push({
                            sortkey: g,
                            value: E,
                            index: E.boundindex
                        })
                    }),
                    this.sortdata = h;
                else {
                    this.sortcache = {};
                    this.sortdata = null;
                    this.refresh();
                    return
                }
            }
            this.reload(this.records, this.rows, this.filters, this.updated, !0)
        }
        ;
        this.multiSort = function(b, d, c, f, g) {
            if (0 === b.length)
                return [];
            for (var h = [], k = 0; k < b.length; k++) {
                var l = e.extend({}, b[k]);
                h.push(l)
            }
            k = !1;
            h && h.constructor && "ObservableArray" === h.constructor.name && (k = !0);
            if ((!(h && h instanceof Array && 0 !== h.length && d) || d instanceof Array && 0 === d.length) && !k)
                throw Error("sort: Missing or Invalid arguments!");
            "string" === typeof d && (d = [d]);
            var m = []
              , n = [];
            void 0 === c && (c = []);
            b = function(p, q) {
                switch (q || typeof p) {
                default:
                    var t = (new Intl.Collator).compare;
                    break;
                case "date":
                case "time":
                case "datetime":
                case "number":
                case "int":
                case "float":
                    t = function(v, z) {
                        return v - z
                    }
                    ;
                    break;
                case "boolean":
                    t = function(v, z) {
                        return v === z ? 0 : !1 === v ? -1 : 1
                    }
                    ;
                    break;
                case "object":
                    p instanceof Date && (t = function(v, z) {
                        return v.getTime() - z.getTime()
                    }
                    )
                }
                return t
            }
            ;
            for (k = 0; k < d.length; k++)
                m[k] = void 0 === c[k] || "asc" === c[k] || "ascending" === c[k] ? 1 : -1,
                n[k] = b(h[0][d[k]], f[k]);
            if (g)
                g(h, d, c, n);
            else
                return h.sort(function(p, q) {
                    for (var t = 0; t < d.length; t++) {
                        var v = n[t](p[d[t]], q[d[t]]);
                        if (0 === v) {
                            if (d[t + 1])
                                continue;
                            else if (void 0 !== p._index)
                                return (p._index - q._index) * m[t];
                            return 0
                        }
                        return v * m[t]
                    }
                    if (0 === d.length)
                        return p.boundIndex < q.boundIndex ? -1 : p.boundIndex > q.boundIndex ? 1 : 0
                }),
                h
        }
        ;
        this.clearsortdata = function() {
            this.sortcache = {};
            this.sortdata = null
        }
        ;
        this._compare = function(b, d, c) {
            b = b.sortkey;
            d = d.sortkey;
            void 0 === b && (b = null);
            void 0 === d && (d = null);
            if (null === b && null === d)
                return 0;
            if (null === b && null !== d)
                return -1;
            if (null !== b && null === d)
                return 1;
            if (e.jqx.dataFormat)
                if (c && "" != c)
                    switch (c) {
                    case "string":
                    case "text":
                        b = String(b).toLowerCase(),
                        d = String(d).toLowerCase()
                    }
                else {
                    if (e.jqx.dataFormat.isNumber(b) && e.jqx.dataFormat.isNumber(d) || e.jqx.dataFormat.isDate(b) && e.jqx.dataFormat.isDate(d))
                        return b < d ? -1 : b > d ? 1 : 0;
                    e.jqx.dataFormat.isNumber(b) || e.jqx.dataFormat.isNumber(d) || (b = String(b).toLowerCase(),
                    d = String(d).toLowerCase())
                }
            return b < d ? -1 : b > d ? 1 : 0
        }
        ;
        this._equals = function(b, d) {
            return 0 === this._compare(b, d)
        }
    }
    ;
    e.extend(e.jqx._jqxGrid.prototype, {
        _rendersortcolumn: function() {
            var b = this.that
              , d = this.getsortcolumn();
            if ("many" === this.sortmode) {
                this.__columnsbydatafield = [];
                var c = this.getsortcolumns();
                e.each(this.columns.records, function(k, l) {
                    e(this.sortasc).hide();
                    e(this.sortdesc).hide();
                    e(this.sorticon).css("visibility", "hidden");
                    this.element.removeAttribute("sort")
                });
                if (0 < c.length)
                    for (var f = 0; f < c.length; f++) {
                        var g = c[f]
                          , h = this._getcolumnbydatafield(g.dataField);
                        h.element.setAttribute("sort", !0);
                        b.isMaterialized() || b.isModern() ? (e(h.sorticon).show(),
                        e(h.sorticon).css("visibility", "inherit"),
                        e(h.sorticon).removeClass("ascending"),
                        e(h.sorticon).removeClass("descending"),
                        g.ascending ? e(h.sorticon).addClass("ascending") : e(h.sorticon).addClass("descending")) : g.ascending ? (e(h.sortasc).show(),
                        e(h.sortdesc).hide()) : !1 === g.ascending && (e(h.sortasc).hide(),
                        e(h.sortdesc).show())
                    }
            } else
                this.sortdirection && (c = function(k, l) {
                    (k = b.getcolumn(k)) && (l.ascending ? e.jqx.aria(k.element, "aria-sort", "ascending") : l.descending ? e.jqx.aria(k.element, "aria-sort", "descending") : e.jqx.aria(k.element, "aria-sort", "none"))
                }
                ,
                this._oldsortinfo && this._oldsortinfo.column && c(this._oldsortinfo.column, {
                    ascending: !1,
                    descending: !1
                }),
                c(d, this.sortdirection)),
                this._oldsortinfo = {
                    column: d,
                    direction: this.sortdirection
                },
                this.sortdirection && e.each(this.columns.records, function(k, l) {
                    k = e.data(document.body, "groupsortelements" + this.displayfield);
                    null == d || this.displayfield != d ? (e(this.sortasc).hide(),
                    e(this.sortdesc).hide(),
                    e(this.sorticon).css("visibility", "hidden"),
                    e(this.sorticon).removeClass("ascending"),
                    e(this.sorticon).removeClass("descending"),
                    this.element.removeAttribute("sort"),
                    null != k && (k.sortasc.hide(),
                    k.sortdesc.hide())) : (b.isMaterialized() || b.isModern() ? (e(this.sortasc).hide(),
                    e(this.sortdesc).hide(),
                    e(this.sorticon).show(),
                    e(this.sorticon).css("visibility", "inherit"),
                    null != k && (k.sortasc.hide(),
                    k.sortdesc.show()),
                    e(this.sorticon).removeClass("ascending"),
                    e(this.sorticon).removeClass("descending"),
                    b.sortdirection.ascending ? e(this.sorticon).addClass("ascending") : e(this.sorticon).addClass("descending")) : b.sortdirection.ascending ? (e(this.sortasc).show(),
                    e(this.sortdesc).hide(),
                    null != k && (k.sortasc.show(),
                    k.sortdesc.hide())) : (e(this.sortasc).hide(),
                    e(this.sortdesc).show(),
                    null != k && (k.sortasc.hide(),
                    k.sortdesc.show())),
                    this.element.setAttribute("sort", !0))
                })
        },
        getsortcolumns: function() {
            var b = [];
            for (c in this.dataview.sortcache)
                "data" !== c && b.push({
                    dataField: c,
                    ascending: this.dataview.sortcache[c].direction
                });
            if (0 === b.length)
                for (var d in this.sortcolumns) {
                    var c = this.sortcolumns[d];
                    null !== c && b.push({
                        dataField: d,
                        ascending: c
                    })
                }
            return b
        },
        getsortcolumn: function() {
            return void 0 != this.sortcolumn ? this.sortcolumn : null
        },
        removesort: function() {
            this.sortby(null);
            if ("many" === this.sortmode)
                for (var b in this.sortcolumns)
                    this.sortby(b, null)
        },
        sortby: function(b, d, c, f, g) {
            if (this._loading && !1 !== g)
                throw Error("jqxGrid: " + this.loadingerrormessage);
            null == b && (d = null,
            b = this.sortcolumn);
            if (void 0 != b) {
                g = this.that;
                void 0 == c && g.source && null != g.source.sortcomparer && (c = g.source.sortcomparer);
                void 0 === d && (d = !0);
                var h = "a" == d || "asc" == d || "ascending" == d || 1 == d ? !0 : !1;
                g.sortdirection = null != d ? {
                    ascending: h,
                    descending: !h
                } : {
                    ascending: !1,
                    descending: !1
                };
                g.sortcolumn = null != d ? b : null;
                g.sortcolumns || (g.sortcolumns = []);
                g.sortcolumns[b] = d;
                if (g.source && (g.source.sort || g.virtualmode)) {
                    if (g.dataview.sortfield = b,
                    g.dataview.sortfielddirection = null == d ? "" : h ? "asc" : "desc",
                    g.source.sort && !this._loading) {
                        g.source.sort(b, d, g.sortcolumns);
                        g._raiseEvent(6, {
                            sortinformation: g.getsortinformation()
                        });
                        return
                    }
                } else
                    g.dataview.sortby(b, d, c);
                !1 !== f && (g.groupable && 0 < g.groups.length ? (g._render(!0, !1, !1),
                g._updategroupheadersbounds && g.showgroupsheader && g._updategroupheadersbounds()) : (g.pageable && g.dataview.updateview(),
                g._updaterowsproperties(),
                g.rendergridcontent(!0)),
                g._postrender("sort"),
                g._raiseEvent(6, {
                    sortinformation: g.getsortinformation()
                }))
            }
        },
        _togglesort: function(b) {
            var d = this.that;
            if (!this.disabled)
                if ("many" === this.sortmode) {
                    if (b.sortable && d.sortable) {
                        for (var c = d.getsortcolumns(), f = 0; f < c.length; f++) {
                            var g = c[f];
                            if (b.displayfield === g.dataField) {
                                c = g.ascending;
                                c = 1 < d.sorttogglestates ? 1 == c ? !1 : null : !c;
                                d.sortby(b.displayfield, c, null);
                                return
                            }
                        }
                        d.sortby(b.displayfield, !0, null)
                    }
                } else
                    b.sortable && d.sortable && (c = d.getsortinformation(),
                    null != c.sortcolumn && c.sortcolumn == b.displayfield ? (c = c.sortdirection.ascending,
                    c = 1 < d.sorttogglestates ? 1 == c ? !1 : null : !c) : c = !0,
                    d.sortby(b.displayfield, c, null))
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxToolBar", "", {});
    e.extend(e.jqx._jqxToolBar.prototype, {
        defineInstance: function() {
            var b = {
                width: "100%",
                minWidth: null,
                maxWidth: null,
                height: 35,
                tools: "",
                initTools: null,
                minimizeWidth: 200,
                disabled: !1,
                rtl: !1,
                events: ["open", "close"]
            };
            if (this === e.jqx._jqxToolBar.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            if ("none" === this.host.css("display") || !1 === document.body.contains(this.element))
                this._initiallyHidden = !0;
            this._toolToWidgetMapping = {
                button: "jqxButton",
                toggleButton: "jqxToggleButton",
                dropdownlist: "jqxDropDownList",
                combobox: "jqxComboBox",
                input: "jqxInput"
            };
            this._toolChanges = [];
            this.render()
        },
        render: function() {
            var b = !0;
            this.element.innerHTML = "";
            0 < this.element.className.length && this._removeClass(this.element, this.toThemeProperty("jqx-widget jqx-fill-state-normal jqx-rc-all jqx-toolbar jqx-fill-state-disabled"));
            this._setSize();
            this._destroyTools(!1);
            this._toolWidgets && (b = !1,
            e(this._minimizeButton).remove(),
            e(this._minimizePopup).remove());
            this._appendMinimizeButton();
            this._addClasses();
            this._initiallyHidden || this._createTools();
            !0 === this.disabled && (this.element.className += " " + this.toThemeProperty("jqx-fill-state-disabled"),
            this._disableTools(!0));
            this._initiallyHidden || this._minimize();
            this._removeHandlers();
            this._addHandlers();
            !1 === b && 0 < this._toolChanges.length && this._restoreChanges()
        },
        refresh: function(b) {
            !0 !== b && this.render()
        },
        getTools: function() {
            return this._toolWidgets
        },
        destroy: function() {
            this._removeHandlers();
            this._destroyTools();
            this.host.remove()
        },
        _destroyTools: function(b) {
            !1 !== b && (b = !0);
            if (this._toolWidgets)
                for (var d = this._toolWidgets.length - 1; 0 <= d; d--)
                    this._destroyTool(d, b, !0)
        },
        _destroyTool: function(b, d, c) {
            b = parseInt(b, 10);
            var f = this._toolWidgets[b];
            if (f) {
                var g = f.type
                  , h = f.tool
                  , k = f.menuTool;
                if ("custom" !== g) {
                    if (h[this._toolToWidgetMapping[g]]("destroy"),
                    k)
                        k[this._toolToWidgetMapping[g]]("destroy")
                } else
                    h.remove(),
                    k && k.remove();
                f.menuSeparator && e(f.menuSeparator).remove();
                this._toolWidgets.splice(b, 1);
                this._checkType(g) && this._refreshButtonGroups();
                !0 !== c && this._minimize();
                !1 !== d && this._toolChanges.push({
                    action: "destroyTool",
                    index: b
                })
            }
        },
        destroyTool: function(b) {
            this._destroyTool(b, !0)
        },
        addTool: function(b, d, c, f) {
            var g = "first" === d ? 0 : this._toolWidgets.length;
            if (this._toolWidgets[g - 1]) {
                var h = this._toolWidgets[g - 1].tool;
                var k = this._toolWidgets[g - 1].separatorAfterWidget ? "|" : this._toolWidgets[g - 1].type
            }
            if (!0 === c)
                var l = "|";
            else
                this._toolWidgets[g + 1] && (l = this._toolWidgets[g + 1].type);
            g = this._initializeTool(g, b, h, k, l, f, !1);
            "first" === d ? this._toolWidgets.splice(0, 0, g) : this._toolWidgets.push(g);
            this._removeHandlers();
            this._addHandlers();
            this._checkType(b) && this._refreshButtonGroups();
            "first" !== d && 0 < this._minimizedTools ? this._minimizeTool(!0) : this._minimize();
            this._toolChanges.push({
                action: "addTool",
                type: b,
                position: d,
                separator: c,
                initCallback: f
            })
        },
        _disableTools: function(b) {
            for (var d = 0; d < this._toolWidgets.length; d++)
                this.disableTool(d, b)
        },
        disableTool: function(b, d) {
            b = parseInt(b, 10);
            var c = this._toolWidgets[b];
            if (c) {
                var f = c.type;
                "custom" !== f && (c.tool[this._toolToWidgetMapping[f]]({
                    disabled: d
                }),
                c.menuTool[this._toolToWidgetMapping[f]]({
                    disabled: d
                }));
                this._toolChanges.push({
                    action: "disableTool",
                    index: b,
                    disable: d
                })
            }
        },
        propertyChangedHandler: function(b, d, c, f) {
            if ("initTools" !== d && f !== c)
                switch (d) {
                case "theme":
                    "" !== c && (b._removeClass(b.element, b.toThemeProperty("jqx-widget-" + c + " jqx-fill-state-normal-" + c + " jqx-rc-all-" + c + " jqx-toolbar-" + c)),
                    b._removeClass(b._minimizePopup, "jqx-popup-" + c + " jqx-fill-state-normal-" + c + " jqx-rc-b-" + c + " jqx-toolbar-minimized-popup-" + c));
                    b._addClasses();
                    b._minimizePopup.className += " " + b.toThemeProperty("jqx-popup jqx-fill-state-normal jqx-rc-b jqx-toolbar-minimized-popup");
                    for (var g = 0; g < b._toolWidgets.length; g++)
                        d = b._toolWidgets[g],
                        "custom" !== d.type && (d.menuTool && (d.menuSeparator && ("" !== c && b._removeClass(d.menuSeparator, "jqx-fill-state-pressed-" + c + " jqx-toolbar-minimized-popup-separator-" + c),
                        d.menuSeparator.className += " jqx-fill-state-pressed-" + f + " jqx-toolbar-minimized-popup-separator-" + f),
                        d.menuTool[b._toolToWidgetMapping[b._toolWidgets[g].type]]({
                            theme: f
                        })),
                        d.tool[b._toolToWidgetMapping[b._toolWidgets[g].type]]({
                            theme: f
                        }));
                    e.jqx.utilities.setTheme(c, f, b.host);
                    break;
                case "width":
                    b.element.style.width = b._toPx(f);
                    b._minimize();
                    break;
                case "minWidth":
                    b.element.style.minWidth = b._toPx(f);
                    b._minimize();
                    break;
                case "maxWidth":
                    b.element.style.maxWidth = b._toPx(f);
                    b._minimize();
                    break;
                case "height":
                    d = !1;
                    b.element.style.height = b._toPx(f);
                    if ("string" === typeof f && -1 !== f.indexOf("%")) {
                        if ("string" === typeof c && -1 !== c.indexOf("%")) {
                            b.host.trigger("resize");
                            break
                        }
                        d = !0
                    } else
                        g = parseInt(f, 10),
                        g -= b._getComputedStyle(b.element, "paddingTop") + b._getComputedStyle(b.element, "paddingBottom") + b._getComputedStyle(b.element, "borderTopWidth") + b._getComputedStyle(b.element, "borderBottomWidth");
                    for (f = 0; f < b._toolWidgets.length; f++) {
                        c = b._toolWidgets[f];
                        var h = c.type;
                        if ("button" === h || "toggleButton" === h || "repeatButton" === h || "linkButton" === h)
                            c.tool[0].style.height = d ? "100%" : b._toPx(g),
                            c.menuTool && (c.menuTool[0].style.height = d ? "100%" : b._toPx(g));
                        else if ("dropdownlist" === h || "combobox" === h || "input" === h)
                            if (c.tool[b._toolToWidgetMapping[h]]({
                                height: d ? "100%" : g - 2
                            }),
                            c.menuTool)
                                c.menuTool[b._toolToWidgetMapping[h]]({
                                    height: d ? "100%" : g - 2
                                })
                    }
                    break;
                case "tools":
                    b._removeHandlers();
                    b._destroyTools();
                    b._createTools();
                    b._addHandlers();
                    b._minimize();
                    break;
                case "minimizeWidth":
                    !0 === b._isOpen ? (g = b._getComputedStyle(b._minimizePopup, "left") - (f - c),
                    b._minimizePopup.style.width = b._toPx(f),
                    b._minimizePopup.style.left = b._toPx(g)) : b._minimizePopup.style.width = b._toPx(f);
                    break;
                case "rtl":
                    b.render();
                    break;
                case "disabled":
                    !0 === f ? (b.element.className += " " + b.toThemeProperty("jqx-fill-state-disabled"),
                    b._disableTools(!0)) : (b._removeClass(b.element, b.toThemeProperty("jqx-fill-state-disabled")),
                    b._disableTools(!1))
                }
        },
        _raiseEvent: function(b, d) {
            void 0 === d && (d = {
                owner: null
            });
            b = this.events[b];
            d.owner = this;
            b = new e.Event(b);
            b.owner = this;
            b.args = d;
            b.preventDefault && b.preventDefault();
            return this.host.trigger(b)
        },
        _addClasses: function() {
            var b = "jqx-widget jqx-fill-state-normal jqx-rc-all jqx-toolbar";
            !0 === this.rtl && (b += " jqx-toolbar-rtl");
            this.element.className += " " + this.toThemeProperty(b)
        },
        _checkType: function(b) {
            return "button" === b || "toggleButton" === b || "repeatButton" === b || "linkButton" === b ? !0 : !1
        },
        _refreshButtonGroups: function() {
            function b(p, q, t, v, z, E) {
                var C = p.tool[0];
                p = p.menuTool[0];
                var F = {
                    add: "",
                    remove: ""
                };
                F[q] += " jqx-toolbar-tool-inner-button";
                F[t] += " jqx-rc-all";
                F[v] += " jqx-rc-l";
                F[z] += " jqx-rc-r";
                "" !== F.add && (C.className += " " + d.toThemeProperty(e.trim(F.add)),
                p && (p.className += " " + d.toThemeProperty(e.trim(F.add))));
                "" !== F.remove && (d._removeClass(C, d.toThemeProperty(e.trim(F.remove))),
                p && d._removeClass(p, d.toThemeProperty(e.trim(F.remove))));
                C.style.borderLeftWidth = E + "px";
                p && (p.style.borderLeftWidth = E + "px")
            }
            for (var d = this, c = 0; c < d._toolWidgets.length; c++) {
                var f = d._toolWidgets[c];
                if (d._checkType(f.type)) {
                    var g, h, k = f.tool, l = f.menuTool;
                    0 < c && (g = d._toolWidgets[c - 1].separatorAfterWidget ? "|" : d._toolWidgets[c - 1]);
                    f.separatorAfterWidget ? h = "|" : c < d._toolWidgets.length - 1 && (h = d._toolWidgets[c + 1]);
                    var m = g && d._checkType(g.type)
                      , n = !1 === f.separatorAfterWidget && h && d._checkType(h.type);
                    m || n ? !m && n ? b(f, "remove", "remove", "add", "remove", 1) : m && n ? b(f, "add", "remove", "remove", "remove", 0) : m && !n && b(f, "remove", "remove", "remove", "add", 0) : b(f, "remove", "add", "remove", "remove", 1);
                    m = d.rtl ? "rtl" : "ltr";
                    n ? (d._removeClass(k[0], d.toThemeProperty("jqx-toolbar-tool-separator-" + m)),
                    d._removeClass(k[0], d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m)),
                    l && (d._removeClass(l[0], d.toThemeProperty("jqx-toolbar-tool-separator-" + m)),
                    d._removeClass(l[0], d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m)))) : f.separatorAfterWidget ? (d._removeClass(k[0], d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m)),
                    k[0].className += " " + d.toThemeProperty("jqx-toolbar-tool-separator-" + m),
                    l && (d._removeClass(l[0], d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m)),
                    l[0].className += " " + d.toThemeProperty("jqx-toolbar-tool-separator-" + m))) : (d._removeClass(k[0], d.toThemeProperty("jqx-toolbar-tool-separator-" + m)),
                    k[0].className += " " + d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m),
                    l && (d._removeClass(l[0], d.toThemeProperty("jqx-toolbar-tool-separator-" + m)),
                    l[0].className += " " + d.toThemeProperty("jqx-toolbar-tool-no-separator-" + m)))
                }
            }
        },
        _addHandlers: function() {
            var b = this
              , d = b.element.id;
            e.jqx.utilities.resize(b.host, function() {
                b._initiallyHidden ? (b._createTools(),
                b._minimize(),
                b._initiallyHidden = !1) : (!0 === b._isOpen && (b._minimizePopup.style.display = "none",
                b._isOpen = !1,
                b._raiseEvent("1")),
                b._minimize())
            });
            b.addHandler(document, "click.jqxToolbar" + d, function() {
                !0 === b._isOpen && b._openMinimizePopup()
            });
            b.addHandler(b._minimizeButton, "click.jqxToolbar" + d, function(c) {
                c.stopPropagation();
                b._openMinimizePopup()
            });
            b.addHandler(e(".jqx-popup"), "click.jqxToolbar" + d, function(c) {
                -1 === c.target.className.indexOf("jqx-window-content") && c.stopPropagation()
            })
        },
        _removeHandlers: function() {
            var b = this.element.id;
            this.removeHandler(document, "click.jqxToolbar" + b);
            this.removeHandler(this._minimizeButton, "click.jqxToolbar" + b);
            this.removeHandler(e(".jqx-popup"), "click.jqxToolbar" + b)
        },
        _setSize: function() {
            var b = this.element.style;
            b.width = this._toPx(this.width);
            b.height = this._toPx(this.height);
            this.minWidth && (b.minWidth = this._toPx(this.minWidth));
            this.maxWidth && (b.maxWidth = this._toPx(this.maxWidth))
        },
        _createTools: function() {
            var b = this.tools.split(" ")
              , d = e.trim(this.tools.replace(/\|/g, ""));
            d = d.replace(/\s+/g, " ");
            d = d.split(" ");
            this._toolWidgets = [];
            for (var c = 0, f = 0; f < d.length; f++) {
                d[f] !== b[f + c] && c++;
                var g = f + c;
                if (this._toolWidgets[f - 1])
                    var h = this._toolWidgets[f - 1].tool;
                var k = b[g];
                if ("" === k)
                    return !0;
                g = this._initializeTool(f, k, h, b[g - 1], b[g + 1], this.initTools, !0);
                this._toolWidgets.push(g)
            }
            this._minimizePopup.style.display = "none";
            this._minimizePopup.style.visibility = "visible"
        },
        _initializeTool: function(b, d, c, f, g, h, k) {
            var l = this._initializeWidget(d, m, l, c);
            var m = l.tool;
            l = l.menuTool;
            c = m[0];
            var n = "jqx-toolbar-tool", p = l[0], q, t = !0;
            !0 === this.rtl && (n += " jqx-toolbar-tool-rtl");
            if (this.initTools) {
                var v = !0 === k ? this.initTools(d, b, m, !1) : h(d, m, !1);
                if (!v || !1 !== v.minimizable && !1 !== v.menuTool)
                    !0 === k ? this.initTools(d, b, l, !0) : h(d, l, !0),
                    l && (q = "jqx-toolbar-tool-minimized");
                else {
                    if ("custom" !== d)
                        l[this._toolToWidgetMapping[d]]("destroy");
                    else
                        l.remove();
                    !1 === v.minimizable && (t = !1);
                    l = !1
                }
            }
            b = !1;
            l && (p.style.display = "none");
            h = this.rtl ? "rtl" : "ltr";
            k = ["button", "toggleButton", "repeatButton", "linkButton"];
            v = {
                button: "jqxButton",
                toggleButton: "jqxToggleButton",
                repeatButton: "jqxRepeatButton",
                linkButton: "jqxRepeatButton"
            };
            if ("|" === g) {
                if (b = !0,
                n += " jqx-toolbar-tool-separator-" + h,
                l && (q += " jqx-toolbar-tool-separator-" + h),
                l) {
                    var z = document.createElement("div");
                    z.className = this.toThemeProperty("jqx-fill-state-pressed jqx-toolbar-minimized-popup-separator");
                    this._minimizePopup.appendChild(z)
                }
            } else if (-1 === k.indexOf(d) || -1 !== k.indexOf(d) && -1 === k.indexOf(g))
                n += " jqx-toolbar-tool-no-separator-" + h,
                l && (q += " jqx-toolbar-tool-no-separator-" + h);
            if (-1 === k.indexOf(f) && -1 !== k.indexOf(d) && -1 !== k.indexOf(g))
                if (!1 === this.rtl) {
                    if (m[v[d]]({
                        roundedCorners: "left"
                    }),
                    l)
                        l[v[d]]({
                            roundedCorners: "left"
                        })
                } else
                    m[v[d]]({
                        roundedCorners: "left"
                    }),
                    c.style.borderLeftWidth = "0px",
                    l && (l[v[d]]({
                        roundedCorners: "left"
                    }),
                    p.style.borderLeftWidth = "0px");
            else if (-1 !== k.indexOf(f) && -1 !== k.indexOf(d) && -1 !== k.indexOf(g))
                n += " jqx-toolbar-tool-inner-button",
                c.style.borderLeftWidth = "0px",
                l && (q += " jqx-toolbar-tool-inner-button",
                p.style.borderLeftWidth = "0px");
            else if (-1 !== k.indexOf(f) && -1 !== k.indexOf(d) && -1 === k.indexOf(g))
                if (!1 === this.rtl)
                    m[v[d]]({
                        roundedCorners: "right"
                    }),
                    c.style.borderLeftWidth = "0px",
                    l && (l[v[d]]({
                        roundedCorners: "right"
                    }),
                    p.style.borderLeftWidth = "0px");
                else if (m[v[d]]({
                    roundedCorners: "left"
                }),
                l)
                    l[v[d]]({
                        roundedCorners: "left"
                    });
            c.className += " " + this.toThemeProperty(n);
            l && (p.className += " " + this.toThemeProperty(q));
            return {
                type: d,
                tool: m,
                separatorAfterWidget: b,
                minimizable: t,
                minimized: !1,
                menuTool: l,
                menuSeparator: z
            }
        },
        _initializeWidget: function(b, d, c, f) {
            var g = this._toolToWidgetMapping[b]
              , h = !1;
            if ("string" === typeof this.height && -1 !== this.height.indexOf("%"))
                h = !0;
            else {
                var k = window.getComputedStyle ? window.getComputedStyle(this.element) : this.element.currentStyle;
                k = this.element.offsetHeight - (parseInt(k.paddingTop, 10) + parseInt(k.paddingBottom, 10) + parseInt(k.borderTopWidth, 10) + parseInt(k.borderBottomWidth, 10))
            }
            if ("custom" !== b && void 0 === this.host[g])
                throw b = this._toolToWidgetMapping[b].toLowerCase(),
                Error("jqxToolBar: Missing reference to " + b + ".js");
            switch (b) {
            case "button":
            case "toggleButton":
                d = document.createElement("button");
                c = document.createElement("button");
                var l = {
                    theme: this.theme,
                    height: h ? "100%" : k,
                    disabled: this.disabled,
                    rtl: this.rtl
                };
                break;
            case "dropdownlist":
            case "combobox":
                d = document.createElement("div");
                c = document.createElement("div");
                l = {
                    theme: this.theme,
                    autoDropDownHeight: !0,
                    height: h ? "100%" : k - 2,
                    disabled: this.disabled,
                    rtl: this.rtl
                };
                break;
            case "input":
                d = document.createElement("input");
                d.setAttribute("type", "text");
                c = document.createElement("input");
                c.setAttribute("type", "text");
                l = {
                    theme: this.theme,
                    height: h ? "100%" : k - 2,
                    disabled: this.disabled,
                    rtl: this.rtl
                };
                break;
            case "custom":
                d = document.createElement("div"),
                c = document.createElement("div")
            }
            h = this.host.children();
            k = e(this._minimizePopup).children();
            f || 1 === h.length && 0 === k.length ? (this.element.appendChild(d),
            this._minimizePopup.appendChild(c)) : (this.element.insertBefore(d, h[1]),
            this._minimizePopup.insertBefore(c, k[0]));
            d = e(d);
            c = e(c);
            "custom" !== b && (d[g](l),
            c[g](l));
            return {
                tool: d,
                menuTool: c
            }
        },
        _appendMinimizeButton: function() {
            this._minimizedTools = 0;
            var b = document.createElement("div")
              , d = "jqx-menu-minimized-button jqx-toolbar-minimized-button"
              , c = document.createElement("div")
              , f = "jqx-popup jqx-fill-state-normal jqx-rc-b jqx-toolbar-minimized-popup";
            c.setAttribute("id", this.element.id + "Popup");
            !0 === this.rtl && (d += " jqx-toolbar-minimized-button-rtl",
            f += " jqx-toolbar-minimized-popup-rtl");
            b.className = this.toThemeProperty(d);
            c.className = this.toThemeProperty(f);
            this.element.appendChild(b);
            document.body.appendChild(c);
            this._isOpen = !1;
            c.style.width = this._toPx(this.minimizeWidth);
            this._minimizeButton = b;
            this._minimizePopup = c
        },
        _openMinimizePopup: function() {
            var b = this;
            if (!1 === b._isOpen) {
                var d = b.host.offset()
                  , c = d.left;
                !1 === b.rtl && (c += b.element.offsetWidth - parseInt(b.minimizeWidth, 10) - (b._getComputedStyle(b._minimizePopup, "paddingLeft") + b._getComputedStyle(b._minimizePopup, "paddingRight") + b._getComputedStyle(b._minimizePopup, "borderLeftWidth") + b._getComputedStyle(b._minimizePopup, "borderRightWidth")));
                d = d.top + b.element.offsetHeight - 1;
                b._minimizePopup.style.left = c + "px";
                b._minimizePopup.style.top = d + "px";
                e(b._minimizePopup).slideDown("fast", function() {
                    b._isOpen = !0;
                    b._raiseEvent("0")
                })
            } else
                e(b._minimizePopup).slideUp("fast"),
                b._isOpen = !1,
                b._raiseEvent("1")
        },
        _minimize: function() {
            var b = 0;
            0 < this._minimizedTools && (b = this._minimizeButton.offsetWidth + this._getComputedStyle(this._minimizeButton, "marginLeft"));
            b = this.element.offsetWidth - this._getComputedStyle(this.element, "paddingLeft") - this._getComputedStyle(this.element, "paddingRight") - b - 10;
            if (!(0 > b)) {
                for (var d = 0, c, f = 0; f < this._toolWidgets.length; f++) {
                    var g = this._toolWidgets[f].tool;
                    !1 === this._toolWidgets[f].minimized ? (g = g[0].offsetWidth + this._getComputedStyle(g[0], "marginLeft") + this._getComputedStyle(g[0], "marginRight"),
                    d += g) : void 0 === c && (g = g[0].cloneNode(!0),
                    g.style.visibility = "hidden",
                    g.style.display = "block",
                    g.style.position = "absolute",
                    document.body.appendChild(g),
                    c = g.offsetWidth + this._getComputedStyle(g, "marginLeft") + this._getComputedStyle(g, "marginRight"),
                    e(g).remove())
                }
                d > b ? (this._minimizeTool(!0),
                this._minimize()) : void 0 !== c && d + c < b && (this._minimizeTool(!1),
                this._minimize())
            }
        },
        _minimizeTool: function(b) {
            if (!0 === b)
                for (var d = this._toolWidgets.length - 1; 0 <= d; d--) {
                    if (b = this._toolWidgets[d],
                    !1 !== b.minimizable && !1 === b.minimized) {
                        var c = this._getToolValue(b.tool, b.type);
                        b.tool[0].style.display = "none";
                        b.menuTool && (b.menuTool[0].style.display = "block",
                        this._setToolValue(c, b.menuTool, b.type));
                        b.menuSeparator && (b.menuSeparator.style.display = "block");
                        this._toolWidgets[d].minimized = !0;
                        this._minimizedTools++;
                        1 === this._minimizedTools && (this._minimizeButton.style.display = "block");
                        break
                    }
                }
            else
                for (d = 0; d < this._toolWidgets.length; d++)
                    if (b = this._toolWidgets[d],
                    !0 === b.minimized) {
                        b.menuTool && (c = this._getToolValue(b.menuTool, b.type),
                        b.menuTool[0].style.display = "none");
                        b.menuSeparator && (b.menuSeparator.style.display = "none");
                        b.tool.show();
                        b.menuTool && this._setToolValue(c, b.tool, b.type);
                        this._toolWidgets[d].minimized = !1;
                        this._minimizedTools--;
                        0 === this._minimizedTools && (this._minimizeButton.style.display = "none");
                        break
                    }
        },
        _getToolValue: function(b, d) {
            switch (d) {
            case "button":
            case "custom":
                var c = void 0;
                break;
            case "toggleButton":
                d = -1 !== b[0].className.indexOf("jqx-fill-state-pressed");
                c = {
                    text: b[0].innerHTML,
                    toggled: d
                };
                break;
            case "dropdownlist":
            case "combobox":
                d = this._toolToWidgetMapping[d];
                c = b[d]("checkboxes") ? b[d]("val") : b[d]("getSelectedIndex");
                break;
            case "input":
                c = b.val()
            }
            return c
        },
        escape_HTML: function(b) {
            return b.replace(/[&<>"]/g, function(d) {
                return {
                    "&": "&",
                    "<": "<",
                    ">": ">",
                    '"': '"'
                }[d] || d
            })
        },
        _setToolValue: function(b, d, c) {
            if (void 0 !== b)
                switch (c) {
                case "toggleButton":
                    d[0].innerHTML = this.escape_HTML(b.text);
                    -1 !== d[0].className.indexOf("jqx-fill-state-pressed") !== b.toggled && d.jqxToggleButton("toggle");
                    break;
                case "dropdownlist":
                case "combobox":
                    c = this._toolToWidgetMapping[c];
                    if (d[c]("checkboxes")) {
                        if (d[c]("uncheckAll"),
                        "" !== b) {
                            b = b.split(",");
                            for (var f = 0; f < b.length; f++)
                                d[c]("checkItem", b[f])
                        }
                    } else
                        d[c]("selectIndex", b);
                    break;
                case "input":
                    d.val(b)
                }
        },
        _restoreChanges: function() {
            var b = this;
            e.each(b._toolChanges, function(d, c) {
                "addTool" === c.action ? b.addTool(c.type, c.position, c.separator, c.initCallback) : "destroyTool" === c.action ? b._destroyTool(c.index) : "disableTool" === c.action && b.disableTool(c.index, c.disable)
            })
        },
        _removeClass: function(b, d) {
            e(b).removeClass(d)
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        },
        _getComputedStyle: function(b, d) {
            if (window.getComputedStyle)
                var c = window.getComputedStyle(b);
            else
                b.currentStyle && (c = b.currentStyle);
            return "string" === typeof c[d] && -1 === c[d].indexOf("px") ? 0 : parseInt(c[d], 10)
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxTooltip", "", {});
    e.extend(e.jqx._jqxTooltip.prototype, {
        defineInstance: function() {
            var b = {
                width: "auto",
                height: "auto",
                position: "default",
                enableBrowserBoundsDetection: !0,
                content: "",
                left: 0,
                top: 0,
                absolutePositionX: 0,
                absolutePositionY: 0,
                trigger: "hover",
                showDelay: 100,
                autoHide: !0,
                autoHideDelay: 3E3,
                closeOnClick: !0,
                disabled: !1,
                animationShowDelay: 200,
                animationHideDelay: "fast",
                showArrow: !0,
                name: "",
                opacity: .9,
                rtl: !1,
                _isOpen: !1,
                selector: null,
                opening: null,
                value: null,
                _eventsMap: {
                    mousedown: e.jqx.mobile.getTouchEventName("touchstart"),
                    mouseup: e.jqx.mobile.getTouchEventName("touchend")
                },
                events: ["open", "close", "opening", "closing"]
            };
            if (this === e.jqx._jqxTooltip.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            this._isTouchDevice = e.jqx.mobile.isTouchDevice();
            var b = e.data(document.body, "_tooltipIDArray" + this.name);
            b ? this.IDArray = b : (this.IDArray = [],
            e.data(document.body, "_tooltipIDArray" + this.name, this.IDArray));
            b = "jqxtooltip" + this._generatekey();
            this.IDArray.push({
                tooltipID: b,
                tooltipHost: this.host
            });
            var d = document.createElement("div");
            d.setAttribute("id", b);
            d.innerHTML = '<div id="' + b + 'Main"><div id="' + b + 'Text"></div></div><div id="' + b + 'Arrow"></div>';
            e.jqx.browser.msie && (d.className = this.toThemeProperty("jqx-noshadow"));
            document.body.appendChild(d);
            this._tooltip = d;
            this._tooltipHelper = e(d);
            this._tooltipHelper.initAnimate && this._tooltipHelper.initAnimate();
            d.style.visibility = "hidden";
            d.style.display = "none";
            d.style.opacity = 0;
            d.style.zIndex = 99999;
            this._arrow = d = document.getElementById(b + "Arrow");
            !1 === this.showArrow && (d.style.visibility = "hidden",
            d.style.display = "none");
            this._main = document.getElementById(b + "Main");
            this._text = document.getElementById(b + "Text");
            this._setTheme();
            this._setSize();
            this._setContent();
            !1 === this.disabled && (this._trigger(),
            !0 === this.closeOnClick && this._clickHide())
        },
        open: function() {
            arguments && arguments.length && 2 === arguments.length && (this.position = "absolute",
            this.left = arguments[0],
            this.top = arguments[1],
            this.absolutePositionX = arguments[0],
            this.absolutePositionY = arguments[1]);
            if (!1 === this.disabled && "removed" !== this._id())
                if ("mouse" === this.position || "mouseenter" === this.position) {
                    var b = this.position;
                    this.position = "default";
                    this._raiseEvent("2");
                    this._setPosition();
                    this._animateShow();
                    this.position = b
                } else
                    this._raiseEvent("2"),
                    this._setPosition(),
                    this._animateShow()
        },
        close: function(b) {
            var d = this
              , c = e.jqx.browser.msie && 9 > e.jqx.browser.version;
            "object" === typeof b && e.isEmptyObject(b) && (b = this.animationHideDelay);
            var f = parseFloat(d._tooltip.style.opacity)
              , g = function() {
                clearTimeout(d.autoHideTimeout);
                d._raiseEvent("3");
                d._tooltipHelper.animate({
                    opacity: 0
                }, b, function() {
                    d._tooltip.style.visibility = "hidden";
                    d._tooltip.style.display = "none";
                    d._raiseEvent("1");
                    d._isOpen = !1
                })
            };
            !1 === this._isOpen && 0 !== f ? g() : !0 === this._isOpen && (!c && f === this.opacity || c) && g()
        },
        destroy: function() {
            var b = this.IDArray.length;
            this._removeHandlers();
            this._tooltipHelper.remove();
            for (var d = 0; d < b; d++)
                if (this.IDArray[d].tooltipHost === this.host) {
                    this.IDArray.splice(d, 1);
                    break
                }
            this.host.removeData("jqxTooltip")
        },
        refresh: function(b) {
            if (!0 !== b) {
                var d = this;
                this.rtl && (d._text.className += " " + d.toThemeProperty("jqx-rtl"),
                d._text.style.direction = "rtl");
                b = parseFloat(d._tooltip.style.opacity);
                "removed" !== this._id() && (!0 === this.disabled && !0 === this._isOpen && b === this.opacity && (clearTimeout(this.autoHideTimeout),
                this._tooltipHelper.animate({
                    opacity: 0
                }, this.animationHideDelay, function() {
                    d._tooltip.style.visibility = "hidden";
                    d._tooltip.style.display = "none";
                    d._isOpen = !1
                })),
                this._setTheme(),
                this._setContent(),
                this._setSize(),
                "mouse" !== this.position && "mouseenter" !== this.position && this._setPosition(),
                this._removeHandlers(),
                !1 === this.disabled && (this._trigger(),
                !0 === this.closeOnClick && this._clickHide()))
            }
        },
        propertyChangedHandler: function(b, d, c, f) {
            "content" === d && (this.changeContentFlag = !0);
            b.refresh()
        },
        _raiseEvent: function(b, d) {
            b = new e.Event(this.events[b]);
            b.owner = this;
            b.args = d;
            try {
                var c = this.host.trigger(b)
            } catch (f) {}
            return c
        },
        _generatekey: function() {
            return (65536 * (1 + Math.random()) | 0).toString(16).substring(1) + (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
        },
        _id: function() {
            for (var b, d = this.IDArray.length, c = 0; c < d; c++)
                if (this.IDArray[c].tooltipHost === this.host) {
                    b = this.IDArray[c].tooltipID;
                    b = "#" + b;
                    break
                }
            void 0 === b && (b = "removed");
            return b
        },
        _setPosition: function(b) {
            var d = this
              , c = d._tooltip;
            if (!1 === this._isOpen && 0 === parseFloat(c.style.opacity) || !0 === this.changeContentFlag)
                if (b || "mouse" !== this.position && "mouseenter" !== this.position) {
                    c.style.display = "block";
                    this.changeContentFlag = !1;
                    this.documentTop = document.documentElement.scrollTop;
                    this.documentLeft = document.documentElement.scrollLeft;
                    this.windowWidth = window.innerWidth;
                    this.windowHeight = window.innerHeight;
                    this.hostWidth = d.element.offsetWidth;
                    this.hostHeight = d.element.offsetHeight;
                    this.tooltipWidth = c.offsetWidth;
                    this.tooltipHeight = c.offsetHeight;
                    this.hostOffset = this.host.offset();
                    this.tooltipOffset = d._tooltipHelper.offset();
                    this.defaultOffset = 30;
                    this.offsetHorizontal = parseInt(this.left, 10);
                    this.offsetVertical = parseInt(this.top, 10);
                    c = d._arrow;
                    var f = e(c)
                      , g = d._main
                      , h = e(g)
                      , k = g.offsetWidth
                      , l = g.offsetHeight;
                    this.arrowSize = 5;
                    this.tooltipMainOffset = h.offset();
                    this.tooltipArrowOffset = {};
                    switch (this.position) {
                    case "top":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth / 2 - this.tooltipWidth / 2 + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px 0px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (k / 2 - this.arrowSize);
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "bottom":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth / 2 - this.tooltipWidth / 2 + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = "0 " + this.arrowSize + "px " + this.arrowSize + "px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (k / 2 - this.arrowSize);
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "left":
                        g = window.getComputedStyle ? window.getComputedStyle(g) : g.currentStyle;
                        this.tooltipOffset.left = this.hostOffset.left - this.tooltipWidth - this.arrowSize + this.offsetHorizontal - (parseInt(g.borderLeftWidth, 10) + parseInt(g.borderRightWidth, 10));
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight / 2 - this.tooltipHeight / 2 + this.offsetVertical;
                        this._detectBrowserBounds();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-t-b"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-l-r");
                        c.style.borderWidth = this.arrowSize + "px 0px " + this.arrowSize + "px " + this.arrowSize + "px";
                        this.tooltipMainOffset = h.offset();
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + k;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "right":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth + this.arrowSize + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight / 2 - this.tooltipHeight / 2 + this.offsetVertical;
                        this.tooltipOffset.top = parseInt(this.tooltipOffset.top, 10);
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-t-b"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-l-r");
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px " + this.arrowSize + "px 0px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left - this.arrowSize;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + g.offsetHeight / 2 - this.arrowSize;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "top-left":
                        this.tooltipOffset.left = this.hostOffset.left + this.defaultOffset - this.tooltipWidth + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px  0px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + k - 6 * this.arrowSize;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "bottom-left":
                        this.tooltipOffset.left = this.hostOffset.left + this.defaultOffset - this.tooltipWidth + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = "0 " + this.arrowSize + "px " + this.arrowSize + "px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + k - 6 * this.arrowSize;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "top-right":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px  0px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "bottom-right":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset + this.offsetHorizontal;
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;
                        this._detectBrowserBounds();
                        this.tooltipMainOffset = h.offset();
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r"));
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b");
                        c.style.borderWidth = "0 " + this.arrowSize + "px " + this.arrowSize + "px";
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize;
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        });
                        break;
                    case "absolute":
                        d._tooltipHelper.offset({
                            top: this.absolutePositionY,
                            left: this.absolutePositionX
                        });
                        c.style.borderWidth = "0px";
                        break;
                    case "mouse":
                        if (!1 === this._isTouchDevice)
                            switch (this.trigger) {
                            case "hover":
                                this.mouseHoverTimeout && clearTimeout(this.mouseHoverTimeout);
                                this.mouseHoverTimeout = setTimeout(function() {
                                    d.tooltipOffset.left = b.pageX + 10;
                                    d.tooltipOffset.top = b.pageY + 10;
                                    d._detectBrowserBounds()
                                }, this.showDelay);
                                break;
                            case "click":
                                this.tooltipOffset.left = b.pageX + 10,
                                this.tooltipOffset.top = b.pageY + 10,
                                this._detectBrowserBounds()
                            }
                        else {
                            f = b.pageX;
                            h = b.pageY;
                            if (b.originalEvent) {
                                var m;
                                b.originalEvent.touches && b.originalEvent.touches.length ? m = b.originalEvent.touches[0] : b.originalEvent.changedTouches && b.originalEvent.changedTouches.length && (m = b.originalEvent.changedTouches[0]);
                                void 0 !== m && (f = m.pageX,
                                h = m.pageY)
                            }
                            this.tooltipOffset.left = f + 10;
                            this.tooltipOffset.top = h + 10;
                            this._detectBrowserBounds()
                        }
                        c.style.borderWidth = "0px";
                        break;
                    case "mouseenter":
                        m = b.pageY;
                        var n = b.pageX;
                        m < this.hostOffset.top + 10 && m > this.hostOffset.top - 10 ? (this.tooltipOffset.left = n - this.tooltipWidth / 2,
                        this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize,
                        this._detectBrowserBounds(),
                        this.tooltipMainOffset = h.offset(),
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r")),
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b"),
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px  0px",
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (k / 2 - this.arrowSize),
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l,
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        })) : m < this.hostOffset.top + this.hostHeight + 10 && m > this.hostOffset.top + this.hostHeight - 10 ? (this.tooltipOffset.left = n - this.tooltipWidth / 2,
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize,
                        this._detectBrowserBounds(),
                        this.tooltipMainOffset = h.offset(),
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r")),
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b"),
                        c.style.borderWidth = "0 " + this.arrowSize + "px " + this.arrowSize + "px",
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (k / 2 - this.arrowSize),
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize,
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        })) : n < this.hostOffset.left + 10 && n > this.hostOffset.left - 10 ? (g = window.getComputedStyle ? window.getComputedStyle(g) : g.currentStyle,
                        this.tooltipOffset.left = this.hostOffset.left - this.tooltipWidth - this.arrowSize - (parseInt(g.borderLeftWidth, 10) + parseInt(g.borderRightWidth, 10)),
                        this.tooltipOffset.top = m - this.tooltipHeight / 2,
                        this._detectBrowserBounds(),
                        this.tooltipMainOffset = h.offset(),
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-t-b")),
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-l-r"),
                        c.style.borderWidth = this.arrowSize + "px 0px " + this.arrowSize + "px " + this.arrowSize + "px",
                        this.tooltipMainOffset = h.offset(),
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + k,
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize,
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        })) : n < this.hostOffset.left + this.hostWidth + 10 && n > this.hostOffset.left + this.hostWidth - 10 && (this.tooltipOffset.left = this.hostOffset.left + this.hostWidth + this.arrowSize,
                        this.tooltipOffset.top = m - this.tooltipHeight / 2,
                        this._detectBrowserBounds(),
                        this.tooltipMainOffset = h.offset(),
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-t-b")),
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-l-r"),
                        c.style.borderWidth = this.arrowSize + "px " + this.arrowSize + "px " + this.arrowSize + "px 0px",
                        this.tooltipMainOffset = h.offset(),
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left - this.arrowSize,
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize,
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        }));
                        break;
                    case "default":
                        this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset,
                        this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize,
                        this._detectBrowserBounds(),
                        this.tooltipMainOffset = h.offset(),
                        d._removeClass(c, d.toThemeProperty("jqx-tooltip-arrow-l-r")),
                        c.className += " " + d.toThemeProperty("jqx-tooltip-arrow-t-b"),
                        c.style.borderWidth = "0 " + this.arrowSize + "px " + this.arrowSize + "px",
                        this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize,
                        this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize,
                        f.offset({
                            top: this.tooltipArrowOffset.top,
                            left: this.tooltipArrowOffset.left
                        })
                    }
                }
        },
        _setContent: function() {
            this._text.innerHTML = this.content
        },
        opened: function() {
            return this._isOpen && "block" == this.host.css("display") && "visible" == this.host.css("visibility")
        },
        _animateShow: function() {
            this._closeAll();
            clearTimeout(this.autoHideTimeout);
            var b = parseFloat(this._tooltip.style.opacity);
            if (!1 === this._isOpen && 0 === b) {
                var d = this;
                d._tooltip.style.visibility = "visible";
                d._tooltip.style.display = "block";
                d._tooltip.style.opacity = 0;
                this.opening && !1 === this.opening(this) || d._tooltipHelper.animate({
                    opacity: this.opacity
                }, this.animationShowDelay, function() {
                    d._raiseEvent("0");
                    d._isOpen = !0;
                    d.openedTooltip = d;
                    e.data(document.body, "_openedTooltip" + d.name, d);
                    d.autoHideTimeout && clearTimeout(d.autoHideTimeout);
                    0 < d.autoHideDelay && !0 === d.autoHide && (d.autoHideTimeout = setTimeout(function() {
                        d._autoHide()
                    }, d.autoHideDelay))
                })
            }
        },
        _trigger: function() {
            if ("removed" !== this._id()) {
                var b = this
                  , d = this.host;
                this.selector && (d = e("#" + this.selector));
                if (!1 === this._isTouchDevice)
                    switch (this.trigger) {
                    case "hover":
                        "mouse" === this.position ? (this.addHandler(d, "mousemove.tooltip", function(c) {
                            1 === b._enterFlag && (b._raiseEvent("2"),
                            b._setPosition(c),
                            clearTimeout(b.hoverShowTimeout),
                            b.hoverShowTimeout = setTimeout(function() {
                                b._animateShow();
                                b._enterFlag = 0
                            }, b.showDelay))
                        }),
                        this.addHandler(d, "mouseenter.tooltip", function() {
                            0 !== b._leaveFlag && (b._enterFlag = 1)
                        }),
                        this.addHandler(d, "mouseleave.tooltip", function(c) {
                            b._leaveFlag = 1;
                            clearTimeout(b.hoverShowTimeout);
                            var f = b._tooltipHelper.offset()
                              , g = b._tooltip.offsetWidth
                              , h = b._tooltip.offsetHeight;
                            (parseInt(c.pageX, 10) < parseInt(f.left, 10) || parseInt(c.pageX, 10) > parseInt(f.left, 10) + g) && b.close();
                            (parseInt(c.pageY, 10) < parseInt(f.top, 10) || parseInt(c.pageY, 10) > parseInt(f.top, 10) + h) && b.close()
                        }),
                        this.addHandler(b._tooltipHelper, "mouseleave.tooltip", function(c) {
                            b._checkBoundariesAuto(c);
                            0 !== b._clickFlag && 0 !== b._autoFlag ? b._leaveFlag = 0 : (b._leaveFlag = 1,
                            b.close())
                        })) : (this.addHandler(d, "mouseenter.tooltip", function(c) {
                            clearTimeout(b.hoverShowTimeout);
                            b.hoverShowTimeout = setTimeout(function() {
                                b._raiseEvent("2");
                                b._setPosition(c);
                                b._animateShow()
                            }, b.showDelay)
                        }),
                        this.addHandler(d, "mouseleave.tooltip", function(c) {
                            b._leaveFlag = 1;
                            clearTimeout(b.hoverShowTimeout);
                            if (b.autoHide) {
                                var f = c.pageX;
                                c = c.pageY;
                                var g = b._tooltipHelper.offset()
                                  , h = g.left;
                                g = g.top;
                                var k = b._tooltip.offsetWidth
                                  , l = b._tooltip.offsetHeight;
                                (parseInt(f, 10) < parseInt(h, 10) || parseInt(f, 10) > parseInt(h, 10) + k || parseInt(c, 10) < parseInt(g, 10) || parseInt(c, 10) > parseInt(g, 10) + l) && b.close()
                            }
                        }),
                        this.addHandler(b._tooltipHelper, "mouseleave.tooltip", function(c) {
                            b._checkBoundariesAuto(c);
                            0 !== b._clickFlag && 0 !== b._autoFlag ? b._leaveFlag = 0 : (b._leaveFlag = 1,
                            b.autoHide && b.close())
                        }));
                        break;
                    case "click":
                        this.addHandler(d, "click.tooltip", function(c) {
                            "mouseenter" === b.position && (b.position = "mouse");
                            b._raiseEvent("2");
                            b._setPosition(c);
                            b._animateShow()
                        })
                    }
                else
                    "none" !== this.trigger && this.addHandler(d, "touchstart.tooltip", function(c) {
                        "mouseenter" === b.position && (b.position = "mouse");
                        b._raiseEvent("2");
                        b._setPosition(c);
                        b._animateShow()
                    })
            }
        },
        _autoHide: function() {
            var b = this
              , d = parseFloat(b._tooltip.style.opacity);
            !0 === this.autoHide && !0 === this._isOpen && d >= this.opacity && (b._raiseEvent("3"),
            b._tooltipHelper.animate({
                opacity: 0
            }, b.animationHideDelay, function() {
                b._tooltip.style.visibility = "hidden";
                b._tooltip.style.display = "none";
                b._raiseEvent("1");
                b._isOpen = !1
            }))
        },
        _clickHide: function() {
            var b = this;
            this.addHandler(b._tooltipHelper, "click.tooltip", function(d) {
                b._checkBoundariesClick(d);
                b.close()
            })
        },
        _setSize: function() {
            this._tooltip.style.width = this._toPx(this.width);
            this._tooltip.style.height = this._toPx(this.height)
        },
        resize: function() {
            this._setSize()
        },
        _setTheme: function() {
            -1 === this._tooltip.className.indexOf("jqx-tooltip") && (this._tooltip.className += " " + this.toThemeProperty("jqx-tooltip jqx-popup"),
            this._main.className += " " + this.toThemeProperty("jqx-widget jqx-fill-state-normal jqx-tooltip-main"),
            this._text.className += " " + this.toThemeProperty("jqx-widget jqx-fill-state-normal jqx-tooltip-text"),
            this._arrow && (this._arrow.className += " " + this.toThemeProperty("jqx-widget jqx-fill-state-normal jqx-tooltip-arrow")))
        },
        _initialPosition: function() {
            var b = this.position;
            this.position = "default";
            this._setPosition();
            this.position = b
        },
        _detectBrowserBounds: function() {
            var b = this._tooltipHelper;
            this.enableBrowserBoundsDetection ? this.tooltipOffset.top < this.documentTop && 0 > this.tooltipOffset.left ? b.offset({
                top: this.documentTop,
                left: this.documentLeft
            }) : this.tooltipOffset.top < this.documentTop && this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft ? b.offset({
                top: this.documentTop,
                left: this.windowWidth + this.documentLeft - this.tooltipWidth
            }) : this.tooltipOffset.top < this.documentTop ? b.offset({
                top: this.documentTop,
                left: this.tooltipOffset.left
            }) : this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop && 0 > this.tooltipOffset.left ? b.offset({
                top: this.windowHeight + this.documentTop - this.tooltipHeight,
                left: this.documentLeft
            }) : this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop && this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft ? b.offset({
                top: this.windowHeight + this.documentTop - this.tooltipHeight,
                left: this.windowWidth + this.documentLeft - this.tooltipWidth
            }) : this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop ? b.offset({
                top: this.windowHeight + this.documentTop - this.tooltipHeight,
                left: this.tooltipOffset.left
            }) : 0 > this.tooltipOffset.left ? b.offset({
                top: this.tooltipOffset.top,
                left: this.documentLeft
            }) : this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft ? b.offset({
                top: this.tooltipOffset.top,
                left: this.windowWidth + this.documentLeft - this.tooltipWidth
            }) : b.offset({
                top: this.tooltipOffset.top,
                left: this.tooltipOffset.left
            }) : b.offset({
                top: this.tooltipOffset.top,
                left: this.tooltipOffset.left
            })
        },
        _checkBoundaries: function(b) {
            return b.pageX >= this.hostOffset.left && b.pageX <= this.hostOffset.left + this.hostWidth && b.pageY >= this.hostOffset.top && b.pageY <= this.hostOffset.top + this.hostHeight ? !0 : !1
        },
        _checkBoundariesClick: function(b) {
            this._checkBoundaries(b) ? this._clickFlag = 1 : this._clickFlag = 0
        },
        _checkBoundariesAuto: function(b) {
            this._checkBoundaries(b) ? this._autoFlag = 1 : this._autoFlag = 0
        },
        _removeHandlers: function() {
            this.removeHandler(this.host, "mouseenter.tooltip");
            this.removeHandler(this.host, "mousemove.tooltip");
            this.removeHandler(this.host, "mouseleave.tooltip");
            this.removeHandler(this.host, "click.tooltip");
            this.removeHandler(this.host, "touchstart.tooltip");
            this.removeHandler(this._tooltipHelper, "click.tooltip");
            this.removeHandler(this._tooltipHelper, "mouseleave.tooltip")
        },
        _closeAll: function() {
            for (var b = 0; b < this.IDArray.length; b++) {
                var d = document.getElementById(this.IDArray[b].tooltipID);
                d !== this._tooltip && (d.style.opacity = 0,
                d.style.visibility = "hidden",
                d.style.display = "none",
                this._isOpen = !1)
            }
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        },
        _removeClass: function(b, d) {
            e(b).removeClass(d)
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxCheckBox", "", {});
    e.extend(e.jqx._jqxCheckBox.prototype, {
        defineInstance: function() {
            var b = {
                animationShowDelay: 300,
                animationHideDelay: 300,
                width: null,
                height: null,
                boxSize: "16px",
                checked: !1,
                hasThreeStates: !1,
                disabled: !1,
                enableContainerClick: !0,
                locked: !1,
                groupName: "",
                keyboardCheck: !0,
                enableHover: !0,
                hasInput: !0,
                rtl: !1,
                updated: null,
                disabledContainer: !1,
                changeType: null,
                _canFocus: !0,
                aria: {
                    "aria-checked": {
                        name: "checked",
                        type: "boolean"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["checked", "unchecked", "indeterminate", "change"]
            };
            if (this === e.jqx._jqxCheckBox.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function(b) {
            this._createFromInput("CheckBox");
            this.render()
        },
        _createFromInput: function(b) {
            if ("input" == this.element.nodeName.toLowerCase()) {
                this.field = this.element;
                this.field.className && (this._className = this.field.className);
                var d = {
                    title: this.field.title
                };
                this.field.value && (d.value = this.field.value);
                this.field.checked && (d.checked = !0);
                d.id = this.field.id.length ? this.field.id.replace(/[^\w]/g, "_") + "_" + b : e.jqx.utilities.createId() + "_" + b;
                var c = this.element.nextSibling
                  , f = !1;
                !c || "#text" != c.nodeName && "span" != c.nodeName || (f = !0);
                var g = 0;
                b = e("<div></div>", d);
                f && (b.append(c),
                c = e("<span>" + e(c).text() + "</span>"),
                c.appendTo(e(document.body)),
                g += c.width(),
                c.remove());
                b[0].style.cssText = this.field.style.cssText;
                this.width || (this.width = e(this.field).width() + g + 10);
                this.height || (this.height = e(this.field).outerHeight() + 10);
                e(this.field).hide().after(b);
                g = this.host.data();
                this.host = b;
                this.host.data(g);
                this.element = b[0];
                this.element.id = this.field.id;
                this.field.id = d.id;
                this._className && (this.host.addClass(this._className),
                e(this.field).removeClass(this._className));
                this.field.tabIndex && (d = this.field.tabIndex,
                this.field.tabIndex = -1,
                this.element.tabIndex = d)
            }
        },
        _addInput: function() {
            if (this.hasInput) {
                this.input && this.input.remove();
                var b = this.host.attr("name");
                this.input = e("<input type='hidden'/>");
                this.host.append(this.input);
                b && this.input.attr("name", b);
                this.input.val(this.checked);
                this.host.attr("role", "checkbox");
                e.jqx.aria(this)
            }
        },
        render: function() {
            this.init = !0;
            var b = this;
            this.setSize();
            this.propertyChangeMap.width = function(g, h, k, l) {
                b.setSize()
            }
            ;
            this.propertyChangeMap.height = function(g, h, k, l) {
                b.setSize()
            }
            ;
            this._removeHandlers();
            this.width || this.host.css("overflow-x", "visible");
            this.height || this.host.css("overflow-y", "visible");
            this.checkbox && (this.checkbox.remove(),
            this.checkbox = null);
            this.checkMark && (this.checkMark.remove(),
            this.checkMark = null);
            this.box && (this.box.remove(),
            this.box = null);
            this.clear && (this.clear.remove(),
            this.clear = null);
            null == this.boxSize && (this.boxSize = 16);
            var d = parseInt(this.boxSize) + "px"
              , c = Math.floor((parseInt(this.boxSize) - 16) / 2)
              , f = c;
            c += "px";
            f += "px";
            16 != parseInt(this.boxSize) ? this.checkbox = e('<div><div style="width: ' + d + "; height: " + d + ';"><span style="position: relative; left: ' + c + "; top: " + f + '; width: 16px; height: 16px;"></span></div></div>') : this.checkbox = e('<div><div style="width: ' + d + "; height: " + d + ';"><span style="width: ' + d + "; height: " + d + ';"></span></div></div>');
            this.host.prepend(this.checkbox);
            this.disabledContainer || (this.host.attr("tabIndex") || this.host.attr("tabIndex", 0),
            this.clear = e('<div style="clear: both;"></div>'),
            this.host.append(this.clear));
            this.checkMark = e(this.checkbox[0].firstChild.firstChild);
            this.box = this.checkbox;
            this.box.addClass(this.toThemeProperty("jqx-checkbox-default") + " " + this.toThemeProperty("jqx-fill-state-normal") + " " + this.toThemeProperty("jqx-rc-all"));
            this.disabled && this.disable();
            this.disabledContainer || (this.host.addClass(this.toThemeProperty("jqx-widget")),
            this.host.addClass(this.toThemeProperty("jqx-checkbox")));
            this.locked && !this.disabledContainer && this.host.css("cursor", "auto");
            d = this.element.getAttribute("checked");
            if ("checked" == d || "true" == d || 1 == d)
                this.checked = !0;
            this._addInput();
            this._render();
            this._addHandlers();
            this.init = !1;
            this._centerBox();
            this.isMaterialized() && (e(this.checkbox).addClass("ripple"),
            e.jqx.ripple(e(this.checkbox), this.host, "checkbox"))
        },
        _centerBox: function() {
            if (this.height && -1 == this.height.toString().indexOf("%") && this.box) {
                var b = parseInt(this.height);
                this.host.css("line-height", b + "px");
                b = b - parseInt(this.boxSize) - 1;
                this.box.css("margin-top", parseInt(b / 2))
            }
        },
        refresh: function(b) {
            b || (this.setSize(),
            this._render())
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this.refresh()
        },
        setSize: function() {
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : void 0 == this.width || isNaN(this.width) ? null != this.width && -1 != this.width.toString().indexOf("%") && (this.element.style.width = this.width) : this.host.width(this.width);
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : void 0 == this.height || isNaN(this.height) ? null != this.height && -1 != this.height.toString().indexOf("%") && (this.element.style.height = this.height) : this.host.height(this.height);
            this._centerBox()
        },
        _addHandlers: function() {
            var b = this
              , d = "mousedown";
            e.jqx.mobile.isTouchDevice() && (d = e.jqx.mobile.getTouchEventName("touchend"));
            this.addHandler(this.box, d, function(c) {
                if (!b.disabled && !b.enableContainerClick && !b.locked)
                    return b.changeType = "mouse",
                    b.toggle(),
                    b.updated && (c.owner = b,
                    b.updated(c, b.checked, b.oldChecked)),
                    c.preventDefault && c.preventDefault(),
                    !1
            });
            this.disabledContainer || (this.addHandler(this.host, "keydown", function(c) {
                if (!b.disabled && !b.locked && b.keyboardCheck && 32 == c.keyCode) {
                    if (!b._canFocus)
                        return !0;
                    b.changeType = "keyboard";
                    b.toggle();
                    b.updated && (c.owner = b,
                    b.updated(c, b.checked, b.oldChecked));
                    c.preventDefault && c.preventDefault();
                    return !1
                }
            }),
            this.addHandler(this.host, d, function(c) {
                if (!b.disabled && b.enableContainerClick && !b.locked)
                    return b.clickTime = new Date,
                    b.changeType = "mouse",
                    b.toggle(),
                    c.preventDefault && c.preventDefault(),
                    b._canFocus && b.focus(),
                    !1
            }),
            this.addHandler(this.host, "selectstart", function(c) {
                if (!b.disabled && b.enableContainerClick)
                    return c.preventDefault && c.preventDefault(),
                    !1
            }),
            this.addHandler(this.host, "mouseup", function(c) {
                !b.disabled && b.enableContainerClick && c.preventDefault && c.preventDefault()
            }),
            this.addHandler(this.host, "focus", function(c) {
                if (!b.disabled && !b.locked) {
                    if (!b._canFocus)
                        return !0;
                    b.enableHover && b.box.addClass(b.toThemeProperty("jqx-checkbox-hover"));
                    b.box.addClass(b.toThemeProperty("jqx-fill-state-focus"));
                    c.preventDefault && c.preventDefault();
                    e(b.checkbox).removeClass("active");
                    (!b.clickTime || b.clickTime && 300 < new Date - b.clickTime) && e(b.checkbox).addClass("active");
                    b.hovered = !0;
                    return !1
                }
            }),
            this.addHandler(this.host, "blur", function(c) {
                e(b.checkbox).removeClass("active");
                if (!b.disabled && !b.locked) {
                    if (!b._canFocus)
                        return !0;
                    b.enableHover && b.box.removeClass(b.toThemeProperty("jqx-checkbox-hover"));
                    b.box.removeClass(b.toThemeProperty("jqx-fill-state-focus"));
                    c.preventDefault && c.preventDefault();
                    return b.hovered = !1
                }
            }),
            this.addHandler(this.host, "mouseenter", function(c) {
                b.locked && b.host.css("cursor", "arrow");
                if (b.enableHover && !b.disabled && b.enableContainerClick && !b.locked)
                    return b.box.addClass(b.toThemeProperty("jqx-checkbox-hover")),
                    b.box.addClass(b.toThemeProperty("jqx-fill-state-hover")),
                    c.preventDefault && c.preventDefault(),
                    b.hovered = !0,
                    !1
            }),
            this.addHandler(this.host, "mouseleave", function(c) {
                if (b.enableHover && !b.disabled && b.enableContainerClick && !b.locked)
                    return b.box.removeClass(b.toThemeProperty("jqx-checkbox-hover")),
                    b.box.removeClass(b.toThemeProperty("jqx-fill-state-hover")),
                    c.preventDefault && c.preventDefault(),
                    b.hovered = !1
            }),
            this.addHandler(this.box, "mouseenter", function() {
                b.locked || b.disabled || b.enableContainerClick || (b.box.addClass(b.toThemeProperty("jqx-checkbox-hover")),
                b.box.addClass(b.toThemeProperty("jqx-fill-state-hover")))
            }),
            this.addHandler(this.box, "mouseleave", function() {
                b.disabled || b.enableContainerClick || (b.box.removeClass(b.toThemeProperty("jqx-checkbox-hover")),
                b.box.removeClass(b.toThemeProperty("jqx-fill-state-hover")))
            }))
        },
        focus: function() {
            try {
                this.host.focus()
            } catch (b) {}
        },
        _removeHandlers: function() {
            var b = "mousedown";
            e.jqx.mobile.isTouchDevice() && (b = "touchend");
            this.box && (this.removeHandler(this.box, b),
            this.removeHandler(this.box, "mouseenter"),
            this.removeHandler(this.box, "mouseleave"));
            this.removeHandler(this.host, b);
            this.removeHandler(this.host, "mouseup");
            this.removeHandler(this.host, "selectstart");
            this.removeHandler(this.host, "mouseenter");
            this.removeHandler(this.host, "mouseleave");
            this.removeHandler(this.host, "keydown");
            this.removeHandler(this.host, "blur");
            this.removeHandler(this.host, "focus")
        },
        _render: function() {
            this.disabled ? this.disable() : this.enableContainerClick ? this.host.css("cursor", "pointer") : this.init || this.host.css("cursor", "auto");
            this.rtl && (this.box.addClass(this.toThemeProperty("jqx-checkbox-rtl")),
            this.host.addClass(this.toThemeProperty("jqx-rtl")));
            this.updateStates();
            this.host.attr("checked", this.checked)
        },
        _setState: function(b, d) {
            this.checked != b && (this.checked = b,
            this.checkMark[0].className = this.checked ? this.toThemeProperty("jqx-checkbox-check-checked") : null == this.checked ? this.toThemeProperty("jqx-checkbox-check-indeterminate") : "");
            if (!1 === d || !0 === d)
                this.locked = d;
            b ? this.element.setAttribute("checked", !0) : this.element.removeAttribute("checked")
        },
        val: function(b) {
            if (0 == arguments.length || null != b && "object" == typeof b)
                return this.checked;
            "string" == typeof b ? ("true" == b && this.check(),
            "false" == b && this.uncheck(),
            "" == b && this.indeterminate()) : (1 == b && this.check(),
            0 == b && this.uncheck(),
            null == b && this.indeterminate());
            return this.checked
        },
        check: function() {
            this.checked = !0;
            var b = this;
            this.checkMark.removeClass();
            this.element.setAttribute("checked", !0);
            e.jqx.browser.msie || 0 == this.animationShowDelay ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked")) : (this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {}));
            if (null != this.groupName && 0 < this.groupName.length) {
                var d = e.find(this.toThemeProperty(".jqx-checkbox", !0));
                e.each(d, function() {
                    e(this).jqxCheckBox("groupName") == b.groupName && this != b.element && e(this).jqxCheckBox("uncheck")
                })
            }
            d = this.changeType;
            this._raiseEvent("0", {
                checked: !0
            });
            this.changeType = d;
            this._raiseEvent("3", {
                checked: !0
            });
            void 0 != this.input && (this.input.val(this.checked),
            e.jqx.aria(this, "aria-checked", this.checked),
            this.host.attr("checked", this.checked))
        },
        uncheck: function() {
            this.checked = !1;
            var b = this;
            this.element.removeAttribute("checked");
            e.jqx.browser.msie || 0 == this.animationHideDelay ? "" != b.checkMark[0].className && (b.checkMark[0].className = "") : (this.checkMark.css("opacity", 1),
            this.checkMark.stop().animate({
                opacity: 0
            }, this.animationHideDelay, function() {
                "" != b.checkMark[0].className && (b.checkMark[0].className = "")
            }));
            var d = this.changeType;
            this._raiseEvent("1");
            this.changeType = d;
            this._raiseEvent("3", {
                checked: !1
            });
            void 0 != this.input && (this.input.val(this.checked),
            e.jqx.aria(this, "aria-checked", this.checked),
            this.host.attr("checked", this.checked))
        },
        indeterminate: function() {
            this.checked = null;
            this.checkMark.removeClass();
            e.jqx.browser.msie || 0 == this.animationShowDelay ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate")) : (this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {}));
            this._raiseEvent("2");
            this._raiseEvent("3", {
                checked: null
            });
            void 0 != this.input && (this.input.val(this.checked),
            e.jqx.aria(this, "aria-checked", "undefined"),
            this.host.attr("checked", "undefined"))
        },
        toggle: function() {
            this.disabled || this.locked || (null != this.groupName && 0 < this.groupName.length ? 1 != this.checked && (this.checked = !0,
            this.updateStates()) : (this.oldChecked = this.checked,
            this.checked = 1 == this.checked ? this.hasThreeStates ? null : !1 : null != this.checked,
            this.updateStates(),
            void 0 != this.input && this.input.val(this.checked)))
        },
        updateStates: function() {
            this.checked ? this.check() : 0 == this.checked ? this.uncheck() : null == this.checked && this.indeterminate()
        },
        disable: function() {
            this.disabled = !0;
            1 == this.checked ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-disabled")) : null == this.checked && this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled"));
            this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled-box"));
            this.host.addClass(this.toThemeProperty("jqx-checkbox-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled"));
            e.jqx.aria(this, "aria-disabled", this.disabled)
        },
        enable: function() {
            1 == this.checked ? this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-disabled")) : null == this.checked && this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled"));
            this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled-box"));
            this.host.removeClass(this.toThemeProperty("jqx-checkbox-disabled"));
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled"));
            this.disabled = !1;
            e.jqx.aria(this, "aria-disabled", this.disabled)
        },
        destroy: function() {
            this.host.remove()
        },
        _raiseEvent: function(b, d) {
            if (!this.init) {
                b = new e.Event(this.events[b]);
                b.owner = this;
                d || (d = {});
                d.type = this.changeType;
                this.changeType = null;
                b.args = d;
                try {
                    var c = this.host.trigger(b)
                } catch (f) {}
                return c
            }
        },
        propertiesChangedHandler: function(b, d, c) {
            c.width && c.height && 2 == Object.keys(c).length && b.setSize()
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (void 0 != this.isInitialized && 0 != this.isInitialized && !(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 == Object.keys(b.batchUpdate).length)) {
                "enableContainerClick" != d || b.disabled || b.locked || (f ? b.host.css("cursor", "pointer") : b.host.css("cursor", "auto"));
                "rtl" == d && (f ? (b.box.addClass(b.toThemeProperty("jqx-checkbox-rtl")),
                b.host.addClass(b.toThemeProperty("jqx-rtl"))) : (b.box.removeClass(b.toThemeProperty("jqx-checkbox-rtl")),
                b.host.removeClass(b.toThemeProperty("jqx-rtl"))));
                "boxSize" == d && b.render();
                "theme" == d && e.jqx.utilities.setTheme(c, f, b.host);
                if ("checked" == d && f != c)
                    switch (f) {
                    case !0:
                        b.check();
                        break;
                    case !1:
                        b.uncheck();
                        break;
                    case null:
                        b.indeterminate()
                    }
                "disabled" == d && f != c && (f ? b.disable() : b.enable())
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxRibbon", "", {});
    e.extend(e.jqx._jqxRibbon.prototype, {
        defineInstance: function() {
            var b = {
                width: null,
                height: "auto",
                mode: "default",
                position: "top",
                selectedIndex: -1,
                selectionMode: "click",
                popupCloseMode: "click",
                animationType: "fade",
                animationDelay: 400,
                scrollPosition: "both",
                disabled: !1,
                rtl: !1,
                scrollStep: 10,
                scrollDelay: 30,
                reorder: !1,
                initContent: null,
                _roundedCorners: !0,
                _removeByDrag: !1,
                _suppressReorder: !0,
                events: ["select", "unselect", "change", "_removeByDrag", "reorder"]
            };
            if (this === e.jqx._jqxRibbon.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            if ("none" === this.host.css("display") || !1 === document.body.contains(this.element))
                this._initiallyHidden = !0;
            this._browser = e.jqx.browser;
            "popup" !== this.mode && -1 === this.selectedIndex && (this.selectedIndex = 0);
            this._originalHTML = this.element.innerHTML;
            this._render(!0)
        },
        render: function() {
            this._render()
        },
        refresh: function(b) {
            !0 !== b && this._render()
        },
        destroy: function() {
            this._removeHandlers();
            this.host.remove()
        },
        selectAt: function(b) {
            this._selectAt(b)
        },
        clearSelection: function() {
            -1 !== this.selectedIndex && this._clearSelection()
        },
        disableAt: function(b) {
            this._items[b]._disabled = !0;
            e(this._items[b]).addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            b === this.selectedIndex && this._clearSelection()
        },
        enableAt: function(b) {
            this._items[b]._disabled = !1;
            e(this._items[b]).removeClass(this.toThemeProperty("jqx-fill-state-disabled"))
        },
        hideAt: function(b) {
            this._items[b].style.display = "none";
            this._checkScrollButtons();
            b === this.selectedIndex ? this._clearSelection() : this._updatePositions()
        },
        showAt: function(b) {
            this._items[b].style.display = "horizontal" === this._orientation ? "inline-block" : "inherit";
            this._checkScrollButtons();
            this._updatePositions()
        },
        val: function(b) {
            if (b)
                this._selectAt(b);
            else
                return this.selectedIndex
        },
        addAt: function(b, d) {
            var c = "jqx-ribbon-item jqx-ribbon-item-" + this.position
              , f = "jqx-widget-content jqx-ribbon-content-section jqx-ribbon-content-section-" + this.position;
            this._removeHandlers();
            var g = document.createElement("li");
            g.innerHTML = d.title;
            var h = document.createElement("div");
            if ("string" === typeof d.content)
                h.innerHTML = d.content;
            else if (void 0 !== d.content.length)
                try {
                    if (void 0 !== window.$ && d.content instanceof window.$)
                        e(h).append(d.content);
                    else if (e.isArray(d.content))
                        for (var k = 0; k < d.content.length; k++)
                            d.content[k].appendTo(h);
                    else
                        for (; 0 < d.content.length; )
                            h.appendChild(d.content[0])
                } catch (l) {}
            else
                h.appendChild(d.content);
            switch (this.position) {
            case "top":
                c += " jqx-rc-t";
                f += " jqx-rc-b";
                break;
            case "bottom":
                c += " jqx-rc-b";
                f += " jqx-rc-t";
                break;
            case "left":
                c += " jqx-rc-l";
                f += " jqx-rc-r";
                break;
            case "right":
                c += " jqx-rc-r",
                f += " jqx-rc-l"
            }
            "popup" === this.mode && (f += " jqx-ribbon-content-section-popup jqx-ribbon-content-section-" + this._orientation + "-popup");
            !0 === this.rtl && (c += " jqx-ribbon-item-rtl");
            g.className = this.toThemeProperty(c);
            h.className = this.toThemeProperty(f);
            this._items.length - 1 >= b ? (this._headerElement.insertBefore(g, this._items[b]),
            this._contentElement.insertBefore(h, this._contentSections[b])) : (this._headerElement.appendChild(g),
            this._contentElement.appendChild(h));
            this._updateItems();
            this._addHandlers();
            this._checkScrollButtons();
            b <= this.selectedIndex && this.selectedIndex < this._items.length - 1 && this.selectedIndex++;
            this._updatePositions();
            0 > this.selectedIndex || (this._suppressSelectionEvents = !0,
            this._selectAt(this.selectedIndex, this.selectedIndex, !0))
        },
        removeAt: function(b) {
            b === this.selectedIndex && this._clearSelection();
            e(this._items[b]).remove();
            e(this._contentSections[b]).remove();
            this._updateItems(!0);
            this._updatePositions();
            this._checkScrollButtons()
        },
        updateAt: function(b, d) {
            var c = this._items[b];
            c.innerHTML = d.newTitle;
            this._contentSections[b].innerHTML = d.newContent;
            c._isInitialized = !1;
            this.initContent && b === this.selectedIndex && (this.initContent(b),
            c._isInitialized = !0);
            this._updatePositions()
        },
        setPopupLayout: function(b, d, c, f) {
            var g = this._contentSections[b];
            "popup" === this.mode && (g.getAttribute("data-width") || (g.style.width && g.setAttribute("data-width", g.style.width),
            g.style.height && g.setAttribute("data-height", g.style.height)),
            c && (g.style.width = this._toPx(c)),
            f && (g.style.height = this._toPx(f)),
            g._layout = d,
            this._positionContent(b))
        },
        propertiesChangedHandler: function(b, d, c) {
            c && c.width && c.height && 2 === Object.keys(c).length && (b.element.style.width = b._toPx(b.width),
            b.element.style.height = b._toPx(b.height),
            b._updateSize())
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (!(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 === Object.keys(b.batchUpdate).length) && f !== c)
                switch (d) {
                case "width":
                case "height":
                    b.element.style[d] = b._toPx(f);
                    b._updateSize();
                    break;
                case "position":
                    b._render();
                    break;
                case "mode":
                    b._contentElement.style.width = "auto";
                    b._removeHandlers(null, c);
                    b._render();
                    break;
                case "selectedIndex":
                    b._selectAt(f, c);
                    break;
                case "selectionMode":
                    b._removeHandlers(c);
                    b._addHandlers();
                    break;
                case "scrollPosition":
                    d = b._scrollButtonNear;
                    var g = b._scrollButtonFar;
                    e(d).removeClass(b.toThemeProperty("jqx-ribbon-scrollbutton-" + c + " jqx-rc-tr jqx-rc-bl jqx-rc-tl"));
                    e(g).removeClass(b.toThemeProperty("jqx-ribbon-scrollbutton-" + c + " jqx-rc-tr jqx-rc-bl jqx-rc-br"));
                    d.className += " " + b.toThemeProperty("jqx-ribbon-scrollbutton-" + f);
                    g.className += " " + b.toThemeProperty("jqx-ribbon-scrollbutton-" + f);
                    b._scrollButtonRc(d, g);
                    b._checkScrollButtons();
                    b._updatePositions();
                    break;
                case "disabled":
                    !0 === f ? (b._removeHandlers(),
                    b.element.className += " " + b.toThemeProperty("jqx-fill-state-disabled")) : (b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled")),
                    b._addHandlers());
                    break;
                case "theme":
                    e.jqx.utilities.setTheme(c, f, b.host);
                    break;
                case "rtl":
                    if (!0 === f)
                        for (b._headerElement.className += " " + b.toThemeProperty("jqx-ribbon-header-rtl"),
                        c = 0; c < b._items.length; c++)
                            b._items[c].className += " " + b.toThemeProperty("jqx-ribbon-item-rtl");
                    else
                        for (b._header.removeClass(b.toThemeProperty("jqx-ribbon-header-rtl")),
                        c = 0; c < b._items.length; c++)
                            e(b._items[c]).removeClass(b.toThemeProperty("jqx-ribbon-item-rtl"));
                    b._positionSelectionToken(b.selectedIndex)
                }
        },
        _raiseEvent: function(b, d) {
            b = new e.Event(this.events[b]);
            b.owner = this;
            b.args = d;
            try {
                var c = this.host.trigger(b)
            } catch (f) {}
            return c
        },
        _render: function(b) {
            var d = this;
            !0 !== b && d._removeHandlers();
            d._selectionTokenOffsetY = 0;
            switch (d._browser.browser) {
            case "mozilla":
                d._browserWidthRtlFlag = 0;
                d._browserScrollRtlFlag = 1;
                d._selectionTokenOffsetX = 1;
                break;
            case "msie":
                d._browserWidthRtlFlag = 0;
                d._browserScrollRtlFlag = -1;
                "8.0" === d._browser.version ? d._selectionTokenOffsetX = 1 : "7.0" === d._browser.version ? (d._selectionTokenOffsetX = 0,
                "popup" !== d.mode || "bottom" !== d.position && "right" !== d.position || (d._selectionTokenOffsetY = 2)) : d._selectionTokenOffsetX = 0;
                break;
            default:
                d._browserWidthRtlFlag = 1,
                d._browserScrollRtlFlag = 1,
                d._selectionTokenOffsetX = 0
            }
            if (!0 === b) {
                var c = d.host.children();
                d._headerElement = c[0];
                d._header = e(c[0]);
                d._contentElement = c[1];
                d._content = e(c[1]);
                d._checkStructure(c);
                d._refreshBarPosition()
            }
            d._headerElement.style["float"] = "none";
            d._contentElement.style.padding = "0px";
            d.element.style.width = d._toPx(d.width);
            d.element.style.height = d._toPx(d.height);
            "bottom" !== d.position && "right" !== d.position || d.element.insertBefore(d._contentElement, d._headerElement);
            d._orientation = "top" === d.position || "bottom" === d.position ? "horizontal" : "vertical";
            "right" === d.position ? d._headerElement.style["float"] = "right" : "left" === d.position && (d._headerElement.style["float"] = "left");
            d._contentSections = d._content.children();
            e.each(d._contentSections, function() {
                this.getAttribute("data-width") && (this.style.width = this.getAttribute("data-width"),
                this.style.height = this.getAttribute("data-height"),
                this.removeAttribute("data-width"),
                this.removeAttribute("data-height"))
            });
            !0 === b && (d._selectionToken = document.createElement("div"),
            d._selectionToken.className = d.toThemeProperty("jqx-widget-content jqx-ribbon-selection-token jqx-ribbon-selection-token-" + d.position),
            d.element.appendChild(d._selectionToken));
            d._updateItems();
            !0 !== d._initiallyHidden && d._addClasses();
            !0 === b && (d._appendScrollButtons(),
            d._checkScrollButtons());
            d._allowSelection = !0;
            -1 !== d.selectedIndex && (d._items[d.selectedIndex].className += " " + d.toThemeProperty("jqx-widget-content jqx-ribbon-item-selected"),
            d._positionSelectionToken(d.selectedIndex),
            d._contentSections[d.selectedIndex].style.display = "block",
            d.initContent && (d.initContent(d.selectedIndex),
            d._items[d.selectedIndex]._isInitialized = !0));
            d.disabled ? d.element.className += " " + d.toThemeProperty("jqx-fill-state-disabled") : d._addHandlers();
            e.jqx.utilities.resize(d.host, function() {
                d._initiallyHidden && (d._initiallyHidden = !1,
                d._addClasses(),
                -1 !== d.selectedIndex && (d._items[d.selectedIndex].className += " " + d.toThemeProperty("jqx-widget-content jqx-ribbon-item-selected")));
                d._updateSize(!0)
            });
            "popup" === d.mode && "" !== d.theme && setTimeout(function() {
                d._positionPopup();
                d._positionSelectionToken(d.selectedIndex)
            }, 30)
        },
        _updateSize: function(b) {
            if ("7.0" === this._browser.version && "msie" === this._browser.browser)
                if ("horizontal" === this._orientation)
                    this._header.css("width", this.host.width() - parseInt(this._header.css("padding-left"), 10) - parseInt(this._header.css("padding-right"), 10) - parseInt(this._header.css("border-left-width"), 10) - parseInt(this._header.css("border-right-width"), 10)),
                    this._contentSections.width(this._content.width() - parseInt(this._contentSections.css("border-left-width"), 10) - parseInt(this._contentSections.css("border-right-width"), 10) - parseInt(this._contentSections.css("padding-left"), 10) - parseInt(this._contentSections.css("padding-right"), 10)),
                    "default" === this.mode && "string" === typeof this.height && -1 !== this.height.indexOf("%") && this._contentSections.height(this._content.height() - this._header.height() - parseInt(this._contentSections.css("border-bottom-width"), 10) - parseInt(this._contentSections.css("border-top-width"), 10) - 1);
                else if (this._header.css("height", this.host.height() - parseInt(this._header.css("padding-top"), 10) - parseInt(this._header.css("padding-bottom"), 10) - parseInt(this._header.css("border-top-width"), 10) - parseInt(this._header.css("border-bottom-width"), 10)),
                this._contentSections.height(this._content.height() - parseInt(this._contentSections.css("border-top-width"), 10) - parseInt(this._contentSections.css("border-bottom-width"), 10) - parseInt(this._contentSections.css("padding-top"), 10) - parseInt(this._contentSections.css("padding-bottom"), 10)),
                "default" === this.mode && "string" === typeof this.width && -1 !== this.height.indexOf("%")) {
                    var d = "left" === this.position ? parseInt(this._contentSections.css("border-left-width"), 10) + parseInt(this._contentSections.css("border-right-width"), 10) + 1 : 0;
                    this._contentSections.width(this._content.width() - this._header.width() - d)
                }
            this._checkScrollButtons(!0);
            this._updatePositions(void 0, b);
            "popup" === this.mode && this._positionPopup();
            this._refreshBarPosition()
        },
        _stopAnimation: function() {
            if (!this._allowSelection) {
                this.selectedIndex = this._animatingIndex;
                var b = e(this._contentSections[this._animatingIndex]);
                this._initAnimate(b);
                b.animate("finish");
                this._clearSelection(!0, this._animatingIndex);
                this._allowSelection = !0
            }
        },
        _refreshBarPosition: function() {
            var b = this;
            if (!this.bar) {
                var d = e("<span></span>");
                e(this.host).append(d);
                d.addClass(this.toThemeProperty("jqx-tabs-bar"));
                this.bar = d
            }
            setTimeout(function() {
                var c = parseInt(e(b._headerElement).css("left"), 10) - b._headerElement.scrollLeft
                  , f = parseInt(e(b._headerElement).css("top"), 10) - b._headerElement.scrollTop
                  , g = void 0 !== b._animatingIndex ? b._animatingIndex : b.selectedIndex;
                b._items[g] && b.bar && ("top" === b.position || "bottom" === b.position ? (b.bar.css("left", b._items[g].offsetLeft + c),
                "top" === b.position ? b.bar.css("top", b._items[g].offsetTop + f + b._items[g].offsetHeight) : b.bar.css("top", f),
                b.bar.width(e(b._items[g]).outerWidth() - 2),
                b.bar.removeClass(b.toThemeProperty("vertical"))) : ("left" === b.position ? b.bar.css("left", b._items[g].offsetLeft + c + b._items[g].offsetWidth) : b.bar.css("left", b._items[g].offsetLeft + c),
                b.bar.css("top", f + b._items[g].offsetTop),
                b.bar.height(e(b._items[g]).outerHeight() - 2),
                b.bar.addClass(b.toThemeProperty("vertical"))))
            })
        },
        _selectAt: function(b, d, c) {
            var f = this;
            void 0 === d && (d = f.selectedIndex);
            if (b !== d || !0 === c)
                if (f._stopAnimation(),
                f._refreshBarPosition(),
                f._allowSelection) {
                    f._animatingIndex = b;
                    -1 !== f.selectedIndex && f._clearSelection(!0, d);
                    f._allowSelection = !1;
                    f._selecting = b;
                    "click" === f.selectionMode && e(f._items[b]).removeClass(f.toThemeProperty("jqx-fill-state-hover jqx-ribbon-item-hover"));
                    if ("popup" === f.mode && f._roundedCorners) {
                        f._header.removeClass(f.toThemeProperty("jqx-rc-all"));
                        switch (f.position) {
                        case "top":
                            var g = "jqx-rc-t";
                            var h = "jqx-rc-b";
                            break;
                        case "bottom":
                            g = "jqx-rc-b";
                            h = "jqx-rc-t";
                            break;
                        case "left":
                            g = "jqx-rc-l";
                            h = "jqx-rc-r";
                            break;
                        case "right":
                            g = "jqx-rc-r",
                            h = "jqx-rc-l"
                        }
                        f._headerElement.className += " " + f.toThemeProperty(g);
                        for (c = 0; c < f._items.length; c++)
                            f._items[c].className += " " + f.toThemeProperty(g),
                            f._contentSections[c].className += " " + f.toThemeProperty(h)
                    }
                    f._items[b].className += " " + f.toThemeProperty("jqx-widget-content jqx-ribbon-item-selected");
                    f._selectionToken.style.display = "block";
                    f._updatePositions(b);
                    switch (f.animationType) {
                    case "fade":
                        g = e(f._contentSections[b]);
                        f._initAnimate(g);
                        "none" === g.css("display") ? g.fadeIn({
                            duration: f.animationDelay,
                            complete: function() {
                                f._animationComplete(b, d)
                            }
                        }) : g.fadeOut({
                            duration: f.animationDelay,
                            complete: function() {
                                f._animationComplete(b, d)
                            }
                        });
                        break;
                    case "slide":
                        g = e(f._contentSections[b]);
                        h = f.position;
                        "top" === h ? h = "up" : "bottom" === h && (h = "down");
                        f.slideAnimation = f._slide(g, {
                            mode: "show",
                            direction: h,
                            duration: f.animationDelay
                        }, b, d);
                        break;
                    case "none":
                        f._contentSections[b].style.display = "block",
                        f._animationComplete(b, d)
                    }
                }
        },
        _clearSelection: function(b, d) {
            var c = this;
            "popup" === c.mode && c._roundedCorners && (c._headerElement.className += " " + c.toThemeProperty("jqx-rc-all"));
            c._selecting = -1;
            void 0 === d && (d = c.selectedIndex);
            e(c._items[d]).removeClass(c.toThemeProperty("jqx-widget-content jqx-ribbon-item-selected"));
            c._selectionToken.style.display = "none";
            if (!0 !== b && "none" !== c.animationType)
                if (b = e(c._contentSections[d]),
                "fade" === c.animationType)
                    c._initAnimate(b),
                    b.fadeOut({
                        duration: c.animationDelay,
                        complete: function() {
                            c._clearSelectionComplete(d)
                        }
                    });
                else {
                    if ("slide" === c.animationType) {
                        var f = c.position;
                        "top" === f ? f = "up" : "bottom" === f && (f = "down");
                        c._stopAnimation();
                        d = c.selectedIndex;
                        c.slideAnimation = c._slide(b, {
                            mode: "hide",
                            direction: f,
                            duration: c.animationDelay
                        }, d);
                        c.selectedIndex = -1
                    }
                }
            else
                -1 !== d && (c._contentSections[d].style.display = "none",
                c._clearSelectionComplete(d, b))
        },
        _addHandlers: function() {
            function b(C) {
                C = m._closest(C.target, "li");
                var F = C._index;
                m._items[F]._disabled || (F !== m.selectedIndex ? m._selectAt(F) : "popup" === m.mode && "none" !== m.popupCloseMode && (C.className += " " + m.toThemeProperty("jqx-fill-state-hover jqx-ribbon-item-hover"),
                m._clearSelection()))
            }
            function d(C) {
                if (!0 === m.reorder && !0 === p) {
                    var F = m._closest(C.target, "li")._index;
                    C = m._items[q].innerHTML;
                    for (var P = m._contentSections[q].childNodes, X = []; 0 < P.length; )
                        X.push(e(P[0]).detach());
                    m._suppressSelectionEvents = !0;
                    m._oldReorderIndex = q;
                    m.removeAt(q);
                    m.clearSelection();
                    m.addAt(F, {
                        title: C,
                        content: X
                    });
                    m.selectAt(F);
                    setTimeout(function() {
                        e(m._items[F]).trigger("mousedown")
                    }, 0)
                } else
                    C = m._closest(C.target, "li"),
                    v(C._index) && (C.className += " " + m.toThemeProperty("jqx-fill-state-hover jqx-ribbon-item-hover"))
            }
            function c(C) {
                C = m._closest(C.target, "li");
                v(C._index) && e(C).removeClass(m.toThemeProperty("jqx-fill-state-hover jqx-ribbon-item-hover"))
            }
            function f(C) {
                "#document" !== C.target.nodeName && (C = m._closest(C.target, "li"),
                !0 !== m.reorder && !0 !== m._removeByDrag || C._index !== m.selectedIndex || (p = !0,
                q = C._index,
                C.style.cursor = "move"))
            }
            function g() {
                "mouseLeave" === m.popupCloseMode && "popup" === m.mode && m._clearSelection()
            }
            function h(C) {
                C = m._closest(C.target, "li")._index;
                m._items[C]._disabled || C === m.selectedIndex || m._selectAt(C)
            }
            function k(C) {
                C = m._closest(C.target, "li")._index;
                m._items[C]._disabled || "popup" === m.mode && "none" !== m.popupCloseMode && m._clearSelection()
            }
            function l() {
                "mouseLeave" === m.popupCloseMode && "popup" === m.mode && m._clearSelection()
            }
            var m = this, n = m.element.id, p = !1, q, t = function(C) {
                if ("click" === m.popupCloseMode && "popup" === m.mode && -1 !== m.selectedIndex && "svg" !== C.target.tagName) {
                    var F = m._closest(C.target, void 0, "jqx-ribbon");
                    if (void 0 !== F && F.getAttribute("id") !== n)
                        m._clearSelection();
                    else if (void 0 === C.target.className || -1 !== C.target.className.indexOf("jqx-ribbon-content-popup"))
                        m._clearSelection();
                    else if (!e(C.target).ischildof(m.host)) {
                        var P = !1
                          , X = []
                          , W = function(V) {
                            V.parentElement && (X.push(V.parentElement),
                            W(V.parentElement))
                        };
                        W(C.target);
                        e.each(X, function() {
                            if (void 0 !== this.className && this.className.indexOf) {
                                if (-1 !== this.className.indexOf("jqx-ribbon"))
                                    return P = !0,
                                    !1;
                                if (-1 !== this.className.indexOf("jqx-ribbon"))
                                    return n === this.id && (P = !0),
                                    !1
                            }
                        });
                        P || m._clearSelection()
                    }
                }
            };
            if ("click" === m.selectionMode) {
                for (var v = function(C) {
                    return (m._selecting !== C && !1 === m._allowSelection || (-1 === m._selecting || m.selectedIndex !== C) && !0 === m._allowSelection) && !m._items[C]._disabled
                }, z = 0; z < m._items.length; z++) {
                    var E = m._items[z];
                    m.addHandler(E, "click.ribbon" + n, b);
                    m.addHandler(E, "mouseenter.ribbon" + n, d);
                    m.addHandler(E, "mouseleave.ribbon" + n, c);
                    m.addHandler(E, "mousedown.ribbon" + n, f)
                }
                if ("popup" === m.mode) {
                    m.addHandler(m.host, "mouseleave.ribbon" + n, function() {
                        "mouseLeave" === m.popupCloseMode && "popup" === m.mode && m._clearSelection()
                    });
                    for (z = 0; z < m._contentSections.length; z++)
                        m.addHandler(m._contentSections[z], "mouseleave.ribbon" + n, g);
                    m.addHandler(e(document), "mousedown.ribbon" + n, function(C) {
                        t(C)
                    })
                }
                if (!0 === m._removeByDrag)
                    for (z = 0; z < m._items.length; z++)
                        m._items[z].className += " " + m.toThemeProperty("jqx-ribbon-item-docking-layout");
                m.addHandler(document, "mouseup.ribbon" + n, function() {
                    p = !1;
                    for (var C = 0; C < m._items.length; C++)
                        m._items[C].style.cursor = ""
                });
                m.addHandler(m._header, "mouseleave.ribbon" + n, function(C) {
                    !0 === m._removeByDrag && !0 === p && (m._raiseEvent("3", {
                        draggedIndex: q,
                        x: C.pageX,
                        y: C.pageY
                    }),
                    1 < m._items.length && m.removeAt(q),
                    p = !1,
                    C.target.style.cursor = "")
                })
            } else if ("hover" === m.selectionMode) {
                for (z = 0; z < m._items.length; z++)
                    E = m._items[z],
                    m.addHandler(E, "mouseenter.ribbon" + n, h),
                    "popup" === m.mode && m.addHandler(E, "click.ribbon" + n, k);
                if ("popup" === m.mode) {
                    m.addHandler(m.host, "mouseleave.ribbon" + n, function() {
                        "mouseLeave" === m.popupCloseMode && "popup" === m.mode && m._clearSelection()
                    });
                    for (z = 0; z < m._contentSections.length; z++)
                        m.addHandler(m._contentSections, "mouseleave.ribbon" + n, l);
                    m.addHandler(e(document), "mousedown.ribbon" + n, function(C) {
                        t(C)
                    })
                }
            }
            e.jqx.mobile.isTouchDevice() ? (z = "touchstart",
            E = "touchend") : (z = "mousedown",
            E = "mouseup");
            m.addHandler(m._scrollButtonNear, z + ".ribbon" + n, function() {
                m._timeoutNear = "horizontal" === m._orientation ? setInterval(function() {
                    m._headerElement.scrollLeft -= m.scrollStep * (m.rtl && "msie" === m._browser.browser ? -1 : 1);
                    m._updatePositions()
                }, m.scrollDelay) : setInterval(function() {
                    m._headerElement.scrollTop -= m.scrollStep;
                    m._updatePositions()
                }, m.scrollDelay);
                return !1
            });
            m.addHandler(m._scrollButtonFar, z + ".ribbon" + n, function() {
                m._timeoutFar = "horizontal" === m._orientation ? setInterval(function() {
                    m._headerElement.scrollLeft += m.scrollStep * (m.rtl && "msie" === m._browser.browser ? -1 : 1);
                    m._updatePositions()
                }, m.scrollDelay) : setInterval(function() {
                    m._headerElement.scrollTop += m.scrollStep;
                    m._updatePositions()
                }, m.scrollDelay);
                return !1
            });
            m.addHandler(e(document), E + ".ribbon" + n, function() {
                clearInterval(m._timeoutNear);
                clearInterval(m._timeoutFar)
            })
        },
        _removeHandlers: function(b, d) {
            var c = this.element.id;
            b || (b = this.selectionMode);
            d || (d = this.mode);
            for (var f = 0; f < this._items.length; f++) {
                var g = this._items[f];
                this.removeHandler(g, "mouseenter.ribbon" + c);
                "click" === b && (this.removeHandler(g, "click.ribbon" + c),
                this.removeHandler(g, "mouseleave.ribbon" + c),
                this.removeHandler(g, "mousedown.ribbon" + c))
            }
            "click" === b ? (this.removeHandler(document, "mouseup.ribbon" + c),
            this.removeHandler(this._header, "mouseleave.ribbon" + c)) : "hover" === b && "popup" === d && this.removeHandler(this.host, "mouseleave.ribbon" + c);
            e.jqx.mobile.isTouchDevice() ? (b = "touchstart",
            d = "touchend") : (b = "mousedown",
            d = "mouseup");
            this.removeHandler(this._scrollButtonNear, b + ".ribbon" + c);
            this.removeHandler(this._scrollButtonFar, b + ".ribbon" + c);
            this.removeHandler(e(document), d + ".ribbon" + c)
        },
        _checkStructure: function(b) {
            if (2 !== b.length)
                throw Error("jqxRibbon: Invalid HTML structure. You need to add a ul and a div to the widget container.");
            b = this._header.children().length;
            var d = this._content.children().length;
            if (b !== d)
                throw Error("jqxRibbon: Invalid HTML structure. For each list item you must have a corresponding div element.");
        },
        _addClasses: function() {
            var b = "jqx-widget-content jqx-ribbon-content-section jqx-ribbon-content-section-" + this.position
              , d = "jqx-widget-content jqx-ribbon-content jqx-ribbon-content-" + this._orientation
              , c = "jqx-widget-header jqx-disableselect jqx-ribbon-header jqx-ribbon-header-" + this._orientation
              , f = "jqx-ribbon-item jqx-ribbon-item-" + this.position;
            this._content.removeClass();
            this._header.removeClass(this.toThemeProperty("jqx-rc-all jqx-widget-header jqx-disableselect jqx-rc-t jqx-rc-b jqx-rc-l jqx-rc-r jqx-rc-all jqx-ribbon-header-" + this._orientation + "-popup jqx-ribbon-header-bottom jqx-ribbon-header-auto jqx-ribbon-header-right jqx-ribbon-header-rtl"));
            this.host.removeClass();
            if (this._roundedCorners)
                switch (this.position) {
                case "top":
                    c += " jqx-rc-t";
                    f += " jqx-rc-t";
                    b += " jqx-rc-b";
                    break;
                case "bottom":
                    c += " jqx-rc-b";
                    f += " jqx-rc-b";
                    b += " jqx-rc-t";
                    break;
                case "left":
                    c += " jqx-rc-l";
                    f += " jqx-rc-l";
                    b += " jqx-rc-r";
                    break;
                case "right":
                    c += " jqx-rc-r",
                    f += " jqx-rc-r",
                    b += " jqx-rc-l"
                }
            else
                switch (this.position) {
                case "top":
                    f += " jqx-rc-t";
                    break;
                case "bottom":
                    f += " jqx-rc-b";
                    break;
                case "left":
                    f += " jqx-rc-l";
                    break;
                case "right":
                    f += " jqx-rc-r"
                }
            !0 === this.rtl && (c += " jqx-ribbon-header-rtl",
            f += " jqx-ribbon-item-rtl");
            this.element.className += " " + this.toThemeProperty("jqx-widget jqx-ribbon");
            this._headerElement.className += " " + this.toThemeProperty(c);
            this._contentElement.className += " " + this.toThemeProperty(d);
            for (d = 0; d < this._items.length; d++) {
                c = e(this._contentSections[d]);
                var g = e(this._items[d]);
                c.removeClass();
                g.removeClass(this.toThemeProperty("jqx-fill-state-disabled jqx-ribbon-item-rtl jqx-widget-content jqx-ribbon-item-selected jqx-rc-t jqx-rc-b jqx-rc-l jqx-rc-r jqx-ribbon-item-docking-layout jqx-ribbon-item jqx-ribbon-item-" + this.position));
                "popup" === this.mode && (b += " jqx-ribbon-content-section-popup jqx-ribbon-content-popup-" + this.position + " jqx-ribbon-content-section-" + this._orientation + "-popup");
                this._contentSections[d].className += " " + this.toThemeProperty(b);
                this._items[d].className += " " + this.toThemeProperty(f)
            }
            if ("popup" === this.mode)
                -1 === this.selectedIndex && this._roundedCorners && (this.element.className += " " + this.toThemeProperty("jqx-rc-all"),
                this._headerElement.className += " " + this.toThemeProperty("jqx-rc-all")),
                this.element.className += " " + this.toThemeProperty("jqx-ribbon-popup"),
                this._headerElement.className += " " + this.toThemeProperty("jqx-ribbon-header-" + this._orientation + "-popup"),
                this._contentElement.className += " " + this.toThemeProperty("jqx-ribbon-content-popup"),
                this._positionPopup();
            else {
                if ("horizontal" === this._orientation)
                    if ("auto" !== this.height) {
                        var h = this._headerElement.offsetHeight;
                        "top" === this.position ? this._contentElement.style.paddingTop = this._toPx(h) : this._headerElement.className += " " + this.toThemeProperty("jqx-ribbon-header-bottom")
                    } else
                        this._headerElement.className += " " + this.toThemeProperty("jqx-ribbon-header-auto");
                else if ("vertical" === this._orientation)
                    if ("auto" !== this.width) {
                        var k = this._headerElement.offsetWidth;
                        "left" === this.position ? this._contentElement.style.paddingLeft = this._toPx(k) : (this._headerElement.className += " " + this.toThemeProperty("jqx-ribbon-header-right"),
                        this._contentElement.style.paddingRight = this._toPx(k))
                    } else
                        this.element.className += " " + this.toThemeProperty("jqx-ribbon-auto"),
                        this._headerElement.className += " " + this.toThemeProperty("jqx-ribbon-header-auto"),
                        this._contentElement.className += " " + this.toThemeProperty("jqx-ribbon-content-auto-width");
                this.host.addClass("jqx-tabs-header-position-" + this.position)
            }
            e(this._headerElement).addClass(this.toThemeProperty("jqx-ribbon-header-" + this.position));
            "7.0" === this._browser.version && "msie" === this._browser.browser && ("horizontal" === this._orientation ? (this._header.css("width", this.host.width() - parseInt(this._header.css("padding-left"), 10) - parseInt(this._header.css("padding-right"), 10) - parseInt(this._header.css("border-left-width"), 10) - parseInt(this._header.css("border-right-width"), 10)),
            this._items.height(this._items.height() - parseInt(this._items.css("padding-top"), 10) - parseInt(this._items.css("padding-bottom"), 10) - parseInt(this._items.css("border-top-width"), 10) - parseInt(this._items.css("border-bottom-width"), 10)),
            this._contentSections.width(this._contentSections.width() - parseInt(this._contentSections.css("border-left-width"), 10) - parseInt(this._contentSections.css("border-right-width"), 10) - parseInt(this._contentSections.css("padding-left"), 10) - parseInt(this._contentSections.css("padding-right"), 10)),
            "default" === this.mode && "auto" !== this.height && ("top" === this.position ? this._contentSections.css("padding-top", h) : this._contentSections.css("padding-bottom", h),
            this._content.css("height", this.host.height() + 2),
            this._contentSections.css("height", this._content.height() - parseInt(this._contentSections.css("border-bottom-width"), 10) - parseInt(this._contentSections.css("border-top-width"), 10) - 1))) : ("left" === this.position ? (this._contentElement.className += " " + this.toThemeProperty("jqx-ribbon-content-left"),
            b = parseInt(this._contentSections.css("border-left-width"), 10) + parseInt(this._contentSections.css("border-right-width"), 10) + 1) : (this._contentElement.className += " " + this.toThemeProperty("jqx-ribbon-content-right"),
            b = 0),
            this._header.css("height", this.host.height() - parseInt(this._header.css("padding-top"), 10) - parseInt(this._header.css("padding-bottom"), 10) - parseInt(this._header.css("border-top-width"), 10) - parseInt(this._header.css("border-bottom-width"), 10)),
            this._items.width(this._items.width() - parseInt(this._items.css("padding-left"), 10) - parseInt(this._items.css("padding-right"), 10) - parseInt(this._items.css("border-left-width"), 10) - parseInt(this._items.css("border-right-width"), 10)),
            this._contentSections.height(this._contentSections.height() - parseInt(this._contentSections.css("border-top-width"), 10) - parseInt(this._contentSections.css("border-bottom-width"), 10) - parseInt(this._contentSections.css("padding-top"), 10) - parseInt(this._contentSections.css("padding-bottom"), 10)),
            "default" === this.mode && "auto" !== this.width && ("left" === this.position ? this._contentSections.css("padding-left", k) : this._contentSections.css("padding-right", k),
            this._contentSections.width(this._content.width() - this._header.width() - b))));
            "bottom" === this.position && this._content.css("padding-bottom", h)
        },
        _positionPopup: function() {
            var b = "7.0" === this._browser.version && "msie" === this._browser.browser;
            switch (this.position) {
            case "top":
                this._contentElement.style.top = this._toPx(this._headerElement.offsetHeight);
                break;
            case "bottom":
                this._contentElement.style.bottom = b ? this._toPx(this._height(this._headerElement)) : this._toPx(this._headerElement.offsetHeight);
                break;
            case "left":
                this._contentElement.style.left = this._toPx(this._headerElement.offsetWidth);
                break;
            case "right":
                this._contentElement.style.right = this._header.outerWidth() + "px"
            }
        },
        _appendScrollButtons: function() {
            function b(h, k, l) {
                h.className = d.toThemeProperty("jqx-ribbon-scrollbutton jqx-ribbon-scrollbutton-" + d.position + " jqx-ribbon-scrollbutton-" + d.scrollPosition + " jqx-widget-header " + k);
                h.innerHTML = '<div class="' + d.toThemeProperty("jqx-ribbon-scrollbutton-inner " + l) + '"></div>';
                "horizontal" === d._orientation ? h.style.height = d._toPx(d._height(d._headerElement)) : h.style.width = d._toPx(d._width(d._headerElement));
                d.element.appendChild(h)
            }
            var d = this
              , c = "horizontal" === d._orientation ? ["left", "right"] : ["up", "down"]
              , f = document.createElement("div");
            b(f, "jqx-ribbon-scrollbutton-lt", "jqx-icon-arrow-" + c[0]);
            var g = document.createElement("div");
            b(g, "jqx-ribbon-scrollbutton-rb", "jqx-icon-arrow-" + c[1]);
            d._scrollButtonRc(f, g);
            d._scrollButtonNear = f;
            d._scrollButtonFar = g;
            if (d.roundedCorners)
                switch (d.position) {
                case "top":
                case "bottom":
                    f.style.marginLeft = "-1px";
                    g.style.marginRight = "-1px";
                    break;
                case "right":
                case "left":
                    f.style.marginTop = "-1px",
                    g.style.marginBottom = "-1px"
                }
        },
        _scrollButtonRc: function(b, d) {
            if (this.roundedCorners)
                switch (this.position) {
                case "top":
                    "far" !== this.scrollPosition && (b.className += " " + this.toThemeProperty("jqx-rc-tl"));
                    "near" !== this.scrollPosition && (d.className += " " + this.toThemeProperty("jqx-rc-tr"));
                    break;
                case "bottom":
                    "far" !== this.scrollPosition && (b.className += " " + this.toThemeProperty("jqx-rc-bl"));
                    "near" !== this.scrollPosition && (d.className += " " + this.toThemeProperty("jqx-rc-br"));
                    break;
                case "left":
                    "far" !== this.scrollPosition && (b.className += " " + this.toThemeProperty("jqx-rc-tl"));
                    "near" !== this.scrollPosition && (d.className += " " + this.toThemeProperty("jqx-rc-bl"));
                    break;
                case "right":
                    "far" !== this.scrollPosition && (b.className += " " + this.toThemeProperty("jqx-rc-tr")),
                    "near" !== this.scrollPosition && (d.className += " " + this.toThemeProperty("jqx-rc-br"))
                }
        },
        _updateItems: function(b) {
            function d() {
                c._items[f]._index === c.selectedIndex && (c.selectedIndex = f)
            }
            var c = this;
            c._items = c._header.children();
            c._contentSections = c._content.children();
            for (var f = 0; f < c._items.length; f++) {
                var g = c._items[f];
                g.setAttribute("unselectable", "on");
                void 0 === g._index && (g._disabled = !1,
                g._isInitialized = !1,
                c._contentSections[f]._layout = "default");
                !0 === b && d();
                g._index = f;
                !0 !== b && d();
                c._contentSections[f] && (c._contentSections[f]._index = f)
            }
        },
        _positionContent: function(b) {
            var d = this
              , c = d._contentSections[b];
            if ("horizontal" === d._orientation) {
                var f = d.element.offsetWidth;
                var g = d.host.offset().left;
                var h = d._items[b].offsetWidth;
                b = e(d._items[b]).offset().left;
                var k = c.offsetWidth || parseInt(c.style.width, 10);
                var l = "left"
            } else
                f = d.element.offsetHeight,
                g = d.host.offset().top,
                h = d._items[b].offsetHeight,
                b = e(d._items[b]).offset().top,
                k = c.offsetHeight || parseInt(c.style.height, 10),
                l = "top";
            var m = function(n) {
                0 > n ? n = 0 : n + k > f && (n = f - k);
                c.style[l] = d._toPx(n)
            };
            switch (c._layout) {
            case "near":
                m(b - g);
                break;
            case "far":
                m(b - g - (k - h));
                break;
            case "center":
                m(b - g - (k - h) / 2);
                break;
            default:
                if ("right" === d.position)
                    for (g = 0; g < d._contentSections.length; g++)
                        d._contentSections[g].style.right = "1px";
                else
                    c.style[l] = ""
            }
        },
        _checkScrollButtons: function(b) {
            var d = this
              , c = 0;
            e.each(d._items, function() {
                var k = e(this);
                "none" !== k.css("display") && (c += "horizontal" === d._orientation ? k.outerWidth(!0) : k.outerHeight(!0))
            });
            var f = "horizontal" === d._orientation ? ["margin-left", "margin-right"] : ["margin-top", "margin-bottom"]
              , g = "horizontal" === d._orientation ? d._width(d._headerElement) : d._height(d._headerElement);
            d._itemMargins || (d._itemMargins = [],
            d._itemMargins.push(e(d._items[0]).css(f[0])),
            d._itemMargins.push(e(d._items[d._items.length - 1]).css(f[1])));
            if (c > g) {
                d._scrollButtonNear.style.display = "block";
                d._scrollButtonFar.style.display = "block";
                g = d.rtl ? d._itemMargins[0] : 17;
                var h = d.rtl ? d._itemMargins[0] : 17;
                switch (d.scrollPosition) {
                case "near":
                    h = 0;
                    g = 34;
                    break;
                case "far":
                    h = 34,
                    g = 17
                }
                d._items[0] && (d._items[0].style[f[0]] = d._toPx(g));
                d._items[d._items.length - 1] && (d._items[d._items.length - 1].style[f[1]] = d._toPx(h))
            } else
                d._items[0] && (d._items[0].style[f[0]] = d._toPx(d._itemMargins[0])),
                d._items[d._items.length - 1] && (d._items[d._items.length - 1].style[f[1]] = d._toPx(d._itemMargins[1])),
                d._scrollButtonNear.style.display = "none",
                d._scrollButtonFar.style.display = "none";
            !0 === b && ("horizontal" === d._orientation ? (b = d._toPx(d._height(d._headerElement)),
            d._scrollButtonNear.style.height = b,
            d._scrollButtonFar.style.height = b) : (b = d._toPx(d._width(d._headerElement)),
            d._scrollButtonNear.style.width = b,
            d._scrollButtonFar.style.width = b))
        },
        _positionSelectionToken: function(b) {
            if (-1 !== b) {
                var d = e(this._items[b]);
                if (0 !== d.length)
                    if ("horizontal" === this._orientation) {
                        if (!0 === this.rtl) {
                            b = 1 === this._browserWidthRtlFlag ? this._headerElement.scrollWidth - this._headerElement.clientWidth : 0;
                            var c = this._browserScrollRtlFlag
                        } else
                            b = 0,
                            c = 1;
                        c = d[0].offsetLeft + b - this._headerElement.scrollLeft * c - this._selectionTokenOffsetX + 2;
                        var f = this._headerElement.offsetHeight - 1;
                        d = this._width(d[0]) + parseInt(d.css("padding-left"), 10) + parseInt(d.css("padding-right"), 10);
                        "top" === this.position ? (b = f - this._selectionTokenOffsetY,
                        f = "") : (b = "",
                        f -= this._selectionTokenOffsetY);
                        this._selectionToken.style.top = this._toPx(b);
                        this._selectionToken.style.bottom = this._toPx(f);
                        this._selectionToken.style.left = this._toPx(c);
                        this._selectionToken.style.width = this._toPx(d)
                    } else
                        b = d[0].offsetTop - this._headerElement.scrollTop - this._selectionTokenOffsetX + 2,
                        f = this._headerElement.offsetWidth - 1,
                        d = this._height(d[0]) + parseInt(d.css("padding-top"), 10) + parseInt(d.css("padding-bottom"), 10),
                        "left" === this.position ? (c = f - this._selectionTokenOffsetY,
                        f = "") : (c = "",
                        f -= this._selectionTokenOffsetY),
                        this._selectionToken.style.top = this._toPx(b),
                        this._selectionToken.style.left = this._toPx(c),
                        this._selectionToken.style.right = this._toPx(f),
                        this._selectionToken.style.height = this._toPx(d)
            }
        },
        _updatePositions: function(b, d) {
            isNaN(b) && (b = !0 === d && null !== this._selecting && 0 <= this._selecting ? this._selecting : this.selectedIndex);
            -1 !== b && (this._positionSelectionToken(b),
            "popup" === this.mode && "default" !== this._contentSections[b]._layout && this._positionContent(b),
            "popup" !== this.mode || "left" !== this.position && "right" !== this.position || (this._contentElement.style.width = "auto",
            this._contentSections[b].style.width && 0 <= this._contentSections[b].style.width.indexOf("%") ? this._contentElement.style.width = this._toPx(this._width(this._contentSections[b]) - this._width(this._headerElement)) : this._contentElement.style.width = this._toPx(this._width(this._contentSections[b]))),
            this._refreshBarPosition())
        },
        _animationComplete: function(b, d) {
            d = -1 !== d ? d : null;
            this._contentElement.style.pointerEvents = "auto";
            this.selectedIndex = b;
            !0 !== this._suppressSelectionEvents ? (this._raiseEvent("0", {
                selectedIndex: b
            }),
            this._raiseEvent("2", {
                unselectedIndex: d,
                selectedIndex: b
            })) : (!0 !== this._suppressReorder && void 0 !== this._oldReorderIndex && b !== this._oldReorderIndex && this._raiseEvent("4", {
                newIndex: b,
                oldIndex: this._oldReorderIndex
            }),
            this._suppressReorder = this._suppressSelectionEvents = !1);
            this.initContent && !1 === this._items[b]._isInitialized && (this.initContent(b),
            this._items[b]._isInitialized = !0);
            this._allowSelection = !0;
            this._selecting = null;
            this._refreshBarPosition()
        },
        _clearSelectionComplete: function(b, d) {
            this._selecting = null;
            void 0 === b && (b = this.selectedIndex);
            -1 !== b && (this._contentElement.style.pointerEvents = "none",
            !0 !== this._suppressSelectionEvents && this._raiseEvent("1", {
                unselectedIndex: b
            }));
            !0 !== d && (this.selectedIndex = -1)
        },
        _slide: function(b, d, c, f) {
            var g = this;
            g.activeAnimations || (g.activeAnimations = []);
            if (0 < g.activeAnimations.length)
                for (var h = 0; h < g.activeAnimations.length; h++)
                    g.activeAnimations[h].clearQueue(),
                    g.activeAnimations[h].finish();
            else
                b.clearQueue(),
                b.animate("finish");
            var k = {
                save: function(v, z) {
                    for (var E = 0; E < z.length; E++)
                        null !== z[E] && 0 < v.length && v.data("ui-effects-" + z[E], v[0].style[z[E]])
                },
                restore: function(v, z) {
                    var E;
                    for (E = 0; E < z.length; E++)
                        if (null !== z[E]) {
                            var C = v.data("ui-effects-" + z[E]);
                            void 0 === C && (C = "");
                            v.css(z[E], C)
                        }
                },
                createWrapper: function(v) {
                    if (v.parent().is(".ui-effects-wrapper"))
                        return v.parent();
                    var z = {
                        width: v.outerWidth(!0),
                        height: v.outerHeight(!0),
                        "float": v.css("float")
                    }
                      , E = e("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    })
                      , C = {
                        width: v.width(),
                        height: v.height()
                    }
                      , F = document.activeElement;
                    try {
                        F.id
                    } catch (P) {
                        F = document.body
                    }
                    v.wrap(E);
                    (v[0] === F || e.contains(v[0], F)) && e(F).focus();
                    E = v.parent();
                    "static" === v.css("position") ? (E.css({
                        position: "relative"
                    }),
                    v.css({
                        position: "relative"
                    })) : (e.extend(z, {
                        position: v.css("position"),
                        zIndex: v.css("z-index")
                    }),
                    e.each(["top", "left", "bottom", "right"], function(P, X) {
                        z[X] = v.css(X);
                        isNaN(parseInt(z[X], 10)) && (z[X] = "auto")
                    }),
                    v.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    }));
                    v.css(C);
                    return E.css(z).show()
                },
                removeWrapper: function(v) {
                    var z = document.activeElement;
                    v.parent().is(".ui-effects-wrapper") && (v.parent().replaceWith(v),
                    (v[0] === z || e.contains(v[0], z)) && e(z).focus());
                    return v
                }
            }
              , l = "position top bottom left right width height".split(" ")
              , m = d.mode;
            h = "show" === m;
            var n = d.direction || "left"
              , p = "up" === n || "down" === n ? "top" : "left";
            n = "up" === n || "left" === n;
            var q = {};
            k.save(b, l);
            b.show();
            var t = d.distance || b["top" === p ? "outerHeight" : "outerWidth"](!0);
            k.createWrapper(b).css({
                overflow: "hidden"
            });
            h && b.css(p, n ? isNaN(t) ? "-" + t : -t : t);
            q[p] = (h ? n ? "+=" : "-=" : n ? "-=" : "+=") + t;
            g.activeAnimations.push(b);
            b.animate(q, {
                duration: d.duration,
                easing: d.easing,
                complete: function() {
                    g.activeAnimations.pop(b);
                    "show" === m ? g._animationComplete(c, f) : "hide" === m && (b.hide(),
                    g._clearSelectionComplete(c));
                    k.restore(b, l);
                    k.removeWrapper(b)
                }
            });
            return function() {
                b.clearQueue();
                b.stop(!0, !0)
            }
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        },
        _width: function(b) {
            var d = e(b)
              , c = d.css("border-left-width")
              , f = d.css("border-right-width")
              , g = parseInt(d.css("padding-left"), 10)
              , h = parseInt(d.css("padding-right"), 10);
            if (d = "none" === d.css("display") ? !0 : !1)
                b.style.display = "block";
            c = -1 === c.indexOf("px") ? 1 : parseInt(c, 10);
            f = -1 === f.indexOf("px") ? 1 : parseInt(f, 10);
            c = b.offsetWidth - (c + f + g + h);
            d && (b.style.display = "none");
            return Math.max(0, c)
        },
        _height: function(b) {
            var d = e(b)
              , c = d.css("border-top-width")
              , f = d.css("border-bottom-width")
              , g = parseInt(d.css("padding-top"), 10);
            d = parseInt(d.css("padding-bottom"), 10);
            c = -1 === c.indexOf("px") ? 1 : parseInt(c, 10);
            f = -1 === f.indexOf("px") ? 1 : parseInt(f, 10);
            return Math.max(0, b.offsetHeight - (c + f + g + d))
        },
        _closest: function(b, d, c) {
            if (d) {
                if (b.nodeName.toLowerCase() === d)
                    return b;
                for (var f = b.parentNode; null !== f && "#document" !== f.nodeName; ) {
                    if (f.nodeName.toLowerCase() === d)
                        return f;
                    f = f.parentNode
                }
            }
            if (c) {
                if (-1 < (" " + b.className + " ").replace(/[\n\t]/g, " ").indexOf(" " + c + " "))
                    return b;
                for (b = b.parentNode; null !== b && "#document" !== b.nodeName; ) {
                    if (-1 < (" " + b.className + " ").replace(/[\n\t]/g, " ").indexOf(" " + c + " "))
                        return b;
                    b = b.parentNode
                }
            }
        },
        _initAnimate: function(b) {
            b.initAnimate && !b.animate && b.initAnimate()
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxRadioButton", "", {});
    e.extend(e.jqx._jqxRadioButton.prototype, {
        defineInstance: function() {
            var b = {
                animationShowDelay: 300,
                animationHideDelay: 300,
                width: null,
                height: null,
                boxSize: "16px",
                checked: !1,
                hasThreeStates: !1,
                disabled: !1,
                enableContainerClick: !0,
                locked: !1,
                groupName: "",
                rtl: !1,
                changeType: null,
                _canFocus: !0,
                aria: {
                    "aria-checked": {
                        name: "checked",
                        type: "boolean"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["checked", "unchecked", "indeterminate", "change"]
            };
            if (this === e.jqx._jqxRadioButton.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function(b) {
            this._createFromInput("RadioButton");
            this.render()
        },
        _createFromInput: function(b) {
            if ("input" == this.element.nodeName.toLowerCase()) {
                this.field = this.element;
                this.field.className && (this._className = this.field.className);
                var d = {
                    title: this.field.title
                };
                this.field.value && (d.value = this.field.value);
                this.field.checked && (d.checked = !0);
                d.id = this.field.id.length ? this.field.id.replace(/[^\w]/g, "_") + "_" + b : e.jqx.utilities.createId() + "_" + b;
                var c = this.element.nextSibling
                  , f = !1;
                !c || "#text" != c.nodeName && "span" != c.nodeName || (f = !0);
                var g = 0;
                b = e("<div></div>", d);
                f && (b.append(c),
                c = e("<span>" + e(c).text() + "</span>"),
                c.appendTo(e(document.body)),
                g += c.width(),
                c.remove());
                b[0].style.cssText = this.field.style.cssText;
                this.width || (this.width = e(this.field).width() + g + 10);
                this.height || (this.height = e(this.field).outerHeight() + 10);
                e(this.field).hide().after(b);
                g = this.host.data();
                this.host = b;
                this.host.data(g);
                this.element = b[0];
                this.element.id = this.field.id;
                this.field.id = d.id;
                this._className && (this.host.addClass(this._className),
                e(this.field).removeClass(this._className));
                this.field.tabIndex && (d = this.field.tabIndex,
                this.field.tabIndex = -1,
                this.element.tabIndex = d)
            }
        },
        render: function() {
            this.setSize();
            var b = this;
            this.propertyChangeMap.width = function(h, k, l, m) {
                b.setSize()
            }
            ;
            this.propertyChangeMap.height = function(h, k, l, m) {
                b.setSize()
            }
            ;
            this.radiobutton && this.radiobutton.remove();
            this.width || this.host.css("overflow-x", "visible");
            this.height || this.host.css("overflow-y", "visible");
            null == this.boxSize && (this.boxSize = 16);
            var d = parseInt(this.boxSize) + "px"
              , c = Math.floor((parseInt(this.boxSize) - 16) / 2)
              , f = c;
            c += "px";
            f += "px";
            var g = parseInt(this.boxSize) / 2 + "px";
            this.radiobutton = "16px" != this.boxSize ? e('<div><div style="width: ' + d + "; height: " + d + ';"><span style="position: relative; left: ' + c + "; top: " + f + '; width: 16px; height: 16px;"></span></div></div>') : e('<div><div style="width: ' + d + "; height: " + d + ';"><span style="width: ' + g + "; height: " + g + ';"></span></div></div>');
            this.host.attr("role", "radio");
            this.host.prepend(this.radiobutton);
            this.disabledContainer || (this.host.attr("tabIndex") || this.host.attr("tabIndex", 0),
            this.clear = e('<div style="clear: both;"></div>'),
            this.host.append(this.clear));
            this.checkMark = e(this.radiobutton[0].firstChild.firstChild);
            this.box = this.radiobutton;
            this._supportsRC = !0;
            e.jqx.browser.msie && 9 > e.jqx.browser.version && (this._supportsRC = !1);
            this.box.addClass(this.toThemeProperty("jqx-fill-state-normal"));
            this.box.addClass(this.toThemeProperty("jqx-radiobutton-default"));
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.disabled && this.disable();
            this.host.addClass(this.toThemeProperty("jqx-radiobutton"));
            this.locked && this.host.css("cursor", "auto");
            d = this.element.getAttribute("checked");
            if ("checked" == d || "true" == d || 1 == d)
                this.checked = !0;
            this._addInput();
            this._render();
            this._addHandlers();
            e.jqx.aria(this);
            this._centerBox();
            this.isMaterialized() && (e(this.radiobutton).addClass("ripple"),
            e.jqx.ripple(e(this.radiobutton), this.host, "radiobutton"))
        },
        _centerBox: function() {
            if (this.height && -1 == this.height.toString().indexOf("%") && this.box) {
                var b = parseInt(this.height);
                this.host.css("line-height", b + "px");
                b = b - parseInt(this.boxSize) - 1;
                this.box.css("margin-top", parseInt(b / 2))
            }
        },
        _addInput: function() {
            var b = this.host.attr("name");
            this.input = e("<input type='hidden'/>");
            this.host.append(this.input);
            b && this.input.attr("name", b)
        },
        refresh: function(b) {
            b || (this.setSize(),
            this._render())
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this.setSize()
        },
        setSize: function() {
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : void 0 == this.width || isNaN(this.width) ? null != this.width && -1 != this.width.toString().indexOf("%") && (this.element.style.width = this.width) : this.host.width(this.width);
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : void 0 == this.height || isNaN(this.height) ? null != this.height && -1 != this.height.toString().indexOf("%") && (this.element.style.height = this.height) : this.host.height(this.height);
            this._centerBox()
        },
        _addHandlers: function() {
            var b = this;
            this.addHandler(this.box, "click", function(d) {
                if (!b.disabled && !b.enableContainerClick)
                    return b.changeType = "mouse",
                    b.toggle("click"),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.host, "keydown", function(d) {
                if (!b.disabled && !b.locked && 32 == d.keyCode) {
                    if (!b._canFocus)
                        return !0;
                    b.changeType = "keyboard";
                    b.toggle("click");
                    d.preventDefault();
                    return !1
                }
            });
            this.addHandler(this.host, "mousedown", function(d) {
                if (!b.disabled && b.enableContainerClick)
                    return b.clickTime = new Date,
                    b.changeType = "mouse",
                    b.toggle("click"),
                    b._canFocus && b.focus(),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.host, "selectstart", function(d) {
                !b.disabled && b.enableContainerClick && d.preventDefault()
            });
            this.addHandler(this.host, "mouseup", function(d) {
                !b.disabled && b.enableContainerClick && d.preventDefault()
            });
            this.addHandler(this.host, "focus", function(d) {
                if (!b.disabled && b.enableContainerClick && !b.locked)
                    return e(b.radiobutton).removeClass("active"),
                    (!b.clickTime || b.clickTime && 300 < new Date - b.clickTime) && e(b.radiobutton).addClass("active"),
                    b.box.addClass(b.toThemeProperty("jqx-radiobutton-hover")),
                    b.box.addClass(b.toThemeProperty("jqx-fill-state-focus")),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.host, "blur", function(d) {
                e(b.radiobutton).removeClass("active");
                if (!b.disabled && b.enableContainerClick && !b.locked)
                    return b.box.removeClass(b.toThemeProperty("jqx-radiobutton-hover")),
                    b.box.removeClass(b.toThemeProperty("jqx-fill-state-focus")),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.host, "mouseenter", function(d) {
                if (!b.disabled && b.enableContainerClick && !b.locked)
                    return b.box.addClass(b.toThemeProperty("jqx-radiobutton-hover")),
                    b.box.addClass(b.toThemeProperty("jqx-fill-state-hover")),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.host, "mouseleave", function(d) {
                if (!b.disabled && b.enableContainerClick && !b.locked)
                    return b.box.removeClass(b.toThemeProperty("jqx-radiobutton-hover")),
                    b.box.removeClass(b.toThemeProperty("jqx-fill-state-hover")),
                    d.preventDefault(),
                    !1
            });
            this.addHandler(this.box, "mouseenter", function() {
                b.disabled || b.enableContainerClick || (b.box.addClass(b.toThemeProperty("jqx-radiobutton-hover")),
                b.box.addClass(b.toThemeProperty("jqx-fill-state-hover")))
            });
            this.addHandler(this.box, "mouseleave", function() {
                b.disabled || b.enableContainerClick || (b.box.removeClass(b.toThemeProperty("jqx-radiobutton-hover")),
                b.box.removeClass(b.toThemeProperty("jqx-fill-state-hover")))
            })
        },
        focus: function() {
            try {
                this.host.focus()
            } catch (b) {}
        },
        _removeHandlers: function() {
            this.removeHandler(this.box, "click");
            this.removeHandler(this.box, "mouseenter");
            this.removeHandler(this.box, "mouseleave");
            this.removeHandler(this.host, "click");
            this.removeHandler(this.host, "mouseup");
            this.removeHandler(this.host, "mousedown");
            this.removeHandler(this.host, "selectstart");
            this.removeHandler(this.host, "mouseenter");
            this.removeHandler(this.host, "mouseleave");
            this.removeHandler(this.host, "keydown");
            this.removeHandler(this.host, "focus");
            this.removeHandler(this.host, "blur")
        },
        _render: function() {
            null == this.boxSize && (this.boxSize = 13);
            this.box.width(this.boxSize);
            this.box.height(this.boxSize);
            this.disabled ? this.disable() : this.enableContainerClick ? this.host.css("cursor", "pointer") : this.host.css("cursor", "auto");
            this.rtl && (this.box.addClass(this.toThemeProperty("jqx-radiobutton-rtl")),
            this.host.addClass(this.toThemeProperty("jqx-rtl")));
            this.updateStates()
        },
        val: function(b) {
            if (0 == arguments.length || "object" == typeof b)
                return this.checked;
            "string" == typeof b ? ("true" == b && this.check("api"),
            "false" == b && this.uncheck("api"),
            "" == b && this.indeterminate("api")) : (1 == b && this.check("api"),
            0 == b && this.uncheck("api"),
            null == b && this.indeterminate("api"));
            return this.checked
        },
        check: function(b) {
            this.checked = !0;
            var d = this;
            this.checkMark.removeClass();
            this.checkMark.addClass(this.toThemeProperty("jqx-fill-state-pressed"));
            e.jqx.browser.msie ? (this.disabled && this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-disabled")),
            this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-checked"))) : (this.disabled && this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-disabled")),
            this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-checked")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {}));
            var c = e.find(".jqx-radiobutton");
            null == this.groupName && (this.groupName = "");
            e.each(c, function() {
                e(this).jqxRadioButton("groupName") == d.groupName && this != d.element && e(this).jqxRadioButton("uncheck", "api")
            });
            c = this.changeType;
            this._raiseEvent("0");
            this.changeType = c;
            this._raiseEvent("3", {
                type: b,
                checked: !0
            });
            0 == this.checkMark.height() ? (b = parseInt(this.boxSize) / 2,
            this.checkMark.height(b),
            this.checkMark.width(b)) : "13px" != this.boxSize && (b = parseInt(this.boxSize) / 2,
            this.checkMark.height(b),
            this.checkMark.width(b),
            this.checkMark.css("margin-left", 1 + b / 4),
            this.checkMark.css("margin-top", 1 + b / 4));
            this.input.val(this.checked);
            e.jqx.aria(this, "aria-checked", this.checked);
            this.host.attr("checked", this.checked)
        },
        uncheck: function(b) {
            var d = this.checked;
            this.checked = !1;
            var c = this;
            e.jqx.browser.msie ? c.checkMark.removeClass() : (this.checkMark.css("opacity", 1),
            this.checkMark.stop().animate({
                opacity: 0
            }, this.animationHideDelay, function() {
                c.checkMark.removeClass()
            }));
            d && (d = this.changeType,
            this._raiseEvent("1"),
            this.changeType = d,
            this._raiseEvent("3", {
                type: b,
                checked: !1
            }));
            this.input.val(this.checked);
            e.jqx.aria(this, "aria-checked", this.checked);
            this.host.attr("checked", this.checked)
        },
        indeterminate: function(b) {
            var d = this.checked;
            this.checked = null;
            this.checkMark.removeClass();
            e.jqx.browser.msie ? this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-indeterminate")) : (this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-indeterminate")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {}));
            null != d && (d = this.changeType,
            this._raiseEvent("2"),
            this.changeType = d,
            this._raiseEvent("3", {
                type: b,
                checked: null
            }));
            this.input.val(this.checked);
            e.jqx.aria(this, "aria-checked", "undefined");
            this.host.attr("checked", "undefined")
        },
        toggle: function(b) {
            if (!this.disabled && !this.locked) {
                var d = this.checked;
                this.checked = 1 == this.checked ? this.hasTreeStates ? null : !0 : !0;
                d != this.checked && this.updateStates(b);
                this.input.val(this.checked)
            }
        },
        updateStates: function(b) {
            this.checked ? this.check(b) : 0 == this.checked ? this.uncheck(b) : null == this.checked && this.indeterminate(b)
        },
        disable: function() {
            this.disabled = !0;
            1 == this.checked ? this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-disabled")) : null == this.checked && this.checkMark.addClass(this.toThemeProperty("jqx-radiobutton-check-indeterminate-disabled"));
            this.box.addClass(this.toThemeProperty("jqx-radiobutton-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            e.jqx.aria(this, "aria-disabled", this.disabled)
        },
        enable: function() {
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));
            1 == this.checked ? this.checkMark.removeClass(this.toThemeProperty("jqx-radiobutton-check-disabled")) : null == this.checked && this.checkMark.removeClass(this.toThemeProperty("jqx-radiobutton-check-indeterminate-disabled"));
            this.box.removeClass(this.toThemeProperty("jqx-radiobutton-disabled"));
            this.disabled = !1;
            e.jqx.aria(this, "aria-disabled", this.disabled)
        },
        destroy: function() {
            this._removeHandlers();
            this.host.remove()
        },
        _raiseEvent: function(b, d) {
            b = new e.Event(this.events[b]);
            b.owner = this;
            d || (d = {});
            d.type = this.changeType;
            this.changeType = null;
            b.args = d;
            try {
                var c = this.host.trigger(b)
            } catch (f) {}
            return c
        },
        propertiesChangedHandler: function(b, d, c) {
            c.width && c.height && 2 == Object.keys(c).length && b.setSize()
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (void 0 != this.isInitialized && 0 != this.isInitialized && !(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 == Object.keys(b.batchUpdate).length)) {
                d != this.enableContainerClick || this.disabled || this.locked || (f ? this.host.css("cursor", "pointer") : this.host.css("cursor", "auto"));
                "rtl" == d && (f ? (b.box.addClass(b.toThemeProperty("jqx-radiobutton-rtl")),
                b.host.addClass(b.toThemeProperty("jqx-rtl"))) : (b.box.removeClass(b.toThemeProperty("jqx-radiobutton-rtl")),
                b.host.removeClass(b.toThemeProperty("jqx-rtl"))));
                "boxSize" == d && b.render();
                if ("checked" == d)
                    switch (f) {
                    case !0:
                        this.check("api");
                        break;
                    case !1:
                        this.uncheck("api");
                        break;
                    case null:
                        this.indeterminate()
                    }
                "theme" == d && e.jqx.utilities.setTheme(c, f, this.host);
                "disabled" == d && (f ? this.disable() : this.enable())
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxSplitter", "", {});
    e.extend(e.jqx._jqxSplitter.prototype, {
        defineInstance: function() {
            var b = {
                width: 300,
                height: 300,
                panels: [],
                orientation: "vertical",
                disabled: !1,
                splitBarSize: 5,
                touchSplitBarSize: 15,
                panel1: null,
                panel2: null,
                _eventsMap: {
                    mousedown: e.jqx.mobile.getTouchEventName("touchstart"),
                    mouseup: e.jqx.mobile.getTouchEventName("touchend"),
                    mousemove: e.jqx.mobile.getTouchEventName("touchmove"),
                    mouseenter: "mouseenter",
                    mouseleave: "mouseleave"
                },
                _isTouchDevice: !1,
                _isNested: !1,
                resizable: !0,
                touchMode: "auto",
                showSplitBar: !0,
                initContent: null,
                _events: ["resize", "expanded", "collapsed", "resizeStart", "layout"]
            };
            if (this === e.jqx._jqxSplitter.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            this.render()
        },
        _initOverlay: function(b) {
            this.overlay || "undefined" == b ? (this.overlay.remove(),
            this.overlay = null) : 1 == b && (this.overlay = e("<div style='z-index: 100; background: #fff;'></div>"),
            this.overlay.css("opacity", .01),
            this.overlay.css("position", "absolute"),
            this.overlay.appendTo(e(document.body)),
            this.host.coord(),
            this.overlay.css("left", "0px"),
            this.overlay.css("top", "0px"),
            this.overlay.width(e(window).width()),
            this.overlay.height(e(window).height()),
            this.overlay.addClass("jqx-disableselect"),
            "horizontal" == this.orientation ? this.overlay.css("cursor", "row-resize") : this.overlay.css("cursor", "col-resize"))
        },
        _startDrag: function(b) {
            return b.target == this.splitBarButton[0] || this.disabled || this.panels[0].collapsed || this.panels[1].collapsed || !this.resizable ? !0 : null == this.overlay ? (this._dragging = !0,
            this._initOverlay(!0),
            this._dragStart = e.jqx.position(b),
            !1) : !0
        },
        _drag: function(b) {
            if (this.panels[0].collapsed || this.panels[1].collapsed || this.disabled || !this._dragging)
                return !0;
            var d = "horizontal" == this.orientation ? "top" : "left"
              , c = "vertical" == this.orientation ? "width" : "height";
            this._position = e.jqx.position(b);
            if (this.overlay && !this._splitBarClone && 3 <= Math.abs(this._position[d] - this._dragStart[d]))
                b = this.splitBar.coord(),
                this._cloneStart = {
                    left: b.left,
                    top: b.top
                },
                this._splitBarClone = this._createSplitBarClone(),
                this._raiseEvent(3, {
                    panels: this.panels
                });
            else {
                if (this._splitBarClone) {
                    var f = this.host[c]()
                      , g = f / 100;
                    c = this._splitBarClone[c]() + 2;
                    var h = parseInt(this.host.coord()[d]);
                    var k = this._position[d] - this._dragStart[d] + this._cloneStart[d] - h;
                    0 > k && (k = 0);
                    k > f + 0 - c && (k = f + 0 - c);
                    h = this.panels[0].min;
                    var l = this.panels[1].min;
                    -1 != l.toString().indexOf("%") && (l = parseFloat(l) * g);
                    -1 != h.toString().indexOf("%") && (h = parseFloat(h) * g);
                    this._splitBarClone.removeClass(this.toThemeProperty("jqx-splitter-splitbar-invalid"));
                    k < h && (this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid")),
                    k = h);
                    k > f + 0 - c - l && (this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid")),
                    k = f + 0 - c - l);
                    this._splitBarClone.css(d, k);
                    b.preventDefault && b.preventDefault();
                    b.stopPropagation && b.stopPropagation();
                    return !1
                }
                return !0
            }
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this._arrange()
        },
        _resize: function() {
            var b = "horizontal" == this.orientation ? "height" : "width"
              , d = this._splitBarClone.css("horizontal" == this.orientation ? "top" : "left");
            b = this.host[b]();
            var c = 1 / (b / 100);
            -1 != this.panels[0].size.toString().indexOf("%") ? (this.panels[0].size = parseFloat(d) * c + "%",
            this.panels[1].size = 100 - parseFloat(d) * c + "%") : (this.panels[0].size = parseFloat(d),
            this.panels[1].size = b - parseFloat(d));
            this._layoutPanels();
            this._raiseEvent(0, {
                panels: this.panels
            })
        },
        _stopDrag: function() {
            this._dragging && this._initOverlay();
            this._dragging = !1;
            if (this._splitBarClone) {
                if (this.panels[0].collapsed || this.panels[1].collapsed || this.disabled)
                    return !0;
                this._resize();
                this._splitBarClone.remove();
                this._splitBarClone = null
            }
        },
        _createSplitBarClone: function() {
            var b = this.splitBar.clone();
            b.fadeTo(0, .7);
            b.css("z-index", 99999);
            "vertical" == this.orientation ? b.css("cursor", "col-resize") : b.css("cursor", "row-resize");
            this.host.append(b);
            return b
        },
        _eventName: function(b) {
            return this._isTouchDevice ? this._eventsMap[b] : b
        },
        _addHandlers: function() {
            var b = this;
            e.jqx.utilities.resize(this.host, function() {
                b._layoutPanels()
            });
            this.addHandler(this.splitBar, "dragstart." + this.element.id, function(c) {
                return !1
            });
            this.splitBarButton && (this.addHandler(this.splitBarButton, "click." + this.element.id, function() {
                b.panels[0].collapsible ? b.panels[0].collapsed ? b.expand() : b.collapse() : b.panels[1].collapsible && (b.panels[1].collapsed ? b.expand() : b.collapse())
            }),
            this.addHandler(this.splitBarButton, this._eventName("mouseenter"), function() {
                b.splitBarButton.addClass(b.toThemeProperty("jqx-splitter-collapse-button-hover"));
                b.splitBarButton.addClass(b.toThemeProperty("jqx-fill-state-hover"))
            }),
            this.addHandler(this.splitBarButton, this._eventName("mouseleave"), function() {
                b.splitBarButton.removeClass(b.toThemeProperty("jqx-splitter-collapse-button-hover"));
                b.splitBarButton.removeClass(b.toThemeProperty("jqx-fill-state-hover"))
            }));
            this.addHandler(e(document), this._eventName("mousemove") + "." + this.element.id, function(c) {
                return b._drag(c)
            });
            this.addHandler(e(document), this._eventName("mouseup") + "." + this.element.id, function() {
                return b._stopDrag()
            });
            this.addHandler(this.splitBar, this._eventName("mousedown"), function(c) {
                return b._startDrag(c)
            });
            this.addHandler(this.splitBar, this._eventName("mouseenter"), function() {
                b.resizable && !b.disabled && (b.splitBar.addClass(b.toThemeProperty("jqx-splitter-splitbar-hover")),
                b.splitBar.addClass(b.toThemeProperty("jqx-fill-state-hover")))
            });
            this.addHandler(this.splitBar, this._eventName("mouseleave"), function() {
                b.resizable && !b.disabled && (b.splitBar.removeClass(b.toThemeProperty("jqx-splitter-splitbar-hover")),
                b.splitBar.removeClass(b.toThemeProperty("jqx-fill-state-hover")))
            });
            if (("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self) {
                var d = null;
                window.parent && document.referrer && (d = document.referrer);
                d && -1 != d.indexOf(document.location.host) && (d = function(c) {
                    b._stopDrag()
                }
                ,
                window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", d, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", d))
            }
        },
        _removeHandlers: function() {
            this.removeHandler(e(window), "resize." + this.element.id);
            this.splitBarButton && (this.removeHandler(this.splitBarButton, "click." + this.element.id),
            this.removeHandler(this.splitBarButton, this._eventName("mouseenter")),
            this.removeHandler(this.splitBarButton, this._eventName("mouseleave")));
            this.removeHandler(e(document), this._eventName("mousemove") + "." + this.element.id);
            this.removeHandler(e(document), this._eventName("mouseup") + "." + this.element.id);
            this.splitBar && (this.removeHandler(this.splitBar, "dragstart." + this.element.id),
            this.removeHandler(this.splitBar, this._eventName("mousedown")),
            this.removeHandler(this.splitBar, this._eventName("mouseenter")),
            this.removeHandler(this.splitBar, this._eventName("mouseleave")))
        },
        render: function() {
            this.splitBar && this.splitBar.remove();
            var b = this.host.children();
            if (2 != b.length)
                throw "Invalid HTML Structure! jqxSplitter requires 1 container DIV tag and 2 nested DIV tags.";
            if (2 == b.length) {
                var d = b[0].className.split(" ");
                b = b[1].className.split(" ");
                if (-1 != d.indexOf("jqx-reset") && -1 != d.indexOf("jqx-splitter") && -1 != d.indexOf("jqx-widget"))
                    throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!";
                if (-1 != b.indexOf("jqx-reset") && -1 != b.indexOf("jqx-splitter") && -1 != b.indexOf("jqx-widget"))
                    throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!";
            }
            if (0 < this.host.parent().length && -1 != this.host.parent()[0].className.indexOf("jqx-splitter")) {
                if (-1 != this.element.className.indexOf("jqx-splitter-panel"))
                    throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!";
                this._isNested = !0;
                300 == this.width && (this.width = "100%");
                300 == this.height && (this.height = "100%");
                "100%" == this.width && "100%" == this.height && (this.host.addClass("jqx-splitter-nested"),
                -1 != this.host.parent()[0].className.indexOf("jqx-splitter-panel") && this.host.parent().addClass("jqx-splitter-panel-nested"))
            }
            this._hasBorder = 0 == this.host.hasClass("jqx-hideborder") || "" != this.element.style.borderTopWidth;
            this._removeHandlers();
            this._isTouchDevice = e.jqx.mobile.isTouchDevice();
            this._validate();
            this.panel1.css("left", "0px");
            this.panel1.css("top", "0px");
            this.panel2.css("left", "0px");
            this.panel2.css("top", "0px");
            this.splitBar = e("<div><div></div></div>");
            this.resizable || this.splitBar.css("cursor", "default");
            this.splitBarButton = this.splitBar.find("div:last");
            this._setTheme();
            this.splitBar.insertAfter(this.panel1);
            this._arrange();
            0 == this.panels[0].collapsible && 0 == this.panels[1].collapsible && this.splitBarButton.hide();
            this._addHandlers();
            this.initContent && this.initContent();
            this.disabled && this.disable()
        },
        _hiddenParent: function() {
            return e.jqx.isHidden(this.host)
        },
        _setTheme: function() {
            this.panel1.addClass(this.toThemeProperty("jqx-widget-content"));
            this.panel2.addClass(this.toThemeProperty("jqx-widget-content"));
            this.panel1.addClass(this.toThemeProperty("jqx-splitter-panel"));
            this.panel2.addClass(this.toThemeProperty("jqx-splitter-panel"));
            this.panel1.addClass(this.toThemeProperty("jqx-reset"));
            this.panel2.addClass(this.toThemeProperty("jqx-reset"));
            this.host.addClass(this.toThemeProperty("jqx-reset"));
            this.host.addClass(this.toThemeProperty("jqx-splitter"));
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.host.addClass(this.toThemeProperty("jqx-widget-content"));
            this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-" + this.orientation));
            this.splitBar.addClass(this.toThemeProperty("jqx-fill-state-normal"));
            this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-collapse-button-" + this.orientation));
            this.splitBarButton.addClass(this.toThemeProperty("jqx-fill-state-pressed"))
        },
        _validate: function() {
            var b = this.host.children();
            if (2 != b.length)
                throw "Invalid HTML Structure! jqxSplitter requires two nested DIV tags!";
            this.panels && !this.panels[1] ? this.panels[0] ? this.panels[1] = {} : this.panels = [{
                size: "50%"
            }, {
                size: "50%"
            }] : void 0 == this.panels && (this.panels = [{
                size: "50%"
            }, {
                size: "50%"
            }]);
            b = this.host.children();
            this.panel1 = this.panels[0].element = e(b[0]);
            this.panel2 = this.panels[1].element = e(b[1]);
            this.panel1[0].style.minWidth = "";
            this.panel1[0].style.maxWidth = "";
            this.panel2[0].style.minWidth = "";
            this.panel2[0].style.maxWidth = "";
            e.each(this.panels, function() {
                void 0 == this.min && (this.min = 0);
                void 0 == this.size && (this.size = 0);
                0 > this.size && (this.size = 0);
                0 > this.min && (this.min = 0);
                void 0 == this.collapsible && (this.collapsible = !0);
                void 0 == this.collapsed && (this.collapsed = !1);
                0 != this.size && (-1 != this.size.toString().indexOf("px") && (this.size = parseInt(this.size)),
                -1 == this.size.toString().indexOf("%") ? parseInt(this.min) > parseInt(this.size) && (this.min = this.size) : -1 != this.min.toString().indexOf("%") && parseInt(this.min) > parseInt(this.size) && (this.min = this.size))
            })
        },
        _arrange: function() {
            if (null != this.width) {
                var b = this.width;
                "string" != typeof b && (b = parseInt(this.width) + "px");
                this.host.css("width", b)
            }
            null != this.height && (b = this.height,
            "string" != typeof b && (b = parseInt(this.height) + "px"),
            this.host.css("height", b));
            this._splitBarSize = this._isTouchDevice ? this.touchSplitBarSize : this.splitBarSize;
            this.showSplitBar || (this._splitBarSize = 0,
            this.splitBar.hide());
            b = "horizontal" == this.orientation ? "width" : "height";
            this.splitBar.css(b, "100%");
            this.panel1.css(b, "100%");
            this.panel2.css(b, "100%");
            "horizontal" == this.orientation ? this.splitBar.height(this._splitBarSize) : this.splitBar.width(this._splitBarSize);
            "vertical" === this.orientation ? (this.splitBarButton.width(this._splitBarSize),
            this.splitBarButton.height(45)) : (this.splitBarButton.height(this._splitBarSize),
            this.splitBarButton.width(45));
            this.splitBarButton.css("position", "relative");
            "vertical" === this.orientation ? (this.splitBarButton.css("top", "50%"),
            this.splitBarButton.css("left", "0"),
            this.splitBarButton.css("margin-top", "-23px"),
            this.splitBarButton.css("margin-left", "-0px")) : (this.splitBarButton.css("left", "50%"),
            this.splitBarButton.css("top", "0"),
            this.splitBarButton.css("margin-left", "-23px"),
            this.splitBarButton.css("margin-top", "-0px"));
            this._layoutPanels()
        },
        collapse: function() {
            if (!this.disabled) {
                var b = -1;
                this.panels[0].collapsed = this.panels[1].collapsed = !1;
                this.panels[0].element[0].style.visibility = "inherit";
                this.panels[1].element[0].style.visibility = "inherit";
                this.panels[0].collapsible ? b = 0 : this.panels[1].collapsible && (b = 1);
                -1 != b && (this.panels[b].collapsed = !0,
                this.panels[b].element[0].style.visibility = "hidden",
                this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")),
                this._layoutPanels(),
                this._raiseEvent(2, {
                    index: b,
                    panels: this.panels
                }),
                this._raiseEvent(0, {
                    panels: this.panels
                }))
            }
        },
        expand: function() {
            if (!this.disabled) {
                var b = -1;
                this.panels[0].collapsed = this.panels[1].collapsed = !1;
                this.panels[0].element[0].style.visibility = "inherit";
                this.panels[1].element[0].style.visibility = "inherit";
                this.panels[0].collapsible ? b = 0 : this.panels[1].collapsible && (b = 1);
                -1 != b && (this.panels[b].collapsed = !1,
                this.panels[b].element[0].style.visibility = "inherit",
                this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")),
                this._layoutPanels(),
                this._raiseEvent(1, {
                    index: b,
                    panels: this.panels
                }),
                this._raiseEvent(0, {
                    panels: this.panels
                }))
            }
        },
        disable: function() {
            this.disabled = !0;
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));
            this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"))
        },
        enable: function() {
            this.disabled = !1;
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));
            this.splitBarButton.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"))
        },
        refresh: function(b) {
            1 != b && this._arrange()
        },
        propertyChangedHandler: function(b, d, c, f) {
            "panels" === d || "orientation" === d || "showSplitBar" === d ? b.render() : ("touchMode" === d && (b._isTouchDevice = f),
            "disabled" === d ? f ? b.disable() : b.enable() : "theme" === d ? e.jqx.utilities.setTheme(c, f, b.host) : b.refresh())
        },
        _layoutPanels: function() {
            var b = "horizontal" == this.orientation ? "height" : "width", d = "horizontal" == this.orientation ? "top" : "left", c, f, g = parseInt(this._splitBarSize) + 2;
            this.showSplitBar || (g = 0);
            var h = this.host[b]()
              , k = h / 100
              , l = 1 / k
              , m = l * g
              , n = this.panel1
              , p = this.panel2
              , q = this.panels[0].size;
            this.panels[0].collapsed && (c = !0);
            this.panels[1].collapsed && (f = !0);
            var t = this.panels[0].min;
            var v = this.panels[1].min;
            -1 != v.toString().indexOf("%") && (v = parseFloat(v) * k);
            -1 != t.toString().indexOf("%") && (t = parseFloat(t) * k);
            this._isNested && this._isTouchDevice && ("horizontal" == this.orientation ? (n.width(this.host.width()),
            p.width(this.host.width())) : (n.height(this.host.height()),
            p.height(this.host.height())));
            if (c)
                t = Math.max(v, h - g),
                n[b](0),
                p[b](t);
            else if (f)
                t = Math.max(t, h - g),
                p[b](0),
                n[b](t);
            else if (-1 != q.toString().indexOf("%"))
                c = 100 - parseFloat(q),
                n.css(b, parseFloat(q) + "%"),
                p.css(b, c - m + "%"),
                c = p[b](),
                c < v && (v = (c - v) * l,
                q = parseFloat(q) + parseFloat(v),
                c = 100 - parseFloat(q),
                n.css(b, parseFloat(q) + "%"),
                p.css(b, c - m + "%")),
                n[b]() < t && n.css(b, parseFloat(t * l) + "%");
            else {
                c = h - q - g;
                if (n[0].style[b] != q + "px")
                    n[b](q);
                if (p[0].style[b] != c + "px")
                    p[b](c);
                c < v && (q += c - v,
                p[b](v),
                n[b](q));
                if (q < t)
                    n[b](t)
            }
            b = this.panel1[b]();
            this.splitBar[0].style[d] != b + "px" && ("vertical" == this.orientation ? (this.splitBar[0].style.borderLeftColor = "",
            this.splitBar[0].style.borderRightColor = "",
            this.splitBarButton[0].style.width = parseInt(this._splitBarSize) + "px",
            this.splitBarButton[0].style.left = "0px") : (this.splitBar[0].style.borderTopColor = "",
            this.splitBar[0].style.borderBottomColor = "",
            this.splitBarButton[0].style.height = parseInt(this._splitBarSize) + "px",
            this.splitBarButton[0].style.top = "0px"),
            this._hasBorder && (h - g == b ? "vertical" == this.orientation ? (this.splitBar[0].style.borderRightColor = "transparent",
            this.splitBarButton[0].style.width = parseInt(this._splitBarSize + 1) + "px") : (this.splitBar[0].style.borderBottomColor = "transparent",
            this.splitBarButton[0].style.height = parseInt(this._splitBarSize + 1) + "px") : 0 == b && ("vertical" == this.orientation ? (this.splitBar[0].style.borderLeftColor = "transparent",
            this.splitBarButton[0].style.width = parseInt(this._splitBarSize + 1) + "px",
            this.splitBarButton[0].style.left = "-1px") : (this.splitBar[0].style.borderTopColor = "transparent",
            this.splitBarButton[0].style.height = parseInt(this._splitBarSize + 1) + "px",
            this.splitBarButton[0].style.top = "-1px"))),
            this.splitBar[0].style[d] = b + "px");
            this.panel2[0].style[d] != b + g + "px" && (this.panel2[0].style[d] = b + g + "px");
            this._raiseEvent(4, {
                panels: this.panels
            })
        },
        destroy: function() {
            this._removeHandlers();
            e.jqx.utilities.resize(this.host, null, !0);
            this.host.remove()
        },
        _raiseEvent: function(b, d) {
            b = new e.Event(this._events[b]);
            b.owner = this;
            b.args = d;
            d = [{}, {}];
            d[0].size = "vertical" == this.orientation ? this.panel1[0].offsetWidth : this.panel1[0].offsetHeight;
            d[1].size = "vertical" == this.orientation ? this.panel2[0].offsetWidth : this.panel2[0].offsetHeight;
            d[0].min = this.panels[0].min;
            d[1].min = this.panels[1].min;
            d[0].collapsible = this.panels[0].collapsible;
            d[1].collapsible = this.panels[1].collapsible;
            d[0].collapsed = this.panels[0].collapsed;
            d[1].collapsed = this.panels[1].collapsed;
            b.args.panels = d;
            return this.host.trigger(b)
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxTabs", "", {});
    e.extend(e.jqx._jqxTabs.prototype, {
        defineInstance: function() {
            var b = {
                scrollAnimationDuration: 200,
                enabledHover: !0,
                disabled: !1,
                collapsible: !1,
                animationType: "none",
                enableScrollAnimation: !0,
                contentTransitionDuration: 450,
                toggleMode: "click",
                selectedItem: 0,
                height: "auto",
                width: "auto",
                position: "top",
                selectionTracker: !1,
                scrollable: !0,
                scrollPosition: "right",
                scrollStep: 70,
                autoHeight: !0,
                headerHeight: null,
                showCloseButtons: !1,
                canCloseAllTabs: !0,
                closeButtonSize: 16,
                arrowButtonSize: 16,
                keyboardNavigation: !0,
                reorder: !1,
                selectionTrackerAnimationDuration: 300,
                _isTouchDevice: !1,
                roundedCorners: !0,
                _headerExpandingBalance: 0,
                _dragStarted: !1,
                _tabCaptured: !1,
                _lastUnorderedListPosition: 0,
                _selectedItem: 0,
                _titleList: [],
                _contentList: [],
                _contentWrapper: null,
                _unorderedList: null,
                _scrollTimeout: null,
                isCollapsed: !1,
                touchMode: !1,
                initTabContent: null,
                enableDropAnimation: !1,
                _currentEvent: null,
                _needScroll: !0,
                _isAnimated: {},
                _events: "created selected add removed enabled disabled selecting unselecting unselected dragStart dragEnd locked unlocked collapsed expanded tabclick".split(" "),
                _initTabContentList: [],
                _invalidArgumentExceptions: {
                    invalidScrollAnimationDuration: "The scroll animation duration is not valid!",
                    invalidWidth: "Width you've entered is invalid!",
                    invalidHeight: "Height you've entered is invalid!",
                    invalidAnimationType: "You've entered invalid animation type!",
                    invalidcontentTransitionDuration: "You've entered invalid value for contentTransitionDuration!",
                    invalidToggleMode: "You've entered invalid value for toggleMode!",
                    invalidPosition: "You've entered invalid position!",
                    invalidScrollPosition: "You've entered invalid scroll position!",
                    invalidScrollStep: "You've entered invalid scroll step!",
                    invalidStructure: "Invalid structure!",
                    invalidArrowSize: "Invalid scroll button size!",
                    invalidCloseSize: "Invalid close button size!"
                },
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                rtl: !1
            };
            if (this === e.jqx._jqxTabs.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            this._IE8 = e.jqx.browser.msie && 9 > e.jqx.browser.version;
            e.jqx.aria(this);
            this.element.className += " " + this.toThemeProperty("jqx-tabs jqx-widget jqx-widget-content");
            this.element.setAttribute("role", "tablist");
            for (var b = this.host.children(), d = 0; d < b.length; d++) {
                var c = b[d];
                "ul" === c.nodeName.toLowerCase() ? this._unorderedList = c : "div" === c.nodeName.toLowerCase() && this._contentList.push(c)
            }
            this._unorderedListHelper = e(this._unorderedList);
            this._unorderedListHelper.initAnimate && this._unorderedListHelper.initAnimate();
            this._closeButtonList = [];
            this._selectedItem = this.selectedItem;
            this._isTouchDevice = e.jqx.mobile.isTouchDevice();
            this._needScroll = this.scrollable;
            this.selectionTracker && (this.selectionTracker = this._seletionTrackerBrowserCheck());
            this._isTouchDevice && (this.keyboardNavigation = this.reorder = !1);
            this._titleList = this._unorderedListHelper.children();
            for (b = this._titleList.length; b; )
                b--,
                this._titleList[b].setAttribute("role", "tab"),
                this._titleList[b].getAttribute("id") || this._titleList[b].setAttribute("id", this.element.id + "Tab" + b),
                this._contentList[b].setAttribute("role", "tabpanel");
            this._validateProperties();
            this._refresh();
            this._moveSelectionTrack(this._selectedItem, 0);
            this.disabled && this.disable();
            this.element.tabIndex = 0;
            this._raiseEvent(0);
            this._enableWindowResize()
        },
        _hiddenParent: function() {
            if ("none" === this.host.css("display"))
                return !0;
            var b = !1;
            e.each(this.host.parents(), function() {
                if ("none" === e(this).css("display"))
                    return b = !0,
                    !1
            });
            return b
        },
        _enableWindowResize: function() {
            var b = this
              , d = e.jqx.isHidden(b.host);
            e.jqx.utilities.resize(this.host, function() {
                d ? (b._uiRefresh(!0),
                d = !1) : b.refresh();
                b._refreshBarPosition()
            })
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            e.jqx.isHidden(this.host) ? this._uiRefresh(!0) : this.refresh()
        },
        refresh: function(b) {
            !0 === b && void 0 !== b || this._setSize()
        },
        _seletionTrackerBrowserCheck: function() {
            var b = "Browser CodeName: " + navigator.appCodeName;
            b += "Browser Name: " + navigator.appName;
            b += "Browser Version: " + navigator.appVersion;
            b += "Platform: " + navigator.platform;
            b += "User-agent header: " + navigator.userAgent;
            return -1 !== b.indexOf("IEMobile") || -1 !== b.indexOf("Windows Phone OS") || e.jqx.browser.msie && 7 >= e.jqx.browser.version ? !1 : !0
        },
        render: function() {
            this._refresh()
        },
        _uiRefresh: function(b) {
            this._unorderedListLeftBackup = this._unorderedListHelper.css("left");
            b && this._render();
            this._addStyles();
            this._performLayout();
            this._prepareTabs();
            this._removeEventHandlers();
            this._addEventHandlers();
            "auto" === this._unorderedListLeftBackup && (this._unorderedListLeftBackup = this._getArrowsDisplacement());
            this._unorderedList.style.left = this._toPx(this._unorderedListLeftBackup);
            this.rtl && this.scrollable && this._rightArrow && "hidden" !== e(this._rightArrow).css("visibility") && (b = 2 * this.arrowButtonSize,
            b = this._width(this.element) - parseInt(this._width(this._unorderedList) + b + parseInt(this._unorderedListHelper.css("margin-left"), 10), 10),
            this._unorderedList.style.left = b + "px");
            var d = this;
            setTimeout(function() {
                d._performLayout()
            }, 100)
        },
        _refresh: function() {
            e.jqx.isHidden(this.host) || (this._uiRefresh(!0),
            this.host.addClass("jqx-tabs-header-position-" + this.position))
        },
        _addStyles: function() {
            this._unorderedList.className += " " + this.toThemeProperty("jqx-tabs-title-container");
            this._unorderedList.style.outline = "none";
            this._unorderedList.style.whiteSpace = "nowrap";
            this._unorderedList.style.marginTop = "0px";
            this._unorderedList.style.marginBottom = "0px";
            this._unorderedList.style.padding = "0px";
            this._unorderedList.style.background = "transparent";
            this._unorderedList.style.border = "none";
            this._unorderedList.style.borderStyle = "none";
            this._unorderedList.style.textIndent = "0px";
            for (var b = this.length(); b; ) {
                b--;
                var d = this._titleList[b]
                  , c = "jqx-tabs-title jqx-item";
                d.style.padding = "";
                "bottom" === this.position && (c += " jqx-tabs-title-bottom");
                d.disabled && (c += " jqx-tabs-title-disable jqx-fill-state-disabled");
                switch (this.position) {
                case "top":
                    c += " jqx-rc-t";
                    this._removeClass(this._contentList[b], this.toThemeProperty("jqx-rc-t"));
                    this._contentList[b].className += " " + this.toThemeProperty("jqx-rc-b");
                    break;
                case "bottom":
                    c += " jqx-rc-b",
                    this._removeClass(this._contentList[b], this.toThemeProperty("jqx-rc-b")),
                    this._contentList[b].className += " " + this.toThemeProperty("jqx-rc-t")
                }
                d.className = "jqx-reset jqx-disableselect " + this.toThemeProperty(c)
            }
            if (this.selectionTracker)
                switch (this.position) {
                case "top":
                    this._removeClass(this._selectionTracker, this.toThemeProperty("jqx-rc-b"));
                    this._selectionTracker.className += " " + this.toThemeProperty("jqx-rc-t");
                    break;
                case "bottom":
                    this._removeClass(this._selectionTracker, this.toThemeProperty("jqx-rc-t")),
                    this._selectionTracker.className += " " + this.toThemeProperty("jqx-rc-b")
                }
        },
        _raiseEvent: function(b, d) {
            var c = new e.Event(this._events[b]);
            c.owner = this;
            c.args = d;
            if (6 === b || 7 === b)
                c.cancel = !1,
                this._currentEvent = c;
            d = "";
            try {
                if (d = this.host.trigger(c),
                1 === b) {
                    var f = this;
                    if (this.selectionTracker || "none" !== this.animationType)
                        setTimeout(function() {
                            !f._initTabContentList[f.selectedItem] && f.initTabContent && (f.initTabContent(f.selectedItem),
                            f._initTabContentList[f.selectedItem] = !0);
                            var k = new e.Event("loadContent");
                            k.owner = this;
                            0 < f._contentList.length && f._contentList[f.selectedItem] && e(f._contentList[f.selectedItem]).trigger(k)
                        }, 50 + f.selectionTrackerAnimationDuration);
                    else {
                        var g = new e.Event("loadContent");
                        !f._initTabContentList[f.selectedItem] && f.initTabContent && (f.initTabContent(f.selectedItem),
                        f._initTabContentList[f.selectedItem] = !0);
                        g.owner = this;
                        var h = new e.Event("resize");
                        this.host.trigger(h)
                    }
                }
            } catch (k) {
                k && console && console.log(k)
            }
            return d
        },
        _getArrowsDisplacement: function() {
            if (!this._needScroll)
                return 0;
            var b = this.arrowButtonSize
              , d = this.arrowButtonSize;
            return "left" === this.scrollPosition ? b + d : "both" === this.scrollPosition ? b : 0
        },
        _scrollRight: function(b) {
            this._stop(this._unorderedListHelper);
            this._unlockAnimation("unorderedList");
            var d = parseInt(this._width(this._unorderedList) + parseInt(this._unorderedListHelper.css("margin-left"), 10), 10)
              , c = this._width(this.element)
              , f = parseInt(this._unorderedListHelper.css("left"), 10)
              , g = this._getArrowsDisplacement();
            if (this.scrollable) {
                var h = this._leftArrow.offsetWidth;
                var k = this._rightArrow.offsetWidth
            } else
                k = h = 0;
            b = this.enableScrollAnimation ? b : 0;
            if (!(this._width(this._headerWrapper) > parseInt(this._unorderedListHelper.css("margin-left"), 10) + this._width(this._unorderedList)))
                if (Math.abs(f) + this.scrollStep < Math.abs(c - d) + h + k + g) {
                    g = f - this.scrollStep;
                    var l = f - this.scrollStep + parseInt(e(this._titleList[this._selectedItem]).position().left, 10)
                } else
                    g = c - d - (2 * this.arrowButtonSize - g),
                    g < parseInt(this._unorderedListHelper.css("left"), 10) - 4 && g > parseInt(this._unorderedListHelper.css("left"), 10) + 4 && (l = c - d - h - k + parseInt(e(this._titleList[this._selectedItem]).position().left, 10));
            this._performScrollAnimation(g, l, b)
        },
        _scrollLeft: function(b) {
            this._stop(this._unorderedListHelper);
            this._unlockAnimation("unorderedList");
            var d = parseInt(this._unorderedListHelper.css("left"), 10)
              , c = this._getArrowsDisplacement();
            b = this.enableScrollAnimation ? b : 0;
            if (!(this._width(this._headerWrapper) >= this._width(this._unorderedList)))
                if (d + this.scrollStep < c) {
                    c = d + this.scrollStep;
                    var f = d + this.scrollStep + parseInt(e(this._titleList[this._selectedItem]).position().left, 10)
                } else
                    c < parseInt(this._unorderedListHelper.css("left"), 10) - 4 && c > parseInt(this._unorderedListHelper.css("left"), 10) + 4 && (f = parseInt(e(this._titleList[this._selectedItem]).position().left, 10));
            this._performScrollAnimation(c, f, b)
        },
        _performScrollAnimation: function(b, d, c) {
            var f = this;
            void 0 !== d && this._moveSelectionTrack(this._selectedItem, 0, d);
            this._lockAnimation("unorderedList");
            f._refreshBarPosition();
            this._unorderedListHelper.animate({
                left: b
            }, c, function() {
                f._moveSelectionTrack(f.selectedItem, 0);
                f._unlockAnimation("unorderedList");
                f._refreshBarPosition()
            })
        },
        _addKeyboardHandlers: function() {
            var b = this;
            this.keyboardNavigation && this.addHandler(this.host, "keydown", function(d) {
                if (!b._activeAnimation()) {
                    var c = b.selectionTracker
                      , f = b.getContentAt(b._selectedItem);
                    if (e(d.target).ischildof(f) || e(document.activeElement).ischildof(e(f)))
                        return !0;
                    switch (d.keyCode) {
                    case 37:
                        return b.rtl ? b.next() : b.previous(),
                        !1;
                    case 39:
                        return b.rtl ? b.previous() : b.next(),
                        !1;
                    case 36:
                        return b.first(),
                        !1;
                    case 35:
                        return b.last(),
                        !1;
                    case 27:
                        b._tabCaptured && (b._cancelClick = !0,
                        b._uncapture(null, b.selectedItem),
                        b._tabCaptured = !1)
                    }
                    b.selectionTracker = c
                }
                return !0
            })
        },
        _addScrollHandlers: function() {
            var b = this;
            this.addHandler(this._leftArrow, "mousedown", function() {
                b._startScrollRepeat(!0, b.scrollAnimationDuration)
            });
            this.addHandler(this._rightArrow, "mousedown", function() {
                b._startScrollRepeat(!1, b.scrollAnimationDuration)
            });
            this.addHandler(this._rightArrow, "mouseleave", function() {
                clearTimeout(b._scrollTimeout)
            });
            this.addHandler(this._leftArrow, "mouseleave", function() {
                clearTimeout(b._scrollTimeout)
            });
            this.addHandler(e(document), "mouseup.tab" + this.element.id, this._mouseUpScrollDocumentHandler, this);
            this.addHandler(e(document), "mouseleave.tab" + this.element.id, this._mouseLeaveScrollDocumentHandler, this)
        },
        _mouseLeaveScrollDocumentHandler: function(b) {
            b = b.data;
            b._scrollTimeout && clearTimeout(b._scrollTimeout)
        },
        _mouseUpScrollDocumentHandler: function(b) {
            clearTimeout(b.data._scrollTimeout)
        },
        _mouseUpDragDocumentHandler: function(b) {
            var d = b.data;
            d._tabCaptured && d._dragStarted && d._uncapture(b);
            d._tabCaptured = !1
        },
        _addReorderHandlers: function() {
            this.addHandler(e(document), "mousemove.tab" + this.element.id, this._moveElement, this);
            this.addHandler(e(document), "mouseup.tab" + this.element.id, this._mouseUpDragDocumentHandler, this)
        },
        _addEventHandlers: function() {
            for (var b = this.length(); b; )
                b--,
                this._addEventListenerAt(b);
            this.keyboardNavigation && this._addKeyboardHandlers();
            this.scrollable && this._addScrollHandlers();
            this.reorder && !this._isTouchDevice && this._addReorderHandlers();
            var d = this;
            try {
                if (("" !== document.referrer || window.frameElement) && null !== window.top && window.top !== window.self) {
                    b = function() {
                        d._tabCaptured && (d._cancelClick = !0,
                        d._uncapture(null, d.selectedItem),
                        d._tabCaptured = !1)
                    }
                    ;
                    var c = null;
                    window.parent && document.referrer && (c = document.referrer);
                    c && -1 !== c.indexOf(document.location.host) && window.top.document && this.addHandler(e(window.top.document), "mouseup.tabs" + this.element.id, b)
                }
            } catch (f) {}
        },
        focus: function() {
            try {
                this.host.focus();
                var b = this;
                setTimeout(function() {
                    b.host.focus()
                }, 25)
            } catch (d) {}
        },
        _getFocusedItem: function(b) {
            for (var d = this.length(); d; ) {
                d--;
                var c = this._titleList[d]
                  , f = this._outerWidth(c, !0)
                  , g = parseInt(e(c).offset().left, 10);
                if (g <= b && g + f >= b && c !== this._capturedElement && !this._titleList[d].locked && !0 !== this._titleList[d].disabled)
                    return d
            }
            return -1
        },
        _uncapture: function(b) {
            var d = this.selectionTracker;
            this._unorderedListLeftBackup = this._unorderedListHelper.css("left");
            this._tabCaptured = this._dragStarted = !1;
            var c = this._indexOf(this._capturedElement);
            if (this._capturedElement) {
                switch (this.position) {
                case "top":
                    this._capturedElement.style.bottom = "0px";
                    break;
                case "bottom":
                    this._capturedElement.style.top = "0px"
                }
                var f;
                b && (f = this._getFocusedItem(b.clientX));
                -1 !== f && b ? (this._raiseEvent(10, {
                    item: c,
                    dropIndex: f
                }),
                this._reorderItems(f, c)) : this._capturedElement.style.left = "0px";
                for (var g = 0; g < this._titleList.length; g++)
                    this._titleList[g].style.position = "static";
                this._reorderHeaderElements();
                this._unorderedList.style.position = "relative";
                this._unorderedList.style.top = "0px";
                this._prepareTabs();
                -1 !== f && b ? this._moveSelectionTrack(this._selectedItem, 0) : (this._selectedItem = c,
                this._moveSelectionTrack(c, 0));
                this._addSelectStyle(this._selectedItem, !0);
                document.selection && document.selection.clear();
                this._unorderedList.style.left = this._toPx(this._unorderedListLeftBackup);
                this.selectionTracker = d
            }
        },
        _reorderItems: function(b, d) {
            var c = this._titleList[this.selectedItem]
              , f = this._titleList[d];
            "undefined" === typeof this._capturedElement && (this._capturedElement = f);
            e(f).remove();
            d < b ? this._titleList[b + 1] ? this._unorderedList.insertBefore(f, this._titleList[b + 1]) : this._unorderedList.appendChild(f) : this._unorderedList.insertBefore(f, this._titleList[b]);
            this._reorderElementArrays(b, d);
            this._getSelectedItem(c);
            this._removeEventHandlers();
            this._addEventHandlers()
        },
        _reorderElementArrays: function(b, d) {
            var c = this._contentList[d];
            if (d < b)
                for (; d <= b; d++)
                    this._titleList[d] = this._titleList[d + 1],
                    this._contentList[d] = this._contentList[d + 1];
            else
                for (; d >= b; d--)
                    this._titleList[d] = this._titleList[d - 1],
                    this._contentList[d] = this._contentList[d - 1];
            this._contentList[b] = c;
            this._titleList[b] = this._capturedElement
        },
        getSelectedItem: function() {
            return this.selectedItem
        },
        _getSelectedItem: function(b) {
            for (var d = this.length(); d; )
                if (d--,
                this._titleList[d] === b) {
                    this._selectedItem = this.selectedItem = d;
                    break
                }
        },
        _moveElement: function(b) {
            var d = b.data;
            if (d._tabCaptured)
                if (document.selection && document.selection.clear(),
                d._dragStarted)
                    d._performDrag(b),
                    clearTimeout(d._scrollTimeout);
                else {
                    var c = -parseInt(d._unorderedListHelper.css("left"), 10);
                    if (b.clientX + c > d._startX + 3 || b.clientX + c < d._startX - 3)
                        d._prepareTabForDragging(),
                        d._dragStarted = !0
                }
        },
        _performDrag: function(b) {
            var d = this.getZoomFactor()
              , c = -parseInt(this._unorderedListHelper.css("left"), 10);
            this._capturedElement.style.left = this._toPx(c + b.clientX / d - this._startX / d);
            this._lastX = b.clientX / d;
            this._moveSelectionTrack(this.selectedItem, 0)
        },
        getZoomFactor: function() {
            var b = 1;
            document.body.getBoundingClientRect && (b = document.body.getBoundingClientRect(),
            b = Math.round((b.right - b.left) / document.body.offsetWidth * 100) / 100);
            return b
        },
        _prepareTabForDragging: function() {
            this._capturedElement.style.position = "relative";
            this._capturedElement.style.left = "0px";
            this._capturedElement.style.top = "0px";
            this._capturedElement.style.zIndex = 300;
            this.selectedItem = this._indexOf(this._capturedElement);
            switch (this.position) {
            case "top":
                this._capturedElement.style.bottom = this._toPx(e(this._capturedElement).css("top"));
                break;
            case "bottom":
                this._capturedElement.style.top = this._toPx(e(this._capturedElement).css("top"))
            }
            this._raiseEvent(9, {
                item: this._indexOf(this._capturedElement)
            })
        },
        _dragScroll: function(b) {
            var d = parseInt(this._unorderedListHelper.css("left"), 10)
              , c = this
              , f = e(c._headerWrapper);
            b.clientX <= f.offset().left ? (this._scrollLeft(this.scrollAnimationDuration),
            this._capturedElement.style.left = parseInt(e(this._capturedElement).css("left"), 10) + this._lastUnorderedListPosition - d) : b.clientX > f.offset().left + c._width(this._headerWrapper) ? (this._scrollRight(this.scrollAnimationDuration),
            this._capturedElement.style.left = parseInt(e(this._capturedElement).css("left"), 10) + this._lastUnorderedListPosition - d) : (c._stop(c._unorderedListHelper),
            this._unlockAnimation("unorderedList"),
            clearTimeout(this._scrollTimeout));
            this._scrollTimeout = setTimeout(function() {
                c._dragScroll(b)
            }, this.scrollAnimationDuration);
            this._lastUnorderedListPosition = d
        },
        _captureElement: function(b, d) {
            this._tabCaptured || this._titleList[d].locked || !0 === this._titleList[d].disabled || this._activeAnimation() || (this._startX = -parseInt(this._unorderedListHelper.css("left"), 10) + b.clientX,
            this._startY = b.clientY,
            this._lastX = b.clientX,
            this._lastY = b.clientY,
            this._tabCaptured = !0,
            this._capturedElement = this._titleList[d])
        },
        _titleInteractionTrigger: function(b) {
            0 < this._headerExpandingBalance && this._removeOppositeBorder();
            this._selectedItem !== b ? (this.select(this._titleList[b], "toggle"),
            this._titleList[b].collapsed = !1,
            this.collapsible || ("auto" !== this.height ? this._contentWrapper.style.visibility = "visible" : this._contentWrapper.style.display = "block")) : this.collapsible && (this.isCollapsed ? this.expand() : this.collapse())
        },
        collapse: function() {
            var b = this._selectedItem;
            this.isCollapsed = !0;
            "auto" !== this.height ? this._contentWrapper.style.visibility = "hidden" : this._contentWrapper.style.display = "none";
            this._raiseEvent(13, {
                item: b
            });
            "top" === this.position ? (this._headerWrapper.className += " " + this.toThemeProperty("jqx-tabs-header-collapsed"),
            this.element.className += " " + this.toThemeProperty("jqx-tabs-collapsed")) : (this._headerWrapper.className += " " + this.toThemeProperty("jqx-tabs-header-collapsed-bottom"),
            this.element.className += " " + this.toThemeProperty("jqx-tabs-collapsed-bottom"))
        },
        expand: function() {
            var b = this._selectedItem;
            this.isCollapsed = !1;
            this._select(b, this.contentTransitionDuration, null, !1, !0);
            "auto" !== this.height ? this._contentWrapper.style.visibility = "visible" : this._contentWrapper.style.display = "block";
            this._raiseEvent(14, {
                item: b
            });
            "top" === this.position ? (this._removeClass(this._headerWrapper, this.toThemeProperty("jqx-tabs-header-collapsed")),
            this._removeClass(this.element, this.toThemeProperty("jqx-tabs-collapsed"))) : (this._removeClass(this._headerWrapper, this.toThemeProperty("jqx-tabs-header-collapsed-bottom")),
            this._removeClass(this.element, this.toThemeProperty("jqx-tabs-collapsed-bottom")))
        },
        _addSelectHandler: function(b) {
            var d = this;
            this.addHandler(this._titleList[b], "selectstart", function() {
                return !1
            });
            this.addHandler(this._titleList[b], this.toggleMode, function(c) {
                return function() {
                    d._raiseEvent("15", {
                        item: c
                    });
                    d._tabCaptured || d._cancelClick || d._titleInteractionTrigger(c);
                    return !0
                }
            }(b))
        },
        _addDragDropHandlers: function(b) {
            var d = this;
            this.addHandler(this._titleList[b], "mousedown", function(c) {
                d._captureElement(c, b)
            });
            this.addHandler(this._titleList[b], "mouseup", function(c) {
                d._tabCaptured && d._dragStarted ? (d._cancelClick = !0,
                d._uncapture(c, b)) : d._cancelClick = !1;
                return d._tabCaptured = !1
            })
        },
        _removeHoverStates: function() {
            var b = this;
            e.each(this._titleList, function() {
                b._removeClass(this, b.toThemeProperty("jqx-tabs-title-hover-top jqx-tabs-title-hover-bottom"))
            })
        },
        _addHoverHandlers: function(b) {
            var d = this
              , c = this._titleList[b];
            this.addHandler(c, "mouseenter mouseleave", function(f) {
                if (b !== d._selectedItem) {
                    var g = "jqx-fill-state-hover";
                    g = "top" === d.position ? g + " jqx-tabs-title-hover-top" : g + " jqx-tabs-title-hover-bottom";
                    "mouseenter" === f.type ? c.className += " " + d.toThemeProperty(g) : d._removeClass(c, d.toThemeProperty(g));
                    d.showCloseButtons && (g = d._closeButtonList[b],
                    "mouseenter" === f.type ? g.className += " " + d.toThemeProperty("jqx-tabs-close-button-hover", !0) : d._removeClass(g, d.toThemeProperty("jqx-tabs-close-button-hover", !0)))
                }
            })
        },
        _addEventListenerAt: function(b) {
            var d = this;
            this._titleList[b].disabled || (this.reorder && !this._isTouchDevice && this._addDragDropHandlers(b),
            this._addSelectHandler(b),
            this.enabledHover && this._addHoverHandlers(b),
            b = d._closeButtonList[b],
            this.removeHandler(b, "click"),
            this.addHandler(b, "click", function() {
                var c = e(this).parents("li").index();
                d.removeAt(c);
                return !1
            }))
        },
        _removeEventHandlers: function() {
            for (var b = this.length(); b; )
                b--,
                this._removeEventListenerAt(b);
            this.scrollable && (this.removeHandler(this._leftArrow, "mousedown"),
            this.removeHandler(this._rightArrow, "mousedown"));
            this.removeHandler(e(document), "mousemove.tab" + this.element.id, this._moveElement);
            this.removeHandler(e(document), "mouseup.tab" + this.element.id, this._mouseUpScrollDocumentHandler);
            this.removeHandler(e(document), "mouseup.tab" + this.element.id, this._mouseUpDragDocumentHandler);
            this.removeHandler(this.host, "keydown")
        },
        _removeEventListenerAt: function(b) {
            this.removeHandler(this._titleList[b], this.toggleMode);
            this.removeHandler(this._titleList[b], "mouseenter");
            this.removeHandler(this._titleList[b], "mouseleave");
            this.removeHandler(this._titleList[b], "mousedown");
            this.removeHandler(this._titleList[b], "mouseup");
            this.removeHandler(this._closeButtonList[b], "click")
        },
        _moveSelectionTrack: function(b, d, c) {
            var f = this;
            if (-1 !== b && 0 !== this._titleList.length && !(b >= this._titleList.length)) {
                var g = this._titleList[b]
                  , h = e(g);
                f._refreshBarPosition();
                if (this.selectionTracker && this._selectionTracker) {
                    f._stop(f._selectionTrackerHelper);
                    this._unlockAnimation("selectionTracker");
                    void 0 === c && (c = parseInt(h.position().left, 10),
                    isNaN(parseInt(this._unorderedListHelper.css("left"), 10)) || (c += parseInt(this._unorderedListHelper.css("left"), 10)),
                    isNaN(parseInt(this._unorderedListHelper.css("margin-left"), 10)) || (c += parseInt(this._unorderedListHelper.css("margin-left"), 10)),
                    isNaN(parseInt(h.css("margin-left"), 10)) || (c += parseInt(h.css("margin-left"), 10)),
                    isNaN(parseInt(h.css("margin-right"), 10)));
                    var k = 0;
                    "top" === this.position && (this._height(f._headerWrapper),
                    this.autoHeight || (k += parseInt(h.css("margin-top"), 10)));
                    this._lockAnimation("selectionTracker");
                    k = parseInt(h.css("padding-left"), 10) + parseInt(h.css("padding-right"), 10);
                    var l = "top" === this.position ? 0 : 1
                      , m = parseInt(e(this._headerWrapper).css("padding-top"), 10)
                      , n = parseInt(h.css("padding-top"), 10) + parseInt(h.css("padding-bottom"), 10);
                    this._selectionTracker.style.visibility = "visible";
                    this._moveSelectionTrackerContainer.style.visibility = "visible";
                    h = parseInt(h.css("margin-top"), 10);
                    isNaN(h) && (h = 0);
                    f._refreshBarPosition();
                    f._selectionTrackerHelper.animate({
                        top: m + h - l,
                        left: c + "px",
                        height: parseInt(this._height(g) + n, 10),
                        width: f._width(g) + k
                    }, d, function() {
                        f._unlockAnimation("selectionTracker");
                        f._selectionTracker.style.visibility = "hidden";
                        f._addSelectStyle(b, !0);
                        f._moveSelectionTrackerContainer.style.visibility = "hidden"
                    })
                }
            }
        },
        destroy: function() {
            e.jqx.utilities.resize(this.host, null, !0);
            ("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self && this.removeHandler(e(window.top.document), "mouseup.tabs" + this.element.id);
            this.host.remove()
        },
        _switchTabs: function(b, d) {
            if (b !== d && !this._activeAnimation() && !this._tabCaptured) {
                this._raiseEvent(7, {
                    item: d
                });
                this._raiseEvent(6, {
                    item: b
                });
                if (this._currentEvent && this._currentEvent.cancel) {
                    this._currentEvent = null;
                    return
                }
                this._unselect(d, null, !0);
                this._select(b, this.contentTransitionDuration, null, !0);
                return !0
            }
            return !1
        },
        _activeAnimation: function() {
            for (var b in this._isAnimated)
                if (this._isAnimated.hasOwnProperty(b) && this._isAnimated[b])
                    return !0;
            return !1
        },
        _indexOf: function(b) {
            for (var d = this.length(); d; )
                if (d--,
                this._titleList[d] === b || this._contentList[d] === b)
                    return d;
            return -1
        },
        _validateProperties: function() {
            try {
                if (0 > this.scrollAnimationDuration || isNaN(this.scrollAnimationDuration))
                    throw Error(this._invalidArgumentExceptions.invalidScrollAnimationDuration);
                if (0 > parseInt(this.width, 10) && "auto" !== this.width)
                    throw Error(this._invalidArgumentExceptions.invalidWidth);
                if (0 > parseInt(this.height, 10) && "auto" !== this.height)
                    throw Error(this._invalidArgumentExceptions.invalidHeight);
                if ("none" !== this.animationType && "fade" !== this.animationType)
                    throw Error(this._invalidArgumentExceptions.invalidAnimationType);
                if (0 > this.contentTransitionDuration || isNaN(this.contentTransitionDuration))
                    throw Error(this._invalidArgumentExceptions.invalidcontentTransitionDuration);
                if ("click" !== this.toggleMode && "dblclick" !== this.toggleMode && "mouseenter" !== this.toggleMode && "none" !== this.toggleMode)
                    throw Error(this._invalidArgumentExceptions.invalidToggleMode);
                if ("top" !== this.position && "bottom" !== this.position)
                    throw Error(this._invalidArgumentExceptions.invalidPosition);
                if ("left" !== this.scrollPosition && "right" !== this.scrollPosition && "both" !== this.scrollPosition)
                    throw Error(this._invalidArgumentExceptions.invalidScrollPosition);
                if (0 > this.scrollStep || isNaN(this.scrollStep))
                    throw Error(this._invalidArgumentExceptions.invalidScrollStep);
                if (this._titleList.length !== this._contentList.length || 0 === this._titleList.length)
                    throw Error(this._invalidArgumentExceptions.invalidStructure);
                if (0 > this.arrowButtonSize || isNaN(this.arrowButtonSize))
                    throw Error(this._invalidArgumentExceptions.invalidArrowSize);
                if (0 > this.closeButtonSize || isNaN(this.closeButtonSize))
                    throw Error(this._invalidArgumentExceptions.invalidCloseSize);
            } catch (b) {
                try {
                    console.log(b)
                } catch (d) {}
            }
        },
        _startScrollRepeat: function(b, d) {
            var c = this;
            b ? this._scrollLeft(d) : this._scrollRight(d);
            this._scrollTimeout && clearTimeout(this._scrollTimeout);
            this._scrollTimeout = setTimeout(function() {
                c._startScrollRepeat(b, c.scrollAnimationDuration)
            }, d)
        },
        _performLayout: function() {
            for (var b = this.length(); b; )
                if (b--,
                "top" === this.position || "bottom" === this.position)
                    this._titleList[b].style["float"] = this.rtl ? "right" : "left";
            this._fitToSize();
            this._performHeaderLayout();
            this._fitToSize()
        },
        updatetabsheader: function() {
            this._performHeaderLayout()
        },
        _setSize: function() {
            this._fitToSize();
            this._positionArrows(this._totalItemsWidth);
            this._unorderedList.style.width = this._totalItemsWidth > this.element.offsetWidth ? this._toPx(this._totalItemsWidth) : this.element.offsetWidth - 2 + "px";
            this._fitToSize()
        },
        _addArrows: function() {
            this._leftArrow && this._rightArrow && (e(this._leftArrow).remove(),
            e(this._rightArrow).remove());
            this._leftArrow = document.createElement("div");
            this._leftArrow.innerHTML = '<span style="display: block; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-tabs-arrow-left") + '"></span>';
            this._leftArrow.className = this.toThemeProperty("jqx-tabs-arrow-background jqx-widget-header");
            this._leftArrow.style.zIndex = 30;
            this._leftArrow.style.display = "none";
            this._leftArrow.style.width = this._toPx(this.arrowButtonSize);
            this._leftArrow.style.height = "100%";
            this._rightArrow = document.createElement("div");
            this._rightArrow.innerHTML = '<span style="display: block; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-tabs-arrow-right") + '"></span>';
            this._rightArrow.className = this.toThemeProperty("jqx-tabs-arrow-background jqx-widget-header");
            this._rightArrow.style.zIndex = 30;
            this._rightArrow.style.display = "none";
            this._rightArrow.style.width = this._toPx(this.arrowButtonSize);
            this._rightArrow.style.height = "100%";
            this._headerWrapper.appendChild(this._leftArrow);
            this._headerWrapper.appendChild(this._rightArrow)
        },
        _tabsWithVisibleCloseButtons: function() {
            if (!this.showCloseButtons)
                return 0;
            var b = this.length();
            e.each(this._titleList, function() {
                var d = this.attr("hasclosebutton");
                void 0 === d || null === d || "false" !== d && !1 !== d || b--
            });
            return b
        },
        _calculateTitlesSize: function() {
            function b(m, n) {
                m && (m.style.display = n ? "block" : "none")
            }
            var d = 0
              , c = 0
              , f = this.length();
            this.rtl && e.jqx.browser.msie && 8 > e.jqx.browser.version && (this._measureItem = document.createElement("span"),
            this._measureItem.style.position = "relative",
            this._measureItem.style.visibility = "hidden",
            document.body.appendChild(this._measureItem));
            for (; f; ) {
                f--;
                var g = this._titleList[f]
                  , h = this._closeButtonList[f];
                this._measureItem && (this._measureItem.innerHTML = g.innerHTML,
                this._measureItem.html(this._titleList[f].html()),
                g.style.width = this._toPx(this._width(this._measureItem)));
                g.style.position = "static";
                b(h, !1);
                c += this._outerWidth(g, !0);
                var k = this._outerHeight(g, !0);
                d < k && (d = k);
                0 === this._height(g) && (k = g.cloneNode(!0),
                document.body.appendChild(k),
                d = this._outerHeight(k, !0),
                document.body.removeChild(k));
                k = g.getAttribute("hasCloseButton");
                if (void 0 !== k && null !== k) {
                    var l = !1;
                    this.hiddenCloseButtons && 1 === this.hiddenCloseButtons[f] && (b(h, !1),
                    l = !0);
                    l || ("true" === k || !0 === k ? (c += this.closeButtonSize,
                    b(h, !0)) : "false" !== k && !1 !== k || b(h, !1))
                } else
                    this.showCloseButtons && (this.canCloseAllTabs || 1 < this._tabsWithVisibleCloseButtons()) && (l = !1,
                    this.hiddenCloseButtons && 1 === this.hiddenCloseButtons[f] && (b(h, !1),
                    l = !0),
                    l || (c += this.closeButtonSize,
                    b(h, !0)));
                g.style.height = this._toPx(this._height(g))
            }
            this._measureItem && e(this._measureItem).remove();
            return {
                height: d,
                width: 10 + c
            }
        },
        _reorderHeaderElements: function() {
            this.selectionTracker && (this._moveSelectionTrackerContainer.style.position = "absolute",
            this._moveSelectionTrackerContainer.style.height = "100%",
            this._moveSelectionTrackerContainer.style.top = "0px",
            this._moveSelectionTrackerContainer.style.left = "0px",
            this._moveSelectionTrackerContainer.style.width = "100%");
            this._headerWrapper.style.position = "relative";
            this._headerWrapper.style.left = "0px";
            this._headerWrapper.style.top = "0px";
            if (this.scrollable) {
                this._rightArrow.style.width = this._toPx(this.arrowButtonSize);
                this._rightArrow.style.position = "absolute";
                this._rightArrow.style.top = "0px";
                this._leftArrow.style.width = this._toPx(this.arrowButtonSize);
                this._leftArrow.style.position = "absolute";
                this._leftArrow.style.top = "0px";
                var b = this.theme && -1 !== this.theme.indexOf("ui-") ? 3 : 0;
                0 < b && (this._rightArrow.className += " " + this.toThemeProperty("jqx-rc-r"),
                this._leftArrow.className += " " + this.toThemeProperty("jqx-rc-l"));
                var d = this.scrollPosition;
                this.rtl && ("left" === d && (d = "right"),
                "right" === d && (d = "left"));
                switch (d) {
                case "both":
                    this._rightArrow.style.right = "0px";
                    this._leftArrow.style.left = "0px";
                    break;
                case "left":
                    this._rightArrow.style.left = this._toPx(this.arrowButtonSize);
                    this._leftArrow.style.left = "0px";
                    break;
                case "right":
                    this._rightArrow.style.right = this._toPx(-b),
                    this._leftArrow.style.right = this._toPx(parseInt(this.arrowButtonSize, 10) - b)
                }
            }
        },
        _positionArrows: function(b) {
            b >= this._headerWrapper.offsetWidth && this.scrollable ? (this._needScroll = !0,
            0 === this._unorderedListHelper.position().left && (this._unorderedListLeftBackup = this._getArrowsDisplacement() + "px"),
            this._leftArrow.style.display = "block",
            this._rightArrow.style.display = "block") : (this._needScroll = !1,
            this._leftArrow.style.display = "none",
            this._rightArrow.style.display = "none",
            this._unorderedList.style.left = "0px")
        },
        _performHeaderLayout: function() {
            this._removeSelectStyle();
            var b = this._calculateTitlesSize()
              , d = b.height;
            b = b.width;
            this._headerWrapper.style.height = this._toPx(d);
            this._unorderedList.style.height = this._toPx(d);
            null !== this.headerHeight && "auto" !== this.headerHeight && (this._headerWrapper.style.height = this._toPx(this.headerHeight),
            this._unorderedList.style.height = this._toPx(this.headerHeight));
            d = this._width(this.element);
            this._unorderedList.style.width = b > d ? this._toPx(b) : this._toPx(d);
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (this._unorderedList.style.position = "relative",
            this._unorderedList.style.overflow = "hidden");
            this._reorderHeaderElements();
            this._totalItemsWidth = b += parseInt(this._unorderedListHelper.css("margin-left"), 10);
            this._positionArrows(b);
            this._unorderedList.style.position = "relative";
            this._unorderedList.style.top = "0px";
            this._verticalAlignElements();
            this._moveSelectionTrack(this._selectedItem, 0);
            this._addSelectStyle(this.selectedItem)
        },
        _verticalAlignElements: function() {
            for (var b = this.length(); b; ) {
                b--;
                var d = this._titleList[b]
                  , c = e(d)
                  , f = c.children()[0]
                  , g = this._closeButtonList[b];
                parseInt(c.css("padding-top"), 10);
                if (this.autoHeight) {
                    var h = parseInt(c.css("padding-top"), 10)
                      , k = parseInt(c.css("padding-bottom"), 10)
                      , l = c.css("border-top-width");
                    c = c.css("border-bottom-width");
                    l = -1 === l.indexOf("px") ? 1 : parseInt(l, 10);
                    c = -1 === c.indexOf("px") ? 1 : parseInt(c, 10);
                    d.style.height = this._toPx(this._outerHeight(this._unorderedList, !0) - (h + k + l + c))
                } else
                    "top" === this.position ? (h = this._height(this._unorderedList) - parseInt(this._outerHeight(d, !0), 10),
                    parseInt(c.css("margin-top"), 10) !== h && 0 !== h && (d.style.marginTop = this._toPx(h))) : d.style.height = this._toPx(this._height(d));
                f.style.height = "100%";
                d = this._height(d);
                g && (c = d / 2 - this._height(g) / 2,
                g.style.marginTop = this._toPx(1 + c));
                g = d / 2 - this._height(f) / 2;
                f.style.marginTop = this._toPx(g)
            }
            this.scrollable && (b = (parseInt(this._headerWrapper.offsetHeight, 10) - this.arrowButtonSize) / 2,
            e(this._rightArrow).children()[0].style.marginTop = this._toPx(b),
            this._rightArrow.style.height = "100%",
            e(this._leftArrow).children()[0].style.marginTop = this._toPx(b),
            this._leftArrow.style.height = "100%")
        },
        _getImageUrl: function(b) {
            b = b.css("background-image");
            b = b.replace('url("', "");
            b = b.replace('")', "");
            b = b.replace("url(", "");
            return b = b.replace(")", "")
        },
        _fitToSize: function() {
            var b = !1
              , d = !1;
            null !== this.width && -1 !== this.width.toString().indexOf("%") && (b = !0);
            null !== this.height && -1 !== this.height.toString().indexOf("%") && (d = !0);
            b ? (this.element.style.width = this.width,
            this._contentWrapper.style.width = "100%") : (this.element.style.width = this._toPx(this.width),
            "auto" !== this.width && (this._contentWrapper.style.width = "100%"));
            d ? (this.element.style.height = this.height,
            this._contentWrapper.style.width = "100%",
            this._contentWrapper.style.height = "auto",
            b = this.element.offsetHeight - this._headerWrapper.offsetHeight - 2,
            this._contentWrapper.style.height = b + "px") : "auto" !== this.height ? (this.element.style.height = this._toPx(this.height),
            b = this._height(this.element) - this._headerWrapper.offsetHeight,
            this._contentWrapper.style.height = this._toPx(b)) : this._contentWrapper.style.height = "auto"
        },
        _maxHeightTab: function() {
            for (var b = this.length(), d = -1; b; )
                b--,
                -1 < this._outerHeight(this._titleList[b], !0) && (d = b);
            return d
        },
        _addSelectionTracker: function() {
            this._moveSelectionTrackerContainer && e(this._moveSelectionTrackerContainer).remove();
            this._moveSelectionTrackerContainer = document.createElement("div");
            this._moveSelectionTrackerContainer.className = this.toThemeProperty("jqx-tabs-selection-tracker-container");
            this._selectionTracker = document.createElement("div");
            this._selectionTracker.className = this.toThemeProperty("jqx-tabs-selection-tracker-" + this.position);
            this._selectionTracker.style.color = "inherit";
            this._selectionTracker.style.position = "absolute";
            this._selectionTracker.style.zIndex = 10;
            this._selectionTracker.style.left = "0px";
            this._selectionTracker.style.top = "0px";
            this._selectionTracker.style.display = "inline-block";
            this._moveSelectionTrackerContainer.appendChild(this._selectionTracker);
            this._headerWrapper.appendChild(this._moveSelectionTrackerContainer);
            this._selectionTrackerHelper = e(this._selectionTracker);
            this._selectionTrackerHelper.initAnimate && this._selectionTrackerHelper.initAnimate()
        },
        _addContentWrapper: function() {
            var b = null === this._contentWrapper;
            b && (this._contentWrapper = document.createElement("div"),
            this._contentWrapper.className = this.toThemeProperty("jqx-tabs-content jqx-widget-content"),
            this._contentWrapper.style["float"] = "none");
            for (var d = this.length(); d; )
                d--,
                this._contentList[d].className += " " + this.toThemeProperty("jqx-tabs-content-element");
            if (b)
                for ("top" === this.position ? this.element.appendChild(this._contentWrapper) : this.element.insertBefore(this._contentWrapper, this.element.firstChild),
                b = 0; b < this._contentList.length; b++)
                    this._contentWrapper.appendChild(this._contentList[b]);
            this.roundedCorners && (this._contentWrapper.className = "top" === this.position ? this._contentWrapper.className + (" " + this.toThemeProperty("jqx-rc-b")) : this._contentWrapper.className + (" " + this.toThemeProperty("jqx-rc-t")),
            this.element.className += " " + this.toThemeProperty("jqx-rc-all"))
        },
        _addHeaderWrappers: function() {
            var b = this.length();
            void 0 !== this._headerWrapper && (e(this._headerWrapper).remove(),
            this.bar && (this.bar = null));
            this._headerWrapper = document.createElement("div");
            this._headerWrapper.style.outline = "none";
            "top" === this.position ? this.element.insertBefore(this._headerWrapper, this.element.firstChild) : this.element.appendChild(this._headerWrapper);
            this._headerWrapper.appendChild(this._unorderedList);
            var d = "jqx-tabs-headerWrapper jqx-tabs-header jqx-widget-header";
            "bottom" === this.position && (d += " jqx-tabs-header-bottom");
            this.roundedCorners && (d = "top" === this.position ? d + " jqx-rc-t" : d + " jqx-rc-b");
            for (this._headerWrapper.className = this.toThemeProperty(d); b; )
                if (b--,
                d = this._titleList[b],
                null === d.querySelector(".jqx-tabs-titleWrapper")) {
                    var c = document.createElement("div");
                    c.className = "jqx-tabs-titleWrapper";
                    c.style.outline = "none";
                    c.style.position = "relative";
                    c.style.zIndex = 15;
                    var f = e(d).children();
                    c.appendChild(f[0]);
                    c.appendChild(f[1]);
                    d.appendChild(c)
                }
        },
        _render: function() {
            this._addCloseButtons();
            this._addHeaderWrappers();
            this._addContentWrapper();
            this.selectionTracker && this._addSelectionTracker();
            this._addArrows()
        },
        _addCloseButton: function(b, d) {
            var c = document.createElement("div")
              , f = this._titleList[b];
            c.className = "jqx-tabs-titleContentWrapper jqx-disableselect";
            var g = "left";
            this.rtl && (g = "right");
            0 < e(f).find(".jqx-tabs-close-button").length && e(f).find(".jqx-tabs-close-button").remove();
            c.style["float"] = g;
            c.innerHTML = f.innerHTML;
            f.innerHTML = "";
            var h = document.createElement("div");
            h.className = this.toThemeProperty("jqx-tabs-close-button");
            h.style.height = this._toPx(this.closeButtonSize);
            h.style.width = this._toPx(this.closeButtonSize);
            h.style["float"] = g;
            h.style.fontSize = "1px";
            f.appendChild(c);
            f.appendChild(h);
            !0 === d ? this._closeButtonList[b] = h : this._closeButtonList.splice(b, 0, h);
            this.showCloseButtons ? this.hiddenCloseButtons && 1 === this.hiddenCloseButtons[b] && (h.style.display = "none") : h.style.display = "none"
        },
        _addCloseButtons: function() {
            for (var b = this.length(); b; )
                b--,
                this._addCloseButton(b, !0)
        },
        _prepareTabs: function() {
            var b = this.length()
              , d = this.selectionTracker;
            for (this.selectionTracker = !1; b; )
                b--,
                this._selectedItem !== b && this._unselect(b, null, !1);
            this._select(this._selectedItem, 0, null, !1);
            this.selectionTracker = d;
            !this.initTabContent || this._initTabContentList[this.selectedItem] || this._hiddenParent() || (this.initTabContent(this.selectedItem),
            this._initTabContentList[this.selectedItem] = !0)
        },
        _isValidIndex: function(b) {
            return 0 <= b && b < this.length()
        },
        _removeSelectStyle: function() {
            for (var b = this.length(); b; ) {
                b--;
                var d = this._titleList[b];
                this.showCloseButtons && this._removeClass(this._closeButtonList[b], this.toThemeProperty("jqx-tabs-close-button-selected"));
                var c = "jqx-fill-state-pressed";
                c = "top" === this.position ? c + " jqx-tabs-title-selected-top" : c + " jqx-tabs-title-selected-bottom";
                this._removeClass(d, this.toThemeProperty(c))
            }
        },
        _addSelectStyle: function(b, d) {
            this._removeSelectStyle();
            if (!this.selectionTracker || void 0 !== d && d)
                if (d = this._titleList[b],
                0 <= b && void 0 !== d) {
                    var c = null;
                    this.showCloseButtons && (c = this._closeButtonList[b],
                    this.hiddenCloseButtons && 1 === this.hiddenCloseButtons[b] && (c = null));
                    b = "jqx-fill-state-hover";
                    var f = " jqx-fill-state-pressed";
                    "top" === this.position ? (b += " jqx-tabs-title-hover-top",
                    f += " jqx-tabs-title-selected-top") : (b += " jqx-tabs-title-hover-bottom",
                    f += " jqx-tabs-title-selected-bottom");
                    this._removeClass(d, this.toThemeProperty(b));
                    d.className += this.toThemeProperty(f);
                    null !== c && (c.className += " " + this.toThemeProperty("jqx-tabs-close-button-selected"))
                }
        },
        _addItemTo: function(b, d, c) {
            if (d < b.length) {
                for (var f, g, h = d; h + 1 < b.length; h++)
                    void 0 === f ? (f = b[h + 1],
                    b[h + 1] = b[h]) : (g = b[h + 1],
                    b[h + 1] = f,
                    f = g);
                void 0 === f && (f = b[d]);
                b[d] = c;
                b.push(f)
            } else
                b.push(c)
        },
        _refreshBarPosition: function() {
            var b = this;
            if (!this.bar) {
                var d = e("<span></span>");
                e(this._headerWrapper).append(d);
                d.addClass(this.toThemeProperty("jqx-tabs-bar"));
                this.bar = d
            }
            setTimeout(function() {
                if (!(0 > b._selectedItem)) {
                    var c = parseInt(b._unorderedListHelper.css("left"), 10)
                      , f = parseInt(b._unorderedListHelper.css("margin-left"));
                    c ? b.bar.css("left", f + b._titleList[b._selectedItem].offsetLeft + c) : b.bar.css("left", f + b._titleList[b._selectedItem].offsetLeft);
                    b.bar.width(e(b._titleList[b._selectedItem]).outerWidth() - 2)
                }
            })
        },
        _select: function(b, d, c, f, g) {
            if (!this._tabCaptured) {
                this.host.attr("hideFocus", "true");
                var h = this;
                void 0 === g ? this._addSelectStyle(b) : this._addSelectStyle(b, g);
                var k = e(h._titleList[b])
                  , l = h._titleList[b].getAttribute("id")
                  , m = e(h._contentList[b]);
                if (this.isCollapsed && this.collapsible)
                    m[0].style.display = "none",
                    this._selectCallback(b, c, f);
                else
                    switch (h._refreshBarPosition(),
                    this.animationType) {
                    case "none":
                        if (h.selectionTracker)
                            setTimeout(function() {
                                m[0].style.display = "block";
                                e.jqx.aria(k, "aria-selected", !0);
                                e.jqx.aria(m, "aria-hidden", !1);
                                e.jqx.aria(h, "aria-activedescendant", l)
                            }, this.selectionTrackerAnimationDuration);
                        else {
                            for (d = 0; d < this._contentList.length; d++)
                                b !== d && "block" === e(h._contentList[d]).css("display") && (h._contentList[d].style.display = "none",
                                e.jqx.aria(e(h._titleList[d]), "aria-selected", !1),
                                e.jqx.aria(e(h._contentList[d]), "aria-hidden", !0));
                            m[0].style.display = "block";
                            e.jqx.aria(k, "aria-selected", !0);
                            e.jqx.aria(m, "aria-hidden", !1);
                            e.jqx.aria(this, "aria-activedescendant", l)
                        }
                        this._selectCallback(b, c, f);
                        break;
                    case "fade":
                        this._lockAnimation("contentListSelect"),
                        h._selectCallback(b, c, f),
                        m.initAnimate && void 0 === m.fadeIn && m.initAnimate(),
                        m.fadeIn({
                            duration: 1E3,
                            complete: function() {
                                h._unlockAnimation("contentListSelect");
                                e.jqx.aria(k, "aria-selected", !0);
                                e.jqx.aria(m, "aria-hidden", !1);
                                e.jqx.aria(h, "aria-activedescendant", l)
                            }
                        })
                    }
            }
        },
        _selectCallback: function(b, d, c) {
            this.selectedItem = this._selectedItem = b;
            d && d();
            c && this._raiseEvent(1, {
                item: b
            })
        },
        _unselect: function(b, d, c) {
            if (0 <= b && !this._tabCaptured) {
                var f = this._contentList[b]
                  , g = e(f)
                  , h = this._titleList[b]
                  , k = e(h);
                g.initAnimate && void 0 === g.animate && g.initAnimate();
                this._stop(g);
                "fade" === this.animationType ? (f.style.display = "none",
                e.jqx.aria(k, "aria-selected", !1),
                e.jqx.aria(g, "aria-hidden", !0)) : this.selectionTracker ? setTimeout(function() {
                    f.style.display = "none";
                    e.jqx.aria(k, "aria-selected", !1);
                    e.jqx.aria(g, "aria-hidden", !0)
                }, this.selectionTrackerAnimationDuration) : (f.style.display = "none",
                e.jqx.aria(k, "aria-selected", !1),
                e.jqx.aria(g, "aria-hidden", !0));
                this._unselectCallback(b, d, c);
                this.selectionTracker || this._removeClass(h, this.toThemeProperty("jqx-tabs-title-selected jqx-fill-state-pressed"))
            }
        },
        _unselectCallback: function(b, d, c) {
            c && this._raiseEvent(8, {
                item: b
            });
            d && d()
        },
        disable: function() {
            for (var b = this.length(); b; )
                b--,
                this.disableAt(b)
        },
        enable: function() {
            for (var b = this.length(); b; )
                b--,
                this.enableAt(b)
        },
        getEnabledTabsCount: function() {
            var b = 0;
            e.each(this._titleList, function() {
                this.disabled || b++
            });
            return b
        },
        getDisabledTabsCount: function() {
            var b = 0;
            e.each(this._titleList, function() {
                this.disabled && b++
            });
            return b
        },
        removeAt: function(b) {
            if (this._isValidIndex(b) && (this.canCloseAllTabs || 1 < this.length())) {
                this._removeHoverStates();
                this._initTabContentList[b] = !1;
                var d = this
                  , c = d._outerWidth(this._titleList[b], !0)
                  , f = this.getTitleAt(b);
                this._unorderedList.style.width = d._toPx(d._width(this._unorderedList) - c);
                e(this._titleList[b]).remove();
                e(this._contentList[b]).remove();
                this._titleList.splice(b, 1);
                this._contentList.splice(b, 1);
                d._closeButtonList.splice(b, 1);
                this._addStyles();
                this._performHeaderLayout();
                this._removeEventHandlers();
                this._addEventHandlers();
                this._raiseEvent(3, {
                    item: b,
                    title: f
                });
                this._isAnimated = {};
                0 < this.selectedItem ? (this._selectedItem = -1,
                this.selectedItem >= b ? (b = this._getPreviousIndex(this.selectedItem),
                this.select(b)) : this.select(d.selectedItem)) : (this._selectedItem = -1,
                b = this._getNextIndex(this.selectedItem),
                this.select(b));
                parseInt(this._unorderedListHelper.css("left"), 10) > this._getArrowsDisplacement() && (this._unorderedList.style.left = d._toPx(this._getArrowsDisplacement()));
                d._width(this._unorderedList) <= d._width(this._headerWrapper) && (b = this.enableScrollAnimation ? this.scrollAnimationDuration : 0,
                this._lockAnimation("unorderedList"),
                this._unorderedListHelper.animate({
                    left: 0
                }, b, function() {
                    d._unlockAnimation("unorderedList")
                }))
            }
        },
        removeFirst: function() {
            this.removeAt(0)
        },
        removeLast: function() {
            this.removeAt(this.length() - 1)
        },
        disableAt: function(b) {
            var d = this._titleList[b];
            d.disabled && void 0 !== d.disabled || (this.selectedItem === b && (this.next() || this.previous()),
            d.disabled = !0,
            this.removeHandler(d, this.toggleMode),
            this.enabledHover && e(d).off("mouseenter").off("mouseleave"),
            this._removeEventListenerAt(b),
            d.className += " " + this.toThemeProperty("jqx-tabs-title-disable jqx-fill-state-disabled"),
            this._raiseEvent(5, {
                item: b
            }))
        },
        enableAt: function(b) {
            var d = this._titleList[b];
            d.disabled && (d.disabled = !1,
            this._addEventListenerAt(b),
            this._removeClass(d, this.toThemeProperty("jqx-tabs-title-disable jqx-fill-state-disabled")),
            this._raiseEvent(4, {
                item: b
            }))
        },
        addAt: function(b, d, c) {
            if (0 <= b && b <= this.length()) {
                this._removeHoverStates();
                var f = document.createElement("li");
                f.innerHTML = d;
                f.className = this.toThemeProperty("jqx-tabs-title jqx-item");
                d = document.createElement("div");
                d.innerHTML = c;
                d.className = this.toThemeProperty("jqx-tabs-content-element");
                "bottom" === this.position && (f.className += " " + this.toThemeProperty("jqx-tabs-title-bottom"));
                0 === this._titleList.length ? this._unorderedList.appendChild(f) : b < this.length() && 0 <= b ? this._unorderedList.insertBefore(f, this._titleList[b]) : this._unorderedList.appendChild(f);
                this._contentWrapper.appendChild(d);
                this._addItemTo(this._titleList, b, f);
                this._addItemTo(this._contentList, b, d);
                this._addCloseButton(b);
                this._selectedItem > b && this._selectedItem++;
                this._switchTabs(b, this._selectedItem);
                this._selectedItem = b;
                this._uiRefresh(!1);
                this._raiseEvent(2, {
                    item: b
                });
                this._moveSelectionTrack(this._selectedItem, 0)
            }
        },
        addFirst: function(b, d) {
            this.addAt(0, b, d)
        },
        addLast: function(b, d) {
            this.addAt(this.length(), b, d)
        },
        val: function(b) {
            if (0 === arguments.length || "object" === typeof b)
                return this._selectedItem;
            this.select(b);
            return this._selectedItem
        },
        select: function(b) {
            "object" === typeof b && (b = this._indexOf(b));
            var d = 0 <= b && b < this._titleList.length ? this._titleList[b].getAttribute("canselect") : !0;
            (void 0 === d || null === d || "true" === d || !0 === d) && b !== this._selectedItem && this._isValidIndex(b) && (this._activeAnimation() || this._titleList[b].disabled || this._switchTabs(b, this._selectedItem) && this.ensureVisible(b))
        },
        previous: function(b) {
            var d = this._selectedItem;
            for (void 0 === b || isNaN(b) || (d = b); 0 < d && d < this._titleList.length; )
                if (d--,
                !this._titleList[d].disabled)
                    return this.select(d),
                    !0;
            return !1
        },
        _getPreviousIndex: function(b) {
            if (void 0 === b || isNaN(b))
                return 0;
            for (var d = b; 0 < b && b <= this._titleList.length; )
                if (b--,
                !this._titleList[b].disabled)
                    return b;
            return d
        },
        _getNextIndex: function(b) {
            if (void 0 === b || isNaN(b))
                return 0;
            for (var d = b; 0 <= b && b < this._titleList.length; ) {
                if (!this._titleList[b].disabled)
                    return b;
                b++
            }
            return d
        },
        next: function(b) {
            var d = this._selectedItem;
            for (void 0 === b || isNaN(b) || (d = b); 0 <= d && d < this._titleList.length - 1; )
                if (d++,
                !this._titleList[d].disabled)
                    return this.select(d),
                    !0;
            return !1
        },
        first: function() {
            this._titleList[0].disabled ? this.next(0) : this.select(0)
        },
        last: function() {
            var b = this._titleList.length - 1;
            this._titleList[b].disabled ? this.previous(b) : this.select(b)
        },
        length: function() {
            return this._titleList.length
        },
        lockAt: function(b) {
            !this._isValidIndex(b) || this._titleList[b].locked && void 0 !== this._titleList[b].locked || (this._titleList[b].locked = !0,
            this._raiseEvent(11, {
                item: b
            }))
        },
        unlockAt: function(b) {
            this._isValidIndex(b) && this._titleList[b].locked && (this._titleList[b].locked = !1,
            this._raiseEvent(12, {
                item: b
            }))
        },
        lockAll: function() {
            for (var b = this.length(); b; )
                b--,
                this.lockAt(b)
        },
        unlockAll: function() {
            for (var b = this.length(); b; )
                b--,
                this.unlockAt(b)
        },
        showCloseButtonAt: function(b) {
            this._isValidIndex(b) && (this.showCloseButtons || (this.showCloseButtons = !0,
            this.updatetabsheader()),
            this._closeButtonList[b].style.display = "block",
            this.hiddenCloseButtons || (this.hiddenCloseButtons = []),
            this.hiddenCloseButtons[b] = 0)
        },
        hideCloseButtonAt: function(b) {
            this._isValidIndex(b) && (this._closeButtonList[b].style.display = "none",
            this.hiddenCloseButtons || (this.hiddenCloseButtons = []),
            this.hiddenCloseButtons[b] = 1)
        },
        hideAllCloseButtons: function() {
            for (var b = this.length(); b; )
                b--,
                this.hideCloseButtonAt(b)
        },
        showAllCloseButtons: function() {
            for (var b = this.length(); b; )
                b--,
                this.showCloseButtonAt(b)
        },
        getTitleAt: function(b) {
            return this._titleList[b] ? e(this._titleList[b]).text() : null
        },
        getContentAt: function(b) {
            return this._contentList[b] ? this._contentList[b] : null
        },
        setTitleAt: function(b, d) {
            this._titleList[b] && (e(this._titleList[b]).text(d),
            this.showCloseButtons && (this._addCloseButton(b),
            this._removeEventHandlers(),
            this._addEventHandlers()),
            this.render(),
            this.refresh())
        },
        setContentAt: function(b, d) {
            this._contentList[b] && e(this._contentList[b]).html(d)
        },
        ensureVisible: function(b) {
            var d = this;
            if (void 0 === b || -1 === b || null === b)
                b = this.selectedItem;
            if (!this._isValidIndex(b))
                return !1;
            var c = this._titleList[b]
              , f = parseInt(e(c).position().left, 10) + parseInt(this._unorderedListHelper.css("margin-left"), 10)
              , g = parseInt(this._unorderedListHelper.css("left"), 10)
              , h = this._outerWidth(this._headerWrapper, !0);
            c = this._outerWidth(c, !0);
            g -= this._getArrowsDisplacement();
            var k = h - this._getArrowsDisplacement() - g;
            if (f < -g)
                f = -f + this._getArrowsDisplacement(),
                h = this._getArrowsDisplacement();
            else if (f + c > k - this._getArrowsDisplacement())
                f = -f + h - c - (this.scrollable ? 2 * this.arrowButtonSize - this._getArrowsDisplacement() : 0),
                h = h - c - this._getArrowsDisplacement();
            else
                return this._moveSelectionTrack(b, this.selectionTrackerAnimationDuration),
                !0;
            this._lockAnimation("unorderedList");
            this._unorderedListHelper.animate({
                left: f
            }, this.scrollAnimationDuration, function() {
                d._unlockAnimation("unorderedList");
                d._moveSelectionTrack(d._selectedItem, 0);
                return !0
            });
            this._moveSelectionTrack(b, this.selectionTrackerAnimationDuration, h);
            return !0
        },
        isVisibleAt: function(b) {
            if (void 0 === b || -1 === b || null === b)
                b = this.selectedItem;
            if (!this._isValidIndex(b))
                return !1;
            var d = this._titleList[b];
            b = parseInt(e(d).position().left, 10) + parseInt(this._unorderedListHelper.css("margin-left"), 10);
            var c = parseInt(this._unorderedListHelper.css("left"), 10)
              , f = this._outerWidth(this._headerWrapper, !0);
            d = this._outerWidth(d, !0);
            c -= this._getArrowsDisplacement();
            f = f - this._getArrowsDisplacement() - c;
            return b < -c || b + d > f ? !1 : !0
        },
        isDisabled: function(b) {
            return this._titleList[b].disabled
        },
        _lockAnimation: function(b) {
            this._isAnimated && (this._isAnimated[b] = !0)
        },
        _unlockAnimation: function(b) {
            this._isAnimated && (this._isAnimated[b] = !1)
        },
        propertiesChangedHandler: function(b, d, c) {
            c && c.width && c.height && 2 === Object.keys(c).length && b._setSize()
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (!(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 === Object.keys(b.batchUpdate).length)) {
                this._validateProperties();
                switch (d) {
                case "touchMode":
                    f && (b.enabledHover = !1,
                    b.keyboardNavigation = !1);
                    break;
                case "width":
                case "height":
                    b._setSize();
                    return;
                case "disabled":
                    f ? this.disable() : this.enable();
                    return;
                case "showCloseButtons":
                    f ? this.showAllCloseButtons() : this.hideAllCloseButtons();
                    this._performHeaderLayout();
                    return;
                case "selectedItem":
                    this._isValidIndex(f) && this.select(f);
                    return;
                case "scrollStep":
                case "contentTransitionDuration":
                case "scrollAnimationDuration":
                case "enableScrollAnimation":
                    return;
                case "selectionTracker":
                    f ? (this._refresh(),
                    this.select(this._selectedItem)) : this._selectionTracker && this._selectionTrackerHelper.remove();
                    return;
                case "scrollable":
                    f ? (this._refresh(),
                    this.select(this._selectedItem)) : (e(this._leftArrow).remove(),
                    e(this._rightArrow).remove(),
                    this._performHeaderLayout());
                    return;
                case "autoHeight":
                    this._performHeaderLayout();
                    return;
                case "theme":
                    e.jqx.utilities.setTheme(c, f, this.host);
                    return
                }
                this._unorderedList.style.left = "0px";
                this._refresh();
                this.select(this._selectedItem);
                this._addSelectStyle(this._selectedItem, !0)
            }
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        },
        _removeClass: function(b, d) {
            e(b).removeClass(d)
        },
        _width: function(b) {
            var d = e(b)
              , c = d.css("border-left-width")
              , f = d.css("border-right-width")
              , g = parseInt(d.css("padding-left"), 10);
            d = parseInt(d.css("padding-right"), 10);
            c = -1 === c.indexOf("px") ? 1 : parseInt(c, 10);
            f = -1 === f.indexOf("px") ? 1 : parseInt(f, 10);
            return b.offsetWidth - (c + f + g + d)
        },
        _outerWidth: function(b, d) {
            var c = b.offsetWidth;
            d && (d = e(b),
            b = parseInt(d.css("margin-left"), 10),
            d = parseInt(d.css("margin-right"), 10),
            c += b + d);
            return c
        },
        _height: function(b) {
            var d = e(b)
              , c = d.css("border-top-width")
              , f = d.css("border-bottom-width")
              , g = parseInt(d.css("padding-top"), 10);
            d = parseInt(d.css("padding-bottom"), 10);
            c = -1 === c.indexOf("px") ? 1 : parseInt(c, 10);
            f = -1 === f.indexOf("px") ? 1 : parseInt(f, 10);
            return b.offsetHeight - (c + f + g + d)
        },
        _outerHeight: function(b, d) {
            var c = b.offsetHeight;
            d && (d = e(b),
            b = parseInt(d.css("margin-top"), 10),
            d = parseInt(d.css("margin-bottom"), 10),
            c += b + d);
            return c
        },
        _stop: function(b) {
            b.stop ? b.stop() : b.animate("stop", !0)
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    function b(d) {
        d = e(d);
        return "none" !== d.css("display") && "hidden" !== d.css("visibility")
    }
    e.jqx.jqxWidget("jqxWindow", "", {});
    e.extend(e.jqx._jqxWindow.prototype, {
        defineInstance: function() {
            var d = {
                height: "auto",
                width: 200,
                minHeight: 50,
                maxHeight: 1200,
                minWidth: 50,
                maxWidth: 1200,
                showCloseButton: !0,
                disabled: !1,
                autoOpen: !0,
                keyboardCloseKey: "esc",
                title: "",
                content: "",
                draggable: !0,
                resizable: !0,
                animationType: "fade",
                closeAnimationDuration: 250,
                showAnimationDuration: 250,
                isModal: !1,
                position: "center",
                closeButtonSize: 16,
                closeButtonAction: "hide",
                modalOpacity: .3,
                dragArea: null,
                okButton: null,
                cancelButton: null,
                dialogResult: {
                    OK: !1,
                    Cancel: !1,
                    None: !0
                },
                collapsed: !1,
                showCollapseButton: !1,
                collapseAnimationDuration: 150,
                collapseButtonSize: 16,
                rtl: !1,
                keyboardNavigation: !0,
                headerHeight: null,
                _events: "created closed moving moved open collapse expand open close resize".split(" "),
                initContent: null,
                enableResize: !0,
                restricter: null,
                autoFocus: !0,
                closing: null,
                _invalidArgumentExceptions: {
                    invalidHeight: "Invalid height!",
                    invalidWidth: "Invalid width!",
                    invalidMinHeight: "Invalid minHeight!",
                    invalidMaxHeight: "Invalid maxHeight!",
                    invalidMinWidth: "Invalid minWidth!",
                    invalidMaxWidth: "Invalid maxWidth",
                    invalidKeyCode: "Invalid keyCode!",
                    invalidAnimationType: "Invalid animationType!",
                    invalidCloseAnimationDuration: "Invalid closeAnimationDuration!",
                    invalidShowAnimationDuration: "Invalid showAnimationDuration!",
                    invalidPosition: "Invalid position!",
                    invalidCloseButtonSize: "Invalid closeButtonSize!",
                    invalidCollapseButtonSize: "Invalid collapseButtonSize!",
                    invalidCloseButtonAction: "Invalid cluseButtonAction!",
                    invalidModalOpacity: "Invalid modalOpacity!",
                    invalidDragArea: "Invalid dragArea!",
                    invalidDialogResult: "Invalid dialogResult!",
                    invalidIsModal: "You can have just one modal window!"
                },
                _enableResizeCollapseBackup: null,
                _enableResizeBackup: void 0,
                _heightBeforeCollapse: null,
                _minHeightBeforeCollapse: null,
                _mouseDown: !1,
                _isDragging: !1,
                _rightContentWrapper: null,
                _leftContentWrapper: null,
                _headerContentWrapper: null,
                _closeButton: null,
                _collapseButton: null,
                _title: null,
                _content: null,
                _mousePosition: {},
                _windowPosition: {},
                _modalBackground: null,
                _SCROLL_WIDTH: 21,
                _visible: !0,
                modalBackgroundZIndex: 1299,
                modalZIndex: 1800,
                zIndex: 1E3,
                _touchEvents: {
                    mousedown: e.jqx.mobile.getTouchEventName("touchstart"),
                    mouseup: e.jqx.mobile.getTouchEventName("touchend"),
                    mousemove: e.jqx.mobile.getTouchEventName("touchmove"),
                    mouseenter: "mouseenter",
                    mouseleave: "mouseleave",
                    click: e.jqx.mobile.getTouchEventName("touchstart")
                }
            };
            if (this === e.jqx._jqxWindow.prototype)
                return d;
            e.extend(!0, this, d);
            return d
        },
        createInstance: function() {
            this.host.initAnimate && this.host.initAnimate();
            this.host.attr("role", "dialog");
            this.host.removeAttr("data-bind");
            this.host.appendTo(document.body);
            var d = this;
            (function(f) {
                for (var g = 0; g < f.length; g++) {
                    var h = f[g];
                    d[h] && 0 <= d[h].toString().indexOf("px") && (d[h] = parseInt(d[h], 10))
                }
            }
            )("minWidth minHeight maxWidth maxHeight width height".split(" "));
            var c = function() {
                var f = parseInt(e(d.restricter).css("padding-top"), 10)
                  , g = parseInt(e(d.restricter).css("padding-left"), 10)
                  , h = parseInt(e(d.restricter).css("padding-bottom"), 10)
                  , k = parseInt(e(d.restricter).css("padding-right"), 10)
                  , l = e(d.restricter).coord();
                d.dragArea = {
                    left: g + l.left,
                    top: f + l.top,
                    width: 1 + k + e(d.restricter).width(),
                    height: 1 + h + e(d.restricter).height()
                }
            };
            this.restricter && c();
            this.restricter && (this.addHandler(e(window), "resize." + this.element.id, function() {
                c()
            }),
            this.addHandler(e(window), "orientationchanged." + this.element.id, function() {
                c()
            }),
            this.addHandler(e(window), "orientationchange." + this.element.id, function() {
                c()
            }));
            this._isTouchDevice = e.jqx.mobile.isTouchDevice();
            this._validateProperties();
            this._createStructure();
            this._refresh();
            this.autoOpen || (this.element.style.display = "none");
            e.jqx.browser.msie && this.host.addClass(this.toThemeProperty("jqx-noshadow"));
            this.isModal || this._fixWindowZIndex();
            this._setStartupSettings();
            this._positionWindow();
            this._raiseEvent(0);
            this.autoOpen && (this._performLayout(),
            this.isModal && this._fixWindowZIndex("modal-show"),
            this.initContent && (this.initContent(),
            this._contentInitialized = !0),
            this._raiseEvent(7),
            this._raiseEvent(9))
        },
        refresh: function() {
            this._performLayout()
        },
        _setStartupSettings: function() {
            this.disabled && this.disable();
            this.collapsed && (this.collapsed = !1,
            this.collapse(0));
            this.autoOpen || (this.hide(null, .001, !0),
            this._visible = !1);
            null !== this.title && "" !== this.title && this.setTitle(this.title);
            null !== this.content && "" !== this.content && this.setContent(this.content);
            this.title = this._headerContentWrapper.html();
            this.content = this._content.html()
        },
        _fixWindowZIndex: function(d) {
            var c = e.data(document.body, "jqxwindows-list") || []
              , f = this.zIndex;
            if (this.isModal)
                c && (c = this._removeFromArray(this.host, c),
                e.data(document.body, "jqxwindows-list", c)),
                (c = e.data(document.body, "jqxwindows-modallist")) ? "modal-show" == d ? c.push(this.host) : (d = c.indexOf(this.host),
                -1 != d && c.splice(d, 1)) : "modal-show" == d ? (c = [],
                c.push(this.host),
                e.data(document.body, "jqxwindows-modallist", c)) : (e.data(document.body, "jqxwindows-modallist", []),
                c = []),
                f = this.modalZIndex,
                e.each(c, function() {
                    if (this.data() && this.data().jqxWindow) {
                        var h = this.data().jqxWindow.instance;
                        h._modalBackground.style.zIndex = f;
                        h.element.style.zIndex = f + 1;
                        f += 2
                    }
                }),
                e.data(document.body, "jqxwindow-modal", this.host);
            else {
                0 > this._indexOf(this.host, c) && c.push(this.host);
                e.data(document.body, "jqxwindows-list", c);
                if (1 < c.length)
                    if (d = c[c.length - 2],
                    "auto" == d.css("z-index"))
                        f = this.zIndex + c.length + 1;
                    else {
                        var g = this.zIndex;
                        f = parseInt(d.css("z-index"), 10) + 1;
                        f < g && (f = g)
                    }
                this.element.style.zIndex = f;
                this._sortByStyle("z-index", c)
            }
        },
        _validateProperties: function() {
            try {
                this._validateSize();
                this._validateAnimationProperties();
                this._validateInteractionProperties();
                this._validateModalProperties();
                if (!this.position)
                    throw Error(this._invalidArgumentExceptions.invalidPosition);
                if (isNaN(this.closeButtonSize) || 0 > parseInt(this.closeButtonSize, 10))
                    throw Error(this._invalidArgumentExceptions.invalidCloseButtonSize);
                if (isNaN(this.collapseButtonSize) || 0 > parseInt(this.collapseButtonSize, 10))
                    throw Error(this._invalidArgumentExceptions.invalidCollapseButtonSize);
            } catch (d) {
                throw Error(d);
            }
        },
        _validateModalProperties: function() {
            if (0 > this.modalOpacity || 1 < this.modalOpacity)
                throw Error(this._invalidArgumentExceptions.invalidModalOpacity);
            if (this.isModal && !this._singleModalCheck())
                throw Error(this._invalidArgumentExceptions.invalidIsModal);
        },
        _validateSize: function() {
            this._validateSizeLimits();
            if ("auto" !== this.height && isNaN(parseInt(this.height, 10)))
                throw Error(this._invalidArgumentExceptions.invalidHeight);
            if ("auto" !== this.width && isNaN(parseInt(this.width, 10)))
                throw Error(this._invalidArgumentExceptions.invalidWidth);
            "auto" !== this.height && this.height < this.minHeight && (this.height = this.minHeight);
            this.width < this.minWidth && (this.width = this.minWidth);
            "auto" !== this.height && this.height > this.maxHeight && (this.height = this.maxHeight);
            this.width > this.maxWidth && (this.width = this.maxWidth);
            null !== this.dragArea && this.dragArea && (null !== this.dragArea.height && this.host.height() > this.dragArea.height || parseInt(this.height, 10))
        },
        _validateSizeLimits: function() {
            null == this.maxHeight && (this.maxHeight = 9999);
            null == this.minWidth && (this.minWidth = 0);
            null == this.maxWidth && (this.maxWidth = 9999);
            null == this.minHeight && (this.minHeight = 0);
            if (isNaN(parseInt(this.minHeight, 10)))
                throw Error(this._invalidArgumentExceptions.invalidMinHeight);
            if (isNaN(parseInt(this.maxHeight, 10)))
                throw Error(this._invalidArgumentExceptions.invalidMaxHeight);
            if (isNaN(parseInt(this.minWidth, 10)))
                throw Error(this._invalidArgumentExceptions.invalidMinWidth);
            if (isNaN(parseInt(this.maxWidth, 10)))
                throw Error(this._invalidArgumentExceptions.invalidMaxWidth);
            if (this.minHeight && this.maxHeight && parseInt(this.minHeight, 10) > parseInt(this.maxHeight, 10) && this.maxHeight != Number.MAX_VALUE)
                throw Error(this._invalidArgumentExceptions.invalidMinHeight);
            if (this.minWidth && this.maxWidth && parseInt(this.minWidth, 10) > parseInt(this.maxWidth, 10) && this.maxWidth != Number.MAX_VALUE)
                throw Error(this._invalidArgumentExceptions.invalidMinWidth);
        },
        _validateAnimationProperties: function() {
            if ("fade" !== this.animationType && "slide" !== this.animationType && "combined" !== this.animationType && "none" !== this.animationType)
                throw Error(this._invalidArgumentExceptions.invalidAnimationType);
            if (isNaN(parseInt(this.closeAnimationDuration, 10)) || 0 > this.closeAnimationDuration)
                throw Error(this._invalidArgumentExceptions.invalidCloseAnimationDuration);
            if (isNaN(parseInt(this.showAnimationDuration, 10)) || 0 > this.showAnimationDuration)
                throw Error(this._invalidArgumentExceptions.invalidShowAnimationDuration);
        },
        _validateInteractionProperties: function() {
            if (0 > parseInt(this.keyCode, 10) || 130 < parseInt(this.keyCode, 10) && "esc" !== this.keyCode)
                throw Error(this._invalidArgumentExceptions.invalidKeyCode);
            if (null !== this.dragArea && ("undefined" === typeof this.dragArea.width || "undefined" === typeof this.dragArea.height || "undefined" === typeof this.dragArea.left || "undefined" === typeof this.dragArea.top))
                throw Error(this._invalidArgumentExceptions.invalidDragArea);
            if (!this.dialogResult || !this.dialogResult.OK && !this.dialogResult.Cancel && !this.dialogResult.None)
                throw Error(this._invalidArgumentExceptions.invalidDialogResult);
            if ("hide" !== this.closeButtonAction && "close" !== this.closeButtonAction)
                throw Error(this._invalidArgumentExceptions.invalidCloseButtonAction);
        },
        _singleModalCheck: function() {
            for (var d = e.data(document.body, "jqxwindows-list") || [], c = d.length; c; )
                if (--c,
                0 < e(d[c].attr("id")).length && e(d[c].attr("id")).jqxWindow("isModal"))
                    return !1;
            return !0
        },
        _createStructure: function() {
            var d = this.host.children();
            if (1 === d.length)
                this._content = d[0],
                this._header = document.createElement("div"),
                this._header.innerHTML = this.host.attr("caption"),
                this.element.insertBefore(this._header, this._content),
                this.host.attr("caption", ""),
                this._header = e(this._header),
                this._content = e(this._content);
            else if (2 === d.length)
                this._header = e(d[0]),
                this._content = e(d[1]);
            else
                throw Error("Invalid structure!");
        },
        _refresh: function() {
            this._render();
            this._addStyles();
            this._performLayout();
            this._removeEventHandlers();
            this._addEventHandlers();
            this._initializeResize()
        },
        _render: function() {
            this._addHeaderWrapper();
            this._addCloseButton();
            this._addCollapseButton();
            this._removeModal();
            this._makeModal()
        },
        _addHeaderWrapper: function() {
            this._headerContentWrapper || (this._header[0].innerHTML = '<div style="float:left;">' + this._header[0].innerHTML + "</div>",
            this._headerContentWrapper = e(this._header.children()[0]),
            null !== this.headerHeight && this._header.height(this.headerHeight))
        },
        _addCloseButton: function() {
            this._closeButton || (this._closeButtonWrapper = document.createElement("div"),
            this._closeButtonWrapper.className = this.toThemeProperty("jqx-window-close-button-background"),
            this._closeButton = document.createElement("div"),
            this._closeButton.className = this.toThemeProperty("jqx-window-close-button jqx-icon-close"),
            this._closeButton.style.width = "100%",
            this._closeButton.style.height = "100%",
            this._closeButtonWrapper.appendChild(this._closeButton),
            this._header[0].appendChild(this._closeButtonWrapper),
            this._closeButtonWrapper = e(this._closeButtonWrapper),
            this._closeButton = e(this._closeButton))
        },
        _addCollapseButton: function() {
            this._collapseButton || (this._collapseButtonWrapper = document.createElement("div"),
            this._collapseButtonWrapper.className = this.toThemeProperty("jqx-window-collapse-button-background"),
            this._collapseButton = document.createElement("div"),
            this._collapseButton.className = this.toThemeProperty("jqx-window-collapse-button jqx-icon-arrow-up"),
            this._collapseButton.style.width = "100%",
            this._collapseButton.style.height = "100%",
            this._collapseButtonWrapper.appendChild(this._collapseButton),
            this._header[0].appendChild(this._collapseButtonWrapper),
            this._collapseButtonWrapper = e(this._collapseButtonWrapper),
            this._collapseButton = e(this._collapseButton))
        },
        _removeModal: function() {
            this.isModal || "object" !== typeof this._modalBackground || null === this._modalBackground || (e("." + this.toThemeProperty("jqx-window-modal")).remove(),
            this._modalBackground = null)
        },
        focus: function() {
            try {
                this.host.focus();
                var d = this;
                setTimeout(function() {
                    d.host.focus()
                }, 10)
            } catch (c) {}
        },
        _makeModal: function() {
            if (this.isModal && !this._modalBackground) {
                var d = e.data(document.body, "jqxwindows-list");
                d && (this._removeFromArray(this.host, d),
                e.data(document.body, "jqxwindows-list", d));
                this._modalBackground = document.createElement("div");
                this._modalBackground.className = this.toThemeProperty("jqx-window-modal");
                this._setModalBackgroundStyles();
                document.body.appendChild(this._modalBackground);
                this.addHandler(this._modalBackground, this._getEvent("click"), function() {
                    return !1
                });
                var c = this;
                this.addHandler(this._modalBackground, "mouseup", function(f) {
                    c._stopResizing(c);
                    f.preventDefault()
                });
                this.addHandler(this._modalBackground, "mousedown", function(f) {
                    var g = c._getTabbables();
                    0 < g.length && (g[0].focus(),
                    setTimeout(function() {
                        g[0].focus()
                    }, 100));
                    f.preventDefault();
                    return !1
                });
                this.addHandler(e(document), "keydown.window" + this.element.id, function(f) {
                    if (9 === f.keyCode) {
                        var g = e.data(document.body, "jqxwindows-modallist");
                        if (!(1 < g.length && g[g.length - 1][0] != c.element)) {
                            g = c._getTabbables();
                            var h = null
                              , k = null;
                            if (0 !== c.element.offsetWidth && 0 !== c.element.offsetHeight && (0 < g.length && (h = g[0],
                            k = g[g.length - 1]),
                            f.target != c.element && null != h)) {
                                if (!c.element.contains(f.target) || f.target === k && !f.shiftKey)
                                    return h.focus(),
                                    !1;
                                if (f.target === h && f.shiftKey)
                                    return k.focus(),
                                    !1
                            }
                        }
                    }
                })
            }
        },
        _addStyles: function() {
            this.host.addClass(this.toThemeProperty("jqx-rc-all"));
            this.host.addClass(this.toThemeProperty("jqx-window"));
            this.host.addClass(this.toThemeProperty("jqx-popup"));
            e.jqx.browser.msie && this.host.addClass(this.toThemeProperty("jqx-noshadow"));
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.host.addClass(this.toThemeProperty("jqx-widget-content"));
            this._header.addClass(this.toThemeProperty("jqx-window-header"));
            this._content.addClass(this.toThemeProperty("jqx-window-content"));
            this._header.addClass(this.toThemeProperty("jqx-widget-header"));
            this._content.addClass(this.toThemeProperty("jqx-widget-content"));
            this._header.addClass(this.toThemeProperty("jqx-disableselect"));
            this._header.addClass(this.toThemeProperty("jqx-rc-t"));
            this._content.addClass(this.toThemeProperty("jqx-rc-b"));
            this.host.attr("tabindex") || (this.element.tabIndex = 0,
            this._header[0].tabIndex = 0,
            this._content[0].tabIndex = 0);
            this.element.setAttribute("hideFocus", "true");
            this.element.style.outline = "none"
        },
        _performHeaderLayout: function() {
            this._handleHeaderButtons();
            this._header[0].style.position = "relative";
            this.rtl ? (this._headerContentWrapper[0].style.direction = "rtl",
            this._headerContentWrapper[0].style["float"] = "right") : (this._headerContentWrapper[0].style.direction = "ltr",
            this._headerContentWrapper[0].style["float"] = "left");
            this._performHeaderCloseButtonLayout();
            this._performHeaderCollapseButtonLayout();
            this._centerElement(this._headerContentWrapper, this._header, "y", "margin");
            this.headerHeight && (this._centerElement(this._closeButtonWrapper, this._header, "y", "margin"),
            this._centerElement(this._collapseButtonWrapper, this._header, "y", "margin"))
        },
        _handleHeaderButtons: function() {
            if (this._closeButtonWrapper) {
                if (this.showCloseButton) {
                    this._closeButtonWrapper[0].style.visibility = "visible";
                    var d = this._toPx(this.closeButtonSize);
                    this._closeButtonWrapper[0].style.width = d;
                    this._closeButtonWrapper[0].style.height = d
                } else
                    this._closeButtonWrapper[0].style.visibility = "hidden";
                this.showCollapseButton ? (this._collapseButtonWrapper[0].style.visibility = "visible",
                d = this._toPx(this.collapseButtonSize),
                this._collapseButtonWrapper[0].style.width = d,
                this._collapseButtonWrapper[0].style.height = d) : this._collapseButtonWrapper[0].style.visibility = "hidden"
            }
        },
        _performHeaderCloseButtonLayout: function() {
            if (this._closeButtonWrapper) {
                var d = parseInt(this._header.css("padding-right"), 10);
                isNaN(d) || (this._closeButtonWrapper.width(this._closeButton.width()),
                this.rtl ? (this._closeButtonWrapper[0].style.marginRight = "0px",
                this._closeButtonWrapper[0].style.marginLeft = this._toPx(d)) : (this._closeButtonWrapper[0].style.marginRight = this._toPx(d),
                this._closeButtonWrapper[0].style.marginLeft = "0px"));
                this._closeButtonWrapper[0].style.position = "absolute";
                this.rtl ? (this._closeButtonWrapper[0].style.right = "",
                this._closeButtonWrapper[0].style.left = "0px") : (this._closeButtonWrapper[0].style.right = "0px",
                this._closeButtonWrapper[0].style.left = "")
            }
        },
        _performHeaderCollapseButtonLayout: function() {
            if (this._closeButtonWrapper) {
                var d = parseInt(this._header.css("padding-right"), 10);
                if (!isNaN(d)) {
                    var c = this._toPx(this.collapseButtonSize);
                    this._collapseButtonWrapper[0].style.width = c;
                    this._collapseButtonWrapper[0].style.height = c;
                    this.rtl ? (this._collapseButtonWrapper[0].style.marginRight = "0px",
                    this._collapseButtonWrapper[0].style.marginLeft = this._toPx(d)) : (this._collapseButtonWrapper[0].style.marginRight = this._toPx(d),
                    this._collapseButtonWrapper[0].style.marginLeft = "0px")
                }
                this._collapseButtonWrapper[0].style.position = "absolute";
                d = this._toPx(this.showCloseButton ? this._closeButton.outerWidth(!0) : 0);
                this.rtl ? (this._collapseButtonWrapper[0].style.right = "",
                this._collapseButtonWrapper[0].style.left = d) : (this._collapseButtonWrapper[0].style.right = d,
                this._collapseButtonWrapper[0].style.left = "");
                this._centerElement(this._collapseButton, e(this._collapseButton[0].parentElement), "y")
            }
        },
        _performWidgetLayout: function() {
            "auto" !== this.width && (this.width && 0 <= this.width.toString().indexOf("%") ? this.element.style.width = this.width : this.element.style.width = this._toPx(this.width));
            this.collapsed || ("auto" !== this.height ? this.height && 0 <= this.height.toString().indexOf("%") ? this.element.style.height = this.height : this.element.style.height = this._toPx(this.height) : this.element.style.height = this.host.height() + "px",
            this.element.style.minHeight = this._toPx(this.minHeight));
            this._setChildrenLayout();
            var d = this._validateMinSize();
            this.element.style.maxHeight = this._toPx(this.maxHeight);
            this.element.style.minWidth = this._toPx(this.minWidth);
            this.element.style.maxWidth = this._toPx(this.maxWidth);
            d || this._setChildrenLayout()
        },
        _setChildrenLayout: function() {
            this._header.width(this.host.width() - (this._header.outerWidth(!0) - this._header.width()));
            this._content.width(this.host.width() - (this._content.outerWidth(!0) - this._content.width()));
            this._content.height(this.host.height() - this._header.outerHeight(!0) - (this._content.outerHeight(!0) - this._content.height()))
        },
        _validateMinSize: function() {
            var d = !0;
            this.minHeight < this._header.height() && (this.minHeight = this._header.height(),
            d = !1);
            var c = e(this._header.children()[0]).outerWidth()
              , f = this._header.children()[1] ? e(this._header.children()[1]).outerWidth() : 0;
            100 > this.minWidth && (this.minWidth = Math.min(c + f, 100),
            d = !1);
            return d
        },
        _centerElement: function(d, c, f, g) {
            "number" === typeof c.left && "number" === typeof c.top && "number" === typeof c.height && "number" === typeof c.width ? this._centerElementInArea(d, c, f) : this._centerElementInParent(d, c, f, g)
        },
        _centerElementInParent: function(d, c, f, g) {
            var h = "none" === d.css("display");
            f = f.toLowerCase();
            if (g) {
                var k = g + "Top";
                g += "Left"
            } else
                k = "top",
                g = "left";
            if (0 <= f.indexOf("y")) {
                h && (d[0].style.display = "block");
                var l = d.outerHeight(!0);
                h && (d[0].style.display = "none");
                var m = c.height();
                d[0].style[k] = Math.max(0, m - l) / 2 + "px"
            }
            0 <= f.indexOf("x") && (h && (d[0].style.display = "block"),
            f = d.outerWidth(!0),
            h && (d[0].style.display = "none"),
            c = c.width(),
            d[0].style[g] = Math.max(0, c - f) / 2 + "px")
        },
        _centerElementInArea: function(d, c, f) {
            f = f.toLowerCase();
            if (0 <= f.indexOf("y")) {
                var g = d.outerHeight(!0);
                d[0].style.top = (c.height - g) / 2 + c.top + "px"
            }
            0 <= f.indexOf("x") && (f = d.outerWidth(!0),
            d[0].style.left = (c.width - f) / 2 + c.left + "px")
        },
        _removeEventHandlers: function() {
            this.removeHandler(this._header, this._getEvent("mousedown"));
            this.removeHandler(this._header, this._getEvent("mousemove"));
            this.removeHandler(this._header, "focus");
            this.removeHandler(e(document), this._getEvent("mousemove") + "." + this.host.attr("id"));
            this.removeHandler(e(document), this._getEvent("mouseup") + "." + this.host.attr("id"));
            this.removeHandler(this.host, "keydown");
            this.removeHandler(this._closeButton, this._getEvent("click"));
            this.removeHandler(this._closeButton, this._getEvent("mouseenter"));
            this.removeHandler(this._closeButton, this._getEvent("mouseleave"));
            this.removeHandler(this._collapseButton, this._getEvent("click"));
            this.removeHandler(this._collapseButton, this._getEvent("mouseenter"));
            this.removeHandler(this._collapseButton, this._getEvent("mouseleave"));
            this.removeHandler(this.host, this._getEvent("mousedown"));
            this.okButton && this.removeHandler(e(this.okButton), this._getEvent("click"), this._setDialogResultHandler);
            this.cancelButton && this.removeHandler(e(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler);
            this.removeHandler(this._header, this._getEvent("mouseenter"));
            this.removeHandler(this._header, this._getEvent("mouseleave"));
            this.removeHandler(this.host, "resizing", this._windowResizeHandler)
        },
        _removeFromArray: function(d, c) {
            return 0 <= this._indexOf(d, c) ? c.splice(this._indexOf(d, c), 1) : c
        },
        _sortByStyle: function(d, c) {
            for (var f = 0; f < c.length; f++)
                for (var g = c.length - 1; g > f; g--) {
                    var h = c[g]
                      , k = c[g - 1];
                    parseInt(h.css(d), 10) < parseInt(k.css(d), 10) && (c[g] = k,
                    c[g - 1] = h)
                }
        },
        _initializeResize: function() {
            this.resizable && this.initResize({
                target: this.host,
                alsoResize: this._content,
                maxWidth: this.maxWidth,
                minWidth: this.minWidth,
                maxHeight: this.maxHeight,
                minHeight: this.minHeight,
                indicatorSize: 10,
                resizeParent: this.dragArea
            })
        },
        _removeResize: function() {
            this.removeResize()
        },
        _getEvent: function(d) {
            return this._isTouchDevice ? this._touchEvents[d] : d
        },
        _addEventHandlers: function() {
            this._addDragDropHandlers();
            this._addCloseHandlers();
            this._addCollapseHandlers();
            this._addFocusHandlers();
            this._documentResizeHandlers();
            this._closeButtonHover();
            this._collapseButtonHover();
            this._addDialogButtonsHandlers();
            this._addHeaderHoverEffect();
            this._addResizeHandlers();
            var d = this;
            this.addHandler(this._header, this._getEvent("mousemove"), function() {
                d._addHeaderCursorHandlers(d)
            })
        },
        _addResizeHandlers: function() {
            var d = this;
            d.addHandler(d.host, "resizing", d._windowResizeHandler, {
                self: d
            });
            this.addHandler(e(window), "orientationchanged." + this.element.id, function() {
                d._performLayout()
            });
            this.addHandler(e(window), "orientationchange." + this.element.id, function() {
                d._performLayout()
            })
        },
        _windowResizeHandler: function(d) {
            var c = d.data.self;
            c._header.width(c.host.width() - (c._header.outerWidth(!0) - c._header.width()));
            if (c.width && 0 <= c.width.toString().indexOf("%")) {
                var f = e(document.body).width() / 100;
                c.width = 1 / f * d.args.width + "%"
            } else
                c.width = d.args.width;
            c.height && 0 <= c.height.toString().indexOf("%") ? (f = e(document.body).height() / 100,
            c.height = 1 / f * d.args.height + "%") : c.height = d.args.height
        },
        _addHeaderHoverEffect: function() {
            var d = this;
            this.addHandler(this._header, this._getEvent("mouseenter"), function() {
                e(this).addClass(d.toThemeProperty("jqx-window-header-hover"))
            });
            this.addHandler(this._header, this._getEvent("mouseleave"), function() {
                e(this).removeClass(d.toThemeProperty("jqx-window-header-hover"))
            })
        },
        _addDialogButtonsHandlers: function() {
            this.okButton && this.addHandler(e(this.okButton), this._getEvent("click"), this._setDialogResultHandler, {
                self: this,
                result: "ok"
            });
            this.cancelButton && this.addHandler(e(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler, {
                self: this,
                result: "cancel"
            })
        },
        _documentResizeHandlers: function() {
            var d = this;
            this.isModal && this.addHandler(e(window), "resize.window" + this.element.id, function() {
                if ("object" === typeof d._modalBackground && null !== d._modalBackground) {
                    d.isOpen() && (d._modalBackground.style.display = "none");
                    if (d.restricter)
                        d._modalBackground.style.left = d._toPx(d.dragArea.left),
                        d._modalBackground.style.top = d._toPx(d.dragArea.top),
                        d._modalBackground.style.width = d._toPx(d.dragArea.width),
                        d._modalBackground.style.height = d._toPx(d.dragArea.height);
                    else {
                        var c = d._getDocumentSize();
                        d._modalBackground.style.width = c.width + "px";
                        d._modalBackground.style.height = c.height + "px"
                    }
                    d.isOpen() && (d._modalBackground.style.display = "block")
                }
            })
        },
        _setDialogResultHandler: function(d) {
            var c = d.data.self;
            c._setDialogResult(d.data.result);
            c.closeWindow()
        },
        _setDialogResult: function(d) {
            this.dialogResult.OK = !1;
            this.dialogResult.None = !1;
            this.dialogResult.Cancel = !1;
            d = d.toLowerCase();
            switch (d) {
            case "ok":
                this.dialogResult.OK = !0;
                break;
            case "cancel":
                this.dialogResult.Cancel = !0;
                break;
            default:
                this.dialogResult.None = !0
            }
        },
        _getDocumentSize: function() {
            var d = e.jqx.browser.msie && 9 > e.jqx.browser.version
              , c = d ? 4 : 0
              , f = c;
            document.body.scrollHeight > document.body.clientHeight && d && (c = this._SCROLL_WIDTH);
            document.body.scrollWidth > document.body.clientWidth && d && (f = this._SCROLL_WIDTH);
            return {
                width: e(document).width() - c,
                height: e(document).height() - f
            }
        },
        _closeButtonHover: function() {
            var d = this;
            this.addHandler(this._closeButton, this._getEvent("mouseenter"), function() {
                d._closeButton.addClass(d.toThemeProperty("jqx-window-close-button-hover"))
            });
            this.addHandler(this._closeButton, this._getEvent("mouseleave"), function() {
                d._closeButton.removeClass(d.toThemeProperty("jqx-window-close-button-hover"))
            })
        },
        _collapseButtonHover: function() {
            var d = this;
            this.addHandler(this._collapseButton, this._getEvent("mouseenter"), function() {
                d._collapseButton.addClass(d.toThemeProperty("jqx-window-collapse-button-hover"))
            });
            this.addHandler(this._collapseButton, this._getEvent("mouseleave"), function() {
                d._collapseButton.removeClass(d.toThemeProperty("jqx-window-collapse-button-hover"))
            })
        },
        _setModalBackgroundStyles: function() {
            if (this.isModal) {
                var d = this._getDocumentSize();
                e.jqx.browser.msie && 9 > e.jqx.browser.version ? this._modalBackground.style.filter = "alpha(opacity=" + 100 * this.modalOpacity + ")" : this._modalBackground.style.opacity = this.modalOpacity;
                this._modalBackground.style.position = "absolute";
                this._modalBackground.style.top = "0px";
                this._modalBackground.style.left = "0px";
                this._modalBackground.style.width = d.width;
                this._modalBackground.style.height = d.height;
                this._modalBackground.style.zIndex = this.modalBackgroundZIndex;
                this.autoOpen || (this._modalBackground.style.display = "none")
            }
        },
        _addFocusHandlers: function() {
            var d = this;
            this.addHandler(this.host, this._getEvent("mousedown"), function() {
                d.isModal || d.bringToFront()
            })
        },
        _indexOf: function(d, c) {
            for (var f = 0; f < c.length; f++)
                if (c[f][0] === d[0])
                    return f;
            return -1
        },
        _addCloseHandlers: function() {
            var d = this;
            this.addHandler(this._closeButton, this._getEvent("click"), function(c) {
                return d._closeWindow(c)
            });
            "none" !== this.keyboardCloseKey && "number" !== typeof this.keyboardCloseKey && "esc" === this.keyboardCloseKey.toLowerCase() && (this.keyboardCloseKey = 27);
            this.addHandler(this.host, "keydown", function(c) {
                c.keyCode === d.keyboardCloseKey && null != d.keyboardCloseKey && "none" != d.keyboardCloseKey ? d._closeWindow(c) : d._handleKeys(c)
            }, {
                self: this
            });
            this.addHandler(this.host, "keyup", function() {
                if (d.keyboardNavigation && d._moved) {
                    var c = d.host.coord()
                      , f = c.left;
                    c = c.top;
                    d._raiseEvent(3, f, c, f, c);
                    d._moved = !1
                }
            })
        },
        _handleKeys: function(d) {
            if (this.keyboardNavigation && this._headerFocused && !e(document.activeElement).ischildof(this._content)) {
                var c = d.ctrlKey
                  , f = d.keyCode
                  , g = this.host.coord()
                  , h = g.left;
                g = g.top;
                var k = this._getDraggingArea()
                  , l = this.host.width()
                  , m = this.host.height()
                  , n = !0;
                switch (f) {
                case 37:
                    c ? this.resizable && this.resize(l - 10, m) : this.draggable && 0 <= h - 10 && this.move(h - 10, g);
                    n = !1;
                    break;
                case 38:
                    c ? this.resizable && this.resize(l, m - 10) : this.draggable && 0 <= g - 10 && this.move(h, g - 10);
                    n = !1;
                    break;
                case 39:
                    c ? this.resizable && this.resize(l + 10, m) : this.draggable && h + l + 10 <= k.width && this.move(h + 10, g);
                    n = !1;
                    break;
                case 40:
                    c ? this.resizable && this.resize(l, m + 10) : this.draggable && g + m + 10 <= k.height && this.move(h, g + 10),
                    n = !1
                }
                n || (d.preventDefault && d.preventDefault(),
                d.stopPropagation && d.stopPropagation());
                return n
            }
        },
        _addCollapseHandlers: function() {
            var d = this;
            this.addHandler(this._collapseButton, this._getEvent("click"), function() {
                d.collapsed ? d.expand() : d.collapse()
            })
        },
        _closeWindow: function() {
            this.closeWindow();
            return !1
        },
        _addHeaderCursorHandlers: function(d) {
            d.resizeArea && d.resizable && !d.collapsed ? d._header[0].style.cursor = d._resizeWrapper.style.cursor : d.draggable ? d._header[0].style.cursor = "move" : (d._header[0].style.cursor = "default",
            d._resizeWrapper && (d._resizeWrapper.style.cursor = "default"))
        },
        _addDragDropHandlers: function() {
            if (this.draggable) {
                var d = this;
                this.addHandler(this.host, "focus", function() {
                    d._headerFocused = !0
                });
                this.addHandler(this.host, "blur", function() {
                    d._headerFocused = !1
                });
                this.addHandler(this._header, "focus", function() {
                    d._headerFocused = !0;
                    return !1
                });
                this.addHandler(this._header, this._getEvent("mousedown"), function(f, g, h) {
                    g && (f.pageX = g);
                    h && (f.pageY = h);
                    d._headerMouseDownHandler(d, f);
                    return !0
                });
                this.addHandler(this._header, "dragstart", function(f) {
                    f.preventDefault && f.preventDefault();
                    return !1
                });
                this.addHandler(this._header, this._getEvent("mousemove"), function(f) {
                    return d._headerMouseMoveHandler(d, f)
                });
                this.addHandler(e(document), this._getEvent("mousemove") + "." + this.host.attr("id"), function(f) {
                    return d._dragHandler(d, f)
                });
                this.addHandler(e(document), this._getEvent("mouseup") + "." + this.host.attr("id"), function(f) {
                    return d._dropHandler(d, f)
                });
                try {
                    if ("" !== document.referrer || window.frameElement) {
                        var c = null;
                        null != window.top && window.top != window.self && window.parent && document.referrer && (c = document.referrer);
                        c && -1 != c.indexOf(document.location.host) && (c = function(f) {
                            d._dropHandler(d, f)
                        }
                        ,
                        window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", c, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", c))
                    }
                } catch (f) {}
            }
        },
        _headerMouseDownHandler: function(d, c) {
            d.isModal || d.bringToFront();
            null == d._resizeDirection && (c = e.jqx.position(c),
            d._mousePosition.x = c.left,
            d._mousePosition.y = c.top,
            d._mouseDown = !0,
            d._isDragging = !1)
        },
        _headerMouseMoveHandler: function(d, c) {
            if (d._mouseDown && !d._isDragging) {
                e.jqx.mobile.getTouches(c);
                var f = e.jqx.position(c);
                var g = f.left;
                f = f.top;
                if (g + 3 < d._mousePosition.x || g - 3 > d._mousePosition.x || f + 3 < d._mousePosition.y || f - 3 > d._mousePosition.y)
                    d._isDragging = !0,
                    d._mousePosition = {
                        x: g,
                        y: f
                    },
                    d._windowPosition = {
                        x: d.host.coord().left,
                        y: d.host.coord().top
                    },
                    e(document.body).addClass(d.toThemeProperty("jqx-disableselect"));
                return d._isTouchDevice ? (c.preventDefault(),
                !0) : !1
            }
            return d._isDragging ? d._isTouchDevice ? (c.preventDefault(),
            !0) : !1 : !0
        },
        _dropHandler: function(d, c) {
            var f = !0;
            if (d._isDragging && !d.isResizing && !d._resizeDirection) {
                f = parseInt(d.host.css("left"), 10);
                var g = parseInt(d.host.css("top"), 10)
                  , h = d._isTouchDevice ? 0 : c.pageX
                  , k = d._isTouchDevice ? 0 : c.pageY;
                d.enableResize = d._enableResizeBackup;
                d._enableResizeBackup = "undefined";
                d._raiseEvent(3, f, g, h, k);
                f = !1;
                "undefined" != c.preventDefault && c.preventDefault();
                null != c.originalEvent && (c.originalEvent.mouseHandled = !0);
                "undefined" != c.stopPropagation && c.stopPropagation()
            }
            d._isDragging = !1;
            d._mouseDown = !1;
            e(document.body).removeClass(d.toThemeProperty("jqx-disableselect"));
            return f
        },
        _dragHandler: function(d, c) {
            if (d._isDragging && !d.isResizing && !d._resizeDirection) {
                var f = d._isTouchDevice ? c.originalEvent.which : c.which;
                "undefined" === typeof d._enableResizeBackup && (d._enableResizeBackup = d.enableResize);
                d.enableResize = !1;
                if (0 === f && e.jqx.browser.msie && 8 > e.jqx.browser.version)
                    return d._dropHandler(d, c);
                f = e.jqx.position(c);
                d.move(d._windowPosition.x + (f.left - d._mousePosition.x), d._windowPosition.y + (f.top - d._mousePosition.y), c);
                c.preventDefault();
                return !1
            }
            return !0
        },
        _validateCoordinates: function(d, c, f, g) {
            var h = this._getDraggingArea();
            d = d < h.left ? h.left : d;
            c = c < h.top ? h.top : c;
            var k = this.host.outerWidth(!0)
              , l = this.host.outerHeight(!0);
            d + k >= h.width + h.left - 2 * g && (d = h.width + h.left - k - g);
            c + l >= h.height + h.top - f && (c = h.height + h.top - l - f);
            return {
                x: d,
                y: c
            }
        },
        _performLayout: function() {
            this._performHeaderLayout();
            this._performWidgetLayout()
        },
        _parseDragAreaAttributes: function() {
            null !== this.dragArea && (this.dragArea.height = parseInt(this.dragArea.height, 10),
            this.dragArea.width = parseInt(this.dragArea.width, 10),
            this.dragArea.top = parseInt(this.dragArea.top, 10),
            this.dragArea.left = parseInt(this.dragArea.left, 10))
        },
        _positionWindow: function() {
            this._parseDragAreaAttributes();
            if (this.position instanceof Array && 2 === this.position.length && "number" === typeof this.position[0] && "number" === typeof this.position[1])
                this.element.style.left = this._toPx(this.position[0]),
                this.element.style.top = this._toPx(this.position[1]);
            else if (this.position instanceof Object)
                if (this.position.left)
                    this.host.offset(this.position);
                else if (void 0 !== this.position.x && void 0 !== this.position.y)
                    this.element.style.left = this._toPx(this.position.x),
                    this.element.style.top = this._toPx(this.position.y);
                else {
                    if (this.position.center) {
                        this._centerElement(this.host, this.position.center, "xy");
                        var d = this.position.center.coord()
                          , c = parseInt(this.host.css("left"), 10)
                          , f = parseInt(this.host.css("top"), 10);
                        this.element.style.left = this._toPx(c + d.left);
                        this.element.style.top = this._toPx(f + d.top)
                    }
                }
            else
                this._positionFromLiteral()
        },
        _getDraggingArea: function() {
            var d = {};
            d.left = this.dragArea && this.dragArea.left ? this.dragArea.left : 0;
            d.top = this.dragArea && this.dragArea.top ? this.dragArea.top : 0;
            d.width = this.dragArea && this.dragArea.width ? this.dragArea.width : this._getDocumentSize().width;
            d.height = this.dragArea && this.dragArea.height ? this.dragArea.height : this._getDocumentSize().height;
            return d
        },
        _positionFromLiteral: function() {
            this.position instanceof Array || (this.position = this.position.split(","));
            for (var d = this.position.length, c = this._getDraggingArea(); d; )
                switch (--d,
                this.position[d] = this.position[d].replace(/ /g, ""),
                this.position[d]) {
                case "top":
                    this.element.style.top = this._toPx(c.top);
                    break;
                case "left":
                    this.element.style.left = this._toPx(c.left);
                    break;
                case "bottom":
                    this.element.style.top = this._toPx(c.height - this.host.height() + c.top);
                    break;
                case "right":
                    this.element.style.left = this._toPx(c.left + c.width - this.host.width());
                    break;
                default:
                    this.dragArea || (c = e(window)),
                    this._centerElement(this.host, c, "xy")
                }
        },
        _raiseEvent: function(d, c, f, g, h) {
            var k = this._events[d]
              , l = e.Event(k)
              , m = {};
            if (2 === d || 3 === d)
                m.x = c,
                m.y = f,
                m.pageX = g,
                m.pageY = h;
            if ("closed" === k || "close" === k)
                m.dialogResult = this.dialogResult;
            l.args = m;
            return this.host.trigger(l)
        },
        destroy: function() {
            this.removeHandler(e(window), "resize.window" + this.element.id);
            this._removeEventHandlers();
            this._destroy()
        },
        _destroy: function() {
            this.isModal && (null !== this._modalBackground && e(this._modalBackground).remove(),
            this.host.jqxWindow({
                isModal: !1
            }));
            this.restricter && (this.removeHandler(e(window), "resize." + this.element.id),
            this.removeHandler(e(window), "orientationchanged." + this.element.id),
            this.removeHandler(e(window), "orientationchange." + this.element.id));
            this.host.remove();
            null !== this._modalBackground && e(this._modalBackground).remove()
        },
        _toClose: function(d, c) {
            return d && c[0] === this.element || c[0] !== this.element && "object" === typeof c[0]
        },
        propertyChangedHandler: function(d, c, f, g) {
            this._validateProperties();
            switch (c) {
            case "rtl":
                this._performLayout();
                break;
            case "dragArea":
                this._positionWindow();
                break;
            case "collapseButtonSize":
                this._performLayout();
                break;
            case "closeButtonSize":
                this._performLayout();
                break;
            case "isModal":
                this._refresh();
                this._fixWindowZIndex();
                if (!1 === g) {
                    d = e.data(document.body, "jqxwindows-modallist");
                    var h = [];
                    for (c = 0; c < d.length; c++)
                        d[c][0] !== this.element && h.push(d[c])
                }
                e.data(document.body, "jqxwindows-modallist", h);
                break;
            case "keyboardCloseKey":
                this._removeEventHandlers();
                this._addEventHandlers();
                break;
            case "disabled":
                g ? this.disable() : (this.disabled = !0,
                this.enable());
                break;
            case "showCloseButton":
            case "showCollapseButton":
                this._performLayout();
                break;
            case "height":
                this._performLayout();
                break;
            case "width":
                this._performLayout();
                break;
            case "title":
                this.setTitle(g);
                this.title = g;
                break;
            case "content":
                this.setContent(g);
                break;
            case "draggable":
                this._removeEventHandlers();
                this._addEventHandlers();
                this._removeResize();
                this._initializeResize();
                break;
            case "resizable":
                (this.enableResize = g) ? this._initializeResize() : this._removeResize();
                break;
            case "position":
                this._positionWindow();
                break;
            case "modalOpacity":
                this._setModalBackgroundStyles();
                break;
            case "okButton":
                g ? this._addDialogButtonsHandlers() : this.removeHandler(this.okButton);
                break;
            case "cancelButton":
                g ? this._addDialogButtonsHandlers() : this.removeHandler(this.cancelButton);
                break;
            case "collapsed":
                g ? f || (this.collapsed = !1,
                this.collapse(0)) : f && (this.collapsed = !0,
                this.expand(0));
                break;
            case "theme":
                e.jqx.utilities.setTheme(f, g, this.host);
                break;
            case "maxWidth":
            case "maxHeight":
            case "minWidth":
            case "minHeight":
                d._performLayout(),
                d._removeResize(),
                d._initializeResize()
            }
        },
        collapse: function(d) {
            if (!this.collapsed && !0 !== this._animationInProgress && "none" != this.host.css("display")) {
                var c = this
                  , f = this._header.outerHeight(!0)
                  , g = parseInt(this._header.css("border-bottom-width"), 10)
                  , h = parseInt(this._header.css("margin-bottom"), 10);
                d = isNaN(parseInt(d, 10)) ? this.collapseAnimationDuration : d;
                isNaN(g) || (f -= 2 * g);
                isNaN(h) || (f += h);
                this._heightBeforeCollapse = this.host.height();
                this._minHeightBeforeCollapse = this.host.css("min-height");
                this.element.style.minHeight = this._toPx(f);
                c._animationInProgress = !0;
                this.host.animate({
                    height: f
                }, {
                    duration: d,
                    complete: function() {
                        c._animationInProgress = !1;
                        c.collapsed = !0;
                        c._collapseButton.addClass(c.toThemeProperty("jqx-window-collapse-button-collapsed"));
                        c._collapseButton.addClass(c.toThemeProperty("jqx-icon-arrow-down"));
                        c._content[0].style.display = "none";
                        c._raiseEvent(5);
                        c._raiseEvent(9);
                        e.jqx.aria(c, "aria-expanded", !1)
                    }
                })
            }
        },
        expand: function(d) {
            if (this.collapsed && !0 !== this._animationInProgress) {
                var c = this;
                d = isNaN(parseInt(d, 10)) ? this.collapseAnimationDuration : d;
                c._animationInProgress = !0;
                this.host.animate({
                    height: this._heightBeforeCollapse
                }, {
                    duration: d,
                    complete: function() {
                        c._animationInProgress = !1;
                        c.collapsed = !1;
                        c.element.style.minHeight = c._toPx(c._minHeightBeforeCollapse);
                        c._collapseButton.removeClass(c.toThemeProperty("jqx-window-collapse-button-collapsed"));
                        c._collapseButton.removeClass(c.toThemeProperty("jqx-icon-arrow-down"));
                        c._content[0].style.display = "block";
                        c._raiseEvent(6);
                        c._performWidgetLayout();
                        c._raiseEvent(9);
                        e.jqx.aria(c, "aria-expanded", !0)
                    }
                })
            }
        },
        closeAll: function(d) {
            d = !0;
            for (var c = e.data(document.body, "jqxwindows-list"), f = c.length, g = e.data(document.body, "jqxwindow-modal") || []; f; )
                --f,
                this._toClose(d, c[f]) && (c[f].jqxWindow("closeWindow", "close"),
                c.splice(f, 1));
            this._toClose(d, g) && (g.jqxWindow("closeWindow", "close"),
            e.data(document.body, "jqxwindow-modal", []));
            e.data(document.body, "jqxwindows-list", c)
        },
        setTitle: function(d) {
            if ("string" === typeof d)
                this._headerContentWrapper.html(d);
            else if ("object" === typeof d)
                try {
                    this._headerContentWrapper[0].innerHTML = "",
                    d instanceof HTMLElement ? this._headerContentWrapper[0].appendChild(d) : d.appendTo && d.appendTo(this._headerContentWrapper)
                } catch (c) {
                    throw Error(c);
                }
            this.title = d;
            this._performLayout()
        },
        setContent: function(d) {
            this._contentInitialized = !1;
            for (var c = this._content, f = !1; !f; )
                c[0].style.width = "auto",
                c[0].style.height = "auto",
                c.hasClass("jqx-window") ? f = !0 : c = e(c[0].parentNode);
            if (e.isArray(d))
                for (c = 0; c < d.length; c++)
                    d[c].appendTo(this._content);
            else if ("string" === typeof d)
                e(this._content[0]).html(d);
            else if ("object" === typeof d)
                try {
                    this._content[0].innerHTML = "",
                    d instanceof HTMLElement ? this._content[0].appendChild(d) : d.appendTo && d.appendTo(this._content)
                } catch (g) {
                    throw Error(g);
                }
            this.content = d;
            this._performLayout()
        },
        disable: function() {
            this.disabled = !0;
            this._removeEventHandlers();
            this._header.addClass(this.toThemeProperty("jqx-window-header-disabled"));
            this._closeButton.addClass(this.toThemeProperty("jqx-window-close-button-disabled"));
            this._collapseButton.addClass(this.toThemeProperty("jqx-window-collapse-button-disabled"));
            this._content.addClass(this.toThemeProperty("jqx-window-content-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-window-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this._removeResize()
        },
        enable: function() {
            this.disabled && (this._addEventHandlers(),
            this._header.removeClass(this.toThemeProperty("jqx-window-header-disabled")),
            this._content.removeClass(this.toThemeProperty("jqx-window-content-disabled")),
            this._closeButton.removeClass(this.toThemeProperty("jqx-window-close-button-disabled")),
            this._collapseButton.removeClass(this.toThemeProperty("jqx-window-collapse-button-disabled")),
            this.host.removeClass(this.toThemeProperty("jqx-window-disabled")),
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled")),
            this.disabled = !1,
            this._initializeResize())
        },
        isOpen: function() {
            return this._visible
        },
        closeWindow: function(d) {
            var c = this;
            d = "undefined" === typeof d ? this.closeButtonAction : d;
            this.hide(function() {
                "close" === d && c._destroy()
            })
        },
        bringToFront: function() {
            var d = e.data(document.body, "jqxwindows-list");
            if (this.isModal)
                e.data(document.body, "jqxwindows-modallist"),
                this._fixWindowZIndex("modal-hide"),
                this._fixWindowZIndex("modal-show");
            else {
                for (var c = parseInt(d[d.length - 1].css("z-index"), 10), f = this._indexOf(this.host, d), g = d.length - 1; g > f; --g) {
                    var h = parseInt(d[g].css("z-index"), 10) - 1;
                    d[g][0].style.zIndex = h
                }
                this.element.style.zIndex = c;
                this._sortByStyle("z-index", d)
            }
        },
        hide: function(d, c, f) {
            var g = this;
            if (!this.closing || !1 !== this.closing()) {
                c = c || this.closeAnimationDuration;
                switch (this.animationType) {
                case "none":
                    this.element.style.display = "none";
                    break;
                case "fade":
                    g._animationInProgress = !0;
                    this.host.fadeOut({
                        duration: c,
                        callback: function() {
                            g._animationInProgress = !1;
                            d instanceof Function && d()
                        }
                    });
                    break;
                case "slide":
                    g._animationInProgress = !0;
                    this.host.slideUp({
                        duration: c,
                        callback: function() {
                            g._animationInProgress = !1;
                            d instanceof Function && d()
                        }
                    });
                    break;
                case "combined":
                    g._animationInProgress = !0,
                    this.host.animate({
                        opacity: 0,
                        width: "0px",
                        height: "0px"
                    }, {
                        duration: c,
                        complete: function() {
                            g._animationInProgress = !1;
                            g.element.style.display = "none";
                            d instanceof Function && d()
                        }
                    })
                }
                this._visible = !1;
                this.isModal && (e(this._modalBackground).hide(),
                this._fixWindowZIndex("modal-hide"));
                !0 !== f && (this._raiseEvent(1),
                this._raiseEvent(8))
            }
        },
        open: function(d, c) {
            this.show(d, c)
        },
        close: function(d, c, f) {
            this.hide(d, c, f)
        },
        show: function(d, c) {
            var f = this;
            this._setDialogResult("none");
            c = c || this.showAnimationDuration;
            switch (this.animationType) {
            case "none":
                this.element.style.display = "block";
                break;
            case "fade":
                f._animationInProgress = !0;
                this.host.fadeIn({
                    duration: c,
                    complete: function() {
                        f._animationInProgress = !1;
                        d instanceof Function && d()
                    }
                });
                break;
            case "slide":
                f._animationInProgress = !0;
                this.host.slideDown({
                    duration: c,
                    callback: function() {
                        f._animationInProgress = !1;
                        d instanceof Function && d()
                    }
                });
                break;
            case "combined":
                this.element.style.display = "block";
                var g = f.host.width()
                  , h = f.host.height();
                this.element.style.minWidth = "0px";
                this.element.style.minHeight = "0px";
                this.element.style.opacity = 0;
                this.element.style.width = "0px";
                this.element.style.height = "0px";
                f._animationInProgress = !0;
                this.host.animate({
                    opacity: 1,
                    width: g + "px",
                    height: h + "px"
                }, {
                    duration: c,
                    complete: function() {
                        f._animationInProgress = !1;
                        f._performLayout();
                        d instanceof Function && d()
                    }
                })
            }
            this.isModal && (e(this._modalBackground).show(),
            this._fixWindowZIndex("modal-show"));
            var k = this;
            this._visible || (150 < c && "none" != this.animationType ? setTimeout(function() {
                !k._contentInitialized && k.initContent && (k.initContent(),
                k._contentInitialized = !0);
                k._raiseEvent(7);
                k._raiseEvent(9)
            }, c - 150) : (!k._contentInitialized && k.initContent && (k.initContent(),
            k._contentInitialized = !0),
            this._raiseEvent(7),
            k._raiseEvent(9)));
            this._visible = !0;
            "combined" !== f.animationType && this._performLayout();
            this.autoFocus && (k._isTouchDevice || k._content[0].focus(),
            setTimeout(function() {
                k._isTouchDevice || k._content[0].focus()
            }, 100))
        },
        _getTabbables: function() {
            var d = e.jqx.browser.msie && 9 > e.jqx.browser.version ? this._content.find("*") : this._content[0].querySelectorAll("*");
            var c = [];
            e.each(d, function() {
                var f = this.getAttribute("tabindex")
                  , g = null === f;
                if (f = g || 0 <= f)
                    g = !g,
                    f = this.nodeName.toLowerCase(),
                    "area" === f ? (g = this.parentNode,
                    f = g.name,
                    this.href && f && "map" === g.nodeName.toLowerCase() ? (g = e("img[usemap=#" + f + "]")[0],
                    f = !!g && b(g)) : f = !1) : f = (/input|select|textarea|button|object/.test(f) ? !this.disabled : "a" == f ? this.href || g : g) && b(this);
                f && (c[c.length] = this)
            });
            return c
        },
        move: function(d, c, f, g) {
            var h = 0
              , k = 0;
            d = parseInt(d, 10);
            c = parseInt(c, 10);
            e.jqx.browser.msie && (e(window).width() > e(document).width() && !this.dragArea && (k = this._SCROLL_WIDTH),
            e(window).height() < e(document).height() && document.documentElement.clientWidth > document.documentElement.scrollWidth && !this.dragArea && (h = this._SCROLL_WIDTH));
            h = this._validateCoordinates(d, c, k, h);
            if (parseInt(this.host.css("left"), 10) !== h.x || parseInt(this.host.css("top"), 10) !== h.y) {
                if (f) {
                    f = e.jqx.position(f);
                    var l = f.left;
                    var m = f.top
                }
                void 0 === l && (l = d);
                void 0 === m && (m = c);
                !1 !== g && this._raiseEvent(2, h.x, h.y, l, m)
            }
            this.element.style.left = h.x + "px";
            this.element.style.top = h.y + "px";
            this._moved = !0
        },
        _toPx: function(d) {
            return "number" === typeof d ? d + "px" : d
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    var b = function(d) {
        return {
            resizeConfig: function() {
                this.resizeTarget = null;
                this.resizeIndicatorSize = 5;
                this.resizeTargetChildren = null;
                this.resizeArea = this.isResizing = !1;
                this.minWidth = 1;
                this.maxWidth = 100;
                this.minHeight = 1;
                this.maxHeight = 100;
                this.resizeParent = null;
                this.enableResize = !0;
                this._resizeEvents = ["resizing", "resized", "resize"];
                this._resizeMouseDown = !1;
                this._resizeCurrentMode = null;
                this._mouseResizePosition = {};
                this._resizeMethods = null;
                this._SCROLL_WIDTH = 21
            },
            _resizeExceptions: {
                invalidTarget: "Invalid target!",
                invalidMinHeight: "Invalid minimal height!",
                invalidMaxHeight: "Invalid maximum height!",
                invalidMinWidth: "Invalid minimum width!",
                invalidMaxWidth: "Invalid maximum width!",
                invalidIndicatorSize: "Invalid indicator size!",
                invalidSize: "Invalid size!"
            },
            removeResize: function() {
                if (this.resizeTarget) {
                    var c = d(this.resizeTarget.children(".jqx-resize"));
                    c.detach();
                    var f = c.children();
                    this._removeResizeEventListeners();
                    for (var g = 0; g < f.length; g += 1)
                        d(f[g]).detach(),
                        this.resizeTarget.append(f[g]);
                    c.remove()
                }
                this._resizeDirection = null
            },
            initResize: function(c) {
                this.resizeConfig();
                this.resizeTarget = d(c.target);
                this.resizeIndicatorSize = c.indicatorSize || 10;
                this.maxWidth = c.maxWidth || 100;
                this.minWidth = c.minWidth || 1;
                this.maxHeight = c.maxHeight || 100;
                this.minHeight = c.minHeight || 1;
                this.resizeParent = c.resizeParent;
                this._parseResizeParentProperties();
                this._validateResizeProperties();
                this._validateResizeTargetDimensions();
                this._getChildren(this.resizeTarget.maxWidth, this.resizeTarget.minWidth, this.resizeTarget.maxHeight, this.resizeTarget.minHeight, c.alsoResize);
                this._refreshResize();
                this._cursorBackup = this.resizeTarget.css("cursor");
                "auto" === this._cursorBackup && (this._cursorBackup = "default")
            },
            _validateResizeTargetDimensions: function() {
                this.resizeTarget.maxWidth = this.maxWidth;
                this.resizeTarget.minWidth = 3 * this.resizeIndicatorSize > this.minWidth ? 3 * this.resizeIndicatorSize : this.minWidth;
                this.resizeTarget.maxHeight = this.maxHeight;
                this.resizeTarget.minHeight = 3 * this.resizeIndicatorSize > this.minHeight ? 3 * this.resizeIndicatorSize : this.minHeight
            },
            _parseResizeParentProperties: function() {
                this.resizeParent && (this.resizeParent.left = parseInt(this.resizeParent.left, 10),
                this.resizeParent.top = parseInt(this.resizeParent.top, 10),
                this.resizeParent.width = parseInt(this.resizeParent.width, 10),
                this.resizeParent.height = parseInt(this.resizeParent.height, 10))
            },
            _getChildren: function(c, f, g, h, k) {
                this.resizeTargetChildren = d(k);
                this.resizeTargetChildren = this.resizeTargetChildren.toArray();
                for (c = this.resizeTargetChildren.length; c; )
                    --c,
                    this.resizeTargetChildren[c] = d(this.resizeTargetChildren[c])
            },
            _refreshResize: function() {
                this._renderResize();
                this._performResizeLayout();
                this._removeResizeEventListeners();
                this._addResizeEventHandlers()
            },
            _renderResize: function() {
                if (!(void 0 !== this._resizeWrapper && 0 < d(this._resizeWrapper).parents().length)) {
                    var c = document.createElement("div");
                    c.className = "jqx-resize jqx-rc-all";
                    c.style.zIndex = 8E3;
                    c.appendChild(this._header[0]);
                    c.appendChild(this._content[0]);
                    this.resizeTarget[0].appendChild(c);
                    this._resizeWrapper = c
                }
            },
            _performResizeLayout: function() {
                this._resizeWrapper.style.height = this.resizeTarget.height() + "px";
                this._resizeWrapper.style.width = this.resizeTarget.width() + "px"
            },
            _removeResizeEventListeners: function() {
                var c = this.resizeTarget.attr("id");
                this.removeHandler(this._resizeWrapper, "mousemove.resize" + c);
                this.removeHandler(this._resizeWrapper, "mousedown.resize" + c);
                this.removeHandler(d(document), "mousemove.resize" + c);
                this.removeHandler(d(document), "mouseup.resize" + c)
            },
            _addResizeEventHandlers: function() {
                var c = this.resizeTarget.attr("id")
                  , f = this;
                f._isTouchDevice ? (this.addHandler(this._resizeWrapper, "touchmove.resize." + c, function(g) {
                    f._resizeCursorChangeHandler(f, g)
                }),
                this.addHandler(this._resizeWrapper, "touchstart.resize." + c, function(g) {
                    f._resizeCursorChangeHandler(f, g);
                    f._resizeMouseDownHandler(f, g)
                }),
                this.addHandler(d(document), "touchmove.resize." + c, function(g) {
                    return f._resizeHandler(f, g)
                }),
                this.addHandler(d(document), "touchend.resize." + c, function(g) {
                    f._stopResizing(f, g)
                })) : (this.addHandler(this._resizeWrapper, "mousemove.resize." + c, function(g) {
                    f._resizeCursorChangeHandler(f, g)
                }),
                this.addHandler(this._resizeWrapper, "mousedown.resize." + c, function(g) {
                    f._resizeMouseDownHandler(f, g)
                }),
                this.addHandler(d(document), "mousemove.resize." + c, function(g) {
                    return f._resizeHandler(f, g)
                }),
                this.addHandler(d(document), "mouseup.resize." + c, function(g) {
                    f._stopResizing(f, g)
                }));
                try {
                    if ("" !== document.referrer || window.frameElement)
                        c = function(g) {
                            f._stopResizing(f, g)
                        }
                        ,
                        window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", c, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", c)
                } catch (g) {}
            },
            _stopResizing: function(c) {
                c.enableResize && (c.isResizing && c._raiseResizeEvent(1),
                c._resizeMouseDown = !1,
                c.isResizing = !1,
                c._resizeDirection = null,
                c.resizeTarget && c.resizeTarget.removeClass("jqx-disableselect"));
                "undefined" == c._cursorBackup && (c._cursorBackup = "default");
                c._resizeWrapper && (c._resizeWrapper.style.cursor = c._cursorBackup)
            },
            _resizeHandler: function(c, f) {
                if (c.enableResize && !c.collapsed) {
                    if (c.isResizing && c._resizeDirection) {
                        0 === f.which && d.jqx.browser.msie && 9 > d.jqx.browser.version && c._stopResizing(f);
                        if (c._isTouchDevice)
                            return f = d.jqx.position(f),
                            c._performResize(f.left, f.top),
                            !1;
                        c._performResize(f.pageX, f.pageY);
                        return !1
                    }
                    return c._isTouchDevice ? (f = d.jqx.position(f),
                    c._resizeCaptureCursor(f.left, f.top)) : c._resizeCaptureCursor(f.pageX, f.pageY)
                }
            },
            _resizeCaptureCursor: function(c, f) {
                if (this._resizeMouseDown && !this.isResizing && this._resizeDirection && (this._isTouchDevice || c + 3 < this._mouseResizePosition.x || c - 3 > this._mouseResizePosition.x || f + 3 < this._mouseResizePosition.y || f - 3 > this._mouseResizePosition.y))
                    return this._changeCursor(c - parseInt(this.resizeTarget.css("left"), 10), f - parseInt(this.resizeTarget.css("top"), 10)),
                    this._mouseResizePosition = {
                        x: c,
                        y: f
                    },
                    this._prepareResizeMethods(this._resizeDirection),
                    this._resizeBackupData(),
                    this.isResizing = !0,
                    this.resizeTarget.addClass("jqx-disableselect"),
                    !1
            },
            _resizeBackupData: function() {
                this.resizeTarget.lastWidth = this.resizeTarget.width();
                this.resizeTarget.lastHeight = this.resizeTarget.height();
                this.resizeTarget.x = parseInt(this.resizeTarget.css("left"), 10);
                this.resizeTarget.y = parseInt(this.resizeTarget.css("top"), 10);
                this._resizeBackupChildrenSize()
            },
            _resizeBackupChildrenSize: function() {
                for (var c = this.resizeTargetChildren.length, f; c; )
                    --c,
                    f = this.resizeTargetChildren[c],
                    this.resizeTargetChildren[c].lastWidth = f.width(),
                    this.resizeTargetChildren[c].lastHeight = f.height()
            },
            _performResize: function(c, f) {
                c -= this._mouseResizePosition.x;
                f -= this._mouseResizePosition.y;
                this._resizeDirection && this._resize(this.resizeTarget, c, f)
            },
            _resizeCursorChangeHandler: function(c, f) {
                !c.enableResize || c.collapsed || c.isResizing || (c._isTouchDevice ? (f = d.jqx.position(f),
                c._changeCursor(f.left - parseInt(c.resizeTarget.css("left"), 10), f.top - parseInt(c.resizeTarget.css("top"), 10))) : c._changeCursor(f.pageX - parseInt(c.resizeTarget.css("left"), 10), f.pageY - parseInt(c.resizeTarget.css("top"), 10)))
            },
            _resizeMouseDownHandler: function(c, f) {
                if (c.enableResize && null !== c._resizeDirection) {
                    c._resizeMouseDown = !0;
                    if (c._isTouchDevice) {
                        var g = d.jqx.position(f);
                        c._mouseResizePosition.x = g.left;
                        c._mouseResizePosition.y = g.top
                    } else
                        c._mouseResizePosition.x = f.pageX,
                        c._mouseResizePosition.y = f.pageY;
                    f.preventDefault()
                }
            },
            _validateResizeProperties: function() {
                try {
                    if (!this.resizeTarget || 1 !== this.resizeTarget.length)
                        throw Error(this._resizeExceptions.invalidTarget);
                    if (0 > this.minHeight || isNaN(parseInt(this.minHeight, 10)))
                        throw Error(this._resizeExceptions.invalidMinHeight);
                    if (0 >= this.maxHeight || isNaN(parseInt(this.maxHeight, 10)))
                        throw Error(this._resizeExceptions.invalidMaxHeight);
                    if (0 > this.minWidth || isNaN(parseInt(this.minWidth, 10)))
                        throw Error(this._resizeExceptions.invalidMinWidth);
                    if (0 > this.maxWidth || isNaN(parseInt(this.maxWidth, 10)))
                        throw Error(this._resizeExceptions.invalidMaxWidth);
                    if (0 > this.resizeIndicatorSize || isNaN(parseInt(this.resizeIndicatorSize, 10)))
                        throw Error(this._resizeExceptions.invalidIndicatorSize);
                    if (this.minHeight > this.maxHeight || this.minWidth > this.maxWidth)
                        throw Error(this._resizeExceptions.invalidSize);
                } catch (c) {
                    throw Error(c);
                }
            },
            _changeCursor: function(c, f) {
                this.isResizing || this._resizeMouseDown || (this.resizeArea = !0,
                c <= this.resizeIndicatorSize && 0 <= c && f <= this.resizeIndicatorSize && 0 < f ? (this._resizeWrapper.style.cursor = "nw-resize",
                this._resizeDirection = "topleft") : f <= this.resizeIndicatorSize && 0 < f && c >= this.resizeTarget.width() - this.resizeIndicatorSize ? (this._resizeWrapper.style.cursor = "ne-resize",
                this._resizeDirection = "topright") : f >= this.resizeTarget.height() - this.resizeIndicatorSize && f < this.resizeTarget.height() && c <= this.resizeIndicatorSize && 0 <= c ? (this._resizeWrapper.style.cursor = "sw-resize",
                this._resizeDirection = "bottomleft") : f >= this.resizeTarget.height() - this.resizeIndicatorSize && f < this.resizeTarget.height() && c >= this.resizeTarget.width() - this.resizeIndicatorSize && c < this.resizeTarget.width() ? (this._resizeWrapper.style.cursor = "se-resize",
                this._resizeDirection = "bottomright") : c <= this.resizeIndicatorSize && 0 <= c ? (this._resizeWrapper.style.cursor = "e-resize",
                this._resizeDirection = "left") : f <= this.resizeIndicatorSize && 0 < f ? (this._resizeWrapper.style.cursor = "n-resize",
                this._resizeDirection = "top") : f >= this.resizeTarget.height() - this.resizeIndicatorSize && f < this.resizeTarget.height() ? (this._resizeWrapper.style.cursor = "n-resize",
                this._resizeDirection = "bottom") : c >= this.resizeTarget.width() - this.resizeIndicatorSize && c < this.resizeTarget.width() ? (this._resizeWrapper.style.cursor = "e-resize",
                this._resizeDirection = "right") : (this._resizeWrapper.style.cursor = this._cursorBackup,
                this._resizeDirection = null,
                this.resizeArea = !1))
            },
            _prepareResizeMethods: function(c) {
                this._resizeMethods = [];
                0 <= c.indexOf("left") && this._resizeMethods.push(this._resizeLeft);
                0 <= c.indexOf("top") && this._resizeMethods.push(this._resizeTop);
                0 <= c.indexOf("right") && this._resizeMethods.push(this._resizeRight);
                0 <= c.indexOf("bottom") && this._resizeMethods.push(this._resizeBottom)
            },
            _validateResize: function(c, f, g, h, k) {
                return "horizontal" === g || "both" === g ? this._validateWidth(c, h, k) : "vertical" === g || "both" === g ? this._validateHeight(f, h, k) : {
                    result: !1,
                    fix: 0
                }
            },
            _getParent: function() {
                return null !== this.resizeParent && "undefined" !== this.resizeParent && this.resizeParent.height && this.resizeParent.width && this.resizeParent.top && this.resizeParent.left ? this.resizeParent : {
                    left: 0,
                    top: 0,
                    width: d(document).width(),
                    height: d(document).height()
                }
            },
            _validateHeight: function(c, f, g) {
                var h = 0
                  , k = this._getParent();
                d(window).width() > d(document).width() && d.jqx.browser.msie && k.height === d(document).height() && (h = this._SCROLL_WIDTH);
                return "bottom" === g && c + f.position().top + h + 2 > k.height + k.top ? {
                    fix: k.height - f.position().top - h - 2 + k.top,
                    result: !1
                } : "top" === g && f.lastHeight - c + f.y < k.top ? {
                    fix: c + (f.lastHeight - c + f.y) - k.top,
                    result: !1
                } : c < f.minHeight ? {
                    fix: f.minHeight,
                    result: !1
                } : c > f.maxHeight ? {
                    fix: f.maxHeight,
                    result: !1
                } : {
                    result: !0,
                    fix: c
                }
            },
            _validateWidth: function(c, f, g) {
                var h = 0
                  , k = this._getParent();
                d(window).height() < d(document).height() && d.jqx.browser.msie && document.documentElement.clientWidth >= document.documentElement.scrollWidth && k.width === d(document).width() && (h = this._SCROLL_WIDTH);
                return "right" === g && c + f.position().left + h + 2 > k.width + k.left ? {
                    fix: k.width - f.position().left - h - 2 + k.left,
                    result: !1
                } : "left" === g && f.lastWidth - c + f.x < k.left ? {
                    fix: c + (f.lastWidth - c + f.x) - k.left,
                    result: !1
                } : c < f.minWidth ? {
                    fix: f.minWidth,
                    result: !1
                } : c > f.maxWidth ? {
                    fix: f.maxWidth,
                    result: !1
                } : {
                    result: !0,
                    fix: c
                }
            },
            _resize: function(c, f, g) {
                for (var h = this._resizeMethods.length, k = 0; k < h; k++)
                    if (this._resizeMethods[k]instanceof Function)
                        this._resizeMethods[k]({
                            element: c,
                            x: f,
                            y: g,
                            self: this
                        });
                this._performResizeLayout()
            },
            resize: function(c, f) {
                if (this.resizable) {
                    c -= this.host.width();
                    f -= this.host.height();
                    var g = "right";
                    0 !== f && (g = "bottom");
                    this._resizeDirection = g;
                    this._prepareResizeMethods(this._resizeDirection);
                    this._resizeBackupData();
                    this.isResizing = !0;
                    this._resize(this.resizeTarget, c, f);
                    this.isResizing = !1;
                    0 < c && 0 < f && (this._resizeDirection = "right",
                    this._prepareResizeMethods(this._resizeDirection),
                    this._resizeBackupData(),
                    this.isResizing = !0,
                    this._resize(this.resizeTarget, c, f),
                    this.isResizing = !1)
                }
            },
            _setResizeChildrenSize: function(c, f) {
                for (var g = this.resizeTargetChildren.length; g; )
                    if (g--,
                    "width" === f) {
                        var h = this.resizeTargetChildren[g].lastWidth - (this.resizeTarget.lastWidth - c);
                        h < this.resizeTarget.maxWidth && 0 < h && this.resizeTargetChildren[g].width(h)
                    } else
                        h = this.resizeTargetChildren[g].lastHeight - (this.resizeTarget.lastHeight - c),
                        h < this.resizeTarget.maxHeight && 0 < h && this.resizeTargetChildren[g].height(h)
            },
            _resizeRight: function(c) {
                var f = c.element.lastWidth + c.x
                  , g = c.self._validateResize(f, 0, "horizontal", c.element, "right");
                g.result || (f = g.fix);
                c.element.width() !== f && (c.self._setResizeChildrenSize(f, "width"),
                c.element.width(f),
                0 <= c.self.width.toString().indexOf("%") && (g = d(document.body).width() / 100,
                c.element[0].style.width = 1 / g * f + "%",
                c.self._setChildrenLayout()),
                c.self._raiseResizeEvent(0));
                return f
            },
            _resizeLeft: function(c) {
                var f = c.element.lastWidth - c.x
                  , g = c.self._validateResize(f, 0, "horizontal", c.element, "left")
                  , h = c.element.x + c.x;
                if (g.result)
                    return c.element.width() !== f && (c.self._setResizeChildrenSize(f, "width"),
                    c.element.width(f),
                    0 <= c.self.width.toString().indexOf("%") && (g = d(document.body).width() / 100,
                    c.element[0].style.width = 1 / g * f + "%",
                    c.self._setChildrenLayout()),
                    c.element[0].style.left = c.self._toPx(h),
                    c.self._raiseResizeEvent(0)),
                    f
            },
            _resizeBottom: function(c) {
                var f = c.element.lastHeight + c.y
                  , g = c.self._validateResize(0, f, "vertical", c.element, "bottom");
                g.result || (f = g.fix);
                c.element.height() !== f && (c.self._setResizeChildrenSize(f, "height"),
                c.element.height(f),
                0 <= c.self.height.toString().indexOf("%") && (g = d(document.body).height() / 100,
                c.element[0].style.height = 1 / g * f + "%",
                c.self._setChildrenLayout()),
                c.self._raiseResizeEvent(0));
                return f
            },
            _resizeTop: function(c) {
                var f = c.element.lastHeight - c.y
                  , g = c.self._validateResize(0, f, "vertical", c.element, "top")
                  , h = c.element.y + c.y;
                if (g.result)
                    return c.element.height() !== f && (c.self._setResizeChildrenSize(f, "height"),
                    c.element.height(f),
                    0 <= c.self.height.toString().indexOf("%") && (g = d(document.body).height() / 100,
                    c.element[0].style.height = 1 / g * f + "%",
                    c.self._setChildrenLayout()),
                    c.element[0].style.top = c.self._toPx(h),
                    c.self._raiseResizeEvent(0)),
                    f
            },
            _raiseResizeEvent: function(c) {
                var f = this._resizeEvents[c]
                  , g = d.Event(f)
                  , h = {};
                h.width = parseInt(this.resizeTarget[0].style.width, 10);
                h.height = parseInt(this.resizeTarget[0].style.height, 10);
                g.args = h;
                0 === c && (f = this._resizeEvents[2],
                c = d.Event(f),
                c.args = h,
                this.resizeTarget.trigger(c));
                return this.resizeTarget.trigger(g)
            }
        }
    }(jqxBaseFramework);
    e.extend(e.jqx._jqxWindow.prototype, b)
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxInput", "", {});
    e.extend(e.jqx._jqxInput.prototype, {
        defineInstance: function() {
            var b = {
                disabled: !1,
                filter: this._filter,
                sort: this._sort,
                highlight: this._highlight,
                dropDownWidth: null,
                renderer: this._renderer,
                opened: !1,
                $popup: document.createElement("ul"),
                source: [],
                roundedCorners: !0,
                searchMode: "default",
                placeHolder: "",
                width: null,
                height: null,
                value: "",
                rtl: !1,
                hint: !0,
                displayMember: "",
                valueMember: "",
                events: ["select", "open", "close", "change"],
                popupZIndex: 1E3,
                items: 8,
                minLength: 1,
                maxLength: null
            };
            if (this === e.jqx._jqxInput.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            if ("none" === this.host.css("display") || !1 === document.body.contains(this.element))
                this._initiallyHidden = !0;
            this._popupHelper = e(this.$popup);
            this.render()
        },
        render: function() {
            var b = this;
            this.input = this.element;
            if (b.isMaterialized() && this.input instanceof HTMLInputElement) {
                var d = this.host.children();
                e.each(d, function(m) {
                    var n = "jqx-input-group-addon";
                    e(this).removeClass(b.toThemeProperty("jqx-rc-all"));
                    0 === m && (n += " jqx-rc-l");
                    m === d.length - 1 && (n += " jqx-rc-r");
                    this !== b.element && (n += " jqx-fill-state-normal");
                    this.className += " " + b.toThemeProperty(n)
                });
                var c = e("<div></div>");
                c.addClass(b.toThemeProperty("jqx-input-group"));
                this.host.after(c);
                var f = this.element
                  , g = this.host.data();
                c.append(f);
                var h = e("<label></label");
                this.hint && (h[0].innerHTML = this.placeHolder);
                h.addClass(b.toThemeProperty("jqx-input-label"));
                c.append(h);
                var k = e("<span></span>");
                c.append(k);
                k.addClass(b.toThemeProperty("jqx-input-bar"));
                c[0].id = this.element.id;
                this.element.removeAttribute("id");
                c[0].style.cssText = this.element.style.cssText;
                b.input = b.element;
                this.input instanceof HTMLInputElement || (this.input = this.host.find("input"),
                0 < this.input.length && (this.input = this.input[0]),
                e(this.input).addClass(this.toThemeProperty("jqx-input-widget")));
                this.label = h;
                this.bar = k;
                this.element.style.cssText = "";
                this.host = c;
                this.element = c[0];
                this.host.data(g);
                b = this;
                b.template && (b.bar.addClass(b.toThemeProperty("jqx-" + b.template)),
                b.label.addClass(b.toThemeProperty("jqx-" + b.template)));
                0 < d.length && (b._hasAddons = !0)
            } else if ("textarea" === this.element.nodeName.toLowerCase())
                this.element.style.overflow = "auto";
            else if ("div" === this.element.nodeName.toLowerCase()) {
                this.baseHost = this.element;
                f = b.element.getElementsByTagName("input");
                var l = !1;
                e.each(f, function() {
                    var m = this.type;
                    if (null == m || "text" === m || "textarea" === m)
                        return f = e(this),
                        l = !0,
                        !1
                });
                if (!l)
                    throw Error("jqxInput: Missing Text Input in the Input Group");
                0 < f.length && (this.baseHost = e(this.element),
                b.baseElement = b.element,
                g = this.host.data(),
                this.host = f,
                this.element = f[0],
                b.input = f[0],
                this.host.data(g),
                b.baseElement.className += " " + b.toThemeProperty("jqx-widget jqx-rc-all jqx-input-group"),
                d = this.baseHost.children(),
                e.each(d, function(m) {
                    var n = "jqx-input-group-addon";
                    e(this).removeClass(b.toThemeProperty("jqx-rc-all"));
                    0 === m && (n += " jqx-rc-l");
                    m === d.length - 1 && (n += " jqx-rc-r");
                    this !== b.element && (n += " jqx-fill-state-normal");
                    this.className += " " + b.toThemeProperty(n)
                }))
            }
            this.addHandlers();
            this.rtl && (b.element.className += " " + b.toThemeProperty("jqx-rtl"));
            b.element.setAttribute("role", "textbox");
            e.jqx.aria(this, "aria-autocomplete", "both");
            e.jqx.aria(this, "aria-disabled", this.disabled);
            e.jqx.aria(this, "aria-readonly", !1);
            e.jqx.aria(this, "aria-multiline", !1);
            this.source && this.source.length && e.jqx.aria(this, "aria-haspopup", !0);
            "" !== this.value && (this.input.value = this.value);
            this._oldsource = this.source;
            this._updateSource()
        },
        _updateSource: function() {
            var b = this
              , d = function(g) {
                if (void 0 === g)
                    return null;
                if ("string" === typeof g || g instanceof String)
                    return {
                        label: g,
                        value: g
                    };
                if ("string" !== typeof g && !1 === g instanceof String) {
                    var h = ""
                      , k = "";
                    "" !== b.displayMember && void 0 !== b.displayMember && g[b.displayMember] && (h = g[b.displayMember]);
                    "" !== b.valueMember && void 0 !== b.valueMember && (k = g[b.valueMember]);
                    "" === h && (h = g.label);
                    "" === k && (k = g.value);
                    return {
                        label: h,
                        value: k
                    }
                }
                return g
            }
              , c = function(g) {
                for (var h = [], k = 0; k < g.length; k++)
                    h[k] = d(g[k]);
                return h
            };
            if (this.source && this.source._source) {
                this.adapter = this.source;
                if (null != this.adapter._source.localdata)
                    this.adapter.unbindBindingUpdate(this.element.id),
                    this.adapter.bindBindingUpdate(this.element.id, function() {
                        b.source = c(b.adapter.records)
                    });
                else {
                    var f = {};
                    this.adapter._options.data ? e.extend(b.adapter._options.data, f) : (this.source._source.data && e.extend(f, this.source._source.data),
                    this.adapter._options.data = f);
                    this.adapter.unbindDownloadComplete(this.element.id);
                    this.adapter.bindDownloadComplete(this.element.id, function() {
                        b.source = c(b.adapter.records)
                    })
                }
                this.source.dataBind()
            } else
                e.isFunction(this.source) || (this.source = c(this.source))
        },
        _refreshClasses: function(b) {
            b = b ? "addClass" : "removeClass";
            var d = "jqx-widget-content jqx-input-widget jqx-input jqx-widget"
              , c = "jqx-popup jqx-input-popup jqx-menu jqx-menu-vertical jqx-menu-dropdown jqx-widget jqx-widget-content";
            e.jqx.browser.msie && (c += " jqx-noshadow");
            this.roundedCorners && (d += " jqx-rc-all",
            c += " jqx-rc-all");
            this.disabled ? d += " jqx-fill-state-disabled" : this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this.host[b](this.toThemeProperty(d));
            this._popupHelper[b](this.toThemeProperty(c))
        },
        selectAll: function() {
            var b = this.host;
            !1 === b[0]instanceof HTMLInputElement && (b = e(this.input));
            setTimeout(function() {
                if ("selectionStart"in b[0])
                    b[0].focus(),
                    b[0].setSelectionRange(0, b[0].value.length);
                else {
                    var d = b[0].createTextRange();
                    d.collapse(!0);
                    d.moveEnd("character", b[0].value.length);
                    d.moveStart("character", 0);
                    d.select()
                }
            }, 10)
        },
        selectLast: function() {
            var b = this.host;
            !1 === b[0]instanceof HTMLInputElement && (b = e(this.input));
            this.selectStart(b[0].value.length)
        },
        selectFirst: function() {
            this.selectStart(0)
        },
        selectStart: function(b) {
            var d = this.host;
            !1 === d[0]instanceof HTMLInputElement && (d = e(this.input));
            setTimeout(function() {
                if ("selectionStart"in d[0])
                    d[0].focus(),
                    d[0].setSelectionRange(b, b);
                else {
                    var c = d[0].createTextRange();
                    c.collapse(!0);
                    c.moveEnd("character", b);
                    c.moveStart("character", b);
                    c.select()
                }
            }, 10)
        },
        focus: function() {
            try {
                var b = this;
                b.element.focus();
                setTimeout(function() {
                    b.element.focus()
                }, 25)
            } catch (d) {}
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this.refresh()
        },
        refresh: function() {
            this._refreshClasses(!1);
            this._refreshClasses(!0);
            if (this.baseHost) {
                null != this.width && -1 != this.width.toString().indexOf("px") ? this.baseElement.style.width = parseInt(this.width) + "px" : void 0 == this.width || isNaN(this.width) || (this.baseElement.style.width = this.width + "px");
                null != this.height && -1 != this.height.toString().indexOf("px") ? this.baseElement.style.height = parseInt(this.height) + "px" : void 0 == this.height || isNaN(this.height) || (this.baseElement.style.height = this.height + "px");
                var b = this
                  , d = e.jqx.browser.msie && 9 > e.jqx.browser.version
                  , c = 0;
                e.each(this.baseHost.children(), function() {
                    this.style.height = "100%";
                    this !== b.element && (c += e(this).outerWidth())
                });
                b._addonsWidth = c;
                if (d) {
                    var f = Math.max(0, b.baseElement.offsetHeight - 2);
                    b.element.style.width = Math.max(0, b.baseElement.offsetWidth - c - 1) + "px";
                    b.element.style.minHeight = f + "px";
                    b.element.style.lineHeight = f + "px"
                } else
                    b.element.style.width = "calc(100% - " + c + "px)";
                e.jqx.utilities.resize(b.baseHost, function() {
                    if (d && "string" === typeof b.width && -1 !== b.width.indexOf("%") && !b._initiallyHidden)
                        b.element.style.width = b.baseElement.offsetWidth - b._addonsWidth - 1 + "px";
                    else if (b._initiallyHidden) {
                        b._addonsWidth = b._getAddonsWidth();
                        if (d) {
                            b.element.style.width = b.baseElement.offsetWidth - b._addonsWidth - 1 + "px";
                            var g = b.baseElement.offsetHeight - 2;
                            b.element.style.minHeight = g + "px";
                            b.element.style.lineHeight = g + "px"
                        } else
                            b.element.style.width = "calc(100% - " + b._addonsWidth + "px)";
                        b._initiallyHidden = !1
                    }
                })
            } else
                null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) + "px" : void 0 == this.width || isNaN(this.width) ? this.element.style.width = this.width : this.element.style.width = this.width + "px",
                null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) + "px" : void 0 == this.height || isNaN(this.height) ? this.element.style.height = this.height : this.element.style.height = this.height + "px",
                this._hasAddons && (this._addonsWidth = 35,
                this.input.style.width = "calc(100% - " + this._addonsWidth + "px)");
            this.disabled ? this.element.setAttribute("disabled", !0) : this.element.removeAttribute("disabled");
            this.maxLength && (this.element.setAttribute("maxlength", this.maxLength),
            this.input && this.input.setAttribute("maxlength", this.maxLength));
            this.element.getAttribute("placeholder") || this._refreshPlaceHolder()
        },
        _refreshPlaceHolder: function() {
            this.isMaterialized() && this.hint || ("placeholder"in this.input && !(e.jqx.browser.msie && 9 > e.jqx.browser.version) ? this.input.setAttribute("placeHolder", this.placeHolder) : "" === this.input.value && (this.input.value = this.placeHolder));
            this.hint && ("" !== this.input.value ? this.element.setAttribute("hint", !0) : this.element.removeAttribute("hint"),
            this.label && (this.label.innerHTML = this.placeHolder))
        },
        destroy: function() {
            this.removeHandlers();
            this.baseHost ? this.baseHost.remove() : this.host.remove();
            this.$popup && this._popupHelper.remove()
        },
        propertiesChangedHandler: function(b, d, c) {
            c.width && c.height && 2 === Object.keys(c).length && b.refresh()
        },
        propertyChangedHandler: function(b, d, c, f) {
            if ("width" === d && f !== c)
                b.baseHost ? (b.baseElement.style.width = b._toPx(f),
                e.jqx.browser.msie && 9 > e.jqx.browser.version && (b.element.style.width = b.baseElement.offsetWidth - b._addonsWidth - 1 + "px")) : b.element.style.width = b._toPx(f);
            else if ("placeHolder" === d)
                "placeholder"in b.element && !(e.jqx.browser.msie && 9 > e.jqx.browser.version) || b.input.value !== c || (b.input.value = ""),
                b._refreshPlaceHolder();
            else if (!(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 === Object.keys(b.batchUpdate).length))
                if ("theme" === d && e.jqx.utilities.setTheme(c, f, b.host),
                "opened" === d)
                    f ? b.open() : b.close();
                else {
                    "source" === d && (b._oldsource = f,
                    b._updateSource());
                    if ("displayMember" === d || "valueMember" === d)
                        b.source = b._oldsource,
                        b._updateSource();
                    "disabled" === d && e.jqx.aria(b, "aria-disabled", b.disabled);
                    "value" === d && (b.input.value = f,
                    b._refreshPlaceHolder());
                    b.refresh()
                }
        },
        select: function(b, d, c) {
            d = this._find("jqx-fill-state-pressed", this._popupHelper);
            b = d.getAttribute("data-value");
            d = d.getAttribute("data-name");
            this.input.value = this.renderer(d, this.input.value);
            this.selectedItem = {
                label: d,
                value: b
            };
            this.element.setAttribute("data-value", b);
            this.element.setAttribute("data-label", d);
            this._raiseEvent("0", {
                item: {
                    label: d,
                    value: b
                },
                label: d,
                value: b
            });
            this._raiseEvent("3", {
                type: c,
                item: {
                    label: d,
                    value: b
                },
                label: d,
                value: b
            });
            this.value = d;
            return this.close()
        },
        val: function(b) {
            if (0 === arguments.length || null != b && "object" === typeof b && !b.label && !b.value)
                return "" !== this.displayMember && "" !== this.valueMember && this.selectedItem ? "" === this.input.value ? "" : this.selectedItem : this.input.value;
            if (b && b.label)
                return this.selectedItem = {
                    label: b.label,
                    value: b.value
                },
                this.element.setAttribute("data-value", b.value),
                this.element.setAttribute("data-label", b.label),
                this.value = b,
                this.input.value = b.label,
                this.input && (this.input.value = b.label),
                this.input.value;
            this.value = b;
            this.input.value = b;
            this.element.setAttribute("data-value", b);
            this.element.setAttribute("data-label", b);
            b && b.label ? this._raiseEvent("3", {
                type: null,
                item: {
                    label: b.label,
                    value: b.value
                },
                label: b.label,
                value: b.value
            }) : this._raiseEvent("3", {
                type: null,
                item: {
                    label: b,
                    value: b
                },
                label: b,
                value: b
            });
            this._refreshPlaceHolder();
            return this.input.value
        },
        _raiseEvent: function(b, d) {
            void 0 === d && (d = {
                owner: null
            });
            b = this.events[b];
            d.owner = this;
            b = new e.Event(b);
            b.owner = this;
            b.args = d;
            b.preventDefault && b.preventDefault();
            return this.host.trigger(b)
        },
        _renderer: function(b) {
            return b
        },
        open: function() {
            if (!e.jqx.isHidden(this.host)) {
                var b = e.extend({}, this.host.coord(!0), {
                    height: this.element.offsetHeight
                });
                if (this.$popup.parentNode !== document.body) {
                    var d = this.element.id + "_popup";
                    this.$popup.id = d;
                    e.jqx.aria(this, "aria-owns", d);
                    document.body.appendChild(this.$popup)
                }
                this.$popup.style.position = "absolute";
                this.$popup.style.zIndex = this.popupZIndex;
                this.$popup.style.top = this._toPx(b.top + b.height);
                this.$popup.style.left = this._toPx(b.left);
                this.$popup.style.display = "block";
                var c = 0;
                b = this._popupHelper.children();
                e.each(b, function() {
                    c += e(this).outerHeight() + 1
                });
                this.$popup.style.height = this._toPx(c);
                this.opened = !0;
                this._raiseEvent("1", {
                    popup: this.$popup
                });
                e.jqx.aria(this, "aria-expanded", !0);
                return this
            }
        },
        close: function() {
            if (this.opened)
                return this.$popup.style.display = "none",
                this.opened = !1,
                this._raiseEvent("2", {
                    popup: this.$popup
                }),
                e.jqx.aria(this, "aria-expanded", !1),
                this._refreshPlaceHolder(),
                this
        },
        suggest: function() {
            var b;
            this.query = this.input.value;
            return !this.query || this.query.length < this.minLength ? this.opened ? this.close() : this : (b = e.isFunction(this.source) ? this.source(this.query, e.proxy(this.load, this)) : this.source) ? this.load(b) : this
        },
        load: function(b) {
            for (var d = [], c = 0; c < b.length; c++) {
                var f = b[c];
                this.filter(f) && d.push(f)
            }
            d = this.sort(d);
            return d.length ? this._render(d.slice(0, this.items)).open() : this.opened ? this.close() : this
        },
        _filter: function(b) {
            var d = this.query
              , c = b;
            null != b.label ? c = b.label : this.displayMember && (c = b[this.displayMember]);
            switch (this.searchMode) {
            case "none":
                break;
            default:
                return e.jqx.string.containsIgnoreCase(c, d);
            case "contains":
                return e.jqx.string.contains(c, d);
            case "equals":
                return e.jqx.string.equals(c, d);
            case "equalsignorecase":
                return e.jqx.string.equalsIgnoreCase(c, d);
            case "startswith":
                return e.jqx.string.startsWith(c, d);
            case "startswithignorecase":
                return e.jqx.string.startsWithIgnoreCase(c, d);
            case "endswith":
                return e.jqx.string.endsWith(c, d);
            case "endswithignorecase":
                return e.jqx.string.endsWithIgnoreCase(c, d)
            }
        },
        _sort: function(b) {
            for (var d = [], c = [], f = [], g = 0; g < b.length; g++) {
                var h = b[g]
                  , k = h;
                h.label ? k = h.label : this.displayMember && (k = h[this.displayMember]);
                0 === k.toString().toLowerCase().indexOf(this.query.toString().toLowerCase()) ? d.push(h) : 0 <= k.toString().indexOf(this.query) ? c.push(h) : 0 <= k.toString().toLowerCase().indexOf(this.query.toString().toLowerCase()) && f.push(h)
            }
            return d.concat(c, f)
        },
        _highlight: function(b) {
            var d = this.query;
            d = d.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
            return b.replace(new RegExp("(" + d + ")","ig"), function(c, f) {
                return "<b>" + f + "</b>"
            })
        },
        escape_HTML: function(b) {
            return b ? b.replace ? b.replace(/[&<>"]/g, function(d) {
                return {
                    "&": "&",
                    "<": "<",
                    ">": ">",
                    '"': '"'
                }[d] || d
            }) : b : ""
        },
        _render: function(b) {
            var d = this
              , c = d._popupHelper.children();
            if (0 < c.length)
                for (var f = 0; f < c.length; f++)
                    e(c[f]).remove();
            var g = function(h, k) {
                var l = h
                  , m = document.createElement("li")
                  , n = document.createElement("a");
                n.setAttribute("href", "#");
                m.appendChild(n);
                if (void 0 !== h.value && null !== h.value) {
                    var p = void 0 !== h.label && null !== h.label ? h.label : h.value;
                    var q = d.escape_HTML(h.value)
                } else
                    void 0 !== h.label && null !== h.label ? q = p = h.label : void 0 !== d.displayMember && "" !== d.displayMember ? (p = h[d.displayMember],
                    q = h[d.valueMember]) : q = p = h;
                m.setAttribute("data-value", q);
                m.setAttribute("data-name", p);
                h.label ? l = h.label : d.displayMember && (l = h[d.displayMember]);
                n.innerHTML = d.highlight(l);
                h = "";
                d.rtl && (h = " jqx-rtl");
                0 === k && (h += " jqx-fill-state-pressed");
                m.className = d.toThemeProperty("jqx-item jqx-menu-item jqx-rc-all" + h);
                d.$popup.appendChild(m);
                d.addHandler(m, "mouseenter", function(t) {
                    d.mouseenter(t)
                })
            };
            (function(h) {
                for (var k = 0; k < h.length; k++)
                    g(h[k], k)
            }
            )(b);
            this.$popup.style.width = this.dropDownWidth ? d._toPx(d.dropDownWidth) : d._toPx(d.element.offsetWidth - 6);
            return this
        },
        next: function() {
            var b = this._find("jqx-fill-state-pressed", this._popupHelper)
              , d = b.nextSibling;
            e(b).removeClass(this.toThemeProperty("jqx-fill-state-pressed"));
            d || (d = this.$popup.firstChild);
            d.className += " " + this.toThemeProperty("jqx-fill-state-pressed")
        },
        prev: function() {
            var b = this._find("jqx-fill-state-pressed", this._popupHelper)
              , d = b.previousSibling;
            e(b).removeClass(this.toThemeProperty("jqx-fill-state-pressed"));
            d || (d = this.$popup.lastChild);
            d.className += " " + this.toThemeProperty("jqx-fill-state-pressed")
        },
        addHandlers: function() {
            var b = this
              , d = ".jqxInput" + b.element.id;
            b.addHandler(b.host, "focus" + d, function() {
                b.onFocus()
            });
            b.addHandler(b.host, "blur" + d, function() {
                b.onBlur()
            });
            b.addHandler(b.host, "change" + d, function(c) {
                if (b.opened && !c.args)
                    c.stopPropagation(),
                    c.preventDefault(),
                    c.stopImmediatePropagation();
                else if (!c.args) {
                    c.stopPropagation();
                    c.preventDefault();
                    c.stopImmediatePropagation();
                    var f = b.val();
                    f && f.label ? (c = f.label,
                    f = f.val) : c = f;
                    b._raiseEvent("3", {
                        type: "keyboard",
                        item: {
                            label: c,
                            value: f
                        },
                        label: c,
                        value: f
                    });
                    b.value = c;
                    b._refreshPlaceHolder()
                }
            });
            b.addHandler(b.host, "keypress" + d, function(c) {
                b.keypress(c)
            });
            b.addHandler(b.host, "keyup" + d, function(c) {
                b.keyup(c)
            });
            b.addHandler(b.host, "keydown" + d, function(c) {
                b.keydown(c)
            });
            b.addHandler(b.$popup, "click" + d, function(c) {
                b.click(c)
            })
        },
        removeHandlers: function() {
            var b = ".jqxInput" + this.element.id;
            this.removeHandler(this.host, "change" + b);
            this.removeHandler(this.host, "focus" + b);
            this.removeHandler(this.host, "blur" + b);
            this.removeHandler(this.host, "keypress" + b);
            this.removeHandler(this.host, "keyup" + b);
            this.removeHandler(this.host, "keydown" + b);
            this.removeHandler(this.$popup, "click" + b)
        },
        move: function(b) {
            if (this.opened) {
                switch (b.keyCode) {
                case 9:
                case 13:
                case 27:
                    b.preventDefault();
                    break;
                case 38:
                    b.shiftKey || (b.preventDefault(),
                    this.prev());
                    break;
                case 40:
                    b.shiftKey || (b.preventDefault(),
                    this.next())
                }
                b.stopPropagation()
            }
        },
        keydown: function(b) {
            this.suppressKeyPressRepeat = -1 !== [40, 38, 9, 13, 27].indexOf(b.keyCode);
            this.move(b)
        },
        keypress: function(b) {
            this.suppressKeyPressRepeat || this.move(b)
        },
        keyup: function(b) {
            switch (b.keyCode) {
            case 40:
            case 38:
            case 16:
            case 17:
            case 18:
                break;
            case 9:
            case 13:
                if (!this.opened)
                    return;
                this.select(b, this, "keyboard");
                break;
            case 27:
                if (!this.opened)
                    return;
                this.close();
                break;
            default:
                var d = this;
                this.timer && clearTimeout(this.timer);
                this.timer = setTimeout(function() {
                    d.suggest()
                }, 300)
            }
            b.stopPropagation();
            b.preventDefault()
        },
        clear: function() {
            this.val("")
        },
        onBlur: function() {
            var b = this;
            setTimeout(function() {
                b.close()
            }, 150);
            b.host.removeClass(b.toThemeProperty("jqx-fill-state-focus"));
            b._refreshPlaceHolder()
        },
        onFocus: function() {
            this.element.className += " " + this.toThemeProperty("jqx-fill-state-focus");
            this._refreshPlaceHolder()
        },
        click: function(b) {
            b.stopPropagation();
            b.preventDefault();
            this.select(b, this, "mouse")
        },
        mouseenter: function(b) {
            e(this._find("jqx-fill-state-pressed", this._popupHelper)).removeClass(this.toThemeProperty("jqx-fill-state-pressed"));
            b.currentTarget.className += " " + this.toThemeProperty("jqx-fill-state-pressed")
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        },
        _find: function(b, d) {
            d = d.children();
            for (var c = 0; c < d.length; c++) {
                var f = d[c];
                if (-1 !== f.className.indexOf(b))
                    return f
            }
        },
        _getAddonsWidth: function() {
            for (var b = this.baseHost.children(), d = 0, c = 0; c < b.length; c++)
                b[c] !== this.element && (d += e(b[c]).outerWidth());
            return d
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxNumberInput", "", {});
    e.extend(e.jqx._jqxNumberInput.prototype, {
        defineInstance: function() {
            var b = {
                value: 0,
                decimal: 0,
                min: -99999999,
                max: 99999999,
                width: 200,
                validationMessage: "Invalid value",
                height: 25,
                textAlign: "right",
                readOnly: !1,
                promptChar: "_",
                decimalDigits: 2,
                decimalSeparator: ".",
                groupSeparator: ",",
                groupSize: 3,
                symbol: "",
                symbolPosition: "left",
                digits: 8,
                negative: !1,
                negativeSymbol: "-",
                disabled: !1,
                inputMode: "advanced",
                spinButtons: !1,
                spinButtonsWidth: 18,
                spinButtonsStep: 1,
                autoValidate: !0,
                spinMode: "advanced",
                enableMouseWheel: !0,
                touchMode: "auto",
                allowNull: !0,
                placeHolder: "",
                changeType: null,
                template: "",
                rtl: !1,
                hint: !0,
                events: "valueChanged textchanged mousedown mouseup keydown keyup keypress change".split(" "),
                aria: {
                    "aria-valuenow": {
                        name: "decimal",
                        type: "number"
                    },
                    "aria-valuemin": {
                        name: "min",
                        type: "number"
                    },
                    "aria-valuemax": {
                        name: "max",
                        type: "number"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                invalidArgumentExceptions: ["invalid argument exception"]
            };
            if (this === e.jqx._jqxNumberInput.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function(b) {
            "" === this.promptChar && (this.promptChar = " ");
            b = this.host.attr("value");
            void 0 != b && (this.decimal = b);
            0 === this.decimal && (null != this.value ? this.decimal = this.value : null === this.value && 0 !== this.decimal && (this.value = this.decimal));
            this._createFromInput("jqxNumberInput");
            this.render()
        },
        _updateHint: function() {
            var b = this;
            b.hint && b.isMaterialized() && setTimeout(function() {
                0 === b.numberInput[0].value.length ? (b.element.removeAttribute("hint"),
                b.label && b.label[0] && (b.label[0].innerHTML = b.placeHolder)) : b.element.setAttribute("hint", !0)
            })
        },
        _createFromInput: function(b) {
            if ("input" == this.element.nodeName.toLowerCase()) {
                this.field = this.element;
                this.field.className && (this._className = this.field.className);
                var d = {
                    title: this.field.title
                };
                this.field.value && (this.decimal = parseFloat(this.field.value));
                if (this.field.getAttribute("min")) {
                    var c = this.field.getAttribute("min");
                    this.min = parseFloat(c)
                }
                this.field.getAttribute("step") && (c = this.field.getAttribute("step"),
                this.spinButtonsStep = parseFloat(c));
                this.field.getAttribute("max") && (c = this.field.getAttribute("max"),
                this.max = parseFloat(c));
                d.id = this.field.id.length ? this.field.id.replace(/[^\w]/g, "_") + "_" + b : e.jqx.utilities.createId() + "_" + b;
                b = e("<div></div>", d);
                b[0].style.cssText = this.field.style.cssText;
                this.width || (this.width = e(this.field).width());
                this.height || (this.height = e(this.field).outerHeight());
                e(this.field).hide().after(b);
                c = this.host.data();
                this.host = b;
                this.host.data(c);
                this.element = b[0];
                this.element.id = this.field.id;
                this.field.id = d.id;
                this._className && (this.host.addClass(this._className),
                e(this.field).removeClass(this._className));
                this.field.tabIndex && (d = this.field.tabIndex,
                this.field.tabIndex = -1,
                this.element.tabIndex = d)
            }
        },
        _doTouchHandling: function() {
            var b = this.savedValue;
            this.parsing || (this.parsing = !0);
            if (this.parsing) {
                this.numberInput.val() && 0 == this.numberInput.val().indexOf("-") ? this.setvalue("negative", !0) : this.setvalue("negative", !1);
                for (var d = this.numberInput.val(), c = 0; c < d.length - 1; c++) {
                    var f = d.substring(c, c + 1);
                    if (isNaN(parseFloat(f)) && -1 === this.symbol.toString().indexOf(f) && "%" != f && "$" != f && "." != f && "," != f && "-" != f) {
                        this.numberInput[0].value = b;
                        this.parsing = !1;
                        return
                    }
                }
                this.ValueString = this.GetValueString(this.numberInput.val(), this.decimalSeparator, "" != this.decimalSeparator);
                this._parseDecimalInSimpleMode();
                this.decimal = this.ValueString;
                this.getvalue("negative") && (this.decimal = "-" + this.ValueString);
                this.parsing = !1
            }
        },
        render: function() {
            this.host.attr({
                role: "spinbutton"
            });
            this.host.attr("data-role", "input");
            e.jqx.aria(this);
            e.jqx.aria(this, "aria-multiline", !1);
            var b = this;
            (this.officeMode || this.theme && -1 != this.theme.indexOf("office")) && 18 == this.spinButtonsWidth && (this.spinButtonsWidth = 15);
            if (e.jqx.mobile.isTouchDevice() || !0 === this.touchMode)
                this.inputMode = "textbox",
                this.spinMode = "simple";
            "" == this.decimalSeparator && (this.decimalSeparator = " ");
            this.host.addClass(this.toThemeProperty("jqx-input"));
            this.host.addClass(this.toThemeProperty("jqx-rc-all"));
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.host.addClass(this.toThemeProperty("jqx-widget-content"));
            this.host.addClass(this.toThemeProperty("jqx-numberinput"));
            this.spinButtons ? this._spinButtons() : (this.numberInput = e("<input style='border:none;' autocomplete='off' type='textarea'/>").appendTo(this.host),
            this.numberInput.addClass(this.toThemeProperty("jqx-input-content")),
            this.numberInput.addClass(this.toThemeProperty("jqx-widget-content")));
            this.isMaterialized() || this.numberInput.attr("placeholder", this.placeHolder);
            var d = this.host.attr("name");
            d && this.numberInput.attr("name", d);
            this.host.attr("tabindex") && (this.numberInput.attr("tabindex", this.host.attr("tabindex")),
            this.host.removeAttr("tabindex"));
            if (e.jqx.mobile.isTouchDevice() || !0 === this.touchMode || "textbox" == this.inputMode)
                b = this,
                b.savedValue = "",
                this.addHandler(this.numberInput, "focus", function() {
                    b.savedValue = b.numberInput[0].value
                }),
                this.addHandler(this.numberInput, "change", function() {
                    b._doTouchHandling()
                });
            e.data(this.host[0], "jqxNumberInput").jqxNumberInput = this;
            b = this;
            0 < this.host.parents("form").length && this.addHandler(this.host.parents("form"), "reset", function() {
                setTimeout(function() {
                    b.setDecimal(0)
                }, 10)
            });
            this.propertyChangeMap.disabled = function(g, h, k, l) {
                l ? (g.numberInput.addClass(c.toThemeProperty("jqx-input-disabled")),
                g.numberInput.attr("disabled", !0)) : (g.host.removeClass(c.toThemeProperty("jqx-input-disabled")),
                g.numberInput.attr("disabled", !1));
                g.spinButtons && g.host.jqxRepeatButton && (g.upbutton.jqxRepeatButton({
                    disabled: l
                }),
                g.downbutton.jqxRepeatButton({
                    disabled: l
                }))
            }
            ;
            this.disabled && (this.numberInput.addClass(this.toThemeProperty("jqx-input-disabled")),
            this.numberInput.attr("disabled", !0),
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")));
            this.selectedText = "";
            this.decimalSeparatorPosition = -1;
            var c = this;
            this.oldValue = this._value();
            this.items = [];
            d = this.value;
            var f = this.decimal;
            this._initializeLiterals();
            this._render();
            this.setDecimal(null !== d ? f : null);
            b = this;
            setTimeout(function() {}, 100);
            this._addHandlers();
            e.jqx.utilities.resize(this.host, function() {
                b._render()
            })
        },
        refresh: function(b) {
            b || this._render()
        },
        wheel: function(b, d) {
            if (d.enableMouseWheel) {
                d.changeType = "mouse";
                var c = 0;
                b || (b = window.event);
                b.originalEvent && b.originalEvent.wheelDelta && (b.wheelDelta = b.originalEvent.wheelDelta);
                b.wheelDelta ? c = b.wheelDelta / 120 : b.detail && (c = -b.detail / 3);
                if (c)
                    return d = d._handleDelta(c),
                    b.preventDefault && b.preventDefault(),
                    null != b.originalEvent && (b.originalEvent.mouseHandled = !0),
                    void 0 != b.stopPropagation && b.stopPropagation(),
                    d ? (d = !1,
                    b.returnValue = d) : !1;
                b.preventDefault && b.preventDefault();
                b.returnValue = !1
            }
        },
        _handleDelta: function(b) {
            0 > b ? this.spinDown() : this.spinUp();
            return !0
        },
        _addHandlers: function() {
            var b = this;
            this.addHandler(this.numberInput, "paste", function(c) {
                var f = b._selection();
                c.preventDefault();
                if (c.originalEvent.clipboardData)
                    var g = (c.originalEvent || c).clipboardData.getData("text/plain");
                else
                    window.clipboardData && (g = window.clipboardData.getData("Text"));
                this.selectedText = g;
                e.data(document.body, "jqxSelection", this.selectedText);
                "simple" != b.inputMode ? b._pasteSelectedText() : b.val(g);
                setTimeout(function() {
                    b._setSelectionStart(f.start)
                })
            });
            this.addHandler(this.numberInput, "mousedown", function(c) {
                return b._raiseEvent(2, c)
            });
            this._mousewheelfunc = this._mousewheelfunc || function(c) {
                if (!b.editcell)
                    return b.wheel(c, b),
                    !1
            }
            ;
            this.removeHandler(this.host, "mousewheel", this._mousewheelfunc);
            this.addHandler(this.host, "mousewheel", this._mousewheelfunc);
            var d = "";
            this.addHandler(this.numberInput, "focus", function(c) {
                e.data(b.numberInput, "selectionstart", b._selection().start);
                b.host.addClass(b.toThemeProperty("jqx-fill-state-focus"));
                b.spincontainer && b.spincontainer.addClass(b.toThemeProperty("jqx-numberinput-focus"));
                d = b.numberInput.val();
                b._savedValue = b.decimal
            });
            this.addHandler(this.numberInput, "blur", function(c) {
                "simple" == b.inputMode && b._exitSimpleInputMode(c, b, !1, d);
                if (b.autoValidate) {
                    var f = parseFloat(b.decimal);
                    b.getvalue("negative") && 0 < b.decimal && (f = -parseFloat(b.decimal));
                    f > b.max && (b._disableSetSelection = !0,
                    b.setDecimal(b.max),
                    b._disableSetSelection = !1);
                    f < b.min && (b._disableSetSelection = !0,
                    b.setDecimal(b.min),
                    b._disableSetSelection = !1)
                }
                b.host.removeClass(b.toThemeProperty("jqx-fill-state-focus"));
                b.spincontainer && b.spincontainer.removeClass(b.toThemeProperty("jqx-numberinput-focus"));
                b.numberInput.val() != d && (b._raiseEvent(7, c),
                e.jqx.aria(b, "aria-valuenow", b.decimal),
                b.element.value = b.decimal);
                return !0
            });
            this.addHandler(this.numberInput, "mouseup", function(c) {
                return b._raiseEvent(3, c)
            });
            this.addHandler(this.numberInput, "keydown", function(c) {
                b.changeType = "keyboard";
                return b._raiseEvent(4, c)
            });
            this.addHandler(this.numberInput, "keyup", function(c) {
                return b._raiseEvent(5, c)
            });
            this.addHandler(this.numberInput, "keypress", function(c) {
                return b._raiseEvent(6, c)
            })
        },
        focus: function() {
            try {
                this.numberInput.focus()
            } catch (b) {}
        },
        _removeHandlers: function() {
            this.removeHandler(this.numberInput, "mousedown");
            e.jqx.mobile.isOperaMiniMobileBrowser() && this.removeHandler(e(document), "click." + this.element.id, this._exitSimpleInputMode, this);
            this.removeHandler(this.numberInput, "paste");
            this.removeHandler(this.numberInput, "focus");
            this.removeHandler(this.numberInput, "blur");
            this.removeHandler(this.numberInput, "mouseup");
            this.removeHandler(this.numberInput, "keydown");
            this.removeHandler(this.numberInput, "keyup");
            this.removeHandler(this.numberInput, "keypress")
        },
        _spinButtons: function() {
            if (this.host.jqxRepeatButton) {
                this.numberInput ? this.numberInput.css("float", "left") : (this.numberInput = e("<input autocomplete='off' style='border: none; position: relative; float: left;' type='textarea'/>"),
                this.numberInput.appendTo(this.host),
                this.numberInput.addClass(this.toThemeProperty("jqx-input-content")),
                this.numberInput.addClass(this.toThemeProperty("jqx-widget-content")));
                this.spincontainer && (this.upbutton && this.upbutton.jqxRepeatButton("destroy"),
                this.downbutton && this.downbutton.jqxRepeatButton("destroy"),
                this.spincontainer.remove());
                this.spincontainer = e('<div style="float: right; height: 100%; overflow: hidden; position: relative;"></div>');
                this.rtl && (this.spincontainer.css("float", "right"),
                this.numberInput.css("float", "right"),
                this.spincontainer.css("left", "-1px"));
                this.host.append(this.spincontainer);
                this.upbutton = e('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>');
                this.spincontainer.append(this.upbutton);
                this.upbutton.jqxRepeatButton({
                    overrideTheme: !0,
                    disabled: this.disabled,
                    roundedCorners: "top-right"
                });
                this.downbutton = e('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>');
                this.spincontainer.append(this.downbutton);
                this.downbutton.jqxRepeatButton({
                    overrideTheme: !0,
                    disabled: this.disabled,
                    roundedCorners: "bottom-right"
                });
                this.template && (this.upbutton.addClass(this.toThemeProperty("jqx-" + this.template)),
                this.downbutton.addClass(this.toThemeProperty("jqx-" + this.template)));
                var b = this;
                this.downbutton.addClass(this.toThemeProperty("jqx-fill-state-normal jqx-action-button"));
                this.upbutton.addClass(this.toThemeProperty("jqx-fill-state-normal jqx-action-button"));
                this.upbutton.addClass(this.toThemeProperty("jqx-rc-tr"));
                this.downbutton.addClass(this.toThemeProperty("jqx-rc-br"));
                this.addHandler(this.downbutton, "mouseup", function(f) {
                    b.disabled || (b.downbutton.removeClass(b.toThemeProperty("jqx-fill-state-pressed")),
                    b._downArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-selected")))
                });
                this.addHandler(this.upbutton, "mouseup", function(f) {
                    b.disabled || (b.upbutton.removeClass(b.toThemeProperty("jqx-fill-state-pressed")),
                    b._upArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-selected")))
                });
                this.removeHandler(e(document), "mouseup." + this.element.id);
                this.addHandler(e(document), "mouseup." + this.element.id, function(f) {
                    b.upbutton.removeClass(b.toThemeProperty("jqx-fill-state-pressed"));
                    b._upArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-selected"));
                    b.downbutton.removeClass(b.toThemeProperty("jqx-fill-state-pressed"));
                    b._downArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-selected"))
                });
                this.addHandler(this.downbutton, "mousedown", function(f) {
                    if (!b.disabled)
                        return e.jqx.browser.msie && 9 > e.jqx.browser.version && (b._inputSelection = b._selection()),
                        b.downbutton.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                        b._downArrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-selected")),
                        f.preventDefault(),
                        f.stopPropagation(),
                        !1
                });
                this.addHandler(this.upbutton, "mousedown", function(f) {
                    if (!b.disabled)
                        return e.jqx.browser.msie && 9 > e.jqx.browser.version && (b._inputSelection = b._selection()),
                        b.upbutton.addClass(b.toThemeProperty("jqx-fill-state-pressed")),
                        b._upArrow.addClass(b.toThemeProperty("jqx-icon-arrow-up-selected")),
                        f.preventDefault(),
                        f.stopPropagation(),
                        !1
                });
                this.addHandler(this.upbutton, "mouseenter", function(f) {
                    b.upbutton.addClass(b.toThemeProperty("jqx-fill-state-hover"));
                    b._upArrow.addClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))
                });
                this.addHandler(this.upbutton, "mouseleave", function(f) {
                    b.upbutton.removeClass(b.toThemeProperty("jqx-fill-state-hover"));
                    b._upArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))
                });
                this.addHandler(this.downbutton, "mouseenter", function(f) {
                    b.downbutton.addClass(b.toThemeProperty("jqx-fill-state-hover"));
                    b._downArrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))
                });
                this.addHandler(this.downbutton, "mouseleave", function(f) {
                    b.downbutton.removeClass(b.toThemeProperty("jqx-fill-state-hover"));
                    b._downArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))
                });
                this.upbutton.css("border-width", "0px");
                this.downbutton.css("border-width", "0px");
                this.disabled ? (this.upbutton[0].disabled = !0,
                this.downbutton[0].disabled = !0) : (this.upbutton[0].disabled = !1,
                this.downbutton[0].disabled = !1);
                this.spincontainer.addClass(this.toThemeProperty("jqx-input"));
                this.spincontainer.addClass(this.toThemeProperty("jqx-rc-r"));
                this.spincontainer.css("border-width", "0px");
                this.rtl ? this.spincontainer.css("border-right-width", "1px") : this.spincontainer.css("border-left-width", "1px");
                this._upArrow = this.upbutton.find("div");
                this._downArrow = this.downbutton.find("div");
                this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));
                this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));
                this._upArrow.addClass(this.toThemeProperty("jqx-input-icon"));
                this._downArrow.addClass(this.toThemeProperty("jqx-input-icon"));
                b = this;
                this._upArrow.hover(function() {
                    b.disabled || b._upArrow.addClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))
                }, function() {
                    b._upArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))
                });
                this._downArrow.hover(function() {
                    b.disabled || b._downArrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))
                }, function() {
                    b._downArrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))
                });
                var d = e.jqx.mobile.isTouchDevice()
                  , c = "click";
                d && (c = e.jqx.mobile.getTouchEventName("touchstart"));
                d && (this.addHandler(this.downbutton, "click", function(f) {
                    b.spinDown()
                }),
                this.addHandler(this.upbutton, "click", function(f) {
                    b.spinUp()
                }));
                this.addHandler(this.downbutton, c, function(f) {
                    d ? (f.preventDefault(),
                    f.stopPropagation()) : (0 == b._selection().start && b._setSelectionStart(b.numberInput.val().length),
                    e.jqx.browser.msie && 9 > e.jqx.browser.version && b._setSelectionStart(b._inputSelection.start));
                    b.spinDown();
                    return !1
                });
                this.addHandler(this.upbutton, c, function(f) {
                    d ? (f.preventDefault(),
                    f.stopPropagation()) : (0 == b._selection().start && b._setSelectionStart(b.numberInput.val().length),
                    e.jqx.browser.msie && 9 > e.jqx.browser.version && b._setSelectionStart(b._inputSelection.start));
                    b.spinUp();
                    return !1
                })
            } else
                throw Error("jqxNumberInput: Missing reference to jqxbuttons.js.");
        },
        spinDown: function() {
            var b = this.decimal;
            if ("none" != this.spinMode)
                if (null == this.decimal)
                    this.setDecimal(0);
                else {
                    var d = this.getvalue("negative")
                      , c = d ? -1 : 0;
                    (e.jqx.mobile.isTouchDevice() || "textbox" == this.inputMode) && this._doTouchHandling();
                    if (!this.disabled) {
                        var f = this._selection()
                          , g = this.decimal
                          , h = this.getDecimal();
                        if (h < this.min)
                            this.setDecimal(this.min),
                            this._setSelectionStart(f.start),
                            this.spinDown();
                        else if (h > this.max)
                            this.setDecimal(this.max),
                            this._setSelectionStart(f.start),
                            this.spinDown();
                        else {
                            0 > this.spinButtonsStep && (this.spinButtonsStep = 1);
                            var k = parseInt(this.decimal) - this.spinButtonsStep;
                            k = k.toString().length;
                            var l = c + k <= this.digits;
                            if ("advanced" != this.spinMode) {
                                if (h - this.spinButtonsStep >= this.min && l) {
                                    k = 1;
                                    for (l = 0; l < this.decimalDigits; l++)
                                        k *= 10;
                                    h = k * h - k * this.spinButtonsStep;
                                    h = this._parseDecimalValueToEditorValue(h / k);
                                    this.setDecimal(h)
                                }
                            } else {
                                d = this._getspindecimal();
                                this._getSeparatorPosition();
                                h = parseFloat(d.decimal);
                                0 > this.spinButtonsStep && (this.spinButtonsStep = 1);
                                k = parseInt(h) - this.spinButtonsStep;
                                k = k.toString().length;
                                l = c + k <= this.digits;
                                k = 1;
                                var m = d.decimal.indexOf(".");
                                if (-1 != m) {
                                    var n = d.decimal.length - m - 1;
                                    k = 1;
                                    for (l = 0; l < n; l++)
                                        k *= 10;
                                    h -= new Number(this.spinButtonsStep / k);
                                    h = h.toFixed(n);
                                    m = h.toString().indexOf(".");
                                    -1 == m && (h = h.toString() + ".");
                                    n = h.toString() + d.afterdecimal;
                                    n = new Number(n);
                                    n = n.toFixed(this.decimalDigits);
                                    n >= this.min && (n = this._parseDecimalValueToEditorValue(n),
                                    this.setDecimal(n))
                                } else
                                    h - this.spinButtonsStep >= this.min && l && (h = k * h - k * this.spinButtonsStep,
                                    n = (h / k).toString() + d.afterdecimal,
                                    n >= this.min && (n = this._parseDecimalValueToEditorValue(n),
                                    this.setDecimal(n)))
                            }
                            void 0 == n || "simple" != this.inputMode ? (d = this.getvalue("negative"),
                            0 == c && d ? this._setSelectionStart(f.start + 1) : this._setSelectionStart(f.start),
                            this.savedValue = this.numberInput[0].value) : (n = this.decimal.toString(),
                            d = this.getvalue("negative"),
                            0 == c && d ? this._setSelectionStart(f.start + 1) : void 0 == n || void 0 != g && g.toString().length != n.length ? d ? this._setSelectionStart(f.start + 1) : this._setSelectionStart(f.start - 1) : this._setSelectionStart(f.start));
                            b != this.decimal && (e.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                            this._raiseEvent(7, {}));
                            e.jqx.aria(this, "aria-valuenow", this.decimal)
                        }
                    }
                }
        },
        _getspindecimal: function() {
            var b = this._selection()
              , d = "";
            this._getSeparatorPosition();
            var c = this._getVisibleItems()
              , f = this._getHiddenPrefixCount()
              , g = this.numberInput.val();
            this.numberInput.val().length == b.start && 0 == b.length && (this._setSelection(b.start, b.start + 1),
            b = this._selection());
            var h = "advanced" != this.inputMode;
            b = b.start;
            0 === b && b++;
            1 === b && "left" === this.symbolPosition && "" !== this.symbol && (b += this.symbol.length);
            for (var k = 0; k < b; k++)
                if (h) {
                    var l = g.substring(k, k + 1)
                      , m = !isNaN(parseInt(l));
                    m && (d += l);
                    l == this.decimalSeparator && (d += l)
                } else
                    c[k].canEdit && c[k].character != this.promptChar ? d += c[k].character : c[k].canEdit || -1 == this.decimalSeparatorPosition || c[k] != c[this.decimalSeparatorPosition - f] || (0 == d.length && (d = "0"),
                    d += c[k].character);
            var n = "";
            for (k = b; k < c.length; k++)
                h ? (l = g.substring(k, k + 1),
                (m = !isNaN(parseInt(l))) && (n += l),
                l == this.decimalSeparator && (n += l)) : c[k].canEdit && c[k].character != this.promptChar ? n += c[k].character : c[k].canEdit || -1 == this.decimalSeparatorPosition || c[k] != c[this.decimalSeparatorPosition - f] || (n += c[k].character);
            return {
                decimal: this.getvalue("negative") ? "-" + this._parseDecimalValue(d).toString() : this._parseDecimalValue(d).toString(),
                afterdecimal: this._parseDecimalValue(n)
            }
        },
        _parseDecimalValue: function(b) {
            if ("." != this.decimalSeparator) {
                var d = b.toString().indexOf(this.decimalSeparator);
                if (0 <= d)
                    return b.toString().substring(0, d) + "." + b.toString().substring(d + 1)
            }
            return b
        },
        _parseDecimalValueToEditorValue: function(b) {
            if ("." != this.decimalSeparator) {
                var d = b.toString().indexOf(".");
                if (0 <= d)
                    return b.toString().substring(0, d) + this.decimalSeparator + b.toString().substring(d + 1)
            }
            return b
        },
        spinUp: function() {
            var b = this.decimal;
            if ("none" != this.spinMode)
                if (null == this.decimal)
                    this.setDecimal(0);
                else {
                    (e.jqx.mobile.isTouchDevice() || "textbox" == this.inputMode) && this._doTouchHandling();
                    var d = this.getvalue("negative")
                      , c = d ? -1 : 0;
                    if (!this.disabled) {
                        var f = this._selection()
                          , g = this.decimal
                          , h = this.getDecimal();
                        if (h < this.min)
                            this.setDecimal(this.min),
                            this._setSelectionStart(f.start),
                            this.spinUp();
                        else if (h > this.max)
                            this.setDecimal(this.max),
                            this._setSelectionStart(f.start),
                            this.spinUp();
                        else {
                            0 > this.spinButtonsStep && (this.spinButtonsStep = 1);
                            var k = parseInt(this.decimal) + this.spinButtonsStep;
                            k = k.toString().length;
                            var l = c + k <= this.digits;
                            if ("advanced" != this.spinMode) {
                                if (h + this.spinButtonsStep <= this.max && l) {
                                    k = 1;
                                    for (d = 0; d < this.decimalDigits; d++)
                                        k *= 10;
                                    h = k * h + k * this.spinButtonsStep;
                                    h = this._parseDecimalValueToEditorValue(h / k);
                                    this.setDecimal(h)
                                }
                            } else {
                                var m = this._getspindecimal();
                                this._getSeparatorPosition();
                                h = parseFloat(m.decimal);
                                0 > this.spinButtonsStep && (this.spinButtonsStep = 1);
                                k = parseInt(h) + this.spinButtonsStep;
                                k = k.toString().length;
                                l = c + k <= this.digits;
                                k = 1;
                                var n = m.decimal.indexOf(".");
                                if (-1 != n) {
                                    var p = m.decimal.length - n - 1;
                                    k = 1;
                                    for (d = 0; d < p; d++)
                                        k *= 10;
                                    h += new Number(this.spinButtonsStep / k);
                                    h = h.toFixed(p);
                                    n = h.toString().indexOf(".");
                                    -1 == n && (h = h.toString() + ".");
                                    p = h.toString() + m.afterdecimal;
                                    p = new Number(p);
                                    p = p.toFixed(this.decimalDigits);
                                    h = (new Number(p)).toFixed(this.decimalDigits);
                                    h <= this.max ? (p = this._parseDecimalValueToEditorValue(p),
                                    this.setDecimal(p)) : p = void 0
                                } else
                                    h + this.spinButtonsStep <= this.max && l && (h = k * h + k * this.spinButtonsStep,
                                    p = (h / k).toString() + m.afterdecimal,
                                    h = (new Number(p)).toFixed(this.decimalDigits),
                                    h <= this.max ? (p = this._parseDecimalValueToEditorValue(p),
                                    d && -1 == p.indexOf("-") && "-0" != m.decimal && (p = "-" + p),
                                    this.setDecimal(p)) : p = void 0)
                            }
                            void 0 == p || "simple" != this.inputMode ? (this._setSelectionStart(f.start),
                            this.savedValue = this.numberInput[0].value) : (p = this.decimal.toString(),
                            d = this.getvalue("negative"),
                            -1 != c || d ? void 0 == p || void 0 != g && g.toString().length != p.length ? d ? this._setSelectionStart(f.start) : this._setSelectionStart(1 + f.start) : this._setSelectionStart(f.start) : this._setSelectionStart(-1 + f.start));
                            b != this.decimal && (e.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                            this._raiseEvent(7, {}));
                            e.jqx.aria(this, "aria-valuenow", this.decimal)
                        }
                    }
                }
        },
        _exitSimpleInputMode: function(b, d, c, f) {
            void 0 == d && (d = b.data);
            if (null != d) {
                if (void 0 == c) {
                    if (null != b.target && null != d.element && (void 0 != b.target.id && 0 < b.target.id.toString().length && 0 < d.host.find("#" + b.target.id).length || b.target == d.element))
                        return;
                    f = d.host.offset();
                    c = f.left;
                    f = f.top;
                    var g = d.host.width()
                      , h = d.host.height();
                    b = e(b.target).offset();
                    if (b.left >= c && b.left <= c + g && b.top >= f && b.top <= f + h)
                        return
                }
                e.jqx.mobile.isOperaMiniBrowser() && d.numberInput.attr("readonly", !0);
                if (!d.disabled && !d.readOnly && null != e.data(d.numberInput, "simpleInputMode"))
                    return e.data(d.numberInput, "simpleInputMode", null),
                    this._parseDecimalInSimpleMode(),
                    !1
            }
        },
        _getDecimalInSimpleMode: function() {
            var b = this.decimal;
            if ("." != this.decimalSeparator) {
                var d = b.toString().indexOf(this.decimalSeparator);
                0 < d && (b = b.toString().substring(0, d) + "." + b.toString().substring(d + 1))
            }
            return b
        },
        _parseDecimalInSimpleMode: function(b) {
            var d = this.getvalue("negative")
              , c = this.ValueString;
            void 0 == c && (c = this.GetValueString(this.numberInput.val(), this.decimalSeparator, "" != this.decimalSeparator));
            if ("." != this.decimalSeparator) {
                var f = c.toString().indexOf(".");
                0 < f && (c = c.toString().substring(0, f) + this.decimalSeparator + c.toString().substring(f + 1))
            }
            d = d ? "-" : "";
            "left" == this.symbolPosition && (d += this.symbol);
            c = c.toString();
            0 <= c.indexOf("-") && (c = c.substring(c.indexOf("-") + 1));
            d += c;
            "right" == this.symbolPosition && (d += this.symbol);
            0 != b && this.numberInput.val(d)
        },
        _enterSimpleInputMode: function(b, d) {
            void 0 == d && (d = b.data);
            b = this._selection();
            if (null != d) {
                var c = d.getvalue("negative")
                  , f = d.decimal;
                c && 0 < f && (f = -f);
                d.numberInput.val(f);
                e.data(d.numberInput, "simpleInputMode", !0);
                e.jqx.mobile.isOperaMiniBrowser() && d.numberInput.attr("readonly", !1);
                this._parseDecimalInSimpleMode();
                this._setSelectionStart(b.start)
            }
        },
        setvalue: function(b, d) {
            void 0 !== this[b] && ("decimal" == b ? this._setDecimal(d) : (this[b] = d,
            this.propertyChangedHandler(this, b, d, d)))
        },
        getvalue: function(b) {
            return "decimal" == b && void 0 != this.negative && 1 == this.negative ? this.decimal.toString().indexOf(",") ? -Math.abs(this.decimal.toString().replace(/,/, ".")) : -Math.abs(this[b]) : b in this ? this[b] : null
        },
        _getString: function() {
            for (var b = "", d = 0; d < this.items.length; d++)
                b += this.items[d].character;
            return b
        },
        _literal: function(b, d, c, f) {
            return {
                character: b,
                regex: d,
                canEdit: c,
                isSeparator: f
            }
        },
        _initializeLiterals: function() {
            if ("textbox" != this.inputMode) {
                for (var b = 0, d = this.negativeSymbol.length, c = 0; c < d; c++) {
                    var f = this.negativeSymbol.substring(c, c + 1)
                      , g = ""
                      , h = !1;
                    f = this.negative ? this._literal(f, g, h, !1) : this._literal("", g, h, !1);
                    this.items[b] = f;
                    b++
                }
                d = this.symbol.length;
                if ("left" == this.symbolPosition)
                    for (c = 0; c < d; c++)
                        f = this.symbol.substring(c, c + 1),
                        g = "",
                        h = !1,
                        f = this._literal(f, g, h, !1),
                        this.items[b] = f,
                        b++;
                var k = this.digits % this.groupSize;
                0 == k && (k = this.groupSize);
                for (c = 0; c < this.digits; c++)
                    f = this.promptChar,
                    g = "\\d",
                    h = !0,
                    f = this._literal(f, g, h, !1),
                    this.items[b] = f,
                    b++,
                    c < this.digits - 1 && void 0 != this.groupSeparator && 0 < this.groupSeparator.length ? (k--,
                    0 == k && (k = this.groupSize,
                    f = this._literal(this.groupSeparator, "", !1, !1),
                    this.items[b] = f,
                    b++)) : c == this.digits - 1 && (f.character = 0);
                this.decimalSeparatorPosition = -1;
                if (void 0 != this.decimalDigits && 0 < this.decimalDigits)
                    for (f = this.decimalSeparator,
                    0 == f.length && (f = "."),
                    f = this._literal(f, "", !1, !0),
                    this.items[b] = f,
                    this.decimalSeparatorPosition = b,
                    b++,
                    c = 0; c < this.decimalDigits; c++)
                        g = "\\d",
                        k = this._literal(0, g, !0, !1),
                        this.items[b] = k,
                        b++;
                if ("right" == this.symbolPosition)
                    for (c = 0; c < d; c++)
                        f = this.symbol.substring(c, c + 1),
                        g = "",
                        h = !1,
                        f = this._literal(f, g, h),
                        this.items[b] = f,
                        b++
            }
        },
        _match: function(b, d) {
            return (new RegExp(d,"i")).test(b)
        },
        _raiseEvent: function(b, d) {
            var c = this.events[b]
              , f = {
                owner: this
            };
            if ("none" == this.host.css("display"))
                return !0;
            var g = d.charCode ? d.charCode : d.keyCode ? d.keyCode : 0
              , h = !0
              , k = this.readOnly;
            if ((3 == b || 2 == b) && !this.disabled)
                if ("simple" != this.inputMode && "textbox" != this.inputMode)
                    this._handleMouse(d);
                else
                    return !0;
            if (0 == b) {
                var l = this.getvalue("decimal");
                this.max < l || this.min > l ? this.host.addClass(this.toThemeProperty("jqx-input-invalid")) : (this.host.removeClass(this.toThemeProperty("jqx-input-invalid")),
                this.host.addClass(this.toThemeProperty("jqx-input")),
                this.host.addClass(this.toThemeProperty("jqx-rc-all")))
            }
            l = new e.Event(c);
            l.owner = this;
            f.value = this.getvalue("decimal");
            f.text = this.numberInput.val();
            l.args = f;
            7 == b && (f.type = this.changeType,
            this.changeType = null);
            void 0 != c && 4 != b && 5 != b && 6 != b && (h = this.host.trigger(l));
            if ("textbox" == this.inputMode)
                return h;
            if ("simple" != this.inputMode)
                if (4 == b) {
                    if (k || this.disabled)
                        return !1;
                    h = this._handleKeyDown(d, g)
                } else if (5 == b) {
                    if (k || this.disabled)
                        h = !1
                } else {
                    if (6 == b) {
                        if (k || this.disabled)
                            return !1;
                        h = this._handleKeyPress(d, g)
                    }
                }
            else if (4 == b || 5 == b || 6 == b) {
                if (e.jqx.mobile.isTouchDevice() || !0 === this.touchMode)
                    return !0;
                if (k || this.disabled)
                    return !1;
                c = String.fromCharCode(g);
                parseInt(c);
                c = !0;
                d.ctrlKey || d.shiftKey || d.metaKey || 65 <= g && 90 >= g && (c = !1);
                if (6 == b && void 0 != e.jqx.browser.opera && 8 == g)
                    return !1;
                if (c) {
                    4 == b && (c = this._handleSimpleKeyDown(d, g));
                    107 == g && (h = this.getvalue("negative")) && (this.setvalue("negative", !1),
                    this.decimal = this.ValueString,
                    this._parseDecimalInSimpleMode(),
                    this._setSelectionStart(m.start + 1),
                    this._raiseEvent(0, this.value),
                    this._raiseEvent(1, this.numberInput.val()));
                    if (189 == g || 45 == g || 109 == g || 173 == g) {
                        var m = this._selection();
                        4 == b && (h = this.getvalue("negative"),
                        0 == h ? this.setvalue("negative", !0) : this.setvalue("negative", !1),
                        this.decimal = this.ValueString,
                        this._parseDecimalInSimpleMode(),
                        h ? this._setSelectionStart(m.start - 1) : this._setSelectionStart(m.start + 1),
                        c = !1,
                        this._raiseEvent(0, this.value),
                        this._raiseEvent(1, this.numberInput.val()))
                    }
                    f = f.ctrlKey || f.metaKey;
                    if (!e.jqx.browser.msie && (f && 99 == g || f && 67 == g || f && 122 == g || f && 90 == g || f && 118 == g || f && 86 == g || d.shiftKey && 45 == g))
                        return (e.jqx.browser.webkit || e.jqx.browser.chrome) && this._handleSimpleKeyDown(d, g),
                        67 == g ? !0 : !1;
                    if (f && 97 == g || f && 65 == g)
                        return !0;
                    if (6 == b && c)
                        return this._isSpecialKey(g)
                }
                return c
            }
            return h
        },
        GetSelectionInValue: function(b, d, c, f) {
            for (var g = 0, h = 0; h < d.length && !(h >= b); h++) {
                var k = d.substring(h, h + 1);
                (!isNaN(parseInt(k)) || f && d.substring(h, h + 1) == c) && g++
            }
            return g
        },
        GetSelectionLengthInValue: function(b, d, c, f) {
            for (var g = 0, h = 0; h < c.length && !(h >= b + d); h++) {
                var k = c.substring(h, h + 1);
                k = !isNaN(parseInt(k));
                (0 < d && h >= b && k || h >= b && c[h].toString() == f) && g++
            }
            return g
        },
        GetInsertTypeByPositionInValue: function(b, d, c, f) {
            var g = "before";
            c = this.GetValueString(c, d, f);
            d = this.GetDigitsToSeparator(0, c, d);
            b > d && (g = "after");
            return g
        },
        RemoveRange: function(b, d, c, f, g, h) {
            var k = this.digits
              , l = d
              , m = 0;
            this._selection();
            f = this.decimalSeparator;
            var n = "" != f;
            if (0 == l && this.ValueString.length < this.decimalPossibleChars - 1)
                return m;
            var p = this.GetSeparatorPositionInText(f, c);
            g || (p = this.GetSeparatorPositionInText(f, c));
            0 > p && !n && 1 < c.length && (p = c.length);
            -1 == p && (p = c.length);
            2 > d && 1 == h && this.ValueString.length - this.decimalDigits - (n ? 1 : 0) == k && b + d < p && l++;
            d = "";
            for (h = 0; h < c.length; h++)
                h < b || h >= b + l ? d += c.substring(h, h + 1) : (k = c.substring(h, h + 1),
                k == f ? d += f : (k = c.substring(h, h + 1),
                this.symbol && "" != this.symbol && 0 <= this.symbol.indexOf(k) || (h > p ? d += "0" : (k = c.substring(h, h + 1),
                isNaN(parseInt(k)) || m++))));
            0 == d.length && (d = "0");
            g ? this.numberInput.val(d) : this.ValueString = d;
            c = d.substring(0, 1);
            c == f && isNaN(parseInt(c)) && (d = "0" + d);
            this.decimal = this.ValueString = this.GetValueString(d, f, n);
            this._parseDecimalInSimpleMode();
            this._setSelectionStart(b);
            return m
        },
        InsertDigit: function(b, d) {
            "number" != typeof this.digits && (this.digits = parseInt(this.digits));
            "number" != typeof this.decimalDigits && (this.decimalDigits = parseInt(this.decimalDigits));
            var c = 1 + this.digits
              , f = this._selection()
              , g = this.getvalue("negative")
              , h = !1;
            0 == f.start && "" != this.symbol && "left" == this.symbolPosition && (this._setSelectionStart(f.start + 1),
            f = this._selection(),
            h = !0);
            if (g && h || g && !h && 0 == f.start)
                this._setSelectionStart(f.start + 1),
                f = this._selection();
            var k = this.numberInput.val().substring(f.start, f.start + 1)
              , l = this.numberInput.val();
            h = this.decimalSeparator;
            var m = "" != h && 0 < this.decimalDigits;
            if (k == this.symbol && "right" == this.symbolPosition)
                if (0 == this.decimalDigits) {
                    if (this.ValueString = this.GetValueString(l, h, m),
                    this.ValueString.length >= c)
                        return
                } else
                    return;
            this.ValueString = this.GetValueString(l, h, m);
            "" == this.ValueString && (this.ValueString = (new Number(0)).toFixed(this.decimalDigits));
            k = this.ValueString;
            0 < this.decimalDigits && d >= k.length && (d = k.length - 1);
            var n = "";
            d < k.length && (n = k.substring(d, d + 1));
            var p = !1;
            "after" == this.GetInsertTypeByPositionInValue(d, h, l, m) && (p = !0);
            n != h && this.ValueString.length - this.decimalDigits - (m ? 1 : 0) >= c - 1 && (p = !0);
            "0" === n && 1 === this.ValueString.length && 0 === this.decimalDigits && (p = !0);
            l = m ? 1 : 0;
            if (!(!p && this.ValueString && this.ValueString.length >= this.digits + this.decimalDigits + l)) {
                if (p && n != h) {
                    c = k.substring(0, d);
                    if (c.length == k.length && this.ValueString.length >= this.digits + this.decimalDigits + l)
                        return;
                    l = "";
                    d + 1 < k.length && (l = k.substring(d + 1));
                    this.ValueString = c + b + l
                } else
                    c = k.substring(0, d),
                    l = k.substring(d),
                    d = c + b + l,
                    "0" == k.substring(0, 1) && k.substring(1, 2) == h && (d = b + k.substring(1),
                    n == h && (this._setSelectionStart(f.start - 1),
                    f = this._selection())),
                    this.ValueString = d;
                this.decimal = g ? -this.ValueString : this.ValueString;
                this._parseDecimalInSimpleMode();
                this._setSelectionStart(f.start + 1);
                this.value = this.decimal;
                this._raiseEvent(0, this.value);
                this._raiseEvent(1, this.numberInput.val())
            }
        },
        GetStringToSeparator: function(b, d, c) {
            var f = this.GetSeparatorPositionInText(d, b);
            b = b.subString(0, f);
            return this.GetValueString(b, d, c)
        },
        GetSeparatorPositionInText: function(b, d) {
            for (var c = -1, f = 0; f < d.length; f++)
                if (d.substring(f, f + 1) == b) {
                    c = f;
                    break
                }
            return c
        },
        GetValueString: function(b, d, c) {
            c = "";
            for (var f = 0; f < b.length; f++) {
                var g = b.substring(f, f + 1);
                isNaN(parseInt(g)) || (c += g);
                g == d && (c += d)
            }
            return c
        },
        Backspace: function() {
            var b = this._selection()
              , d = this._selection()
              , c = this.numberInput.val();
            if (0 != b.start || 0 != b.length)
                this.isBackSpace = !0,
                c = c.substring[b.start,
                b.start + 1],
                isNaN(parseInt(c)),
                0 < b.start && 0 == b.length && (this._setSelectionStart(b.start - 1),
                this._selection()),
                this.Delete(),
                this._setSelectionStart(d.start - 1),
                this.isBackSpace = !1
        },
        Delete: function(b) {
            var d = this._selection()
              , c = this.numberInput.val();
            0 === d.start && "-" == c.substring(0, 1) && (this.setvalue("negative", !1),
            d = this._selection(),
            c = this.numberInput.val());
            b = d.start;
            var f = d.length;
            f = Math.max(f, 1);
            this.ValueString = this.GetValueString(c, this.decimalSeparator, "" != this.decimalSeparator);
            b > this.ValueString.indexOf(this.decimalSeparator) && 0 < this.decimalDigits && b++;
            c = 0;
            this.symbol && ("left" == this.symbolPosition && c--,
            this.negative && c--);
            this.RemoveRange(d.start + c, f, this.ValueString, ".", !1);
            d = this.ValueString.substring(0, 1);
            isNaN(parseInt(d)) && (this.ValueString = "0" + this.ValueString);
            this.decimal = this.ValueString;
            this._parseDecimalInSimpleMode();
            this._setSelectionStart(b);
            this.value = this.decimal;
            this._raiseEvent(0, this.value);
            this._raiseEvent(1, this.numberInput.val())
        },
        insertsimple: function(b) {
            var d = this._selection()
              , c = this.numberInput.val();
            if (!(d.start == c.length && null != this.decimal && 0 < this.decimalDigits)) {
                var f = this.decimalSeparator;
                this.ValueString = this.GetValueString(c, f, "" != f);
                var g = this.GetSelectionInValue(d.start, c, f, "" != f);
                c = this.GetSelectionLengthInValue(d.start, d.length, c, f);
                this.GetDigitsToSeparator(0, this.ValueString, f);
                0 < this.decimalDigits && g >= this.ValueString.length && g--;
                "" == this.ValueString ? (this.ValueString = (new Number(0)).toFixed(this.decimalDigits),
                this.ValueString = this.ValueString.replace(".", f),
                this.RemoveRange(d.start, c, this.ValueString, f, !1, !0),
                this.InsertDigit(b, 0, d)) : (this.RemoveRange(d.start, c, this.ValueString, f, !1, !0),
                this.InsertDigit(b, g, d))
            }
        },
        GetDigitsToSeparator: function(b, d, c) {
            void 0 == c && (c = ".");
            if (0 > d.indexOf(c))
                return d.length;
            for (var f = 0; f < d.length; f++)
                if (d.substring(f, f + 1) == c) {
                    b = f;
                    break
                }
            return b
        },
        _handleSimpleKeyDown: function(b, d) {
            var c = this._selection()
              , f = b.ctrlKey || b.metaKey;
            if ((8 == d || 46 == d) && f)
                return this.setDecimal(null),
                !1;
            0 <= c.start && c.start < this.items.length && (f = String.fromCharCode(d));
            27 === d && (this.setDecimal(this._savedValue),
            f = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val()),
            -1 != f && this._setSelectionStart(f),
            b.preventDefault());
            if (this.rtl && 37 == d)
                return b = (d = b.shiftKey) ? 1 : 0,
                d ? this._setSelection(c.start + 1 - b, c.start + c.length + 1) : this._setSelection(c.start + 1 - b, c.start + 1),
                !1;
            if (this.rtl && 39 == d)
                return (d = b.shiftKey) ? this._setSelection(c.start - 1, c.length + (d ? 1 : 0) + c.start - 1) : this._setSelection(c.start - 1, c.start - 1),
                !1;
            if (8 == d)
                return this.Backspace(),
                !1;
            if (190 == d || 110 == d)
                return f = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val()),
                -1 != f && this._setSelectionStart(f + 1),
                !1;
            if (188 == d && "," === this.groupSeparator) {
                b = this.numberInput.val();
                for (d = c.start; d < b.length; d++)
                    if (b[d] == this.groupSeparator) {
                        this._setSelectionStart(1 + d);
                        break
                    }
                return !1
            }
            if ((f = b.ctrlKey || b.metaKey) && 99 == d || f && 67 == d) {
                c = this._selection();
                b = "";
                f = this.numberInput.val();
                if (0 < c.start || 0 < c.length)
                    for (d = c.start; d < c.end; d++)
                        b += f.substring(d, d + 1);
                e.data(document.body, "jqxSelection", b);
                if (e.jqx.browser.msie)
                    window.clipboardData.setData("Text", b);
                else {
                    var g = this
                      , h = e('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                    h.val(b);
                    e("body").append(h);
                    h.select();
                    setTimeout(function() {
                        document.designMode = "off";
                        h.select();
                        h.remove();
                        g.focus()
                    }, 100)
                }
                this.savedText = b;
                return !0
            }
            if (f && 122 == d || f && 90 == d)
                return !1;
            if (f && 118 == d || f && 86 == d || b.shiftKey && 45 == d)
                return e.jqx.browser.msie && !this.savedText && (this.savedText = window.clipboardData.getData("Text")),
                null != this.savedText && 0 < this.savedText.length ? this.val(this.savedText) : this.val(e.data(document.body, "jqxSelection")),
                !1;
            f = String.fromCharCode(d);
            c = parseInt(f);
            96 <= d && 105 >= d && (c = d - 96,
            d -= 48);
            if (!isNaN(c))
                return g = this,
                this.insertsimple(c),
                !1;
            if (46 == d)
                return this.Delete(),
                !1;
            if (38 == d)
                return this.spinUp(),
                !1;
            if (40 == d)
                return this.spinDown(),
                !1;
            c = this._isSpecialKey(d);
            return e.jqx.browser.mozilla ? c : !0
        },
        _getEditRange: function() {
            for (var b = 0, d = 0, c = 0; c < this.items.length; c++)
                if (this.items[c].canEdit) {
                    b = c;
                    break
                }
            for (c = this.items.length - 1; 0 <= c; c--)
                if (this.items[c].canEdit) {
                    d = c;
                    break
                }
            return {
                start: b,
                end: d
            }
        },
        _getVisibleItems: function() {
            for (var b = [], d = 0, c = 0; c < this.items.length; c++)
                0 < this.items[c].character.toString().length && (b[d] = this.items[c],
                d++);
            return b
        },
        _hasEmptyVisibleItems: function() {
            for (var b = this._getVisibleItems(), d = 0; d < b.length; d++)
                if (b[d].canEdit && b[d].character == this.promptChar)
                    return !0;
            return !1
        },
        _getFirstVisibleNonEmptyIndex: function() {
            for (var b = this._getVisibleItems(), d = 0; d < b.length; d++)
                if (b[d].canEdit && b[d].character != this.promptChar)
                    return d
        },
        _handleMouse: function(b, d) {
            b = this._selection();
            1 >= b.length && (d = this._getFirstVisibleNonEmptyIndex(),
            b.start < d && this._setSelectionStart(d))
        },
        _insertKey: function(b) {
            this.numberInput[0].focus();
            var d = String.fromCharCode(b);
            b = parseInt(d);
            if (!isNaN(b)) {
                var c = 0;
                for (b = 0; b < this.items.length; b++)
                    0 == this.items[b].character.length && c++;
                var f = this._selection()
                  , g = this;
                if (0 <= f.start && f.start <= this.items.length) {
                    var h = !1;
                    b = this._getFirstVisibleNonEmptyIndex();
                    f.start < b && 0 == f.length && (!isNaN(d) || " " == d) && (this._setSelectionStart(b),
                    f = this._selection());
                    this._getFirstEditableItemIndex();
                    var k = this._getLastEditableItemIndex();
                    null === this.value && (k = 0);
                    var l = this._getVisibleItems();
                    e.each(l, function(m, n) {
                        if (!(f.start > m && m != l.length - 1)) {
                            var p = l[m];
                            m > k && (p = l[k]);
                            if (!isNaN(d) && " " != d && "" != d && p && p.canEdit && (n = g._getSeparatorPosition(),
                            g._match(d, p.regex))) {
                                if (!h && 0 < f.length) {
                                    for (var q = f.start + c; q < f.end + c; q++)
                                        g.items[q].canEdit && (g.items[q].character = q > n ? "0" : g.promptChar);
                                    g._getString();
                                    h = !0
                                }
                                n = g._getSeparatorPosition();
                                q = g._hasEmptyVisibleItems();
                                null == g.decimal && (f.start = n - 1,
                                0 > f.start && (f.start = 0),
                                f.end = f.start);
                                if (f.start <= n && q) {
                                    p = m;
                                    -1 == g.decimalSeparatorPosition && f.start == n && (p = m + 1);
                                    null == g.decimal && (p = f.start);
                                    q = "";
                                    for (var t = 0; t < p; t++)
                                        l[t].canEdit && l[t].character != g.promptChar && (q += l[t].character);
                                    q += d;
                                    m = 1 > g.decimal ? 1 : 0;
                                    f.start == n && -1 != g.decimalSeparatorPosition && (q += g.decimalSeparator,
                                    m = 0);
                                    for (t = p + m; t < l.length; t++)
                                        l[t].character == g.decimalSeparator && l[t].isSeparator ? q += l[t].character : l[t].canEdit && l[t].character != g.promptChar && (q += l[t].character);
                                    "." != g.decimalSeparator && (q = g._parseDecimalValue(q));
                                    q = parseFloat(q).toString();
                                    q = new Number(q);
                                    q = q.toFixed(g.decimalDigits);
                                    "." != g.decimalSeparator && (q = g._parseDecimalValueToEditorValue(q));
                                    g.setvalue("decimal", q);
                                    g._getString();
                                    f.end < n ? g._setSelectionStart(f.end + m) : g._setSelectionStart(f.end);
                                    1 <= f.length && g._setSelectionStart(f.end);
                                    f.length == g.numberInput.val().length && (m = g._moveCaretToDecimalSeparator(),
                                    g._setSelectionStart(m - (0 <= g.decimalSeparatorPosition ? 1 : 0)))
                                } else if (f.start < n || f.start > n) {
                                    if (g.numberInput.val().length == f.start && -1 != g.decimalSeparatorPosition || g.numberInput.val().length == f.start && -1 == g.decimalSeparatorPosition && !q)
                                        return !1;
                                    q = "";
                                    var v = !1;
                                    for (t = 0; t < m; t++)
                                        l[t].canEdit && l[t].character != g.promptChar && (q += l[t].character),
                                        l[t].character == g.decimalSeparator && l[t].isSeparator && (q += l[t].character,
                                        v = !0);
                                    q += d;
                                    v || f.start != n - 1 || (q += g.decimalSeparator,
                                    v = !0);
                                    for (t = m + 1; t < l.length; t++)
                                        !v && l[t].character == g.decimalSeparator && l[t].isSeparator ? q += l[t].character : l[t].canEdit && l[t].character != g.promptChar && (q += l[t].character);
                                    g.setvalue("decimal", q);
                                    n = g._getString();
                                    if (0 > g.decimalSeparatorPosition && p == l[k])
                                        return g._setSelectionStart(m),
                                        !1;
                                    p = n.indexOf(g.symbol);
                                    q = g.getvalue("negative") ? 1 : 0;
                                    p <= q && (p = n.length);
                                    f.start < p ? g._setSelectionStart(m + 1) : g._setSelectionStart(m);
                                    f.length == g.numberInput.val().length && (m = g._moveCaretToDecimalSeparator(),
                                    g._setSelectionStart(m - 1))
                                }
                                return !1
                            }
                        }
                    })
                }
            }
        },
        _handleKeyPress: function(b, d) {
            var c = this._selection();
            if ((b = b.ctrlKey || b.metaKey) && 97 == d || b && 65 == d)
                return !0;
            if (8 == d)
                return 0 < c.start && this._setSelectionStart(c.start),
                !1;
            if (46 == d)
                return c.start < this.items.length && this._setSelectionStart(c.start),
                !1;
            e.jqx.browser.mozilla || 45 != d && 173 != d && 109 != d && 189 != d || (0 == this.getvalue("negative") ? this.setvalue("negative", !0) : this.setvalue("negative", !1));
            e.jqx.browser.msie && this._insertKey(d);
            return this._isSpecialKey(d)
        },
        _deleteSelectedText: function() {
            var b = this._selection()
              , d = ""
              , c = this._getSeparatorPosition()
              , f = this._getVisibleItems()
              , g = this._getHiddenPrefixCount();
            this.numberInput.val().length == b.start && 0 == b.length && (this._setSelection(b.start, b.start + 1),
            b = this._selection());
            for (var h = 0; h < b.start; h++)
                f[h].canEdit && f[h].character != this.promptChar ? d += f[h].character : f[h].canEdit || -1 == this.decimalSeparatorPosition || f[h] != f[this.decimalSeparatorPosition - g] || (0 == d.length && (d = "0"),
                d += f[h].character);
            for (h = b.start; h < b.end; h++)
                h > c && -1 != this.decimalSeparatorPosition ? f[h].canEdit && f[h].character != this.promptChar && (d += "0") : f[h].canEdit || -1 == this.decimalSeparatorPosition || f[h] != f[this.decimalSeparatorPosition - g] || (0 == d.length && (d = "0"),
                d += f[h].character);
            for (h = b.end; h < f.length; h++)
                f[h].canEdit && f[h].character != this.promptChar ? d += f[h].character : f[h].canEdit || -1 == this.decimalSeparatorPosition || f[h] != f[this.decimalSeparatorPosition - g] || (0 == d.length && (d = "0"),
                d += f[h].character);
            this.setvalue("decimal", d);
            return 0 < b.length
        },
        _restoreInitialState: function() {
            var b = parseInt(this.decimalDigits);
            0 < b && (b += 2);
            for (var d = this.items.length - 1; d > this.items.length - 1 - b && this.items[d]; d--)
                this.items[d].canEdit && this.items[d].character == this.promptChar && (this.items[d].character = 0)
        },
        clear: function() {
            this.setDecimal(0)
        },
        clearDecimal: function() {
            if ("textbox" == this.inputMode)
                this.numberInput.val();
            else {
                for (var b = 0; b < this.items.length; b++)
                    this.items[b].canEdit && (this.items[b].character = this.promptChar);
                this._restoreInitialState()
            }
        },
        _saveSelectedText: function() {
            var b = this._selection()
              , d = ""
              , c = this._getVisibleItems();
            if (0 < b.start || 0 < b.length)
                for (var f = b.start; f < b.end; f++)
                    c[f].canEdit && c[f].character != this.promptChar ? d += c[f].character : c[f].isSeparator && (d += c[f].character);
            e.jqx.browser.msie && window.clipboardData.setData("Text", d);
            return d
        },
        _pasteSelectedText: function() {
            this._selection();
            this.selectedText = e.data(document.body, "jqxSelection");
            if (window.clipboardData) {
                var b = window.clipboardData.getData("Text");
                if (b != this.selectedText && 0 < b.length && (this.selectedText = window.clipboardData.getData("Text"),
                null == this.selectedText || void 0 == this.selectedText))
                    return
            }
            this._getVisibleItems();
            if (null != this.selectedText)
                for (b = 0; b < this.selectedText.length; b++) {
                    var d = parseInt(this.selectedText[b]);
                    isNaN(d) || this._insertKey(48 + d)
                }
        },
        _getHiddenPrefixCount: function() {
            var b = 0;
            this.negative || b++;
            if ("left" == this.symbolPosition)
                for (var d = 0; d < this.symbol.length; d++)
                    "" == this.symbol.substring(d, d + 1) && b++;
            return b
        },
        _getEditableItem: function() {
            for (var b = this._selection(), d = 0; d < this.items.length; d++)
                if (d < b.start && this.items[d].canEdit && this.items[d].character != this.promptChar)
                    return this.items[d];
            return null
        },
        _getEditableItems: function() {
            for (var b = [], d = 0, c = 0; c < this.items.length; c++)
                this.items[c].canEdit && (b[d] = this.items[c],
                d++);
            return b
        },
        _getValidSelectionStart: function(b) {
            for (b = this.items.length - 1; 0 <= b; b--)
                if (this.items[b].canEdit && this.items[b].character != this.promptChar)
                    return b;
            return -1
        },
        _getEditableItemIndex: function(b) {
            b = this._selection();
            for (var d = this._getHiddenPrefixCount(), c = this._getVisibleItems(), f = b.start, g = -1, h = 0; h < f; h++)
                h < c.length && c[h].canEdit && (g = h + d);
            if (-1 == g && 0 < b.length)
                for (f = b.end,
                h = 0; h < f; h++)
                    if (h < c.length && c[h].canEdit) {
                        g = h + d;
                        break
                    }
            return g
        },
        _getEditableItemByIndex: function(b) {
            for (var d = 0; d < this.items.length; d++)
                if (d > b && this.items[d].canEdit && this.items[d].character != this.promptChar)
                    return d;
            return -1
        },
        _getFirstEditableItemIndex: function() {
            for (var b = this._getVisibleItems(), d = 0; d < b.length; d++)
                if (b[d].character != this.promptChar && b[d].canEdit && "0" != b[d].character)
                    return d;
            return -1
        },
        _getLastEditableItemIndex: function() {
            for (var b = this._getVisibleItems(), d = b.length - 1; 0 <= d; d--)
                if (b[d].character != this.promptChar && b[d].canEdit)
                    return d;
            return -1
        },
        _moveCaretToDecimalSeparator: function() {
            for (var b = this.items.length - 1; 0 <= b; b--)
                if (this.items[b].character == this.decimalSeparator && this.items[b].isSeparator)
                    return this.negative ? this._setSelectionStart(b + 1) : this._setSelectionStart(b),
                    b;
            return this.numberInput.val().length
        },
        _handleBackspace: function() {
            var b = this._selection()
              , d = this._getHiddenPrefixCount()
              , c = this._getEditableItemIndex() - d
              , f = this._getFirstVisibleNonEmptyIndex();
            d = !1;
            this.negative && (d = !0,
            f >= c + 1 || 0 == b.start) && (this.setvalue("negative", !1),
            0 == b.length && (this._setSelectionStart(b.start - 1),
            b = this._selection()));
            if (0 <= c) {
                if (0 == b.length && -1 != c && this._setSelection(c, c + 1),
                (c = b.start > this._getSeparatorPosition() + 1 && 0 < this.decimalSeparatorPosition) && (b = this._selection()),
                this._deleteSelectedText(),
                1 > b.length || c ? this._setSelectionStart(b.start) : 1 <= b.length && this._setSelectionStart(b.end),
                b.length == this.numberInput.val().length || d)
                    b = this._moveCaretToDecimalSeparator(),
                    this._setSelectionStart(b - 1)
            } else
                this._setSelectionStart(b.start)
        },
        _handleKeyDown: function(b, d) {
            var c = this._selection()
              , f = b.ctrlKey || b.metaKey;
            if ((8 == d || 46 == d) && f)
                return this.setDecimal(null),
                !1;
            if (this.rtl && 37 == d)
                return b = (d = b.shiftKey) ? 1 : 0,
                d ? this._setSelection(c.start + 1 - b, c.start + c.length + 1) : this._setSelection(c.start + 1 - b, c.start + 1),
                !1;
            if (this.rtl && 39 == d)
                return (d = b.shiftKey) ? this._setSelection(c.start - 1, c.length + (d ? 1 : 0) + c.start - 1) : this._setSelection(c.start - 1, c.start - 1),
                !1;
            if (f && 97 == d || f && 65 == d)
                return !0;
            if (f && 120 == d || f && 88 == d)
                return this.selectedText = this._saveSelectedText(b),
                e.data(document.body, "jqxSelection", this.selectedText),
                this._handleBackspace(),
                !1;
            if (f && 99 == d || f && 67 == d)
                return this.selectedText = this._saveSelectedText(b),
                e.data(document.body, "jqxSelection", this.selectedText),
                !1;
            if (f && 122 == d || f && 90 == d)
                return !1;
            if (f && 118 == d || f && 86 == d || b.shiftKey && 45 == d)
                return this._pasteSelectedText(),
                !1;
            0 <= c.start && c.start < this.items.length && String.fromCharCode(d);
            if (8 == d)
                return this._handleBackspace(),
                !1;
            if (190 == d || 110 == d || 188 === d && "," === this.decimalSeparator)
                return this._moveCaretToDecimalSeparator(),
                !1;
            if (188 == d && "," === this.groupSeparator) {
                d = this.numberInput.val();
                for (c = c.start; c < d.length; c++)
                    if (d[c] == this.groupSeparator) {
                        this._setSelectionStart(1 + c);
                        break
                    }
                return !1
            }
            if (null == e.jqx.browser.msie && (f = String.fromCharCode(d),
            f = parseInt(f),
            96 <= d && 105 >= d && (f = d - 96,
            d -= 48),
            !isNaN(f)))
                return this._insertKey(d),
                !1;
            if (46 == d) {
                d = this._getVisibleItems();
                if (c.start < d.length) {
                    b = 0 == d[c.start].canEdit ? 2 : 1;
                    if (0 == c.start && this.negative && (this.setvalue("negative", !1),
                    0 == c.length && this._setSelectionStart(0),
                    c = this._selection(),
                    0 == c.length))
                        return !1;
                    0 == c.length && this._setSelection(c.start + b, c.start + b + c.length);
                    this._handleBackspace();
                    1 > new Number(this.decimal) || c.start > this._getSeparatorPosition() ? this._setSelectionStart(c.end + b) : c.start + 1 < this.decimalSeparatorPosition && this._setSelectionStart(c.end + b)
                }
                return !1
            }
            if (38 == d)
                return this.spinUp(),
                !1;
            if (40 == d)
                return this.spinDown(),
                !1;
            27 === d && (this.setDecimal(this._savedValue),
            this._setSelectionStart(c.end),
            b.preventDefault());
            c = this._isSpecialKey(d);
            !e.jqx.browser.mozilla || 45 != d && 173 != d && 109 != d && 189 != d || (0 == this.getvalue("negative") ? this.setvalue("negative", !0) : this.setvalue("negative", !1));
            return e.jqx.browser.mozilla ? c : !0
        },
        _isSpecialKey: function(b) {
            return 8 != b && 9 != b && 13 != b && 35 != b && 36 != b && 37 != b && 39 != b && 27 != b && 46 != b ? !1 : !0
        },
        _selection: function() {
            try {
                if ("selectionStart"in this.numberInput[0]) {
                    var b = this.numberInput[0]
                      , d = b.selectionEnd - b.selectionStart;
                    return {
                        start: b.selectionStart,
                        end: b.selectionEnd,
                        length: d,
                        text: b.value
                    }
                }
                var c = document.selection.createRange();
                if (null == c)
                    return {
                        start: 0,
                        end: b.value.length,
                        length: 0
                    };
                var f = this.numberInput[0].createTextRange()
                  , g = f.duplicate();
                f.moveToBookmark(c.getBookmark());
                g.setEndPoint("EndToStart", f);
                d = c.text.length;
                return {
                    start: g.text.length,
                    end: g.text.length + c.text.length,
                    length: d,
                    text: c.text
                }
            } catch (h) {
                return {
                    start: 0,
                    end: 0,
                    length: 0
                }
            }
        },
        selectAll: function() {
            var b = this.numberInput;
            setTimeout(function() {
                if ("selectionStart"in b[0])
                    b[0].focus(),
                    b[0].setSelectionRange(0, b[0].value.length);
                else {
                    var d = b[0].createTextRange();
                    d.collapse(!0);
                    d.moveEnd("character", b[0].value.length);
                    d.moveStart("character", 0);
                    d.select()
                }
            }, 10)
        },
        _setSelection: function(b, d) {
            if (1 != this._disableSetSelection && !e.jqx.mobile.isTouchDevice() && 1 != this.touchMode)
                try {
                    if ("selectionStart"in this.numberInput[0])
                        this.numberInput[0].focus(),
                        this.numberInput[0].setSelectionRange(b, d);
                    else {
                        var c = this.numberInput[0].createTextRange();
                        c.collapse(!0);
                        c.moveEnd("character", d);
                        c.moveStart("character", b);
                        c.select()
                    }
                } catch (f) {}
        },
        _setSelectionStart: function(b) {
            this._setSelection(b, b);
            e.data(this.numberInput, "selectionstart", b)
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            this._render(!1)
        },
        _render: function(b) {
            var d = parseInt(this.host.css("border-left-width"))
              , c = parseInt(this.host.css("border-left-width"))
              , f = parseInt(this.host.css("border-left-width"))
              , g = parseInt(this.host.css("border-left-width"));
            this.numberInput.css("padding-top", "0px");
            this.numberInput.css("padding-bottom", "0px");
            var h = window.getComputedStyle(this.element)
              , k = 2 * parseInt(h.borderLeftWidth);
            if ("border-box" === h.boxSizing || isNaN(k))
                k = 0;
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) - k + "px" : void 0 == this.width || isNaN(this.width) || (this.element.style.width = parseInt(this.width) - k + "px");
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) - k + "px" : void 0 == this.height || isNaN(this.height) || (this.element.style.height = parseInt(this.height) - k + "px");
            h = this.host.width();
            k = this.host.height();
            this.numberInput.css({
                "border-left-width": 0,
                "border-right-width": 0,
                "border-bottom-width": 0,
                "border-top-width": 0
            });
            isNaN(f) && (f = 1);
            isNaN(c);
            isNaN(g);
            isNaN(d);
            this.numberInput.css("text-align", this.textAlign);
            d = this.numberInput.css("font-size");
            "" == d && (d = 13);
            this.numberInput.css("height", parseInt(d) + 4 + "px");
            this.numberInput.css("width", h - 2);
            f = k - 2 * f - parseInt(d) - 2;
            isNaN(f) && (f = 0);
            0 > f && (f = 0);
            this.spinButtons && this.spincontainer && (h -= parseInt(this.spinButtonsWidth - 2),
            e.jqx.mobile.isTouchDevice() || !0 === this.touchMode ? (this.spincontainer.width(2 * this.spinButtonsWidth),
            h -= this.spinButtonsWidth,
            this.upbutton.height("100%"),
            this.downbutton.height("100%"),
            this.downbutton.css("float", "left"),
            this.upbutton.css("float", "right"),
            this.upbutton.width(this.spinButtonsWidth),
            this.downbutton.width(1 + this.spinButtonsWidth)) : (this.spincontainer.width(this.spinButtonsWidth),
            this.upbutton.width(this.spinButtonsWidth + 2),
            this.downbutton.width(this.spinButtonsWidth + 2),
            this.upbutton.height("50%"),
            this.downbutton.height("50%"),
            this.spincontainer.width(this.spinButtonsWidth)),
            this._upArrow.height("100%"),
            this._downArrow.height("100%"),
            this.numberInput.css("width", h - 6),
            this.numberInput.css("margin-right", "2px"));
            d = f / 2;
            e.jqx.browser.msie && 8 > e.jqx.browser.version && (d = f / 4);
            this.numberInput.css("padding-left", "0px");
            this.numberInput.css("padding-right", "0px");
            this.numberInput.css("padding-top", Math.round(d) + "px");
            this.numberInput.css("padding-bottom", Math.round(d) + "px");
            if (void 0 == b || 1 == b)
                this.numberInput.val(this._getString()),
                "advanced" != this.inputMode && this._parseDecimalInSimpleMode();
            this._addBarAndLabel(this.numberInput);
            this._updateHint()
        },
        _addBarAndLabel: function(b) {
            if (null === this.bar && null === this.label) {
                var d = e("<label></label");
                this.hint && (d[0].innerHTML = this.placeHolder);
                d.addClass(this.toThemeProperty("jqx-input-label"));
                b.after(d);
                this.label = d;
                d = e("<span></span>");
                b.after(d);
                d.addClass(this.toThemeProperty("jqx-input-bar"));
                this.spinButtons ? d.css("top", this.host.height()) : d.css("top", "0px");
                this.bar = d;
                this.template && (this.bar.addClass(this.toThemeProperty("jqx-" + this.template)),
                this.label.addClass(this.toThemeProperty("jqx-" + this.template)))
            }
        },
        destroy: function() {
            this._removeHandlers();
            this.host.remove()
        },
        inputValue: function(b) {
            if (void 0 === b)
                return this._value();
            this.propertyChangedHandler(this, "value", this._value, b);
            this._refreshValue();
            return this
        },
        val: function(b) {
            if (void 0 !== b && "object" != typeof b || null === b)
                if (null === b)
                    this.setDecimal(null);
                else if (0 > b)
                    this.setDecimal(b);
                else {
                    b = b.toString();
                    -1 < b.indexOf(this.symbol) && (b = b.replace(this.symbol, ""));
                    b = b.replace(this.decimalSeparator, ".");
                    var d = this.groupSeparator
                      , c = b;
                    if ("" != d) {
                        for (b = c.indexOf(d); -1 != b; )
                            c = c.replace(d, ""),
                            b = c.indexOf(d);
                        b = c
                    }
                    d = "";
                    for (c = 0; c < b.length; c++) {
                        var f = b.substring(c, c + 1);
                        "-" === f && (d += "-");
                        "." === f && (d += ".");
                        null != f.match(/^[0-9]+$/) && (d += f)
                    }
                    b = d.replace(/ /g, "");
                    b = b.replace(".", this.decimalSeparator);
                    this._setDecimal(b)
                }
            else
                return this.getDecimal()
        },
        getDecimal: function() {
            if (null == this.decimal)
                return null;
            "simple" == this.inputMode && (this._parseDecimalInSimpleMode(!1),
            this.decimal = this._getDecimalInSimpleMode(this.decimal));
            return "" == this.decimal ? 0 : this.getvalue("negative") && 0 < this.decimal ? -parseFloat(this.decimal) : parseFloat(this.decimal)
        },
        setDecimal: function(b) {
            var d = b;
            if ("." != this.decimalSeparator)
                if (null === b)
                    this._setDecimal(b);
                else {
                    var c = b;
                    if ("number" != typeof b) {
                        b = b.toString();
                        var f = b.indexOf(".");
                        if (-1 != f) {
                            var g = b.substring(0, f);
                            b = b.substring(f + 1);
                            c = g + "." + b;
                            -1 != g.indexOf("-") && (g = g.substring(1));
                            b = "advanced" != this.inputMode ? g + "." + b : g + this.decimalSeparator + b
                        } else
                            f = b.indexOf(this.decimalSeparator),
                            -1 != f && (g = b.substring(0, f),
                            b = b.substring(f + 1),
                            c = g + "." + b,
                            -1 != g.indexOf("-") && (g = g.substring(1)),
                            b = "advanced" != this.inputMode ? g + "." + b : g + this.decimalSeparator + b)
                    }
                    0 > c ? this.setvalue("negative", !0) : this.setvalue("negative", !1);
                    null === b ? this._setDecimal(b) : this._setDecimal(Math.abs(b))
                }
            else
                0 > b ? this.setvalue("negative", !0) : this.setvalue("negative", !1),
                null === b ? this._setDecimal(b) : this._setDecimal(Math.abs(b));
            null == d && this.numberInput.val("");
            this._updateHint()
        },
        _setDecimal: function(b) {
            this.allowNull || null != b || (b = this.decimal = 0);
            if (null == b)
                this.value = this.decimal = null,
                this.clearDecimal(),
                this._refreshValue(),
                this.value = this.decimal = null,
                this.ValueString = "";
            else {
                -1 != b.toString().indexOf("e") && (b = (new Number(b)).toFixed(this.decimalDigits).toString());
                this.clearDecimal();
                var d = b.toString()
                  , c = ""
                  , f = ""
                  , g = !0;
                0 == d.length && (d = "0");
                for (var h = 0; h < d.length; h++) {
                    if ("number" == typeof b) {
                        if ("." == d.substring(h, h + 1)) {
                            g = !1;
                            continue
                        }
                    } else if (d.substring(h, h + 1) == this.decimalSeparator) {
                        g = !1;
                        continue
                    }
                    g ? c += d.substring(h, h + 1) : f += d.substring(h, h + 1)
                }
                0 < c.length && (c = parseFloat(c).toString());
                h = this.digits;
                h < c.length && (c = c.substr(0, h));
                d = 0;
                g = this._getSeparatorPosition();
                h = this._getHiddenPrefixCount();
                for (h = g += h; 0 <= h; h--)
                    h < this.items.length && this.items[h].canEdit && d < c.length && (this.items[h].character = c.substring(c.length - d - 1, c.length - d),
                    d++);
                d = 0;
                for (h = g; h < this.items.length; h++)
                    this.items[h].canEdit && d < f.length && (this.items[h].character = f.substring(d, d + 1),
                    d++);
                this._refreshValue();
                "." == this.decimalSeparator ? this.ValueString = (new Number(b)).toFixed(this.decimalDigits) : (c = b.toString().indexOf(this.decimalSeparator),
                0 < c ? (b = b.toString().substring(0, c) + "." + b.toString().substring(c + 1),
                this.ValueString = (new Number(b)).toFixed(this.decimalDigits)) : this.ValueString = (new Number(b)).toFixed(this.decimalDigits));
                "advanced" != this.inputMode && (this._parseDecimalInSimpleMode(),
                this._raiseEvent(1, this.ValueString));
                "textbox" == this.inputMode && (this.decimal = this.ValueString,
                this.getvalue("negative") && (this.decimal = "-" + this.ValueString));
                b = this.val();
                b < this.min || b > this.max ? this.host.addClass("jqx-input-invalid") : this.host.removeClass("jqx-input-invalid");
                this._updateHint()
            }
        },
        _getSeparatorPosition: function() {
            var b = this._getHiddenPrefixCount();
            return 0 < this.decimalSeparatorPosition ? this.decimalSeparatorPosition - b : this.items.length - b
        },
        _setTheme: function() {
            this.host.removeClass();
            this.host.addClass(this.toThemeProperty("jqx-input"));
            this.host.addClass(this.toThemeProperty("jqx-rc-all"));
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.host.addClass(this.toThemeProperty("jqx-widget-content"));
            this.host.addClass(this.toThemeProperty("jqx-numberinput"));
            this.spinButtons && (this.downbutton.removeClass(),
            this.upbutton.removeClass(),
            this.downbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")),
            this.upbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")),
            this._upArrow.removeClass(),
            this._downArrow.removeClass(),
            this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up")),
            this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down")));
            this.numberInput.removeClass();
            this.numberInput.addClass(this.toThemeProperty("jqx-input-content"))
        },
        propertiesChangedHandler: function(b, d, c) {
            c && c.width && c.height && 2 == Object.keys(c).length && b._render()
        },
        propertyChangedHandler: function(b, d, c, f) {
            if (!(b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && 2 == Object.keys(b.batchUpdate).length)) {
                "template" == d && (b.upbutton.removeClass(b.toThemeProperty("jqx-" + b.template)),
                b.downbutton.removeClass(b.toThemeProperty("jqx-" + b.template)),
                b.upbutton.addClass(b.toThemeProperty("jqx-" + b.template)),
                b.downbutton.addClass(b.toThemeProperty("jqx-" + b.template)));
                if (("digits" == d || "groupSize" == d || "decimalDigits" == d) && 0 > f)
                    throw new Exception(this.invalidArgumentExceptions[0]);
                "placeHolder" == d && (b.isMaterialized() ? b.hint && (b.label[0].innerHTML = b.placeHolder) : b.numberInput.attr("placeholder", b.placeHolder));
                "theme" === d && e.jqx.utilities.setTheme(c, f, b.host);
                "digits" == d && f != c && (b.digits = parseInt(f));
                if ("min" == d || "max" == d)
                    e.jqx.aria(b, "aria-value" + d, f.toString()),
                    b._refreshValue();
                "decimalDigits" == d && f != c && (b.decimalDigits = parseInt(f));
                if ("decimalSeparator" == d || "digits" == d || "symbol" == d || "symbolPosition" == d || "groupSize" == d || "groupSeparator" == d || "decimalDigits" == d || "negativeSymbol" == d) {
                    var g = b.decimal;
                    "decimalSeparator" == d && "" == f && (f = " ");
                    c != f && (b._selection(),
                    b.items = [],
                    b._initializeLiterals(),
                    b.value = b._getString(),
                    b._refreshValue(),
                    b._setDecimal(g))
                }
                "rtl" == d && (b.rtl ? (b.spincontainer && (b.spincontainer.css("float", "right"),
                b.spincontainer.css("border-right-width", "1px")),
                b.numberInput.css("float", "right")) : (b.spincontainer && (b.spincontainer.css("float", "right"),
                b.spincontainer.css("border-right-width", "1px")),
                b.numberInput.css("float", "left")));
                "spinButtons" == d && (b.spincontainer ? (f ? b.spincontainer.css("display", "block") : b.spincontainer.css("display", "none"),
                b._render()) : b._spinButtons());
                "touchMode" === d && (b.inputMode = "textbox",
                b.spinMode = "simple",
                b.render());
                "negative" == d && "advanced" == b.inputMode && (c = b._selection(),
                f ? (b.items[0].character = b.negativeSymbol[0],
                g = 1) : (b.items[0].character = "",
                g = -1),
                b._refreshValue(),
                b.isInitialized && b._setSelection(c.start + g, c.end + g));
                "decimal" == d && (b.value = f,
                b.setDecimal(f));
                "value" === d && (b.value = f,
                b.setDecimal(f),
                b._raiseEvent(1, f));
                "textAlign" == d && (b.textAlign = f,
                b._render());
                "disabled" == d && (b.numberInput.attr("disabled", f),
                b.disabled ? b.host.addClass(b.toThemeProperty("jqx-fill-state-disabled")) : b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled")),
                e.jqx.aria(b, "aria-disabled", f.toString()));
                "readOnly" == d && (b.readOnly = f);
                if ("promptChar" == d) {
                    for (c = 0; c < b.items.length; c++)
                        b.items[c].character == b.promptChar && (b.items[c].character = f);
                    b.promptChar = f
                }
                "width" == d ? (b.width = f,
                b._render()) : "height" == d && (b.height = f,
                b._render())
            }
        },
        _value: function() {
            return this.value
        },
        _refreshValue: function() {
            if ("textbox" !== this.inputMode) {
                var b = this.value = this._getString();
                for (var d = "", c = 0; c < this.items.length; c++) {
                    var f = this.items[c];
                    f.canEdit && f.character != this.promptChar && (d += f.character);
                    c == this.decimalSeparatorPosition && (d += ".")
                }
                this.decimal = d;
                d = !1;
                this.oldValue !== b && (this.oldValue = b,
                this._raiseEvent(0, b),
                d = !0);
                "simple" != this.inputMode && (this.numberInput.val(b),
                d && this._raiseEvent(1, b));
                null == b && this.numberInput.val("")
            }
        }
    })
}
)(jqxBaseFramework);
(function(e) {
    e.jqx.jqxWidget("jqxPasswordInput", "", {});
    e.extend(e.jqx._jqxPasswordInput.prototype, {
        defineInstance: function() {
            var b = {
                width: null,
                height: null,
                disabled: !1,
                rtl: !1,
                placeHolder: null,
                showStrength: !1,
                showStrengthPosition: "right",
                maxLength: null,
                minLength: null,
                showPasswordIcon: !0,
                strengthTypeRenderer: null,
                passwordStrength: null,
                changeType: null,
                hint: !0,
                localization: {
                    passwordStrengthString: "Password strength",
                    tooShort: "Too short",
                    weak: "Weak",
                    fair: "Fair",
                    good: "Good",
                    strong: "Strong",
                    showPasswordString: "Show Password"
                },
                strengthColors: {
                    tooShort: "rgb(170, 0, 51)",
                    weak: "rgb(170, 0, 51)",
                    fair: "rgb(255, 204, 51)",
                    good: "rgb(45, 152, 243)",
                    strong: "rgb(118, 194, 97)"
                }
            };
            if (this === e.jqx._jqxPasswordInput.prototype)
                return b;
            e.extend(!0, this, b);
            return b
        },
        createInstance: function() {
            this._inDOM = document.body.contains(this.element);
            this.render()
        },
        render: function() {
            var b = this
              , d = e.jqx.browser.version;
            this._browserCheck = "msie" != e.jqx.browser.browser || "7.0" != d && "8.0" != d;
            this.widgetID = b.element.id;
            if ("password" != this.element.getAttribute("type"))
                throw "Invalid input type. Please set the type attribute of the input element to password.";
            this.input = this.element;
            if (b.isMaterialized()) {
                d = e("<div></div>");
                d.addClass(b.toThemeProperty("jqx-input-group"));
                this.host.after(d);
                var c = this.element
                  , f = this.host.data();
                d.append(c);
                c = e("<label></label");
                this.hint && (c[0].innerHTML = this.placeHolder);
                c.addClass(b.toThemeProperty("jqx-input-label"));
                d.append(c);
                var g = e("<span></span>");
                d.append(g);
                g.addClass(b.toThemeProperty("jqx-input-bar"));
                d[0].id = this.element.id;
                this.element.removeAttribute("id");
                d[0].style.cssText = this.element.style.cssText;
                b.input = b.element;
                this.element.style.cssText = "";
                this.bar = g;
                this.label = c;
                this.host = d;
                this.element = d[0];
                this.host.data(f);
                b = this;
                b.template && (b.bar.addClass(b.toThemeProperty("jqx-" + b.template)),
                b.label.addClass(b.toThemeProperty("jqx-" + b.template)))
            }
            b._hidden = !0;
            b._setTheme();
            b._setAttributes();
            b._showPassword();
            b._showStrength();
            e.jqx.utilities.resize(this.host, function() {
                if (!b._inDOM) {
                    var h = b.element.parentNode;
                    b.element.nextSibling ? h.insertBefore(b.icon, b.element.nextSibling) : h.appendChild(b.icon);
                    b._inDOM = !0
                } else if (b.element === document.activeElement || b.isMaterialized())
                    b._positionIcon(),
                    b.showStrength && b.host.jqxTooltip("close")
            })
        },
        refresh: function(b) {
            b || (this.removeHandler(this.host, "change.passwordinput" + this.widgetID),
            this.removeHandler(this.host, "focus.passwordinput" + this.widgetID),
            this.removeHandler(this.host, "blur.passwordinput" + this.widgetID),
            this.removeHandler(this.host, "click.passwordinput" + this.widgetID),
            this.removeHandler(this.host, "keyup.passwordinput" + this.widgetID),
            this.removeHandler(this.icon, "mousedown.passwordinput" + this.widgetID),
            this.removeHandler(e(document), "mouseup.passwordinput" + this.widgetID),
            this.removeHandler(e(document), "mousedown.passwordinput" + this.widgetID),
            this._setAttributes(),
            this._setTheme(),
            this._showPassword(),
            this._showStrength())
        },
        val: function(b) {
            var d = this.input.value
              , c = "placeholder"in this.input;
            if (e.isEmptyObject(b) && "" !== b)
                return c || d !== this.placeHolder || (d = ""),
                d;
            if (!c || b !== d) {
                if (!c) {
                    if ("" === b) {
                        d !== this.placeHolder && (this.input.value = this.placeHolder,
                        this.input.setAttribute("type", "text"));
                        return
                    }
                    this.input.setAttribute("type", "password")
                }
                this.input.value = b;
                c && this.isMaterialized() && this._refreshPlaceHolder();
                !0 === this.showStrength && this._evaluateStrength()
            }
        },
        propertyChangedHandler: function(b, d, c, f) {
            "theme" === d ? e.jqx.utilities.setTheme(c, f, b.host) : "disabled" == d ? b.disabled ? (b.element.setAttribute("disabled", "disabled"),
            b.element.className += " " + b.toThemeProperty("jqx-fill-state-disabled")) : (b.host.removeAttr("disabled"),
            b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled"))) : "placeHolder" == d ? this._browserCheck && ("placeholder"in this.element ? b.element.setAttribute("placeholder", b.placeHolder) : "" === b.input.value ? (b.input.setAttribute("type", "text"),
            b.input.value = f) : b.input.value == c && (b.input.value = f)) : this.refresh()
        },
        resize: function(b, d) {
            this.width = b;
            this.height = d;
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = this.width : void 0 == this.width || isNaN(this.width) || (this.element.style.width = this.width + "px");
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = this.height : void 0 == this.height || isNaN(this.height) || (this.element.style.height = this.height + "px")
        },
        _setAttributes: function() {
            var b = this
              , d = b.element;
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = this.width : void 0 == this.width || isNaN(this.width) || (this.element.style.width = this.width + "px");
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = this.height : void 0 == this.height || isNaN(this.height) || (this.element.style.height = this.height + "px");
            null != this.height && -1 != this.height.toString().indexOf("%") && (this.element.style.height = this.height);
            null != this.width && -1 != this.width.toString().indexOf("%") && (this.element.style.width = this.width);
            b.maxLength && d.setAttribute("maxlength", b.maxLength);
            b.minLength && d.setAttribute("minLength", b.minLength);
            b.placeHolder && b._browserCheck && ("placeholder"in b.element ? d.setAttribute("placeholder", b.placeHolder) : "" === d.value && (d.setAttribute("type", "text"),
            d.value = b.placeHolder));
            b.disabled ? (d.setAttribute("disabled", "disabled"),
            d.className += " " + this.toThemeProperty("jqx-fill-state-disabled")) : (d.removeAttribute("disabled"),
            b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled")));
            var c = !1;
            b.addHandler(d, "change.passwordinput" + b.widgetID, function(f) {
                c || (f.preventDefault(),
                f.stopPropagation(),
                c = !0,
                b._raiseEvent(),
                c = !1);
                b._refreshPlaceHolder()
            });
            b.addHandler(d, "click.passwordinput" + b.widgetID, function() {
                b.showPasswordIcon && b.icon && (b.icon.style.display = "inline",
                b._positionIcon())
            });
            b.interval = null;
            b.addHandler(d, "keydown.passwordinput" + b.widgetID, function() {
                b.changeType = "keyboard";
                if (b.showPasswordIcon && b.icon) {
                    b.interval && clearInterval(b.interval);
                    var f = 0;
                    b.interval = setInterval(function() {
                        "none" != b.icon.style.display ? (b._positionIcon(),
                        f++,
                        5 < f && clearInterval(b.interval)) : clearInterval(b.interval)
                    }, 100)
                }
            });
            b.addHandler(d, "focus.passwordinput" + b.widgetID, function() {
                b._focused = !0;
                d.className += " " + b.toThemeProperty("jqx-fill-state-focus");
                !b.placeHolder || !b._browserCheck || "placeholder"in b.element || d.value != b.placeHolder || (d.value = "",
                b._hidden && d.setAttribute("type", "password"));
                0 < b.val().length && b.showStrength && b.host.jqxTooltip("content") && b.host.jqxTooltip("open");
                b.showPasswordIcon && b.icon && (b.icon.style.display = "inline",
                b._positionIcon())
            });
            b.addHandler(d, "blur.passwordinput" + b.widgetID, function() {
                b._focused = !1;
                b.host.removeClass(b.toThemeProperty("jqx-fill-state-focus"));
                !b.placeHolder || !b._browserCheck || "placeholder"in b.input || "" !== d.value || (b.input.value = b.placeHolder,
                b.input.setAttribute("type", "text"));
                b.showPasswordIcon && b._browserCheck && (!1 === b.rtl ? b.host.removeClass(b.toThemeProperty("jqx-passwordinput-password-icon-ltr")) : b.host.removeClass(b.toThemeProperty("jqx-passwordinput-password-icon-rtl")));
                b.showStrength && b.host.jqxTooltip("close");
                b.showPasswordIcon && b.icon && (b.icon.style.display = "none")
            })
        },
        _refreshPlaceHolder: function() {
            this.isMaterialized() || ("placeholder"in this.input && !(e.jqx.browser.msie && 9 > e.jqx.browser.version) ? this.input.setAttribute("placeHolder", this.placeHolder) : "" === this.input.value && (this.input.value = this.placeHolder));
            "" !== this.input.value ? this.element.setAttribute("hint", !0) : this.element.removeAttribute("hint");
            this.label && (this.label.innerHTML = this.placeHolder)
        },
        destroy: function() {
            this.host.jqxTooltip && this.host.jqxTooltip("destroy");
            this.host.remove()
        },
        _setTheme: function() {
            var b = "jqx-widget jqx-widget-content jqx-input jqx-input-widget jqx-rc-all";
            this.rtl ? (b += " jqx-rtl",
            this.element.style.direction = "rtl") : (this.host.removeClass(this.toThemeProperty("jqx-rtl")),
            this.element.style.direction = "ltr");
            this.element.className += " " + this.toThemeProperty(b)
        },
        _showPassword: function() {
            if (this.showPasswordIcon && this._browserCheck) {
                var b = this
                  , d = document.createElement("span")
                  , c = ".passwordinput" + b.widgetID;
                d.setAttribute("tabindex", -1);
                d.setAttribute("hasfocus", !1);
                d.setAttribute("title", b.localization.showPasswordString);
                d.style.position = "absolute";
                d.style.display = "none";
                d.className = b.toThemeProperty("jqx-passwordinput-password-icon");
                var f = b.element.parentNode;
                f && (b.element.nextSibling ? f.insertBefore(d, b.element.nextSibling) : f.appendChild(d));
                b.icon = d;
                b._positionIcon();
                var g = function() {
                    b.element.setAttribute("type", "password");
                    b.input && b.input.setAttribute("type", "password");
                    b._hidden = !0
                }
                  , h = function() {
                    !1 === b._hidden ? g() : b._hidden && (b.element.setAttribute("type", "text"),
                    b.input && b.input.setAttribute("type", "text"),
                    b._hidden = !1)
                };
                e.jqx.mobile.isTouchDevice() ? b.addHandler(b.icon, "mousedown" + c, function() {
                    h();
                    return !1
                }) : (b.addHandler(b.icon, "mousedown" + c, function() {
                    h();
                    return !1
                }),
                b.addHandler(e(document), "mouseup" + c, function() {
                    g();
                    return !1
                }),
                b.addHandler(e(document), "mousedown" + c, function() {
                    b._focused && g()
                }))
            }
        },
        _positionIcon: function() {
            var b = this.host.offset()
              , d = this.element.offsetWidth
              , c = this.element.offsetHeight
              , f = e(this.icon);
            this.rtl ? f.offset({
                top: parseInt(b.top + c / 2 - 5, 10),
                left: b.left + 2
            }) : f.offset({
                top: parseInt(b.top + c / 2 - 5, 10),
                left: b.left + d - 18
            })
        },
        _showStrength: function() {
            if (this.showStrength)
                if (this.host.jqxTooltip) {
                    var b = this.widgetID + "Strength"
                      , d = b + "Value";
                    b += "Indicator";
                    if (this.strengthTypeRenderer) {
                        var c = this.input.value;
                        "placeholder"in this.input || !this._browserCheck || c != this.placeHolder || (c = "");
                        this._countCharacters();
                        c = this.strengthTypeRenderer(c, {
                            letters: this.letters,
                            numbers: this.numbers,
                            specialKeys: this.specials
                        }, this.localization.tooShort)
                    } else
                        c = '<div style="width: 220px;"><div><span style="font-weight: bold;">' + this.localization.passwordStrengthString + ': </span><span id="' + d + '"></span></div><div id="' + b + '"></div></div>';
                    this.host.jqxTooltip({
                        theme: this.theme,
                        position: this.showStrengthPosition,
                        content: c,
                        trigger: "none",
                        autoHide: !1,
                        rtl: this.rtl
                    });
                    this.strengthTypeRenderer || (b = document.getElementById(b),
                    document.getElementById(d).innerHTML = this.localization.tooShort,
                    b.className += " jqx-passwordinput-password-strength-inicator",
                    b.style.backgroundColor = this.strengthColors.tooShort,
                    b.style["float"] = !1 === this.rtl ? "left" : "right");
                    this._checkStrength()
                } else
                    throw Error("jqxPasswordInput: Missing reference to jqxtooltip.js");
        },
        _checkStrength: function() {
            var b = this;
            b.addHandler(b.host, "keyup.passwordinput" + b.widgetID, function() {
                b._evaluateStrength()
            })
        },
        _raiseEvent: function() {
            var b = new e.Event("change");
            b.args = {
                type: this.changeType
            };
            this.changeType = null;
            b.owner = this;
            return this.host.trigger(b)
        },
        _evaluateStrength: function() {
            var b = this.input.value
              , d = b.length;
            this._countCharacters();
            0 < d && this.showStrength && (this.host.jqxTooltip("opened") || this.host.jqxTooltip("open"));
            var c = this.letters + this.numbers + 2 * this.specials + this.letters * this.numbers / 2 + d;
            var f = 8 > d ? this.localization.tooShort : 20 > c ? this.localization.weak : 30 > c ? this.localization.fair : 40 > c ? this.localization.good : this.localization.strong;
            if (this.strengthTypeRenderer) {
                var g = this.strengthTypeRenderer(b, {
                    letters: this.letters,
                    numbers: this.numbers,
                    specialKeys: this.specials
                }, f);
                this.host.jqxTooltip({
                    content: g
                })
            } else {
                this.passwordStrength && (g = this.passwordStrength(b, {
                    letters: this.letters,
                    numbers: this.numbers,
                    specialKeys: this.specials
                }, f),
                e.each(this.localization, function() {
                    if (g == this)
                        return f = g,
                        !1
                }));
                document.getElementById(this.widgetID + "StrengthValue").innerHTML = f;
                b = document.getElementById(this.widgetID + "StrengthIndicator");
                switch (f) {
                case this.localization.tooShort:
                    var h = "20%";
                    var k = this.strengthColors.tooShort;
                    break;
                case this.localization.weak:
                    h = "40%";
                    k = this.strengthColors.weak;
                    break;
                case this.localization.fair:
                    h = "60%";
                    k = this.strengthColors.fair;
                    break;
                case this.localization.good:
                    h = "80%";
                    k = this.strengthColors.good;
                    break;
                case this.localization.strong:
                    h = "100%",
                    k = this.strengthColors.strong
                }
                b.style.width = h;
                b.style.backgroundColor = k
            }
        },
        _countCharacters: function() {
            this.specials = this.numbers = this.letters = 0;
            for (var b = this.input.value, d = b.length, c = 0; c < d; c++) {
                var f = b.charAt(c)
                  , g = b.charCodeAt(c);
                64 < g && 91 > g || 96 < g && 123 > g || 127 < g && 155 > g || 159 < g && 166 > g ? this.letters += 1 : !1 === isNaN(f) ? this.numbers += 1 : -1 != "<>@!#$%^&*()_+[]{}?:;|'\"\\,./~`-=".indexOf(f) && (this.specials += 1)
            }
        },
        _toPx: function(b) {
            return "number" === typeof b ? b + "px" : b
        }
    })
}
)(jqxBaseFramework);
(function(e, b, d) {
    function c(n, p) {
        n = b(n);
        n.data("JSGrid", this);
        this._container = n;
        this.data = [];
        this.fields = [];
        this._sortField = this._editingRow = null;
        this._sortOrder = "asc";
        this._firstDisplayingPage = 1;
        this._init(p);
        this.render()
    }
    var f = function(n, p) {
        return b.isFunction(n) ? n.apply(p, b.makeArray(arguments).slice(2)) : n
    }
      , g = function(n) {
        var p = b.Deferred();
        n && n.then ? n.then(function() {
            p.resolve.apply(p, arguments)
        }, function() {
            p.reject.apply(p, arguments)
        }) : p.resolve(n);
        return p.promise()
    }
      , h = {
        loadData: b.noop,
        insertItem: b.noop,
        updateItem: b.noop,
        deleteItem: b.noop
    };
    c.prototype = {
        width: "auto",
        height: "auto",
        updateOnResize: !0,
        rowClass: b.noop,
        rowRenderer: null,
        rowClick: function(n) {
            this.editing && this.editItem(b(n.event.target).closest("tr"))
        },
        rowDoubleClick: b.noop,
        noDataContent: "Not found",
        noDataRowClass: "jsgrid-nodata-row",
        heading: !0,
        headerRowRenderer: null,
        headerRowClass: "jsgrid-header-row",
        headerCellClass: "jsgrid-header-cell",
        filtering: !1,
        filterRowRenderer: null,
        filterRowClass: "jsgrid-filter-row",
        inserting: !1,
        insertRowRenderer: null,
        insertRowClass: "jsgrid-insert-row",
        editing: !1,
        editRowRenderer: null,
        editRowClass: "jsgrid-edit-row",
        confirmDeleting: !0,
        deleteConfirm: "Are you sure?",
        selecting: !0,
        selectedRowClass: "jsgrid-selected-row",
        oddRowClass: "jsgrid-row",
        evenRowClass: "jsgrid-alt-row",
        cellClass: "jsgrid-cell",
        sorting: !1,
        sortableClass: "jsgrid-header-sortable",
        sortAscClass: "jsgrid-header-sort jsgrid-header-sort-asc",
        sortDescClass: "jsgrid-header-sort jsgrid-header-sort-desc",
        paging: !1,
        pagerContainer: null,
        pageIndex: 1,
        pageSize: 20,
        pageButtonCount: 15,
        pagerFormat: "Pages: {first} {prev} {pages} {next} {last} &nbsp;&nbsp; {pageIndex} of {pageCount}",
        pagePrevText: "Prev",
        pageNextText: "Next",
        pageFirstText: "First",
        pageLastText: "Last",
        pageNavigatorNextText: "...",
        pageNavigatorPrevText: "...",
        pagerContainerClass: "jsgrid-pager-container",
        pagerClass: "jsgrid-pager",
        pagerNavButtonClass: "jsgrid-pager-nav-button",
        pagerNavButtonInactiveClass: "jsgrid-pager-nav-inactive-button",
        pageClass: "jsgrid-pager-page",
        currentPageClass: "jsgrid-pager-current-page",
        customLoading: !1,
        pageLoading: !1,
        autoload: !1,
        controller: h,
        loadIndication: !0,
        loadIndicationDelay: 500,
        loadMessage: "Please, wait...",
        loadShading: !0,
        invalidMessage: "Invalid data entered!",
        invalidNotify: function(n) {
            n = b.map(n.errors, function(p) {
                return p.message || null
            });
            e.alert([this.invalidMessage].concat(n).join("\n"))
        },
        onInit: b.noop,
        onRefreshing: b.noop,
        onRefreshed: b.noop,
        onPageChanged: b.noop,
        onItemDeleting: b.noop,
        onItemDeleted: b.noop,
        onItemInserting: b.noop,
        onItemInserted: b.noop,
        onItemEditing: b.noop,
        onItemUpdating: b.noop,
        onItemUpdated: b.noop,
        onItemInvalid: b.noop,
        onDataLoading: b.noop,
        onDataLoaded: b.noop,
        onOptionChanging: b.noop,
        onOptionChanged: b.noop,
        onError: b.noop,
        invalidClass: "jsgrid-invalid",
        containerClass: "jsgrid",
        tableClass: "jsgrid-table",
        gridHeaderClass: "jsgrid-grid-header",
        gridBodyClass: "jsgrid-grid-body",
        _init: function(n) {
            b.extend(this, n);
            this._initLoadStrategy();
            this._initController();
            this._initFields();
            this._attachWindowLoadResize();
            this._attachWindowResizeCallback();
            this._callEventHandler(this.onInit)
        },
        loadStrategy: function() {
            return this.pageLoading ? new jsGrid.loadStrategies.PageLoadingStrategy(this) : new jsGrid.loadStrategies.DirectLoadingStrategy(this)
        },
        _initLoadStrategy: function() {
            this._loadStrategy = f(this.loadStrategy, this)
        },
        _initController: function() {
            this._controller = b.extend({}, h, f(this.controller, this))
        },
        renderTemplate: function(n, p, q) {
            args = [];
            for (var t in q)
                args.push(q[t]);
            args.unshift(n, p);
            n = f.apply(null, args);
            return n === d || null === n ? "" : n
        },
        loadIndicator: function(n) {
            return new jsGrid.LoadIndicator(n)
        },
        validation: function(n) {
            return jsGrid.Validation && new jsGrid.Validation(n)
        },
        _initFields: function() {
            var n = this;
            n.fields = b.map(n.fields, function(p) {
                b.isPlainObject(p) && (p = new (p.type && jsGrid.fields[p.type] || jsGrid.Field)(p));
                p._grid = n;
                return p
            })
        },
        _attachWindowLoadResize: function() {
            b(e).on("load", b.proxy(this._refreshSize, this))
        },
        _attachWindowResizeCallback: function() {
            if (this.updateOnResize)
                b(e).on("resize", b.proxy(this._refreshSize, this))
        },
        _detachWindowResizeCallback: function() {
            b(e).off("resize", this._refreshSize)
        },
        option: function(n, p) {
            if (1 === arguments.length)
                return this[n];
            var q = {
                option: n,
                oldValue: this[n],
                newValue: p
            };
            this._callEventHandler(this.onOptionChanging, q);
            this._handleOptionChange(q.option, q.newValue);
            this._callEventHandler(this.onOptionChanged, {
                option: q.option,
                value: q.newValue
            })
        },
        fieldOption: function(n, p, q) {
            n = this._normalizeField(n);
            if (2 === arguments.length)
                return n[p];
            n[p] = q;
            this._renderGrid()
        },
        _handleOptionChange: function(n, p) {
            this[n] = p;
            switch (n) {
            case "width":
            case "height":
                this._refreshSize();
                break;
            case "rowClass":
            case "rowRenderer":
            case "rowClick":
            case "rowDoubleClick":
            case "noDataRowClass":
            case "noDataContent":
            case "selecting":
            case "selectedRowClass":
            case "oddRowClass":
            case "evenRowClass":
                this._refreshContent();
                break;
            case "pageButtonCount":
            case "pagerFormat":
            case "pagePrevText":
            case "pageNextText":
            case "pageFirstText":
            case "pageLastText":
            case "pageNavigatorNextText":
            case "pageNavigatorPrevText":
            case "pagerClass":
            case "pagerNavButtonClass":
            case "pageClass":
            case "currentPageClass":
            case "pagerRenderer":
                this._refreshPager();
                break;
            case "fields":
                this._initFields();
                this.render();
                break;
            case "data":
            case "editing":
            case "heading":
            case "filtering":
            case "inserting":
            case "paging":
                this.refresh();
                break;
            case "loadStrategy":
            case "pageLoading":
                this._initLoadStrategy();
                this.search();
                break;
            case "pageIndex":
                this.openPage(p);
                break;
            case "pageSize":
                this.refresh();
                this.search();
                break;
            case "editRowRenderer":
            case "editRowClass":
                this.cancelEdit();
                break;
            case "updateOnResize":
                this._detachWindowResizeCallback();
                this._attachWindowResizeCallback();
                break;
            case "invalidNotify":
            case "invalidMessage":
                break;
            default:
                this.render()
            }
        },
        destroy: function() {
            this._detachWindowResizeCallback();
            this._clear();
            this._container.removeData("JSGrid")
        },
        render: function() {
            this._renderGrid();
            return this.autoload ? this.loadData() : b.Deferred().resolve().promise()
        },
        _renderGrid: function() {
            this._clear();
            this._container.addClass(this.containerClass).css("position", "relative").append(this._createHeader()).append(this._createBody());
            this._pagerContainer = this._createPagerContainer();
            this._loadIndicator = this._createLoadIndicator();
            this._validation = this._createValidation();
            this.refresh()
        },
        _createLoadIndicator: function() {
            return f(this.loadIndicator, this, {
                message: this.loadMessage,
                shading: this.loadShading,
                container: this._container
            })
        },
        _createValidation: function() {
            return f(this.validation, this)
        },
        _clear: function() {
            this.cancelEdit();
            clearTimeout(this._loadingTimer);
            this._pagerContainer && this._pagerContainer.empty();
            this._container.empty().css({
                position: "",
                width: "",
                height: ""
            })
        },
        _createHeader: function() {
            var n = this._headerRow = this._createHeaderRow()
              , p = this._filterRow = this._createFilterRow()
              , q = this._insertRow = this._createInsertRow();
            n = this._headerGrid = b("<table>").addClass(this.tableClass).append(n).append(p).append(q);
            return this._header = b("<div>").addClass(this.gridHeaderClass).addClass(this._scrollBarWidth() ? "jsgrid-header-scrollbar" : "").append(n)
        },
        _createBody: function() {
            var n = this._content = b("<tbody>");
            n = this._bodyGrid = b("<table>").addClass(this.tableClass).append(n);
            return this._body = b("<div>").addClass(this.gridBodyClass).append(n).on("scroll", b.proxy(function(p) {
                this._header.scrollLeft(p.target.scrollLeft)
            }, this))
        },
        _createPagerContainer: function() {
            var n = this.pagerContainer || b("<div>").appendTo(this._container);
            return b(n).addClass(this.pagerContainerClass)
        },
        _eachField: function(n) {
            var p = this;
            b.each(this.fields, function(q, t) {
                t.visible && n.call(p, t, q)
            })
        },
        _createHeaderRow: function() {
            if (b.isFunction(this.headerRowRenderer))
                return b(this.renderTemplate(this.headerRowRenderer, this));
            var n = b("<tr>").addClass(this.headerRowClass);
            this._eachField(function(p, q) {
                var t = this._prepareCell("<th>", p, "headercss", this.headerCellClass).append(this.renderTemplate(p.headerTemplate, p)).appendTo(n);
                if (this.sorting && p.sorting)
                    t.addClass(this.sortableClass).on("click", b.proxy(function() {
                        this.sort(q)
                    }, this))
            });
            return n
        },
        _prepareCell: function(n, p, q, t) {
            return b(n).css("width", p.width).addClass(t || this.cellClass).addClass(q && p[q] || p.css).addClass(p.align ? "jsgrid-align-" + p.align : "")
        },
        _createFilterRow: function() {
            if (b.isFunction(this.filterRowRenderer))
                return b(this.renderTemplate(this.filterRowRenderer, this));
            var n = b("<tr>").addClass(this.filterRowClass);
            this._eachField(function(p) {
                this._prepareCell("<td>", p, "filtercss").append(this.renderTemplate(p.filterTemplate, p)).appendTo(n)
            });
            return n
        },
        _createInsertRow: function() {
            if (b.isFunction(this.insertRowRenderer))
                return b(this.renderTemplate(this.insertRowRenderer, this));
            var n = b("<tr>").addClass(this.insertRowClass);
            this._eachField(function(p) {
                this._prepareCell("<td>", p, "insertcss").append(this.renderTemplate(p.insertTemplate, p)).appendTo(n)
            });
            return n
        },
        _callEventHandler: function(n, p) {
            n.call(this, b.extend(p, {
                grid: this
            }));
            return p
        },
        reset: function() {
            this._resetSorting();
            this._resetPager();
            return this._loadStrategy.reset()
        },
        _resetPager: function() {
            this._firstDisplayingPage = 1;
            this._setPage(1)
        },
        _resetSorting: function() {
            this._sortField = null;
            this._sortOrder = "asc";
            this._clearSortingCss()
        },
        refresh: function() {
            this._callEventHandler(this.onRefreshing);
            this.cancelEdit();
            this._refreshHeading();
            this._refreshFiltering();
            this._refreshInserting();
            this._refreshContent();
            this._refreshPager();
            this._refreshSize();
            this._callEventHandler(this.onRefreshed)
        },
        _refreshHeading: function() {
            this._headerRow.toggle(this.heading)
        },
        _refreshFiltering: function() {
            this._filterRow.toggle(this.filtering)
        },
        _refreshInserting: function() {
            this._insertRow.toggle(this.inserting)
        },
        _refreshContent: function() {
            var n = this._content;
            n.empty();
            if (!this.data.length)
                return n.append(this._createNoDataRow()),
                this;
            for (var p = this._loadStrategy.firstDisplayIndex(), q = this._loadStrategy.lastDisplayIndex(); p < q; p++)
                n.append(this._createRow(this.data[p], p))
        },
        _createNoDataRow: function() {
            var n = 0;
            this._eachField(function() {
                n++
            });
            return b("<tr>").addClass(this.noDataRowClass).append(b("<td>").addClass(this.cellClass).attr("colspan", n).append(this.renderTemplate(this.noDataContent, this)))
        },
        _createRow: function(n, p) {
            if (b.isFunction(this.rowRenderer))
                var q = this.renderTemplate(this.rowRenderer, this, {
                    item: n,
                    itemIndex: p
                });
            else
                q = b("<tr>"),
                this._renderCells(q, n);
            q.addClass(this._getRowClasses(n, p)).data("JSGridItem", n).on("click", b.proxy(function(t) {
                this.rowClick({
                    item: n,
                    itemIndex: p,
                    event: t
                })
            }, this)).on("dblclick", b.proxy(function(t) {
                this.rowDoubleClick({
                    item: n,
                    itemIndex: p,
                    event: t
                })
            }, this));
            this.selecting && this._attachRowHover(q);
            return q
        },
        _getRowClasses: function(n, p) {
            var q = [];
            q.push((p + 1) % 2 ? this.oddRowClass : this.evenRowClass);
            q.push(f(this.rowClass, this, n, p));
            return q.join(" ")
        },
        _attachRowHover: function(n) {
            var p = this.selectedRowClass;
            n.hover(function() {
                b(this).addClass(p)
            }, function() {
                b(this).removeClass(p)
            })
        },
        _renderCells: function(n, p) {
            this._eachField(function(q) {
                n.append(this._createCell(p, q))
            });
            return this
        },
        _createCell: function(n, p) {
            var q = this._getItemFieldValue(n, p);
            n = {
                value: q,
                item: n
            };
            q = b.isFunction(p.cellRenderer) ? this.renderTemplate(p.cellRenderer, p, n) : b("<td>").append(this.renderTemplate(p.itemTemplate || q, p, n));
            return this._prepareCell(q, p)
        },
        _getItemFieldValue: function(n, p) {
            p = p.name.split(".");
            for (n = n[p.shift()]; n && p.length; )
                n = n[p.shift()];
            return n
        },
        _setItemFieldValue: function(n, p, q) {
            p = p.name.split(".");
            for (var t = n, v = p[0]; t && p.length; )
                n = t,
                v = p.shift(),
                t = n[v];
            if (!t)
                for (; p.length; )
                    n = n[v] = {},
                    v = p.shift();
            n[v] = q
        },
        sort: function(n, p) {
            b.isPlainObject(n) && (p = n.order,
            n = n.field);
            this._clearSortingCss();
            this._setSortingParams(n, p);
            this._setSortingCss();
            return this._loadStrategy.sort()
        },
        _clearSortingCss: function() {
            this._headerRow.find("th").removeClass(this.sortAscClass).removeClass(this.sortDescClass)
        },
        _setSortingParams: function(n, p) {
            n = this._normalizeField(n);
            p = p || (this._sortField === n ? this._reversedSortOrder(this._sortOrder) : "asc");
            this._sortField = n;
            this._sortOrder = p
        },
        _normalizeField: function(n) {
            return b.isNumeric(n) ? this.fields[n] : "string" === typeof n ? b.grep(this.fields, function(p) {
                return p.name === n
            })[0] : n
        },
        _reversedSortOrder: function(n) {
            return "asc" === n ? "desc" : "asc"
        },
        _setSortingCss: function() {
            var n = this._visibleFieldIndex(this._sortField);
            this._headerRow.find("th").eq(n).addClass("asc" === this._sortOrder ? this.sortAscClass : this.sortDescClass)
        },
        _visibleFieldIndex: function(n) {
            return b.inArray(n, b.grep(this.fields, function(p) {
                return p.visible
            }))
        },
        _sortData: function() {
            var n = this._sortFactor()
              , p = this._sortField;
            p && this.data.sort(function(q, t) {
                return n * p.sortingFunc(q[p.name], t[p.name])
            })
        },
        _sortFactor: function() {
            return "asc" === this._sortOrder ? 1 : -1
        },
        _itemsCount: function() {
            return this._loadStrategy.itemsCount()
        },
        _pagesCount: function() {
            var n = this._itemsCount()
              , p = this.pageSize;
            return Math.floor(n / p) + (n % p ? 1 : 0)
        },
        _refreshPager: function() {
            var n = this._pagerContainer;
            n.empty();
            this.paging && n.append(this._createPager());
            var p = this.paging && 1 < this._pagesCount();
            n.toggle(p)
        },
        _createPager: function() {
            var n = b.isFunction(this.pagerRenderer) ? b(this.pagerRenderer({
                pageIndex: this.pageIndex,
                pageCount: this._pagesCount()
            })) : b("<div>").append(this._createPagerByFormat());
            n.addClass(this.pagerClass);
            return n
        },
        _createPagerByFormat: function() {
            var n = this.pageIndex
              , p = this._pagesCount()
              , q = this._itemsCount()
              , t = this.pagerFormat.split(" ");
            return b.map(t, b.proxy(function(v) {
                var z = v;
                "{pages}" === v ? z = this._createPages() : "{first}" === v ? z = this._createPagerNavButton(this.pageFirstText, 1, 1 < n) : "{prev}" === v ? z = this._createPagerNavButton(this.pagePrevText, n - 1, 1 < n) : "{next}" === v ? z = this._createPagerNavButton(this.pageNextText, n + 1, n < p) : "{last}" === v ? z = this._createPagerNavButton(this.pageLastText, p, n < p) : "{pageIndex}" === v ? z = n : "{pageCount}" === v ? z = p : "{itemCount}" === v && (z = q);
                return b.isArray(z) ? z.concat([" "]) : [z, " "]
            }, this))
        },
        _createPages: function() {
            var n = this._pagesCount()
              , p = this.pageButtonCount
              , q = this._firstDisplayingPage
              , t = [];
            1 < q && t.push(this._createPagerPageNavButton(this.pageNavigatorPrevText, this.showPrevPages));
            for (var v = 0, z = q; v < p && z <= n; v++,
            z++)
                t.push(z === this.pageIndex ? this._createPagerCurrentPage() : this._createPagerPage(z));
            q + p - 1 < n && t.push(this._createPagerPageNavButton(this.pageNavigatorNextText, this.showNextPages));
            return t
        },
        _createPagerNavButton: function(n, p, q) {
            return this._createPagerButton(n, this.pagerNavButtonClass + (q ? "" : " " + this.pagerNavButtonInactiveClass), q ? function() {
                this.openPage(p)
            }
            : b.noop)
        },
        _createPagerPageNavButton: function(n, p) {
            return this._createPagerButton(n, this.pagerNavButtonClass, p)
        },
        _createPagerPage: function(n) {
            return this._createPagerButton(n, this.pageClass, function() {
                this.openPage(n)
            })
        },
        _createPagerButton: function(n, p, q) {
            n = b("<a>").attr("href", "javascript:void(0);").html(n).on("click", b.proxy(q, this));
            return b("<span>").addClass(p).append(n)
        },
        _createPagerCurrentPage: function() {
            return b("<span>").addClass(this.pageClass).addClass(this.currentPageClass).text(this.pageIndex)
        },
        _refreshSize: function() {
            this._refreshHeight();
            this._refreshWidth()
        },
        _refreshWidth: function() {
            var n = this._headerGrid
              , p = this._bodyGrid
              , q = this.width;
            "auto" === q && (n.width("auto"),
            q = n.outerWidth());
            n.width("");
            p.width("");
            this._container.width(q);
            q = n.outerWidth();
            p.width(q)
        },
        _scrollBarWidth: function() {
            var n;
            return function() {
                if (n === d) {
                    var p = b("<div style='width:50px;height:50px;overflow:hidden;position:absolute;top:-10000px;left:-10000px;'></div>")
                      , q = b("<div style='height:100px;'></div>");
                    p.append(q).appendTo("body");
                    var t = q.innerWidth();
                    p.css("overflow-y", "auto");
                    q = q.innerWidth();
                    p.remove();
                    n = t - q
                }
                return n
            }
        }(),
        _refreshHeight: function() {
            var n = this._container
              , p = this._pagerContainer
              , q = this.height;
            n.height(q);
            if ("auto" !== q) {
                q = n.height();
                var t = this._header.outerHeight(!0);
                p.parents(n).length && (t += p.outerHeight(!0));
                this._body.outerHeight(q - t)
            }
        },
        showPrevPages: function() {
            var n = this._firstDisplayingPage
              , p = this.pageButtonCount;
            this._firstDisplayingPage = n > p ? n - p : 1;
            this._refreshPager()
        },
        showNextPages: function() {
            var n = this._firstDisplayingPage
              , p = this.pageButtonCount
              , q = this._pagesCount();
            this._firstDisplayingPage = n + 2 * p > q ? q - p + 1 : n + p;
            this._refreshPager()
        },
        openPage: function(n) {
            1 > n || n > this._pagesCount() || (this._setPage(n),
            this._loadStrategy.openPage(n))
        },
        _setPage: function(n) {
            var p = this._firstDisplayingPage
              , q = this.pageButtonCount;
            this.pageIndex = n;
            n < p && (this._firstDisplayingPage = n);
            n > p + q - 1 && (this._firstDisplayingPage = n - q + 1);
            this._callEventHandler(this.onPageChanged, {
                pageIndex: n
            })
        },
        _controllerCall: function(n, p, q, t) {
            if (q)
                return b.Deferred().reject().promise();
            this._showLoading();
            q = this._controller;
            if (!q || !q[n])
                throw Error("controller has no method '" + n + "'");
            return g(q[n](p)).done(b.proxy(t, this)).fail(b.proxy(this._errorHandler, this)).always(b.proxy(this._hideLoading, this))
        },
        _errorHandler: function() {
            this._callEventHandler(this.onError, {
                args: b.makeArray(arguments)
            })
        },
        _showLoading: function() {
            this.loadIndication && (clearTimeout(this._loadingTimer),
            this._loadingTimer = setTimeout(b.proxy(function() {
                this._loadIndicator.show()
            }, this), this.loadIndicationDelay))
        },
        _hideLoading: function() {
            this.loadIndication && (clearTimeout(this._loadingTimer),
            this._loadIndicator.hide())
        },
        search: function(n) {
            this._resetSorting();
            this._resetPager();
            return this.loadData(n)
        },
        loadData: function(n) {
            n = n || (this.filtering ? this.getFilter() : {});
            b.extend(n, this._loadStrategy.loadParams(), this._sortingParams());
            var p = this._callEventHandler(this.onDataLoading, {
                filter: n
            });
            return this._controllerCall("loadData", n, p.cancel, function(q) {
                q && (this._loadStrategy.finishLoad(q),
                this._callEventHandler(this.onDataLoaded, {
                    data: q
                }))
            })
        },
        getFilter: function() {
            var n = {};
            this._eachField(function(p) {
                p.filtering && this._setItemFieldValue(n, p, p.filterValue())
            });
            return n
        },
        _sortingParams: function() {
            return this.sorting && this._sortField ? {
                sortField: this._sortField.name,
                sortOrder: this._sortOrder
            } : {}
        },
        getSorting: function() {
            var n = this._sortingParams();
            return {
                field: n.sortField,
                order: n.sortOrder
            }
        },
        clearFilter: function() {
            var n = this._createFilterRow();
            this._filterRow.replaceWith(n);
            this._filterRow = n;
            return this.search()
        },
        insertItem: function(n) {
            var p = n || this._getValidatedInsertItem();
            if (!p)
                return b.Deferred().reject().promise();
            n = this._callEventHandler(this.onItemInserting, {
                item: p
            });
            return this._controllerCall("insertItem", p, n.cancel, function(q) {
                q = q || p;
                this._loadStrategy.finishInsert(q);
                this._callEventHandler(this.onItemInserted, {
                    item: q
                })
            })
        },
        _getValidatedInsertItem: function() {
            var n = this._getInsertItem();
            return this._validateItem(n, this._insertRow) ? n : null
        },
        _getInsertItem: function() {
            var n = {};
            this._eachField(function(p) {
                p.inserting && this._setItemFieldValue(n, p, p.insertValue())
            });
            return n
        },
        _validateItem: function(n, p) {
            var q = []
              , t = {
                item: n,
                itemIndex: this._rowIndex(p),
                row: p
            };
            this._eachField(function(z) {
                if (z.validate) {
                    var E = this._getItemFieldValue(n, z);
                    E !== d && (E = this._validation.validate(b.extend({
                        value: E,
                        rules: z.validate
                    }, t)),
                    this._setCellValidity(p.children().eq(this._visibleFieldIndex(z)), E),
                    E.length && q.push.apply(q, b.map(E, function(C) {
                        return {
                            field: z,
                            message: C
                        }
                    })))
                }
            });
            if (!q.length)
                return !0;
            var v = b.extend({
                errors: q
            }, t);
            this._callEventHandler(this.onItemInvalid, v);
            this.invalidNotify(v);
            return !1
        },
        _setCellValidity: function(n, p) {
            n.toggleClass(this.invalidClass, !!p.length).attr("title", p.join("\n"))
        },
        clearInsert: function() {
            var n = this._createInsertRow();
            this._insertRow.replaceWith(n);
            this._insertRow = n;
            this.refresh()
        },
        editItem: function(n) {
            n = this.rowByItem(n);
            n.length && this._editRow(n)
        },
        rowByItem: function(n) {
            return n.jquery || n.nodeType ? b(n) : this._content.find("tr").filter(function() {
                return b.data(this, "JSGridItem") === n
            })
        },
        _editRow: function(n) {
            if (this.editing) {
                var p = n.data("JSGridItem");
                this._callEventHandler(this.onItemEditing, {
                    row: n,
                    item: p,
                    itemIndex: this._itemIndex(p)
                }).cancel || (this._editingRow && this.cancelEdit(),
                p = this._createEditRow(p),
                this._editingRow = n,
                n.hide(),
                p.insertBefore(n),
                n.data("JSGridEditRow", p))
            }
        },
        _createEditRow: function(n) {
            if (b.isFunction(this.editRowRenderer))
                return b(this.renderTemplate(field.editRowRenderer, field, {
                    item: n,
                    itemIndex: this._itemIndex(n)
                }));
            var p = b("<tr>").addClass(this.editRowClass);
            this._eachField(function(q) {
                var t = this._getItemFieldValue(n, q);
                this._prepareCell("<td>", q, "editcss").append(this.renderTemplate(q.editTemplate || "", q, {
                    value: t,
                    item: n
                })).appendTo(p)
            });
            return p
        },
        updateItem: function(n, p) {
            1 === arguments.length && (p = n);
            var q = n ? this.rowByItem(n) : this._editingRow;
            if (p = p || this._getValidatedEditedItem())
                return this._updateRow(q, p)
        },
        _getValidatedEditedItem: function() {
            var n = this._getEditedItem();
            return this._validateItem(n, this._getEditRow()) ? n : null
        },
        _updateRow: function(n, p) {
            var q = n.data("JSGridItem")
              , t = this._itemIndex(q)
              , v = b.extend(!0, {}, q);
            b.extend(!0, q, p);
            p = this._callEventHandler(this.onItemUpdating, {
                row: n,
                item: q,
                itemIndex: t,
                previousItem: v
            });
            return this._controllerCall("updateItem", q, p.cancel, function(z) {
                z = z || q;
                var E = this._finishUpdate(n, z, t);
                this._callEventHandler(this.onItemUpdated, {
                    row: E,
                    item: z,
                    itemIndex: t,
                    previousItem: v
                })
            })
        },
        _rowIndex: function(n) {
            return this._content.children().index(b(n))
        },
        _itemIndex: function(n) {
            return b.inArray(n, this.data)
        },
        _finishUpdate: function(n, p, q) {
            this.cancelEdit();
            this.data[q] = p;
            p = this._createRow(p, q);
            n.replaceWith(p);
            return p
        },
        _getEditedItem: function() {
            var n = {};
            this._eachField(function(p) {
                p.editing && this._setItemFieldValue(n, p, p.editValue())
            });
            return n
        },
        cancelEdit: function() {
            this._editingRow && (this._getEditRow().remove(),
            this._editingRow.show(),
            this._editingRow = null)
        },
        _getEditRow: function() {
            return this._editingRow.data("JSGridEditRow")
        },
        deleteItem: function(n) {
            n = this.rowByItem(n);
            if (n.length && (!this.confirmDeleting || e.confirm(f(this.deleteConfirm, this, n.data("JSGridItem")))))
                return this._deleteRow(n)
        },
        _deleteRow: function(n) {
            var p = n.data("JSGridItem")
              , q = this._itemIndex(p)
              , t = this._callEventHandler(this.onItemDeleting, {
                row: n,
                item: p,
                itemIndex: q
            });
            return this._controllerCall("deleteItem", p, t.cancel, function() {
                this._loadStrategy.finishDelete(p, q);
                this._callEventHandler(this.onItemDeleted, {
                    row: n,
                    item: p,
                    itemIndex: q
                })
            })
        }
    };
    b.fn.jsGrid = function(n) {
        var p = b.makeArray(arguments).slice(1)
          , q = this;
        this.each(function() {
            var t = b(this)
              , v = t.data("JSGrid");
            if (v)
                if ("string" === typeof n) {
                    if (t = v[n].apply(v, p),
                    t !== d && t !== v)
                        return q = t,
                        !1
                } else
                    v._detachWindowResizeCallback(),
                    v._init(n),
                    v.render();
            else
                new c(t,n)
        });
        return q
    }
    ;
    var k = {}
      , l = {}
      , m = function(n, p) {
        b.each(p, function(q, t) {
            b.isPlainObject(t) ? m(n[q] || n[q[0].toUpperCase() + q.slice(1)], t) : n.hasOwnProperty(q) ? n[q] = t : n.prototype[q] = t
        })
    };
    e.jsGrid = {
        Grid: c,
        fields: k,
        setDefaults: function(n, p) {
            if (b.isPlainObject(n))
                var q = c.prototype;
            else
                q = k[n].prototype,
                n = p || {};
            b.extend(q, n)
        },
        locales: l,
        locale: function(n) {
            var p = b.isPlainObject(n) ? n : l[n];
            if (!p)
                throw Error("unknown locale " + n);
            m(jsGrid, p)
        },
        version: "1.5.2"
    }
}
)(window, jQuery);
(function(e, b, d) {
    function c(f) {
        this._init(f)
    }
    c.prototype = {
        container: "body",
        message: "Loading...",
        shading: !0,
        zIndex: 1E3,
        shaderClass: "jsgrid-load-shader",
        loadPanelClass: "jsgrid-load-panel",
        _init: function(f) {
            b.extend(!0, this, f);
            this._initContainer();
            this._initShader();
            this._initLoadPanel()
        },
        _initContainer: function() {
            this._container = b(this.container)
        },
        _initShader: function() {
            this.shading && (this._shader = b("<div>").addClass(this.shaderClass).hide().css({
                position: "absolute",
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                zIndex: this.zIndex
            }).appendTo(this._container))
        },
        _initLoadPanel: function() {
            this._loadPanel = b("<div>").addClass(this.loadPanelClass).text(this.message).hide().css({
                position: "absolute",
                top: "50%",
                left: "50%",
                zIndex: this.zIndex
            }).appendTo(this._container)
        },
        show: function() {
            var f = this._loadPanel.show()
              , g = f.outerWidth()
              , h = f.outerHeight();
            f.css({
                marginTop: -h / 2,
                marginLeft: -g / 2
            });
            this._shader.show()
        },
        hide: function() {
            this._loadPanel.hide();
            this._shader.hide()
        }
    };
    e.LoadIndicator = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        this._grid = g
    }
    function f(g) {
        this._grid = g;
        this._itemsCount = 0
    }
    c.prototype = {
        firstDisplayIndex: function() {
            var g = this._grid;
            return g.option("paging") ? (g.option("pageIndex") - 1) * g.option("pageSize") : 0
        },
        lastDisplayIndex: function() {
            var g = this._grid
              , h = g.option("data").length;
            return g.option("paging") ? Math.min(g.option("pageIndex") * g.option("pageSize"), h) : h
        },
        itemsCount: function() {
            return this._grid.option("data").length
        },
        openPage: function(g) {
            this._grid.refresh()
        },
        loadParams: function() {
            return {}
        },
        sort: function() {
            this._grid._sortData();
            this._grid.refresh();
            return b.Deferred().resolve().promise()
        },
        reset: function() {
            this._grid.refresh();
            return b.Deferred().resolve().promise()
        },
        finishLoad: function(g) {
            this._grid.option("data", g)
        },
        finishInsert: function(g) {
            var h = this._grid;
            h.option("data").push(g);
            h.refresh()
        },
        finishDelete: function(g, h) {
            g = this._grid;
            g.option("data").splice(h, 1);
            g.reset()
        }
    };
    f.prototype = {
        firstDisplayIndex: function() {
            return 0
        },
        lastDisplayIndex: function() {
            return this._grid.option("data").length
        },
        itemsCount: function() {
            return this._itemsCount
        },
        openPage: function(g) {
            this._grid.loadData()
        },
        loadParams: function() {
            var g = this._grid;
            return {
                pageIndex: g.option("pageIndex"),
                pageSize: g.option("pageSize")
            }
        },
        reset: function() {
            return this._grid.loadData()
        },
        sort: function() {
            return this._grid.loadData()
        },
        finishLoad: function(g) {
            this._itemsCount = g.itemsCount;
            this._grid.option("data", g.data)
        },
        finishInsert: function(g) {
            this._grid.search()
        },
        finishDelete: function(g, h) {
            this._grid.search()
        }
    };
    e.loadStrategies = {
        DirectLoadingStrategy: c,
        PageLoadingStrategy: f
    }
}
)(jsGrid, jQuery);
(function(e, b, d) {
    var c = function(f) {
        return "undefined" !== typeof f && null !== f
    };
    e.sortStrategies = {
        string: function(f, g) {
            return c(f) || c(g) ? c(f) ? c(g) ? ("" + f).localeCompare("" + g) : 1 : -1 : 0
        },
        number: function(f, g) {
            return f - g
        },
        date: function(f, g) {
            return f - g
        },
        numberAsString: function(f, g) {
            return parseFloat(f) - parseFloat(g)
        }
    }
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        this._init(g)
    }
    c.prototype = {
        _init: function(g) {
            b.extend(!0, this, g)
        },
        validate: function(g) {
            var h = [];
            b.each(this._normalizeRules(g.rules), function(k, l) {
                l.validator(g.value, g.item, l.param) || (k = b.isFunction(l.message) ? l.message(g.value, g.item) : l.message,
                h.push(k))
            });
            return h
        },
        _normalizeRules: function(g) {
            b.isArray(g) || (g = [g]);
            return b.map(g, b.proxy(function(h) {
                return this._normalizeRule(h)
            }, this))
        },
        _normalizeRule: function(g) {
            "string" === typeof g && (g = {
                validator: g
            });
            b.isFunction(g) && (g = {
                validator: g
            });
            if (b.isPlainObject(g))
                g = b.extend({}, g);
            else
                throw Error("wrong validation config specified");
            return b.isFunction(g.validator) ? g : this._applyNamedValidator(g, g.validator)
        },
        _applyNamedValidator: function(g, h) {
            delete g.validator;
            var k = f[h];
            if (!k)
                throw Error('unknown validator "' + h + '"');
            b.isFunction(k) && (k = {
                validator: k
            });
            return b.extend({}, k, g)
        }
    };
    e.Validation = c;
    var f = {
        required: {
            message: "Field is required",
            validator: function(g) {
                return g !== d && null !== g && "" !== g
            }
        },
        rangeLength: {
            message: "Field value length is out of the defined range",
            validator: function(g, h, k) {
                return g.length >= k[0] && g.length <= k[1]
            }
        },
        minLength: {
            message: "Field value is too short",
            validator: function(g, h, k) {
                return g.length >= k
            }
        },
        maxLength: {
            message: "Field value is too long",
            validator: function(g, h, k) {
                return g.length <= k
            }
        },
        pattern: {
            message: "Field value is not matching the defined pattern",
            validator: function(g, h, k) {
                "string" === typeof k && (k = new RegExp("^(?:" + k + ")$"));
                return k.test(g)
            }
        },
        range: {
            message: "Field value is out of the defined range",
            validator: function(g, h, k) {
                return g >= k[0] && g <= k[1]
            }
        },
        min: {
            message: "Field value is too small",
            validator: function(g, h, k) {
                return g >= k
            }
        },
        max: {
            message: "Field value is too large",
            validator: function(g, h, k) {
                return g <= k
            }
        }
    };
    e.validators = f
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(f) {
        b.extend(!0, this, f);
        this.sortingFunc = this._getSortingFunc()
    }
    c.prototype = {
        name: "",
        title: null,
        css: "",
        align: "",
        width: 100,
        visible: !0,
        filtering: !0,
        inserting: !0,
        editing: !0,
        sorting: !0,
        sorter: "string",
        headerTemplate: function() {
            return this.title === d || null === this.title ? this.name : this.title
        },
        itemTemplate: function(f, g) {
            return f
        },
        filterTemplate: function() {
            return ""
        },
        insertTemplate: function() {
            return ""
        },
        editTemplate: function(f, g) {
            this._value = f;
            return this.itemTemplate(f, g)
        },
        filterValue: function() {
            return ""
        },
        insertValue: function() {
            return ""
        },
        editValue: function() {
            return this._value
        },
        _getSortingFunc: function() {
            var f = this.sorter;
            if (b.isFunction(f))
                return f;
            if ("string" === typeof f)
                return e.sortStrategies[f];
            throw Error('wrong sorter for the field "' + this.name + '"!');
        }
    };
    e.Field = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        f.call(this, g)
    }
    var f = e.Field;
    c.prototype = new f({
        autosearch: !0,
        readOnly: !1,
        filterTemplate: function() {
            if (!this.filtering)
                return "";
            var g = this._grid
              , h = this.filterControl = this._createTextBox();
            if (this.autosearch)
                h.on("keypress", function(k) {
                    13 === k.which && (g.search(),
                    k.preventDefault())
                });
            return h
        },
        insertTemplate: function() {
            return this.inserting ? this.insertControl = this._createTextBox() : ""
        },
        editTemplate: function(g) {
            if (!this.editing)
                return this.itemTemplate(g);
            var h = this.editControl = this._createTextBox();
            h.val(g);
            return h
        },
        filterValue: function() {
            return this.filterControl.val()
        },
        insertValue: function() {
            return this.insertControl.val()
        },
        editValue: function() {
            return this.editControl.val()
        },
        _createTextBox: function() {
            return b("<input>").attr("type", "text").prop("readonly", !!this.readOnly)
        }
    });
    e.fields.text = e.TextField = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        f.call(this, g)
    }
    var f = e.TextField;
    c.prototype = new f({
        sorter: "number",
        align: "right",
        readOnly: !1,
        filterValue: function() {
            return parseInt(this.filterControl.val() || 0, 10)
        },
        insertValue: function() {
            return parseInt(this.insertControl.val() || 0, 10)
        },
        editValue: function() {
            return parseInt(this.editControl.val() || 0, 10)
        },
        _createTextBox: function() {
            return b("<input>").attr("type", "number").prop("readonly", !!this.readOnly)
        }
    });
    e.fields.number = e.NumberField = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        f.call(this, g)
    }
    var f = e.TextField;
    c.prototype = new f({
        insertTemplate: function() {
            return this.inserting ? this.insertControl = this._createTextArea() : ""
        },
        editTemplate: function(g) {
            if (!this.editing)
                return this.itemTemplate(g);
            var h = this.editControl = this._createTextArea();
            h.val(g);
            return h
        },
        _createTextArea: function() {
            return b("<textarea>").prop("readonly", !!this.readOnly)
        }
    });
    e.fields.textarea = e.TextAreaField = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        this.items = [];
        this.selectedIndex = -1;
        this.textField = this.valueField = "";
        g.valueField && g.items.length && (this.valueType = "number" === typeof g.items[0][g.valueField] ? "number" : "string");
        this.sorter = this.valueType;
        f.call(this, g)
    }
    var f = e.NumberField;
    c.prototype = new f({
        align: "center",
        valueType: "number",
        itemTemplate: function(g) {
            var h = this.items
              , k = this.valueField
              , l = this.textField;
            h = k ? b.grep(h, function(m, n) {
                return m[k] === g
            })[0] || {} : h[g];
            l = l ? h[l] : h;
            return l === d || null === l ? "" : l
        },
        filterTemplate: function() {
            if (!this.filtering)
                return "";
            var g = this._grid
              , h = this.filterControl = this._createSelect();
            if (this.autosearch)
                h.on("change", function(k) {
                    g.search()
                });
            return h
        },
        insertTemplate: function() {
            return this.inserting ? this.insertControl = this._createSelect() : ""
        },
        editTemplate: function(g) {
            if (!this.editing)
                return this.itemTemplate(g);
            var h = this.editControl = this._createSelect();
            g !== d && h.val(g);
            return h
        },
        filterValue: function() {
            var g = this.filterControl.val();
            return "number" === this.valueType ? parseInt(g || 0, 10) : g
        },
        insertValue: function() {
            var g = this.insertControl.val();
            return "number" === this.valueType ? parseInt(g || 0, 10) : g
        },
        editValue: function() {
            var g = this.editControl.val();
            return "number" === this.valueType ? parseInt(g || 0, 10) : g
        },
        _createSelect: function() {
            var g = b("<select>")
              , h = this.valueField
              , k = this.textField
              , l = this.selectedIndex;
            b.each(this.items, function(m, n) {
                var p = h ? n[h] : m;
                n = k ? n[k] : n;
                b("<option>").attr("value", p).text(n).appendTo(g).prop("selected", l === m)
            });
            g.prop("disabled", !!this.readOnly);
            return g
        }
    });
    e.fields.select = e.SelectField = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        f.call(this, g)
    }
    var f = e.Field;
    c.prototype = new f({
        sorter: "number",
        align: "center",
        autosearch: !0,
        itemTemplate: function(g) {
            return this._createCheckbox().prop({
                checked: g,
                disabled: !0
            })
        },
        filterTemplate: function() {
            if (!this.filtering)
                return "";
            var g = this._grid
              , h = this.filterControl = this._createCheckbox();
            h.prop({
                readOnly: !0,
                indeterminate: !0
            });
            h.on("click", function() {
                var k = b(this);
                k.prop("readOnly") ? k.prop({
                    checked: !1,
                    readOnly: !1
                }) : k.prop("checked") || k.prop({
                    readOnly: !0,
                    indeterminate: !0
                })
            });
            if (this.autosearch)
                h.on("click", function() {
                    g.search()
                });
            return h
        },
        insertTemplate: function() {
            return this.inserting ? this.insertControl = this._createCheckbox() : ""
        },
        editTemplate: function(g) {
            if (!this.editing)
                return this.itemTemplate(g);
            var h = this.editControl = this._createCheckbox();
            h.prop("checked", g);
            return h
        },
        filterValue: function() {
            return this.filterControl.get(0).indeterminate ? d : this.filterControl.is(":checked")
        },
        insertValue: function() {
            return this.insertControl.is(":checked")
        },
        editValue: function() {
            return this.editControl.is(":checked")
        },
        _createCheckbox: function() {
            return b("<input>").attr("type", "checkbox")
        }
    });
    e.fields.checkbox = e.CheckboxField = c
}
)(jsGrid, jQuery);
(function(e, b, d) {
    function c(g) {
        f.call(this, g);
        this._configInitialized = !1
    }
    var f = e.Field;
    c.prototype = new f({
        css: "jsgrid-control-field",
        align: "center",
        width: 50,
        filtering: !1,
        inserting: !1,
        editing: !1,
        sorting: !1,
        buttonClass: "jsgrid-button",
        modeButtonClass: "jsgrid-mode-button",
        modeOnButtonClass: "jsgrid-mode-on-button",
        searchModeButtonClass: "jsgrid-search-mode-button",
        insertModeButtonClass: "jsgrid-insert-mode-button",
        editButtonClass: "jsgrid-edit-button",
        deleteButtonClass: "jsgrid-delete-button",
        searchButtonClass: "jsgrid-search-button",
        clearFilterButtonClass: "jsgrid-clear-filter-button",
        insertButtonClass: "jsgrid-insert-button",
        updateButtonClass: "jsgrid-update-button",
        cancelEditButtonClass: "jsgrid-cancel-edit-button",
        searchModeButtonTooltip: "Switch to searching",
        insertModeButtonTooltip: "Switch to inserting",
        editButtonTooltip: "Edit",
        deleteButtonTooltip: "Delete",
        searchButtonTooltip: "Search",
        clearFilterButtonTooltip: "Clear filter",
        insertButtonTooltip: "Insert",
        updateButtonTooltip: "Update",
        cancelEditButtonTooltip: "Cancel edit",
        editButton: !0,
        deleteButton: !0,
        clearFilterButton: !0,
        modeSwitchButton: !0,
        _initConfig: function() {
            this._hasFiltering = this._grid.filtering;
            (this._hasInserting = this._grid.inserting) && this.modeSwitchButton && (this._grid.inserting = !1);
            this._configInitialized = !0
        },
        headerTemplate: function() {
            this._configInitialized || this._initConfig();
            var g = this._hasFiltering
              , h = this._hasInserting;
            return this.modeSwitchButton && (g || h) ? g && !h ? this._createFilterSwitchButton() : h && !g ? this._createInsertSwitchButton() : this._createModeSwitchButton() : ""
        },
        itemTemplate: function(g, h) {
            g = b([]);
            this.editButton && (g = g.add(this._createEditButton(h)));
            this.deleteButton && (g = g.add(this._createDeleteButton(h)));
            return g
        },
        filterTemplate: function() {
            var g = this._createSearchButton();
            return this.clearFilterButton ? g.add(this._createClearFilterButton()) : g
        },
        insertTemplate: function() {
            return this._createInsertButton()
        },
        editTemplate: function() {
            return this._createUpdateButton().add(this._createCancelEditButton())
        },
        _createFilterSwitchButton: function() {
            return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, !0)
        },
        _createInsertSwitchButton: function() {
            return this._createOnOffSwitchButton("inserting", this.insertModeButtonClass, !1)
        },
        _createOnOffSwitchButton: function(g, h, k) {
            var l = k
              , m = b.proxy(function() {
                n.toggleClass(this.modeOnButtonClass, l)
            }, this)
              , n = this._createGridButton(this.modeButtonClass + " " + h, "", function(p) {
                l = !l;
                p.option(g, l);
                m()
            });
            m();
            return n
        },
        _createModeSwitchButton: function() {
            var g = !1
              , h = b.proxy(function() {
                k.attr("title", g ? this.searchModeButtonTooltip : this.insertModeButtonTooltip).toggleClass(this.insertModeButtonClass, !g).toggleClass(this.searchModeButtonClass, g)
            }, this)
              , k = this._createGridButton(this.modeButtonClass, "", function(l) {
                g = !g;
                l.option("inserting", g);
                l.option("filtering", !g);
                h()
            });
            h();
            return k
        },
        _createEditButton: function(g) {
            return this._createGridButton(this.editButtonClass, this.editButtonTooltip, function(h, k) {
                h.editItem(g);
                k.stopPropagation()
            })
        },
        _createDeleteButton: function(g) {
            return this._createGridButton(this.deleteButtonClass, this.deleteButtonTooltip, function(h, k) {
                h.deleteItem(g);
                k.stopPropagation()
            })
        },
        _createSearchButton: function() {
            return this._createGridButton(this.searchButtonClass, this.searchButtonTooltip, function(g) {
                g.search()
            })
        },
        _createClearFilterButton: function() {
            return this._createGridButton(this.clearFilterButtonClass, this.clearFilterButtonTooltip, function(g) {
                g.clearFilter()
            })
        },
        _createInsertButton: function() {
            return this._createGridButton(this.insertButtonClass, this.insertButtonTooltip, function(g) {
                g.insertItem().done(function() {
                    g.clearInsert()
                })
            })
        },
        _createUpdateButton: function() {
            return this._createGridButton(this.updateButtonClass, this.updateButtonTooltip, function(g, h) {
                g.updateItem();
                h.stopPropagation()
            })
        },
        _createCancelEditButton: function() {
            return this._createGridButton(this.cancelEditButtonClass, this.cancelEditButtonTooltip, function(g, h) {
                g.cancelEdit();
                h.stopPropagation()
            })
        },
        _createGridButton: function(g, h, k) {
            var l = this._grid;
            return b("<input>").addClass(this.buttonClass).addClass(g).attr({
                type: "button",
                title: h
            }).on("click", function(m) {
                k(l, m)
            })
        },
        editValue: function() {
            return ""
        }
    });
    e.fields.control = e.ControlField = c
}
)(jsGrid, jQuery);
var saveAs = saveAs || function(e) {
    if (!("undefined" === typeof e || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var b = e.document.createElementNS("http://www.w3.org/1999/xhtml", "a")
          , d = "download"in b
          , c = /constructor/i.test(e.HTMLElement)
          , f = /CriOS\/[\d]+/.test(navigator.userAgent)
          , g = function(n) {
            (e.setImmediate || e.setTimeout)(function() {
                throw n;
            }, 0)
        }
          , h = function(n) {
            setTimeout(function() {
                "string" === typeof n ? (e.URL || e.webkitURL || e).revokeObjectURL(n) : n.remove()
            }, 4E4)
        }
          , k = function(n) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(n.type) ? new Blob([String.fromCharCode(65279), n],{
                type: n.type
            }) : n
        }
          , l = function(n, p, q) {
            q || (n = k(n));
            var t = this
              , v = "application/octet-stream" === n.type
              , z = function() {
                var C = ["writestart", "progress", "write", "writeend"];
                C = [].concat(C);
                for (var F = C.length; F--; ) {
                    var P = t["on" + C[F]];
                    if ("function" === typeof P)
                        try {
                            P.call(t, t)
                        } catch (X) {
                            g(X)
                        }
                }
            };
            t.readyState = t.INIT;
            if (d) {
                var E = (e.URL || e.webkitURL || e).createObjectURL(n);
                setTimeout(function() {
                    b.href = E;
                    b.download = p;
                    var C = new MouseEvent("click");
                    b.dispatchEvent(C);
                    z();
                    h(E);
                    t.readyState = t.DONE
                })
            } else
                (function() {
                    if ((f || v && c) && e.FileReader) {
                        var C = new FileReader;
                        C.onloadend = function() {
                            var F = f ? C.result : C.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                            e.open(F, "_blank") || (e.location.href = F);
                            t.readyState = t.DONE;
                            z()
                        }
                        ;
                        C.readAsDataURL(n);
                        t.readyState = t.INIT
                    } else
                        E || (E = (e.URL || e.webkitURL || e).createObjectURL(n)),
                        v ? e.location.href = E : e.open(E, "_blank") || (e.location.href = E),
                        t.readyState = t.DONE,
                        z(),
                        h(E)
                }
                )()
        }
          , m = l.prototype;
        if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob)
            return function(n, p, q) {
                p = p || n.name || "download";
                q || (n = k(n));
                return navigator.msSaveOrOpenBlob(n, p)
            }
            ;
        m.abort = function() {}
        ;
        m.readyState = m.INIT = 0;
        m.WRITING = 1;
        m.DONE = 2;
        m.error = m.onwritestart = m.onprogress = m.onwrite = m.onabort = m.onerror = m.onwriteend = null;
        return function(n, p, q) {
            return new l(n,p || n.name || "download",q)
        }
    }
}("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content);
"undefined" !== typeof module && module.exports ? module.exports.saveAs = saveAs : "undefined" !== typeof define && null !== define && null !== define.amd && define([], function() {
    return saveAs
});
(function(e) {
    "object" === typeof exports && "undefined" !== typeof module ? module.exports = e() : "function" === typeof define && define.amd ? define([], e) : ("undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : this).localforage = e()
}
)(function() {
    return function f(b, d, c) {
        function g(l, m) {
            if (!d[l]) {
                if (!b[l]) {
                    var n = "function" == typeof require && require;
                    if (!m && n)
                        return n(l, !0);
                    if (h)
                        return h(l, !0);
                    m = Error("Cannot find module '" + l + "'");
                    throw m.code = "MODULE_NOT_FOUND",
                    m;
                }
                m = d[l] = {
                    exports: {}
                };
                b[l][0].call(m.exports, function(p) {
                    var q = b[l][1][p];
                    return g(q ? q : p)
                }, m, m.exports, f, b, d, c)
            }
            return d[l].exports
        }
        for (var h = "function" == typeof require && require, k = 0; k < c.length; k++)
            g(c[k]);
        return g
    }({
        1: [function(b, d, c) {
            (function(f) {
                function g() {
                    p = !0;
                    for (var t, v, z = q.length; z; ) {
                        v = q;
                        q = [];
                        for (t = -1; ++t < z; )
                            v[t]();
                        z = q.length
                    }
                    p = !1
                }
                var h = f.MutationObserver || f.WebKitMutationObserver;
                if (h) {
                    var k = 0;
                    h = new h(g);
                    var l = f.document.createTextNode("");
                    h.observe(l, {
                        characterData: !0
                    });
                    var m = function() {
                        l.data = k = ++k % 2
                    }
                } else if (f.setImmediate || "undefined" === typeof f.MessageChannel)
                    m = "document"in f && "onreadystatechange"in f.document.createElement("script") ? function() {
                        var t = f.document.createElement("script");
                        t.onreadystatechange = function() {
                            g();
                            t.onreadystatechange = null;
                            t.parentNode.removeChild(t);
                            t = null
                        }
                        ;
                        f.document.documentElement.appendChild(t)
                    }
                    : function() {
                        setTimeout(g, 0)
                    }
                    ;
                else {
                    var n = new f.MessageChannel;
                    n.port1.onmessage = g;
                    m = function() {
                        n.port2.postMessage(0)
                    }
                }
                var p, q = [];
                d.exports = function(t) {
                    1 !== q.push(t) || p || m()
                }
            }
            ).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
        }
        , {}],
        2: [function(b, d, c) {
            function f() {}
            function g(E) {
                if ("function" !== typeof E)
                    throw new TypeError("resolver must be a function");
                this.state = z;
                this.queue = [];
                this.outcome = void 0;
                E !== f && m(this, E)
            }
            function h(E, C, F) {
                this.promise = E;
                "function" === typeof C && (this.onFulfilled = C,
                this.callFulfilled = this.otherCallFulfilled);
                "function" === typeof F && (this.onRejected = F,
                this.callRejected = this.otherCallRejected)
            }
            function k(E, C, F) {
                p(function() {
                    try {
                        var P = C(F)
                    } catch (X) {
                        return q.reject(E, X)
                    }
                    P === E ? q.reject(E, new TypeError("Cannot resolve promise with itself")) : q.resolve(E, P)
                })
            }
            function l(E) {
                var C = E && E.then;
                if (E && "object" === typeof E && "function" === typeof C)
                    return function() {
                        C.apply(E, arguments)
                    }
            }
            function m(E, C) {
                function F(V) {
                    X || (X = !0,
                    q.reject(E, V))
                }
                function P(V) {
                    X || (X = !0,
                    q.resolve(E, V))
                }
                var X = !1
                  , W = n(function() {
                    C(P, F)
                });
                "error" === W.status && F(W.value)
            }
            function n(E, C) {
                var F = {};
                try {
                    F.value = E(C),
                    F.status = "success"
                } catch (P) {
                    F.status = "error",
                    F.value = P
                }
                return F
            }
            var p = b(1)
              , q = {}
              , t = ["REJECTED"]
              , v = ["FULFILLED"]
              , z = ["PENDING"];
            d.exports = c = g;
            g.prototype["catch"] = function(E) {
                return this.then(null, E)
            }
            ;
            g.prototype.then = function(E, C) {
                if ("function" !== typeof E && this.state === v || "function" !== typeof C && this.state === t)
                    return this;
                var F = new this.constructor(f);
                this.state !== z ? k(F, this.state === v ? E : C, this.outcome) : this.queue.push(new h(F,E,C));
                return F
            }
            ;
            h.prototype.callFulfilled = function(E) {
                q.resolve(this.promise, E)
            }
            ;
            h.prototype.otherCallFulfilled = function(E) {
                k(this.promise, this.onFulfilled, E)
            }
            ;
            h.prototype.callRejected = function(E) {
                q.reject(this.promise, E)
            }
            ;
            h.prototype.otherCallRejected = function(E) {
                k(this.promise, this.onRejected, E)
            }
            ;
            q.resolve = function(E, C) {
                var F = n(l, C);
                if ("error" === F.status)
                    return q.reject(E, F.value);
                if (F = F.value)
                    m(E, F);
                else {
                    E.state = v;
                    E.outcome = C;
                    F = -1;
                    for (var P = E.queue.length; ++F < P; )
                        E.queue[F].callFulfilled(C)
                }
                return E
            }
            ;
            q.reject = function(E, C) {
                E.state = t;
                E.outcome = C;
                for (var F = -1, P = E.queue.length; ++F < P; )
                    E.queue[F].callRejected(C);
                return E
            }
            ;
            c.resolve = function(E) {
                return E instanceof this ? E : q.resolve(new this(f), E)
            }
            ;
            c.reject = function(E) {
                var C = new this(f);
                return q.reject(C, E)
            }
            ;
            c.all = function(E) {
                function C(D, B) {
                    F.resolve(D).then(function(H) {
                        W[B] = H;
                        ++V !== P || X || (X = !0,
                        q.resolve(u, W))
                    }, function(H) {
                        X || (X = !0,
                        q.reject(u, H))
                    })
                }
                var F = this;
                if ("[object Array]" !== Object.prototype.toString.call(E))
                    return this.reject(new TypeError("must be an array"));
                var P = E.length
                  , X = !1;
                if (!P)
                    return this.resolve([]);
                for (var W = Array(P), V = 0, ca = -1, u = new this(f); ++ca < P; )
                    C(E[ca], ca);
                return u
            }
            ;
            c.race = function(E) {
                function C(ca) {
                    F.resolve(ca).then(function(u) {
                        X || (X = !0,
                        q.resolve(V, u))
                    }, function(u) {
                        X || (X = !0,
                        q.reject(V, u))
                    })
                }
                var F = this;
                if ("[object Array]" !== Object.prototype.toString.call(E))
                    return this.reject(new TypeError("must be an array"));
                var P = E.length
                  , X = !1;
                if (!P)
                    return this.resolve([]);
                for (var W = -1, V = new this(f); ++W < P; )
                    C(E[W]);
                return V
            }
        }
        , {
            1: 1
        }],
        3: [function(b, d, c) {
            d = "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {};
            "function" !== typeof d.Promise && (d.Promise = b(2))
        }
        , {
            2: 2
        }],
        4: [function(b, d, c) {
            function f(L, O) {
                L = L || [];
                O = O || {};
                try {
                    return new Blob(L,O)
                } catch (na) {
                    if ("TypeError" !== na.name)
                        throw na;
                    for (var S = new ("undefined" !== typeof BlobBuilder ? BlobBuilder : "undefined" !== typeof MSBlobBuilder ? MSBlobBuilder : "undefined" !== typeof MozBlobBuilder ? MozBlobBuilder : WebKitBlobBuilder), ha = 0; ha < L.length; ha += 1)
                        S.append(L[ha]);
                    return S.getBlob(O.type)
                }
            }
            function g(L, O) {
                O && L.then(function(S) {
                    O(null, S)
                }, function(S) {
                    O(S)
                })
            }
            function h(L, O, S) {
                "function" === typeof O && L.then(O);
                if ("function" === typeof S)
                    L["catch"](S)
            }
            function k(L) {
                "string" !== typeof L && (console.warn(L + " used as a key, but it is not a string."),
                L = String(L));
                return L
            }
            function l() {
                if (arguments.length && "function" === typeof arguments[arguments.length - 1])
                    return arguments[arguments.length - 1]
            }
            function m(L) {
                return (new I(function(O) {
                    var S = L.transaction("local-forage-detect-blob-support", "readwrite")
                      , ha = f([""]);
                    S.objectStore("local-forage-detect-blob-support").put(ha, "key");
                    S.onabort = function(na) {
                        na.preventDefault();
                        na.stopPropagation();
                        O(!1)
                    }
                    ;
                    S.oncomplete = function() {
                        var na = navigator.userAgent.match(/Chrome\/(\d+)/)
                          , ja = navigator.userAgent.match(/Edge\//);
                        O(ja || !na || 43 <= parseInt(na[1], 10))
                    }
                }
                ))["catch"](function() {
                    return !1
                })
            }
            function n(L) {
                return "boolean" === typeof T ? I.resolve(T) : m(L).then(function(O) {
                    return T = O
                })
            }
            function p(L) {
                L = Z[L.name];
                var O = {};
                O.promise = new I(function(S, ha) {
                    O.resolve = S;
                    O.reject = ha
                }
                );
                L.deferredOperations.push(O);
                L.dbReady = L.dbReady ? L.dbReady.then(function() {
                    return O.promise
                }) : O.promise
            }
            function q(L) {
                if (L = Z[L.name].deferredOperations.pop())
                    return L.resolve(),
                    L.promise
            }
            function t(L, O) {
                if (L = Z[L.name].deferredOperations.pop())
                    return L.reject(O),
                    L.promise
            }
            function v(L, O) {
                return new I(function(S, ha) {
                    if (L.db)
                        if (O)
                            p(L),
                            L.db.close();
                        else
                            return S(L.db);
                    var na = [L.name];
                    O && na.push(L.version);
                    var ja = Y.open.apply(Y, na);
                    O && (ja.onupgradeneeded = function(sa) {
                        var va = ja.result;
                        try {
                            va.createObjectStore(L.storeName),
                            1 >= sa.oldVersion && va.createObjectStore("local-forage-detect-blob-support")
                        } catch (ua) {
                            if ("ConstraintError" === ua.name)
                                console.warn('The database "' + L.name + '" has been upgraded from version ' + sa.oldVersion + " to version " + sa.newVersion + ', but the storage "' + L.storeName + '" already exists.');
                            else
                                throw ua;
                        }
                    }
                    );
                    ja.onerror = function(sa) {
                        sa.preventDefault();
                        ha(ja.error)
                    }
                    ;
                    ja.onsuccess = function() {
                        S(ja.result);
                        q(L)
                    }
                }
                )
            }
            function z(L, O) {
                if (!L.db)
                    return !0;
                var S = !L.db.objectStoreNames.contains(L.storeName)
                  , ha = L.version > L.db.version;
                L.version < L.db.version && (L.version !== O && console.warn('The database "' + L.name + "\" can't be downgraded from version " + L.db.version + " to version " + L.version + "."),
                L.version = L.db.version);
                return ha || S ? (S && (O = L.db.version + 1,
                O > L.version && (L.version = O)),
                !0) : !1
            }
            function E(L) {
                return new I(function(O, S) {
                    var ha = new FileReader;
                    ha.onerror = S;
                    ha.onloadend = function(na) {
                        na = btoa(na.target.result || "");
                        O({
                            __local_forage_encoded_blob: !0,
                            data: na,
                            type: L.type
                        })
                    }
                    ;
                    ha.readAsBinaryString(L)
                }
                )
            }
            function C(L) {
                for (var O = atob(L.data), S = O.length, ha = new ArrayBuffer(S), na = new Uint8Array(ha), ja = 0; ja < S; ja++)
                    na[ja] = O.charCodeAt(ja);
                return f([ha], {
                    type: L.type
                })
            }
            function F(L) {
                var O = this
                  , S = O._initReady().then(function() {
                    var ha = Z[O._dbInfo.name];
                    if (ha && ha.dbReady)
                        return ha.dbReady
                });
                h(S, L, L);
                return S
            }
            function P(L) {
                p(L);
                for (var O = Z[L.name].forages, S = 0; S < O.length; S++) {
                    var ha = O[S];
                    ha._dbInfo.db && (ha._dbInfo.db.close(),
                    ha._dbInfo.db = null)
                }
                return v(L, !1).then(function(na) {
                    for (var ja = 0; ja < O.length; ja++)
                        O[ja]._dbInfo.db = na;
                    L.db = na
                }).then(function() {
                    if (z(L))
                        return v(L, !0)
                })["catch"](function(na) {
                    t(L, na);
                    throw na;
                })
            }
            function X(L, O, S, ha) {
                void 0 === ha && (ha = 1);
                try {
                    var na = L.db.transaction(L.storeName, O);
                    S(null, na)
                } catch (ja) {
                    if (0 < ha && (!L.db || "InvalidStateError" === ja.name || "NotFoundError" === ja.name))
                        return I.resolve().then(function() {
                            if (!L.db || "NotFoundError" === ja.name && !L.db.objectStoreNames.contains(L.storeName) && L.version <= L.db.version)
                                return L.db && (L.version = L.db.version + 1),
                                v(L, !0)
                        }).then(function() {
                            return P(L).then(function() {
                                X(L, O, S, ha - 1)
                            })
                        })["catch"](S);
                    S(ja)
                }
            }
            function W(L) {
                var O = .75 * L.length
                  , S = L.length
                  , ha = 0;
                "=" === L[L.length - 1] && (O--,
                "=" === L[L.length - 2] && O--);
                var na = new ArrayBuffer(O)
                  , ja = new Uint8Array(na);
                for (O = 0; O < S; O += 4) {
                    var sa = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(L[O]);
                    var va = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(L[O + 1]);
                    var ua = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(L[O + 2]);
                    var Ca = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(L[O + 3]);
                    ja[ha++] = sa << 2 | va >> 4;
                    ja[ha++] = (va & 15) << 4 | ua >> 2;
                    ja[ha++] = (ua & 3) << 6 | Ca & 63
                }
                return na
            }
            function V(L) {
                L = new Uint8Array(L);
                var O = "", S;
                for (S = 0; S < L.length; S += 3)
                    O += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[L[S] >> 2],
                    O += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(L[S] & 3) << 4 | L[S + 1] >> 4],
                    O += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(L[S + 1] & 15) << 2 | L[S + 2] >> 6],
                    O += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[L[S + 2] & 63];
                2 === L.length % 3 ? O = O.substring(0, O.length - 1) + "=" : 1 === L.length % 3 && (O = O.substring(0, O.length - 2) + "==");
                return O
            }
            function ca(L, O, S, ha) {
                L.executeSql("CREATE TABLE IF NOT EXISTS " + O.storeName + " (id INTEGER PRIMARY KEY, key unique, value)", [], S, ha)
            }
            function u(L, O, S, ha, na, ja) {
                L.executeSql(S, ha, na, function(sa, va) {
                    va.code === va.SYNTAX_ERR ? sa.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?", [name], function(ua, Ca) {
                        Ca.rows.length ? ja(ua, va) : ca(ua, O, function() {
                            ua.executeSql(S, ha, na, ja)
                        }, ja)
                    }, ja) : ja(sa, va)
                }, ja)
            }
            function D(L, O, S, ha) {
                var na = this;
                L = k(L);
                var ja = new I(function(sa, va) {
                    na.ready().then(function() {
                        void 0 === O && (O = null);
                        var ua = O
                          , Ca = na._dbInfo;
                        Ca.serializer.serialize(O, function(Ja, Ia) {
                            Ia ? va(Ia) : Ca.db.transaction(function(La) {
                                u(La, Ca, "INSERT OR REPLACE INTO " + Ca.storeName + " (key, value) VALUES (?, ?)", [L, Ja], function() {
                                    sa(ua)
                                }, function(Ra, Za) {
                                    va(Za)
                                })
                            }, function(La) {
                                La.code === La.QUOTA_ERR && (0 < ha ? sa(D.apply(na, [L, ua, S, ha - 1])) : va(La))
                            })
                        })
                    })["catch"](va)
                }
                );
                g(ja, S);
                return ja
            }
            function B(L) {
                return new I(function(O, S) {
                    L.transaction(function(ha) {
                        ha.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'", [], function(na, ja) {
                            na = [];
                            for (var sa = 0; sa < ja.rows.length; sa++)
                                na.push(ja.rows.item(sa).name);
                            O({
                                db: L,
                                storeNames: na
                            })
                        }, function(na, ja) {
                            S(ja)
                        })
                    }, function(ha) {
                        S(ha)
                    })
                }
                )
            }
            function H(L, O) {
                var S = L.name + "/";
                L.storeName !== O.storeName && (S += L.storeName + "/");
                return S
            }
            function J(L, O) {
                L[O] = function() {
                    var S = arguments;
                    return L.ready().then(function() {
                        return L[O].apply(L, S)
                    })
                }
            }
            function K() {
                for (var L = 1; L < arguments.length; L++) {
                    var O = arguments[L];
                    if (O)
                        for (var S in O)
                            O.hasOwnProperty(S) && (fa(O[S]) ? arguments[0][S] = O[S].slice() : arguments[0][S] = O[S])
                }
                return arguments[0]
            }
            var Q = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(L) {
                return typeof L
            }
            : function(L) {
                return L && "function" === typeof Symbol && L.constructor === Symbol && L !== Symbol.prototype ? "symbol" : typeof L
            }
              , Y = function() {
                if ("undefined" !== typeof indexedDB)
                    return indexedDB;
                if ("undefined" !== typeof webkitIndexedDB)
                    return webkitIndexedDB;
                if ("undefined" !== typeof mozIndexedDB)
                    return mozIndexedDB;
                if ("undefined" !== typeof OIndexedDB)
                    return OIndexedDB;
                if ("undefined" !== typeof msIndexedDB)
                    return msIndexedDB
            }();
            "undefined" === typeof Promise && b(3);
            var I = Promise, T, Z, ra = Object.prototype.toString;
            b = {
                _driver: "asyncStorage",
                _initStorage: function(L) {
                    function O() {
                        return I.resolve()
                    }
                    var S = this
                      , ha = {
                        db: null
                    };
                    if (L)
                        for (var na in L)
                            ha[na] = L[na];
                    Z || (Z = {});
                    var ja = Z[ha.name];
                    ja || (ja = {
                        forages: [],
                        db: null,
                        dbReady: null,
                        deferredOperations: []
                    },
                    Z[ha.name] = ja);
                    ja.forages.push(S);
                    S._initReady || (S._initReady = S.ready,
                    S.ready = F);
                    L = [];
                    for (na = 0; na < ja.forages.length; na++) {
                        var sa = ja.forages[na];
                        sa !== S && L.push(sa._initReady()["catch"](O))
                    }
                    var va = ja.forages.slice(0);
                    return I.all(L).then(function() {
                        ha.db = ja.db;
                        return v(ha, !1)
                    }).then(function(ua) {
                        ha.db = ua;
                        return z(ha, S._defaultConfig.version) ? v(ha, !0) : ua
                    }).then(function(ua) {
                        ha.db = ja.db = ua;
                        S._dbInfo = ha;
                        for (ua = 0; ua < va.length; ua++) {
                            var Ca = va[ua];
                            Ca !== S && (Ca._dbInfo.db = ha.db,
                            Ca._dbInfo.version = ha.version)
                        }
                    })
                },
                _support: function() {
                    try {
                        if (!Y)
                            return !1;
                        var L = "undefined" !== typeof openDatabase && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform)
                          , O = "function" === typeof fetch && -1 !== fetch.toString().indexOf("[native code");
                        return (!L || O) && "undefined" !== typeof indexedDB && "undefined" !== typeof IDBKeyRange
                    } catch (S) {
                        return !1
                    }
                }(),
                iterate: function(L, O) {
                    var S = this
                      , ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            X(S._dbInfo, "readonly", function(sa, va) {
                                if (sa)
                                    return ja(sa);
                                try {
                                    var ua = va.objectStore(S._dbInfo.storeName).openCursor()
                                      , Ca = 1;
                                    ua.onsuccess = function() {
                                        var Ja = ua.result;
                                        if (Ja) {
                                            var Ia = Ja.value;
                                            Ia && Ia.__local_forage_encoded_blob && (Ia = C(Ia));
                                            Ia = L(Ia, Ja.key, Ca++);
                                            if (void 0 !== Ia)
                                                na(Ia);
                                            else
                                                Ja["continue"]()
                                        } else
                                            na()
                                    }
                                    ;
                                    ua.onerror = function() {
                                        ja(ua.error)
                                    }
                                } catch (Ja) {
                                    ja(Ja)
                                }
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                getItem: function(L, O) {
                    var S = this;
                    L = k(L);
                    var ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            X(S._dbInfo, "readonly", function(sa, va) {
                                if (sa)
                                    return ja(sa);
                                try {
                                    var ua = va.objectStore(S._dbInfo.storeName).get(L);
                                    ua.onsuccess = function() {
                                        var Ca = ua.result;
                                        void 0 === Ca && (Ca = null);
                                        Ca && Ca.__local_forage_encoded_blob && (Ca = C(Ca));
                                        na(Ca)
                                    }
                                    ;
                                    ua.onerror = function() {
                                        ja(ua.error)
                                    }
                                } catch (Ca) {
                                    ja(Ca)
                                }
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                setItem: function(L, O, S) {
                    var ha = this;
                    L = k(L);
                    var na = new I(function(ja, sa) {
                        var va;
                        ha.ready().then(function() {
                            va = ha._dbInfo;
                            return "[object Blob]" === ra.call(O) ? n(va.db).then(function(ua) {
                                return ua ? O : E(O)
                            }) : O
                        }).then(function(ua) {
                            X(ha._dbInfo, "readwrite", function(Ca, Ja) {
                                if (Ca)
                                    return sa(Ca);
                                try {
                                    var Ia = Ja.objectStore(ha._dbInfo.storeName).put(ua, L);
                                    null === ua && (ua = void 0);
                                    Ja.oncomplete = function() {
                                        void 0 === ua && (ua = null);
                                        ja(ua)
                                    }
                                    ;
                                    Ja.onabort = Ja.onerror = function() {
                                        sa(Ia.error ? Ia.error : Ia.transaction.error)
                                    }
                                } catch (La) {
                                    sa(La)
                                }
                            })
                        })["catch"](sa)
                    }
                    );
                    g(na, S);
                    return na
                },
                removeItem: function(L, O) {
                    var S = this;
                    L = k(L);
                    var ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            X(S._dbInfo, "readwrite", function(sa, va) {
                                if (sa)
                                    return ja(sa);
                                try {
                                    var ua = va.objectStore(S._dbInfo.storeName)["delete"](L);
                                    va.oncomplete = function() {
                                        na()
                                    }
                                    ;
                                    va.onerror = function() {
                                        ja(ua.error)
                                    }
                                    ;
                                    va.onabort = function() {
                                        ja(ua.error ? ua.error : ua.transaction.error)
                                    }
                                } catch (Ca) {
                                    ja(Ca)
                                }
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                clear: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            X(O._dbInfo, "readwrite", function(ja, sa) {
                                if (ja)
                                    return na(ja);
                                try {
                                    var va = sa.objectStore(O._dbInfo.storeName).clear();
                                    sa.oncomplete = function() {
                                        ha()
                                    }
                                    ;
                                    sa.onabort = sa.onerror = function() {
                                        na(va.error ? va.error : va.transaction.error)
                                    }
                                } catch (ua) {
                                    na(ua)
                                }
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                length: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            X(O._dbInfo, "readonly", function(ja, sa) {
                                if (ja)
                                    return na(ja);
                                try {
                                    var va = sa.objectStore(O._dbInfo.storeName).count();
                                    va.onsuccess = function() {
                                        ha(va.result)
                                    }
                                    ;
                                    va.onerror = function() {
                                        na(va.error)
                                    }
                                } catch (ua) {
                                    na(ua)
                                }
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                key: function(L, O) {
                    var S = this
                      , ha = new I(function(na, ja) {
                        if (0 > L)
                            na(null);
                        else
                            S.ready().then(function() {
                                X(S._dbInfo, "readonly", function(sa, va) {
                                    if (sa)
                                        return ja(sa);
                                    try {
                                        var ua = !1
                                          , Ca = va.objectStore(S._dbInfo.storeName).openCursor();
                                        Ca.onsuccess = function() {
                                            var Ja = Ca.result;
                                            Ja ? 0 === L ? na(Ja.key) : ua ? na(Ja.key) : (ua = !0,
                                            Ja.advance(L)) : na(null)
                                        }
                                        ;
                                        Ca.onerror = function() {
                                            ja(Ca.error)
                                        }
                                    } catch (Ja) {
                                        ja(Ja)
                                    }
                                })
                            })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                keys: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            X(O._dbInfo, "readonly", function(ja, sa) {
                                if (ja)
                                    return na(ja);
                                try {
                                    var va = sa.objectStore(O._dbInfo.storeName).openCursor()
                                      , ua = [];
                                    va.onsuccess = function() {
                                        var Ca = va.result;
                                        Ca ? (ua.push(Ca.key),
                                        Ca["continue"]()) : ha(ua)
                                    }
                                    ;
                                    va.onerror = function() {
                                        na(va.error)
                                    }
                                } catch (Ca) {
                                    na(Ca)
                                }
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                dropInstance: function(L, O) {
                    O = l.apply(this, arguments);
                    var S = this.config();
                    L = "function" !== typeof L && L || {};
                    L.name || (L.name = L.name || S.name,
                    L.storeName = L.storeName || S.storeName);
                    L.name ? (S = L.name === S.name && this._dbInfo.db ? I.resolve(this._dbInfo.db) : v(L, !1),
                    S = L.storeName ? S.then(function(ha) {
                        if (ha.objectStoreNames.contains(L.storeName)) {
                            var na = ha.version + 1;
                            p(L);
                            var ja = Z[L.name].forages;
                            for (ha = 0; ha < ja.length; ha++) {
                                var sa = ja[ha];
                                sa._dbInfo.db && (sa._dbInfo.db.close(),
                                sa._dbInfo.db = null,
                                sa._dbInfo.version = na)
                            }
                            return (new I(function(va, ua) {
                                var Ca = Y.open(L.name, na);
                                Ca.onerror = ua;
                                Ca.onupgradeneeded = function() {
                                    Ca.result.deleteObjectStore(L.storeName)
                                }
                                ;
                                Ca.onsuccess = function() {
                                    va(Ca.result)
                                }
                            }
                            )).then(function(va) {
                                for (var ua = 0; ua < ja.length; ua++) {
                                    var Ca = ja[ua];
                                    Ca._dbInfo.db = va;
                                    q(Ca._dbInfo)
                                }
                            })["catch"](function(va) {
                                (t(L, va) || I.resolve())["catch"](function() {});
                                throw va;
                            })
                        }
                    }) : S.then(function() {
                        p(L);
                        for (var ha = Z[L.name].forages, na = 0; na < ha.length; na++) {
                            var ja = ha[na];
                            ja._dbInfo.db && (ja._dbInfo.db.close(),
                            ja._dbInfo.db = null)
                        }
                        return (new I(function(sa, va) {
                            var ua = Y.deleteDatabase(L.name);
                            ua.onerror = ua.onblocked = va;
                            ua.onsuccess = sa
                        }
                        )).then(function() {
                            for (var sa = 0; sa < ha.length; sa++)
                                q(ja._dbInfo)
                        })["catch"](function(sa) {
                            (t(L, sa) || I.resolve())["catch"](function() {});
                            throw sa;
                        })
                    })) : S = I.reject("Invalid arguments");
                    g(S, O);
                    return S
                }
            };
            var ia = /^~~local_forage_type~([^~]+)~/
              , la = Object.prototype.toString
              , aa = {
                serialize: function(L, O) {
                    var S = "";
                    L && (S = la.call(L));
                    if (L && ("[object ArrayBuffer]" === S || L.buffer && "[object ArrayBuffer]" === la.call(L.buffer))) {
                        var ha = "__lfsc__:";
                        if (L instanceof ArrayBuffer) {
                            var na = L;
                            ha += "arbf"
                        } else
                            na = L.buffer,
                            "[object Int8Array]" === S ? ha += "si08" : "[object Uint8Array]" === S ? ha += "ui08" : "[object Uint8ClampedArray]" === S ? ha += "uic8" : "[object Int16Array]" === S ? ha += "si16" : "[object Uint16Array]" === S ? ha += "ur16" : "[object Int32Array]" === S ? ha += "si32" : "[object Uint32Array]" === S ? ha += "ui32" : "[object Float32Array]" === S ? ha += "fl32" : "[object Float64Array]" === S ? ha += "fl64" : O(Error("Failed to get type for BinaryArray"));
                        O(ha + V(na))
                    } else if ("[object Blob]" === S)
                        S = new FileReader,
                        S.onload = function() {
                            var ja = "~~local_forage_type~" + L.type + "~" + V(this.result);
                            O("__lfsc__:blob" + ja)
                        }
                        ,
                        S.readAsArrayBuffer(L);
                    else
                        try {
                            O(JSON.stringify(L))
                        } catch (ja) {
                            console.error("Couldn't convert value into a JSON string: ", L),
                            O(null, ja)
                        }
                },
                deserialize: function(L) {
                    if ("__lfsc__:" !== L.substring(0, 9))
                        return JSON.parse(L);
                    var O = L.substring(13);
                    L = L.substring(9, 13);
                    if ("blob" === L && ia.test(O)) {
                        var S = O.match(ia);
                        var ha = S[1];
                        O = O.substring(S[0].length)
                    }
                    O = W(O);
                    switch (L) {
                    case "arbf":
                        return O;
                    case "blob":
                        return f([O], {
                            type: ha
                        });
                    case "si08":
                        return new Int8Array(O);
                    case "ui08":
                        return new Uint8Array(O);
                    case "uic8":
                        return new Uint8ClampedArray(O);
                    case "si16":
                        return new Int16Array(O);
                    case "ur16":
                        return new Uint16Array(O);
                    case "si32":
                        return new Int32Array(O);
                    case "ui32":
                        return new Uint32Array(O);
                    case "fl32":
                        return new Float32Array(O);
                    case "fl64":
                        return new Float64Array(O);
                    default:
                        throw Error("Unkown type: " + L);
                    }
                },
                stringToBuffer: W,
                bufferToString: V
            };
            c = {
                _driver: "webSQLStorage",
                _initStorage: function(L) {
                    var O = this
                      , S = {
                        db: null
                    };
                    if (L)
                        for (var ha in L)
                            S[ha] = "string" !== typeof L[ha] ? L[ha].toString() : L[ha];
                    L = new I(function(na, ja) {
                        try {
                            S.db = openDatabase(S.name, String(S.version), S.description, S.size)
                        } catch (sa) {
                            return ja(sa)
                        }
                        S.db.transaction(function(sa) {
                            ca(sa, S, function() {
                                O._dbInfo = S;
                                na()
                            }, function(va, ua) {
                                ja(ua)
                            })
                        }, ja)
                    }
                    );
                    S.serializer = aa;
                    return L
                },
                _support: "function" === typeof openDatabase,
                iterate: function(L, O) {
                    var S = this
                      , ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            var sa = S._dbInfo;
                            sa.db.transaction(function(va) {
                                u(va, sa, "SELECT * FROM " + sa.storeName, [], function(ua, Ca) {
                                    ua = Ca.rows;
                                    Ca = ua.length;
                                    for (var Ja = 0; Ja < Ca; Ja++) {
                                        var Ia = ua.item(Ja)
                                          , La = Ia.value;
                                        La && (La = sa.serializer.deserialize(La));
                                        La = L(La, Ia.key, Ja + 1);
                                        if (void 0 !== La) {
                                            na(La);
                                            return
                                        }
                                    }
                                    na()
                                }, function(ua, Ca) {
                                    ja(Ca)
                                })
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                getItem: function(L, O) {
                    var S = this;
                    L = k(L);
                    var ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            var sa = S._dbInfo;
                            sa.db.transaction(function(va) {
                                u(va, sa, "SELECT * FROM " + sa.storeName + " WHERE key = ? LIMIT 1", [L], function(ua, Ca) {
                                    (ua = Ca.rows.length ? Ca.rows.item(0).value : null) && (ua = sa.serializer.deserialize(ua));
                                    na(ua)
                                }, function(ua, Ca) {
                                    ja(Ca)
                                })
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                setItem: function(L, O, S) {
                    return D.apply(this, [L, O, S, 1])
                },
                removeItem: function(L, O) {
                    var S = this;
                    L = k(L);
                    var ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            var sa = S._dbInfo;
                            sa.db.transaction(function(va) {
                                u(va, sa, "DELETE FROM " + sa.storeName + " WHERE key = ?", [L], function() {
                                    na()
                                }, function(ua, Ca) {
                                    ja(Ca)
                                })
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                clear: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            var ja = O._dbInfo;
                            ja.db.transaction(function(sa) {
                                u(sa, ja, "DELETE FROM " + ja.storeName, [], function() {
                                    ha()
                                }, function(va, ua) {
                                    na(ua)
                                })
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                length: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            var ja = O._dbInfo;
                            ja.db.transaction(function(sa) {
                                u(sa, ja, "SELECT COUNT(key) as c FROM " + ja.storeName, [], function(va, ua) {
                                    va = ua.rows.item(0).c;
                                    ha(va)
                                }, function(va, ua) {
                                    na(ua)
                                })
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                key: function(L, O) {
                    var S = this
                      , ha = new I(function(na, ja) {
                        S.ready().then(function() {
                            var sa = S._dbInfo;
                            sa.db.transaction(function(va) {
                                u(va, sa, "SELECT key FROM " + sa.storeName + " WHERE id = ? LIMIT 1", [L + 1], function(ua, Ca) {
                                    ua = Ca.rows.length ? Ca.rows.item(0).key : null;
                                    na(ua)
                                }, function(ua, Ca) {
                                    ja(Ca)
                                })
                            })
                        })["catch"](ja)
                    }
                    );
                    g(ha, O);
                    return ha
                },
                keys: function(L) {
                    var O = this
                      , S = new I(function(ha, na) {
                        O.ready().then(function() {
                            var ja = O._dbInfo;
                            ja.db.transaction(function(sa) {
                                u(sa, ja, "SELECT key FROM " + ja.storeName, [], function(va, ua) {
                                    va = [];
                                    for (var Ca = 0; Ca < ua.rows.length; Ca++)
                                        va.push(ua.rows.item(Ca).key);
                                    ha(va)
                                }, function(va, ua) {
                                    na(ua)
                                })
                            })
                        })["catch"](na)
                    }
                    );
                    g(S, L);
                    return S
                },
                dropInstance: function(L, O) {
                    O = l.apply(this, arguments);
                    var S = this.config();
                    L = "function" !== typeof L && L || {};
                    L.name || (L.name = L.name || S.name,
                    L.storeName = L.storeName || S.storeName);
                    var ha = this;
                    var na = L.name ? (new I(function(ja) {
                        var sa = L.name === S.name ? ha._dbInfo.db : openDatabase(L.name, "", "", 0);
                        L.storeName ? ja({
                            db: sa,
                            storeNames: [L.storeName]
                        }) : ja(B(sa))
                    }
                    )).then(function(ja) {
                        return new I(function(sa, va) {
                            ja.db.transaction(function(ua) {
                                function Ca(Ra) {
                                    return new I(function(Za, Pa) {
                                        ua.executeSql("DROP TABLE IF EXISTS " + Ra, [], function() {
                                            Za()
                                        }, function(Ta, kb) {
                                            Pa(kb)
                                        })
                                    }
                                    )
                                }
                                for (var Ja = [], Ia = 0, La = ja.storeNames.length; Ia < La; Ia++)
                                    Ja.push(Ca(ja.storeNames[Ia]));
                                I.all(Ja).then(function() {
                                    sa()
                                })["catch"](function(Ra) {
                                    va(Ra)
                                })
                            }, function(ua) {
                                va(ua)
                            })
                        }
                        )
                    }) : I.reject("Invalid arguments");
                    g(na, O);
                    return na
                }
            };
            try {
                var U = "undefined" !== typeof localStorage && "setItem"in localStorage && "function" === typeof localStorage.setItem
            } catch (L) {
                U = !1
            }
            var fa = Array.isArray || function(L) {
                return "[object Array]" === Object.prototype.toString.call(L)
            }
              , ma = {}
              , w = {}
              , pa = {
                INDEXEDDB: b,
                WEBSQL: c,
                LOCALSTORAGE: {
                    _driver: "localStorageWrapper",
                    _initStorage: function(L) {
                        var O = {};
                        if (L)
                            for (var S in L)
                                O[S] = L[S];
                        O.keyPrefix = H(L, this._defaultConfig);
                        try {
                            localStorage.setItem("_localforage_support_test", !0);
                            localStorage.removeItem("_localforage_support_test");
                            var ha = !1
                        } catch (na) {
                            ha = !0
                        }
                        if (ha && !(0 < localStorage.length))
                            return I.reject();
                        this._dbInfo = O;
                        O.serializer = aa;
                        return I.resolve()
                    },
                    _support: U,
                    iterate: function(L, O) {
                        var S = this
                          , ha = S.ready().then(function() {
                            for (var na = S._dbInfo, ja = na.keyPrefix, sa = ja.length, va = localStorage.length, ua = 1, Ca = 0; Ca < va; Ca++) {
                                var Ja = localStorage.key(Ca);
                                if (0 === Ja.indexOf(ja)) {
                                    var Ia = localStorage.getItem(Ja);
                                    Ia && (Ia = na.serializer.deserialize(Ia));
                                    Ia = L(Ia, Ja.substring(sa), ua++);
                                    if (void 0 !== Ia)
                                        return Ia
                                }
                            }
                        });
                        g(ha, O);
                        return ha
                    },
                    getItem: function(L, O) {
                        var S = this;
                        L = k(L);
                        var ha = S.ready().then(function() {
                            var na = S._dbInfo
                              , ja = localStorage.getItem(na.keyPrefix + L);
                            ja && (ja = na.serializer.deserialize(ja));
                            return ja
                        });
                        g(ha, O);
                        return ha
                    },
                    setItem: function(L, O, S) {
                        var ha = this;
                        L = k(L);
                        var na = ha.ready().then(function() {
                            void 0 === O && (O = null);
                            var ja = O;
                            return new I(function(sa, va) {
                                var ua = ha._dbInfo;
                                ua.serializer.serialize(O, function(Ca, Ja) {
                                    if (Ja)
                                        va(Ja);
                                    else
                                        try {
                                            localStorage.setItem(ua.keyPrefix + L, Ca),
                                            sa(ja)
                                        } catch (Ia) {
                                            "QuotaExceededError" !== Ia.name && "NS_ERROR_DOM_QUOTA_REACHED" !== Ia.name || va(Ia),
                                            va(Ia)
                                        }
                                })
                            }
                            )
                        });
                        g(na, S);
                        return na
                    },
                    removeItem: function(L, O) {
                        var S = this;
                        L = k(L);
                        var ha = S.ready().then(function() {
                            localStorage.removeItem(S._dbInfo.keyPrefix + L)
                        });
                        g(ha, O);
                        return ha
                    },
                    clear: function(L) {
                        var O = this
                          , S = O.ready().then(function() {
                            for (var ha = O._dbInfo.keyPrefix, na = localStorage.length - 1; 0 <= na; na--) {
                                var ja = localStorage.key(na);
                                0 === ja.indexOf(ha) && localStorage.removeItem(ja)
                            }
                        });
                        g(S, L);
                        return S
                    },
                    length: function(L) {
                        var O = this.keys().then(function(S) {
                            return S.length
                        });
                        g(O, L);
                        return O
                    },
                    key: function(L, O) {
                        var S = this
                          , ha = S.ready().then(function() {
                            var na = S._dbInfo;
                            try {
                                var ja = localStorage.key(L)
                            } catch (sa) {
                                ja = null
                            }
                            ja && (ja = ja.substring(na.keyPrefix.length));
                            return ja
                        });
                        g(ha, O);
                        return ha
                    },
                    keys: function(L) {
                        var O = this
                          , S = O.ready().then(function() {
                            for (var ha = O._dbInfo, na = localStorage.length, ja = [], sa = 0; sa < na; sa++) {
                                var va = localStorage.key(sa);
                                0 === va.indexOf(ha.keyPrefix) && ja.push(va.substring(ha.keyPrefix.length))
                            }
                            return ja
                        });
                        g(S, L);
                        return S
                    },
                    dropInstance: function(L, O) {
                        O = l.apply(this, arguments);
                        L = "function" !== typeof L && L || {};
                        if (!L.name) {
                            var S = this.config();
                            L.name = L.name || S.name;
                            L.storeName = L.storeName || S.storeName
                        }
                        var ha = this;
                        S = L.name ? (new I(function(na) {
                            L.storeName ? na(H(L, ha._defaultConfig)) : na(L.name + "/")
                        }
                        )).then(function(na) {
                            for (var ja = localStorage.length - 1; 0 <= ja; ja--) {
                                var sa = localStorage.key(ja);
                                0 === sa.indexOf(na) && localStorage.removeItem(sa)
                            }
                        }) : I.reject("Invalid arguments");
                        g(S, O);
                        return S
                    }
                }
            };
            U = [pa.INDEXEDDB._driver, pa.WEBSQL._driver, pa.LOCALSTORAGE._driver];
            var ka = ["dropInstance"]
              , wa = "clear getItem iterate key keys length removeItem setItem".split(" ").concat(ka)
              , ta = {
                description: "",
                driver: U.slice(),
                name: "localforage",
                size: 4980736,
                storeName: "keyvaluepairs",
                version: 1
            };
            U = new (function() {
                function L(O) {
                    if (!(this instanceof L))
                        throw new TypeError("Cannot call a class as a function");
                    for (var S in pa)
                        if (pa.hasOwnProperty(S)) {
                            var ha = pa[S]
                              , na = ha._driver;
                            this[S] = na;
                            ma[na] || this.defineDriver(ha)
                        }
                    this._defaultConfig = K({}, ta);
                    this._config = K({}, this._defaultConfig, O);
                    this._initDriver = this._driverSet = null;
                    this._ready = !1;
                    this._dbInfo = null;
                    this._wrapLibraryMethodsWithReady();
                    this.setDriver(this._config.driver)["catch"](function() {})
                }
                L.prototype.config = function(O) {
                    if ("object" === ("undefined" === typeof O ? "undefined" : Q(O))) {
                        if (this._ready)
                            return Error("Can't call config() after localforage has been used.");
                        for (var S in O) {
                            "storeName" === S && (O[S] = O[S].replace(/\W/g, "_"));
                            if ("version" === S && "number" !== typeof O[S])
                                return Error("Database version must be a number.");
                            this._config[S] = O[S]
                        }
                        return "driver"in O && O.driver ? this.setDriver(this._config.driver) : !0
                    }
                    return "string" === typeof O ? this._config[O] : this._config
                }
                ;
                L.prototype.defineDriver = function(O, S, ha) {
                    var na = new I(function(ja, sa) {
                        try {
                            var va = O._driver
                              , ua = Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");
                            if (O._driver) {
                                for (var Ca = wa.concat("_initStorage"), Ja = 0, Ia = Ca.length; Ja < Ia; Ja++) {
                                    var La = Ca[Ja];
                                    if ((0 > ka.indexOf(La) || O[La]) && "function" !== typeof O[La]) {
                                        sa(ua);
                                        return
                                    }
                                }
                                (function() {
                                    for (var Ra = function(kb) {
                                        return function() {
                                            var wb = I.reject(Error("Method " + kb + " is not implemented by the current driver"));
                                            g(wb, arguments[arguments.length - 1]);
                                            return wb
                                        }
                                    }, Za = 0, Pa = ka.length; Za < Pa; Za++) {
                                        var Ta = ka[Za];
                                        O[Ta] || (O[Ta] = Ra(Ta))
                                    }
                                }
                                )();
                                ua = function(Ra) {
                                    ma[va] && console.info("Redefining LocalForage driver: " + va);
                                    ma[va] = O;
                                    w[va] = Ra;
                                    ja()
                                }
                                ;
                                "_support"in O ? O._support && "function" === typeof O._support ? O._support().then(ua, sa) : ua(!!O._support) : ua(!0)
                            } else
                                sa(ua)
                        } catch (Ra) {
                            sa(Ra)
                        }
                    }
                    );
                    h(na, S, ha);
                    return na
                }
                ;
                L.prototype.driver = function() {
                    return this._driver || null
                }
                ;
                L.prototype.getDriver = function(O, S, ha) {
                    O = ma[O] ? I.resolve(ma[O]) : I.reject(Error("Driver not found."));
                    h(O, S, ha);
                    return O
                }
                ;
                L.prototype.getSerializer = function(O) {
                    var S = I.resolve(aa);
                    h(S, O);
                    return S
                }
                ;
                L.prototype.ready = function(O) {
                    var S = this
                      , ha = S._driverSet.then(function() {
                        null === S._ready && (S._ready = S._initDriver());
                        return S._ready
                    });
                    h(ha, O, O);
                    return ha
                }
                ;
                L.prototype.setDriver = function(O, S, ha) {
                    function na() {
                        va._config.driver = va.driver()
                    }
                    function ja(Ca) {
                        va._extend(Ca);
                        na();
                        va._ready = va._initStorage(va._config);
                        return va._ready
                    }
                    function sa(Ca) {
                        return function() {
                            function Ja() {
                                for (; Ia < Ca.length; ) {
                                    var La = Ca[Ia];
                                    Ia++;
                                    va._dbInfo = null;
                                    va._ready = null;
                                    return va.getDriver(La).then(ja)["catch"](Ja)
                                }
                                na();
                                va._driverSet = I.reject(Error("No available storage method found."));
                                return va._driverSet
                            }
                            var Ia = 0;
                            return Ja()
                        }
                    }
                    var va = this;
                    fa(O) || (O = [O]);
                    var ua = this._getSupportedDrivers(O);
                    this._driverSet = (null !== this._driverSet ? this._driverSet["catch"](function() {
                        return I.resolve()
                    }) : I.resolve()).then(function() {
                        var Ca = ua[0];
                        va._dbInfo = null;
                        va._ready = null;
                        return va.getDriver(Ca).then(function(Ja) {
                            va._driver = Ja._driver;
                            na();
                            va._wrapLibraryMethodsWithReady();
                            va._initDriver = sa(ua)
                        })
                    })["catch"](function() {
                        na();
                        va._driverSet = I.reject(Error("No available storage method found."));
                        return va._driverSet
                    });
                    h(this._driverSet, S, ha);
                    return this._driverSet
                }
                ;
                L.prototype.supports = function(O) {
                    return !!w[O]
                }
                ;
                L.prototype._extend = function(O) {
                    K(this, O)
                }
                ;
                L.prototype._getSupportedDrivers = function(O) {
                    for (var S = [], ha = 0, na = O.length; ha < na; ha++) {
                        var ja = O[ha];
                        this.supports(ja) && S.push(ja)
                    }
                    return S
                }
                ;
                L.prototype._wrapLibraryMethodsWithReady = function() {
                    for (var O = 0, S = wa.length; O < S; O++)
                        J(this, wa[O])
                }
                ;
                L.prototype.createInstance = function(O) {
                    return new L(O)
                }
                ;
                return L
            }());
            d.exports = U
        }
        , {
            3: 3
        }]
    }, {}, [4])(4)
});
function CBDebug() {}
CBDebug.assert = function(e, b) {}
;
CBDebug.call = function(e, b, d) {}
;
CBDebug.profile = function(e) {}
;
CBDebug.profileEnd = function() {}
;
function ASSERT() {}
"use strict";
var CB = {
    namespace: function(e) {
        e = e.split(".");
        var b = CB;
        "CB" === e[0] && (e = e.slice(1));
        for (var d = 0; d < e.length; d += 1)
            "undefined" === typeof b[e[d]] && (b[e[d]] = {}),
            b = b[e[d]]
    },
    inherit: function(e, b) {
        var d = e.prototype;
        e.prototype = new b;
        for (var c in d)
            d.hasOwnProperty(c) && (e.prototype[c] = d[c]);
        e.superClass = b;
        e.prototype.superClass = b.prototype;
        return e
    },
    mixin: function(e, b) {
        for (var d in b)
            b.hasOwnProperty(d) && (e.prototype[d] = b[d])
    },
    V0: function(e, b) {
        for (var d in b)
            b.hasOwnProperty(d) && (e[d] = b[d])
    },
    partial: function(e, b) {
        return ObjUtil.copyTo(b, e, !0)
    },
    V1: function(e, b) {
        Object.defineProperty(e, b, {
            writable: !1
        })
    },
    property: function(e, b, d, c) {
        Object.defineProperty(e, b, {
            get: d,
            set: c
        })
    },
    V2: function(e, b, d, c) {
        Object.defineProperty(e.prototype, b, {
            get: d,
            set: c
        })
    }
};
function getCtxFunction(e, b) {
    return function() {
        return b.apply(e, arguments)
    }
}
Function.prototype.bind || (Function.prototype.bind = function(e) {
    return getCtxFunction(e, this)
}
);
var V3i1 = {
    initInstForListeners: function(e) {
        e.addListener = V3i1.addListener;
        e.removeListener = V3i1.removeListener;
        e.fireEvent = V3i1.fireEvent;
        e.getListeners = V3i1.getListeners;
        e.enableEvents = V3i1.enableEvents;
        e.eventsEnabled = !0;
        e.idLstnr = 0
    },
    initForListeners: function(e) {
        V3i1.initInstForListeners(e.prototype)
    },
    enableEvents: function(e) {
        this.eventsEnabled = e
    },
    getListeners: function(e) {
        e = "m_lstOn" + e;
        var b = this[e];
        b || (b = {},
        this[e] = b);
        return b
    },
    addListener: function(e, b) {
        this.getListeners(e)[++this.idLstnr] = b;
        return this.idLstnr
    },
    removeListener: function(e, b) {
        delete this.getListeners(e)[b]
    },
    fireEvent: function(e, b) {
        if (this.eventsEnabled) {
            var d = this.getListeners(e), c = [], f;
            for (f in d)
                if (d.hasOwnProperty(f)) {
                    var g = d[f];
                    try {
                        var h = g.apply(this, b);
                        h && c.push(h)
                    } catch (k) {
                        CB.V3("fireEv=" + e, k)
                    }
                }
            return c
        }
    },
    addInstEvent: function(e, b, d) {
        e[String.formatEx("addOn{0}Listener", b)] = function(c) {
            return this.addListener(b, c)
        }
        ;
        e[String.formatEx("removeOn{0}Listener", b)] = function(c) {
            this.removeListener(b, c)
        }
        ;
        e[String.formatEx("fireOn{0}", b)] = function() {
            var c = [];
            if (this[String.formatEx("fireOn{0}", b)].delayed)
                this[String.formatEx("fireOn{0}", b)].needFire = !0;
            else
                try {
                    var f = arguments || [];
                    d && (f = d.call(this));
                    c = this.fireEvent(b, f)
                } catch (g) {
                    CB.V3("fire-" + b, g)
                }
            return c
        }
        ;
        e.removeAllListeners = function() {
            for (var c in this)
                this.hasOwnProperty(c) && 0 == c.search("m_lstOn") && delete this[c]
        }
        ;
        e[String.formatEx("delayfireOn{0}", b)] = function(c) {
            c = c || 100;
            this[String.formatEx("fireOn{0}", b)].delayed = !0;
            var f = this;
            window.setTimeout(function() {
                f[String.formatEx("continuefireOn{0}", b)]()
            }, c)
        }
        ;
        e[String.formatEx("continuefireOn{0}", b)] = function() {
            this[String.formatEx("fireOn{0}", b)].delayed = !1;
            if (this[String.formatEx("fireOn{0}", b)].needFire)
                try {
                    this[String.formatEx("fireOn{0}", b)]()
                } catch (c) {
                    CB.V3("delfire-" + b, c)
                }
            this[String.formatEx("fireOn{0}", b)].needFire = !1
        }
    },
    addEvent: function(e, b, d) {
        V3i1.addInstEvent(e.prototype, b, d)
    }
};
function HashTable(e, b) {
    e && (this.funcHash = e);
    b && (this.funcEq = b);
    this.impl = {}
}
HashTable.prototype.impl = {};
HashTable.prototype.funcHash = function(e) {
    return ObjUtil.hashCode(e)
}
;
HashTable.prototype.funcEq = function(e, b) {
    return e === b
}
;
HashTable.prototype.getItem = function(e) {
    var b = this.funcHash(e);
    if (b = this.impl[b]) {
        var d = function(c) {
            return this.funcEq(c.key, e)
        }
        .bind(this);
        b = b.filter(d);
        if (null != b && 0 < b.length)
            return b[0].value
    }
}
;
HashTable.prototype.setItem = function(e, b) {
    var d = this.funcHash(e)
      , c = this.impl[d];
    c || (c = [],
    this.impl[d] = c);
    d = 0;
    for (var f = c.length; d < f; ++d) {
        var g = c[d];
        if (this.funcEq(g.key, e)) {
            g.value = b;
            return
        }
    }
    c.push({
        key: e,
        value: b
    })
}
;
HashTable.prototype.removeItem = function(e) {
    var b = this.funcHash(e)
      , d = this.impl[b];
    if (d) {
        var c = function(f) {
            return !this.funcEq(f.key, e)
        }
        .bind(this);
        d = d.filter(c);
        this.impl[b] = d
    }
}
;
HashTable.prototype.clear = function() {
    this.impl = {}
}
;
"use strict";
var ObjUtil = {
    clone: function(e, b) {
        b || (b = new HashTable);
        var d = b.getItem(e);
        if (d)
            return d;
        e.clone ? d = e.clone(b) : (d = ObjUtil.isArray(e) ? [] : new e.constructor,
        b.setItem(e, d),
        ObjUtil.copyTo(e, d, !1, b));
        b.setItem(e, d);
        return d
    },
    clone2: function(e) {
        return ObjUtil.copyTo2(e, new e.constructor)
    },
    cloneNoFunc: function(e) {
        e = JSON.stringify(e);
        return JSON.parse(e)
    },
    copyTo: function(e, b, d, c) {
        for (var f in e)
            if (!(d && f in b)) {
                var g = e[f]
                  , h = g;
                null != g && "object" === typeof g && (h = ObjUtil.clone(g, c));
                b[f] = h
            }
        e.toString !== b.toString && (b.toString = e.toString);
        return b
    },
    copyTo2: function(e, b) {
        for (var d in e) {
            var c = e[d]
              , f = c;
            null != c && "object" === typeof c && (f = ObjUtil.clone2(c));
            b[d] = f
        }
        return b
    }
};
function _CMP(e, b) {
    if (void 0 === e !== (void 0 === b))
        return !1;
    if (void 0 === e && void 0 === b)
        return !0;
    if (null === e !== (null === b))
        return !1;
    if (null === e && null === b)
        return !0;
    var d = typeof e
      , c = typeof b;
    return "object" === d !== ("object" === c) ? !1 : "object" === d && "object" === c ? ObjUtil.equals(e, b) : e == b
}
ObjUtil.equals = function(e, b) {
    if (e.equals)
        return e.equals(b);
    for (var d in e)
        if (!_CMP(e[d], b[d]))
            return !1;
    return !0
}
;
ObjUtil.isEmpty = function(e) {
    return !Object.keys(e).length
}
;
ObjUtil.isFunction = function(e) {
    return !!(e && e.constructor && e.call && e.apply)
}
;
ObjUtil.isArray = function(e) {
    return "[object Array]" === Object.prototype.toString.call(e)
}
;
function djb2(e) {
    for (var b = 5381, d, c = 0; c < e.length; ++c)
        d = e.charCodeAt(c) & 255,
        b = 4294967295 & (b << 5) + b + d;
    return b
}
function StringHash(e) {
    return djb2(typeof e + e.constructor.toString())
}
ObjUtil.hashCode = function(e) {
    return e.hashCode ? e.hashCode() : "object" === typeof e ? StringHash(e) : djb2(e.toString())
}
;
function EnumToString(e, b) {
    for (var d in e)
        if (e[d] === b)
            return d;
    return ""
}
function StringToEnum(e, b) {
    if (b in e)
        return e[b]
}
function StringToEnumFlags(e, b) {
    b = b.split("|");
    for (var d = 0, c = 0, f = b.length; c < f; ++c) {
        var g = StringToEnum(e, b[c]);
        g && (d |= g)
    }
    return d
}
function evalObj(e) {
    var b = {}, d;
    for (d in e) {
        var c = e[d];
        b[d] = c;
        "string" === typeof c && (0 > c.indexOf("{") || (b[d] = eval("(" + c + ")")))
    }
    return b
}
function minusToCamel(e) {
    for (var b = e.indexOf("-"); 0 <= b; b = e.indexOf("-")) {
        var d = e.substring(0, b);
        e = e.substring(b + 1);
        0 < e.length && (e = e.charAt(0).toUpperCase() + (1 < e.length ? e.substring(1) : ""));
        e = d + e
    }
    return e
}
function NOT(e) {
    return function() {
        return !e.apply(this, arguments)
    }
}
function TRUE() {
    return function() {
        return !0
    }
}
function FALSE() {
    return function() {
        return !1
    }
}
function IDENTITY(e) {
    return e
}
function EqualsFilter(e) {
    return function(b, d, c) {
        return ObjUtil.equals(b, e)
    }
}
function NoArgs(e) {
    return function() {
        return e()
    }
}
function emptyFunc() {}
"use strict";
Array.prototype.find || (Array.prototype.find = function(e) {
    if ("function" !== typeof e)
        throw new TypeError("predicate must be a function");
    for (var b = Object(this), d = b.length >>> 0, c, f = 0; f < d; f++)
        if (f in b && (c = b[f],
        e.call(this, c, f, b)))
            return c
}
);
Array.prototype.all || (Array.prototype.all = function(e) {
    return !this.some(function(b, d, c) {
        return !e(b, d, c)
    })
}
);
Array.prototype.findIndex || (Array.prototype.findIndex = function(e) {
    if ("function" !== typeof e)
        throw new TypeError("predicate must be a function");
    for (var b = Object(this), d = b.length >>> 0, c, f = 0; f < d; f++)
        if (f in b && (c = b[f],
        e.call(this, c, f, b)))
            return f;
    return -1
}
);
Array.prototype.pickRandom || (Array.prototype.pickRandom = function(e) {
    if ("function" !== typeof e)
        throw new TypeError("predicate must be a function");
    for (var b = Object(this), d = b.length >>> 0, c, f = void 0, g = 0, h = 0; h < d; h++)
        h in b && (g += e.call(this, b[h], h, b));
    var k = Math.random() * g;
    for (h = g = 0; h < d; h++)
        if (h in b && (c = b[h],
        g += e.call(this, c, h, b),
        g >= k)) {
            f = c;
            break
        }
    return f
}
);
Array.prototype.removeIf || (Array.prototype.removeIf = function(e) {
    for (var b = 0; b < this.length; )
        e(this[b], b, this) ? this.splice(b, 1) : b++
}
);
"use strict";
CB.V4 = function() {
    var e = function(b) {
        this.scope = b;
        this.handlers = []
    };
    e.prototype.count = function() {
        return this.handlers.length
    }
    ;
    e.prototype.add = function(b) {
        this.handlers.push(b);
        return this.handlers.length - 1
    }
    ;
    e.prototype.remove = function(b) {
        null != b && void 0 !== this.handlers[b] && delete this.handlers[b]
    }
    ;
    e.prototype.V5 = function() {
        for (var b = 0; b < this.handlers.length; b++)
            if (void 0 !== this.handlers[b])
                this.handlers[b](this.scope)
    }
    ;
    e.prototype.empty = function() {
        for (var b = 0; b < this.handlers.length; b++)
            if (void 0 !== this.handlers[b])
                return !1;
        return !0
    }
    ;
    return e
}();
"use strict";
CB.V6 = function() {
    function e(d) {
        alert(d)
    }
    var b = function(d) {
        this.config = d;
        this.tabs = this.V7();
        this.V8();
        this.buttonHeight = 34;
        this.buttonWidth = 110;
        this.ribbonH = 104
    };
    b.prototype.show = function() {
        $(this.V9).css("display", "block")
    }
    ;
    b.prototype.hide = function() {
        $(this.V9).css("display", "none")
    }
    ;
    b.prototype.isVisible = function() {
        return !$(this.V9).is(":hidden")
    }
    ;
    b.prototype.create = function(d) {
        var c = this;
        this.tabs.length || (c.ribbonH = 74,
        24 == c.config.iconHeight && (c.ribbonH = 58));
        this.Va() || (c.ribbonH -= 10);
        this.V9 = $("<div></div>");
        $(d).append(this.V9);
        this.Vb(this.V9);
        $(this.V9).jqxRibbon({
            height: c.ribbonH,
            theme: V3ir.config.jqxTheme,
            initContent: function(f) {
                c.config.tabs.forEach(function(g) {
                    g.categories.forEach(function(h) {
                        h.buttons.forEach(function(k) {
                            k.id && (k.toggle ? $("#" + k.id).jqxToggleButton(c._getButtonConfig()) : $("#" + k.id).jqxButton(c._getButtonConfig()),
                            $("#" + k.id).click(function(l) {
                                return function(m) {
                                    c.config.fnCommand && c.config.fnCommand(l)
                                }
                            }(k.id)))
                        })
                    })
                })
            }
        });
        $(this.V9).addClass("ribbon");
        $(".jqx-ribbon-content-section").css("display", "flex");
        this.config.hidden && $(this.V9).hide()
    }
    ;
    b.prototype._getButtonConfig = function() {
        return {
            imgHeight: 32,
            theme: V3ir.config.jqxTheme
        }
    }
    ;
    b.prototype.V7 = function() {
        var d = [];
        this.config.tabs.forEach(function(c) {
            c.title && d.push(c.title)
        });
        return d
    }
    ;
    b.prototype.Va = function() {
        this.config.tabs.forEach(function(d) {
            d.categories.forEach(function(c) {
                if (c.title)
                    return !0
            })
        });
        return !1
    }
    ;
    b.prototype.V8 = function() {
        var d = this;
        d.config.tabs.forEach(function(c) {
            c.categories.forEach(function(f) {
                f.buttons.forEach(function(g) {
                    var h = d.config.textBelow ? "ribbonBtnTextBelow" : g.text ? "ribbonBtnTextR" : "ribbonBtnIconOnly";
                    !d.config.textBelow && d.config.iconHeight && (h += " ribbonBtnLine" + d.config.iconHeight.toString());
                    g.class = g.class || h
                })
            })
        })
    }
    ;
    b.prototype.Vb = function(d) {
        if (this.tabs.length) {
            $(d).append($("<ul></ul>"));
            for (var c = 0; c < this.tabs.length; c++)
                $(d).find("ul").append(String.f("<li>{0}</li>", this.tabs[c]))
        } else
            $(d).append($('<ul class="ribbonNoTabUL"><li></li></ul>'));
        var f = $('<div style="overflow:hidden"></div>');
        $(d).append(f);
        this.config.tabs.forEach(function(g) {
            var h = $('<div class="ribbonCategory"></div>');
            $(f).append(h);
            var k = 0;
            g.categories.forEach(function(l) {
                if (k) {
                    var m = $(String.f('<div id="{0}" class="ribbonSeparator"></div>', l.id + "-sep"));
                    $(h).append(m)
                }
                m = $(String.f('<table id="{0}" class="ribbonTable"><tr></tr></table>', l.id + "-tbl"));
                $(h).append(m);
                var n = $(m).find("tr")
                  , p = 0;
                l.buttons.forEach(function(q) {
                    if (q.id) {
                        var t = this.config.textBelow ? $(String.f('<td class="{0}" title="{5}"><div id="{1}" class="{2}"><img src="{3}"/></div><span>{4}</span></td>', "ribbonTD", q.id, q.class, this.Vc(q.icon), q.text, q.title)) : $(String.f('<td class="{0}" title="{6}"><div id="{1}" class="{2}"><img src="{3}" /><span>{4}</span></div></td>', "ribbonTD", q.id, q.class, this.Vc(q.icon), q.text, q.title));
                        t.find("#" + q.id)
                    } else
                        t = $(String.f('<td class="ribbonSpacer"></td>'));
                    n.append(t);
                    p++
                }
                .bind(this));
                l.title && $(String.f('<tr><td colspan="{0}" class="{1}">{2}<td></tr>', p, "ribbonCategoryTitle", l.title)).insertAfter(n);
                k++
            }
            .bind(this))
        }
        .bind(this))
    }
    ;
    b.prototype.Vd = function() {
        return this.config.iconHeight || 32
    }
    ;
    b.prototype.Vc = function(d) {
        var c = V3ir.config.getRibbonPath();
        this.config.iconPath && (c += this.config.iconPath + "/");
        c = c + d + this.Vd();
        return c + ".png"
    }
    ;
    b.test = function(d) {
        (new CB.V6({
            fnCommand: e,
            iconHeight: 32,
            textBelow: !1,
            iconPath: V3ir.config.iconPath,
            tabs: [{
                title: "",
                categories: [{
                    title: "Seek A Game",
                    buttons: [{
                        id: "idSeek10",
                        text: "Bullet 1 min",
                        icon: "Bullet"
                    }, {
                        id: "idSeek30",
                        text: "3min Blitz",
                        icon: "Blitz"
                    }, {
                        id: "idSeek50",
                        text: "5min Blitz",
                        icon: "Blitz"
                    }, {
                        id: "idSeek32",
                        text: "3min+2sec",
                        icon: "Blitz"
                    }, {
                        id: "idSeek100",
                        text: "10min Blitz",
                        icon: "Blitz"
                    }, {
                        id: "idSeek155",
                        text: "15min+5sec",
                        icon: "Slow"
                    }]
                }, {
                    title: "Opponent",
                    buttons: [{
                        id: "idRematch",
                        text: "Rematch",
                        icon: "Rematch"
                    }, {
                        id: "idApplause",
                        text: "Applause",
                        icon: "Applause"
                    }]
                }, {
                    title: "Account",
                    buttons: [{
                        id: "idLogin",
                        text: "Login",
                        icon: "Key"
                    }]
                }]
            }]
        })).createRibbon(d)
    }
    ;
    return b
}();
"use strict";
CB.Ve = function() {
    var e = function(b) {
        this.config = b || {}
    };
    e.prototype.create = function(b) {
        this.parent = b;
        this.V9 = $("<div></div>");
        $(b).append(this.V9);
        this.Vb(this.V9);
        $(this.V9).jqxTabs({
            width: "100%",
            height: "100%",
            keyboardNavigation: !1,
            scrollable: this.config.scrollable,
            theme: V3ir.config.jqxTheme
        })
    }
    ;
    e.prototype.Vf = function(b) {
        if (b.onTabSelect)
            $(this.V9).on("selected", b.onTabSelect.bind(b));
        if (b.onTabClick)
            $(this.V9).on("tabclick", b.onTabClick.bind(b))
    }
    ;
    e.prototype.resize = function() {}
    ;
    e.prototype.select = function(b) {
        this.V9.jqxTabs("select", b)
    }
    ;
    e.prototype.Vg = function(b) {
        return $(this.V9).find("#" + this.config.tabs[b].id)
    }
    ;
    e.prototype.disable = function(b) {
        b < this.config.tabs.length && this.V9.jqxTabs("disableAt", b)
    }
    ;
    e.prototype.enable = function(b) {
        b < this.config.tabs.length && this.V9.jqxTabs("enableAt", b)
    }
    ;
    e.prototype.show = function(b) {
        $("#" + b + "-tab").parents("li[role='tab']").show()
    }
    ;
    e.prototype.hide = function(b) {
        $("#" + b + "-tab").parents("li[role='tab']").hide()
    }
    ;
    e.prototype.Vh = function() {
        return this.V9.jqxTabs("val")
    }
    ;
    e.prototype.Vi = function() {
        var b = this.V9.jqxTabs("val");
        if (0 <= b && (b = this.V9.jqxTabs("getContentAt", b)))
            return b.id
    }
    ;
    e.prototype.Vb = function(b) {
        if (this.config.tabs.length) {
            $(b).append($("<ul></ul>"));
            for (var d = 0; d < this.config.tabs.length; d++)
                this.Vj(d, b);
            for (d = 0; d < this.config.tabs.length; d++) {
                var c = $(String.f("<div id='{0}'></div>", this.config.tabs[d].id));
                $(b).append(c)
            }
        }
    }
    ;
    e.prototype.Vj = function(b, d) {
        if (this.config.tabs[b].icon) {
            var c = this.Vc(this.config.tabs[b].icon);
            $(d).find("ul").append(String.f("<li><div id='{2}-tab'><img style='float:left' src='{1}'/><div class='cbJqxTabHeaderText'>{0}</div></div></li>", this.config.tabs[b].title, c, this.config.tabs[b].id))
        } else
            $(d).find("ul").append(String.f("<li>{0}</li>", this.config.tabs[b].title))
    }
    ;
    e.prototype.Vc = function(b) {
        var d = V3ir.config.getRibbonPath();
        this.config.iconPath && (d += this.config.iconPath + "/");
        d = d + b + (this.config.iconHeight || 24);
        return d + ".png"
    }
    ;
    return e
}();
"use strict";
CB.Form = function() {
    var e = function(b) {
        this.config = b;
        this.Vk = 26;
        this.Vl = 90;
        this.Vm = 30;
        this.theme = "chessbase"
    };
    e.prototype.show = function() {
        $(this.V9).css("display", "block")
    }
    ;
    e.prototype.hide = function() {
        $(this.V9).css("display", "none")
    }
    ;
    e.prototype.isVisible = function() {
        return !$(this.V9).is(":hidden")
    }
    ;
    e.prototype.create = function(b, d) {
        $("#" + this.config.id).remove();
        this.V9 = $(String.f("<div id='{0}'></div>", this.config.id));
        this.Vb(this.V9);
        $(b).append(this.V9);
        $(this.V9).jqxWindow({
            width: this.config.width || 400,
            height: this.config.height || 400,
            isModal: this.config.modal,
            theme: this.theme,
            resizable: !1,
            autoOpen: !1,
            showCloseButton: !1
        });
        $(this.V9).jqxWindow({
            initContent: function() {
                "undefined" === typeof this.config.Vn && ($("#btnCancel").jqxButton({
                    width: this.Vl,
                    height: this.Vm,
                    theme: this.theme
                }),
                $("#btnOk").jqxButton({
                    width: this.Vl,
                    height: this.Vm,
                    theme: this.theme
                }));
                this.config.focusField && $("#" + this.config.focusField).jqxInput("focus");
                $(this.V9).keyup(function(c) {
                    13 == c.keyCode && $("#btnOk").click()
                })
            }
            .bind(this)
        });
        $(this.V9).jqxWindow("cancelButton", $("#btnCancel"));
        $(this.V9).jqxWindow("open");
        this.validator && this.validator(this.V9);
        $("#btnOk").click(function(c) {
            c = !0;
            this.validator && (c = $(this.V9).jqxValidator("validate"));
            c && (c = this.Vo(),
            $(this.V9).jqxWindow("hide"),
            $(this.V9).remove(),
            this.config.okHandler && this.config.okHandler(c))
        }
        .bind(this));
        $("#btnCancel") && $("#btnCancel").click(function(c) {
            $(this.V9).jqxWindow("hide");
            $(this.V9).remove();
            this.config.cancelHandler && this.config.cancelHandler()
        }
        .bind(this));
        this.config.accountButton && ($("#btnAccount").jqxButton({
            width: this.Vl,
            height: this.Vm,
            theme: this.theme
        }),
        $("#btnAccount").on("click", function(c) {
            V3ir.panelMgr.openRegisterPage()
        }));
        this.config.Vp && ($("#btnPaste").jqxButton({
            width: this.Vl,
            height: this.Vm,
            theme: this.theme
        }),
        $("#btnPaste").on("click", function(c) {
            CB.Vq.Vr() && "undefined" !== typeof electronBridge && (c = electronBridge.readFromClipboard().trim(),
            34 <= c.length && ($("#idSerial0").val(c.substr(0, 5)),
            $("#idSerial1").val(c.substr(6, 5)),
            $("#idSerial2").val(c.substr(12, 5)),
            $("#idSerial3").val(c.substr(18, 5)),
            $("#idSerial4").val(c.substr(24, 5))))
        }))
    }
    ;
    e.prototype.Vs = function() {
        $(this.V9).jqxWindow("hide");
        $(this.V9).remove()
    }
    ;
    e.prototype.Vo = function() {
        var b = {};
        this.config.fields.forEach(function(d) {
            switch (d.type) {
            case "number":
            case "password":
            case "string":
            case "stringmultiline":
                b[d.id] = $("#" + d.id).val();
                break;
            case "serial":
                for (var c = "", f = 0; 5 > f; f++)
                    c += $("#" + d.id + f).val();
                b[d.id] = c;
                break;
            case "checkbox":
                b[d.id] = $("#" + d.id).jqxCheckBox("checked");
                break;
            case "select":
                b[d.id] = $("#" + d.id + "_jqxDropDownList").children("option:selected").val()
            }
        }
        .bind(this));
        return b
    }
    ;
    e.prototype._getButtonConfig = function() {
        return {
            imgHeight: 32,
            imgWidth: 32,
            theme: "chessbase"
        }
    }
    ;
    e.prototype.Vb = function(b) {
        var d = $("<div>" + this.config.title + "</div>");
        b.append(d);
        d = $(String.f("<div></div>"));
        var c = $("<table class='cbJqxFormTable'></table>");
        d.append(c);
        this.config.fields.forEach(function(h) {
            var k = $("<tr></tr>");
            switch (h.type) {
            case "label":
                var l = $(String.f("<td align='right' class='cbJqxFormCaption'><h3 id='myLabel'>{0}</h3></td>", h.caption));
                k.append(l);
                this.label = l;
                break;
            case "separator":
                k.append($("<td colspan='2'><div class='cbJqxFormSeparator'/></td>"));
                break;
            case "progress":
                l = $(String.f("<td align='right' class='cbJqxFormCaption'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                var m = $(String.f("<div id='{0}'></div>", h.id));
                l.append(m);
                m.jqxProgressBar({
                    width: 300,
                    height: this.config.Vt || this.Vk,
                    value: 0,
                    Vu: !0
                });
                k.append(l);
                m.jqxProgressBar("animationDuration", 0);
                m.jqxProgressBar("theme", "shinyblack");
                m.jqxProgressBar("value", 0);
                m.jqxProgressBar("colorRanges", [{
                    stop: 0,
                    color: "#A00000"
                }, {
                    stop: 100,
                    color: "#00FF00"
                }]);
                this.Vv = m;
                break;
            case "number":
                l = $(String.f("<td align='right' class='cbJqxFormCaption'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                m = $(String.f("<input id='{0}'/>", h.id));
                l.append(m);
                m.jqxNumberInput({
                    width: this.config.Vw || 60,
                    height: this.config.Vk || this.Vk,
                    min: h.min || 0,
                    max: h.max || 999999999,
                    theme: this.theme,
                    decimalDigits: 0,
                    digits: 2,
                    inputMode: "simple",
                    spinButtons: h.spin
                });
                h.val && m.jqxNumberInput("val", h.val);
                k.append(l);
                break;
            case "string":
                l = $(String.f("<td align='right'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                m = $(String.f("<input id='{0}'/>", h.id));
                l.append(m);
                m.jqxInput({
                    width: this.config.strInpW || 200,
                    height: this.config.Vk || this.Vk,
                    maxLength: this.config.maxLength || 128,
                    theme: this.theme
                });
                h.val && m.jqxInput("val", h.val);
                k.append(l);
                break;
            case "serial":
                l = $(String.f("<td align='right'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                for (var n = 0; 5 > n; n++)
                    m = $(String.f("<input id='{0}' style='text-transform: uppercase;' />", h.id + n)),
                    l.append(m),
                    m.jqxInput({
                        width: 80,
                        height: this.config.Vk || this.Vk,
                        minLength: 5,
                        maxLength: 5,
                        theme: this.theme
                    }),
                    h.val && 34 <= h.val.length && 5 > n && m.jqxInput("val", h.val.substr(6 * n, 5)),
                    l.append("-"),
                    4 == n && l.append("DATA");
                k.append(l);
                break;
            case "stringmultiline":
                l = $(String.f("<td align='right'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='center'></td>");
                m = $(String.f("<textarea id='{0}' rows='{1}' cols='{2}' maxlength='{3}'/>", h.id, h.rows, h.cols, h.maxLength));
                $(m).addClass("jqx-input jqx-widget jqx-widget-content");
                $(m).on("keyup", function(q) {
                    return q.stopPropagation()
                });
                this.theme && $(m).addClass(String.f("jqx-input-{0} jqx-widget-{0} jqx-widget-content-{0}", this.theme));
                l.append(m);
                h.val && m.text(h.val);
                k.append(l);
                break;
            case "password":
                l = $(String.f("<td align='right'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                m = $(String.f("<input id='{0}' type='password' />", h.id));
                l.append(m);
                m.jqxPasswordInput({
                    width: this.config.strInpW || 200,
                    height: this.config.Vk || this.Vk,
                    maxLength: 128,
                    theme: this.theme,
                    placeHolder: "Enter password"
                });
                k.append(l);
                break;
            case "checkbox":
                l = $(String.f("<td align='right' class='cbJqxFormCaption'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td align='left'></td>");
                m = $(String.f("<div id='{0}'></div>", h.id));
                l.append(m);
                m.jqxCheckBox({
                    width: this.config.Vx || 120,
                    height: this.config.Vt || this.Vk,
                    theme: this.theme,
                    checked: h.checked
                });
                k.append(l);
                break;
            case "select":
                l = $(String.f("<td align='right' class='cbJqxFormCaption'>{0}</td>", h.caption));
                k.append(l);
                l = $("<td>", {
                    align: "left"
                });
                var p = $("<select>");
                p.attr("id", h.id);
                h.options.forEach(function(q) {
                    var t = $("<option>");
                    t.val(q.value);
                    t.text(q.text);
                    h.val == q.value && t.attr("selected", "selected");
                    p.append(t)
                });
                l.append(p);
                k.append(l);
                p.jqxDropDownList({
                    width: this.config.Vy || 200,
                    height: this.config.Vz || this.Vk
                })
            }
            c.append(k)
        }
        .bind(this));
        var f = $("<tr></tr>");
        c.append($("<tr><td></td></tr>"));
        f.append($("<td align='right'></td>"));
        if (this.config.Vp) {
            var g = $("<tr></tr>");
            g.append($("<td colspan='2' align='left' style='padding-top: 16px'><input type='button' id='btnPaste' value='" + lm.PASTE + "' /></td>"));
            c.append(g)
        }
        this.Vv || f.append($(String.f('<td style="padding-top: 10px;" align="right"><input style="margin-right: 5px;" type="button" id="btnOk" value="OK" /><input id="btnCancel" type="button" value="{0}" /></td>', lm.CANCEL)));
        c.append(f);
        this.config.accountButton && (c.append($("<tr><td></td></tr>")),
        f = $("<tr></tr>"),
        f.append($("<td colspan='2' align='left' style='padding-top: 16px'><input type='button' id='btnAccount' value='Register' /></td>")),
        c.append(f));
        b.append(d)
    }
    ;
    e.prototype.Vc = function(b) {
        var d = V3ir.config.getRibbonPath();
        this.config.iconPath && (d += this.config.iconPath + "/");
        d = d + b + (this.config.iconHeight || 32);
        return d + ".png"
    }
    ;
    e.V10 = function(b, d, c, f, g, h) {
        (new CB.Form({
            id: "inputString",
            title: b,
            width: 300,
            height: 180,
            modal: !0,
            okHandler: g,
            cancelHandler: h,
            fields: [{
                caption: d,
                type: "string",
                id: "idInput",
                strInpW: 160,
                maxLength: f,
                val: c
            }]
        })).create()
    }
    ;
    return e
}();
"use strict";
CB.V11 = function() {
    var e = function() {
        this.nSize = this.nPos = 0;
        this.buffer = new ArrayBuffer(188);
        this.viewBuf = new DataView(this.buffer);
        this.V12 = [];
        this.V13 = []
    };
    e.prototype.clear = function() {
        this.nSize = this.nPos = 0;
        this.V12 = [];
        this.V13 = []
    }
    ;
    e.prototype.rewind = function() {
        this.nPos = 0;
        this.V12 = [];
        this.V13 = []
    }
    ;
    e.prototype.getPos = function() {
        return this.nPos
    }
    ;
    e.prototype.setPos = function(b) {
        if (b <= this.nSize && b <= this.buffer.byteLength)
            this.nPos = b;
        else
            throw "Error: SetPos exceeds DataBuffer size";
    }
    ;
    e.prototype.getSize = function() {
        return this.nSize
    }
    ;
    e.prototype.setSize = function(b) {
        if (b >= this.buffer.byteLength)
            throw "DBuf setSize illegal";
        this.nSize = b
    }
    ;
    e.prototype.V14 = function() {
        return this.nSize + 4
    }
    ;
    e.prototype.V15 = function() {
        for (var b = 0, d = 0; d < this.nSize; d++)
            b += this.viewBuf.getUint8(d) + d;
        return Math.abs(b % 32767)
    }
    ;
    e.prototype.V16 = function(b, d) {
        b.setInt32(d, this.nSize);
        this.V17(b, d, 4);
        d += 4;
        for (var c = 0; c < this.nSize; c++)
            b.setUint8(c + d, this.viewBuf.getUint8(c));
        return this.nSize + 4
    }
    ;
    e.prototype.V18 = function(b, d) {
        this.V17(b, d, 4);
        var c = b.getInt32(d);
        if (35E4 > c && 0 <= c) {
            this.V19(c);
            d += 4;
            for (var f = 0; f < c; f++) {
                var g = b.getUint8(f + d);
                this.viewBuf.setUint8(f, g)
            }
            this.V1a(c)
        }
    }
    ;
    e.prototype.V3i9 = function(b) {
        b = CB.V1b.V1c(b);
        this.V3hv(b)
    }
    ;
    e.prototype.V3hv = function(b) {
        this.V19(b.length + 4);
        this.V3ij(b.length);
        for (var d = 0; d < b.length; d++) {
            var c = b.charCodeAt(d);
            this.viewBuf.setUint8(this.nPos + d, c)
        }
        this.V1a(b.length)
    }
    ;
    e.prototype.V3ic = function(b) {
        var d = this.V3im();
        if (d <= b && 25E4 > d) {
            b = "";
            for (var c = 0; c < d; c++) {
                var f = this.viewBuf.getUint8(this.nPos + c);
                b += String.fromCharCode(f)
            }
            b = CB.V1b.V1d(b);
            this.nPos += d
        } else
            throw Error("Data Error: Read String");
        return b
    }
    ;
    e.prototype.V3hs = function(b) {
        this.V19(b.length + 4);
        this.V3ij(b.length);
        for (var d = 0; d < b.length; d++) {
            var c = b.charCodeAt(d);
            this.viewBuf.setUint8(this.nPos + d, c)
        }
        this.V1a(b.length)
    }
    ;
    e.prototype.V3ht = function(b) {
        var d = ""
          , c = this.V3im();
        if (c <= b && 25E4 > c) {
            for (b = 0; b < c; b++) {
                var f = this.viewBuf.getUint8(this.nPos + b);
                d += String.fromCharCode(f)
            }
            this.nPos += c
        } else
            throw Error(String.f("Data Error: Read String, Len={0}, maxLen={1}", c, b));
        return d
    }
    ;
    e.prototype.writeByteLenASCIIString = function(b) {
        this.V19(b.length + 2);
        this.writeUint8(b.length + 1);
        for (var d = 0; d < b.length; d++) {
            var c = b.charCodeAt(d);
            this.viewBuf.setUint8(this.nPos + d, c)
        }
        this.viewBuf.setUint8(this.nPos + b.length, 0);
        this.V1a(b.length + 1)
    }
    ;
    e.prototype.readByteLenASCIIString = function(b) {
        var d = ""
          , c = this.readUint8();
        0 < c && --c;
        if (1E3 > c) {
            for (var f = 0; f < c; f++) {
                var g = this.viewBuf.getUint8(this.nPos + f);
                d += String.fromCharCode(g)
            }
            if (c <= b)
                this.nPos += c + 1;
            else
                throw Error(String.f("Data Error: Read ByteLenString, len={0}, maxLen={1}", c, b));
        } else
            throw Error(String.f("Data Error: Read ByteLenString > 1000, len={0}", c));
        return d
    }
    ;
    e.prototype.readSizedString = function(b) {
        var d = "";
        if (25E4 > b) {
            for (var c = 0; c < b; c++) {
                var f = this.viewBuf.getUint8(this.nPos + c);
                d += String.fromCharCode(f)
            }
            this.nPos += b
        } else
            throw Error("Data Error: Read SizedString, max=" + b);
        return d
    }
    ;
    e.prototype.writeSizedString = function(b) {
        var d = b.length;
        this.V19(d);
        for (var c = 0; c < d; c++) {
            var f = b.charCodeAt(c);
            this.viewBuf.setUint8(this.nPos + c, f)
        }
        this.V1a(d)
    }
    ;
    e.prototype.V1e = function(b) {
        if (25E4 > b) {
            var d = "";
            for (var c = 0; c < b; c++) {
                var f = this.viewBuf.getUint8(this.nPos + c);
                d += String.fromCharCode(f)
            }
            d = CB.V1b.V1d(d);
            this.nPos += b
        } else
            throw Error("Data Error: Read UTF8String, len=" + b);
        return d
    }
    ;
    e.prototype.readByteArray = function(b) {
        for (var d = [], c = 0; c < b && this.nPos + c < this.nSize; c++)
            d.push(this.viewBuf.getUint8(this.nPos + c));
        this.nPos += b;
        return d
    }
    ;
    e.prototype.writeByteArray = function(b, d) {
        for (var c = 0; c < b.length && c < d; c++)
            this.writeByte(b[c])
    }
    ;
    e.prototype.writeDataBuffer = function(b) {
        this.V3ij(b.getSize());
        this.V19(b.getSize());
        for (var d = 0; d < b.getSize(); d++)
            this.viewBuf.setUint8(this.nPos + d, b.viewBuf.getUint8(d));
        this.V1a(b.getSize())
    }
    ;
    e.prototype.readDataBuffer = function() {
        var b = new CB.V11
          , d = this.V3im();
        b.V19(d);
        for (var c = 0; c < d; c++)
            b.viewBuf.setUint8(c, this.viewBuf.getUint8(this.nPos + c));
        this.nPos += d;
        b.V1a(d);
        b.nPos = 0;
        return b
    }
    ;
    e.prototype.writeData = function(b) {
        this.V19(b.getSize());
        for (var d = 0; d < b.getSize(); d++)
            this.viewBuf.setUint8(this.nPos + d, b.viewBuf.getUint8(d));
        this.V1a(b.getSize())
    }
    ;
    e.prototype.V3ip = function(b) {
        if (void 0 === b)
            throw Error("V3ip, value undefined");
        this.V19(1);
        b ? this.viewBuf.setUint8(this.nPos, 1) : this.viewBuf.setUint8(this.nPos, 0);
        this.V1a(1)
    }
    ;
    e.prototype.V3iq = function(b) {
        b = this.viewBuf.getUint8(this.nPos);
        this.nPos += 1;
        return 0 != b
    }
    ;
    e.prototype.writeUint8 = function(b) {
        if (void 0 === b)
            throw Error("writeUint8, value undefined");
        this.V19(1);
        this.viewBuf.setUint8(this.nPos, b);
        this.V1a(1)
    }
    ;
    e.prototype.readUint8 = function() {
        var b = this.viewBuf.getUint8(this.nPos);
        this.nPos += 1;
        return b
    }
    ;
    e.prototype.readByte = e.prototype.readUint8;
    e.prototype.writeByte = e.prototype.writeUint8;
    e.prototype.V3ih = function(b) {
        if (void 0 === b)
            throw Error("V3ih, value undefined");
        this.V19(2);
        this.viewBuf.setInt16(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 2);
        this.V1a(2)
    }
    ;
    e.prototype.V3in = function() {
        var b = 0;
        this.nPos <= this.viewBuf.byteLength - 2 && (this.V17(this.viewBuf, this.nPos, 2),
        b = this.viewBuf.getInt16(this.nPos),
        this.V17(this.viewBuf, this.nPos, 2),
        this.nPos += 2);
        return b
    }
    ;
    e.prototype.readShort = e.prototype.V3in;
    e.prototype.writeShort = e.prototype.V3ih;
    e.prototype.V3i4 = function(b) {
        if (void 0 === b)
            throw Error("V3i4, value undefined");
        this.V19(2);
        this.viewBuf.setUint16(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 2);
        this.V1a(2)
    }
    ;
    e.prototype.V3ig = function() {
        var b = 0;
        this.nPos <= this.viewBuf.byteLength - 2 && (this.V17(this.viewBuf, this.nPos, 2),
        b = this.viewBuf.getUint16(this.nPos),
        this.V17(this.viewBuf, this.nPos, 2),
        this.nPos += 2);
        return b
    }
    ;
    e.prototype.V3ij = function(b) {
        if (void 0 === b)
            throw Error("V3ij, value undefined");
        this.V19(4);
        this.viewBuf.setInt32(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 4);
        this.V1a(4)
    }
    ;
    e.prototype.writeFakeInt64 = function(b) {
        this.V3ij(b);
        this.V3ij(0)
    }
    ;
    e.prototype.readFakeInt64 = function() {
        var b = this.V3im();
        this.V3im();
        return b
    }
    ;
    e.prototype.V3im = function() {
        var b = 0;
        this.nPos <= this.viewBuf.byteLength - 4 && (this.V17(this.viewBuf, this.nPos, 4),
        b = this.viewBuf.getInt32(this.nPos),
        this.V17(this.viewBuf, this.nPos, 4),
        this.nPos += 4);
        return b
    }
    ;
    e.prototype.writeInt = e.prototype.V3ij;
    e.prototype.readInt = e.prototype.V3im;
    e.prototype.V3i3 = function(b) {
        this.V19(4);
        this.viewBuf.setUint32(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 4);
        this.V1a(4)
    }
    ;
    e.prototype.V3ii = function() {
        var b = 0;
        this.nPos <= this.viewBuf.byteLength - 4 && (this.V17(this.viewBuf, this.nPos, 4),
        b = this.viewBuf.getUint32(this.nPos),
        this.V17(this.viewBuf, this.nPos, 4),
        this.nPos += 4);
        return b
    }
    ;
    e.prototype.V1f = function(b) {
        b = b.getYear() << 9 | b.getMonth() << 5 | b.getDay();
        this.V3i3(b)
    }
    ;
    e.prototype.V3ie = function() {
        var b = new CB.Date
          , d = this.V3ii();
        b.setYear(d >> 9);
        b.setMonth(d >> 5 & 15);
        b.setDay(d & 31);
        return b
    }
    ;
    e.prototype.V1g = function() {
        var b = this.V3ii();
        return new CB.V1h(b)
    }
    ;
    e.prototype.V3if = function(b) {
        if (void 0 === b)
            throw Error("V3if, value undefined");
        var d = Math.floor(b / 4294967296);
        this.V3ij(b - d);
        this.V3ij(d)
    }
    ;
    e.prototype.readUint64 = function() {
        if (this.nPos <= this.viewBuf.byteLength - 8) {
            this.V17(this.viewBuf, this.nPos, 8);
            var b = this.viewBuf.getUint32(this.nPos);
            this.nPos += 4;
            var d = this.viewBuf.getUint32(this.nPos);
            this.nPos += 4;
            return 4294967296 * b + d
        }
        return 0
    }
    ;
    e.prototype.V3ik = function() {
        if (this.nPos <= this.viewBuf.byteLength - 8) {
            this.V17(this.viewBuf, this.nPos, 8);
            var b = this.viewBuf.getInt32(this.nPos);
            this.nPos += 4;
            var d = this.viewBuf.getUint32(this.nPos);
            this.nPos += 4;
            return 4294967296 * b + d
        }
        return 0
    }
    ;
    e.prototype.writeFloat32 = function(b) {
        this.V19(4);
        this.viewBuf.setFloat32(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 4);
        this.V1a(4)
    }
    ;
    e.prototype.readFloat32 = function() {
        this.V17(this.viewBuf, this.nPos, 4);
        var b = this.viewBuf.getFloat32(this.nPos);
        this.nPos += 4;
        return b
    }
    ;
    e.prototype.V1i = function(b) {
        this.V19(8);
        this.viewBuf.setFloat64(this.nPos, b);
        this.V17(this.viewBuf, this.nPos, 8);
        this.V1a(8)
    }
    ;
    e.prototype.readFloat64 = function() {
        this.V17(this.viewBuf, this.nPos, 8);
        var b = this.viewBuf.getFloat64(this.nPos);
        this.nPos += 8;
        return b
    }
    ;
    e.prototype.V1j = function() {
        for (var b = this.getSize(), d = [], c = 0; c < b; c++) {
            var f = this.viewBuf.getUint8(c);
            d[c] = f
        }
        return CB.V1k.V1l(d, b)
    }
    ;
    e.prototype.V1m = function(b, d) {
        this.clear();
        if (d) {
            if (d = [],
            b = CB.V1k.V1n(d, b),
            0 < b)
                for (var c = 0; c < b; c++)
                    this.writeByte(d[c])
        } else
            for (d = 0,
            10 < b.length && (d = parseInt(b.substr(0, 10), 10)),
            0 > d && (d = 0),
            c = 0; c < d; c++) {
                var f = b.substr(10 + 2 * c, 2);
                f = parseInt(f, 16);
                this.writeByte(f)
            }
    }
    ;
    e.prototype.V1o = function(b) {
        this.clear();
        b = CB.V1b.base64.V1p(b);
        for (var d = new Uint8Array(b), c = 0; c < b.byteLength; c++)
            this.writeByte(d[c]);
        this.writeByteArray(b, b.byteLength);
        this.rewind()
    }
    ;
    e.prototype.V1q = function() {
        for (var b = "", d = new Uint8Array(this.buffer), c = this.nSize, f = 0; f < c; f++)
            b += String.fromCharCode(d[f]);
        return window.btoa(b)
    }
    ;
    e.prototype.readBEInt32 = function() {
        var b = this.readUint8()
          , d = this.readUint8()
          , c = this.readUint8()
          , f = this.readUint8();
        return b << 24 | d << 16 | c << 8 | f
    }
    ;
    e.prototype.writeBEInt32 = function(b) {
        if (void 0 === b)
            throw Error("V3ij, value undefined");
        this.V19(4);
        this.viewBuf.setInt32(this.nPos, b);
        this.V1a(4)
    }
    ;
    e.prototype.readBEInt24 = function() {
        var b = this.readUint8()
          , d = this.readUint8()
          , c = this.readUint8();
        return b << 16 | d << 8 | c
    }
    ;
    e.prototype.readBEInt16 = function() {
        var b = this.readUint8()
          , d = this.readUint8();
        return 256 * b + d
    }
    ;
    e.prototype.writeBEInt24 = function(b) {
        var d = b >> 8
          , c = b & 255;
        this.writeUint8(b >> 16);
        this.writeUint8(d);
        this.writeUint8(c)
    }
    ;
    e.prototype.writeBEInt16 = function(b) {
        var d = b & 255;
        this.writeUint8(b >> 8);
        this.writeUint8(d)
    }
    ;
    e.prototype.writeArray = function(b) {
        var d = b.length;
        this.V3ij(d);
        for (var c = 0; c < d; ++c)
            b[c].write(this)
    }
    ;
    e.prototype.V1r = function(b) {
        var d = b.length;
        this.V3ih(d);
        for (var c = 0; c < d; ++c)
            b[c].write(this)
    }
    ;
    e.prototype.readArray = function(b, d) {
        var c = this.V3im();
        65534 < c && CBDebug.assert(65535 > c);
        b.length = c;
        for (var f = 0; f < c; ++f) {
            var g = d(this);
            b[f] = g
        }
    }
    ;
    e.prototype.V1s = function(b, d) {
        var c = this.V3in();
        b.length = c;
        for (var f = 0; f < c; ++f) {
            var g = d(this);
            b[f] = g
        }
    }
    ;
    e.prototype.beginSizedWrite = function() {
        this.V12.push(this.getPos());
        this.V3ij(0)
    }
    ;
    e.prototype.endSizedWrite = function() {
        var b = this.getPos();
        if (0 < this.V12.length) {
            this.setPos(this.V12[this.V12.length - 1]);
            var d = this.nSize;
            this.V3ij(b - this.V12[this.V12.length - 1] - 4);
            this.nSize = d;
            this.setPos(b);
            this.V12.pop()
        } else
            throw Error("DB::EndWrite");
    }
    ;
    e.prototype.beginSizedRead = function() {
        this.V12.push(this.getPos());
        this.V13.push(this.V3im())
    }
    ;
    e.prototype.endSizedRead = function() {
        if (0 < this.V12.length && 0 < this.V13.length) {
            var b = this.getPos() - this.V12[this.V12.length - 1] - 4;
            this.skip(this.V13[this.V13.length - 1] - b);
            this.V12.pop();
            this.V13.pop()
        } else
            throw Error("DB::EndRead");
    }
    ;
    e.prototype.skipSizedRead = function() {
        var b = this.V3im();
        this.skip(b)
    }
    ;
    e.prototype.skip = function(b) {
        this.nPos + b <= this.nSize && (this.nPos += b)
    }
    ;
    e.prototype.V1t = function(b, d) {
        var c = this.getPos();
        this.setPos(b);
        b = this.getSize();
        d();
        this.setSize(b);
        this.setPos(c)
    }
    ;
    e.prototype.V19 = function(b) {
        if (this.nPos + b >= this.buffer.byteLength || this.nSize + b >= this.buffer.byteLength) {
            var d = Math.max(this.nPos, this.nSize)
              , c = 8 * Math.floor(3 * (d + b) / 16 + 1);
            if (c < b + d)
                throw "DataBuffer Size";
            b = new ArrayBuffer(c);
            d = new DataView(b);
            for (c = 0; c < this.buffer.byteLength / 4; c++)
                d.setUint32(4 * c, this.viewBuf.getUint32(4 * c));
            this.buffer = b;
            this.viewBuf = d
        }
    }
    ;
    e.prototype.V1a = function(b) {
        if (this.nPos + b >= this.buffer.byteLength)
            throw "DataBuffer overrun";
        this.nPos += b;
        this.nSize += b;
        if (this.nSize >= this.buffer.byteLength)
            throw "DataBuffer Size Limit exc.";
    }
    ;
    e.prototype.V17 = function(b, d, c) {
        for (var f = [], g = 0; g < c; g++)
            f.push(b.getUint8(d + g));
        for (g = 0; g < c; g++)
            b.setUint8(d + g, f[c - g - 1])
    }
    ;
    return e
}();
function createReadFactory(e) {
    return function(b) {
        var d = new e;
        d.read(b);
        return d
    }
}
function createReadFactory2(e) {
    return function(b) {
        var d = new e;
        d.read2(b);
        return d
    }
}
"use strict";
CB.Set = function() {
    var e = function(b) {
        this.bag = [];
        var d;
        if (0 < arguments.length)
            for (d = 0; d < b.length; d++)
                this.insert(b[d])
    };
    e.prototype.clear = function() {
        this.bag = []
    }
    ;
    e.prototype.search = function(b, d) {
        for (var c = this.bag.length, f, g = 2 == arguments.length ? d : 0; g < c; ) {
            f = g + Math.floor((c - g) / 2);
            if (this.bag[f].setEquals(b))
                return f;
            b.setGreater(this.bag[f]) ? g = f + 1 : c = f
        }
        return g
    }
    ;
    e.prototype.insert = function(b) {
        var d = this.search(b);
        void 0 !== this.bag[d] && this.bag[d].setEquals(b) || this.bag.splice(d, 0, b)
    }
    ;
    e.prototype.contains = function(b) {
        var d = this.search(b);
        return void 0 !== this.bag[d] ? this.bag[d].setEquals(b) : !1
    }
    ;
    e.prototype.get = function(b) {
        var d = this.search(b);
        if (void 0 !== this.bag[d] && this.bag[d].setEquals(b))
            return this.bag[d]
    }
    ;
    e.prototype.size = function() {
        return this.bag.length
    }
    ;
    e.prototype.V1u = function() {
        return this.bag
    }
    ;
    e.prototype.equals = function(b) {
        if (this.size() != b.size())
            return !1;
        var d;
        for (d = 0; d < this.bag.length; d++)
            if (!this.bag[d].setEquals(b.bag[d]))
                return !1;
        return !0
    }
    ;
    e.prototype.save = function(b, d) {
        var c = new CB.V1v;
        c.save(b + "_len", this.bag.length);
        for (var f = 0; f < this.bag.length; f++)
            d && !d(this.bag[f]) || c.save(b + "_o" + f, this.bag[f])
    }
    ;
    e.prototype.load = function(b, d) {
        var c = new CB.V1v
          , f = c.load(b + "_len");
        if (f)
            for (var g = 0, h = 0; h < f; h++) {
                var k = c.load(b + "_o" + h);
                d ? (k = d(k)) && (this.bag[g++] = k) : this.bag[g++] = k
            }
    }
    ;
    return e
}();
CB.V1w = function() {
    var e = function(b) {
        this.bag = [];
        var d;
        if (0 < arguments.length)
            for (d = 0; d < b.length; d++)
                this.insert(b[d])
    };
    e.prototype.clear = function() {
        this.bag = []
    }
    ;
    e.prototype.search = function(b, d) {
        for (var c = this.bag.length, f, g = 2 == arguments.length ? d : 0; g < c; ) {
            f = g + Math.floor((c - g) / 2);
            if (this.bag[f] == b)
                return f;
            b > this.bag[f] ? g = f + 1 : c = f
        }
        return g
    }
    ;
    e.prototype.insert = function(b) {
        var d = this.search(b);
        void 0 !== this.bag[d] && this.bag[d] == b || this.bag.splice(d, 0, b)
    }
    ;
    e.prototype.contains = function(b) {
        var d = this.search(b);
        return void 0 !== this.bag[d] ? this.bag[d] == b : !1
    }
    ;
    e.prototype.get = function(b) {
        var d = this.search(b);
        if (void 0 !== this.bag[d] && this.bag[d] == b)
            return this.bag[d]
    }
    ;
    e.prototype.size = function() {
        return this.bag.length
    }
    ;
    e.prototype.V1u = function() {
        return this.bag
    }
    ;
    e.prototype.equals = function(b) {
        if (this.size() != b.size())
            return !1;
        var d;
        for (d = 0; d < this.bag.length; d++)
            if (this.bag[d] != b.bag[d])
                return !1;
        return !0
    }
    ;
    e.prototype.save = function(b, d) {
        var c = new CB.V1v;
        c.save(b + "_len", this.bag.length);
        for (var f = 0; f < this.bag.length; f++)
            d && !d(this.bag[f]) || c.save(b + "_o" + f, this.bag[f])
    }
    ;
    e.prototype.load = function(b, d) {
        var c = new CB.V1v
          , f = c.load(b + "_len");
        if (f)
            for (var g = 0, h = 0; h < f; h++) {
                var k = c.load(b + "_o" + h);
                d ? (k = d(k)) && (this.bag[g++] = k) : this.bag[g++] = k
            }
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.V1x");
CB.V1x = function() {
    var e = function(b) {
        this.V1y = b;
        this.V1z = {};
        this.V20 = {}
    };
    e.staticIdVector = 0;
    e.staticIdBunch = 0;
    e.prototype.V21 = function(b, d, c, f) {
        var g = {
            vec: [],
            overhead: new CB.V11
        }
          , h = b.getBuf().V3ii();
        b.getBuf().V3ii();
        var k = b.getBuf().V3ii();
        b.getBuf().V3ii();
        g.overhead = b.getBuf().readDataBuffer();
        if (0 < k) {
            for (var l = b.getBuf().V3im(), m = 0; m < l && 3E4 > m; m++) {
                var n = f(b.getBuf());
                g.vec.push(n)
            }
            d = new CB.WebSockMessage(d);
            d.setUserType(c);
            d.getBuf().V3i3(h);
            d.getBuf().V3i3(0);
            d.getBuf().V3i3(k);
            d.getBuf().V3i3(0);
            d.getBuf().V3ij(l);
            d.address(b.getIdReceiver(), b.V3i5());
            this.V1y(d)
        }
        return g
    }
    ;
    e.prototype.V22 = function(b, d, c, f, g, h, k, l) {
        var m = ++e.staticIdVector
          , n = ++e.staticIdBunch
          , p = 0;
        do {
            var q = new CB.V11;
            q.V3ij(m);
            q.V3ij(0);
            q.V3ij(n);
            q.V3ij(0);
            q.writeDataBuffer(k);
            var t = 0
              , v = q.getPos();
            q.V3ij(t);
            if (c.length) {
                var z;
                do {
                    var E = q.getSize()
                      , C = q.getPos();
                    l(q, c[p]);
                    (z = q.getSize() < f) || 0 == t ? (t++,
                    p++) : (q.setPos(C),
                    q.setSize(E))
                } while (z && p < c.length);
                z = q.getPos();
                q.setPos(v);
                q.V3ij(t);
                q.setPos(z)
            }
            this.V1z[n] = {
                sender: b,
                receiver: d,
                buf: q,
                idBunch: n,
                idVec: m,
                msgType: g,
                userType: h,
                nSent: 0
            };
            n++
        } while (p < c.length);
        this.V20[m] = {
            idVec: m,
            data: {
                msgType: g,
                userType: h,
                overHead: k
            }
        };
        this.V25(b, d, m)
    }
    ;
    e.prototype.V25 = function(b, d, c) {
        var f = !1;
        for (h in this.V1z)
            if (this.V1z.hasOwnProperty(h)) {
                var g = this.V1z[h];
                f = f || g.idVec == c;
                if (0 == c || g.idVec == c) {
                    if (0 == g.nSent % 10) {
                        var h = new CB.WebSockMessage(g.msgType);
                        h.setUserType(g.userType);
                        h.getBuf().writeData(g.buf);
                        h.address(b, d);
                        this.V1y(h)
                    }
                    g.nSent++;
                    break
                }
            }
        !f && (f = this.V20[c]) && (h = new CB.WebSockMessage(f.data.msgType),
        h.setUserType(f.data.userType),
        h.getBuf().writeFakeInt64(c),
        h.getBuf().writeFakeInt64(0),
        h.getBuf().writeDataBuffer(f.data.overHead),
        h.address(b, d),
        this.V1y(h),
        delete this.V20[c])
    }
    ;
    e.prototype.V26 = function(b) {
        var d = b.getBuf().readFakeInt64()
          , c = b.getBuf().readFakeInt64()
          , f = b.getBuf().V3im();
        delete this.V1z[c];
        this.V25(b.getIdReceiver(), b.V3i5(), d);
        return f
    }
    ;
    return e
}();
"use strict";
CB.V27 = function() {
    var e = function() {
        this.V28 = 0;
        this.queue = []
    };
    e.prototype = {
        V29: function() {
            return this.queue.length - this.V28
        },
        empty: function() {
            return 0 == this.queue.length
        },
        push: function(b) {
            this.queue.push(b)
        },
        pop: function() {
            if (0 != this.queue.length) {
                var b = this.queue[this.V28];
                2 * ++this.V28 >= this.queue.length && (this.queue = this.queue.slice(this.V28),
                this.V28 = 0);
                return b
            }
        },
        front: function() {
            return 0 < this.queue.length ? this.queue[this.V28] : void 0
        }
    };
    return e
}();
"use strict";
CB.V1k = {
    V1n: function(e, b) {
        for (var d = 0, c = 0, f = 0, g = 0; g < b.length; g++) {
            var h = b[g].charCodeAt(0);
            if (63 > h || 126 < h)
                return 1;
            h -= 63;
            2 >= c ? (f |= h << 2 - c,
            c += 6,
            8 <= c && (c -= 8,
            e[d++] = f & 255,
            f = 0)) : (c -= 2,
            f |= h >> c,
            e[d++] = f & 255,
            f = h << 8 - c)
        }
        return d
    },
    V1l: function(e, b) {
        var d = "";
        if (0 < b) {
            for (var c = [], f = 0, g = 0, h = 0; g < b; )
                2 >= h ? (c[f++] = 63 + (e[g] >> 2 - h & 63) & 255,
                h += 6,
                8 <= h && (g++,
                h -= 8)) : (h -= 2,
                c[f] = e[g] << h & 63,
                g++,
                g < b ? c[f] |= e[g] >> 8 - h & 63 : h = 0,
                c[f++] += 63);
            for (e = c[f] = 0; e < f; e++)
                d += String.fromCharCode(c[e])
        } else
            d = "";
        return d
    },
    V2b: function(e) {
        for (var b = "", d, c, f, g, h, k, l = 0; l < e.length; )
            d = e[l++],
            c = e[l++],
            f = e[l++],
            g = d >> 2,
            d = (d & 3) << 4 | c >> 4,
            h = (c & 15) << 2 | f >> 6,
            k = f & 63,
            isNaN(c) ? h = k = 64 : isNaN(f) && (k = 64),
            b = b + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(g) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(d) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(h) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(k);
        return b
    },
    V2c: function(e, b) {
        e = this.V2b(e);
        return "data:" + b + ";charset=utf-8;base64," + e
    }
};
CB.V2d = {
    V2e: 1101,
    V2f: 1102,
    V2g: 1103,
    V2h: 1104,
    V2i: 1105,
    V2j: 1106,
    V2k: 1107,
    V2l: 1108,
    V2m: 1109,
    V2n: 1110,
    V2o: 1111,
    V2p: 1112,
    V2q: 1113,
    V2r: 1114,
    V2s: 1115,
    V2t: 1116,
    V2u: 1117,
    V2v: 1118,
    V2w: 1119,
    V2x: 1120,
    V2y: 1121,
    toString: function(e) {
        for (a in CB.V2d)
            if (CB.V2d[a] == e)
                return a;
        return e
    }
};
CB.V2z = function() {
    var e = function(b, d, c, f) {
        this.nFamily = void 0 !== b ? b : CB.V2d.V2e;
        this.V30 = void 0 !== d ? d : 0;
        this.V31 = void 0 !== c ? c : 0;
        this.V32 = void 0 !== f ? f : 0
    };
    e.prototype.V3il = function(b) {
        b.V3ih(this.nFamily);
        b.V3ih(this.V30);
        b.V3ih(this.V31);
        b.V3ih(this.V32);
        b.V3ih(91);
        b.V3ih(0);
        b.V3ij(0);
        b.V3ih(0);
        b.V3ih(0)
    }
    ;
    e.prototype.toString = function() {
        return this.V33(this.nFamily) + " " + this.getStrVersion()
    }
    ;
    e.prototype.getStrVersion = function(b) {
        var d = this.V30 + "." + this.V31;
        this.V32 && (d += "." + this.V32);
        CB.Vq.V34() && (d += "c");
        CB.Vq.V35() ? d += "e" : CB.Vq.V36() && (d += "o");
        CB.Vq.V37() && (d += "m");
        b && CB.Vq.V38() && (d += "-" + CB.Vq.V38());
        return d
    }
    ;
    e.prototype.V33 = function(b) {
        switch (b) {
        default:
            return CB.V2d.toString(b);
        case CB.V2d.V2e:
            return "Playchess";
        case CB.V2d.V2f:
            return "LiveBlitz";
        case CB.V2d.V2g:
            return "OnlineDB";
        case CB.V2d.V2h:
            return "Openings";
        case CB.V2d.V2j:
            return "Fritz";
        case CB.V2d.V2l:
            return "MyGames";
        case CB.V2d.V39:
            return "Training";
        case CB.V2d.V2r:
            return "Endgames";
        case CB.V2d.V2s:
            return "Live";
        case CB.V2d.V2t:
            return "Reader";
        case CB.V2d.V2u:
            return "Play";
        case CB.V2d.V2v:
            return "Study"
        }
    }
    ;
    e.prototype.V3a = function() {
        return this.nFamily << 48 | this.V30 << 32 | this.V31 << 16 | this.V32
    }
    ;
    return e
}();
CB.V3b = {
    NONE: 0,
    V3c: 17,
    V3d: 42,
    V3e: 7001,
    V3f: 7002,
    V3g: 7003,
    V3h: 7004,
    V3i: 7005,
    V3j: 7006,
    V3k: 7007,
    V3l: 7008,
    V3m: 7009,
    V3n: 7010,
    V3o: 7011,
    V3p: 7012,
    V3q: 7013,
    V3r: 7014,
    V3s: 7015,
    V3t: 7016,
    V3u: 7017,
    V3v: 7018,
    V3w: 7020,
    V3x: 7021,
    V3y: 7022,
    V3z: 7023,
    V40: 7024,
    V41: 7030,
    V42: 7040,
    V43: 7041,
    V44: 7042,
    V45: 7050,
    V46: 7051,
    V47: 7052,
    V48: 7053,
    V49: 7054,
    V4a: 7055,
    V4b: 7056,
    V4c: 7057,
    V4d: 7058,
    V4e: 7060,
    V4f: 7061,
    V4g: 7062,
    V4h: 7070,
    V4i: 7071,
    V4j: 7072,
    V4k: 7073,
    V4l: 7074,
    V4m: 7075,
    V4n: 7076,
    V4o: 7077,
    V4p: 7078,
    V4q: 7079,
    V4r: 7080,
    V4s: 7081,
    V4t: 7082,
    V4u: 7083,
    V4v: 7084,
    V4w: 7085,
    V4x: 7086,
    V4y: 7087,
    V4z: 7088,
    V50: 7089,
    V51: 7090,
    V52: 7091,
    V53: 7092,
    V54: 7093,
    V55: 7094,
    V56: 7100,
    V57: 7101,
    V58: 7102,
    V59: 7103,
    V5a: 7104,
    V5b: 7105,
    V5c: 7106,
    V5d: 7107,
    V5e: 7108,
    V5f: 7109,
    V5g: 7110,
    V5h: 7111,
    V5i: 7112,
    V5j: 7113,
    V5k: 7200,
    TERABRAIN_USER: 7300,
    V5l: 7301,
    V5m: 7302,
    V5n: 7303,
    V5o: 7304,
    V5p: 7305,
    TERABRAIN_BOOKINFO: 7306,
    V5q: 7307,
    V5r: 7350,
    V5s: 7400,
    V5t: 7401,
    V5u: 7402,
    V5v: 7403,
    V5w: 7404,
    V5x: 7405,
    V5y: 7406,
    V5z: 7407,
    V60: 7408,
    V61: 7409,
    V62: 7410,
    V63: 7411,
    V64: 7412,
    V65: 7413,
    V66: 7414,
    V67: 7415,
    V68: 7416,
    V69: 7417,
    V6a: 7418,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return "SockMsg:" + b;
        return "Unknown SockMsg: " + e
    },
    toNumString: function(e) {
        return "SockMsgId=" + e
    }
};
CB.WebSockMessage = function() {
    var e = function(b) {
        this.type = b || CB.V3b.NONE;
        this._init()
    };
    e.prototype.getType = function() {
        return this.type
    }
    ;
    e.prototype.V6b = function(b) {
        this.type = b
    }
    ;
    e.prototype.getUserType = function() {
        return this.userType
    }
    ;
    e.prototype.setUserType = function(b) {
        this.userType = b
    }
    ;
    e.prototype.getIdReceiver = function() {
        return this.V24
    }
    ;
    e.prototype.setIdReceiver = function(b) {
        this.V24 = b
    }
    ;
    e.prototype.V3i5 = function() {
        return this.V23
    }
    ;
    e.prototype.V3i8 = function(b) {
        this.V23 = b
    }
    ;
    e.prototype.setVal = function(b) {
        this.V6c = b
    }
    ;
    e.prototype.getVal = function() {
        return this.V6c
    }
    ;
    e.prototype.address = function(b, d) {
        this.V23 = b;
        this.V24 = d
    }
    ;
    e.prototype.getBuf = function() {
        return this.buf
    }
    ;
    e.prototype.fillSendArrBuf = function(b, d) {
        var c = 16
          , f = 0;
        b && (c += 4,
        f = d ? 2 : 0);
        f = new ArrayBuffer(c + this.buf.V14() + f);
        var g = new DataView(f);
        g.setInt16(0, this.type);
        g.setInt32(2, this.V6c);
        g.setInt32(6, this.V23);
        g.setInt16(10, this.userType);
        g.setInt32(12, this.V24);
        b ? (g.setInt32(16, this.msgId),
        b = this.buf.V16(g, 20),
        d && g.setInt16(c + b, this.buf.V15())) : this.buf.V16(g, 16);
        return f
    }
    ;
    e.prototype.V6d = function(b) {
        if (16 <= b.byteLength) {
		    var str='';
	        var buffer = new ArrayBuffer(115);
            var result = new ArrayBuffer(buffer.byteLength);
            var resultArray = new Uint8Array(result);
		    var fruits = [27,92,0,0,0,0,0,0,0,1,0,0,0,45,62,166,95,0,0,0,0,0,0,0,0,0,0,0,166,62,45,0,0,0,0,0,28,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,3,0,12,0,0,0,67,104,101,115,115,67,111,109,112,97,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0];

            for (var i = 0; i < resultArray.length; i++) {
			    console.log(String.fromCharCode(fruits[i]));
			    str = str + String.fromCharCode(fruits[i]);
                resultArray[i] = fruits[i]; 	
		}
	
            var d = new DataView(result);
            this.type = d.getInt16(0);
            this.V6c = d.getInt32(2);
            this.V23 = d.getInt32(6);
            this.userType = d.getInt16(10);
            this.V24 = d.getInt32(12);
            20 <= b.byteLength && (this.buf.V18(d, 16),
            this.buf.rewind())
        } else
            throw Error("Illegal Message received");
    }
    ;
    e.prototype.toString = function() {
        var b = "", d;
        for (d in CB.V3b)
            if (this.type == CB.V3b[d]) {
                b += d;
                break
            }
        this.userType && (b += ", usr=" + this.userType);
        b += ", sender=" + this.V23 + ", receiver=" + this.V24;
        this.buf.getSize() && (b += ", bufsize=" + this.buf.getSize());
        return b
    }
    ;
    e.prototype._init = function() {
        this.V6c = this.V23 = this.V24 = this.userType = 0;
        this.buf = new CB.V11;
        this.msgId = 0
    }
    ;
    return e
}();
CB.LoginMode = {
    NORMAL: 1,
    GUEST: 2
};
CB.V6e = {
    V6f: 0,
    V6g: 1,
    RESIGN: 2,
    V6h: 3
};
CB.V6i = {
    V6j: 32,
    V6k: 128,
    V6l: 1024,
    V6m: 2048,
    V6n: 4096,
    V6o: 8192
};
CB.V6p = function() {
    var e = function(b, d, c, f, g, h) {
        this.strName = b;
        this.strPass = d;
        this.V6q = c;
        this.version = V3ir.versionCode;
        this.guid = f;
        this.language = CB.V6r.V6s();
        this.V6t = CB.Vq.V6u();
        this.V6v = "";
        this.V6w = document.referrer;
        this.token = g || "";
        this.app = h || "";
        this.flags = 0;
        this.documentUrl = ""
    };
    e.prototype.V3hz = function(b, d) {
        var c = new CB.WebSockMessage(CB.V3b.V3f);
        try {
            c.address(CB.V6z.UNKNOWN, CB.V6z.V70);
            c.getBuf().V3ij(this.V6q);
            this.version.V3il(c.getBuf());
            var f = this.strName;
            CB.V1b.V71(f) && !CB.V1b.V72(f) && (f = CB.V1b.V1c(f));
            var g = this.strPass;
            CB.V1b.V71(g) && !CB.V1b.V72(g) && (f = CB.V1b.V1c(g));
            c.getBuf().V3hv(f);
            c.getBuf().V3hv(g);
            this.guid.V3il(c.getBuf());
            c.getBuf().V3hs(this.language);
            c.getBuf().V3hs(navigator.platform);
            c.getBuf().V3ij(this.V6t);
            c.getBuf().V3hv(this.V6v);
            c.getBuf().V3hs(this.token);
            c.getBuf().V3hv(0 < this.V6v.length ? this.V6w : "");
            c.getBuf().V3hs(this.app);
            b && (this.flags |= CB.V6i.V6k);
            d && (this.flags |= CB.V6i.V6n);
            c.getBuf().V3ij(this.flags);
            c.getBuf().V3hs(navigator.userAgent);
            c.getBuf().V3hs(this.documentUrl)
        } catch (h) {
            CB.V3("LogonMsg", h)
        }
        return c
    }
    ;
    e.prototype.V73 = function() {
        this.flags |= CB.V6i.V6l
    }
    ;
    e.prototype.V74 = function() {
        this.flags |= CB.V6i.V6m
    }
    ;
    return e
}();
"use strict";
CB.V75 = function() {
    var e = function() {
        this.nId = CB.V6z.NONE;
        this.V78 = this.V77 = this.V76 = 0;
        this.strUserId = this.strToken = "";
        this.nFlags = this.V3i7 = 0;
        this.dailyResources = new CB.V79;
        this.V7a = "";
        this.V7b = 0
    };
    e.prototype.fromSocketsMsg = function(b) {
        b.getBuf().rewind();
        b = b.getBuf();
        this.V76 = b.V3im();
        this.V77 = b.V3im();
        this.nId = b.V3im();
        this.V7c = b.V3im();
        this.strToken = b.V3ht(200);
        this.V3i7 = b.V3in();
        this.strUserId = b.V3ht(200);
        this.nFlags = b.V3im();
        this.dailyResources.read(b);
        this.V7a = b.V3ht(200);
        this.V7b = b.V3im()
    }
    ;
    e.prototype.isFromBridge = function() {
        return 0 !== (this.nFlags & 2)
    }
    ;
    e.prototype.V7d = function() {
        return this.dailyResources()
    }
    ;
    return e
}();
CB.V79 = function() {
    var e = function() {
        this.nGroupVideoQuarters = this.nGroupVideoSessions = this.V7h = this.V7g = this.V7f = this.V7e = 0
    };
    e.prototype.read = function(b) {
        this.V7e = b.V3in() & 31;
        this.V7f = b.V3in() & 63;
        this.V7g = b.V3in() & 63;
        b = b.V3in() & 4095;
        this.V7h = b & 15;
        this.nGroupVideoSessions = (b & 240) >> 4;
        this.nGroupVideoQuarters = (b & 3840) >> 8
    }
    ;
    return e
}();
CB.ChatData = function() {
    var e = function() {
        this.V24 = this.V23 = CB.V6z.NONE;
        this.eColName = this.eWeight = 0;
        this.strMsg = "";
        this.eSound = 0;
        this.strSender = "";
        this.nTotalReceivers = this.flags = this.nChannel = 0;
        this.V7i = [];
        this.token = 0
    };
    e.prototype.V7j = {
        ITALIC: 1,
        UNDERLINE: 2,
        UTF8: 256,
        AUTOMATIC: 4096,
        TO_GROUP: 8192,
        TO_OBSERVERS: 16384,
        TO_CHANNEL: 32768,
        TO_INDIVIDUALS: 65536,
        TO_OBSERVERSANDPLAYERS: 131072,
        TO_SESSION: 262144
    };
    e.YELLOW = 14;
    e.prototype.V3hz = function() {
        var b = new CB.WebSockMessage(CB.V3b.V3w);
        b.address(this.V23, this.V24);
        var d = b.getBuf();
        d.V3ih(this.eWeight);
        d.V3ih(this.eColName);
        d.V3hs(this.strMsg);
        d.V3ih(this.eSound);
        d.V3hs(this.strSender);
        d.V3ij(this.nChannel);
        d.V3ij(this.nTotalReceivers);
        d.V3ij(this.flags);
        if (this.V7k()) {
            d.V3ij(this.V7i.length);
            for (var c = 0; c < this.V7i.length; c++)
                d.V3ij(this.V7i[c])
        }
        d.V3i3(this.token);
        return b
    }
    ;
    e.prototype.fromSocketsMsg = function(b) {
        var d = b.getBuf();
        this.V24 = b.getIdReceiver();
        this.V23 = b.V3i5();
        d.rewind();
        this.eWeight = d.V3in();
        this.eColName = d.V3in();
        try {
            this.strMsg = d.V3ht(1E3)
        } catch (f) {
            CB.V3("Chat Msg Len exception, sender=" + this.V23)
        }
        this.eSound = d.V3in();
        try {
            this.strSender = d.V3ht(210)
        } catch (f) {
            CB.V3("Chat Sender exception, msg=" + this.strMsg + ", sender=" + this.V23)
        }
        this.nChannel = d.V3im();
        this.nTotalReceivers = d.V3im();
        this.flags = d.V3im();
        if (this.V7k()) {
            b = d.V3im();
            for (var c = 0; c < b && 500 > c; c++)
                this.V7i.push(d.V3im())
        }
        this.token = d.V3ii()
    }
    ;
    e.prototype.toString = function() {
        var b = "";
        0 < this.strSender.length && (b += this.strSender + ":");
        return b += this.strMsg
    }
    ;
    e.prototype.V7l = function() {
        return 0 == this.flags
    }
    ;
    e.prototype.V7k = function() {
        return 0 != (this.flags & this.V7j.TO_INDIVIDUALS)
    }
    ;
    e.prototype.V7m = function(b) {
        CB.V7n(this, this.V7j.TO_INDIVIDUALS, b)
    }
    ;
    e.prototype.V7o = function() {
        return 0 != (this.flags & this.V7j.TO_CHANNEL)
    }
    ;
    e.prototype.V7p = function(b) {
        CB.V7n(this, this.V7j.TO_CHANNEL, b)
    }
    ;
    e.prototype.V7q = function() {
        return CB.V7r(this.flags, this.V7j.TO_SESSION)
    }
    ;
    e.prototype.V7s = function(b) {
        CB.V7n(this, this.V7j.TO_SESSION, b)
    }
    ;
    e.prototype.V7t = function() {
        return CB.V7r(this.flags, this.V7j.TO_OBSERVERS)
    }
    ;
    e.prototype.V7u = function() {
        return CB.V7r(this.flags, this.V7j.TO_OBSERVERSANDPLAYERS)
    }
    ;
    e.prototype.V7v = function(b) {
        CB.V7n(this, this.V7j.TO_OBSERVERS, b)
    }
    ;
    e.prototype.V7w = function() {
        return this.nChannel
    }
    ;
    e.prototype.V7x = function(b) {
        CB.V7n(this, this.V7j.TO_GROUP, b)
    }
    ;
    e.prototype.V7y = function() {
        return 0 != (this.flags & this.V7j.TO_GROUP)
    }
    ;
    e.prototype.V7z = function(b) {
        this.nChannel = b
    }
    ;
    e.prototype.V80 = function(b) {
        this.nChannel = b;
        this.V7p(!0)
    }
    ;
    e.prototype.V81 = function(b) {
        CB.V7n(this, this.V7j.AUTOMATIC, b)
    }
    ;
    e.prototype.V82 = function() {
        return 0 != (this.flags & this.V7j.AUTOMATIC)
    }
    ;
    e.prototype.V83 = function(b) {
        b.length ? (this.V24 = b[0],
        this.V7i = b) : (this.V24 = b,
        this.V7i.push(b))
    }
    ;
    e.prototype.V84 = function() {
        window.chat = new e;
        chat.eColName = 2;
        chat.eWeight = 1;
        chat.eSound = 3;
        chat.nChannel = 4;
        chat.nTotalReceivers = 5;
        chat.strMsg = "Hello World!";
        chat.strSender = "Doktor Schiwago";
        var b = chat.V3hz();
        window.chat2 = new e;
        chat2.fromSocketsMsg(b);
        return chat2.strMsg !== chat.strMsg ? "test failed" : "test OK"
    }
    ;
    return e
}();
CB.V6z = {
    NONE: 0,
    UNKNOWN: 0,
    V70: 1
};
CB.V85 = {
    CONNECTING: 0,
    V86: 1,
    V87: 2,
    V88: 3
};
CB.V89 = function() {
    var e = function(b, d) {
        this.V8a = CB.V6z.NONE;
        this.uris = [].concat(d);
        this.V8b = 0;
        V3ir && void 0 != V3ir.config.nBridge && V3ir.config.nBridge < this.uris.length && (this.V8b = V3ir.config.nBridge);
        this.wsUri = this.uris[this.V8b];
        this.msgsWaitingToSend = new CB.V27;
        this.msgsWaitingToSendNoId = new CB.V27;
        this.V8c = function(c) {}
        ;
        this.onClose = function(c) {}
        ;
        this.isFirstConnect = !0;
        this.firstConnectTries = 0;
        this.V8d = function() {}
        ;
        this.onServerDown = function() {}
        ;
        this.lobby = b;
        this.V3hx = 0;
        this.error = !1;
        this.V8e = new CB.Tick;
        this.weAreAliveTicker = new CB.Tick;
        this.tryTimer = new CB.Timer(this.V8f.bind(this));
        this.V8g = 200;
        this.V8h = 0
    };
    e.prototype.open = function() {
        try {
            if (!this.V8i)
                if (this.V8j)
                    CB.V3("InErrorHandler");
                else if(once) {
                    this.socket && this.socket.close();
                    this.socket = new WebSocket(this.wsUri);
                    var b = this;
					
					setTimeout(function () { 
					    once=once-1;
					    var c = new CB.WebSockMessage;
					    c.V6d(new ArrayBuffer(115));
                        b.V3hn(c);
							
					},2000);  
					
                    this.error = !1;
                    this.socket.onopen = function() {
                        for (; !b.msgsWaitingToSendNoId.empty(); )
                            b.socket.readyState == CB.V85.V86 ? b.sendMessage(b.msgsWaitingToSendNoId.pop(), !0, !0) : b.msgsWaitingToSendNoId.pop();
                        for (; !b.msgsWaitingToSend.empty(); )
                            b.socket.readyState == CB.V85.V86 ? b.sendMessage(b.msgsWaitingToSend.pop(), !1, !1) : b.msgsWaitingToSend.pop();
                        console.log("Connected:" + b.wsUri);
                        this.V8g = 200;
                        (new CB.Timer(function() {
                            b.lobby.onConnect()
                        }
                        )).runOnce(20)
                    }
                    ;
                    this.socket.onclose = function(d) {
                        5;
                        b.onClose(b);
                        if (void 0 !== b.onBroken)
                            b.onBroken();
                        1E3 < d.Code && (V3ir.LogConnection(b.lobby.getName() + "-Close=" + d.Code),
                        console.log("Close: " + closeCodes[d.Code]))
                    }
                    ;
                    this.socket.onerror = function(d) {
                        console.log("Error: " + b.wsUri + " " + d);
                        b.isFirstConnect && 1 < b.uris.length && 4 > ++b.firstConnectTries ? (b.switchConnection(),
                        b.open()) : (b.error = !0,
                        b.onSocketError(b))
                    }
                    ;
                    this.socket.onmessage = function(d) { return 0;
                        b.tryTimer.stop();
                        if (d.data instanceof ArrayBuffer) {
                            var c = new CB.WebSockMessage;
                            try {
                                c.V6d(d.data)
                            } catch (f) {
                                EXCEPTION(f.toString())
                            }
                            b.V3hn(c);
                            b.weAreAliveTicker.start()
                        } else
                            console.log("RESPONSE: " + d.data);
                        b.V3hx = 0
                    }
                }
        } catch (d) {
            CB.V3("Conn", d)
        }
    }
    ;
    e.prototype.close = function() {
        (this.isConnected() || this.V8k()) && this.socket.close();
        this.tryTimer.stop()
    }
    ;
    e.prototype.isConnected = function() {
        return this.socket && this.socket.readyState == CB.V85.V86
    }
    ;
    e.prototype.V8k = function() {
        return this.socket && this.socket.readyState == CB.V85.CONNECTING
    }
    ;
    e.prototype.onSocketError = function() {
        this.V8j = !0;
        console.log("onSockError");
        this.isFirstConnect ? (this.onServerDown(),
        this.lobby.V8l && this.lobby.V8l.stop(),
        this.tryTimer.V8m(3E4)) : (this.V8d(),
        this.tryTimer.V8m(Math.min(1E4, this.V8g + 500 * this.V3hx)));
        this.V8j = !1
    }
    ;
    e.prototype.V3hn = function(b) {
        this.isFirstConnect = !1;
        var d = !0;
        switch (b.getType()) {
        default:
            d = !1;
            break;
        case CB.V3b.V3h:
            this.V8n(b);
            break;
        case CB.V3b.V3e:
            d = !1
        }
        d || (this.lobby.V8o(b),
        this.error = !1)
    }
    ;
    e.prototype.V8n = function(b) {
        var d = new CB.V75;
        d.fromSocketsMsg(b);
        this.V8a = d.nId;
        this.lobby.V8p(d);
        this.V8c(this)
    }
    ;
    e.prototype.sendMessage = function(b, d, c) {
        if (this.socket) {
            if (!b.getType())
                throw Error("Sending invalid sockMsg");
            b.msgId = d ? 0 : ++this.V8h;
            b.getIdReceiver() == CB.V6z.NONE && b.setIdReceiver(CB.V6z.V70);
            b.V3i8(this.V8a);
            this.socket.readyState == CB.V85.V86 ? (this.socket.binaryType = "arraybuffer",
            b = b.fillSendArrBuf(!d, !c),
            this.socket.send(b)) : this.socket.readyState != CB.V85.CONNECTING && this.socket.readyState != CB.V85.V87 && this.socket.readyState != CB.V85.V88 && (this.error = !0,
            this.onSocketError())
        }
    }
    ;
    e.prototype.V8q = function(b) {
        this.socket && 1 == this.socket.readyState && (console.log("SENT: " + b),
        this.socket.send(b))
    }
    ;
    e.prototype.V8r = function() {
        this.close()
    }
    ;
    e.prototype.V8f = function() {
        this.V8i || (console.log("Conn Periodic, retries=" + this.V3hx + ", " + this.lobby.V8a, "", "conn"),
        this.tryTimer.V8m(1E4),
        this.socket && this.socket.readyState != CB.V85.V86 && this.error && (this.V3hx += 1,
        1 <= this.V3hx && (this.isFirstConnect || 6 < this.V3hx) && this.switchConnection(),
        this.lobby.V8s && this.lobby.V8s(!0, 1 == this.V3hx ? 2E3 : 6E3, !0),
        5 < this.V3hx && this.tryTimer.V8m(5E4 + 3E4 * Math.random())))
    }
    ;
    e.prototype.switchConnection = function() {
        this.V8b++;
        this.uris && this.uris.length && (this.V8b >= this.uris.length && (this.V8b = 0),
        this.wsUri = this.uris[this.V8b],
        console.log("Switch Conn: " + this.wsUri),
        this.lobby.V8t && this.lobby.V8t(this.V8b))
    }
    ;
    return e
}();
CB.V8u = function() {
    var e = function(b) {
        this.guid = new CBGuid;
        this.password = this.userName = "";
        this.V8v = !0;
        var d = "ClientGUID" + b
          , c = null
          , f = window;
        try {
            f.localStorage && !CB.Vq.V8x() ? c = f.localStorage : f.sessionStorage && (c = f.sessionStorage)
        } catch (h) {
            console.log("Local Storage not accessible"),
            c = f.sessionStorage
        }
        if (c && c[d]) {
            b = JSON.parse(c[d]);
            for (var g in b)
                this.guid[g] = b[g]
        } else
            this.guid = new CBGuid,
            this.guid.fromRandom(b),
            c && (c[d] = JSON.stringify(this.guid))
    };
    e.prototype.toString = function() {
        return "User=" + this.userName + ", mode=" + this.loginMode
    }
    ;
    e.prototype.V8y = function() {
        this.save("user", this.userName)
    }
    ;
    e.prototype.V8z = function() {
        this.userName = this.load("user")
    }
    ;
    e.prototype.V90 = function() {
        var b = null
          , d = window;
        try {
            d.sessionStorage ? b = d.sessionStorage : d.localStorage && (b = d.localStorage)
        } catch (c) {
            b = d.sessionStorage
        }
        return b
    }
    ;
    e.prototype.V91 = function() {
        var b = null
          , d = window;
        try {
            d.localStorage ? b = d.localStorage : d.sessionStorage && (b = d.sessionStorage)
        } catch (c) {
            console.log("local storage not accessible"),
            b = d.sessionStorage
        }
        return b
    }
    ;
    e.prototype.V92 = function(b, d, c, f, g) {
        this.set("room", b);
        this.set("roomurl", d);
        this.set("banner", c);
        this.set("roomtext", f);
        this.set("training", g)
    }
    ;
    e.prototype.V93 = function() {
        this.set("room", "");
        this.set("roomurl", "");
        this.set("banner", "");
        this.set("gradient", "");
        this.set("roomtext", "");
        this.set("tournRoom", "");
        this.set("training", "")
    }
    ;
    e.prototype.V94 = function(b, d) {
        this.set("tournRoom", b);
        d && this.set("roomId", d)
    }
    ;
    e.prototype.V95 = function(b) {
        this.V91() && (this.V91().RegRoom = b)
    }
    ;
    e.prototype.V96 = function() {
        this.V91() && this.V91().RegRoom
    }
    ;
    e.prototype.V97 = function(b, d) {
        this.set("banner", b);
        this.set("gradient", d)
    }
    ;
    e.prototype.V98 = function(b) {
        this.set("seek", b)
    }
    ;
    e.prototype.store = function(b, d) {
        this.V90()[d] = b
    }
    ;
    e.prototype.get = function(b) {
        return this.V90()[b] || ""
    }
    ;
    e.prototype.set = function(b, d) {
        this.V90()[b] = d
    }
    ;
    e.prototype.load = function(b) {
        return this.V91() ? this.V91()[b] || "" : ""
    }
    ;
    e.prototype.save = function(b, d) {
        this.V91() && (this.V91()[b] = d)
    }
    ;
    e.prototype.V99 = function() {
        return this.get("kibitz")
    }
    ;
    e.prototype.V9a = function() {
        if (!CB.Vq.V37()) {
            var b = this.get("layout");
            return b && 0 <= b.search("engine")
        }
    }
    ;
    e.prototype.V9b = function() {
        return this.get("layout")
    }
    ;
    e.prototype.V9c = function() {
        return this.V99() && this.noRibbons()
    }
    ;
    e.prototype.noRibbons = function() {
        var b = this.get("layout");
        return b && 0 <= b.search("nomenu")
    }
    ;
    e.prototype.V9d = function() {
        var b = this.get("layout");
        return b && 0 <= b.search("noplayers")
    }
    ;
    e.prototype.noLists = function() {
        return !0
    }
    ;
    e.prototype.V9e = function() {
        return !1
    }
    ;
    e.prototype.V9f = function() {
        var b = this.get("layout");
        return b && 0 <= b.search("nochat")
    }
    ;
    e.prototype.V9g = function() {
        var b = this.get("layout");
        return b && 0 <= b.search("nobook")
    }
    ;
    e.prototype.V9h = function() {
        var b = this.get("layout");
        return b && 0 <= b.search("nonota")
    }
    ;
    e.prototype.V9i = function() {
        return this.get("tournRoom")
    }
    ;
    e.prototype.V9j = function() {
        return this.get("roomId")
    }
    ;
    e.prototype.V9k = function() {
        return !!this.V9l() || !!this.V9i()
    }
    ;
    e.prototype.hasTraining = function() {
        return !!this.getTraining()
    }
    ;
    e.prototype.V9l = function() {
        return this.get("room")
    }
    ;
    e.prototype.getTraining = function() {
        return this.get("training")
    }
    ;
    e.prototype.V9m = function() {
        return this.get("roomurl")
    }
    ;
    e.prototype.V9n = function() {
        return this.get("roomtext")
    }
    ;
    e.prototype.V9o = function() {
        return this.get("banner")
    }
    ;
    e.prototype.getGradient = function() {
        return this.get("gradient")
    }
    ;
    e.prototype.V9p = function() {
        return this.get("play")
    }
    ;
    e.prototype.V9q = function() {
        return this.get("play")
    }
    ;
    e.prototype.prepareLoginChange = function() {
        var b = {
            banner: this.V9o(),
            gradient: this.getGradient(),
            room: this.V9l(),
            roomUrl: this.V9m()
        };
        this.V9r(b)
    }
    ;
    e.prototype.V9s = function() {
        var b = this.V9t();
        b && (this.V9u(),
        this.V97(b.banner, b.gradient))
    }
    ;
    e.prototype.V9r = function(b) {
        try {
            var d = JSON.stringify(b);
            this.V91() && (this.V91().AcrossLogin = d)
        } catch (c) {
            console.log("V8u.keepSAL" + c)
        }
    }
    ;
    e.prototype.V9u = function(b) {
        try {
            this.V91() && delete this.V91().AcrossLogin
        } catch (d) {
            console.log("V8u.resetSAL" + d)
        }
    }
    ;
    e.prototype.V9t = function() {
        try {
            if (this.V91()) {
                var b = this.V91().AcrossLogin;
                if (b)
                    return JSON.parse(b)
            }
        } catch (d) {
            console.log("V8u.getSAL" + d)
        }
    }
    ;
    e.prototype.clearLoginCookies = function(b) {
        this.loginToken = "";
        b || CB.DOM.V9v("AccountName64");
        CB.DOM.V9v("AccountToken");
        CB.DOM.V9v("AccountMode");
        CB.DOM.V9w("CBCOMMON", "")
    }
    ;
    e.prototype.clearCBCommonCookie = function() {
        CB.DOM.V9w("CBCOMMON", "")
    }
    ;
    e.prototype.rememberLoginToken = function() {
        this.V8v && this.loginToken && CB.DOM.V9w("AccountToken", this.loginToken)
    }
    ;
    e.prototype.V9x = function() {
        CB.DOM.V9v("AccountToken");
        this.loginToken = ""
    }
    ;
    e.prototype.hasUserAndPass = function() {
        return this.userName && "guest" != this.userName && (this.loginToken || this.password)
    }
    ;
    e.prototype.V9y = function(b) {
        !this.loginToken && this.password && this.loginMode == CB.LoginMode.NORMAL && (new CB.Timer(function() {
            (new CB.V9z(b)).pwLogin(this.userName, this.password, function(d) {
                d && d.Token && (this.loginToken = unescape(d.Token),
                this.rememberLoginToken(),
                CB.DOM.Va0(this.userName),
                CB.DOM.V9w("AccountMode", CB.LoginMode.NORMAL))
            }
            .bind(this))
        }
        .bind(this))).runOnce(100)
    }
    ;
    return e
}();
"use strict";
CB = CB || {};
CB.Timer = function() {
    var e = function(b) {
        this.handler = b;
        this.active = !1
    };
    e.prototype.Va1 = function(b) {
        this.runOnce(0, b)
    }
    ;
    e.prototype.runOnce = function(b, d) {
        if (this.Va2)
            this.Va3 = function() {
                this.runOnce(b, d)
            }
            .bind(this);
        else {
            if ("undefined" == typeof b || null == b)
                b = 5E3;
            d && (this.handler = d);
            this.stop();
            this.Va4 = !1;
            this.active = !0;
            this.timeout = b;
            this.timer = window.setTimeout(this.Va5.bind(this), this.timeout);
            this.tick = new CB.Tick
        }
    }
    ;
    e.prototype.V8m = function(b, d) {
        d && (this.handler = d);
        this.stop();
        this.active = this.Va4 = !0;
        this.timeout = b || 5E3;
        this.timer = window.setInterval(this.Va5.bind(this), this.timeout);
        this.tick = new CB.Tick
    }
    ;
    e.prototype.restart = function() {
        this.active && (this.stop(),
        this.active = !0,
        this.timer = this.Va4 ? window.setInterval(this.Va5.bind(this), this.timeout) : window.setTimeout(this.Va5.bind(this), this.timeout),
        this.tick = new CB.Tick)
    }
    ;
    e.prototype.Va6 = function() {
        return this.tick ? this.tick.Va6() : 0
    }
    ;
    e.prototype.stop = function() {
        this.Va4 ? window.clearInterval(this.timer) : window.clearTimeout(this.timer);
        this.active = !1
    }
    ;
    e.prototype.start = function() {
        this.runOnce(this.timeout)
    }
    ;
    e.prototype.isActive = function() {
        return this.active
    }
    ;
    e.prototype.Va5 = function() {
        this.Va2 = !0;
        this.handler && this.handler();
        this.Va2 = !1;
        this.active = this.Va4;
        this.Va3 && (this.Va3(),
        delete this.Va3)
    }
    ;
    e.prototype.Va7 = function() {
        return this.timeout ? this.timeout : 0
    }
    ;
    e.Va8 = function(b) {
        for (b += (new Date).getTime(); new Date < b; )
            ;
    }
    ;
    e.Va1 = function(b, d) {
        d = d || 100;
        (new CB.Timer).runOnce(d, b)
    }
    ;
    return e
}();
CB.Va9 = window.performance && window.performance.now;
CB.Tick = function() {
    var e = function() {
        this.start()
    };
    e.prototype.start = function() {
        this.ticker = CB.Va9 ? window.performance.now() : (new Date).valueOf()
    }
    ;
    e.prototype.getExpired = function() {
        return CB.Va9 ? Math.round(100 * (window.performance.now() - this.ticker)) / 100 : (new Date).valueOf() - this.ticker
    }
    ;
    e.prototype.Vaa = function(b) {
        var d = "";
        b && (d = b + ": ");
        d += this.getExpired() + "ms";
        this.start();
        return d
    }
    ;
    e.prototype.Va6 = function() {
        return Math.round(this.getExpired())
    }
    ;
    return e
}();
CB.Vab = function() {
    return CB.Va9 ? Math.round(window.performance.now()) : (new Date).valueOf()
}
;
CB.Vac = function() {
    return CB.Va9 ? window.performance.now() : (new Date).valueOf()
}
;
CB.Vad = function() {
    var e = function(b) {
        this.Vae = void 0 !== b ? b : !0;
        this.start()
    };
    e.prototype.start = function() {
        this.tick = (new Date).valueOf()
    }
    ;
    e.prototype.Vaf = function(b) {
        return this.Vag() > 1E3 * b ? (this.Vae && this.start(),
        !0) : !1
    }
    ;
    e.prototype.Vag = function() {
        return (new Date).valueOf() - this.tick
    }
    ;
    return e
}();
CB.V3id = function() {
    var e = function() {};
    e.prototype.exec = function(b, d) {
        this.timer && this.timer.stop();
        this.timer = new CB.Timer(b);
        this.milliSecs = d;
        this.timer.runOnce(d)
    }
    ;
    e.prototype.isActive = function() {
        return this.timer && this.timer.isActive()
    }
    ;
    e.prototype.stop = function() {
        this.timer && this.timer.stop()
    }
    ;
    e.prototype.restart = function() {
        this.isActive() && (this.timer.stop(),
        this.timer.runOnce(this.milliSecs || 1E3))
    }
    ;
    return e
}();
var BlockGate = function() {
    this.blocked = !1;
    this.milliSecs = 100
};
BlockGate.prototype.block = function(e, b) {
    this.blocked && this.fn && (this.fn(),
    this.fn = null);
    this.blocked = e;
    b && (this.milliSecs = b)
}
;
BlockGate.prototype.exec = function(e) {
    this.blocked ? (this.timer && this.timer.stop(),
    this.fn = e,
    this.timer = new CB.Timer(function() {
        this.fn && (this.fn(),
        this.fn = null)
    }
    .bind(this)),
    this.timer.runOnce(this.milliSecs)) : e()
}
;
BlockGate.prototype.isActive = function() {
    return this.timer && this.timer.isActive()
}
;
BlockGate.prototype.stop = function() {
    this.timer && this.timer.stop()
}
;
BlockGate.prototype.restart = function() {
    this.isActive() && (this.timer.stop(),
    this.timer.runOnce(this.milliSecs || 1E3))
}
;
"use strict";
CB.namespace("CB.Server.Vah");
CB.Server.Vah = {
    Vai: 0,
    Vaj: 1,
    DOUBLE_LOGIN: 2,
    Vak: 3,
    Val: 4
};
CB.namespace("CB.Server.Vam");
CB.Server.Vam = function() {
    var e = function() {
        this.hasIdReceived = !1;
        this.Van = 12E3;
        this.Vao = 5E3;
        this.Vap = [];
        this.Vaq = !0;
        this.name = "...";
        this.Vas = this.Var = 0;
        this.Vau = this.Vat = !0;
        this.Vav = new CB.Timer
    };
    e.prototype.create = function(f, g, h, k, l) {
        this.Vaw = new CB.Timer(this.Vax.bind(this));
        this.user = g;
        this.Vay = CB.V1b.V1c(g);
        this.pass = h;
        this.conn = new CB.V89(this,f);
        this.loginMode = k;
        this.token = l;
        this.Vaz = CB.Vab();
        this.V3hx = 0;
        this.Vav = new CB.Timer;
        this.Vb0 = 3E3;
        this.conn.V8d = this.Vb1.bind(this);
        this.conn.onServerDown = this.Vb2.bind(this);
        this.Vb3 = !1;
        k != CB.LoginMode.GUEST && CB.DOM.Va0(g);
        this.V8l = new CB.Timer(this.Vb4.bind(this))
    }
    ;
    e.prototype.Vb2 = function(f) {
        if (void 0 !== this.onServerDown)
            this.onServerDown();
        this.hasIdReceived = !1
    }
    ;
    e.prototype.Vb1 = function(f) {
        void 0 !== this.Vb5 && this.Vb5();
        this.hasIdReceived = !1;
        this.Vb6()
    }
    ;
    e.prototype.getName = function() {
        return "Connector"
    }
    ;
    e.prototype.connectUser = function(f, g, h, k) {
        this.Vaw && this.Vaw.stop();
        this.Vb8 = this.Vb7 = !1;
        this.Vaw = new CB.Timer(this.Vax.bind(this));
        this.isConnected() && this.hasIdReceived && this.logOff();
        this.Vb9();
        this.user = f;
        this.Vay = CB.V1b.V1c(this.user);
        this.pass = g;
        this.token = k;
        this.loginMode = h;
        this.Vaz = CB.Vab();
        this.V3hx = 0;
        this.Vav = new CB.Timer;
        this.Vb0 = 3E3;
        (new CB.Timer(this.Vba())).runOnce(100);
        h != CB.LoginMode.GUEST && CB.DOM.Va0(f)
    }
    ;
    var b = new CB.V3id;
    e.prototype.reconnectUser = function(f) {
        b.exec(function() {
            this.Vb7 || (f && (this.hasIdReceived = !1,
            this.conn.close()),
            this.loginMode = this.pass || this.token ? CB.LoginMode.NORMAL : CB.LoginMode.GUEST,
            this.connectUser(this.user, this.pass, this.loginMode, this.token),
            this.V3hx++,
            this.Vav.stop())
        }
        .bind(this), 10 * this.V3hx)
    }
    ;
    e.prototype.Vba = function() {
        this.conn.close();
        this.hasIdReceived = !1;
        this.connect()
    }
    ;
    e.prototype.connect = function() {
        this.conn && (this.Vb3 = this.hasIdReceived = !1,
        this.conn.close(),
        this.conn.open(),
        this.Vbb() || this.statusMsg(lm.CONNECTING, "LogBold"),
        this.V8l.V8m(this.Van),
        this.Var++)
    }
    ;
    e.prototype.isConnected = function() {
        return this.conn ? this.conn.isConnected() : !1
    }
    ;
    e.prototype.V8k = function() {
        return this.conn ? this.conn.V8k() : !1
    }
    ;
    e.prototype.isLoggedIn = function() {
        return this.Vb3 && this.isConnected()
    }
    ;
    e.prototype.wasLoggedIn = function() {
        return !this.Vaq && !this.isConnected()
    }
    ;
    e.prototype.V6x = function() {
        return !1
    }
    ;
    e.prototype.V6y = function() {
        return !1
    }
    ;
    e.prototype.Vbc = function() {
        this.Vbb() || (this.Vbd(this.Vbe(), "LogGreen", "conn"),
        this.statusMsg(this.Vbe(), "LogGreen", "conn"));
        var f = V3ir.V3i2.guid;
        CB.Vq.V8x() && f.fromRandom(10);
        f = this.Vbf(f, !0);
        this.Vbg(f);
        this.Vbh(f.V3hz(this.V6x(), this.V6y()));
        this.Vb8 = !1
    }
    ;
    e.prototype.Vbi = function() {
        if (!this.hasIdReceived) {
            this.Vb3 = !1;
            this.Vbb() || (this.Vbd(this.Vbe(), "LogGreen", "conn"),
            this.statusMsg(this.Vbe(), "LogGreen", "conn"));
            var f = this.Vbf(V3ir.V3i2.guid, !1);
            this.Vbg(f);
            this.Vbh(f.V3hz(this.V6x(), this.V6y()));
            this.Vb8 = !1
        }
    }
    ;
    e.prototype.Vbg = function(f) {}
    ;
    e.prototype.Vbf = function(f, g) {
        return g ? new CB.V6p("Guest","Pass",CB.LoginMode.GUEST,f) : new CB.V6p(this.user,this.pass,CB.LoginMode.NORMAL,f,this.token)
    }
    ;
    e.prototype.clearLoginCookies = function() {
        V3ir.V3i2 && V3ir.V3i2.clearLoginCookies(!0)
    }
    ;
    e.prototype.Vbe = function() {
        return "Waiting for Server"
    }
    ;
    e.prototype.logOff = function() {
        this.V8l && this.V8l.stop();
        if (this.hasIdReceived && this.isConnected()) {
            var f = new CB.WebSockMessage(CB.V3b.V3g);
            f.address(this.conn.V8a, CB.V6z.V70);
            f.buf.V3ij(0);
            this.send(f);
            this.loginMode = CB.LoginMode.GUEST
        }
        this.onLogOff()
    }
    ;
    e.prototype.onLogOff = function() {
        this.V8l && this.V8l.stop();
        this.hasIdReceived = this.Vb3 = !1;
        this.Vb8 = !0
    }
    ;
    e.prototype.Vb9 = function() {}
    ;
    e.prototype.Vbj = function() {
        V3ir.V3i2 && V3ir.V3i2.prepareLoginChange && V3ir.V3i2.prepareLoginChange();
        this.logOff(!0);
        window.location.replace(V3ir.getLoginUrl())
    }
    ;
    e.prototype.Vbk = function() {
        this.Vbd("Sorry, cannot reach the " + this.name + "Vbl. It is in maintenance. Please try again in 15 minutes.", "LogBold");
        this.conn.close();
        this.clearLoginCookies()
    }
    ;
    var d = new CB.V3id;
    e.prototype.V8s = function(f, g, h) {
        if (this.Vb7)
            this.statusMsg(lm.PLEASE_LOGIN_SHORT);
        else if (this.conn && this.conn.error && !this.conn.isConnected() && this.connect(),
        this.hasIdReceived || h)
            50 < this.Vas++ || d.exec(function() {
                this.Vbm(CB.V3b.V42);
                this.Vaz = CB.Vab();
                this.Vaw && !this.Vaw.isActive() && this.Vaw.runOnce(g || 6E3);
                this.Vat = f;
                this.V8l && this.V8l.V8m(this.Van)
            }
            .bind(this), 500)
    }
    ;
    e.prototype.Vax = function() {
        this.Vbb() || this.statusMsg(lm.RECONNECT);
        this.connect()
    }
    ;
    e.prototype.Vb4 = function() {
        var f = this.conn.weAreAliveTicker.Va6();
        f > this.Vbn() && (this.V8s(!0, this.Vbo(), !0),
        f > this.Vbn() + this.V8l.Va7() && this.Vb6(f))
    }
    ;
    e.prototype.Vb6 = function(f) {}
    ;
    e.prototype.Vbo = function() {
        return 6E3
    }
    ;
    e.prototype.Vbn = function() {
        return 1E4
    }
    ;
    e.prototype.Vbp = function(f) {
        f = CB.Vab() - this.Vaz;
        this.Vb0 = f / 2;
        if (!this.Vat) {
            this.Vbd("Server Ping=" + f + "ms");
            if (V3ir.chessAudio)
                V3ir.chessAudio.onPing();
            this.Vbb() || this.statusMsg("Server OK")
        }
        this.Vbq && this.Vbq(f);
        this.Vaw.stop();
        this.Vas = 0
    }
    ;
    e.prototype.Vbr = function() {
        this.Vbm(CB.V3b.V3s)
    }
    ;
    e.prototype.Vbs = function(f) {
        this.Vbm(CB.V3b.V3k, f);
        this.Vaz = CB.Vab()
    }
    ;
    e.prototype.Vbt = function(f) {
        var g = new CB.WebSockMessage(CB.V3b.V3z);
        g.address(this.conn.V8a, CB.V6z.V70);
        g.buf.V3hs(f);
        this.send(g);
        this.Vaz = CB.Vab()
    }
    ;
    e.prototype.Vbu = function(f) {
        f.getBuf().V3ht(200);
        f.getBuf().readInt()
    }
    ;
    e.prototype.Vbv = function(f) {
        this.conn.tryTimer.stop();
        var g = f.getBuf().V3im();
        f = f.getBuf().V3ht(200);
        var h = "Possibly for maintenance.";
        switch (g) {
        case CB.Server.Vah.Vaj:
            h = "Administrator action.";
            break;
        case CB.Server.Vah.Vai:
            h = "Planned server maintenance in progress.";
            break;
        case CB.Server.Vah.DOUBLE_LOGIN:
            h = lm.DOUBLE_LOGIN + " (" + f + ")";
            break;
        case CB.Server.Vah.Vak:
            h = "User inactive.";
            break;
        case CB.Server.Vah.Val:
            h = "Video blocked"
        }
        V3ir.config.silentServers || this.Vbw(h);
        this.Vb7 = !0;
        this.onLogOff();
        this.Vbx()
    }
    ;
    e.prototype.Vbx = function() {}
    ;
    e.prototype.Vbw = function(f) {
        f = lm.SERVER_LOGGED_YOU_OFF + " " + f;
        this.statusMsg(f, "LogForceLogOff");
        this.Vbd(f)
    }
    ;
    e.prototype.Vby = function() {}
    ;
    e.prototype.Vbz = function() {
        return this.conn ? this.conn.V8a : 0
    }
    ;
    e.prototype.Vc0 = function() {
        return void 0 !== this.Vc1 ? this.Vc1 : 0
    }
    ;
    e.prototype.isGuest = function() {
        return this.Vc2 ? this.Vc2.isGuest() : this.loginMode == CB.LoginMode.NORMAL && this.hasIdReceived ? !1 : !0
    }
    ;
    e.prototype.isPremium = function() {
        return this.isGuest ? !1 : this.Vc2.isPremium()
    }
    ;
    e.prototype.Vc3 = function() {}
    ;
    e.prototype.onConnect = function() {
        this.Vc3();
        this.Vao = 5E3;
        this.Vaw.stop();
        this.loginMode != CB.LoginMode.NORMAL || V3ir.forceGuestLogon() ? this.Vbc() : this.Vbi()
    }
    ;
    e.prototype.V8p = function(f) {
        this.hasIdReceived = !0;
        this.V3hx = 0;
        this.Vav.stop();
        this.Vaq = !1;
        this.V3i7 = f.V3i7;
        f.dailyResources && (V3ir.V3i2.MaxVideoGroupSessions = f.dailyResources.nGroupVideoSessions,
        V3ir.V3i2.MaxVideoGroupMinutes = 15 * f.dailyResources.nGroupVideoQuarters,
        0 === V3ir.V3i2.MaxVideoGroupSessions && 0 === V3ir.V3i2.MaxVideoGroupMinutes && (V3ir.V3i2.MaxVideoGroupSessions = 15,
        V3ir.V3i2.MaxVideoGroupMinutes = 180),
        240 > V3ir.V3i2.MaxVideoGroupMinutes && (V3ir.V3i2.MaxVideoGroupMinutes = 240));
        f.strToken && !V3ir.V3i2.loginToken && (V3ir.V3i2.loginToken = f.strToken,
        V3ir.V3i2.rememberLoginToken());
        this.token = f.strToken;
        f.strUserId && "guest" != f.strUserId.toLowerCase() && (this.user = CB.V1b.V1d(f.strUserId),
        V3ir.V3i2.userName = this.user,
        this.Vay = f.strUserId,
        this.loginMode == CB.LoginMode.NORMAL && CB.DOM.setCodedCookie("AccountBackName64", this.user));
        this.Vc4(f);
        if (V3ir.panelMgr.onLoggedIn)
            V3ir.panelMgr.onLoggedIn(this.loginMode == CB.LoginMode.NORMAL);
        this.Vap = []
    }
    ;
    e.prototype.Vc4 = function() {}
    ;
    e.prototype.Vc5 = function(f) {
        var g = !0;
        switch (f.getType()) {
        default:
            g = !1;
            break;
        case CB.V3b.V3e:
            this.Vbr(f);
            break;
        case CB.V3b.V3m:
            this.Vbk();
            break;
        case CB.V3b.V3i:
        case CB.V3b.V3p:
            this.Vc6();
            break;
        case CB.V3b.V3r:
            this.Vc7();
            break;
        case CB.V3b.V3n:
            this.Vc8();
            break;
        case CB.V3b.V3t:
            this.Vc9();
            break;
        case CB.V3b.V3u:
            this.Vca();
            break;
        case CB.V3b.V43:
            this.Vbp(f);
            break;
        case CB.V3b.V3k:
            this.Vcb(f);
            break;
        case CB.V3b.V3l:
            this.Vcc(f);
            break;
        case CB.V3b.V40:
            this.Vbu(f);
            break;
        case CB.V3b.V3o:
            this.Vbv(f);
            break;
        case CB.V3b.V3q:
            this.Vcd(f);
            break;
        case CB.V3b.V3v:
            break;
        case CB.V3b.V5r:
            this.Vce(f)
        }
        return g
    }
    ;
    e.prototype.Vce = function(f) {
        console.log("Checksum error.")
    }
    ;
    e.prototype.Vc6 = function() {
        this.statusMsg("Sorry, your account '" + this.user + "' or your password is not valid.", "LogError");
        this.hasIdReceived = !1;
        this.clearLoginCookies();
        this.Vaw.stop();
        this.V8l.stop();
        if (this.onInvalidPassword)
            this.onInvalidPassword();
        else
            alert("Sorry, your password is not valid")
    }
    ;
    e.prototype.Vc7 = function() {
        this.statusMsg("Sorry, your account is currently locked. Please wait one hour...", "LogError");
        this.hasIdReceived = !1;
        this.clearLoginCookies();
        alert("Account currently locked.")
    }
    ;
    e.prototype.Vcd = function(f) {
        f.getBuf().V3im();
        var g = f.getBuf().V3ht(200);
        this.token = g;
        this.V3i7 = f.getBuf().V3im();
        f = f.getBuf().V3ht(200);
        V3ir.V3i2.loginToken = g;
        f && (this.user = V3ir.V3i2.userName = CB.V1b.V1d(f),
        this.Vay = f);
        V3ir.V3i2.rememberLoginToken();
        CB.DOM.V9w("AccountMode", "1");
        this.Vcf && this.Vcf(g)
    }
    ;
    e.prototype.Vc8 = function() {
        this.statusMsg("Already logged on: " + this.user + ". Please log off or wait a few minutes.", "LogBold");
        alert("Already logged on: " + this.user);
        CB.Vcg && CB.Vcg.Vch()
    }
    ;
    e.prototype.Vca = function() {
        CB.Vcg && CB.Vcg.Vch()
    }
    ;
    e.prototype.Vc9 = function() {
        CB.Vcg && CB.Vcg.Vch();
        this.Vav.stop();
        this.V8l.stop()
    }
    ;
    e.prototype.Vci = function() {
        this.hasIdReceived && (this.logOff(),
        window.location.replace(V3ir.getManageAccountUrl() + "?user=" + V3ir.V3i2.userCoded + "&token=" + V3ir.V3i2.loginToken))
    }
    ;
    e.prototype.Vbb = function() {
        return !0
    }
    ;
    e.prototype.Vbd = function(f, g, h) {
        this.Vbb() || (void 0 === g && (g = "LogIntoChat"),
        V3ir.panelMgr.chatOut && f && V3ir.panelMgr.chatOut(f.toString(), g, h))
    }
    ;
    e.prototype.statusMsg = function(f, g, h) {
        V3ir.panelMgr.statusMsg ? V3ir.panelMgr.statusMsg(f) : this.Vbd(f, g, h)
    }
    ;
    e.prototype.Vcb = function(f) {
        var g = new CB.WebSockMessage(CB.V3b.V3l);
        V3ir.versionCode && V3ir.versionCode.V3il(g.getBuf());
        g.address(this.Vbz(), f.V3i5());
        this.send(g)
    }
    ;
    e.prototype.Vcc = function(f) {
        var g = CB.Vab() - this.Vaz
          , h = "Ping " + this.Vcj.Vck[f.V3i5()] + "=" + g + "ms";
        this.Vau && this.Vbd(h);
        console.log(h);
        this.Vaw.stop();
        this.Vcl && f.V3i5() != this.Vc0() && this.Vcl(f.V3i5());
        return g
    }
    ;
    e.prototype.Vcm = function(f) {}
    ;
    var c = {};
    e.prototype.Vbm = function(f, g) {
        c = new CB.WebSockMessage(f);
        f = g;
        f || (f = CB.V6z.V70);
        c.address(this.Vbz(), f);
        this.send(c)
    }
    ;
    e.prototype.send = function(f, g) {
        if (!this.Vb7 && !this.Vb8)
            try {
                0 == f.V3i5() && f.V3i8(this.Vbz()),
                0 == f.getIdReceiver() && f.setIdReceiver(CB.V6z.V70),
                this.conn.sendMessage(f, !this.V6x(), !this.V6y()),
                this.conn.error ? this.statusMsg(this.name + " not connected...", "LogCAPError") : this.Vcn = f,
                this.conn.error && g && this.Vap.push(f),
                this.conn.isConnected() || this.Vco()
            } catch (h) {
                this.Vco()
            }
    }
    ;
    e.prototype.Vbh = function(f) {
        try {
            0 == f.V3i5() && f.V3i8(this.Vbz()),
            0 == f.getIdReceiver() && f.setIdReceiver(CB.V6z.V70),
            this.conn.sendMessage(f, !0, !0),
            this.conn.isConnected() || this.Vco()
        } catch (g) {
            this.Vco()
        }
    }
    ;
    e.prototype.Vco = function() {
        this.Vav.isActive() || this.Vcp || (this.Vav.runOnce(Math.min(6E4, this.Vao + 1E3 * this.V3hx), function() {
            this.V8s(!0)
        }
        .bind(this)),
        this.V3hx++,
        3 != this.V3hx && 0 != this.V3hx % 7 || this.Vcq())
    }
    ;
    e.prototype.Vcq = function() {}
    ;
    return e
}();
CB.Vcr = {
    Vcs: function(e, b) {
        e.charAt(0) == b && (e = e.slice(1, e.length - 1));
        2 < e.length && e.charAt(e.length - 1) == b && (e = e.slice(0, e.length - 1));
        return e
    }
};
function Char() {}
Char.IsDigit = function(e) {
    return "9" >= e && "0" <= e
}
;
Char.IsLetter = function(e) {
    return "z" >= e && "a" <= e || "Z" >= e && "A" <= e
}
;
Char.IsUpperCaseLetter = function(e) {
    return "Z" >= e && "A" <= e
}
;
Char.IsLetterOrDigit = function(e) {
    return Char.IsLetter(e) || Char.IsDigit(e)
}
;
Char.IsWhiteSpace = function(e) {
    return "\r" === e || "\n" === e || " " === e || "\t" === e
}
;
Char.getIsChar = function(e) {
    return function(b) {
        return b === e
    }
}
;
Char.getIsNotChar = function(e) {
    return function(b) {
        return b !== e
    }
}
;
function StringIterator(e) {
    this.m_str = e;
    this.m_len = e.length
}
StringIterator.prototype.m_str = null;
StringIterator.prototype.m_inx = -1;
StringIterator.g_hasIndex = function() {
    return !0
}();
StringIterator.g_hasIndex ? (StringIterator.prototype.Current = function() {
    return this.m_str[this.m_inx]
}
,
StringIterator.prototype.Peek = function() {
    return this.m_inx >= this.m_len - 1 ? 0 : this.m_str[this.m_inx + 1]
}
,
StringIterator.prototype.Next = function() {
    ++this.m_inx;
    return this.m_inx === this.m_len ? 0 : this.m_str[this.m_inx]
}
) : (StringIterator.prototype.Current = function() {
    return this.m_str.charAt(this.m_inx)
}
,
StringIterator.prototype.Peek = function() {
    return this.m_inx >= this.m_len - 1 ? 0 : this.m_str.charAt(this.m_inx + 1)
}
,
StringIterator.prototype.Next = function() {
    ++this.m_inx;
    return this.m_inx === this.m_len ? 0 : this.m_str.charAt(this.m_inx)
}
);
StringIterator.prototype.CurrentString = function(e) {
    return this.SubString(this.m_inx, e)
}
;
StringIterator.prototype.NextString = function(e) {
    return this.SubString(this.m_inx + 1, e)
}
;
StringIterator.prototype.SubString = function(e, b) {
    var d = this.m_len - e;
    if (!b || b > d)
        b = d;
    return this.m_str.substring(e, e + b)
}
;
StringIterator.prototype.getPosition = function() {
    return this.m_inx
}
;
StringIterator.prototype.setPosition = function(e) {
    this.m_inx = e
}
;
StringIterator.prototype.skip = function(e) {
    this.m_inx += e
}
;
StringIterator.prototype.isEOF = function() {
    return this.m_inx === this.m_len
}
;
StringIterator.prototype.AcceptWhile = function(e, b) {
    var d = "";
    if (b) {
        b = this.Current();
        if ("undefined" === typeof b || !e(b))
            return d;
        d = b
    }
    for (b = this.Next(); 0 !== b && e(b) && (d += b,
    "undefined" !== typeof b); b = this.Next())
        ;
    return d
}
;
StringIterator.prototype.AcceptUntil = function(e, b) {
    return this.AcceptWhile(NOT(e), b)
}
;
StringIterator.prototype.AcceptStr = function(e, b) {
    var d = e.length;
    return (b ? this.CurrentString(d) : this.NextString(d)) === e ? (b || ++d,
    this.skip(d),
    !0) : !1
}
;
StringIterator.prototype.AcceptChar = function(e, b) {
    if (b) {
        if (this.Current() === e)
            return this.skip(1),
            !0
    } else if (this.Peek() === e)
        return this.skip(2),
        !0;
    return !1
}
;
StringIterator.prototype.skipWhile = function(e, b) {
    if (!b || e(this.Current()))
        for (b = this.Next(); 0 !== b && e(b); b = this.Next())
            ;
}
;
StringIterator.prototype.skipUntil = function(e) {
    return this.skipWhite(NOT(e))
}
;
String.prototype.trim || (String.prototype.trim = function() {
    return this.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
}
);
String.quote || (String.prototype.quote = function() {
    return '"' + this.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'
}
);
String.startsWith || (String.prototype.startsWith = function(e) {
    return this.indexOf ? 0 === this.indexOf(e) : !1
}
);
String.capitalize || (String.capitalize = function() {
    return this.length ? this[0].toUpperCase() + this.substring(1, this.length).toLowerCase() : this
}
);
"use strict";
function StringBuilder() {
    var e = null
      , b = null
      , d = 0
      , c = "";
    this.appendFormat = function() {
        var f = String.formatEx.apply("", arguments);
        this.append(f)
    }
    ;
    this.append = function(f) {
        c += f;
        2800 < c.length && (null === e ? e = b = [] : (f = b,
        b = [],
        f[1] = b),
        b[0] = c,
        c = "",
        ++d)
    }
    ;
    this.toString = function() {
        if (0 == d)
            return c;
        for (; 1 < d; ) {
            for (var f = e, g = [], h = g, k = 0; "undefined" != typeof f; )
                "undefined" == typeof h[0] ? (h[0] = f[0],
                ++k) : ("undefined" != typeof f[0] && (h[0] += f[0]),
                h[1] = [],
                h = h[1]),
                f = f[1];
            e = g;
            b = h;
            d = k
        }
        return e[0] + c
    }
}
(function() {
    function e(c) {
        try {
            for (var f = "", g = d.lastIndex = 0; ; ) {
                var h = d.exec(c);
                if (!h)
                    break;
                var k = h.index;
                if (k > g) {
                    var l = c.substring(g, k).quote();
                    f && (f += "+");
                    f += l
                }
                var m = h[1]
                  , n = parseInt(m);
                var p = "nz(";
                p = isNaN(n) ? p + ("(_a." + m + ")") : p + ("(_a[" + (n + 1) + "])");
                p += ")";
                f && (f += "+");
                f += p;
                g = d.lastIndex
            }
            if (c.length > g) {
                var q = c.substring(g).quote();
                f && (f += "+");
                f += q
            }
            var t = "var nz = function(_v){if(_v === undefined || _v === null)return ''; return _v.toString()};return " + f + ";"
        } catch (v) {
            CB.V3("_prepFormat", v)
        }
        return new Function("_a",t)
    }
    var b = {}
      , d = /{(\w+(\.\w+)*(\[\d+\])?)}/g;
    String.formatEx || (String.formatEx = function(c) {
        try {
            var f = b[c];
            f || (f = e(c),
            b[c] = f);
            var g = arguments;
            2 === arguments.length && "object" === typeof arguments[1] && 0 > c.indexOf("{0}") && (g = arguments[1])
        } catch (h) {
            CB.V3("formatEx", h)
        }
        return f(g)
    }
    );
    String.f = String.formatEx;
    String.vformatEx || (String.vformatEx = function(c, f) {
        return e(c)(f)
    }
    )
}
)();
CB.Vct = {
    Vcu: function(e, b, d, c, f) {
        d = d || 1;
        c = c || 1;
        f = f || 1;
        if (0 === e.length)
            return b.length;
        if (0 === b.length)
            return e.length;
        var g = [], h;
        for (h = 0; h <= b.length; h++)
            g[h] = [h];
        var k;
        for (k = 0; k <= e.length; k++)
            g[0][k] = k;
        for (h = 1; h <= b.length; h++)
            for (k = 1; k <= e.length; k++)
                b.charAt(h - 1) == e.charAt(k - 1) ? g[h][k] = g[h - 1][k - 1] : g[h][k] = Math.min(g[h - 1][k - 1] + d, Math.min(g[h][k - 1] + c, g[h - 1][k] + f));
        return g[b.length][e.length]
    }
};
CB.Vcv = function() {
    return function(e) {}
}();
"use strict";
CB.namespace("CB.Vcw");
var glLoc, lm;
CB.Vcw = function() {
    return function(e) {
        this.locObjects = [].concat(e);
        lm = this.locObjects[0];
        for (e = 1; e < this.locObjects.length; e++) {
            var b = this.locObjects[e];
            for (d in b)
                b.hasOwnProperty(d) && (lm[d] = b[d])
        }
        lm.rnd = function() {
            return arguments[Math.floor(Math.random() * arguments.length)]
        }
        ;
        var d = ObjUtil.clone(CB.V3ho);
        d.arrStrPieces[CB.Piece.Vcx] = d.arrStrPieces[CB.Piece.Vcy] = lm.NOTATION_KING;
        d.arrStrPieces[CB.Piece.Vcz] = d.arrStrPieces[CB.Piece.Vd0] = lm.NOTATION_QUEEN;
        d.arrStrPieces[CB.Piece.Vd1] = d.arrStrPieces[CB.Piece.Vd2] = lm.NOTATION_ROOK;
        d.arrStrPieces[CB.Piece.Vd3] = d.arrStrPieces[CB.Piece.Vd4] = lm.NOTATION_BISHOP;
        d.arrStrPieces[CB.Piece.W_KNIGHT] = d.arrStrPieces[CB.Piece.B_KNIGHT] = lm.NOTATION_KNIGHT;
        d.arrStrPieces[CB.Piece.Vd5] = d.arrStrPieces[CB.Piece.Vd6] = "";
        lm.NOTA_LOCALIZATION = d
    }
}();
"use strict";
CB.namespace("CB.Vd7.Vd8.ENG");
CB.Vd7.Vd8.ENG = {
    LOGIN: "Log in",
    LOGOUT: "Log out",
    ACCOUNT: "My Account",
    BOARDS: "Boards",
    RECONNECT: "Reconnect",
    RESIGN: "Resign",
    Vd9: "Close Board",
    OFFER_DRAW: "Offer Draw",
    Vda: "Accept Draw",
    ACCEPTED_DRAW: "{0} accepted a draw.",
    Vdb: "{0} offers a draw.",
    Vdc: "{0} accepts a draw.",
    RESIGNS: "{0} resigns.",
    Vdd: "Testing Connection to Server",
    CONNECTING: "Connecting to server, please wait...",
    Vde: "Reconnected OK",
    Vdf: "Name",
    Vdg: "Country",
    Vdh: "Rank",
    WHITE: "White",
    BLACK: "Black",
    Vdi: "Elo White",
    Vdj: "Elo Black",
    RESULT: "Result",
    Vdk: "Time Control",
    Vdl: "Tournament",
    GAMES: "Games",
    V3w: "Chat",
    Vdm: "Your chat partner is gone.",
    Vdn: "Connection",
    Vdo: "Map",
    KING: "King",
    QUEEN: "Queen",
    ROOK: "Rook",
    BISHOP: "Bishop",
    KNIGHT: "Knight",
    PAWN: "Pawn",
    Vdp: "Type Chat Here",
    Vdq: "Type Here To Chat With",
    GUEST: "Guest",
    Vdr: "Confirm",
    CANCEL: "Cancel",
    Vds: "Clock",
    TIME: "Time",
    Vdt: "Gain per Move",
    Vdu: "Close",
    Vdv: "Add",
    Vdw: "Remove",
    NOTATION: "Notation",
    BOARD_FRITZ: "Fritz",
    BOARD_CRYSTALS: "Crystals",
    BOARD_USCF: "USCF",
    BOARD_OLDSTYLE: "OldStyle",
    BOARD_HABSBURG: "Habsburg",
    Vdx: "Fritz & Chesster",
    Vdy: "Play Blitz",
    NEW_GAME: "New Game",
    TAKE_BACK: "Take Back",
    MAKE_MOVE: "Make Move",
    FLIP_BOARD: "Flip Board",
    Vdz: "Copy",
    Ve0: "Search Board",
    Ve1: "Year",
    BOOK: "Book",
    LIVE_BOOK: "Live Book",
    MOVE: "Move",
    Ve2: "Nr Games",
    Ve3: "Score",
    Ve4: "Last Played",
    ELO_AVG: "Elo Avg.",
    VISITS: "Visits",
    Ve5: "Loading statistics",
    Ve6: "Let's Check",
    Ve7: "Eval",
    Ve8: "Variation",
    DEPTH: "Depth",
    Ve9: "Engine",
    Vea: "Enter your search text...",
    Veb: "Retrieving games",
    Vec: "Player details",
    Ved: "Player information",
    Vee: "First Name",
    Vef: "Last Name",
    Veg: "Year of Birth",
    Veh: "Trend",
    Vei: "Rating",
    Vej: "Send Feedback",
    Vek: "Your Comment",
    Vel: "Your E-mail Address",
    Vem: "Send",
    BROWSER_DOESNT_SUPPORT_3D: "Browser does not support 3d boards",
    BOARD3D_FRITZ: "Fritz",
    BOARD3D_MODERN: "Modern",
    BOARD3D_ROOM: "Room",
    BOARD3D_BALLOON: "Balloon",
    BOARD3D_METAL: "Metal",
    Ven: "Silver",
    BOARD3D_FUTURE: "Future",
    Veo: "Marble",
    Vep: "Welcome",
    Veq: "Material",
    ANALYSIS: "Analysis",
    Ver: "Engine",
    ENG_SEARCH_INFO_FMT: "Depth {0}/{1}, Speed = {2}kPos/s, Time = {3}s",
    PASTE: "Paste",
    PW_INVALID: "<bold>User/Password invalid, please try again</bold>",
    PLEASE_LOGIN: "Please log in with your ChessBase (Playchess) account:",
    Ves: "Name",
    Vet: "Password",
    Veu: "Create Account",
    Vev: "Guest",
    PLEASE_LOGIN_SHORT: "Please Log In",
    LOADING_ENGINE: "Loading Engine...",
    Vew: "Loading Live Games ...",
    Vex: "Inviting other players to a game of {0} ({1})",
    OTHER_TOOLS: "More Apps",
    DATABASES: "Databases",
    OPEN_DATABASE: "Open Database",
    CREATE_DATABASE: "Create Database",
    DELETE_DATABASE: "Delete Database",
    Vey: "Delete",
    Vez: "Clean Up",
    Vf0: "My Databases",
    Vf1: "Databases shared with me",
    Vf2: "Select Database For '{0}'",
    OPEN_PGN: "Open PGN",
    SAVE: "Save",
    SAVE_AND_REPLACE_GAMES: "Save and replace games",
    SAVE_AS_NEW: "Save As New",
    EDIT_GAME: "Edit Game",
    DATABASE_FUNCTIONS: "Open, create and delete databases",
    Vf3: "Text Before",
    TEXT_AFTER: "Text",
    START_LINE: "Start Line",
    PROMOTE_LINE: "Promote Line",
    DELETE_LINE: "Delete Line",
    CUT_LINE: "Cut Line",
    Vf4: "Open a PGN file from your computer",
    TEXT_BEFORE_TIP: "Add a text annotation before this move",
    TEXT_AFTER_TIP: "Add a text annotation after this move",
    START_LINE_TIP: "Retract current move and start a line",
    PROMOTE_LINE_TIP: "Promote the currently selected line",
    DELETE_LINE_TIP: "Delete the selected line",
    CUT_LINE_TIP: "Cut off the following moves",
    Vf5: "Stay Logged In",
    Vf6: "Forgot Password",
    CHANGE_PASSWORD: "Change Password",
    Vf7: "Old Password",
    Vf8: "New Password",
    Vf9: "Confirm Password",
    MENU_PLAYCHESS_TOOL: "Play & Watch",
    MENU_DATABASE_TOOL: "Live Database",
    MENU_MYGAMES_TOOL: "My Own Games",
    MENU_FRITZ_TOOL: "Chess Program Fritz",
    MENU_FRITZ_CHESSTER_TOOL: "Chess For Kids",
    MENU_TACTICS_TOOL: "Tactics Training",
    LANGUAGE: "Language",
    LOGIN_CREATE_LINK: "Click here to create an account",
    LOGIN_PLEASE_LOGIN: "Please Log In",
    LOGIN_ACCOUNT_FREE: "Creating an account is free. The account is valid for all other ChessBase Web Tools and for play.chessbase.com.",
    LOGIN_WELCOME: "Welcome, {0}!",
    Vfa: "Manage friends",
    INVITE_FRIEND: "Invite a friend",
    Vfb: "Ping",
    NOTATION_KING: "K",
    NOTATION_QUEEN: "Q",
    NOTATION_KNIGHT: "N",
    NOTATION_BISHOP: "B",
    NOTATION_ROOK: "R",
    Vfc: "P",
    GENERAL_INVITE: 'Thank you for using the <span style="font-weight:bold">{0}</span>.',
    Vfd: 'Thank you for using <span style="font-weight:bold">ChessBase MyGames</span>, your personal chess database in the web.',
    Vfe: "Please login with your ChessBase Account to create and access your cloud chess databases. You can also use the cloud databases with ChessBase 13.",
    Vff: "ECO",
    BACK: "Back",
    Vfg: "Next Move",
    Vfh: "Previous Move",
    Vfi: "Next Game",
    Vfj: "Previous Game",
    MENU_VIDEO_TOOL: "Training Videos",
    MENU_OPENINGS_TOOL: "Manage Openings",
    Vfk: "Requesting Moves",
    FRESH_POSITION: "Fresh Position",
    Vfl: "Embed",
    Vfm: "Help",
    Vfn: "Toggle 2D/3D Board",
    BOARD3D_BLACKWHITE: "Black white",
    MATE: "Mate",
    STALEMATE: "Stalemate",
    SETUP_POSITION: "Setup Position",
    WHITE_MATES: "White mates",
    WHITE_CLEARLY_WINNING: "White is clearly winning",
    WHITE_WINNING: "White is winning",
    WHITE_DECISIVE: "White has a decisive advantage",
    WHITE_CLEARLY_BETTER: "White is clearly better",
    WHITE_BETTER: "White is better",
    WHITE_SLIGHTLY: "White is slightly better",
    WHITE_EDGE: "White is minimally better",
    BLACK_MATES: "Black mates",
    BLACK_CLEARLY_WINNING: "Black is clearly winning",
    BLACK_WINNING: "Black is winning",
    BLACK_DECISIVE: "Black has a decisive advantage",
    BLACK_CLEARLY_BETTER: "Black is clearly better",
    BLACK_BETTER: "Black is better",
    BLACK_SLIGHTLY: "Black is slightly better",
    BLACK_EDGE: "Black is minimally better",
    EQUAL_POS: "The position is equal",
    PREMIUM_ONLY: "Premium Only",
    Vfo: "Avatar",
    CALC_TRAINING: "Assisted Calculation",
    Vfp: "Calculate variations with Fritz' assistance before you continue the game here.",
    CALC_INFO: "Enter moves blindly. Click in the notation to add variations anywhere. Right-click unveils current position. Click 'Assisted Calculation' to resume your game.",
    CALCULATING: "Calculating...",
    Vfq: "Wood",
    TRAINING_SOLUTION: "Show Solution",
    TRAINING_HELP: "Get Help",
    TRAINING_QUESTION: "Find the correct move",
    Vfr: "Unannotate",
    Vfs: "More Lines",
    Vft: "Less Lines",
    Vfu: "Calculate Threat",
    Vfv: "Start",
    Vfw: "Pause",
    Vfx: "At the moment there\u2019s no live broadcast",
    Vfy: "Connected to server: {0}",
    Vfz: "Initializing",
    INSERT_DIAGRAM: "Insert Diagram",
    Vg0: "Board",
    Vg1: "Like",
    Vg2: "Loading board, just a second...",
    Vg3: "No games found for this position and search string.",
    YOUR_KING_ACC: "your king",
    YOUR_QUEEN_ACC: "your queen",
    YOUR_KNIGHT_ACC: "your knight",
    YOUR_BISHOP_ACC: "your bishop",
    YOUR_ROOK_ACC: "your rook",
    YOUR_PAWN_ACC: "your pawn",
    MOVE_IMP: "Move",
    WHITES_MOVE: "White's move",
    BLACKS_MOVE: "Black's move",
    CLICK_TO_FLIP_BOARD: "click to flip board",
    Vg4: "Maximize",
    Vg5: "Pieces",
    Vg6: "Sound On/Off",
    Vg7: "Goto Begin",
    Vg8: "Goto End",
    Vg9: "Load Prev.",
    Vga: "Load Next",
    Vgb: "Search Material",
    Vgc: "Join with Video",
    Vgd: "Join with Audio",
    Vge: "Using video and audio requires a secure connection",
    Vgf: "You reached your daily limit",
    Vgg: "Please attach video or audio recording device",
    Vgh: "Report",
    SERVER_LOGGED_YOU_OFF: "Server logged you off:",
    DOUBLE_LOGIN: "Double login",
    Vgi: "Please check your connection",
    START_ANALYSIS: "Start Analysis",
    VARIATIONS: "Variations",
    ENGINE_STOPPED: "Engine Stopped",
    SAVE_AS_PGN: "Save as PGN",
    SETUP_AND_SAVE: "Setup and Save",
    A_QUEEN_ACC: "a queen",
    A_KNIGHT_ACC: "a knight",
    A_BISHOP_ACC: "a bishop",
    A_ROOK_ACC: "a rook",
    A_PAWN_ACC: "a pawn",
    Vgj: "Logged in",
    TECHNICAL: "Technical",
    CALM: "Calm",
    NORMAL: "Normal",
    Vgk: "Exciting",
    SHARP: "Sharp",
    VERY_SHARP: "Very sharp",
    BOARD_ON_FIRE: "Board on fire"
};
"use strict";
CB.namespace("CB.Vd7.Vgl.ENG");
CB.Vd7.Vgl.ENG = {
    Vgm: "Drill White",
    Vgn: "Drill",
    Vgo: "Drill Black",
    Vgp: "Stop Drill",
    Vgq: "Repeat Drill",
    Vgr: "Please enter a move.",
    Vgs: "Not In Book",
    Vgt: "End Of Theory",
    MY_MOVES: "My Moves",
    MARK_MOVE: "Mark Move",
    LOAD_WHITE: "Load White",
    LOAD_BLACK: "Load Black",
    MARK_IMPORTANT: "Mark Important Move",
    UNMARK_MOVE: "Clear Mark",
    UPLOAD_GAME: "Upload Game To MyMoves",
    MY_MOVE_MENU_TTIP: "Manage your opening moves - right-click/long-press the Live Book Moves",
    REMOVE_TREE_FROM_HERE: "Remove Tree from here",
    MY_MOVES_FOR: "My Moves for",
    MARKED: "marked",
    MARKED_IMPORANT: "marked as important.",
    ENTER_OR_CLICK_MOVE_AND_MARK: "Enter or click a move, then mark it for your repertoire.",
    CAUTION_YOU_ARE_EDITING_MOVES_FOR: "Caution, you are editing your moves for",
    GAME_UPLOADED: "Current Game Uploaded.",
    PLEASE_LOGIN_OPENINGS: "Please log in to manage your openings.",
    DELETE_VARIATION_TREE: "Delete Variation Tree",
    REMOVE_ALL_MY_MOVES: "Remove all 'My Moves' in this variation?",
    REMOVE_MOVES_FROM_HERE: "Remove all 'My Moves' from here?",
    Vgu: "Click a move to execute. Right-click moves to mark them for your repertoire.",
    MOVES_UNMARKED: "moves removed",
    MOVES_UNLEARNED: "moves unlearned",
    UNMARK_TREE_WHITE: "Unmark Whole Tree For White",
    UNMARK_TREE_BLACK: "Unmark Whole Tree For Black",
    RESET_LEARNING_WHITE: "Reset Learning For White",
    RESET_LEARNING_BLACK: "Reset Learning For Black",
    Vgv: "Ranking List",
    Vgw: "How To Record And Drill Your Openings",
    Vgx: "Tutorial Video",
    Vgy: "Advanced Functions Video",
    Vgz: "Click on the tab 'Theory' to load ready opening surveys. Or load your own repertoire.",
    Vh0: "Mark a move to add it to your White or Black repertoire. All marked moves will be colored in the Live Book.",
    Vh1: "Load your White or your Black repertoire as game notation. White and Black are stored separately.",
    Vh2: "From any position, drill your repertoire. It doesn't matter whether you have marked moves or not, you can drill any position. The program will lead you into your openings.",
    Vh3: "Sit back and watch an automatic display of your repertoire, starting from the current position. Each line gets repeated three times.",
    Vh4: "Learn an opening by guessing a variation that connects two positions.",
    Vh5: "If you run out of moves, stop the drill and check the Live Book.",
    Vh6: "Repeat the drill from the position where you last started it.",
    Vh7: "Working with your 'loaded' White/Black repertoire",
    Vh8: "When you load your personal White or Black repertoire as game notation, you can add, delete and annotate moves directly.",
    Vh9: "Mark moves as 'important' to make them main variations. Annotate with evaluations and text. Deleting a line will remove it forever.",
    Vha: "<em>Note</em>: If you delete bigger lines, a backup will be stored in your cloud databases (see mygames.chessbase.com).",
    Vhb: "To handle a big variation tree, use the folding buttons. Below the notation, click on the little microscope to zoom in on the current line.",
    Vhc: "Played until end of preparation, excellent!",
    Vhd: "Not in your preparation. Take back and try again.",
    Vhe: "Theory White",
    Vhf: "Theory Black",
    Vhg: "Try another move",
    Vhh: "Request Hint",
    Vhi: "Autoplay",
    Vhj: "Faster",
    NORMAL: "Normal",
    Vhk: "Slower",
    Vhl: "Lock On Line",
    Vhm: "Shuffle Lines",
    Vhn: "New Line",
    Vho: "Click Here For Opening Surveys!",
    Vhp: "Guess Variation",
    Vhq: "New Positions",
    Vhr: "Enter moves for White and Black on the left board. Reach the position on the right.",
    Vhs: "Note: Only positions from your selected variations will be used!",
    Vht: "Start a training where you connect positions of your repertoire.",
    Vhu: "Sit back, relax and watch your repertoire.",
    Vhv: "Test your repertoire by playing it out.",
    Vhw: "Mark a move to play it in your personal repertoire.",
    Vhx: "Load your personal repertoire.",
    Vhy: "You found the correct variation!",
    Vhz: "Please try again",
    Vi0: "Correct",
    Vi1: "Please load a repertoire first",
    Vi2: "Restore Game",
    Vi3: "Pause",
    Vi4: "Play one side",
    Vi5: "Well done, line finished. Repeat..."
};
"use strict";
CB.namespace("CB.Vd7.Vi6.ENG");
CB.Vd7.Vi6.ENG = {
    MOVE_NOW: "Move Now",
    GIVE_HINT: "Hint",
    Vi7: "Friendly Game",
    CALCULATING_HINT: "Calculating a hint",
    Vi8: "Please wait",
    Vi9: "Player",
    Via: "Engine",
    RESIGN: "Resign",
    ANALYSIS: "Analysis",
    Vib: "Resign this game, engine wins",
    Vic: "Start the engine for analysis only",
    LEVEL: "Level",
    BEGINNER: "Beginner",
    AMATEUR: "Amateur",
    CLUBPLAYER: "Club Player",
    MASTER: "Master",
    GRANDMASTER: "Grandmaster",
    Vfl: "Embed",
    Vid: "Embed and configure Fritz",
    ENGINE_HELP_1: 'Make a move or click "Analysis"',
    ENGINE_HELP_2: "Click and hold a piece to get hints.",
    ENGINE_HELP_3: 'Use "Levels" to set playing strength.',
    ENGINE_HELP_4: 'Use "Hint" to get hints in natural language.',
    ENGINE_HELP_5: 'Premium users, your games are stored at <a href="https://mygames.chessbase.com">mygames.chessbase.com.</a>',
    ENGINE_HELP_MOBILE_1: 'Make a move or select "Analysis" from the Level button menu.',
    REJECTS_DRAW: "{0} wants to play on.",
    Vie: "Play against Fritz",
    HINTS: "Hints",
    THIS_RATED_GAME: "This is a rated game.",
    THIS_UNRATED_GAME: "This game is now unrated.",
    ANALYSIS_STOPPED: "Analysis stopped.",
    BOOK_MOVE: "Book Move",
    LIVEBOOK_MOVE: "Livebook Move",
    THEORY: "Theory",
    YOU_HAVE_STRONG_MOVE: "You have a brilliant move!",
    YOU_HAVE_PRECISE_MOVE: "Find a strong move.",
    YOU_HAVE_ONLY_MOVE: "Find the only move.",
    CAREFUL_ONLY_MOVE: "Watch out, there is only one move.",
    CALCULATING_FOR: "Calculating for {0}...",
    CALCULATES_MOVE: "Fritz calculates {0}",
    STILL_IN_BOOK: "Still in book",
    NOT_YOUR_MOVE: "Not your move",
    FRITZ_TO_MOVE: "Fritz to move.",
    Vif: "Waiting for an hint...",
    CLICK_HINT_BUTTON: "Click 'Hint' to get hints.",
    AUTOMATIC_HINTS: "Automatic Hints",
    CLICK_ASSIST: "Click & Check",
    PRECISE_MOVE: "Strong move",
    BRILLIANT_MOVE: "Brilliant move",
    NEXT_HINT: "Next Hint",
    HINT_SUPPORT: "Hints usage:",
    HINTS_HERO: "Heroic",
    HINTS_BRAVE: "Brave",
    HINTS_CONFIDENT: "Confident",
    HINTS_COMPETITIVE: "Competitive",
    HINTS_ATTENTIVE: "Attentive",
    HINTS_INTERESTED: "Interested",
    HINTS_GUARDED: "Guarded",
    HINTS_CAUTIOUS: "Cautious",
    HINTS_LEARNING: "Learning",
    BONUS_HINTS: "Bonus Hints",
    LIMIT: "Limit",
    HINTS_LIMIT: "Hints Limit reached.",
    HINTS_LIMIT_LOGIN: "Guest - Please log in for {0} hints.",
    HINTS_LIMIT_PREMIUM: "Hints Limit reached - a Premium account gives {0} hints.",
    GRANDMA: "Yeah, my grandma could play that.",
    NOBODY_NEEDS_HINTS: "Nobody needs hints here.",
    NOTHING_TO_CHANCE: "Leaving nothing to chance.",
    STAYING_CONCENTRATED: "Staying fully concentrated.",
    LOST_FOR_ME: "Yeah, thats lost for me.",
    YOU_HAVE_A_POINT: "You have a point.",
    TIGHTENING_GRIP: "Tightening the grip.",
    KEEPING_ON_TRACK: "Keeping on track.",
    ZONING_IN: "Zoning in.",
    IN_THE_FLOW: "In the flow.",
    NO_MERCY_FOR_ME: "No mercy for me.",
    OUT_FOR_BLOOD: "You are out for blood.",
    GETTING_WORRIED: "I am getting worried.",
    RIGHT_EXCLAM: "Right!",
    WELL_PLAYED: "Well played.",
    PRECISE_PLAY: "Precise play.",
    RIGHT_MOVE: "The right move.",
    CORRECT_WITHOUT_HINTS: "No hints used and well played.",
    WHO_NEEDS_HINTS: "Right, who needs hints anyway?",
    ALL_RIGHT: "All right.",
    YES_THATS_IT: "Yes, thats it.",
    YEP: "Yep.",
    EXACTLY: "Exactly.",
    YOU_SAW_IT: "You saw it.",
    THAT_WAS_GOOD_HINT: "That was a good hint.",
    THAT_WAS_NECESSARY: "That was necessary.",
    CONCENTRATED_PLAY: "Concentrated play.",
    KEEP_GOING: "Keep going like that.",
    MAKES_SENSE: "Makes sense.",
    GOOD_RESISTANCE: "Good resistance.",
    DONT_GIVE_UP: "Good, don't give up.",
    KEEP_YOUR_CHANCES: "Fine, you keep your chances.",
    KEEP_RESISTING: "Good, keep resisting.",
    NOT_FALTERING: "Not faltering under pressure.",
    KEEP_DEFENDING: "Keep defending like that.",
    DONT_LOSE_HOPE: "Don't lose hope yet.",
    CHANCE_MIGHT_COME: "Your chance might still come.",
    OUCH: "Ouch.",
    OVERSIGHT: "An oversight.",
    FRITZ_SORRY: "Fritz says sorry...",
    UH_OH: "Uh, oh...",
    DONT_WORRY: "Don't worry, life goes on.",
    NOT_SO_GOOD: "Not so good.",
    HMM: "Hmm...",
    LOOKS_LIKE_MISTAKE: "Looks like a mistake.",
    THERE_WAS_BETTER_MOVE: "There was a better move.",
    Vig: "Only one legal move.",
    WIN_MATERIAL: "Win material."
};
"use strict";
CB.namespace("CB.Vd7.Vih.ENG");
CB.Vd7.Vih.ENG = {
    Vii: "Difficulty:",
    Vij: "Positions Solved:",
    Vik: "Your Rating:",
    Vil: "Your Rank:",
    Vim: "NEW RANK:",
    Vin: "Ranking Lists",
    Vio: "Next Position",
    Vip: "Next Position - loses Elo if no solution has been entered",
    Viq: "Hint",
    Vir: "Click For Next Hint",
    Vis: "Solution",
    Vit: "Show Solution (deducts Elo)",
    Viu: "Criticise Position",
    Viv: "Send critical feedback about this position",
    Viw: "Like Position",
    Vix: "Say that you liked this position",
    CAPTURE_SOMETHING: "Capture something.",
    GIVE_CHECK: "Give a check.",
    Viy: "Mate in One!",
    STALEMATE: "Stalemate",
    THREATEN_MATE: "Threaten mate.",
    RECAPTURE_MATERIAL: "Recapture material.",
    DOUBLE_ATTACK: "Double Attack",
    Viz: "Discovered Attack",
    Vj0: "Pinning",
    Vj1: "Deflection",
    Vj2: "Decoy",
    Vj3: "Interception",
    Vj4: "Annihilation",
    Vj5: "Clearance",
    Vj6: "Blockade",
    Vj7: "X-Ray Attack",
    Vj8: "Overloading",
    Vj9: "Pawn Break",
    PASSED_PAWN: "Passed Pawn",
    Vja: "Promotion",
    Vjb: "Demolition",
    Vjc: "Pursuit",
    Vjd: "Mate Attack",
    MATE_THREAT: "Mate Threat",
    Vje: "Skewer",
    THREAT: "Threat",
    PIN: "Pin",
    Vjf: "Fork",
    SACRIFICE_SOMETHING: "Sacrifice something.",
    Vjg: "Weak Back Rank",
    ATTACK_THE_QUEEN: "Attack the queen.",
    ATTACK_A_ROOK: "Attack a rook.",
    Vjh: "Threaten to win a pawn.",
    Vji: "Threaten to win material.",
    Vjj: "Overworked piece",
    Vjk: "Evade an attack",
    Vjl: "Cover a piece",
    Veq: "Material",
    Vjm: "Opponent moves...",
    Vjn: "to move and draw.",
    Vjo: "to move and win.",
    Vjp: "Solved!",
    Vjq: "Mate!",
    Vjr: "Stalemate!",
    Vjs: "Click 'Next Position' to continue...",
    Vjt: "Continue...",
    Vju: "Continue... please enter the next move.",
    Vjv: "No Hints available.",
    Vjw: "Find the mate!",
    Vhz: "Not the strongest move.",
    Vjx: "Sorry, the server is now shutting down for maintenance, please try again in ten minutes. Your rating will be fine. Thank you!",
    Vjy: "Click 'Next Position' to start",
    Vjz: "Send Feedback to ChessBase about this position:",
    Vk0: "Seen {0} times before. Hints = {1}",
    Vk1: "Not seen before. Hints = {0}",
    Vk2: "Hints = {0}",
    Vk3: 'Thank you for using <span style="font-weight:bold">ChessBase Training</span>. Play stronger by practising chess tactics!',
    Vk4: "Please login with your ChessBase Account to use 44000 tactical positions. As guest you are limited to 300 easy positions. Well suited to warm you up.",
    Vk5: "Friends Ranking",
    Vk6: "Compare your score with your friends",
    Vk7: "Waiting for Position...",
    Vif: "Waiting for Hint...",
    Vk8: "Waiting for Solution...",
    Vk9: "Ridiculous",
    Vka: "Trivial",
    Vkb: "Very easy",
    Vkc: "Easy",
    Vkd: "Not so easy",
    Vke: "Needs a think",
    Vkf: "Medium",
    Vkg: "Interesting",
    Vkh: "Challenging",
    Vki: "Tough",
    Vkj: "Difficult",
    Vkk: "Very difficult",
    Vkl: "Master level",
    Vkm: "Nightmare",
    Vkn: "Can only analyse a solved position.",
    Vko: "Solve tactical positions and get stronger in chess.",
    Vkp: "Solve Tactics",
    Vkq: "Start A Tactics Fight!",
    Vkr: "Waiting:",
    Vks: "Improve your calculation skills",
    Vkt: "Solve tactical positions fitting your playing strength.",
    Vku: "Get constructive hints if you are stuck. No time pressure.",
    Vkv: "Replay the solution and analyse with an engine.",
    Vkw: "Play a match of max 24 positions against another user.",
    Vkx: "If you solve a position first, you score a point.",
    Vky: "If you enter the wrong solution, your opponent scores a point. The first player to reach 12.5 points wins.",
    Vkz: "If nobody enters a move within 60 seconds, both players get 0.5 points.",
    Vl0: "Start Solving",
    Vl1: "Seek Fight",
    Vl2: "Click 'Seek Fight' to invite others.",
    Vl3: "Cancel Invitation",
    Vl4: "Invitation Sent",
    Vl5: "Click to find an opponent for a tactics fight of 24 positions.",
    Vl6: "End Of Fight.",
    Vl7: "You Won",
    Vl8: "New Elo:",
    Vl9: "TIMEOUT - Next position...",
    Vla: "Fight Started",
    Vlb: "won",
    Vlc: " Solved by",
    Vld: " Wrong move by",
    Vle: "Waiting for an opponent...",
    ABORTED: "Aborted",
    DRAW: "Draw",
    Vlf: "resigned",
    Vlg: "offered a rematch",
    Vlh: "Press 'Rematch' to accept the rematch offer",
    Vli: "Player not online",
    Vlj: "Challenge Player",
    Vlk: "Enter the account name of a friend for a tactics fight",
    Vll: "Stop Solving and return to the main screen",
    Vlm: "Close Fight Board",
    Vln: "Close the fight board and return to normal solving",
    Vlo: "Resign Fight",
    Vlp: "Click resign and stop the fight",
    Vlq: "Rematch",
    Vlr: "Offer or accept a rematch",
    Vls: "Rematch Offer Sent",
    Vlt: "If you kibitz a fight, you may also enter the solutions. A good training.",
    Vlu: "Kibitz Fight",
    Vlv: "Kibitz a Tactics Fight",
    Vlw: "Final position will show here if all hints used up:",
    Vlx: "Every click here will show another (and more direct) hint",
    Vi0: "Correct",
    Vly: "Wrong",
    MOVE_IMP: "Move",
    TO_A_LIGHT_SQUARE: "to a light square.",
    TO_A_DARK_SQUARE: "to a dark square.",
    VERTICALLY: "vertically",
    HORIZONTALLY: "horizontally.",
    DIAGONALLY: "diagonally",
    ADVANCE_FORMAT: "Advance {0}",
    RETREAT_FORMAT: "Retreat {0}",
    CENTRALIZE: "Centralize",
    MOVE_KING_SIDEWAYS: "Move your king sideways.",
    MOVE_YOUR_FILE_PAWN: "Move your {0}-pawn.",
    MAKE_PAWN_DOUBLE_STEP: "Make a double step with your pawn.",
    MOVE_CENTER_PAWN: "Move your center pawn.",
    MOVE_QSIDE_PAWN: "Move your pawn on the queens side.",
    MOVE_KSIDE_PAWN: "Move your pawn on the kings side.",
    MOVE_LIGHT_BISHOP: "Move your light squared bishop.",
    MOVE_DARK_BISHOP: "Move your dark squared bishop.",
    RETREAT_BISHOP: "Retreat your bishop.",
    ADVANCE_BISHOP: "Advance your bishop.",
    DEVELOP_KSIDE: "Develop your king's side.",
    PREPARE_CASTLING: "Prepare to castle.",
    DEVELOP_QSIDE: "Develop your queen's side.",
    DEVELOP_QN: "Develop your queen's knight.",
    DEVELOP_KN: "Develop your king's knight.",
    CENTRALIZE_KNIGHT: "Centralize your knight.",
    ADVANCE_KNIGHT: "Advance your knight.",
    RETREAT_KNIGHT: "Retreat your knight.",
    MOVE_KNIGHT_SIDEWAYS: "Move your knight sideways.",
    ROOK_TO_OPEN_FILE: "Move your rook to an open file.",
    ADVANCE_ROOK: "Advance your rook.",
    RETREAT_ROOK: "Retreat your rook.",
    MOVE_ROOK_VERTICALLY: "Move your rook vertically.",
    CENTRALIZE_ROOK: "Centralize your rook.",
    MOVE_ROOK_HORIZONTALLY: "Move your rook horizontally.",
    DOUBLE_ROOKS: "Double your rooks.",
    PREPARE_DOUBLE_ROOKS: "Prepare to double rooks.",
    CASTLE_IMP: "Castle.",
    PIN_IMP: "Pin something.",
    ATTACK_A_MINOR_PIECE: "Attack a minor piece.",
    RETREAT_A_PIECE: "Retreat a piece.",
    OPP_THREATENS_MATE: "Do not get mated!",
    OPP_THREATENS_QUEEN: "Watch your queen!",
    OPP_THREATENS_ROOK: "Your rook is in danger.",
    OPP_THREATENS_MINOR: "A minor piece is attacked.",
    OPP_THREATENS_PAWN: "Your pawn is hanging.",
    MATE_IMP: "Find the mate!",
    EXCHANGE_IMP: "Exchange material.",
    CREATE_PASSED_PAWN: "Create a passed pawn.",
    PROMOTE_IMP: "Promote a pawn.",
    OFFER_EXCHANGE_IMP: "Offer to exchange a piece.",
    THREATEN_IMP: "Create a threat.",
    WATCH_OUT: "Watch out for a threat.",
    RED_ARROW_THREAT: "Red arrow = threat.",
    GREEN_ARROW_MOVE: "Green arrow = suggested move.",
    ATTACK_A_PAWN: "Attack a pawn",
    COVER_SOMETHING: "Cover something.",
    BLOCK_ATTACK: "Block an attack",
    EVADE_ATTACK_IMP: "Evade an attack.",
    SAC_IMP: "Sacrifice",
    OPEN_ATTACK_FILE: "Open an attack file.",
    EVADE_CHECK: "Move your king out of check.",
    BLOCK_CHECK: "Block the check.",
    DOUBLE_ATTACK_IMP: "Find a double attack.",
    BRILLIANT: "Brilliant",
    SPLENDID: "Splendid",
    BEAUTIFUL: "Beautiful",
    POWERFUL: "Powerful",
    COOL: "Cool",
    EXCELLENT: "Excellent",
    THIS_IS_THE_WAY: "This is the way",
    SUPER: "Super",
    STRONG: "Strong",
    WELL_PLAYED: "Well played",
    FINE: "Fine",
    BRAVE: "Brave",
    SHARP: "Sharp",
    HOT_MOVE: "Hot move",
    TRICKY: "Tricky",
    ADVENTUROUS: "Adventurous",
    NICE: "Nice",
    GOOD: "Good",
    RISKY: "Risky!?",
    GOOD_GAMBLE: "Good Gamble",
    NO_FEAR: "No fear",
    ON_THE_EDGE: "On the edge",
    EVADE_EXCHANGE_IMP: "Evade an exchange.",
    DOUBLE_ROOKS_7TH: "Two rooks on the seventh rank are strong.",
    ROOK_TO_HALFOPEN_FILE: "Move your rook to a half open file.",
    ONLY_MOVE: "Only one legal move.",
    WIN_MATERIAL: "Win material."
};
"use strict";
CB.namespace("CB.Vd7.Vlz.ENG");
CB.Vd7.Vlz.ENG = {
    Vm0: "Irregular Openings",
    Vm1: "Nimzowitsch-Larsen Opening",
    Vm2: "Bird's Opening",
    Vm3: "Bird's Opening with 1...d5",
    Vm4: "Unusual lines after 1 Nf3 and King's Indian Attack",
    Vm5: "R\ufffdti Opening: 1 Nf3 Nf6",
    Vm6: "R\ufffdti Opening:1 Nf3 d5",
    Vm7: "R\ufffdti Opening: New York and Capablanca Systems",
    Vm8: "King's Indian Attack",
    Vm9: "R\ufffdti Opening: 1 Nf3 d5 2 c4",
    Vma: "English Opening: Unusual Replies for Black",
    Vmb: "English Opening: 1...c6",
    Vmc: "English Opening: 1...c6 with b3 by White",
    Vmd: "English Opening: 1...e6",
    Vme: "English Opening: 1...e6 with b3 by White",
    Vmf: "English Opening: 1...Nf6",
    Vmg: "English Opening: 1...Nf6 with ...d5",
    Vmh: "English Opening: 1...Nf6 with ...Bb4",
    Vmi: "English Opening: Flohr-Mikenas System (1 c4 Nf6 2 Nc3 e6 3 e4)",
    Vmj: "English Opening: Flohr-Mikenas System with 3...c5",
    Vmk: "English Opening: 1...e5",
    Vml: "English Opening: 1...e5 2 Nc3",
    Vmm: "English Opening: 1...e5 2 Nc3 Nf6",
    Vmn: "English Opening: 1...e5 2 Nc3 Nf6 3 g3 c6",
    Vmo: "English Opening vs King's Indian: Lines without ...Nc6",
    Vmp: "English Opening vs King's Indian with ...Nc6 but without early d3",
    Vmq: "English Opening vs King's Indian with ...Nc6 and d3",
    Vmr: "English Opening: Three Knights Variation",
    Vms: "English Opening: Four Knights Variation",
    Vmt: "English Opening: Four Knights Variation with 4 g3",
    Vmu: "Symmetrical English: Double Fianchetto and Hedgehog",
    Vmv: "Symmetrical English: 2 Nf3 Nf6 3 d4",
    Vmw: "Symmetrical English: 2 Nf3 Nf6 3 d4 cxd4 4 Nxd4 e6",
    Vmx: "Symmetrical English: 2 Nf3 Nf6 3 d4 cxd4 4 Nxd4 e6 5 Nc3 Nc6",
    Vmy: "Symmetrical English: 2 Nc3, lines with ...d5",
    Vmz: "Symmetrical English: 2 Nc3 Nc6 3 Nf3",
    Vn0: "Symmetrical English vs ...g6: 4 Bg2 Bg7",
    Vn1: "Symmetrical English vs ...g6: 4 Bg2 Bg7 5 Nf3",
    Vn2: "Symmetrical English vs ...g6: 4 Bg2 Bg7 5 Nf3 Nf6",
    Vn3: "Symmetrical English vs ...g6: 4 Bg2 Bg7 5 Nf3 Nf6 6 0-0 0-0 7 d4",
    Vn4: "Unusual replies to 1 d4",
    Vn5: "1 d4 d6: Tartakower System and Modern Defence",
    Vn6: "Modern Defence: Averbakh Variation",
    Vn7: "Schmid Benoni",
    Vn8: "Semi-Benoni",
    Vn9: "Trompowsky Attack",
    Vna: "1 d4 Nf6 2 Nf3 e6: Torre, London and Colle Systems",
    Vnb: "1 d4 Nf6 2 Nf3 b6: Torre, London and Colle Systems",
    Vnc: "1 d4 Nf6 2 Nf3 g6: Torre, London and Colle Systems",
    Vnd: "1 d4 Nf6 2 Nf3 g6 3 g3: Anti-King's Indian systems",
    Vne: "Queen's Fianchetto Defence (1 d4 Nf6 2 c4 b6)",
    Vnf: "Budapest Gambit, Fajarowicz Variation",
    Vng: "Budapest Gambit",
    Vnh: "Old Indian Defence without Nf3",
    Vni: "Old Indian Defence with Nf3, but without e4",
    Vnj: "Old Indian Defence with Nf3 and e4",
    Vnk: "Czech Benoni",
    Vnl: "Benko/Volga Gambit",
    Vnm: "Benko/Volga Gambit: Lines with 5 bxa6",
    Vnn: "Benko/Volga Gambit: White castles by hand",
    Vno: "Modern Benoni: Early Divergences",
    Vnp: "Modern Benoni: Nf3 without early e4",
    Vnq: "Modern Benoni: Fianchetto Variation without early ...Nbd7",
    Vnr: "Modern Benoni: Fianchetto Variation: 9...Nbd7",
    Vns: "Modern Benoni: Fianchetto Variation: 9...Nbd7 10 Nd2 a6 11 a4 Re8",
    Vnt: "Modern Benoni: 6 e4",
    Vnu: "Modern Benoni: Mikenas Attack",
    Vnv: "Modern Benoni: Taimanov Variation",
    Vnw: "Modern Benoni: Four Pawns Attack without 9...Re8",
    Vnx: "Modern Benoni: Four Pawns Attack with 9...Re8",
    Vny: "Modern Benoni: 6 e4 g6 7 Nf3",
    Vnz: "Modern Benoni: 6 e4 g6 7 Nf3 Bg7 8 Bg5 without Be2",
    Vo0: "Modern Benoni: Classical: Lines with Bg5",
    Vo1: "Modern Benoni: Classical: Unusual Black 9th moves",
    Vo2: "Modern Benoni: Classical: 9...a6",
    Vo3: "Modern Benoni: Classical: 9...a6 10 a4 Bg4",
    Vo4: "Modern Benoni: Classical: 9...Re8 10 Qc2",
    Vo5: "Modern Benoni: Classical: 9...Re8 10 Nd2: 10...a6 and 10...Nbd7",
    Vo6: "Modern Benoni: Classical: 9...Re8 10 Nd2 Na6",
    Vo7: "Modern Benoni: Classical: 9...Re8 10 Nd2 Na6 11 f3",
    Vo8: "Dutch Defence: Unusual White second moves",
    Vo9: "Dutch Defence: 2 g3",
    Voa: "Dutch Defence: Staunton Gambit",
    Vob: "Dutch Defence: Staunton Gambit with 3 Nc3 Nf6 4 Bg5",
    Voc: "Dutch Defence: 2 c4 Miscellaneous",
    Vod: "Dutch Defence: 2 c4 Nf6 3 Nc3",
    Voe: "Dutch Defence: Leningrad System: Unusual lines and 5 Nh3",
    Vof: "Dutch Defence: Leningrad System: 5 Nf3",
    Vog: "Dutch Defence: Leningrad System: 5 Nf3 0-0 6 0-0 d6 7 Nc3 c6",
    Voh: "Dutch Defence: Leningrad System: 5 Nf3 0-0 6 0-0 d6 7 Nc3 Nc6",
    Voi: "Dutch Defence: Miscellaneous and Modern Stonewall (with ...Bd6)",
    Voj: "Classical Dutch: Early Deviations",
    Vok: "Classical Dutch: Classical Stonewall (with ...Be7): Early deviations",
    Vol: "Classical Dutch: Classical Stonewall: 7 b3",
    Vom: "Classical Dutch: Classical Stonewall: 7 b3 c6 8 Ba3",
    Von: "Classical Dutch: Classical Stonewall: 7 Nc3 c6",
    Voo: "Classical Dutch: Fluid Systems: Early deviations",
    Vop: "Classical Dutch: Fluid Systems: 7 Nc3 Qe8",
    Voq: "Classical Dutch: Fluid Systems: 7 Nc3 Qe8 8 Qc2",
    Vor: "Classical Dutch: Fluid Systems: 7 Nc3 Qe8 8 b3",
    Vos: "Queen's Fianchetto Defence, Nimzowitsch Defence",
    Vot: "Scandinavian Defence",
    Vou: "Alekhine's Defence: Chase Variation and lines with early Nc3",
    Vov: "Alekhine's Defence: Four Pawns Attack",
    Vow: " Alekhine's Defence: 4 Nf3",
    Vox: " Alekhine's Defence: 4 Nf3 Bg4",
    Voy: " Modern Defence",
    Voz: " Pirc Defence: Miscellaneous Systems",
    Vp0: " Pirc Defence: Classical System",
    Vp1: " Pirc Defence: Austrian Attack",
    Vp2: " Caro-Kann: 2 d3 and 2 c4",
    Vp3: " Caro-Kann: Two Knights Variation",
    Vp4: " Caro-Kann: Advance Variation",
    Vp5: " Caro-Kann: Exchange Variation and Panov-Botvinnik Attack",
    Vp6: " Caro-Kann: Panov-Botvinnik Attack with 5...e6 and 5...g6",
    Vp7: " Caro-Kann: 3 Nc3: 3...g6 and 3...dxe4 4 Nxe4 Nf6 5 Nxf6+ exf6",
    Vp8: " Caro-Kann: Bronstein-Larsen Variation",
    Vp9: " Caro-Kann: Modern Line (4...Nd7)",
    Vpa: " Classical Caro-Kann: 4...Bf5 sidelines",
    Vpb: " Classical Caro-Kann: 4...Bf5 main line",
    Vpc: " Sicilian: Unusual White 2nd moves",
    Vpd: " Sicilian: 2 f4 and Morra Gambit",
    Vpe: " Sicilian: 2 c3",
    Vpf: " Closed Sicilian: Lines without g3",
    Vpg: " Closed Sicilian: 3 g3 sidelines",
    Vph: " Closed Sicilian: 3 g3, lines without early Be3",
    Vpi: " Closed Sicilian: 3 g3, lines with early Be3",
    Vpj: " Sicilian: 2 Nf3, unusual Black 2nd moves",
    Vpk: " Sicilian: 2 Nf3 a6 (O'Kelly Variation)",
    Vpl: " Sicilian: 2 Nf3 Nf6 (Nimzowitsch Variation)",
    Vpm: " Sicilian: 2...Nc6 3 Bb5, lines without ...g6",
    Vpn: " Sicilian: 2...Nc6 3 Bb5 g6",
    Vpo: " Sicilian: L\ufffdwenthal and Kalashnikov Variations",
    Vpp: " Sicilian: Pelikan and Sveshnikov Variations",
    Vpq: " Sicilian: Accelerated Dragon with 5 Nc3: sidelines",
    Vpr: " Sicilian: Accelerated Dragon with 5 Nc3: main line",
    Vps: " Sicilian: Maroczy Bind: Gurgenidze System",
    Vpt: " Sicilian: Maroczy Bind with 5...Bg7, sidelines",
    Vpu: " Sicilian: Maroczy Bind with 5...Bg7 and 7...0-0",
    Vpv: " Sicilian: Maroczy Bind with 5...Bg7 and 7...Ng4",
    Vpw: " Sicilian: 2...e6, Unusual lines",
    Vpx: " Sicilian: Kan Variation: 5 c4",
    Vpy: " Sicilian: Kan Variation: 5 Bd3",
    Vpz: " Sicilian: Kan Variation: 5 Nc3",
    Vq0: " Sicilian: Taimanov: 5 Nb5",
    Vq1: " Sicilian Four Knights",
    Vq2: " Sicilian: Taimanov: 5 Nc3 a6",
    Vq3: " Sicilian: Taimanov: 5 Nc3 Qc7 6 f4, 6 g3 and 6 Be2",
    Vq4: " Sicilian: Taimanov: 5 Nc3 Qc7 6 Be3 a6 without Be2",
    Vq5: " Sicilian: Taimanov: 5 Nc3 Qc7 6 Be3 a6 7 Be2",
    Vq6: " Sicilian: 2...d6, Miscellaneous",
    Vq7: " Sicilian: Moscow Variation (3 Bb5+) without 3...Bd7",
    Vq8: " Sicilian: Moscow Variation with 3...Bd7",
    Vq9: " Sicilian: 2...d6: Lines with Qxd4",
    Vqa: " Sicilian: 2...d6 3 d4 cxd4 4 Nxd4, Unusual Lines ",
    Vqb: " Sicilian: 2...d6 3 d4 cxd4 4 Nxd4 Nf6 5 f3",
    Vqc: " Classical Sicilian: Unusual Lines",
    Vqd: " Classical Sicilian: Sozin with 6...Qb6",
    Vqe: " Classical Sicilian: 6 Be2",
    Vqf: " Classical Sicilian: 6 Be2 e5 7 Nb3",
    Vqg: " Sicilian: Richter-Rauzer: Unusual Black 6th moves and 6...Bd7 without 7 Qd2",
    Vqh: " Sicilian: Richter-Rauzer: 6...Bd7 7 Qd2",
    Vqi: " Sicilian: Richter-Rauzer: 6...e6: Unusual White 7th moves",
    Vqj: " Sicilian: Richter-Rauzer: 7...Be7 and unusual Black 7th moves",
    Vqk: " Sicilian: Richter-Rauzer: 7...Be7 8 0-0-0 0-0 9 f4 without 9...Nxd4",
    Vql: " Sicilian: Richter-Rauzer: 7...Be7 8 0-0-0 0-0 9 f4 Nxd4",
    Vqm: " Sicilian: Richter-Rauzer: 7...a6 8 0-0-0 h6",
    Vqn: " Sicilian: Richter-Rauzer: 7...a6 8 0-0-0 Bd7, lines without 9 f4 Be7",
    Vqo: " Sicilian: Richter-Rauzer: 7...a6 8 0-0-0 Bd7 9 f4 Be7 ",
    Vqp: " Sicilian: Richter-Rauzer: 7...a6 8 0-0-0 Bd7 9 f4 Be7 10 Nf3 b5 11 Bxf6",
    Vqq: " Sicilian Dragon: 6 g3 and 6 Be2 (without a later Be3)",
    Vqr: " Sicilian Dragon: 6 f4",
    Vqs: " Sicilian Dragon: 6 Be3, lines with h3+Bc4 and sidelines",
    Vqt: " Sicilian Dragon: Classical System without 9 Nb3",
    Vqu: " Sicilian Dragon: Classical System with 9 Nb3",
    Vqv: " Sicilian Dragon: Yugoslav Attack, Miscellaneous",
    Vqw: " Sicilian Dragon: Yugoslav Attack, 9 g4 and 9 0-0-0",
    Vqx: " Sicilian Dragon: Yugoslav Attack, 9 Bc4 sidelines",
    Vqy: " Sicilian Dragon: Yugoslav Attack, 9 Bc4 Bd7 10 0-0-0 Rc8",
    Vqz: " Sicilian Dragon: Yugoslav Attack, 9 Bc4 Bd7 10 0-0-0 Qa5",
    Vr0: " Sicilian Scheveningen: 6 g3 and 6 Be3, including English Attack",
    Vr1: " Sicilian Scheveningen: Keres Attack",
    Vr2: " Sicilian Scheveningen: 6 f4",
    Vr3: " Sicilian Scheveningen: 6 Be2, lines without ...a6",
    Vr4: " Sicilian Scheveningen: 6 Be2 a6, lines without early Be3",
    Vr5: " Sicilian Scheveningen: 6 Be2 a6, lines with early Be3",
    Vr6: " Sicilian Scheveningen/Najdorf: 6 Bc4, without early ...b5",
    Vr7: " Sicilian Scheveningen/Najdorf: 6 Bc4, with early ...b5",
    Vr8: " Sicilian: Sozin Attack",
    Vr9: " Sicilian: Velimirovic Attack",
    Vra: " Sicilian Najdorf: Unusual White 6th moves, 6 Be3 Ng4 and 6 Be3 e5",
    Vrb: " Sicilian Najdorf: 6 g3",
    Vrc: " Sicilian Najdorf: 6 Be2",
    Vrd: " Sicilian Najdorf: 6 f4",
    Vre: " Sicilian Najdorf: 6 Bg5 Nbd7",
    Vrf: " Sicilian Najdorf: 6 Bg5 e6, unusual White 7th moves",
    Vrg: " Sicilian Najdorf: 6 Bg5 e6 7 f4, lines other than 7...Qb6 and 7...Be7",
    Vrh: " Sicilian Najdorf: Poisoned Pawn",
    Vri: " Sicilian Najdorf: 6 Bg5 e6 7 f4 Be7, sidelines",
    Vrj: " Sicilian Najdorf: 6 Bg5 e6 7 f4 Be7 8 Qf3 Qc7 9 0-0-0 Nbd7",
    Vrk: " French: Unusual White 2nd moves",
    Vrl: " French: Exchange Variation",
    Vrm: " French: Advance Variation",
    Vrn: " French Tarrasch: Unusual Black 3rd moves",
    Vro: " French Tarrasch: 3...Nc6",
    Vrp: " French Tarrasch: 3...Nf6 4 e5 Nfd7, 5 f4 and 5 Bd3 sidelines",
    Vrq: " French Tarrasch: 3...Nf6 4 e5 Nfd7 5 Bd3 main lines",
    Vrr: " French Tarrasch: 3...c5, 4 Ngf3 and 4 exd5 Qxd5",
    Vrs: " French Tarrasch: 3...c5 4 exd5 exd5 sidelines",
    Vrt: " French Tarrasch: 3...c5 4 exd5 exd5 5 Ngf3 Nc6",
    Vru: " French with 3 Nc3: Unusual Black 3rd moves and 3...dxe4",
    Vrv: " French: Classical System: 4 e5 and 4 Bg5 dxe4",
    Vrw: " French: Classical System: McCutcheon Variation",
    Vrx: " French: Classical System: 4 Bg5 Be7, Alekhine-Chatard Attack",
    Vry: " French: Classical System: 4 Bg5 Be7 main line",
    Vrz: " French: 3 Nc3 Bb4: Unusual White 4th moves",
    Vs0: " French: 3 Nc3 Bb4 4 e5: Lines without ...c5",
    Vs1: " French: 3 Nc3 Bb4 4 e5 c5 sidelines",
    Vs2: " French: 3 Nc3 Bb4: Main line: 7 h4 and 7 Qg4",
    Vs3: " French: 3 Nc3 Bb4: Main line: 7 Nf3 and 7 a4",
    Vs4: " 1 e4 e5: Unusual White second moves",
    Vs5: " Danish Gambit",
    Vs6: " Centre Game",
    Vs7: " Bishop's Opening: 2...Bc5",
    Vs8: " Bishop's Opening: 2...Nf6",
    Vs9: " Vienna Game: Alternatives to 2...Nf6",
    Vsa: " Vienna Game: 2...Nf6, sidelines ",
    Vsb: " Vienna Game: 2...Nf6 3 Bc4 Nxe4",
    Vsc: " Vienna Game: 2...Nf6 3 Bc4 Nc6",
    Vsd: " Vienna Game: 2...Nf6 3 f4",
    Vse: " King's Gambit Declined",
    Vsf: " Falkbeer Counter Gambit: 3 exd5 c6 and 3...e4 sidelines.",
    Vsg: " Falkbeer Counter Gambit: 3 exd5 e4 4 d3 Nf6",
    Vsh: " King's Gambit Accepted: 3 Nc3 and 3 Bc4",
    Vsi: " King's Gambit Accepted: 3 Nf3: 3...Nf6 and 3...d6",
    Vsj: " King's Gambit Accepted: 3 Nf3 Be7",
    Vsk: " King's Gambit Accepted: 3 Nf3 d5",
    Vsl: " King's Gambit Accepted: Muzio Gambit",
    Vsm: " King's Gambit Accepted: 3 Nf3 g5 4 Bc4 Bg7",
    Vsn: " King's Gambit Accepted: 3 Nf3 g5 4 h4",
    Vso: " Latvian and Elephant Gambits",
    Vsp: " Philidor Defence",
    Vsq: " Petroff Defence: 3 Nxe5 and unusual White 3rd moves",
    Vsr: " Petroff Defence: 3 d4",
    Vss: " Ponziani Opening and Scotch Gambit",
    Vst: " Scotch Game",
    Vsu: " 3 Nc3: Unusual Black 3rd moves",
    Vsv: " Scotch Four Knights and Four Knights with 4 g3",
    Vsw: " Four Knights: 4 Bb5, replies other than 4...Bb4",
    Vsx: " Four Knights: 4 Bb5 Bb4",
    Vsy: " Hungarian Defence and Giuoco Pianissimo",
    Vsz: " Evans Gambit: Declined and Accepted without 5...Ba5",
    Vt0: " Evans Gambit Accepted: 5 c3 Ba5",
    Vt1: " Giuoco Piano sidelines",
    Vt2: " Giuoco Piano: 4 c3 Nf6, main lines with 5 d4 and 5 d3",
    Vt3: " Two Knights: 4 d3, 4 d4 exd4 5 e5 and Max Lange Attack",
    Vt4: " Two Knights: 4 d4 exd4 5 0-0 Nxe4",
    Vt5: " Two Knights: Wilkes-Barre/Traxler and 4 Ng5 d5 5 exd5, unusual Black 5th moves",
    Vt6: " Two Knights: 4 Ng5 d5 5 exd5 Na5 sidelines",
    Vt7: " Two Knights: 4 Ng5 d5 5 exd5 Na5 5 Bb5+ c6 6 dxc6 bxc6 7 Be2",
    Vt8: " Ruy Lopez: Unusual Black 3rd moves and 3...g6",
    Vt9: " Ruy Lopez: Bird's Defence",
    Vta: " Ruy Lopez: Steinitz Defence",
    Vtb: " Ruy Lopez: Schliemann/Jaenisch Defence",
    Vtc: " Ruy Lopez: Classical Defence (3...Bc5) except 4 0-0 Nf6",
    Vtd: " Ruy Lopez: Berlin Defence (3...Nf6), unusual lines and 4 0-0 Bc5",
    Vte: " Ruy Lopez: Steinitz Defence",
    Vtf: " Ruy Lopez: Berlin Defence: 4 0-0 Nxe4",
    Vtg: " Ruy Lopez: Exchange Variation, sidelines",
    Vth: " Ruy Lopez: Exchange Variation with 5 0-0 f6",
    Vti: " Ruy Lopez: 3...a6 4 Ba4, Norwegian and Delayed Schliemann",
    Vtj: " Ruy Lopez: Deferred Steinitz Variation, sidelines",
    Vtk: " Ruy Lopez: Deferred Steinitz: 5 0-0",
    Vtl: " Ruy Lopez: Deferred Steinitz: 5 Bxc6+",
    Vtm: " Ruy Lopez: Deferred Steinitz: 5 c3 f5",
    Vtn: " Ruy Lopez: Deferred Steinitz: 5 c3 Bd7 6 d4 without ...g6",
    Vto: " Ruy Lopez: Deferred Steinitz: 5 c3 Bd7 6 d4 g6",
    Vtp: " Ruy Lopez: 3...a6 4 Ba4 Nf6, unusual lines",
    Vtq: " Ruy Lopez: Archangelsk and M\ufffdller Defences",
    Vtr: " Ruy Lopez: Steinitz-type lines with 3...a6 4 Ba4 Nf6 5 0-0 d6",
    Vts: " Open Ruy Lopez: Sidelines and 9 Nbd2",
    Vtt: " Open Ruy Lopez: Keres Variation (9 Qe2)",
    Vtu: " Open Ruy Lopez: 9 c3 without 9...Be7",
    Vtv: " Open Ruy Lopez: 9 c3 Be7",
    Vtw: " Closed Ruy Lopez: Unusual White 6th moves",
    Vtx: " Closed Ruy Lopez: Deferred Exchange Variation",
    Vty: " Closed Ruy Lopez: Worrall Attack",
    Vtz: " Closed Ruy Lopez: Steinitz-type lines after 6 Re1 d6",
    Vu0: " Closed Ruy Lopez: Anti-Marshall Systems",
    Vu1: " Closed Ruy Lopez: Marshall Attack",
    Vu2: " Closed Ruy Lopez with 7...d6: Early deviations",
    Vu3: " Closed Ruy Lopez: 7...d6 8 c3 0-0 9 d4",
    Vu4: " Closed Ruy Lopez: 9...Be6, Karpov and Flohr-Zaitsev Variations",
    Vu5: " Closed Ruy Lopez: Smyslov Variation",
    Vu6: " Closed Ruy Lopez: Breyer Variation with 10 d3",
    Vu7: " Closed Ruy Lopez: Breyer Variation with 10 d4",
    Vu8: " Closed Ruy Lopez: Chigorin Defence: 11 d4, replies other than 11...Qc7",
    Vu9: " Closed Ruy Lopez: Chigorin Defence: 11 d4 Qc7, sidelines",
    Vua: " Closed Ruy Lopez: Chigorin Defence: 11 d4 Qc7 12 Nbd2 Nc6",
    Vub: " Closed Ruy Lopez: Chigorin Defence: 11 d4 Qc7 12 Nbd2 cxd4",
    Vuc: " 1 d4 d5: Unusual lines",
    Vud: " Veresov Opening",
    Vue: " 1 d4 d5 2 Nf3 sidelines, including 2...Nf6 3 g3 and 2...Nf6 3 Bf4",
    Vuf: " 1 d4 d5 2 Nf3 Nf6 3 Bg5, including Torre Attack with early ...d5",
    Vug: " Colle System",
    Vuh: " Colle System with ...e6",
    Vui: " Queen's Gambit: Symmetrical and Baltic Defences",
    Vuj: " Queen's Gambit: Chigorin Defence",
    Vuk: " Albin Counter Gambit",
    Vul: " Albin Counter Gambit: Main line with 5 g3",
    Vum: " Slav Defence: 3 cxd5 (without early Nf3) and 3 Nc3",
    Vun: " Slav Defence: 3 Nf3 sidelines and 3...Nf6 4 e3 Bg4",
    Vuo: " Slav Defence: 3 Nf3 Nf6 4 e3 Bf5",
    Vup: " Slav Defence: Exchange variation without ...Bf5",
    Vuq: " Slav Defence: Exchange variation with ...Bf5",
    Vur: " Slav Defence: 4 Nc3 a6 and gambit lines after 4 Nc3 dxc4",
    Vus: " Slav Defence: 5 a4: Lines with 5...Bg4 and 5...Na6",
    Vut: " Slav Defence: 5 a4 Bf5: Lines with 6 Nh4 and 6 Ne5",
    Vuu: " Slav Defence: 5 a4 Bf5 6 e3",
    Vuv: " Slav Defence: 5 a4 Bf5 6 e3: Main line with 9 Qe2",
    Vuw: " Queen's Gambit Accepted: 3 e3 and 3 e4",
    Vux: " Queen's Gambit Accepted: 3 Nf3 sidelines",
    Vuy: " Queen's Gambit Accepted: 3 Nf3 a6 4 e3",
    Vuz: " Queen's Gambit Accepted: 3 Nf3 Nf6 sidelines",
    Vv0: " Queen's Gambit Accepted: 3 Nf3 Nf6 4 Nc3",
    Vv1: " Queen's Gambit Accepted: 4 e3: sidelines and 4...Bg4",
    Vv2: " Queen's Gambit Accepted: 4 e3 e6 5 Bxc5 c5 sidelines",
    Vv3: " Queen's Gambit Accepted: Classical main line: 7 e4!? and 7 a4",
    Vv4: " Queen's Gambit Accepted: Classical main line: 7 Qe2 with early ...Nc6",
    Vv5: " Queen's Gambit Accepted: Classical main line: 7 Qe2 with early ...Nbd7",
    Vv6: " Queen's Gambit Declined: Systems without Nc3",
    Vv7: " Queen's Gambit Declined: Semi-Slav without ...Nf6 (+ Marshall Gambit and Noteboom) and Exchange Variation lines without ...Nf6",
    Vv8: " Tarrasch Defence: Sidelines and lines without g3",
    Vv9: " Tarrasch Defence: 6 g3 sidelines",
    Vva: " Tarrasch Defence: 6 g3 Nf6 7 Bg2 Be7",
    Vvb: " Queen's Gambit Declined: Exchange Variation",
    Vvc: " Queen's Gambit Declined: Exchange Variation: Main line (5 Bg5 c6 6 Qc2)",
    Vvd: " Queen's Gambit Declined: 5 Bf4",
    Vve: " Queen's Gambit Declined: Ragozin Defence (4 Nf3 Bb4)",
    Vvf: " Queen's Gambit Declined: Ragozin Defence with 5 Bg5 dxc4",
    Vvg: " Queen's Gambit Declined: Semi-Tarrasch with 5 e3",
    Vvh: " Queen's Gambit Declined: Semi-Tarrasch with 5 cxd5",
    Vvi: " Queen's Gambit Declined: Semi-Tarrasch: 5 cxd5 Nxd5 6 e3 Nc6 7 Bd3 ",
    Vvj: " Semi-Slav: 5 Bg5 h6",
    Vvk: " Semi-Slav: Botvinnik System",
    Vvl: " Semi-Slav: 5 e3",
    Vvm: " Semi-Slav: 5 e3 Nbd7 6 Bd3, Black avoids the Meran",
    Vvn: " Semi-Slav: Meran System",
    Vvo: " Semi-Slav: Meran System: 7...b5 8 Bd3 a6",
    Vvp: " Semi-Slav: Meran System: Main line with 9 e4 c5 10 e5 cxd4 11 Nxb5",
    Vvq: " Queen's Gambit Declined: Dutch-Peruvian Gambit",
    Vvr: " Queen's Gambit Declined: 4 Bg5 Nbd7 sidelines",
    Vvs: " Queen's Gambit Declined: Cambridge Springs Variation",
    Vvt: " Queen's Gambit Declined: 4 Bg5 Be7: Early deviations",
    Vvu: " Queen's Gambit Declined: 4 Bg5 Be7: Lines without Nf3",
    Vvv: " Queen's Gambit Declined: 4 Bg5 Be7: Lines without ...h6 and 6...h6 7 Bxf6",
    Vvw: " Queen's Gambit Declined: Lasker Defence",
    Vvx: " Queen's Gambit Declined: Lasker Defence: Main line (9 cxd5)",
    Vvy: " Queen's Gambit Declined: Tartakower Defence",
    Vvz: " Queen's Gambit Declined: Tartakower Defence: Main line (8 cxd5 Nxd5)",
    Vw0: " Queen's Gambit Declined: Classical: Unusual White 7th moves",
    Vw1: " Queen's Gambit Declined: Classical: 7 Qc2",
    Vw2: " Queen's Gambit Declined: Classical: 7 Qc2 c5 8 cxd5",
    Vw3: " Queen's Gambit Declined: Classical: 7 Rc1",
    Vw4: " Queen's Gambit Declined: Classical: 7 Rc1 c6 8 Qc2",
    Vw5: " Queen's Gambit Declined: Classical: 7 Rc1 c6 8 Qc2 a6 9 cxd5",
    Vw6: " Queen's Gambit Declined: Classical: Main Line (7 Rc1 c6 8 Bd3)",
    Vw7: " Queen's Gambit Declined: Classical Main Line with 9...Nd5",
    Vw8: " Queen's Gambit Declined: Classical Main Line with 9...Nd5 and 12...e5",
    Vw9: " Queen's Gambit Declined: Classical Main Line with 9...Nd5 and 12...e5 13 dxe5",
    Vwa: " Gr\ufffdnfeld: Unusual White 3rd moves (met by ...d5)",
    Vwb: " Fianchetto Gr\ufffdnfeld: 3 g3 d5 sidelines and 5 cxd5 (without Nf3)",
    Vwc: " Fianchetto Gr\ufffdnfeld: 5 cxd5 Nxd5 6 e4 Nb6 (without Nf3)",
    Vwd: " Fianchetto Gr\ufffdnfeld: 5 Nf3 ",
    Vwe: " Fianchetto Gr\ufffdnfeld: Main Line (5 Nf3 0-0 6 cxd5 Nxd5 7 0-0)",
    Vwf: " Fianchetto Gr\ufffdnfeld: Main Line with 7...c5",
    Vwg: " Fianchetto Gr\ufffdnfeld: Main Line with 7...Nb6",
    Vwh: " Fianchetto Gr\ufffdnfeld: 6 0-0: Replies other than 6...c6",
    Vwi: " Fianchetto Gr\ufffdnfeld: 6 0-0 c6",
    Vwj: " Fianchetto Gr\ufffdnfeld: Symmetrical Variation (6 0-0 c6 7 cxd5 cxd5)",
    Vwk: " Gr\ufffdnfeld: Unusual White 4th moves and 4 Bg5",
    Vwl: " Gr\ufffdnfeld: 4 Qb3",
    Vwm: " Gr\ufffdnfeld: 4 Bf4",
    Vwn: " Gr\ufffdnfeld: 4 Bf4 Bg7 5 e3 0-0",
    Vwo: " Gr\ufffdnfeld: 4 Bf4 Bg7 5 e3 0-0 6 cxd5",
    Vwp: " Exchange Gr\ufffdnfeld: Unusual White 7th moves and lines with 7 Nf3",
    Vwq: " Exchange Gr\ufffdnfeld: Classical Line (7 Bc4)",
    Vwr: " Exchange Gr\ufffdnfeld: Classical Line: Variations without ...cxd4",
    Vws: " Exchange Gr\ufffdnfeld: Classical Line: 10 Be3 cxd4 11 cxd4",
    Vwt: " Exchange Gr\ufffdnfeld: Classical Line: 10 Be3 cxd4 11 cxd4 Bg4 12 f3 Na5 13 Bd3",
    Vwu: " Gr\ufffdnfeld: 4 Nf3 Bg7 sidelines",
    Vwv: " Gr\ufffdnfeld: 4 Nf3 Bg7 5 Bg5",
    Vww: " Gr\ufffdnfeld: 4 Nf3 Bg7 5 Bf4",
    Vwx: " Gr\ufffdnfeld: 4 Nf3 Bg7 5 Bf4 0-0 6 e3",
    Vwy: " Gr\ufffdnfeld: 4 Nf3 Bg7 5 e3",
    Vwz: " Gr\ufffdnfeld: 4 Nf3 Bg7 5 e3 0-0 6 Qb3",
    Vx0: " Gr\ufffdnfeld: Russian System (5 Qb3): sidelines",
    Vx1: " Gr\ufffdnfeld: Russian System: 7 e4, replies other than 7...Bg4",
    Vx2: " Gr\ufffdnfeld: Russian System: 7 e4 Bg4 ",
    Vx3: " Gr\ufffdnfeld: Russian System: 7 e4 Bg4 8 Be3 Nfd7 9 Qb3",
    Vx4: " Catalan Bogo-Indian (3 g3 Bb4+)",
    Vx5: " Catalan: Early deviations",
    Vx6: " Open Catalan: 5 Qa4+",
    Vx7: " Open Catalan: 5 Qa4+ Nbd7 6 Qxc4",
    Vx8: " Open Catalan: 5 Nf3",
    Vx9: " Open Catalan: 5 Nf3 Be7",
    Vxa: " Closed Catalan: Early deviations",
    Vxb: " Closed Catalan: Main Line (5 Nf3 0-0 6 0-0 Nbd7)",
    Vxc: " Closed Catalan: Main Line: 7 Qc2",
    Vxd: " Closed Catalan: Main Line: 7 Qc2 c6 8 Nbd2",
    Vxe: " Blumenfeld Gambit",
    Vxf: " Bogo-Indian",
    Vxg: " Queen's Indian: Unusual White 4th moves, 4 a3, 4 Nc3 Bb7 5 a3 and 4 Nc3 Bb7 ",
    Vxh: " Queen's Indian/Nimzo-Indian hybrid: 4 Nc3 Bb7 5 Bg5 h6 6 Bh4 Bb4",
    Vxi: " Queen's Indian: Classical Variation (4 e3)",
    Vxj: " Queen's Indian: 4 g3 sidelines, 4 g3 Ba6 and 4 g3 Bb7 early deviations",
    Vxk: " Queen's Indian: 4 g3 Bb7 5 Bg2 Bb4+",
    Vxl: " Queen's Indian: 4 g3 Bb7 5 Bg2 Be7",
    Vxm: " Queen's Indian: Old Main Line (4 g3 Bb7 5 Bg2 Be7 6 0-0 0-0 7 Nc3)",
    Vxn: " Queen's Indian: Old Main Line with 7...Ne4 8 Qc2 Nxc3 8 Qxc3",
    Vxo: " Nimzo-Indian: 4 g3 and 4 f3",
    Vxp: " Nimzo-Indian: 4 Nf3",
    Vxq: " Nimzo-Indian: 4 Qb3",
    Vxr: " Nimzo-Indian: 4 Qb3 c5 5 dxc5 Nc6",
    Vxs: " Nimzo-Indian: S\ufffdmisch: Unusual Black 5th moves and 5...c5 sidelines",
    Vxt: " Nimzo-Indian: S\ufffdmisch: 5...c5 6 f3 d5 7 cxd5",
    Vxu: " Nimzo-Indian: S\ufffdmisch: 5...c5 6 e3",
    Vxv: " Nimzo-Indian: S\ufffdmisch: 5...0-0 6 f3",
    Vxw: " Nimzo-Indian: S\ufffdmisch: 5...0-0 6 e3",
    Vxx: " Nimzo-Indian: S\ufffdmisch: 5...0-0 6 e3 c5 7 Bd3 Nc6",
    Vxy: " Nimzo-Indian: Leningrad Variation",
    Vxz: " Nimzo-Indian: Leningrad Variation: 4...h6 5 Bh4 c5 6 d5 d6",
    Vy0: " Nimzo-Indian: Classical (4 Qc2): 4...0-0",
    Vy1: " Nimzo-Indian: Classical: 4...Nc6",
    Vy2: " Nimzo-Indian: Classical: 4...d5",
    Vy3: " Nimzo-Indian: Classical: 4...d5 5 cxd5 exd5",
    Vy4: " Nimzo-Indian: Classical: 4...d5 5 a3",
    Vy5: " Nimzo-Indian: Classical: 4...d5 5 a3 Bxc3+ 6 Qxc3 Ne4",
    Vy6: " Nimzo-Indian: Classical: 4...c5",
    Vy7: " Nimzo-Indian: Classical: 4...c5 5 dxc5 0-0",
    Vy8: " Nimzo-Indian: Rubinstein (4 e3): Unusual Black 4th moves",
    Vy9: " Nimzo-Indian: Rubinstein: 4...c5 5 Bd3, including H\ufffdbner Variation",
    Vya: " Nimzo-Indian: Rubinstein: 4...c5 5 Ne2",
    Vyb: " Nimzo-Indian: Rubinstein: 4...b6",
    Vyc: " Nimzo-Indian: Rubinstein: 4...b6 5 Ne2",
    Vyd: " Nimzo-Indian: Rubinstein: 4...b6 5 Ne2 Ba6",
    Vye: " Nimzo-Indian: Rubinstein: 4 e3 0-0 5 Ne2 without early Bd3",
    Vyf: " Nimzo-Indian: Rubinstein: 5 Bd3 without ...d5",
    Vyg: " Nimzo-Indian: Rubinstein: 5 Bd3 d5 including 6 Ne2, but excluding 6 a3",
    Vyh: " Nimzo-Indian: Rubinstein: 5 Bd3 d5 6 a3 Bxc3+ 7 bxc3",
    Vyi: " Nimzo-Indian: Rubinstein: 4...0-0 5 Nf3",
    Vyj: " Nimzo-Indian: Rubinstein: 4...0-0 5 Nf3 d5",
    Vyk: " Nimzo-Indian: Rubinstein: 4...0-0 5 Nf3 d5 6 Bd3 b6",
    Vyl: " Nimzo-Indian: Rubinstein: Main Line (4...0-0 5 Nf3 d5 6 Bd3 c5 7 0-0)",
    Vym: " Nimzo-Indian: Rubinstein: Main Line: 7...dxc4 8 Bxc4",
    Vyn: " Nimzo-Indian: Rubinstein: Main Line: 7...dxc4 8 Bxc4 Nbd7",
    Vyo: " Nimzo-Indian: Rubinstein: Main Line: 7...Nc6",
    Vyp: " Nimzo-Indian: Rubinstein: Main Line: 7...Nc6 8 a3 dxc4 9 Bxc4 cxd4",
    Vyq: " Nimzo-Indian: Rubinstein: Main Line: 7...Nc6 8 a3 Bxc3",
    Vyr: " Nimzo-Indian: Rubinstein: Main Line: 7...Nc6 8 a3 Bxc3 9 bxc3 dxc4",
    Vys: " King's Indian: Unusual lines and Fianchetto Variation without Nc3",
    Vyt: " King's Indian: Early deviations for White, including Smyslov System",
    Vyu: " King's Indian: Fianchetto: 6...c6 and Panno Variation (6...Nc6) without ...a6",
    Vyv: " King's Indian: Fianchetto: Panno Variation with 7...a6",
    Vyw: " King's Indian: Fianchetto: 6...c5 7 d5",
    Vyx: " King's Indian: Fianchetto: 6...c5 7 0-0 without d5 by White",
    Vyy: " King's Indian: Fianchetto: 6...c5 7 0-0 Nc6 8 d5",
    Vyz: " King's Indian: Fianchetto: 6...Nbd7",
    Vz0: " King's Indian: Fianchetto: 6...Nbd7 7 0-0 e5 8 e4",
    Vz1: " King's Indian: Fianchetto: 6...Nbd7 7 0-0 e5 8 e4 c6 9 h3",
    Vz2: " King's Indian: Miscellaneous lines with 4 e4, including 5 Nge2 and 5 Bd3 0-0 6 Nge2",
    Vz3: " King's Indian: 4 e4 d6 5 h3",
    Vz4: " King's Indian: 4 e4 d6 5 g3",
    Vz5: " King's Indian: Averbakh Variation without 6...c5",
    Vz6: " King's Indian: Averbakh Variation: 6...c5",
    Vz7: " King's Indian: Averbakh Variation: 6...c5 7 d5 e6",
    Vz8: " King's Indian: Four Pawns Attack: Lines specific to 6 Nf3 move-order",
    Vz9: " King's Indian: Four Pawns Attack: 6 Be2 incl 6...c5 7 d5 e6 8 Nf3, but not Benoni",
    Vza: " King's Indian: Four Pawns Attack: 6 Be2 c5 7 Nf3",
    Vzb: " King's Indian: Four Pawns Attack: 6 Be2 c5 7 Nf3 cxd4 8 Nxd4 Nc6 9 Be3",
    Vzc: " King's Indian: S\ufffdmisch: Lines without early ...0-0",
    Vzd: " King's Indian: S\ufffdmisch: 6th move deviations (including 6 Be3 c6)",
    Vze: " King's Indian: S\ufffdmisch: 6...b6",
    Vzf: " King's Indian: S\ufffdmisch Panno (6...Nc6): Lines without either Nge2 or Qd2",
    Vzg: " King's Indian: S\ufffdmisch Panno: 7 Nge2 a6 8 Qd2 Rb8",
    Vzh: " King's Indian: S\ufffdmisch: 6...e5",
    Vzi: " King's Indian: S\ufffdmisch: 6...e5 7 Nge2 c6",
    Vzj: " King's Indian: S\ufffdmisch: 6...e5 7 d5",
    Vzk: " King's Indian: S\ufffdmisch: 6...e5 7 d5 c6",
    Vzl: " King's Indian: S\ufffdmisch: 6...e5 7 d5 c6 8 Nge2 cxd5",
    Vzm: " King's Indian: Classical: Early deviations and 6 h3",
    Vzn: " King's Indian: Classical: 6 Be2, unusual replies including 6...c5 and 6...Bg4",
    Vzo: " King's Indian: Classical: 6 Be2 e5: 7 dxe5, 7 Be3 and Petrosian System without 7...Nbd7",
    Vzp: " King's Indian: Classical: Petrosian System with 7...Nbd7",
    Vzq: " King's Indian: Classical: 6 Be2 e5 7 0-0: Various Black 7th moves",
    Vzr: " King's Indian: Classical: 7...Nbd7 8 Re1",
    Vzs: " King's Indian: Classical: 7...Nbd7 8 Re1 c6 9 Bf1 a5",
    Vzt: " King's Indian: Classical Main Line (6...e5 7 0-0 Nc6): 8 Be3 and 8 d5 Ne7, not 9 Ne1",
    Vzu: " King's Indian: Classical Main Line: 9 Ne1",
    Vzv: " King's Indian: Classical Main Line: 9 Ne1 Nd7 10 f3 f5"
};
"use strict";
CB.namespace("CB.Vd7.Vd8.GER");
CB.Vd7.Vd8.GER = {
    LOGIN: "Anmelden",
    LOGOUT: "Abmelden",
    ACCOUNT: "Mein Konto",
    BOARDS: "Bretter",
    RECONNECT: "Verbinden",
    RESIGN: "Aufgeben",
    Vd9: "Brett schlie\u00dfen",
    OFFER_DRAW: "Remis bieten",
    Vda: "Remis akzeptieren",
    ACCEPTED_DRAW: "{0} hat das Remis angenommen.",
    Vdb: "{0} bietet Remis.",
    Vdc: "{0} nimmt Remis an.",
    RESIGNS: "{0} gibt auf.",
    Vdd: "Test Verbindung zum Server",
    CONNECTING: "Verbindung wird aufgebaut, einen Moment...",
    Vde: "Verbindung wiederhergestellt",
    Vdf: "Name",
    Vdg: "Land",
    Vdh: "Rang",
    WHITE: "Weiss",
    BLACK: "Schwarz",
    Vdi: "Elo Weiss",
    Vdj: "Elo Schwarz",
    RESULT: "Ergebnis",
    Vdk: "Bedenkzeit",
    Vdl: "Turnier",
    GAMES: "Partien",
    V3w: "Chat",
    Vdm: "Ihr Chat Partner ist gegangen.",
    Vdn: "Verbindung",
    Vdo: "Karte",
    KING: "K\u00f6nig",
    QUEEN: "Dame",
    ROOK: "Turm",
    BISHOP: "L\u00e4ufer",
    KNIGHT: "Springer",
    PAWN: "Bauer",
    Vdp: "Chat hier eingeben",
    Vdq: "Hier tippen f\u00fcr Chat an",
    GUEST: "Gast",
    Vdr: "Best\u00e4tigen",
    CANCEL: "Abbruch",
    Vds: "Uhr",
    TIME: "Zeit",
    Vdt: "Gain per Move",
    Vdu: "Close",
    Vdv: "Add",
    Vdw: "Remove",
    NOTATION: "Notation",
    BOARD_FRITZ: "Fritz",
    BOARD_CRYSTALS: "Crystals",
    BOARD_USCF: "USCF",
    BOARD_OLDSTYLE: "OldStyle",
    BOARD_HABSBURG: "Habsburg",
    Vdx: "Fritz & Fertig",
    Vdy: "Blitzpartie",
    NEW_GAME: "Neue Partie",
    TAKE_BACK: "Zug zur\u00fcck",
    MAKE_MOVE: "Zug vor",
    FLIP_BOARD: "Brett drehen",
    Vdz: "Kopieren",
    Ve0: "Brett suchen",
    Ve1: "Jahr",
    BOOK: "Buch",
    LIVE_BOOK: "Live Buch",
    MOVE: "Zug",
    Ve2: "Nr Games",
    Ve3: "Score",
    Ve4: "Zuletzt gespielt",
    ELO_AVG: "Elo Avg.",
    VISITS: "Besuche",
    Ve5: "L\u00e4dt Statistiken",
    Ve6: "Let's Check",
    Ve7: "Eval",
    Ve8: "Variation",
    DEPTH: "Tiefe",
    Ve9: "Engine",
    Vea: "Suchtext hier eingeben...",
    Veb: "Lade Partien",
    Vec: "Spieler Details",
    Ved: "Spieler Information",
    Vee: "Vorname",
    Vef: "Nachname",
    Veg: "Geburtsjahr",
    Veh: "Trend",
    Vei: "Rating",
    Vej: "Feedback senden",
    Vek: "Ihr Hinweis",
    Vel: "Ihre E-Mail-Adresse",
    Vem: "Absenden",
    BROWSER_DOESNT_SUPPORT_3D: "Ihr Browser unterst\u00fctzt noch kein 3D",
    BOARD3D_FRITZ: "Fritz",
    BOARD3D_MODERN: "Modern",
    BOARD3D_ROOM: "Room",
    BOARD3D_BALLOON: "Balloon",
    BOARD3D_METAL: "Metal",
    Ven: "Silver",
    BOARD3D_FUTURE: "Future",
    Veo: "Marble",
    Vep: "Willkommen",
    Veq: "Material",
    ANALYSIS: "Analyse",
    Ver: "Engine",
    ENG_SEARCH_INFO_FMT: "Tiefe {0}/{1}, {2}Tsd Pos/s, Zeit = {3}s",
    PASTE: "Einf\u00fcgen",
    PW_INVALID: 'Account <em>"{0}"</em> oder Passwort nicht erkannt.',
    PLEASE_LOGIN: "Anmelden mit ChessBase (Playchess) Konto:",
    Ves: "Name",
    Vet: "Passwort",
    Veu: "Konto neu anlegen",
    Vev: "Gast",
    PLEASE_LOGIN_SHORT: "Bitte anmelden",
    LOADING_ENGINE: "Lade Engine...",
    Vew: "Lade Live Partien ...",
    Vex: "Inviting other players to a game of {0} ({1})",
    OTHER_TOOLS: "Weitere Apps",
    DATABASES: "Datenbanken",
    OPEN_DATABASE: "Datenbank \u00f6ffnen",
    CREATE_DATABASE: "Neue Datenbank",
    DELETE_DATABASE: "Datenbank l\u00f6schen",
    Vey: "L\u00f6schen",
    Vez: "Aufr\u00e4umen",
    Vf0: "Meine Datenbanken",
    Vf1: "Mit mir geteilt",
    Vf2: "Datenbankauswahl f\u00fcr '{0}'",
    OPEN_PGN: "PGN \u00d6ffnen",
    SAVE: "Speichern",
    SAVE_AND_REPLACE_GAMES: "Partien speichern und ersetzen",
    SAVE_AS_NEW: "Neue Version speichern",
    EDIT_GAME: "Kenndaten setzen",
    DATABASE_FUNCTIONS: "Datenbanken \u00f6ffnen, anlegen und l\u00f6schen",
    Vf3: "Text vor Zug",
    TEXT_AFTER: "Text",
    START_LINE: "Variante",
    PROMOTE_LINE: "Aufwerten",
    DELETE_LINE: "L\u00f6schen",
    CUT_LINE: "Schneiden",
    Vf4: "PGN-Datei von Ihrem Computer \u00f6ffnen",
    TEXT_BEFORE_TIP: "Textkommentar vor diesem Zug",
    TEXT_AFTER_TIP: "Textkommentar nach diesem Zug",
    START_LINE_TIP: "Zug zur\u00fccknehmen und Variante starten",
    PROMOTE_LINE_TIP: "Ausgew\u00e4hlte Variante wird Hauptvariante",
    DELETE_LINE_TIP: "Ausgew\u00e4hlte Variante l\u00f6schen",
    CUT_LINE_TIP: "Nachfolgende Z\u00fcge wegschneiden",
    Vf5: "Angemeldet bleiben",
    Vf6: "Passwort vergessen",
    CHANGE_PASSWORD: "Passwort \u00e4ndern",
    Vf7: "Altes Passwort",
    Vf8: "Neues Passwort",
    Vf9: "Passwort best\u00e4tigen",
    MENU_PLAYCHESS_TOOL: "Spielen & Zuschauen",
    MENU_DATABASE_TOOL: "Live Datenbank",
    MENU_MYGAMES_TOOL: "Meine Partien",
    MENU_FRITZ_TOOL: "Schachprogramm Fritz",
    MENU_FRITZ_CHESSTER_TOOL: "Fritz & Fertig f\u00fcr Kinder",
    MENU_TACTICS_TOOL: "Taktiktraining",
    LANGUAGE: "Sprache",
    LOGIN_CREATE_LINK: "Hier klicken, um Account anzulegen",
    LOGIN_PLEASE_LOGIN: "Bitte anmelden",
    LOGIN_ACCOUNT_FREE: "Ein ChessBase Account ist kostenlos und gilt f\u00fcr alle ChessBase Web Tools und f\u00fcr www.schach.de.",
    LOGIN_WELCOME: "Willkommen, {0}!",
    Vfa: "Freunde verwalten",
    INVITE_FRIEND: "Einen Freund einladen",
    Vfb: "Ping",
    NOTATION_KING: "K",
    NOTATION_QUEEN: "D",
    NOTATION_KNIGHT: "S",
    NOTATION_BISHOP: "L",
    NOTATION_ROOK: "T",
    Vfc: "",
    GENERAL_INVITE: 'Danke f\u00fcr den Einsatz von <span style="font-weight:bold">{0}</span>.',
    Vfd: 'Danke f\u00fcr den Einsatz von <span style="font-weight:bold">ChessBase MyGames</span>, ihrer pers\u00f6nlichen Schachdatenbank im Web.',
    Vfe: "Mit Ihrem ChessBase Account k\u00f6nnen Sie Clouddatenbanken f\u00fcr Schachpartien anlegen und verwalten. Diese Clouddatenbanken stehen auch unter ChessBase 13 zur Verf\u00fcgung.",
    Vff: "ECO",
    BACK: "Zur\u00fcck",
    Vfg: "N\u00e4chster Zug",
    Vfh: "Vorheriger Zug",
    Vfi: "N\u00e4chste Partie",
    Vfj: "Vorherige Partie",
    MENU_VIDEO_TOOL: "Videotraining",
    MENU_OPENINGS_TOOL: "Er\u00f6ffnungen verwalten",
    Vfk: "Z\u00fcge anfordern",
    FRESH_POSITION: "Frische Stellung",
    Vfl: "Teilen",
    Vfm: "Hilfe",
    Vfn: "2D/3D Brett umschalten",
    BOARD3D_BLACKWHITE: "Schwarzweiss",
    MATE: "Matt",
    STALEMATE: "Patt",
    SETUP_POSITION: "Stellung aufbauen",
    WHITE_MATES: "Weiss setzt Matt",
    WHITE_CLEARLY_WINNING: "Weiss steht v\u00f6llig auf Gewinn",
    WHITE_WINNING: "Weiss steht auf Gewinn",
    WHITE_DECISIVE: "Weiss hat gro\u00dfen Vorteil",
    WHITE_CLEARLY_BETTER: "Weiss steht deutlich besser",
    WHITE_BETTER: "Weiss steht besser",
    WHITE_SLIGHTLY: "Weiss steht etwas besser",
    WHITE_EDGE: "Weiss steht minimal besser",
    BLACK_MATES: "Schwarz setzt Matt",
    BLACK_CLEARLY_WINNING: "Schwarz steht v\u00f6llig auf Gewinn",
    BLACK_WINNING: "Schwarz steht auf Gewinn",
    BLACK_DECISIVE: "Schwarz hat gro\u00dfen Vorteil",
    BLACK_CLEARLY_BETTER: "Schwarz steht deutlich besser",
    BLACK_BETTER: "Schwarz steht besser",
    BLACK_SLIGHTLY: "Schwarz steht etwas besser",
    BLACK_EDGE: "Schwarz steht minimal besser",
    EQUAL_POS: "Die Stellung ist ausgeglichen",
    PREMIUM_ONLY: "Nur bei Premium",
    Vfo: "Avatar",
    CALC_TRAINING: "Rechentraining",
    Vfp: "Berechnen Sie beliebige (gepr\u00fcfte) Varianten bevor Sie die Partie hier fortsetzen.",
    CALC_INFO: "F\u00fchren Sie Z\u00fcge blind aus. Klicken Sie in die Notation, um Varianten hinzuzuf\u00fcgen. Rechtsklick zeigt wahre Stellung. Klick auf 'Rechentraining' setzt die Partie fort.",
    CALCULATING: "Rechne...",
    Vfq: "Holz",
    TRAINING_SOLUTION: "L\u00f6sung zeigen",
    TRAINING_HELP: "Hilfestellung",
    TRAINING_QUESTION: "Finde den richtigen Zug",
    Vfr: "Entkommentieren",
    Vfs: "Mehr Varianten",
    Vft: "Weniger Varianten",
    Vfu: "Drohung berechnen",
    Vfv: "Start",
    Vfw: "Pause",
    Vfx: "Im Augenblick l\u00e4uft keine Live\u00fcbertragung",
    Vfy: "Verbunden: {0}",
    Vfz: "Initialisiere",
    INSERT_DIAGRAM: "Diagramm einf\u00fcgen",
    Vg0: "Brett",
    Vg2: "Brett wird geladen, eine Sekunde...",
    Vg1: "Like",
    Vg3: "Keine Partien mit diesem Suchtext und diesem Brett.",
    YOUR_KING_ACC: "Deinen K\u00f6nig",
    YOUR_QUEEN_ACC: "Deine Dame",
    YOUR_ROOK_ACC: "Deinen Turm",
    YOUR_BISHOP_ACC: "Deinen L\u00e4ufer",
    YOUR_KNIGHT_ACC: "Deinen Springer",
    YOUR_PAWN_ACC: "Deinen Bauern",
    MOVE_IMP: "Ziehe",
    WHITES_MOVE: "Wei\u00df am zug",
    BLACKS_MOVE: "Schwarz am zug",
    CLICK_TO_FLIP_BOARD: "Klicke hier, um das brett zu drehen",
    Vg4: "Maximieren",
    Vg5: "Figuren",
    Vg6: "Ton An/Aus",
    Vg7: "Gehe zur Anfangsstellung",
    Vg8: "Gehe zur Endstellung",
    Vg9: "Vorherigen Zug",
    Vga: "N\u00e4chsten Zug",
    Vgb: "Search Material",
    Vgc: "Join with Video",
    Vgd: "Join with Audio",
    Vge: "Using video and audio requires a secure connection",
    Vgf: "You reached your daily limit",
    Vgg: "Please attach video or audio recording device",
    Vgh: "Report",
    SERVER_LOGGED_YOU_OFF: "Server hat Verbindung getrennt:",
    DOUBLE_LOGIN: "Woanders neu angemeldet",
    Vgi: "Bitte Internetverbindung pr\u00fcfen.",
    START_ANALYSIS: "Starte Analyse",
    VARIATIONS: "Varianten",
    ENGINE_STOPPED: "Engine angehalten",
    SAVE_AS_PGN: "Speichere als PGN",
    SETUP_AND_SAVE: "Setup/Speichern",
    A_QUEEN_ACC: "eine Dame",
    A_KNIGHT_ACC: "einen Springer",
    A_BISHOP_ACC: "einen L\u00e4ufer",
    A_ROOK_ACC: "einen Turm",
    A_PAWN_ACC: "einen Bauern",
    Vgj: "Angemeldet",
    TECHNICAL: "Technisch",
    CALM: "Ruhig",
    NORMAL: "Normal",
    Vgk: "Spannungsvoll",
    SHARP: "Scharf",
    VERY_SHARP: "Sehr scharf",
    BOARD_ON_FIRE: "Brett brennt"
};
CB.Vd7.Vd8.DEU = CB.Vd7.Vd8.GER;
"use strict";
CB.namespace("CB.Vd7.Vgl.GER");
CB.Vd7.Vgl.GER = {
    Vgm: "Drill Weiss",
    Vgn: "Drillen",
    Vgo: "Drill Schwarz",
    Vgp: "Drill Ende",
    Vgq: "Wiederholen",
    Vgr: "Bitte geben Sie einen Zug ein",
    Vgs: "Kein bekannter Zug",
    Vgt: "Ende der Theorie",
    MY_MOVES: "Meine Z\u00fcge",
    MARK_MOVE: "Zug markieren",
    LOAD_WHITE: "Weiss laden",
    LOAD_BLACK: "Schwarz laden",
    MARK_IMPORTANT: "Wichtigen Zug markieren",
    UNMARK_MOVE: "Markierung l\u00f6schen",
    UPLOAD_GAME: "Partie in 'Meine Z\u00fcge' einf\u00fcgen",
    MY_MOVE_MENU_TTIP: "Verwalten Sie Ihre eigenen Er\u00f6ffnungen",
    REMOVE_TREE_FROM_HERE: "Variantenbaum ab hier entfernen",
    MY_MOVES_FOR: "Meine Z\u00fcge f\u00fcr ",
    MARKED: "markiert",
    MARKED_IMPORANT: "markiert als wichtig",
    ENTER_OR_CLICK_MOVE_AND_MARK: "Geben Sie einen Zug ein, dann markieren Sie ihn f\u00fcr 'Meine Z\u00fcge'",
    CAUTION_YOU_ARE_EDITING_MOVES_FOR: "Vorsicht, Sie bearbeiten Z\u00fcge f\u00fcr ",
    GAME_UPLOADED: "Aktuelle Partie hochgeladen.",
    PLEASE_LOGIN_OPENINGS: "Bitte melden Sie sich an, um Ihre Er\u00f6ffnungen zu verwalten.",
    DELETE_VARIATION_TREE: "Variantenbaum l\u00f6schen",
    REMOVE_ALL_MY_MOVES: "Alle markierten Z\u00fcge l\u00f6schen?",
    REMOVE_MOVES_FROM_HERE: "Alle meine Z\u00fcge ab hier l\u00f6schen?",
    Vgu: "Click a move to execute. Right-click moves to mark them for your repertoire.",
    MOVES_UNMARKED: "Z\u00fcge entfernt.",
    MOVES_UNLEARNED: "Z\u00fcge entlernt.",
    UNMARK_TREE_WHITE: "Baum f\u00fcr Weiss entfernen",
    UNMARK_TREE_BLACK: "Baum f\u00fcr Schwarz entfernen",
    RESET_LEARNING_WHITE: "Lernwerte f\u00fcr Weiss r\u00fccksetzen",
    RESET_LEARNING_BLACK: "Lernwerte f\u00fcr Schwarz r\u00fccksetzen",
    Vgv: "Rangliste",
    Vgw: "Wie man Er\u00f6ffnungen verwaltet und trainiert",
    Vgx: "Video: Tutorial",
    Vgy: "Video: Fortgeschrittene Funktionen",
    Vgz: "Klicken Sie rechts auf die Reiter 'Theorie', um fertige Er\u00f6ffnungsrepertoires zu laden. Oder arbeiten Sie mit ihrem pers\u00f6nlichen Repertoire.",
    Vh0: "Markieren Sie einen Zug, um die gesamte Variante bis dorthin in Ihr pers\u00f6nliches Repertoire zu \u00fcbernehmen. Alle so markierten Z\u00fcge erscheinen im LiveBuch farbig.",
    Vh1: "Laden Sie Ihr pers\u00f6nliches Weiss- oder Schwarzrepertoire als Partienotation. Weiss und Schwarz werden separat gespeichert.",
    Vh2: "'Drillen' Sie Ihr Repertoire von der aktuellen Stellung aus. Man kann jede Position drillen, auch wenn Sie nicht im Repertoire ist.",
    Vh3: "Entspanntes Erlernen von Er\u00f6ffungsvarianten ohne weitere Klickaktivit\u00e4t. Jede Variante wird dreimal wiederholt.",
    Vh4: "Lernen Sie eine Er\u00f6ffnung durch Erraten von Varianten, die zwei vorgegebene Stellungen verbinden.",
    Vh5: "If you run out of moves, stop the drill and check the Live Book.",
    Vh6: "Repeat the drill from the position where you last started it.",
    Vh7: "Arbeit mit dem pers\u00f6nlichen Weiss/Schwarz Repertoire",
    Vh8: "Wenn Sie Ihr pers\u00f6nliches Weiss oder Schwarz Repertoire in die Partienotation laden, k\u00f6nnen Sie dort Z\u00fcge direkt hinzuf\u00fcgen, l\u00f6schen und kommentieren.",
    Vh9: "Markieren Sie Z\u00fcge als 'wichtig', um sie zur Hauptvariante zu bef\u00f6rdern. L\u00f6schen von Varianten entfernt sie f\u00fcr immer.",
    Vha: "<em>Note</em>: If you delete bigger lines, a backup will be stored in your cloud databases (see mygames.chessbase.com).",
    Vhb: "Die Faltungsschalter in der Notation erleichtern den Umgang mit gro\u00dfen Variantenb\u00e4umen. Klicken Sie auf das kleine Mikroskop unter der Notation, um alles au\u00dfer der aktuelle Variante wegzufalten.",
    Vhc: "Variante komplett aus Vorbereitung gespielt, super!",
    Vhd: "Sie sind von Ihrer Vorbereitung abgewichen.",
    Vhe: "Theorie Weiss",
    Vhf: "Theorie Schwarz",
    Vhg: "Anderen Zug probieren",
    Vhh: "Tipp anfordern",
    Vhi: "Autoplay",
    Vhj: "Schneller",
    NORMAL: "Normal",
    Vhk: "Langsamer",
    Vhl: "Auf Variante bleiben",
    Vhm: "Zufallsvarianten",
    Vhn: "Neue Variante",
    Vho: "Hier f\u00fcr fertige Repertoires klicken!",
    Vhp: "Variante raten",
    Vhq: "Neue Stellungen",
    Vhr: "Geben Sie auf dem linken Brett Z\u00fcge f\u00fcr Weiss und Schwarz ein, bis die rechte Stellung erreicht ist.",
    Vhs: "Achtung: Es kommen nur Stellungen ihrer aktuell ausgew\u00e4hlten Untervariante vor!",
    Vht: "Ein Training, wo sie selbst Varianten zwischen zwei Stellungen herleiten.",
    Vhu: "Entspannt zur\u00fccklehnen und Varianten vorf\u00fchren lassen.",
    Vhv: "Testen Sie Ihr Repertoire durch Spielen.",
    Vhw: "Markieren Sie einen Zug, den Sie ins pers\u00f6nliche Repertoire \u00fcbernehmen wollen.",
    Vhx: "Laden Sie Ihr pers\u00f6nliches Repertoire.",
    Vhy: "Super, das ist die richtige Variante!",
    Vhz: "Bitte nochmal probieren",
    Vi0: "Richtig",
    Vi1: "Bitte erst ein Repertoire laden",
    Vi2: "Wieder zur Partie",
    Vi3: "Pause",
    Vi4: "Selbst spielen",
    Vi5: "Variante abgeschlossen, gut gemacht. Jetzt zur Wiederholung..."
};
"use strict";
CB.namespace("CB.Vd7.Vi6.GER");
CB.Vd7.Vi6.GER = {
    MOVE_NOW: "Ziehe jetzt",
    GIVE_HINT: "Tipp",
    Vi7: "Freundschaftspartie",
    CALCULATING_HINT: "Berechnung eines Tipps",
    Vi8: "Bitte warten",
    Vi9: "Spieler",
    Via: "Engine",
    RESIGN: "Aufgeben",
    Vib: "Diese Partie aufgeben",
    ANALYSIS: "Analyse",
    Vic: "Die Schachengine rechnet unendlich lange, ohne zu ziehen.",
    LEVEL: "Stufe",
    BEGINNER: "Einsteiger",
    AMATEUR: "Amateur",
    CLUBPLAYER: "Vereinsspieler",
    MASTER: "Meister",
    GRANDMASTER: "Gro\u00dfmeister",
    Vfl: "Einbauen",
    Vid: "Fritz einbauen und konfigurieren",
    ENGINE_HELP_1: 'Machen Sie einen Zug oder klicken Sie auf "Analyse".',
    ENGINE_HELP_2: "Dr\u00fccken und halten Sie eine Figur, um Tipps zu bekommen.",
    ENGINE_HELP_3: 'Mit "Stufe" stellen Sie die Spielst\u00e4rke ein.',
    ENGINE_HELP_4: 'Mit "Tipp" gibt\'s intelligente Hilfen.',
    ENGINE_HELP_5: 'Premiumanwender: Ihre Partien werden bei <a href="https://mygames.chessbase.com">mygames.chessbase.com.</a> gespeichert.',
    ENGINE_HELP_MOBILE_1: 'Machen Sie einen Zug oder nutzen Sie "Analyse" im Stufenmen\u00fc.',
    REJECTS_DRAW: "{0} m\u00f6chte weiterspielen.",
    Vie: "Gegen Fritz spielen",
    HINTS: "Tipps",
    THIS_RATED_GAME: "Wertungspartie.",
    THIS_UNRATED_GAME: "Freie Partie.",
    ANALYSIS_STOPPED: "Analyse gestoppt.",
    BOOK_MOVE: "Book Move",
    LIVEBOOK_MOVE: "Livebook Move",
    THEORY: "Theorie",
    YOU_HAVE_STRONG_MOVE: "Es gibt einen brillianten Zug!",
    YOU_HAVE_PRECISE_MOVE: "Finde einen starken Zug.",
    YOU_HAVE_ONLY_MOVE: "Finde den einzigen Zug.",
    CAREFUL_ONLY_MOVE: "Vorsicht, es geht nur ein Zug.",
    CALCULATING_FOR: "Rechne f\u00fcr {0}...",
    CALCULATES_MOVE: "Fritz \u00fcberlegt {0}",
    STILL_IN_BOOK: "Das ist Er\u00f6ffnungstheorie",
    NOT_YOUR_MOVE: "Du bist nicht am Zug.",
    FRITZ_TO_MOVE: "Fritz ist am Zug.",
    Vif: "Warte auf den ersten Tipp...",
    CLICK_HINT_BUTTON: "Klick auf 'Tipp' liefert den n\u00e4chsten Tipp.",
    AUTOMATIC_HINTS: "Automatische Tipps",
    CLICK_ASSIST: "Klick & Check",
    PRECISE_MOVE: "Starker Zug",
    BRILLIANT_MOVE: "Brillianter Zug",
    NEXT_HINT: "N\u00e4chster Tipp",
    HINT_SUPPORT: "Nutzung Tipps:",
    HINTS_HERO: "Heroisch",
    HINTS_BRAVE: "Mutig",
    HINTS_CONFIDENT: "Selbstbewusst",
    HINTS_COMPETITIVE: "Selbstst\u00e4ndig",
    HINTS_ATTENTIVE: "Aufmerksam",
    HINTS_INTERESTED: "Flexibel",
    HINTS_GUARDED: "Sicher ist sicher",
    HINTS_CAUTIOUS: "Lernfreudig",
    HINTS_LEARNING: "Beifahrer",
    BONUS_HINTS: "Bonus Tipps",
    LIMIT: "Limit",
    HINTS_LIMIT: "Zu viele Tipps.",
    HINTS_LIMIT_LOGIN: "Gast: Bitte anmelden f\u00fcr {0} Tipps.",
    HINTS_LIMIT_PREMIUM: "Zu viele Tipps - ein Premium Account gibt {0} Tipps.",
    GRANDMA: "Das k\u00f6nnte meine Oma zuende spielen.",
    NOBODY_NEEDS_HINTS: "Hier braucht wirklich keiner Tipps.",
    NOTHING_TO_CHANCE: "\u00dcberl\u00e4sst nichts dem Zufall.",
    STAYING_CONCENTRATED: "Voll konzentriert.",
    LOST_FOR_ME: "Ok, das ist verloren.",
    YOU_HAVE_A_POINT: "Du hast ja recht.",
    TIGHTENING_GRIP: "H\u00e4lt den Druck.",
    KEEPING_ON_TRACK: "Bleibt sicher in der Spur.",
    ZONING_IN: "Die Geier kreisen schon?",
    IN_THE_FLOW: "Voll im Flow.",
    NO_MERCY_FOR_ME: "Keine Gnade f\u00fcr mich.",
    OUT_FOR_BLOOD: "Willst Du Blut sehen?",
    GETTING_WORRIED: "L\u00e4uft nicht f\u00fcr mich.",
    RIGHT_EXCLAM: "Richtig!",
    WELL_PLAYED: "Gut gespielt.",
    PRECISE_PLAY: "Der geht in der Tat.",
    RIGHT_MOVE: "Der richtige Zug.",
    CORRECT_WITHOUT_HINTS: "Ohne Tipps gut gespielt.",
    WHO_NEEDS_HINTS: "Genau, wer braucht schon Tipps.",
    ALL_RIGHT: "So l\u00e4ufts.",
    YES_THATS_IT: "Ja, genau.",
    YEP: "Yep.",
    EXACTLY: "In der Tat.",
    YOU_SAW_IT: "Du hast's gesehen.",
    THAT_WAS_GOOD_HINT: "Das war aber auch ein guter Tipp.",
    THAT_WAS_NECESSARY: "Der war n\u00f6tig.",
    CONCENTRATED_PLAY: "Genau, nicht nachlassen.",
    KEEP_GOING: "Mach weiter so.",
    MAKES_SENSE: "Macht Sinn.",
    GOOD_RESISTANCE: "Guter Widerstand.",
    DONT_GIVE_UP: "Gut, gib Dich nicht auf.",
    KEEP_YOUR_CHANCES: "Richtig, Du erh\u00e4ltst Dir Chancen.",
    KEEP_RESISTING: "Gut, leiste weiter Widerstand.",
    NOT_FALTERING: "Knickt nicht ein.",
    KEEP_DEFENDING: "Verteidige Dich weiter so.",
    DONT_LOSE_HOPE: "Nicht die Hoffnung fahren lassen.",
    CHANCE_MIGHT_COME: "Deine Chance k\u00f6nnte noch kommen.",
    OUCH: "Autsch.",
    OVERSIGHT: "Was \u00fcbersehen!?",
    FRITZ_SORRY: "Fritz sagt Sorry.",
    UH_OH: "Uh, oh...",
    DONT_WORRY: "Das Leben geht weiter.",
    NOT_SO_GOOD: "Nicht so gut.",
    HMM: "Hmm...",
    LOOKS_LIKE_MISTAKE: "Sieht ungenau aus.",
    THERE_WAS_BETTER_MOVE: "Da gabs Besseres."
};
"use strict";
CB.namespace("CB.Vd7.Vih.GER");
CB.Vd7.Vih.GER = {
    Vii: "H\u00e4rte:",
    Vij: "Gel\u00f6st:",
    Vik: "Ihre Wertung:",
    Vil: "Ihr Rang:",
    Vim: "NEUER RANG:",
    Vin: "Ranglisten",
    Vio: "N\u00e4chste Stellung",
    Vip: "N\u00e4chste Stellung aufrufen - Punktabzug, falls die aktuelle nicht gel\u00f6st wurde",
    Viq: "Hilfestellung",
    Vir: "Zeigt die n\u00e4chste von m\u00f6glicherweise mehreren Hilfestellungen",
    Vis: "L\u00f6sung",
    Vit: "Markiert L\u00f6sung auf dem Brett (Punktabzug)",
    Viu: "Stellung bem\u00e4ngeln",
    Viv: "Kritische R\u00fcckmeldung zu dieser Stellung schicken.",
    Viw: "Gef\u00e4llt mir",
    Vix: "Klicken, falls Ihnen diese Aufgabe gef\u00e4llt",
    CAPTURE_SOMETHING: "Schlage etwas.",
    GIVE_CHECK: "Gib ein Schach.",
    Viy: "Matt in Eins!",
    STALEMATE: "Patt",
    THREATEN_MATE: "Drohe Matt.",
    RECAPTURE_MATERIAL: "Schlage zur\u00fcck.",
    DOUBLE_ATTACK: "Doppelangriff",
    Viz: "Abzugsangriff",
    Vj0: "Fesselung",
    Vj1: "Ablenkung",
    Vj2: "Hinlenkung",
    Vj3: "Verstellung",
    Vj4: "Vernichtung Deckungsfigur",
    Vj5: "R\u00e4umung",
    Vj6: "Blockade",
    Vj7: "R\u00f6ntgenangriff",
    Vj8: "\u00dcberlastung",
    Vj9: "Durchbruch",
    PASSED_PAWN: "Freibauer",
    Vja: "Umwandlung",
    Vjb: "Zerst\u00f6rung Verteidiger",
    Vjc: "Verfolgung",
    Vjd: "Mattangriff",
    MATE_THREAT: "Mattdrohung",
    Vje: "Spiess",
    THREAT: "Drohung",
    PIN: "Fesselung",
    Vjf: "Gabel",
    SACRIFICE_SOMETHING: "Ein Opfer...",
    Vjg: "Schwache Grundreihe",
    ATTACK_THE_QUEEN: "Greife die Dame an.",
    ATTACK_A_ROOK: "Greife einen Turm an.",
    Vjh: "Drohe einen Bauerngewinn.",
    Vji: "Drohe Materialgewinn.",
    Vjk: "Eine angegriffene Figur zieht",
    Vjl: "Decke eine Figur",
    Vjj: "\u00dcberlastete Figur",
    Veq: "Material",
    Vjm: "Einleitender Zug...",
    Vjn: "zieht und h\u00e4lt Remis.",
    Vjo: "zieht und gewinnt.",
    Vjp: "Gel\u00f6st!",
    Vjq: "Matt!",
    Vjr: "Patt!",
    Vjs: "Klick auf 'N\u00e4chste Stellung' f\u00e4hrt fort...",
    Vjt: "Fortsetzung...",
    Vju: "Fortsetzung... bitte geben Sie den n\u00e4chsten Zug ein.",
    Vjv: "Keine Hilfstellungen verf\u00fcgbar.",
    Vjw: "Finde das Matt!",
    Vhz: "Nicht der st\u00e4rkste Zug.",
    Vjx: "Entschuldigung, der Server wird gerade zu Wartungszwecken gestoppt. Bitte probieren Sie es in f\u00fcnfzehn Minuten wieder. Danke!",
    Vjy: "Klick auf 'N\u00e4chste Stellung' startet.",
    Vjz: "R\u00fcckmeldung zur Stellung an ChessBase senden:",
    Vk0: "Bereits {0} Mal gesehen. Verf\u00fcgbare Hilfen = {1}",
    Vk1: "Frische Stellung. Verf\u00fcgbare Hilfen = {0}",
    Vk2: "Hilfen = {0}",
    Vk3: 'Danke f\u00fcr den Einsatz von <span style="font-weight:bold">ChessBase Training</span>. Schnell st\u00e4rker werden durch Taktiktraining!',
    Vk4: "Bitte loggen Sie sich mit Ihrem ChessBase Account ein, um mit 44000 Taktikstellungen zu trainieren. G\u00e4ste sind auf 300 leichte Stellungen beschr\u00e4nkt. Ideal zum Aufw\u00e4rmen.",
    Vk5: "Friends Ranking",
    Vk6: "Compare your score with your friends",
    Vk7: "Warte auf Stellung...",
    Vif: "Warte auf Hilfe...",
    Vk8: "Warte auf L\u00f6sung...",
    Vk9: "Babyleicht",
    Vka: "Trivial",
    Vkb: "Sehr leicht",
    Vkc: "Leicht",
    Vkd: "Nicht so leicht",
    Vke: "Etwas schwieriger",
    Vkf: "Mittel",
    Vkg: "Interessant",
    Vkh: "Fordernd",
    Vki: "Hart",
    Vkj: "Schwer",
    Vkk: "Sehr schwer",
    Vkl: "Meisterklasse",
    Vkm: "Albtraum",
    Vkn: "Analyse erst nach L\u00f6sung der Stellung m\u00f6glich.",
    Vko: "L\u00f6se Taktikstellungen und spiele st\u00e4rker Schach.",
    Vkp: "Taktik l\u00f6sen",
    Vkq: "Einen Taktik-Fight spielen",
    Vkr: "Wartend:",
    Vks: "Verbessern Sie Ihre Variantenberechnungen.",
    Vkt: "L\u00f6sen Sie Taktikstellungen, die zu Ihrer Spielst\u00e4rke passen.",
    Vku: "Mit konstruktiven Tipps. Kein Zeitdruck.",
    Vkv: "Analysieren Sie die L\u00f6sung mit der eingebauten Engine.",
    Vkw: "Treten Sie zu einem Wettkampf gegen einen anderen Spieler an.",
    Vkx: "Wer eine (leichte) Stellung als Erster l\u00f6st, erh\u00e4lt einen Punkt.",
    Vky: "Bei Eingabe einer falschen L\u00f6sung erh\u00e4lt der Gegner einen Punkt. Wer zuerst 12,5 Punkte hat, gewinnt.",
    Vkz: "Wenn binnen 60 Sekunden niemand zieht, erhalten beide Spieler einen halben Punkt.",
    Vl0: "Stellungen l\u00f6sen",
    Vl1: "Fight starten",
    Vl2: "Klicken Sie auf 'Fight starten', um andere Spieler einzuladen.",
    Vl3: "Zur\u00fcckziehen",
    Vl4: "Einladung unterwegs",
    Vl5: "Laden Sie anderen Spieler zu einem Taktik-Fight \u00fcber 24 Stellungen ein.",
    Vl6: "Ende des Fights.",
    Vl7: "Sie gewinnen",
    Vl8: "Neue Wertung:",
    Vl9: "TIMEOUT - N\u00e4chste Stellung...",
    Vla: "Fight gestartet",
    Vlb: "gewinnt",
    Vlc: " Gel\u00f6st von",
    Vld: " Falscher Zug von",
    Vle: "Wartet auf einen Gegner...",
    ABORTED: "Abbruch",
    DRAW: "Remis",
    Vlf: "hat aufgegeben",
    Vlg: "bietet Revanche an",
    Vlh: "Dr\u00fccken Sie 'Revanche', um das Angebot anzunehmen",
    Vli: "Spieler nicht online",
    Vlj: "Spieler herausfordern",
    Vlk: "Geben Sie einen Accountnamen ein, um zum Taktikfight herauszufordern",
    Vll: "Beenden Sie das L\u00f6sungen von Stellungen und kehren Sie zum Hauptschirm zur\u00fcck",
    Vlm: "Fight Brett schlie\u00dfen",
    Vln: "Schlie\u00dfen Sie das Brett f\u00fcr Taktikfights und kehren Sie zum Hauptschirm zur\u00fcck",
    Vlo: "Fight aufgeben",
    Vlp: "Den laufenden Fight aufgeben (kostet Elo)",
    Vlq: "Revanche",
    Vlr: "Eine Revanche anbieten bzw. annehmen",
    Vls: "Revancheangebot abgesendet",
    Vlt: "Wenn Sie einen Fight kiebitzen, k\u00f6nnen Sie selbst die L\u00f6sungen eingeben.",
    Vlu: "Fight kiebitzen",
    Vlv: "Bei einem Taktikfight zuschauen und selbst Z\u00fcge eingeben",
    Vlw: "Wenn alle Hilfen verbraucht sind, erscheint hier die Schlussstellung:",
    Vlx: "Jeder Klick hier liefert eine neue, deutlichere Hilfestellung",
    Vi0: "Richtig",
    Vly: "Falsch",
    MOVE_IMP: "Ziehe",
    TO_A_LIGHT_SQUARE: "auf ein wei\u00dfes Feld.",
    TO_A_DARK_SQUARE: "auf ein schwarzes Feld.",
    VERTICALLY: "vertikal",
    HORIZONTALLY: "horizontal",
    DIAGONALLY: "diagonal",
    ADVANCE_FORMAT: "Aktiviere {0}.",
    RETREAT_FORMAT: "Ziehe {0} zur\u00fcck.",
    CENTRALIZE: "Zentralisiere",
    MOVE_KING_SIDEWAYS: "Ziehe Deinen K\u00f6nig seitlich.",
    MOVE_YOUR_FILE_PAWN: "Ziehe Deinen {0}-Bauern.",
    MAKE_PAWN_DOUBLE_STEP: "Mache einen Doppelschritt mit einem Bauern.",
    MOVE_CENTER_PAWN: "Ziehe einen Zentrumsbauern.",
    MOVE_QSIDE_PAWN: "Ziehe einen Bauern am Damenfl\u00fcgel.",
    MOVE_KSIDE_PAWN: "Ziehe einen Bauern am K\u00f6nigsfl\u00fcgel.",
    MOVE_LIGHT_BISHOP: "Ziehe Deinen wei\u00dffeldrigen L\u00e4ufer.",
    MOVE_DARK_BISHOP: "Ziehe Deinen schwarzfeldrigen L\u00e4ufer.",
    RETREAT_BISHOP: "Ziehe Deinen L\u00e4ufer zur\u00fcck.",
    ADVANCE_BISHOP: "Ziehe Deinen L\u00e4ufer vor.",
    DEVELOP_KSIDE: "Entwickle Deinen K\u00f6nigsfl\u00fcgel.",
    PREPARE_CASTLING: "Bereite die Rochade vor.",
    DEVELOP_QSIDE: "Entwickle Deinen Damenfl\u00fcgel.",
    DEVELOP_QN: "Entwickle Deinen Damenspringer.",
    DEVELOP_KN: "Entwickle Deinen K\u00f6nigsspringer.",
    CENTRALIZE_KNIGHT: "Zentralisiere Deinen Springer.",
    ADVANCE_KNIGHT: "Springer vor!",
    RETREAT_KNIGHT: "Ziehe Deinen Springer zur\u00fcck.",
    MOVE_KNIGHT_SIDEWAYS: "Ziehe Deinen Springer seitlich.",
    ROOK_TO_OPEN_FILE: "Ziehe Deinen Turm auf eine offene Linie.",
    ADVANCE_ROOK: "Vorsto\u00df mit dem Turm.",
    RETREAT_ROOK: "R\u00fcckzug mit dem Turm.",
    MOVE_ROOK_VERTICALLY: "Ziehe einen Turm vertikal.",
    CENTRALIZE_ROOK: "Zentralisiere einen Turm.",
    MOVE_ROOK_HORIZONTALLY: "Ziehe einen Turm horizontal.",
    DOUBLE_ROOKS: "Verdopple die T\u00fcrme.",
    PREPARE_DOUBLE_ROOKS: "Bereite die Turmverdopplung vor.",
    CASTLE_IMP: "Rochiere.",
    PIN_IMP: "Fessele etwas.",
    ATTACK_A_MINOR_PIECE: "Greife eine Leichtfigur an.",
    RETREAT_A_PIECE: "Ziehe eine Figur zur\u00fcck.",
    OPP_THREATENS_MATE: "Vorsicht, es droht Matt!",
    OPP_THREATENS_QUEEN: "Deine Dame ist angegriffen.",
    OPP_THREATENS_ROOK: "Dein Turm ist angegriffen.",
    OPP_THREATENS_MINOR: "Eine Leichtfigur ist angegriffen.",
    OPP_THREATENS_PAWN: "Ein Bauer h\u00e4ngt.",
    MATE_IMP: "Setze Matt!",
    EXCHANGE_IMP: "Tausche ab.",
    CREATE_PASSED_PAWN: "Bilde einen Freibauern.",
    PROMOTE_IMP: "Wandle einen Bauern um.",
    OFFER_EXCHANGE_IMP: "Biete einen Abtausch an.",
    THREATEN_IMP: "Drohe etwas",
    WATCH_OUT: "Achtung - es gibt eine starke Drohung!",
    RED_ARROW_THREAT: "Roter Pfeil = Drohung.",
    GREEN_ARROW_MOVE: "Gr\u00fcner Pfeil = Zugvorschlag.",
    ATTACK_A_PAWN: "Greife einen Bauern an.",
    COVER_SOMETHING: "Decke etwas.",
    BLOCK_ATTACK: "Blockiere einen Angriff.",
    EVADE_ATTACK_IMP: "Weiche einem Angriff aus.",
    SAC_IMP: "Opfere",
    OPEN_ATTACK_FILE: "\u00d6ffne eine Angriffslinie.",
    EVADE_CHECK: "Ziehe den K\u00f6nig aus dem Schach.",
    BLOCK_CHECK: "Verstelle das Schach.",
    DOUBLE_ATTACK_IMP: "Spiele einen Doppelangriff.",
    BRILLIANT: "Brilliant",
    SPLENDID: "Sehr sch\u00f6n",
    BEAUTIFUL: "Tschakka!",
    POWERFUL: "Kr\u00e4ftig",
    COOL: "Cool",
    EXCELLENT: "Exzellent",
    THIS_IS_THE_WAY: "This is the way",
    SUPER: "Super",
    STRONG: "Stark",
    WELL_PLAYED: "Gut gespielt",
    FINE: "Fein",
    BRAVE: "Unerschrocken",
    SHARP: "Scharf",
    HOT_MOVE: "Hei\u00dfer Zug",
    TRICKY: "Trickreich",
    ADVENTUROUS: "Unternehmungslustig",
    NICE: "Nett",
    GOOD: "Gut",
    RISKY: "Riskant!?",
    GOOD_GAMBLE: "Gut gepokert!?",
    NO_FEAR: "Furchtlos",
    ON_THE_EDGE: "Hart am Wind gespielt",
    EVADE_EXCHANGE_IMP: "Weiche einem Abtausch aus.",
    DOUBLE_ROOKS_7TH: "Zwei T\u00fcrme auf der siebten Reihe sind stark.",
    ROOK_TO_HALFOPEN_FILE: "Ziehe Deinen Turm auf eine halboffene Linie.",
    ONLY_MOVE: "Nur ein legaler Zug.",
    WIN_MATERIAL: "Gewinne Material."
};
CB.Vd7.Vih.DEU = CB.Vd7.Vih.GER;
"use strict";
CB.namespace("CB.Vd7.Vd8.ESP");
CB.Vd7.Vd8.ESP = {
    LOGIN: "Conectar",
    LOGOUT: "Cerrar sesi\u00f3n",
    ACCOUNT: "Mi cuenta",
    BOARDS: "Tablero",
    RECONNECT: "Reconectar",
    RESIGN: "Rendirse",
    Vd9: "Cerrar tablero",
    OFFER_DRAW: "Ofrecer tablas",
    Vda: "Aceptar tablas",
    ACCEPTED_DRAW: "{0} acept\u00f3 tablas.",
    Vdb: "{0} ofrece tablas.",
    Vdc: "{0} acepta tablas.",
    RESIGNS: "{0} se rinde.",
    Vdd: "Probando la conexi\u00f3n con el servidor",
    CONNECTING: "Conectando con el servidor, por favor espere...",
    Vde: "Reconectado",
    Vdf: "Nombre",
    Vdg: "Pa\u00eds",
    Vdh: "Rango",
    WHITE: "Blancas",
    BLACK: "Negras",
    Vdi: "Elo blancas",
    Vdj: "Elo negras",
    RESULT: "Resultado",
    Vdk: "Control de tiempo",
    Vdl: "Torneo",
    GAMES: "Partidas",
    V3w: "Charla",
    Vdm: "Su interlocutor se ha ido.",
    Vdn: "Conexi\u00f3n",
    Vdo: "Mapa",
    KING: "Rey",
    QUEEN: "Dama",
    ROOK: "Torre",
    BISHOP: "Alfil",
    KNIGHT: "Caballo",
    PAWN: "Pe\u00f3n",
    Vdp: "Escriba aqu\u00ed la charla",
    Vdq: "Escriba aqu\u00ed con quien quiere charlar",
    GUEST: "Invitado",
    Vdr: "Confirmar",
    CANCEL: "Cancelar",
    Vds: "Reloj",
    TIME: "Tiempo",
    Vdt: "Incr. por mov.",
    Vdu: "Cerrar",
    Vdv: "A\u00f1adir",
    Vdw: "Quitar",
    NOTATION: "Notaci\u00f3n",
    BOARD_FRITZ: "Fritz",
    BOARD_CRYSTALS: "Crystals",
    BOARD_USCF: "USCF",
    BOARD_OLDSTYLE: "OldStyle",
    BOARD_HABSBURG: "Habsburg",
    Vdx: "Fritz & Chesster",
    Vdy: "Jugar blitz",
    NEW_GAME: "Nueva partida",
    TAKE_BACK: "Retroceder",
    MAKE_MOVE: "Jugar",
    FLIP_BOARD: "Girar tablero",
    Vdz: "Copiar",
    Ve0: "Buscar tablero",
    Ve1: "A\u00f1o",
    BOOK: "Libro",
    LIVE_BOOK: "Live Book",
    MOVE: "Jugada",
    Ve2: "Partidas",
    Ve3: "Marcador",
    Ve4: "\u00daltima vez",
    ELO_AVG: "Elo medio",
    VISITS: "Visitas",
    Ve5: "Cargando estad\u00edsticas",
    Ve6: "Let's Check",
    Ve7: "Eval.",
    Ve8: "Variante",
    DEPTH: "Prof.",
    Ve9: "M\u00f3dulo",
    Vea: "Escriba el texto a buscar...",
    Veb: "Obtener partidas",
    Vec: "Datos del jugador",
    Ved: "Informaci\u00f3n del jugador",
    Vee: "Nombre",
    Vef: "Apellidos",
    Veg: "Nacido en",
    Veh: "Tendencia",
    Vei: "Elo",
    Vej: "Enviar comentario",
    Vek: "Su comentario",
    Vel: "Su e-mail",
    Vem: "Enviado",
    BROWSER_DOESNT_SUPPORT_3D: "El navegador no admite tableros 3D",
    BOARD3D_FRITZ: "Fritz",
    BOARD3D_MODERN: "Moderno",
    BOARD3D_ROOM: "Habitaci\u00f3n",
    BOARD3D_BALLOON: "Globos",
    BOARD3D_METAL: "Metal",
    Ven: "Plata",
    BOARD3D_FUTURE: "Futuro",
    Veo: "M\u00e1rmol",
    Vep: "Bienvenido",
    Veq: "Material",
    ANALYSIS: "An\u00e1lisis",
    Ver: "M\u00f3dulo",
    ENG_SEARCH_INFO_FMT: "Prof {0}/{1}, {2}kPos/s, tiempo = {3}s",
    PASTE: "Pegar",
    PW_INVALID: "Usuario/Contrase\u00f1a no v\u00e1lido. Por favor, vuelva a intentarlo",
    PLEASE_LOGIN: "Por favor conecte con su cuenta ChessBase (Playchess):",
    Ves: "Nombre",
    Vet: "Contrase\u00f1a",
    Veu: "Crear cuenta",
    Vev: "Invitado",
    PLEASE_LOGIN_SHORT: "Por favor, identif\u00edquese",
    LOADING_ENGINE: "Cargando m\u00f3dulo...",
    Vew: "Cargando partidas en directo...",
    Vex: "Invitando a otros jugadores a una partida de {0} ({1})",
    OTHER_TOOLS: "M\u00e1s herramientas",
    DATABASES: "Bases de datos",
    OPEN_DATABASE: "Abrir base",
    CREATE_DATABASE: "Crear base",
    DELETE_DATABASE: "Borrar base",
    Vey: "Borrar",
    Vez: "Limpiar",
    Vf0: "Mis bases",
    Vf1: "Bases compartidas conmigo",
    Vf2: "Seleccionar base para '{0}'",
    OPEN_PGN: "Abrir PGN",
    SAVE: "Guardar",
    SAVE_AND_REPLACE_GAMES: "Guardar y reemplazar partidas",
    SAVE_AS_NEW: "Guardar como nueva",
    EDIT_GAME: "Editar partida",
    DATABASE_FUNCTIONS: "Abrir, crear y y borrar bases",
    Vf3: "Texto antes",
    TEXT_AFTER: "Texto despu\u00e9s",
    START_LINE: "Iniciar l\u00ednea",
    PROMOTE_LINE: "Promocionar l\u00ednea",
    DELETE_LINE: "Borrar l\u00ednea",
    CUT_LINE: "Cortar l\u00ednea",
    Vf4: "Abrir un archivo PGN de su equipo",
    TEXT_BEFORE_TIP: "A\u00f1adir comentario en forma de texto antes de esta jugada",
    TEXT_AFTER_TIP: " A\u00f1adir comentario en forma de texto tras esta jugada",
    START_LINE_TIP: "Retroceder la jugada y comenzar una variante",
    PROMOTE_LINE_TIP: "Subir de nivel la variante seleccionada",
    DELETE_LINE_TIP: "Borrar la variante seleccionada",
    CUT_LINE_TIP: "Truncar la variante",
    Vf5: "Seguir conectado",
    Vf6: "Contrase\u00f1a olvidada",
    CHANGE_PASSWORD: "Cambiar contrase\u00f1a",
    Vf7: "Contrase\u00f1a antigua",
    Vf8: "Contrase\u00f1a nueva",
    Vf9: "Confirmar contrase\u00f1a",
    MENU_PLAYCHESS_TOOL: "Playchess",
    MENU_DATABASE_TOOL: "Live Database",
    MENU_MYGAMES_TOOL: "My Games Cloud",
    MENU_FRITZ_TOOL: "Fritz Online",
    MENU_FRITZ_CHESSTER_TOOL: "Chess For Kids",
    MENU_TACTICS_TOOL: "Tactics Training",
    LANGUAGE: "Idioma",
    LOGIN_CREATE_LINK: "Haga clic aqu\u00ed para crear una cuenta",
    LOGIN_PLEASE_LOGIN: "Por favor identif\u00edquese",
    LOGIN_ACCOUNT_FREE: "La creaci\u00f3n de una cuenta es gratis. La cuenta vale para todas las dem\u00e1s herramientas web de ChessBase y para jugar en www.playchess.com.",
    LOGIN_WELCOME: "Bienvenido {0}",
    Vfa: "Gestionar amigos",
    INVITE_FRIEND: "Invitar a un amigo",
    Vfb: "Ping",
    NOTATION_KING: "R",
    NOTATION_QUEEN: "D",
    NOTATION_KNIGHT: "C",
    NOTATION_BISHOP: "A",
    NOTATION_ROOK: "T",
    Vfc: "P",
    GENERAL_INVITE: "Gracias por usar {0}.",
    Vfd: "Gracias por usar ChessBase MyGames, su base de datos de ajedrez personal en la web.",
    Vfe: "Por favor con\u00e9ctese con su cuenta ChessBase para tener acceso a sus bases de datos en la nube. Tambi\u00e9n puede usar las bases de datos en la nube con ChessBase 13.",
    Vff: "ECO",
    BACK: "Volver",
    Vfg: "Siguiente jug.",
    Vfh: "Anterior jug.",
    Vfi: "Siguiente part.",
    Vfj: "Anterior part.",
    MENU_VIDEO_TOOL: "V\u00eddeos de entrenamiento",
    MENU_OPENINGS_TOOL: "Gestionar aperturas",
    Vfk: "Requesting Moves",
    FRESH_POSITION: "Fresh Position",
    Vfl: "Embed",
    Vfm: "Help",
    Vfn: "Toggle 2D/3D Board",
    BOARD3D_BLACKWHITE: "Black white",
    MATE: "Mate",
    STALEMATE: "Ahogado",
    SETUP_POSITION: "Armar posici\u00f3n",
    WHITE_MATES: "Las blancas dan mate",
    WHITE_CLEARLY_WINNING: "Las blancas tienen clara ventaja ganadora",
    WHITE_WINNING: "Las blancas tienen ventaja ganadora",
    WHITE_DECISIVE: "Las blancas tienen ventaja decisiva",
    WHITE_CLEARLY_BETTER: "Las blancas est\u00e1n claramente mejor",
    WHITE_BETTER: "Las blancas est\u00e1n mejor",
    WHITE_SLIGHTLY: "Las blancas est\u00e1n un poco mejor",
    WHITE_EDGE: "Las blancas tienen una ventaja m\u00ednima",
    BLACK_MATES: "Las negras dan mate",
    BLACK_CLEARLY_WINNING: "Las negras tienen clara ventaja ganadora",
    BLACK_WINNING: "Las negras tienen ventaja ganadora",
    BLACK_DECISIVE: "Las negras tienen ventaja decisiva",
    BLACK_CLEARLY_BETTER: "Las negras est\u00e1n claramente mejor",
    BLACK_BETTER: "Las negras est\u00e1n mejor",
    BLACK_SLIGHTLY: "Las negras est\u00e1n un poco mejor",
    BLACK_EDGE: "Las negras tienen una ventaja m\u00ednima",
    EQUAL_POS: "La posici\u00f3n est\u00e1 igualada",
    PREMIUM_ONLY: "S\u00f3lo premium",
    Vfo: "Avatar",
    CALC_TRAINING: "Entrenar c\u00e1lculo",
    Vfp: "Calcular variantes con la ayuda de Fritz antes de continuar la partida aqu\u00ed.",
    CALC_INFO: "Ejecute jugadas a la ciega. Haga clic en la notaci\u00f3n para a\u00f1adir variantes. Haga clic en 'Entrenar c\u00e1lculo' para reanudar la partida.",
    CALCULATING: "Calculando...",
    Vfq: "Madera",
    TRAINING_SOLUTION: "Ver soluci\u00f3n",
    TRAINING_HELP: "Ayuda",
    TRAINING_QUESTION: "Encontrar la jugada correcta",
    Vfr: "Desanotar",
    Vfs: "M\u00e1s l\u00edneas",
    Vft: "Menos l\u00edneas",
    Vfu: "Calcular amenaza",
    Vfv: "Start",
    Vfw: "Pause",
    Vfx: "En ese momento, no hay una transmisi\u00f3n",
    Vfy: "Connected to server: {0}",
    Vfz: "Initializing",
    INSERT_DIAGRAM: "Insert Diagram",
    Vg0: "Tablero",
    Vg2: "Loading board, just a second...",
    Vg1: "Like",
    KING_ACC: "King",
    QUEEN_ACC: "Queen",
    KNIGHT_ACC: "Knight",
    BISHOP_ACC: "Bishop",
    ROOK_ACC: "Rook",
    PAWN_ACC: "Pawn",
    MOVE_IMP: "Move",
    WHITES_MOVE: "White's move",
    BLACKS_MOVE: "Black's move",
    CLICK_TO_FLIP_BOARD: "click to flip board",
    Vg4: "Maximize",
    Vg5: "Pieces",
    Vg6: "Sound On/Off",
    Vg7: "Goto Begin",
    Vg8: "Goto End",
    Vg9: "Load Prev.",
    Vga: "Load Next",
    Vgb: "Search Material",
    Vgc: "Join with Video",
    Vgd: "Join with Audio",
    Vge: "Using video and audio requires a secure connection",
    Vgf: "You reached your daily limit",
    Vgg: "Please attach video or audio recording device",
    Vgh: "Report",
    SERVER_LOGGED_YOU_OFF: "Server logged you off:",
    DOUBLE_LOGIN: "Double login",
    Vgi: "Please check your connection",
    A_QUEEN_ACC: "a queen",
    A_KNIGHT_ACC: "a knight",
    A_BISHOP_ACC: "a bishop",
    A_ROOK_ACC: "a rook",
    A_PAWN_ACC: "a pawn",
    Vgj: "Logged in"
};
"use strict";
CB.namespace("CB.Vd7.Vgl.ESP");
CB.Vd7.Vgl.ESP = {
    Vgm: "Pr\u00e1cticar blancas",
    Vgn: "Pr\u00e1cticar",
    Vgo: "Pr\u00e1cticar negras",
    Vgp: "Detener pr\u00e1ctica",
    Vgq: "Repetir pr\u00e1ctica",
    Vgr: "Por favor, haga una jugada.",
    Vgs: "No est\u00e1 en el libro",
    Vgt: "Fin de la teor\u00eda",
    MY_MOVES: "Mis jugadas",
    MARK_MOVE: "Marcar jugada",
    LOAD_WHITE: "Cargar blancas",
    LOAD_BLACK: "Cargar negras",
    MARK_IMPORTANT: "Importante",
    UNMARK_MOVE: "Desmarcar",
    UPLOAD_GAME: "Subir partida a Mis jugadas",
    MY_MOVE_MENU_TTIP: "Gestionar repertorios de aperturas: clic derecho/mantener pulsada la jugada del LiveBook",
    REMOVE_TREE_FROM_HERE: "eliminar \u00e1rbol desde aqu\u00ed",
    MY_MOVES_FOR: "Mis jugadas para",
    MARKED: "marcada",
    MARKED_IMPORANT: "marcada como importante.",
    ENTER_OR_CLICK_MOVE_AND_MARK: "Ejecute o haga clic en una jugada y luego m\u00e1rquela para su repertorio.",
    CAUTION_YOU_ARE_EDITING_MOVES_FOR: "Precauci\u00f3n, est\u00e1 editando 'Mis jugadas' para",
    GAME_UPLOADED: "Subida partida actual.",
    PLEASE_LOGIN_OPENINGS: "Por favor, identif\u00edquese para gestionar sus aperturas.",
    DELETE_VARIATION_TREE: "Borrar \u00e1rbol de variantes",
    REMOVE_ALL_MY_MOVES: "\u00bfEliminar todas 'Mis jugadas' en esta variante?",
    REMOVE_MOVES_FROM_HERE: "\u00bfEliminar todas 'Mis jugadas' a partir de aqu\u00ed?",
    Vgu: "Haga clic en una jugada para ejecutarla. Clic derecho marca las jugadas para su repertorio.",
    MOVES_UNMARKED: "jugadas eliminadas",
    MOVES_UNLEARNED: "jugadas desaprendidas",
    UNMARK_TREE_WHITE: "Desmarcar todo el \u00e1rbol para blancas",
    UNMARK_TREE_BLACK: "Desmarcar todo el \u00e1rbol para negras",
    RESET_LEARNING_WHITE: "Poner a cero aprendizaje blancas",
    RESET_LEARNING_BLACK: "Poner a cero aprendizaje negras",
    Vgv: "Clasificaciones",
    Vgw: "C\u00f3mo grabar y practicar sus aperturas",
    Vgx: "Videogu\u00eda",
    Vgy: "V\u00eddeogu\u00eda con funciones avanzadas",
    Vgz: "Ejecute las jugadas en el tablero o haga clic sobre ellas en el Live Book.",
    Vh0: "Marque una jugada para a\u00f1adirla a su repertorio con blancas o negras. Todas las jugadas marcadas se colorear\u00e1n en el Live Book.",
    Vh1: "Cargue si repertorio con blancas o negras como si fuese la notaci\u00f3n de una partida. Blancas y negras se guardan de forma separada.",
    Vh2: "A partir de cualquier posici\u00f3n, practique su repertorio. No importa si tiene jugadas marcadas o no, puede practicar cualquier posici\u00f3n. El programa le conducir\u00e1 a sus aperturas.",
    Vh5: "Si se queda sin jugadas, detenga el ejercicio y revise el Live Book.",
    Vh3: "Sit back and watch an automatic display of your repertoire.Each line gets repeated three times.",
    Vh4: "Learn an opening by guessing a variation that connects two positions.",
    Vh6: "Repita el ejercicio desde la posici\u00f3n en que comenz\u00f3 la \u00faltima vez.",
    Vh7: "Trabajar con jugadas 'cargadas'",
    Vh8: "Cuando carga el repertorio con blancas o negras como notaci\u00f3n de partida, puede a\u00f1adir, eliminar o comentar directamente las jugadas.",
    Vh9: "Comente con valoraciones y texto. Borrar una l\u00ednea la elimina para siempre. Marque las jugadas como 'importantes' para promoverlas a variantes principales.",
    Vha: "<em>Nota</em>: Si borra las l\u00edneas m\u00e1s grandes, se almacenar\u00e1 una copia de seguridad en la nube de bases de datos (v\u00e9ase mygames.chessbase.com).",
    Vhb: "Para trabajar con un \u00e1rbol de variantes muy largo, usa los botones plegables. Debajo de la notaci\u00f3n, puedes dar clic en el microscopio para ampliar la l\u00ednea actual.",
    Vhc: "Llegaste al final de tu preparaci\u00f3n. \u00a1Excelente!",
    Vhd: "Hiciste una jugada que est\u00e1 fuera de tu repertorio. Int\u00e9ntalo de nuevo.",
    Vhe: "Teor\u00eda Blancas",
    Vhf: "Teor\u00eda Negras",
    Vhg: "Intenta otra jugada",
    Vhh: "Pedir Pista",
    Vhi: "Memorizar",
    Vhj: "M\u00e1s r\u00e1pido",
    NORMAL: "Normal",
    Vhk: "M\u00e1s lento",
    Vhl: "Acoplar jugada",
    Vhm: "L\u00edneas aleatorias",
    Vhn: "Nueva l\u00ednea",
    Vho: "\u00a1Dar clic aqu\u00ed para sondear aperturas!",
    Vhp: "Adivinar variante",
    Vhq: "Nuevas posiciones",
    Vhr: "Ingresar jugadas para blancas y negras en el tablero de la izquierda. Llegar a esa posici\u00f3n en la derecha.",
    Vhs: "Nota: \u00a1S\u00f3lo las posiciones de tus variantes seleccionadas ser\u00e1n usadas!",
    Vht: "Comienza un entrenamiento en el que conectas posiciones de tu repertorio.",
    Vhu: "Si\u00e9ntate, rel\u00e1jate y mira tu repertorio",
    Vhv: "Pon a prueba tu repertorio.",
    Vhw: "Marca una jugada para incluirla en tu repertorio personal.",
    Vhx: "Carga tu repertorio personal.",
    Vhy: "\u00a1Encontraste la variante correcta! ",
    Vhz: "Por favor, int\u00e9ntalo de nuevo",
    Vi0: "Correcto",
    Vi1: "Por favor, primero carga un repertorio",
    Vi2: "Restaurar partida",
    Vi3: "Pausa",
    Vi4: "Juega para un bando ",
    Vi5: "Bien hecho, l\u00ednea completa. A repetir..."
};
"use strict";
CB.namespace("CB.Vd7.Vi6.ESP");
CB.Vd7.Vi6.ESP = {
    MOVE_NOW: "Jugar ahora",
    GIVE_HINT: "Pista",
    Vi7: "Partida amistosa",
    CALCULATING_HINT: "Calculando la indicaci\u00f3n",
    Vi8: "Por favor, espere",
    Vi9: "Jugador",
    Via: "M\u00f3dulo",
    RESIGN: "Rendirse",
    ANALYSIS: "An\u00e1lisis",
    Vib: "Rendirse en esta partida; gana el m\u00f3dulo",
    Vic: "Arrancar el modulo solo para analizar",
    LEVEL: "Nivel",
    BEGINNER: "Principiante",
    AMATEUR: "Aficionado",
    CLUBPLAYER: "Jugador de club",
    MASTER: "Maestro",
    GRANDMASTER: "Gran maestro",
    Vfl: "Incrustar",
    Vid: "Incrustar y configurar Fritz",
    ENGINE_HELP_1: "Haga una jugada o haga clic en An\u00e1lisis",
    ENGINE_HELP_2: "Mantenga una pieza pulsada para recibir pistas.",
    ENGINE_HELP_3: 'Haga clic en "Nivel" para aumentar la fuerza de juego.',
    ENGINE_HELP_4: 'Use "Hint" to get hints in natural language.',
    ENGINE_HELP_5: 'Suscriptores Premium: las partidas se guardan en <a href="https://mygames.chessbase.com">mygames.chessbase.com.</a>',
    ENGINE_HELP_MOBILE_1: 'Make a move or select "Analysis" from the Level button menu.',
    REJECTS_DRAW: "{0} wants to play on.",
    Vie: "Play against Fritz",
    HINTS: "Hints",
    THIS_RATED_GAME: "This is a rated game.",
    THIS_UNRATED_GAME: "This game is now unrated.",
    ANALYSIS_STOPPED: "Analysis stopped.",
    BOOK_MOVE: "Book Move",
    LIVEBOOK_MOVE: "Livebook Move",
    THEORY: "Theory",
    YOU_HAVE_STRONG_MOVE: "You have a brilliant move!",
    YOU_HAVE_PRECISE_MOVE: "Find a strong move.",
    YOU_HAVE_ONLY_MOVE: "Find the only move.",
    CAREFUL_ONLY_MOVE: "Watch out, there is only one move.",
    CALCULATING_FOR: "Calculating for {0}...",
    CALCULATES_MOVE: "Fritz calculates {0}",
    STILL_IN_BOOK: "Still in book",
    NOT_YOUR_MOVE: "Not your move",
    FRITZ_TO_MOVE: "Fritz to move.",
    Vif: "Waiting for an hint...",
    CLICK_HINT_BUTTON: "Click 'Hint' to get hints.",
    AUTOMATIC_HINTS: "Automatic Hints",
    CLICK_ASSIST: "Click & Check",
    PRECISE_MOVE: "Strong move",
    BRILLIANT_MOVE: "Brilliant move",
    NEXT_HINT: "Next Hint",
    HINT_SUPPORT: "Hints usage:",
    HINTS_HERO: "Heroic",
    HINTS_BRAVE: "Ambitious",
    HINTS_CONFIDENT: "Confident",
    HINTS_COMPETITIVE: "Concentrated",
    HINTS_ATTENTIVE: "Attentive",
    HINTS_INTERESTED: "Interested",
    HINTS_GUARDED: "Guarded",
    HINTS_CAUTIOUS: "Cautious",
    HINTS_LEARNING: "Learning",
    BONUS_HINTS: "Bonus Hints",
    LIMIT: "Limit",
    HINTS_LIMIT: "Hints Limit reached.",
    HINTS_LIMIT_LOGIN: "Guest - Please log in for {0} hints.",
    HINTS_LIMIT_PREMIUM: "Hints Limit exceeded - a Premium account gives {0} hints.",
    GRANDMA: "Yeah, my grandma could play that.",
    NOBODY_NEEDS_HINTS: "Nobody needs hints here.",
    NOTHING_TO_CHANCE: "Leaving nothing to chance.",
    STAYING_CONCENTRATED: "Staying fully concentrated.",
    LOST_FOR_ME: "Yeah, thats lost for me.",
    YOU_HAVE_A_POINT: "You have a point.",
    TIGHTENING_GRIP: "Tightening the grip.",
    KEEPING_ON_TRACK: "Keeping on track.",
    ZONING_IN: "Zoning in.",
    IN_THE_FLOW: "In the flow.",
    NO_MERCY_FOR_ME: "No mercy for me.",
    OUT_FOR_BLOOD: "You are out for blood.",
    GETTING_WORRIED: "I am getting worried.",
    RIGHT_EXCLAM: "Right!",
    WELL_PLAYED: "Well played.",
    PRECISE_PLAY: "Precise play.",
    RIGHT_MOVE: "The right move.",
    CORRECT_WITHOUT_HINTS: "No hints used and well played.",
    WHO_NEEDS_HINTS: "Right, who needs hints anyway?",
    ALL_RIGHT: "All right.",
    YES_THATS_IT: "Yes, thats it.",
    YEP: "Yep.",
    EXACTLY: "Exactly.",
    YOU_SAW_IT: "You saw it.",
    THAT_WAS_GOOD_HINT: "That was a good hint.",
    THAT_WAS_NECESSARY: "That was necessary.",
    CONCENTRATED_PLAY: "Concentrated play.",
    KEEP_GOING: "Keep going like that.",
    MAKES_SENSE: "Makes sense.",
    GOOD_RESISTANCE: "Good resistance.",
    DONT_GIVE_UP: "Good, don't give up.",
    KEEP_YOUR_CHANCES: "Fine, you keep your chances.",
    KEEP_RESISTING: "Good, keep resisting.",
    NOT_FALTERING: "Not faltering under pressure.",
    KEEP_DEFENDING: "Keep defending like that.",
    DONT_LOSE_HOPE: "Don't lose hope yet.",
    CHANCE_MIGHT_COME: "Your chance might still come.",
    OUCH: "Ouch.",
    OVERSIGHT: "An oversight.",
    FRITZ_SORRY: "Fritz says sorry...",
    UH_OH: "Uh, oh...",
    DONT_WORRY: "Don't worry, life goes on.",
    NOT_SO_GOOD: "Not so good.",
    HMM: "Hmm...",
    LOOKS_LIKE_MISTAKE: "Looks like a mistake.",
    THERE_WAS_BETTER_MOVE: "There was a better move."
};
"use strict";
CB.namespace("CB.Vd7.Vih.ESP");
CB.Vd7.Vih.ESP = {
    Vii: "Dificultad:",
    Vij: "Posiciones resueltas:",
    Vik: "Su Elo:",
    Vil: "Su rango:",
    Vim: "Nuevo rango:",
    Vin: "Clasificaciones",
    Vio: "Siguiente posici\u00f3n",
    Vip: "Siguiente posici\u00f3n (pierde Elo si no se ha dado una soluci\u00f3n)",
    Viq: "Pista",
    Vir: "Haga clic para la siguiente pista",
    Vis: "Soluci\u00f3n",
    Vit: "Mostrar soluci\u00f3n (resta Elo)",
    Viu: "Criticar posici\u00f3n",
    Viv: "Mandar un comentario cr\u00edtico sobre esta posici\u00f3n",
    Viw: "Me gusta",
    Vix: "Indicar que le gust\u00f3 esta posici\u00f3n",
    CAPTURE_SOMETHING: "Captura algo",
    GIVE_CHECK: "Da jaque",
    Viy: "\u00a1Mate en uno!",
    STALEMATE: "Ahogado",
    THREATEN_MATE: "Amenaza mate",
    RECAPTURE_MATERIAL: "Recapture material",
    DOUBLE_ATTACK: "Ataque doble",
    Viz: "Ataque a la descubierta",
    Vj0: "Clavada",
    Vj1: "Desviaci\u00f3n",
    Vj2: "Se\u00f1uelo",
    Vj3: "Interceptaci\u00f3n",
    Vj4: "Destrucci\u00f3n",
    Vj5: "Despeje",
    Vj6: "Bloqueo",
    Vj7: "Rayos X",
    Vj8: "Sobrecarga",
    Vj9: "Ruptura de pe\u00f3n",
    PASSED_PAWN: "Pe\u00f3n pasado",
    Vja: "Promoci\u00f3n",
    Vjb: "Demolici\u00f3n",
    Vjc: "Persecuci\u00f3n",
    Vjd: "Ataque de mate",
    MATE_THREAT: "Amenaza de mate",
    Vje: "Pincho",
    PIN: "Pin",
    Vjf: "Fork",
    SACRIFICE_SOMETHING: "Sacrifice something.",
    Vjg: "Weak Back Rank",
    ATTACK_THE_QUEEN: "Attack the queen",
    ATTACK_A_ROOK: "Attack a rook",
    Vjh: "Threaten to win a pawn",
    Vji: "Threaten to win material",
    Vjk: "Evade an attack",
    Vjl: "Cover a piece",
    Vjj: "Overworked piece",
    THREAT: "Amenaza",
    Veq: "Material",
    Vjm: "El rival juega...",
    Vjn: "juegan y entablan.",
    Vjo: "juegan y ganan.",
    Vjp: "\u00a1Resuelto!",
    Vjq: "\u00a1Mate!",
    Vjr: "\u00a1Ahogado!",
    Vjs: "Haga clic en 'Siguiente posici\u00f3n' para continuar...",
    Vjt: "Contin\u00fae...",
    Vju: "Contin\u00fae... Por favor, haga la siguiente jugada.",
    Vjv: "No hay pistas.",
    Vjw: "\u00a1Encuentre el mate!",
    Vhz: "No es la jugada m\u00e1s fuerte.",
    Vjx: "Lo sentimos, pero el servidor est\u00e1 apag\u00e1ndose para realizar tareas de mantenimiento. Por favor, vuelva a intentarlo dentro de 10 minutos. \u00a1Muchas gracias!",
    Vjy: "Haga clic en 'Siguiente posici\u00f3n' para empezar",
    Vjz: "Comentario para ChessBase sobre esta posici\u00f3n:",
    Vk0: "Vista {0} veces ya. Pistas = {1}",
    Vk1: "Nunca vista antes. Pistas = {0}",
    Vk3: 'Gracias por usar <span style="font-weight:bold">ChessBase Training</span>. \u00a1Aumente su fuerza practicando t\u00e1ctica!',
    Vk4: "Por favor, con\u00e9ctese con su cuenta de ChessBase para usar 44000 posiciones de t\u00e1ctica. Como invitado, est\u00e1 limitado a 300 posiciones f\u00e1ciles, adecuadas para un calentamiento.",
    Vk5: "Elo amigos",
    Vk6: "Compare su puntuaci\u00f3n con la de sus amigos",
    Vk2: "Pistas = {0}",
    Vk7: "Esperando posici\u00f3n...",
    Vif: "Esperando pista...",
    Vk8: "Esperando soluci\u00f3n...",
    Vk9: "De risa",
    Vka: "Trivial",
    Vkb: "Muy f\u00e1cil",
    Vkc: "F\u00e1cil",
    Vkd: "No tan f\u00e1cil",
    Vke: "Necesita una pensada",
    Vkf: "Medio",
    Vkg: "Interesante",
    Vkh: "Desafiante",
    Vki: "Duro",
    Vkj: "Dif\u00edcil",
    Vkk: "Muy dif\u00edcil",
    Vkl: "Nivel magistral",
    Vkm: "Pesadilla",
    Vkn: "Solo se pueden analizar posiciones resueltas.",
    Vko: "Resuelva problemas t\u00e1cticos y fortalezca su ajedrez.",
    Vkp: "Problemas de t\u00e1ctica",
    Vkq: "\u00a1Pelea t\u00e1ctica!",
    Vkr: "Esperando:",
    Vks: "Mejore su capacidad de c\u00e1lculo.",
    Vkt: "Resuelva posiciones t\u00e1cticas que se ajustan a su fuerza de juego.",
    Vku: "Reciba pistas constructivas si se qeuda atascado. Sin presi\u00f3n de tiempo.",
    Vkv: "Reproduzca la soluci\u00f3n y analice con un m\u00f3dulo.",
    Vkw: "Juegue un duelo al mejor de 24 posiciones contra otro usuario.",
    Vkx: "Si resuelve primero un posicion, obtiene el punto.",
    Vky: "Si se equivoca en la posici\u00f3n, el punto se lo lleva el rival.",
    Vkz: "Si nadie ejecuta una jugada en 60 segundos, cambia la posici\u00f3n.",
    Vl0: "Empezar a resolver",
    Vl1: "Empezar a pelear",
    Vl2: "Haga clic en 'Empezar a pelear' para invitar a otros.",
    Vl3: "Cancelar invitaci\u00f3n",
    Vl4: "Invitaci\u00f3n enviada",
    Vl5: "Haga clic para buscar rival para una lucha t\u00e1ctica de 24 posiciones.",
    Vl6: "Fin de la pelea.",
    Vl7: "Usted gan\u00f3",
    Vl8: "Nuevo Elo:",
    Vl9: "TIEMPO \u2013 Siguiente posici\u00f3n...",
    Vla: "Comenz\u00f3 la pelea",
    Vlb: "ganado",
    Vlc: " Resuelto por",
    Vld: " Error de",
    Vle: "A la espera de rival...",
    ABORTED: "Abortado",
    DRAW: "Tablas",
    Vlf: "se rindi\u00f3",
    Vlg: "ofreci\u00f3 la revancha",
    Vlh: "Pulse 'Revancha' para aceptar la oferta",
    Vli: "Jugador no conectado",
    Vlj: "Retar jugador",
    Vlk: "Escriba el nombre de la cuenta de un amigo para una pelea t\u00e1ctica",
    Vll: "Dejar de resolver y volver a la pantalla principal",
    Vlm: "Cerrar tablero de pelea",
    Vln: "Cerrar el tablero de lucha y volver a la resoluci\u00f3n normal",
    Vlo: "Rendirse en la lucha",
    Vlp: "Haga clic para rendirse y terminar la lucha",
    Vlq: "Revancha",
    Vlr: "Ofrecer o aceptar la revancha",
    Vls: "Enviada oferta de revancha",
    Vlt: "If you kibitz a fight, you may also enter the solutions. A good training.",
    Vlu: "Kibitz Fight",
    Vlv: "Kibitz a Tactics Fight",
    Vlw: "Final position will show here if all hints used up:",
    Vlx: "Every click here will show another (and more direct) hint",
    Vi0: "Correct",
    Vly: "Wrong",
    MOVE_IMP: "Move",
    TO_A_LIGHT_SQUARE: "to a light square.",
    TO_A_DARK_SQUARE: "to a dark square.",
    VERTICALLY: "vertically",
    HORIZONTALLY: "horizontally.",
    DIAGONALLY: "diagonally",
    ADVANCE_FORMAT: "Advance {0}",
    RETREAT_FORMAT: "Retreat {0}",
    CENTRALIZE: "Centralize",
    MOVE_KING_SIDEWAYS: "Move your king sideways.",
    MOVE_YOUR_FILE_PAWN: "Move your {0}-pawn.",
    MAKE_PAWN_DOUBLE_STEP: "Make a double step with your pawn.",
    MOVE_CENTER_PAWN: "Move your center pawn.",
    MOVE_QSIDE_PAWN: "Move your pawn on the queens side.",
    MOVE_KSIDE_PAWN: "Move your pawn on the kings side.",
    MOVE_LIGHT_BISHOP: "Move your light squared bishop.",
    MOVE_DARK_BISHOP: "Move your dark squared bishop.",
    RETREAT_BISHOP: "Retreat your bishop.",
    ADVANCE_BISHOP: "Advance your bishop.",
    DEVELOP_KSIDE: "Develop your king's side.",
    PREPARE_CASTLING: "Prepare to castle.",
    DEVELOP_QSIDE: "Develop your queen's side.",
    DEVELOP_QN: "Develop your queen's knight.",
    DEVELOP_KN: "Develop your king's knight.",
    CENTRALIZE_KNIGHT: "Centralize your knight.",
    ADVANCE_KNIGHT: "Advance your knight.",
    RETREAT_KNIGHT: "Retreat your knight.",
    MOVE_KNIGHT_SIDEWAYS: "Move your knight sideways.",
    ROOK_TO_OPEN_FILE: "Move your rook to an open file.",
    ADVANCE_ROOK: "Advance your rook.",
    RETREAT_ROOK: "Retreat your rook.",
    MOVE_ROOK_VERTICALLY: "Move your rook vertically.",
    CENTRALIZE_ROOK: "Centralize your rook.",
    MOVE_ROOK_HORIZONTALLY: "Move your rook horizontally.",
    DOUBLE_ROOKS: "Double your rooks.",
    PREPARE_DOUBLE_ROOKS: "Prepare to double rooks.",
    CASTLE_IMP: "Castle.",
    PIN_IMP: "Pin something.",
    ATTACK_A_MINOR_PIECE: "Attack a minor piece.",
    RETREAT_A_PIECE: "Retreat a piece.",
    OPP_THREATENS_MATE: "Do not get mated!",
    OPP_THREATENS_QUEEN: "Watch your queen!",
    OPP_THREATENS_ROOK: "Your rook is in danger.",
    OPP_THREATENS_MINOR: "A minor piece is attacked.",
    OPP_THREATENS_PAWN: "Your pawn is hanging.",
    MATE_IMP: "Find the mate!",
    EXCHANGE_IMP: "Exchange material.",
    CREATE_PASSED_PAWN: "Create a passed pawn.",
    PROMOTE_IMP: "Promote a pawn.",
    OFFER_EXCHANGE_IMP: "Offer to exchange a piece.",
    THREATEN_IMP: "Create a threat.",
    WATCH_OUT: "Watch out for a threat.",
    RED_ARROW_THREAT: "Red arrow = threat.",
    GREEN_ARROW_MOVE: "Green arrow = suggested move.",
    ATTACK_A_PAWN: "Attack a pawn",
    COVER_SOMETHING: "Cover something.",
    BLOCK_ATTACK: "Block an attack.",
    EVADE_ATTACK_IMP: "Evade an attack.",
    SAC_IMP: "Sacrifice",
    OPEN_ATTACK_FILE: "Open an attack file.",
    EVADE_CHECK: "Move your king out of check.",
    BLOCK_CHECK: "Block the check.",
    DOUBLE_ATTACK_IMP: "Find a double attack.",
    BRILLIANT: "Brilliant",
    SPLENDID: "Splendid",
    BEAUTIFUL: "Beautiful",
    COOL: "Cool!",
    EXCELLENT: "Excellent",
    POWERFUL: "Powerful",
    THIS_IS_THE_WAY: "This is the way",
    SUPER: "Super",
    STRONG: "Strong!",
    WELL_PLAYED: "Well played",
    FINE: "Fine!",
    BRAVE: "Brave",
    SHARP: "Sharp",
    HOT_MOVE: "Hot move",
    TRICKY: "Tricky",
    ADVENTUROUS: "Adventurous",
    NICE: "Nice",
    GOOD: "Good",
    RISKY: "Risky!?",
    GOOD_GAMBLE: "Good Gamble",
    NO_FEAR: "No fear",
    ON_THE_EDGE: "On the edge",
    EVADE_EXCHANGE_IMP: "Evade an exchange.",
    DOUBLE_ROOKS_7TH: "Two rooks on the seventh rank are strong.",
    ROOK_TO_HALFOPEN_FILE: "Move your rook to a half open file.",
    ONLY_MOVE: "Only one legal move.",
    WIN_MATERIAL: "Win material."
};
"use strict";
CB.namespace("CB.V1b");
CB.V1b.V1c = function(e) {
    return unescape(encodeURIComponent(e))
}
;
CB.V1b.V1d = function(e) {
    return CB.V1b.Vzw(e)
}
;
CB.V1b.test = function() {
    var e = CB.V1b.V1c("Rh\u00f4ne");
    return CB.V1b.V72(e)
}
;
CB.V1b.Vzw = function(e) {
    var b, d, c;
    var f = "";
    var g = e.length;
    for (b = 0; b < g; ) {
        var h = e[b++].charCodeAt(0);
        switch (h >> 4) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
            f += String.fromCharCode(h);
            break;
        case 12:
        case 13:
            b < g && (d = e[b++].charCodeAt(0));
            f += String.fromCharCode((h & 31) << 6 | d & 63);
            break;
        case 14:
            b < g && (d = e[b++].charCodeAt(0)),
            b < g && (c = e[b++].charCodeAt(0)),
            f += String.fromCharCode((h & 15) << 12 | (d & 63) << 6 | (c & 63) << 0)
        }
    }
    return f
}
;
CB.V1b.V72 = function(e) {
    for (var b = !1, d = 0; d < e.length && !b; d++) {
        var c = e.charCodeAt(d);
        if (c & 128)
            if (194 <= c && 223 >= c && 128 <= e.charCodeAt(d + 1) && 191 >= e.charCodeAt(d + 1))
                d += 2,
                b = !0;
            else if (224 == c && 160 <= e.charCodeAt(d + 1) && 191 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2) || (225 <= c && 236 >= c || 238 == c || 239 == c) && 128 <= e.charCodeAt(d + 1) && 191 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2) || 237 == c && 128 <= e.charCodeAt(d + 1) && 159 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2))
                d += 3,
                b = !0;
            else if (240 == c && 144 <= e.charCodeAt(d + 1) && 191 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2) && 128 <= e.charCodeAt(d + 3) && 191 >= e.charCodeAt(d + 3) || 241 <= c && 243 >= c && 128 <= e.charCodeAt(d + 1) && 191 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2) && 128 <= e.charCodeAt(d + 3) && 191 >= e.charCodeAt(d + 3) || 244 == c && 128 <= e.charCodeAt(d + 1) && 143 >= e.charCodeAt(d + 1) && 128 <= e.charCodeAt(d + 2) && 191 >= e.charCodeAt(d + 2) && 128 <= e.charCodeAt(d + 3) && 191 >= e.charCodeAt(d + 3))
                d += 4,
                b = !0
    }
    return b
}
;
CB.V1b.V71 = function(e) {
    for (var b = 0; b < e.length; b++)
        if (e.charCodeAt(b) & 128)
            return !0;
    return !1
}
;
CB.V1b.Vzx = function(e) {
    return CB.V1b.base64.V2a(e)
}
;
CB.V1b.Vzy = function(e) {
    return CB.V1b.base64.decode(e)
}
;
CB.V1b.base64 = {
    base64s: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    V2a: function(e) {
        if ("function" === typeof btoa)
            return btoa(e);
        for (var b = this.base64s, d, c, f = 0, g = ""; e.length >= f + 3; )
            d = (e.charCodeAt(f++) & 255) << 16 | (e.charCodeAt(f++) & 255) << 8 | e.charCodeAt(f++) & 255,
            g += b.charAt((d & 16515072) >> 18) + b.charAt((d & 258048) >> 12) + b.charAt((d & 4032) >> 6) + b.charAt(d & 63);
        0 < e.length - f && 3 > e.length - f && (c = !!(e.length - f - 1),
        d = (e.charCodeAt(f++) & 255) << 16 | (c ? (e.charCodeAt(f) & 255) << 8 : 0),
        g += b.charAt((d & 16515072) >> 18) + b.charAt((d & 258048) >> 12) + (c ? b.charAt((d & 4032) >> 6) : "=") + "=");
        return g
    },
    decode: function(e) {
        if ("function" === typeof atob)
            return atob(e);
        var b = this.base64s, d = "", c;
        for (c = 0; c < e.length; c += 4) {
            var f = (b.indexOf(e.charAt(c)) & 255) << 18 | (b.indexOf(e.charAt(c + 1)) & 255) << 12 | (b.indexOf(e.charAt(c + 2)) & 255) << 6 | b.indexOf(e.charAt(c + 3)) & 255;
            d += String.fromCharCode((f & 16711680) >> 16, (f & 65280) >> 8, f & 255)
        }
        return 61 === e.charCodeAt(c - 2) ? d.substring(0, d.length - 2) : 61 === e.charCodeAt(c - 1) ? d.substring(0, d.length - 1) : d
    },
    V1p: function(e) {
        this.Vzz = new Uint8Array(256);
        for (var b = 0; b < this.base64s.length; b++)
            this.Vzz[this.base64s.charCodeAt(b)] = b;
        b = .75 * e.length;
        var d = e.length
          , c = 0;
        "=" === e[e.length - 1] && (b--,
        "=" === e[e.length - 2] && b--);
        var f = new ArrayBuffer(b)
          , g = new Uint8Array(f);
        for (b = 0; b < d; b += 4) {
            var h = this.Vzz[e.charCodeAt(b)];
            var k = this.Vzz[e.charCodeAt(b + 1)];
            var l = this.Vzz[e.charCodeAt(b + 2)];
            var m = this.Vzz[e.charCodeAt(b + 3)];
            g[c++] = h << 2 | k >> 4;
            g[c++] = (k & 15) << 4 | l >> 2;
            g[c++] = (l & 3) << 6 | m & 63
        }
        return f
    }
};
CB.V1b.V100 = function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    e = (new RegExp("[\\?&]" + e + "=([^&#]*)")).exec(window.location.href);
    if (null === e)
        return "";
    e = e[1];
    e.length && "/" == e.charAt(e.length - 1) && (e = e.slice(0, e.length - 1));
    return e
}
;
CB.V1b.V101 = function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    return null !== (new RegExp("[\\?&]" + e)).exec(window.location.href)
}
;
CB.V1b.V102 = function(e) {
    if (e) {
        var b = e.toLowerCase();
        b.replace(/</g, "(");
        b.replace(/>/g, ")");
        b && 15 < b.length && (-1 != e.search("http://") && (b = b.slice(7)),
        -1 != e.search("https://") && (b = b.slice(8)),
        e = b.indexOf("/"),
        0 < e && (b = b.slice(0, e)));
        return b
    }
    return ""
}
;
CB.V1b.V103 = function(e) {
    e = e.replace("%22", '"');
    e = e.replace("%27", "'");
    if ('"' == e.charAt(0) || "'" == e.charAt(0))
        e = e.slice(1, e.length - 1);
    return e
}
;
CB.V1b.V104 = function(e) {
    return e.replace(/[\u00A0-\u2666<>&]/g, function(b) {
        return "&#" + b.charCodeAt(0) + ";"
    })
}
;
var decodeHtmlEntity = function(e) {}
  , encodeHtmlEntity = function(e) {};
CB.V1b.V105 = function(e) {
    return e.replace(/[\u00A0-\u2666<>&]/g, function(b) {
        return "&#" + b.charCodeAt(0) + ";"
    })
}
;
CB.V1b.V106 = function(e) {
    return e.replace(/&#(\d+);/g, function(b, d) {
        return String.fromCharCode(d)
    })
}
;
CB.V1b.V107 = function(e) {
    for (var b = 0, d = "", c = 0; c < e.length; c++) {
        var f = e.charCodeAt(c);
        if (255 < f)
            return e;
        127 < f && b++;
        d += String.fromCharCode(this.conv1252[f])
    }
    return b > .7 * e.length ? d : e
}
;
CB.V1b.V108 = "abcdefghijklmnopqr stuvwxyz012345";
CB.V1b.V109 = function(e) {
    for (var b = CB.V1b.V108.length, d = [], c = 0; c < e; c++)
        d.push(CB.V1b.V108.substr(Math.floor(Math.random() * b), 1));
    return d.join("")
}
;
CB.V1b.conv1252 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 1026, 1027, 8218, 1107, 8222, 8230, 8224, 8225, 8364, 8240, 1033, 8249, 1034, 1036, 1035, 1039, 1106, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 8482, 1113, 8250, 1114, 1116, 1115, 1119, 160, 1038, 1118, 1032, 164, 1168, 166, 167, 1025, 169, 1028, 171, 172, 173, 174, 1031, 176, 177, 1030, 1110, 1169, 181, 182, 183, 1105, 8470, 1108, 187, 1112, 1029, 1109, 1111, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103];
(function(e, b) {
    e.JSONP = function(d, c, f, g) {
        d = d || "";
        c = c || {};
        f = f || "";
        g = g || function() {}
        ;
        var h = function(n) {
            var p = [], q;
            for (q in n)
                n.hasOwnProperty(q) && p.push(q);
            return p
        };
        if ("object" == typeof c) {
            var k = "";
            h = h(c);
            for (var l = 0; l < h.length; l++)
                k += encodeURIComponent(h[l]) + "=" + encodeURIComponent(c[h[l]]),
                l != h.length - 1 && (k += "&");
            d += "?" + k
        } else
            "function" == typeof c && (g = f = c);
        "function" == typeof f && (g = f,
        f = "callback");
        Date.now || (Date.now = function() {
            return (new Date).getTime()
        }
        );
        c = Date.now();
        var m = "jsonp" + Math.round(c + 1000001 * Math.random());
        e[m] = function(n) {
            g(n);
            delete e[m]
        }
        ;
        d = -1 === d.indexOf("?") ? d + "?" : d + "&";
        c = document.createElement("script");
        c.setAttribute("src", d + f + "=" + m);
        document.getElementsByTagName("head")[0].appendChild(c)
    }
}
)(window);
function byteswap_ushort(e) {
    var b = new ArrayBuffer(2);
    b = new DataView(b);
    b.setUInt16(0, e);
    e = b.GetUint8();
    b.SetUint8(0, b.GetUint8(1));
    b.SetUint8(1, e);
    return b.GetUint16(0)
}
function byteswap_ulong(e) {
    var b = new ArrayBuffer(4);
    b = new DataView(b);
    b.setUInt32(0, e);
    e = new ArrayBuffer(4);
    e = new DataView(e);
    for (var d = 0; 4 > d; d++)
        e.setUint8(d, b.getUint8(3 - d));
    return e.GetUint32(0)
}
function byteswap_uint64(e) {
    var b = new ArrayBuffer(8);
    b = new DataView(b);
    b.setUInt64(0, e);
    e = new ArrayBuffer(8);
    e = new DataView(e);
    for (var d = 0; 8 > d; d++)
        e.setUint8(d, b.getUint8(7 - d));
    return e.GetUint64(0)
}
function getInternetExplorerVersion() {
    return 0 <= navigator.userAgent.indexOf("MSIE ") || navigator.userAgent.match(/Trident.*rv:11\./) ? 11 : -1
}
function idiv(e, b) {
    return (e - e % b) / b
}
function isNumber(e) {
    return !isNaN(parseInt(e, 10))
}
CB.V7n = function(e, b, d) {
    if ("number" != typeof b)
        throw Error("CB.setFlag: number expected for bits");
    void 0 === e.flags && (e.flags = 0);
    e.flags = d ? e.flags | b : e.flags & ~b
}
;
CB.V7r = function(e, b) {
    return 0 != (e & b)
}
;
CB.namespace("CB.V10a");
CB.V10a = {};
CB.V10a.V10b = function(e) {
    e = new Date(10 * e);
    return e.getUTCHours() << 24 | e.getUTCMinutes() << 16 | e.getUTCSeconds() << 8 | e.getUTCMilliseconds() / 10
}
;
CB.V10c = function(e, b) {
    var d = -1;
    e.forEach(function(c, f) {
        c.id === b && (d = f)
    });
    0 <= d && e.splice(d, 1)
}
;
"use strict";
CB.Date = function() {
    var e = function(b, d, c) {
        b && (this.year = b);
        d && (this.month = d);
        c && (this.day = c)
    };
    e.prototype.year = 0;
    e.prototype.month = 0;
    e.prototype.day = 0;
    e.prototype.toString = function() {
        return String.formatEx("{day}.{month}.{year}", this)
    }
    ;
    e.g_regexPGN = /(?:(\d{4})|\?{4})\.(?:(\d{2})|\?{2})\.(?:(\d{2})|\?{2})/;
    e.fromPGNString = function(b) {
        return (b = e.g_regexPGN.exec(b)) ? new e(Number(b[1]),Number(b[2]),Number(b[3])) : new e
    }
    ;
    e.prototype.V10d = function(b) {
        this.year = b >> 9;
        this.month = b >> 5 & 15;
        this.day = b & 31
    }
    ;
    e.prototype.V10e = function() {
        var b = new Date;
        this.year = b.getFullYear();
        this.month = b.getMonth() + 1;
        this.day = b.getDate()
    }
    ;
    e.today = function() {
        var b = new CB.Date;
        b.V10e();
        return b
    }
    ;
    e.prototype.V10f = function() {
        return this.year << 9 | this.month << 5 | this.day
    }
    ;
    e.prototype.fromDataBuf = function(b) {
        b = b.V3im();
        this.V10d(b)
    }
    ;
    e.prototype.V3il = function(b) {
        b.V3ij(this.year << 9 | this.month << 5 | this.day)
    }
    ;
    e.prototype.toLocaleString = function() {
        var b = "";
        this.year && (b = this.year.toString(),
        this.month && (b = this.month.toString() + "." + b,
        10 > this.month && (b = "0" + b),
        this.day && (b = this.day.toString() + "." + b,
        10 > this.day && (b = "0" + b))));
        return b
    }
    ;
    e.prototype.toPGNString = function() {
        var b = "";
        if (this.year) {
            b = this.year.toString();
            if (this.month) {
                var d = this.month.toString();
                10 > this.month && (d = "0" + d);
                b += "." + d
            } else
                b += ".??";
            this.day ? (d = this.day.toString(),
            10 > this.day && (d = "0" + d),
            b += "." + d) : b += ".??"
        }
        return b
    }
    ;
    e.prototype.getDay = function() {
        return this.day
    }
    ;
    e.prototype.setDay = function(b) {
        this.day = b
    }
    ;
    e.prototype.getMonth = function() {
        return this.month
    }
    ;
    e.prototype.setMonth = function(b) {
        this.month = b
    }
    ;
    e.prototype.getYear = function() {
        return this.year
    }
    ;
    e.prototype.setYear = function(b) {
        this.year = b
    }
    ;
    e.getThisYear = function() {
        var b = new CB.Date;
        b.V10e();
        return b.getYear()
    }
    ;
    return e
}();
"use strict";
CB.V1h = function() {
    var e = function(b) {
        this.time = b || 0
    };
    e.prototype.V10g = function(b) {
        this.V10h(b.getHours());
        this.V10i(b.getMinutes());
        this.V10j(b.getSeconds())
    }
    ;
    e.prototype.V10k = function(b, d) {
        this.V10h(b);
        this.V10i(d)
    }
    ;
    e.prototype.V10l = function() {
        var b = new Date;
        b.setTime(Date.now());
        b.setHours(this.V10m());
        b.setMinutes(this.V10n());
        b.setSeconds(this.V10o());
        b.setMilliseconds(0);
        return b
    }
    ;
    e.now = function() {
        var b = new Date;
        b.setTime(Date.now());
        var d = new CB.V1h;
        d.V10g(b);
        return d
    }
    ;
    e.test = function() {
        var b = new Date;
        b.setTime(Date.now());
        b.setHours(15);
        b.setMinutes(30);
        b.setSeconds(20);
        b.setMilliseconds(0);
        var d = new CB.V1h;
        d.V10g(b);
        console.log(d.toString());
        var c = d.V10l();
        console.log(b.getTime() + " " + c.getTime());
        console.log(d.getDiffIn100ths(CB.V1h.now()) / 100);
        return b.getTime() === c.getTime()
    }
    ;
    e.prototype.toString = function() {
        var b = new Date;
        b.setUTCHours(this.V10m());
        b.setUTCMinutes(this.V10n());
        b.setUTCSeconds(this.V10o());
        return b.toLocaleTimeString()
    }
    ;
    e.prototype.V10p = function() {
        var b = new Date;
        b.setHours(this.V10m());
        b.setMinutes(this.V10n());
        b.setSeconds(this.V10o());
        this.V10h(b.getUTCHours());
        this.V10i(b.getUTCMinutes());
        this.V10j(b.getUTCSeconds());
        return this
    }
    ;
    e.prototype.V10m = function() {
        return this.time >> 24
    }
    ;
    e.prototype.V10n = function() {
        return this.time >> 16 & 255
    }
    ;
    e.prototype.V10o = function() {
        return this.time >> 8 & 255
    }
    ;
    e.prototype.V10q = function() {
        return this.time & 255
    }
    ;
    e.prototype.V10h = function(b) {
        this.time &= 16777215;
        this.time |= b % 100 << 24
    }
    ;
    e.prototype.V10i = function(b) {
        this.time &= 4278255615;
        this.time |= b % 60 << 16
    }
    ;
    e.prototype.V10j = function(b) {
        this.time &= 4294902015;
        this.time |= b % 60 << 8
    }
    ;
    e.prototype.V10r = function(b) {
        this.time = 0;
        var d = Math.floor(b / 60);
        b -= 60 * d;
        this.V10h(d);
        this.V10i(b)
    }
    ;
    e.prototype.V10s = function() {
        return 60 * this.V10m() + this.V10n()
    }
    ;
    e.prototype.V10t = function(b) {
        this.V10r(this.V10s() + b)
    }
    ;
    e.prototype.V10u = function() {
        var b = new Date;
        b.setUTCHours(this.V10m());
        b.setUTCMinutes(this.V10n());
        b.setUTCSeconds(this.V10o());
        this.V10h(b.getHours());
        this.V10i(b.getMinutes());
        this.V10j(b.getSeconds())
    }
    ;
    e.prototype.getTimeIn100th = function() {
        return 36E4 * this.V10m() + 6E3 * this.V10n() + 100 * this.V10o() + this.V10q()
    }
    ;
    e.prototype.getDiffIn100ths = function(b) {
        return this.getTimeIn100th() - b.getTimeIn100th()
    }
    ;
    e.prototype.time = 0;
    return e
}();
var DateAndTime = function() {
    this.nYear = this.nMonth = this.nDay = this.nHour = this.nMinute = this.nSecond = this.nMilliSecond = this.nMicroSecond = this.utcTimeVal = 0
};
DateAndTime.prototype.V3il = function(e) {
    e.V3if(this.utcTimeVal)
}
;
DateAndTime.prototype.fromDataBuf = function(e) {
    e.V3ik(this.utcTimeVal)
}
;
DateAndTime.prototype.computeFields = function() {
    this.computeGregorian(this.toJulianDay())
}
;
DateAndTime.prototype.computeGregorian = function(e) {
    var b = Math.floor(e - 1721118.5);
    e = e - 1721118.5 - b;
    var d = b - .25
      , c = Math.floor(d / 36524.25);
    c -= Math.floor(c / 4);
    this.nYear = short(Math.floor((c + d) / 365.25));
    b = c + b - Math.floor(365.25 * this.nYear);
    this.nMonth = short(Math.floor((5 * b + 456) / 153));
    this.nDay = short(b - Math.floor((153 * this.nMonth - 457) / 5) + e);
    12 < this.nMonth && (++this.nYear,
    this.nMonth -= 12);
    e *= 24;
    this.nHour = Math.floor(e);
    e -= Math.floor(e);
    e *= 60;
    this.nMinute = Math.floor(e);
    e -= Math.floor(e);
    e *= 60;
    this.nSecond = Math.floor(e);
    e -= Math.floor(e);
    e *= 1E3;
    this.nMilliSecond = Math.floor(e);
    e -= Math.floor(e);
    this.nMicroSecond = 1E3 * e + .5;
    this.normalize()
}
;
DateAndTime.prototype.daysOfMonth = function(e, b) {
    return 2 == b && this.isLeapYear(e) ? 29 : [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][b]
}
;
DateAndTime.prototype.normalize = function() {
    1E3 < this.nMicroSecond && (this.nMilliSecond += this.nMicroSecond / 1E3,
    this.nMicroSecond %= 1E3);
    1E3 < this.nMilliSecond && (this.nSecond += this.nMilliSecond / 1E3,
    this.nMilliSecond %= 1E3);
    60 < this.nSecond && (this.nMinute += this.nSecond / 60,
    this.nSecond %= 60);
    60 < this.nMinute && (this.nHour += this.nMinute / 60,
    this.nMinute %= 60);
    24 < this.nHour && (this.nDay += this.nHour / 24,
    this.nHour %= 24);
    this.nDay > this.daysOfMonth(this.nYear, this.nMonth) && (this.nDay -= this.daysOfMonth(this.nYear, this.nMonth),
    12 < ++this.nMonth && (++this.nYear,
    this.nMonth -= 12))
}
;
DateAndTime.prototype.isLeapYear = function(e) {
    return 0 == e % 4 && (0 != e % 100 || 0 == e % 400)
}
;
DateAndTime.toJulianDay = function(e) {
    return double(e) / 864E9 + 2299160.5
}
;
function CBGuid() {
    this.uint16Data3 = this.uint16Data2 = this.uint32Data1 = 0;
    this.uint8Data4 = [0, 0, 0, 0, 0, 0, 0, 0]
}
CBGuid.prototype = {
    fromRandom: function(e) {
        var b = 0;
        if (void 0 !== e)
            for (var d = 0; d < e.length; d++)
                b += e.charCodeAt(d);
        this.uint32Data1 = Math.floor(4294967296 * Math.random() + b);
        this.uint16Data2 = Math.floor(65536 * Math.random() + b);
        this.uint16Data3 = Math.floor(65536 * Math.random() + b);
        for (d = 0; 8 > d; d++)
            this.uint8Data4[d] = Math.floor(256 * Math.random() + b)
    },
    toString: function() {
        for (var e = this.uint32Data1.toString(16) + "-" + this.uint16Data2.toString(16) + "-" + this.uint16Data3.toString(16) + "-", b = 0; 2 > b; b++)
            e += this.uint8Data4[b].toString(16);
        e += "-";
        for (b = 2; 8 > b; b++)
            e += this.uint8Data4[b].toString(16);
        return e
    },
    V3il: function(e) {
        e.V3i3(this.uint32Data1);
        e.V3i4(this.uint16Data2);
        e.V3i4(this.uint16Data3);
        for (var b = 0; 8 > b; b++)
            e.writeUint8(this.uint8Data4[b])
    },
    fromDataBuf: function(e) {
        this.uint32Data1 = e.V3ii();
        this.uint16Data2 = e.V3i4();
        this.uint16Data3 = e.V3i4();
        for (var b = 0; 8 > b; b++)
            this.uint8Data4[b] = e.readUint8()
    }
};
"use strict";
CB.V10v = {
    NONE: 0,
    AFG: 1,
    ALB: 2,
    ALG: 3,
    AND: 4,
    ANG: 5,
    ANT: 6,
    ARG: 7,
    ARM: 8,
    V10w: 9,
    AUT: 10,
    AZE: 11,
    BAH: 12,
    BHN: 13,
    BAN: 14,
    BAR: 15,
    BLR: 16,
    BEL: 17,
    BLZ: 18,
    BER: 19,
    BOL: 20,
    BIH: 21,
    BOT: 22,
    BRA: 23,
    IVB: 24,
    BRN: 25,
    BUL: 26,
    BUR: 27,
    CAN: 28,
    CHI: 29,
    CHN: 30,
    COL: 31,
    CRI: 32,
    CRO: 33,
    CUB: 34,
    CYP: 35,
    CZE: 36,
    DEN: 37,
    DJI: 38,
    DOM: 39,
    ECU: 40,
    EGY: 41,
    ENG: 42,
    ESP: 43,
    EST: 44,
    ETH: 45,
    FAI: 46,
    FIJ: 47,
    FIN: 48,
    FRA: 49,
    MKD: 50,
    GAM: 51,
    GEO: 52,
    GER: 53,
    GHA: 54,
    GRE: 55,
    GUA: 56,
    GCI: 57,
    GUY: 58,
    HAI: 59,
    HON: 60,
    HKG: 61,
    HUN: 62,
    ISL: 63,
    IND: 64,
    INA: 65,
    IRI: 66,
    IRQ: 67,
    ISR: 68,
    IRL: 69,
    ITA: 70,
    IVO: 71,
    JAM: 72,
    JPN: 73,
    JCI: 74,
    JOR: 75,
    KAZ: 76,
    KEN: 77,
    KOR: 78,
    KYR: 79,
    KUW: 80,
    LAT: 81,
    LBN: 82,
    LBY: 83,
    LIE: 84,
    LTU: 85,
    LUX: 86,
    MAC: 87,
    MAD: 88,
    MAS: 89,
    MLI: 90,
    MLT: 91,
    MAU: 92,
    MRI: 93,
    MEX: 94,
    MDA: 95,
    MNC: 96,
    MON: 97,
    MAR: 98,
    MOZ: 99,
    MYA: 100,
    NAM: 101,
    NEP: 102,
    NED: 103,
    AHO: 104,
    NZL: 105,
    NCA: 106,
    NGR: 107,
    NOR: 108,
    PAK: 109,
    PLE: 110,
    PAN: 111,
    PNG: 112,
    PAR: 113,
    PER: 114,
    PHI: 115,
    POL: 116,
    POR: 117,
    PUR: 118,
    QAT: 119,
    ROU: 120,
    RUS: 121,
    ESA: 122,
    SMR: 123,
    SCO: 124,
    SEN: 125,
    SEY: 126,
    SIN: 127,
    SVK: 128,
    SLO: 129,
    RSA: 130,
    SRI: 131,
    SUD: 132,
    SUR: 133,
    SWE: 134,
    SUI: 135,
    SYR: 136,
    TJK: 137,
    TAN: 138,
    THA: 139,
    TRI: 140,
    TUN: 141,
    TUR: 142,
    TKM: 143,
    UGA: 144,
    UKR: 145,
    UAE: 146,
    USA: 147,
    URU: 148,
    URS: 149,
    UZB: 150,
    VEN: 151,
    VIE: 152,
    ISV: 153,
    WLS: 154,
    YEM: 155,
    YUG: 156,
    ZAM: 157,
    ZIM: 158,
    ZRE: 159,
    DDR: 160,
    CSR: 161,
    CAM: 162,
    CHD: 163,
    KAP: 164,
    KBA: 165,
    COM: 166,
    CON: 167,
    NKO: 168,
    LAO: 169,
    LES: 170,
    MWI: 171,
    MDV: 172,
    MSH: 173,
    OMN: 174,
    NAU: 175,
    MIC: 176,
    NIG: 177,
    SAU: 178,
    TOG: 179,
    TON: 180,
    VAN: 181,
    VAT: 182,
    TUV: 183,
    SWA: 184,
    SIE: 185,
    SLU: 186,
    PAP: 187,
    SVI: 188,
    SAM: 189,
    SKI: 190,
    SAL: 191,
    GE2: 192,
    ZAR: 193,
    RWA: 194,
    LBR: 195,
    NET: 196,
    TPE: 197,
    ASU: 198,
    AGG: 199,
    ARN: 200,
    BNN: 201,
    BTN: 202,
    BRI: 203,
    CMB: 204,
    CAY: 205,
    CAR: 206,
    CIB: 207,
    CIA: 208,
    COA: 209,
    CIN: 210,
    ELG: 211,
    ERI: 212,
    FGB: 213,
    FRG: 214,
    FRP: 215,
    GAB: 216,
    GGB: 217,
    GRA: 218,
    GRL: 219,
    FGA: 220,
    GMA: 221,
    GUI: 222,
    GUB: 223,
    IOM: 224,
    JMY: 225,
    MFR: 226,
    MYF: 227,
    MSG: 228,
    NCF: 229,
    NNN: 230,
    NNA: 231,
    NMI: 232,
    OTM: 233,
    PAL: 234,
    PIG: 235,
    RUF: 236,
    SAO: 237,
    SOM: 238,
    SVN: 239,
    HGB: 240,
    PGB: 241,
    TKI: 242,
    TCI: 243,
    WFR: 244,
    NIR: 245,
    ISS: 246,
    GBR: 247,
    SAA: 248,
    MNE: 249,
    SRB: 250,
    CAT: 251,
    BAS: 252,
    KOS: 253,
    V10x: 254
};
CB.V10y = function() {
    var e = [];
    e[CB.V10v.NONE] = "United Nations";
    e[CB.V10v.AFG] = "Afghanistan";
    e[CB.V10v.ALB] = "Albania";
    e[CB.V10v.ALG] = "Algeria";
    e[CB.V10v.ASU] = "American samoa";
    e[CB.V10v.AND] = "Andorra";
    e[CB.V10v.ANG] = "Angola";
    e[CB.V10v.AGG] = "Anguilla";
    e[CB.V10v.ANT] = "Antigua and Barbuda";
    e[CB.V10v.ARG] = "Argentina";
    e[CB.V10v.ARM] = "Armenia";
    e[CB.V10v.ARN] = "Aruba";
    e[CB.V10v.V10w] = "Australia";
    e[CB.V10v.AUT] = "Austria";
    e[CB.V10v.AZE] = "Azerbaijan";
    e[CB.V10v.BAH] = "Bahamas";
    e[CB.V10v.BHN] = "Bahrain";
    e[CB.V10v.BAN] = "Bangladesh";
    e[CB.V10v.BAR] = "Barbados";
    e[CB.V10v.BAS] = "Basque Country";
    e[CB.V10v.BLR] = "Belarus";
    e[CB.V10v.BEL] = "Belgium";
    e[CB.V10v.BLZ] = "Belize";
    e[CB.V10v.BNN] = "Benin";
    e[CB.V10v.BER] = "Bermuda";
    e[CB.V10v.BTN] = "Bhutan";
    e[CB.V10v.BOL] = "Bolivia";
    e[CB.V10v.BIH] = "Bosnia and Herzegovina";
    e[CB.V10v.BOT] = "Botswana";
    e[CB.V10v.BRA] = "Brazil";
    e[CB.V10v.IVB] = "Virgin Islands British";
    e[CB.V10v.ISV] = "Virgin Islands US";
    e[CB.V10v.BRN] = "Brunei";
    e[CB.V10v.BUL] = "Bulgaria";
    e[CB.V10v.BUR] = "Burkina faso";
    e[CB.V10v.BRI] = "Burundi";
    e[CB.V10v.CMB] = "Cambodja";
    e[CB.V10v.CAM] = "Cameroon";
    e[CB.V10v.CAN] = "Canada";
    e[CB.V10v.KAP] = "Cape verde";
    e[CB.V10v.CAY] = "Cayman Islands";
    e[CB.V10v.CAR] = "Central African Republic";
    e[CB.V10v.CAT] = "Catalonia";
    e[CB.V10v.CHD] = "Chad";
    e[CB.V10v.CIB] = "Jersey";
    e[CB.V10v.CHI] = "Chile";
    e[CB.V10v.CHN] = "China";
    e[CB.V10v.CIA] = "Christmas";
    e[CB.V10v.COA] = "Cocos (Keeling)";
    e[CB.V10v.COL] = "Colombia";
    e[CB.V10v.COM] = "Comoros";
    e[CB.V10v.CON] = "Congo-Brazzaville";
    e[CB.V10v.CIN] = "Cook Islands";
    e[CB.V10v.CRI] = "Costa Rica";
    e[CB.V10v.CRO] = "Croatia";
    e[CB.V10v.CUB] = "Cuba";
    e[CB.V10v.CYP] = "Cyprus";
    e[CB.V10v.CZE] = "Czech Republic";
    e[CB.V10v.DEN] = "Denmark";
    e[CB.V10v.DJI] = "Djibouti";
    e[CB.V10v.DOM] = "Dominican Republic";
    e[CB.V10v.ECU] = "Ecuador";
    e[CB.V10v.ELG] = "Equatorial Guinea";
    e[CB.V10v.EGY] = "Egypt";
    e[CB.V10v.ENG] = "England";
    e[CB.V10v.ERI] = "Eritrea";
    e[CB.V10v.ESP] = "Spain";
    e[CB.V10v.EST] = "Estonia";
    e[CB.V10v.ETH] = "Ethiopia";
    e[CB.V10v.FGB] = "England";
    e[CB.V10v.FAI] = "Faroes";
    e[CB.V10v.FIJ] = "Fiji";
    e[CB.V10v.FIN] = "Finland";
    e[CB.V10v.FRA] = "France";
    e[CB.V10v.FRG] = "Guyana";
    e[CB.V10v.FRP] = "Tahiti(French Polinesia)";
    e[CB.V10v.MKD] = "Macedonia";
    e[CB.V10v.GAB] = "Gabon";
    e[CB.V10v.GAM] = "Gambia";
    e[CB.V10v.GEO] = "Georgia";
    e[CB.V10v.GER] = "Germany";
    e[CB.V10v.SAA] = "Germany";
    e[CB.V10v.DDR] = "Germany";
    e[CB.V10v.GE2] = "Germany";
    e[CB.V10v.GHA] = "Ghana";
    e[CB.V10v.GGB] = "Gibraltar";
    e[CB.V10v.GRE] = "Greece";
    e[CB.V10v.GRA] = "Grenada";
    e[CB.V10v.GRL] = "Greenland";
    e[CB.V10v.FGA] = "Guadeloupe";
    e[CB.V10v.GMA] = "Guam";
    e[CB.V10v.GUA] = "Guatemala";
    e[CB.V10v.GUI] = "Guinea";
    e[CB.V10v.GUB] = "Guinea-Bissau";
    e[CB.V10v.GCI] = "Guernsey";
    e[CB.V10v.GUY] = "Guyana";
    e[CB.V10v.HAI] = "Haiti";
    e[CB.V10v.HON] = "Honduras";
    e[CB.V10v.HKG] = "Hong Kong";
    e[CB.V10v.HUN] = "Hungary";
    e[CB.V10v.ISL] = "Iceland";
    e[CB.V10v.IND] = "India";
    e[CB.V10v.INA] = "Indonesia";
    e[CB.V10v.IRI] = "Iran";
    e[CB.V10v.IRQ] = "Iraq";
    e[CB.V10v.IOM] = "Isle of MAN";
    e[CB.V10v.ISR] = "Israel";
    e[CB.V10v.IRL] = "Ireland";
    e[CB.V10v.ITA] = "Italy";
    e[CB.V10v.IVO] = "Cote d'Ivoire";
    e[CB.V10v.JAM] = "Jamaica";
    e[CB.V10v.JMY] = "Svalbard and Jan Mayen";
    e[CB.V10v.JPN] = "Japan";
    e[CB.V10v.JCI] = "Jersey";
    e[CB.V10v.JOR] = "Jordan";
    e[CB.V10v.KAZ] = "Kazakhstan";
    e[CB.V10v.KEN] = "Kenya";
    e[CB.V10v.KBA] = "Kiribati";
    e[CB.V10v.KOR] = "South Korea";
    e[CB.V10v.KYR] = "Kyrgyzstan";
    e[CB.V10v.KUW] = "Kuwait";
    e[CB.V10v.LAO] = "Laos";
    e[CB.V10v.LAT] = "Latvia";
    e[CB.V10v.LBN] = "Lebanon";
    e[CB.V10v.LES] = "Lesotho";
    e[CB.V10v.LBR] = "Liberia";
    e[CB.V10v.LBY] = "Libya";
    e[CB.V10v.LIE] = "Liechtenstein";
    e[CB.V10v.LTU] = "Lithuania";
    e[CB.V10v.LUX] = "Luxembourg";
    e[CB.V10v.MAC] = "Macao";
    e[CB.V10v.MAD] = "Madagascar";
    e[CB.V10v.MAS] = "Malaysia";
    e[CB.V10v.MLI] = "Mali";
    e[CB.V10v.MLT] = "Malta";
    e[CB.V10v.MWI] = "Malawi";
    e[CB.V10v.MFR] = "Martinique";
    e[CB.V10v.MAU] = "Mauritania";
    e[CB.V10v.MRI] = "Mauritius";
    e[CB.V10v.MYF] = "Mayotte";
    e[CB.V10v.MEX] = "Mexico";
    e[CB.V10v.MIC] = "Micronesia";
    e[CB.V10v.MDA] = "Moldova";
    e[CB.V10v.MNC] = "Monaco";
    e[CB.V10v.MON] = "Mongolia";
    e[CB.V10v.MSG] = "Montserrat";
    e[CB.V10v.MAR] = "Morocco";
    e[CB.V10v.MOZ] = "Mozambique";
    e[CB.V10v.MYA] = "Myanmar(Burma)";
    e[CB.V10v.NAM] = "Namibia";
    e[CB.V10v.NEP] = "Nepal";
    e[CB.V10v.NED] = "Netherlands";
    e[CB.V10v.AHO] = "Netherlands Antilles";
    e[CB.V10v.NCF] = "New caledonia";
    e[CB.V10v.NET] = "United Nations";
    e[CB.V10v.NZL] = "New zealand";
    e[CB.V10v.NCA] = "Nicaragua";
    e[CB.V10v.NGR] = "Nigeria";
    e[CB.V10v.NNN] = "Niue";
    e[CB.V10v.NNA] = "Norfolk";
    e[CB.V10v.NMI] = "Northern Mariana";
    e[CB.V10v.NOR] = "Norway";
    e[CB.V10v.OTM] = "Timor-Leste";
    e[CB.V10v.PAK] = "Pakistan";
    e[CB.V10v.PAL] = "Palau";
    e[CB.V10v.PLE] = "Palestine";
    e[CB.V10v.PAN] = "Panama";
    e[CB.V10v.PNG] = "Papua new GUINEA";
    e[CB.V10v.PAR] = "Paraguay";
    e[CB.V10v.PER] = "Peru";
    e[CB.V10v.PHI] = "Philippines";
    e[CB.V10v.PIG] = "Pitcairn";
    e[CB.V10v.POL] = "Poland";
    e[CB.V10v.POR] = "Portugal";
    e[CB.V10v.PUR] = "Puerto rico";
    e[CB.V10v.QAT] = "Qatar";
    e[CB.V10v.RUF] = "Reunion";
    e[CB.V10v.ROU] = "Romania";
    e[CB.V10v.URS] = "Russian Federation";
    e[CB.V10v.RUS] = "Russian Federation";
    e[CB.V10v.ZAR] = "Russian Federation";
    e[CB.V10v.ESA] = "El Salvador";
    e[CB.V10v.SMR] = "San Marino";
    e[CB.V10v.SAO] = "Sao Tome and PRINCIPE";
    e[CB.V10v.SCO] = "Scotland";
    e[CB.V10v.SEN] = "Senegal";
    e[CB.V10v.YUG] = "Serbia(Yugoslavia)";
    e[CB.V10v.SRB] = "Serbia(Yugoslavia)";
    e[CB.V10v.SEY] = "Seychelles";
    e[CB.V10v.SIN] = "Singapore";
    e[CB.V10v.SVK] = "Slovakia";
    e[CB.V10v.SLO] = "Slovenia";
    e[CB.V10v.SOM] = "Somalia";
    e[CB.V10v.RSA] = "South africa";
    e[CB.V10v.SRI] = "Sri lanka";
    e[CB.V10v.SUD] = "Sudan";
    e[CB.V10v.SUR] = "Suriname";
    e[CB.V10v.SVN] = "Svalbard and Jan Mayen";
    e[CB.V10v.SWE] = "Sweden";
    e[CB.V10v.SUI] = "Switzerland";
    e[CB.V10v.SYR] = "Syria";
    e[CB.V10v.HGB] = "Saint Helena";
    e[CB.V10v.PGB] = "Saint Pierre and Miquelon";
    e[CB.V10v.TJK] = "Tajikistan";
    e[CB.V10v.TAN] = "Tanzania";
    e[CB.V10v.THA] = "Thailand";
    e[CB.V10v.TKI] = "Tokelau";
    e[CB.V10v.TRI] = "Trinidad and Tobago";
    e[CB.V10v.TUN] = "Tunisia";
    e[CB.V10v.TCI] = "Turks and Caicos Islands";
    e[CB.V10v.TUR] = "Turkey";
    e[CB.V10v.TKM] = "Turkmenistan";
    e[CB.V10v.UGA] = "Uganda";
    e[CB.V10v.UKR] = "Ukraine";
    e[CB.V10v.UAE] = "United Arab Emirates";
    e[CB.V10v.USA] = "United States of America";
    e[CB.V10v.URU] = "Uruguay";
    e[CB.V10v.UZB] = "Uzbekistan";
    e[CB.V10v.VEN] = "Venezuela";
    e[CB.V10v.VIE] = "Viet Nam";
    e[CB.V10v.WLS] = "Wales";
    e[CB.V10v.WFR] = "Wallis and Futuna";
    e[CB.V10v.YEM] = "Yemen";
    e[CB.V10v.ZAM] = "Zambia";
    e[CB.V10v.ZIM] = "Zimbabwe";
    e[CB.V10v.ZRE] = "Congo-Kinshasa(Zaire)";
    e[CB.V10v.NKO] = "North korea";
    e[CB.V10v.MDV] = "Maldives";
    e[CB.V10v.MSH] = "Marshall Islands";
    e[CB.V10v.OMN] = "Oman";
    e[CB.V10v.NAU] = "Nauru";
    e[CB.V10v.NIG] = "Niger";
    e[CB.V10v.SAU] = "Saudi Arabia";
    e[CB.V10v.TOG] = "Togo";
    e[CB.V10v.TON] = "Tonga";
    e[CB.V10v.VAN] = "Vanuatu";
    e[CB.V10v.VAT] = "Vatican City";
    e[CB.V10v.TUV] = "Tuvalu";
    e[CB.V10v.SWA] = "Swaziland";
    e[CB.V10v.SIE] = "Sierra Leone";
    e[CB.V10v.SLU] = "Saint Lucia";
    e[CB.V10v.PAP] = "Papua New Guinea";
    e[CB.V10v.SVI] = "St Vincent and The Grenadines";
    e[CB.V10v.SAM] = "Samoa";
    e[CB.V10v.SKI] = "St Kitts and NEVIS";
    e[CB.V10v.SAL] = "Solomon islands";
    e[CB.V10v.RWA] = "Rwanda";
    e[CB.V10v.TPE] = "Taiwan";
    e[CB.V10v.NIR] = "Northern Ireland";
    e[CB.V10v.GBR] = "United Kingdom(Great Britain)";
    e[CB.V10v.KOS] = "Kosovo";
    var b = []
      , d = function(c) {
        this.n = c;
        void 0 === this.n && (this.n = CB.V10v.NONE);
        if (0 == b.length) {
            c = 0;
            for (var f in CB.V10v)
                CB.V10v.hasOwnProperty(f) && (b[c] = f,
                c += 1);
            for (f = 0; f < b.length; f++) {
                var g = e[f];
                void 0 === g && (g = e[0]);
                c = b[f];
                1 < c.length && (g = window.escape(g),
                g = " background-image: url( " + CB.V10z() + "Media/Flags/Flags16/" + g + ".png ) !important;",
                CB.V110.V111(".cls-" + c, g + "background-repeat:no-repeat; background-position:center center;"))
            }
        }
    };
    d.prototype.V112 = function() {
        return b[this.n]
    }
    ;
    d.prototype.getStrFlag = function() {
        return e[this.n] ? e[this.n] : e[CB.V10v.NONE]
    }
    ;
    return d
}();
"use strict";
CB.Vq = {
    V113: function() {
        this.V114 || (this.V115() && (this.V114 = "iOS" + this.V115()),
        this.V116() && (this.V114 = "Andr" + this.V116()),
        this.V117() && (this.V114 = "Win"),
        this.V118() && (this.V114 = "Ux"),
        this.V119() && (this.V114 = "Mac"),
        this.V114 = navigator.platform);
        return this.V114
    },
    V11a: function() {
        var e = "X";
        this.V117() ? e = "W" : this.V119() ? e = "M" : this.V11b() || this.V11c() ? e = "I" : this.V11d() ? e = "A" : this.V118() && (e = "L");
        return e
    },
    V11e: function() {
        return this.V113() + " " + String.f("{0}/{1}/{2}, cpus={3}", window.innerWidth, window.innerHeight, window.devicePixelRatio, this.V38())
    },
    V34: function() {
        return "cordova" === CB.V1b.V100("client") || !!window.cordova
    },
    V37: function() {
        4;
        return /Kindle|Silk|KFAPW|KFARWI|KFASWI|KFFOWI|KFJW|KFMEWI|KFOT|KFSAW|KFSOWI|KFTBW|KFTHW|KFTT|WFFOWI/i.test(navigator.userAgent) ? !0 : /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|bada|Opera Mini/i.test(navigator.userAgent)
    },
    V11f: function() {
        return !CB.Vq.V37() && 1400 < screen.width && 900 <= screen.height
    },
    Vr: function() {
        return -1 < navigator.userAgent.toLowerCase().indexOf(" electron/")
    },
    V11g: function() {
        var e = document.documentElement;
        e.requestFullscreen ? e.requestFullscreen() : e.webkitrequestFullscreen ? e.webkitrequestFullscreen() : e.mozrequestFullscreen ? e.mozrequestFullscreen() : e.msrequestFullscreen && e.msrequestFullscreen()
    },
    V11h: function() {
        return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || (screen.availHeight || screen.height - 30) <= window.innerHeight
    },
    V11i: function() {
        7;
        return 1E3 <= screen.width && 760 <= screen.height || 1E3 <= screen.height
    },
    V11b: function() {
        return /iPhone/i.test(navigator.userAgent) || /iPod/i.test(navigator.userAgent)
    },
    V11c: function() {
        return /iPad/i.test(navigator.userAgent)
    },
    V115: function() {
        return parseFloat(("" + (/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ""])[1]).replace("undefined", "3_2").replace("_", ".").replace("_", "")) || !1
    },
    V117: function() {
        return /Win32/i.test(navigator.platform)
    },
    V118: function() {
        return /Linux/i.test(navigator.platform)
    },
    V119: function() {
        return /Mac/i.test(navigator.platform)
    },
    isTouchDevice: function() {
        void 0 === this.V11j && (this.V11j = this.V37() || "ontouchstart"in window || 0 < navigator.MaxTouchPoints || 0 < navigator.msMaxTouchPoints);
        return this.V11j
    },
    V8x: function() {
        try {
            return window.self !== window.top && -1 == document.referrer.search(/google/i) && -1 == document.referrer.search(/bing/i)
        } catch (e) {
            return !0
        }
    },
    V11k: function() {
        if (void 0 !== window.screenLeft)
            return new CB.Point(window.screenLeft,window.screenTop);
        if (void 0 !== window.screenX)
            return new CB.Point(window.screenX,window.screenY)
    },
    V11l: function() {
        var e = window
          , b = document
          , d = b.documentElement;
        b = b.getElementsByTagName("body")[0];
        return new CB.Size(e.innerWidth || d.clientWidth || b.clientWidth,e.innerHeight || d.clientHeight || b.clientHeight)
    },
    V11m: function() {
        return String(String(new Date).split("(")[1]).split(")")[0]
    },
    V11n: function() {
        return 1400 <= screen.width && 900 <= screen.height
    },
    V11o: function(e) {
        return screen.width * (e || 1) < screen.height
    },
    V11p: function() {
        return navigator.language
    },
    V11q: function() {
        return navigator.systemLanguage || window.navigator.language
    },
    V6u: function() {
        if (document.inputEncoding)
            switch (document.inputEncoding) {
            default:
                return 1252;
            case "ISO-8859-11":
                return 874;
            case "Windows-31J":
                return 932;
            case "ISO-8859-2":
                return 1250;
            case "ISO-8859-5":
                return 1251;
            case "ISO-8859-1":
                return 1252;
            case "ISO-8859-7":
                return 1253;
            case "ISO-8859-9":
                return 1254;
            case "ISO-8859-8":
                return 1255;
            case "ISO-8859-6":
                return 1256;
            case "ISO-8859-13":
                return 1257
            }
        else
            return 1252
    },
    V11r: function() {
        var e = -1;
        "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (e = parseFloat(RegExp.$1));
        return e
    },
    V11s: function() {
        return this.V37() || this.isTouchDevice()
    },
    V11t: function() {
        return void 0 !== Function.prototype.bind && "undefined" !== typeof console && "WebSocket"in window ? 11 <= this.V11u() ? !0 : this.V11v() && 4.2 >= this.V116() || this.V11w() && 535 > this.V11x() && !this.V11y() ? !1 : !0 : !1
    },
    V11z: function() {
        return document.location && document.location.protocol ? "http:" != document.location.protocol : window.location && window.location.protocol ? "http:" != window.location.protocol : !1
    },
    V11u: function() {
        var e = window.navigator.userAgent
          , b = e.indexOf("MSIE ");
        if (0 < b)
            return parseInt(e.substring(b + 5, e.indexOf(".", b)), 10);
        if (0 < e.indexOf("Trident/"))
            return b = e.indexOf("rv:"),
            parseInt(e.substring(b + 3, e.indexOf(".", b)), 10);
        b = e.indexOf("Edge/");
        if (0 < b || 0 < e.indexOf("Edg/"))
            return parseInt(e.substring(b + 5, e.indexOf(".", b)), 10)
    },
    V120: function() {
        var e = window.navigator.userAgent.match(/Firefox\/([0-9]+)\./);
        return e ? parseInt(e[1]) : 0
    },
    V121: function() {
        var e = this.V11u();
        return e ? 12 > e : !1
    },
    canRunWebAssembly: function() {
        return "object" === typeof WebAssembly
    },
    V122: function() {
        var e = null;
        try {
            e = !!new ActiveXObject("htmlfile")
        } catch (b) {
            e = !1
        }
        return e
    },
    V123: function() {
        return null != window.webkitURL
    },
    V11y: function() {
        return -1 != navigator.userAgent.indexOf("Chrome")
    },
    V124: function() {
        return -1 != navigator.userAgent.indexOf("Safari") && -1 == navigator.userAgent.indexOf("Chrome") && -1 == navigator.userAgent.indexOf("CriOS")
    },
    V125: function() {
        return -1 != navigator.userAgent.indexOf("Firefox")
    },
    V126: function() {
        return 0 < this.V11u()
    },
    V127: function() {
        return 0 < this.V11u() && 12 > this.V11u()
    },
    V128: function() {
        return -1 == navigator.userAgent.indexOf("Edge") && -1 != navigator.userAgent.indexOf("Edg")
    },
    V129: function() {
        return -1 != navigator.userAgent.indexOf("OPR")
    },
    V35: function(e) {
        var b = this.V11u()
          , d = this.V120()
          , c = parseFloat(this.V11x());
        b = CB.Vq.canRunWebAssembly() || this.V11y() || 11 <= b || 54 <= d || 600 < c;
        return b = CB.Vq.V38() ? b && CB.Vq.V38() >= (e || 4) : b && CB.Vq.canRunWebAssembly()
    },
    V36: function() {
        var e = this.V11u()
          , b = this.V120()
          , d = parseFloat(this.V11x());
        return !(this.V11y() || 11 <= e || 54 <= b || 600 < d || CB.Vq.canRunWebAssembly())
    },
    V11v: function() {
        return 0 <= navigator.userAgent.indexOf("Android") && -1 == navigator.userAgent.indexOf("Chrome")
    },
    V11d: function() {
        return 0 < this.V116()
    },
    V11w: function() {
        return 0 <= navigator.userAgent.indexOf("Windows") && 0 <= navigator.userAgent.indexOf("Safari")
    },
    V11x: function() {
        var e = navigator.userAgent;
        return 0 <= e.indexOf("Safari") ? parseFloat(e.slice(e.indexOf("Safari") + 7)) : 0
    },
    V12a: function(e) {
        if (navigator.clipboard)
            navigator.clipboard.writeText(e);
        else {
            var b = document.createElement("textarea");
            b.value = e;
            document.body.appendChild(b);
            b.focus();
            b.select();
            try {
                document.execCommand("copy")
            } catch (d) {}
            document.body.removeChild(b)
        }
    },
    V116: function() {
        var e = navigator.userAgent;
        return 0 <= e.indexOf("Android") ? parseFloat(e.slice(e.indexOf("Android") + 8)) : 0
    },
    V12b: function(e) {
        if (window.WebGLRenderingContext)
            for (var b = document.createElement("canvas"), d = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"], c = !1, f = 0; 4 > f; f++)
                try {
                    if ((c = b.getContext(d[f])) && "function" == typeof c.getParameter)
                        return e ? {
                            name: d[f],
                            V12c: c
                        } : !0
                } catch (g) {}
        return !1
    },
    runsOnChessBaseDomain: function() {
        return -1 != document.URL.search(/chessbase.com/i) && -1 == document.URL.search(/cloudserver/i) || -1 != document.URL.search(/playchess.com/i) || -1 != document.URL.search(/schach.de/i)
    },
    V12d: function() {
        return -1 != document.URL.search(/wir.chessbase.com/i) || -1 != document.URL.search(/videotraining.chessbase.com/i) || -1 != document.URL.search(/test.chessbase.com/i) || -1 != document.URL.search(/localhost/i)
    },
    runsOnChessBaseCom: function() {
        return -1 != document.URL.search(/chessbase.com/i)
    },
    V12e: function() {
        return -1 != document.URL.search(/live.chessbase.com/i) || -1 != document.URL.search(/acc.chessbase.com/i)
    },
    V12f: function() {
        return -1 != document.URL.search(/videos.chessbase.com/i) || -1 != document.URL.search(/videostest.chessbase.com/i)
    },
    V12g: function() {
        return window.devicePixelRatio
    },
    V12h: function(e) {
        this.V12i = e
    },
    pixToZoom: function(e) {
        return this.V12i ? e / this.V12i : window.devicePixelRatio ? e / window.devicePixelRatio : e
    },
    V12j: function(e) {
        return this.V12i ? e * this.V12i : window.devicePixelRatio ? e * window.devicePixelRatio : e
    },
    V38: function() {
        return window.navigator.hardwareConcurrency ? window.navigator.hardwareConcurrency : 0
    },
    V12k: function() {
        return navigator.deviceMemory ? navigator.deviceMemory : 0
    },
    V12l: function() {
        return this.V12k() + navigator.platform + this.V38() + this.V11q() + this.V11m()
    },
    browser: {
        V12m: function() {
            return {
                browser: this.search(this.data.browser),
                version: this.search(navigator.userAgent) || this.search(navigator.appVersion),
                V12n: this.search(this.data.V12n)
            }
        },
        search: function(e) {
            if ("object" === typeof e)
                for (var b = 0; b < e.length; b++) {
                    var d = e[b].string
                      , c = e[b].prop;
                    this.V12o = e[b].versionSearch || e[b].identity;
                    if (d) {
                        if (-1 != d.indexOf(e[b].subString))
                            return e[b].identity
                    } else if (c)
                        return e[b].identity
                }
            else
                return b = e.indexOf(this.V12o),
                -1 == b ? void 0 : parseFloat(e.substr(b + this.V12o.length + 1))
        },
        data: {
            browser: [{
                string: navigator.userAgent,
                subString: "Chrome",
                identity: "Chrome"
            }, {
                string: navigator.userAgent,
                subString: "OmniWeb",
                versionSearch: "OmniWeb/",
                identity: "OmniWeb"
            }, {
                string: navigator.vendor,
                subString: "Apple",
                identity: "Safari",
                versionSearch: "Version"
            }, {
                prop: window.opera,
                identity: "Opera",
                versionSearch: "Version"
            }, {
                string: navigator.vendor,
                subString: "iCab",
                identity: "iCab"
            }, {
                string: navigator.vendor,
                subString: "KDE",
                identity: "Konqueror"
            }, {
                string: navigator.userAgent,
                subString: "Firefox",
                identity: "Firefox"
            }, {
                string: navigator.vendor,
                subString: "Camino",
                identity: "Camino"
            }, {
                string: navigator.userAgent,
                subString: "Netscape",
                identity: "Netscape"
            }, {
                string: navigator.userAgent,
                subString: "MSIE",
                identity: "Explorer",
                versionSearch: "MSIE"
            }, {
                string: navigator.userAgent,
                subString: "Gecko",
                identity: "Mozilla",
                versionSearch: "rv"
            }, {
                string: navigator.userAgent,
                subString: "Mozilla",
                identity: "Netscape",
                versionSearch: "Mozilla"
            }],
            V12n: [{
                string: navigator.platform,
                subString: "Win",
                identity: "Windows"
            }, {
                string: navigator.platform,
                subString: "Mac",
                identity: "Mac"
            }, {
                string: navigator.userAgent,
                subString: "iPhone",
                identity: "iPhone/iPod"
            }, {
                string: navigator.userAgent,
                subString: "iPad",
                identity: "iPad"
            }, {
                string: navigator.userAgent,
                subString: "Android",
                identity: "Android"
            }, {
                string: navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }]
        }
    }
};
"use strict";
CB.V6r = {
    ENG: 0,
    DEU: 1,
    GER: 1,
    FRA: 2,
    ESP: 3,
    ITA: 4,
    NED: 5,
    POR: 6,
    DEF: 7,
    SLO: 8,
    SWE: 9,
    BAS: 10,
    SVK: 11,
    POL: 12,
    CZE: 13,
    CAT: 14,
    TRK: 15,
    MGY: 16,
    RUS: 17,
    GRK: 18,
    ROM: 19,
    CHN: 20,
    UN: 21,
    NOR: 22,
    HEB: 23,
    UKR: 24,
    VIE: 25,
    ARA: 26,
    SER: 27,
    LIT: 28,
    BRA: 29,
    FAR: 30,
    CRO: 31,
    GAL: 32,
    HIN: 33,
    V6s: function() {
        return void 0 !== navigator.languages && navigator.languages.length ? navigator.languages[0] : void 0 !== navigator.language ? navigator.language : void 0 !== navigator.userLanguage ? navigator.userLanguage : "en-en"
    },
    V12p: function() {
        return this.V6s().slice(0, 2)
    },
    getAccountPageLangSegment: function() {
        var e = this.V12p();
        return -1 == ["en", "de", "es", "fr"].findIndex(function(b) {
            return b == e
        }) ? "en" : e
    },
    V12q: function() {
        var e = CB.V6r.V6s();
        return this.V12r(e)
    },
    V12r: function(e) {
        return -1 < e.indexOf("de") ? this.DEU : -1 < e.indexOf("es") ? this.ESP : -1 < e.indexOf("nl") ? this.NED : -1 < e.indexOf("fr") ? this.FRA : -1 < e.indexOf("it") ? this.ITA : -1 < e.indexOf("sl") ? this.SLO : -1 < e.indexOf("sv") ? this.SWE : -1 < e.indexOf("ro") ? this.ROM : -1 < e.indexOf("zh") ? this.CHN : -1 < e.indexOf("ru") ? this.RUS : -1 < e.indexOf("no") ? this.NOR : -1 < e.indexOf("pl") ? this.POL : -1 < e.indexOf("he") ? this.HEB : -1 < e.indexOf("ca") ? this.CAT : -1 < e.indexOf("tr") ? this.TRK : -1 < e.indexOf("sl") ? this.SLO : -1 < e.indexOf("el") ? this.GRK : -1 < e.indexOf("uk") ? this.UKR : -1 < e.indexOf("vi") ? this.VIE : -1 < e.indexOf("ar") ? this.ARA : -1 < e.indexOf("sr") ? this.SER : -1 < e.indexOf("lt") ? this.LIT : -1 < e.indexOf("pt-br") || -1 < e.indexOf("pt") ? this.BRA : -1 < e.indexOf("fa") ? this.FAR : -1 < e.indexOf("ga") ? this.GAL : -1 < e.indexOf("hr") ? this.CRO : -1 < e.indexOf("hi") ? this.HIN : -1 < e.indexOf("cs") ? this.CZE : this.ENG
    },
    V12s: function(e) {
        switch (e) {
        default:
        case CB.V6r.ENG:
            return "en";
        case CB.V6r.DEU:
            return "de";
        case CB.V6r.ESP:
            return "es";
        case CB.V6r.NED:
            return "nl";
        case CB.V6r.FRA:
            return "fr";
        case CB.V6r.ITA:
            return "it";
        case CB.V6r.POR:
            return "pt";
        case CB.V6r.SLO:
            return "sl";
        case CB.V6r.SWE:
            return "sv";
        case CB.V6r.ROM:
            return "ro";
        case CB.V6r.CHN:
            return "zh";
        case CB.V6r.RUS:
            return "ru";
        case CB.V6r.NOR:
            return "no";
        case CB.V6r.POL:
            return "pl";
        case CB.V6r.HEB:
            return "he";
        case CB.V6r.CAT:
            return "ca";
        case CB.V6r.TRK:
            return "tr";
        case CB.V6r.GRK:
            return "el";
        case CB.V6r.UKR:
            return "uk";
        case CB.V6r.VIE:
            return "vi";
        case CB.V6r.ARA:
            return "ar";
        case CB.V6r.SER:
            return "sr";
        case CB.V6r.LIT:
            return "lt";
        case CB.V6r.BRA:
            return "pt";
        case CB.V6r.FAR:
            return "fa";
        case CB.V6r.CRO:
            return "hr";
        case CB.V6r.GAL:
            return "ga";
        case CB.V6r.HIN:
            return "hi";
        case CB.V6r.CZE:
            return "cs"
        }
    },
    V12t: function(e) {
        switch (e) {
        default:
        case CB.V6r.ENG:
            return "en";
        case CB.V6r.DEU:
            return "de";
        case CB.V6r.ESP:
            return "es";
        case CB.V6r.FRA:
            return "fr";
        case CB.V6r.NED:
            return "nl";
        case CB.V6r.ITA:
            return "it"
        }
    },
    getRibbonFlagName: function(e) {
        switch (e) {
        default:
        case CB.V6r.ENG:
            return "en-us" == this.V6s() ? "us" : "gb";
        case CB.V6r.DEU:
            return "de-at" == this.V6s() ? "at" : "de";
        case CB.V6r.ESP:
            return "es";
        case CB.V6r.NED:
            return "nl";
        case CB.V6r.ROM:
            return "ro";
        case CB.V6r.CHN:
            switch (this.V6s()) {
            default:
            case "zh-cn":
                return "cn";
            case "zh-tw":
                return "tw";
            case "zh-sg":
                return "si";
            case "zh-hk":
                return "hk"
            }
        case CB.V6r.FRA:
            return "fr";
        case CB.V6r.RUS:
            return "ru";
        case CB.V6r.NOR:
            return "no";
        case CB.V6r.ITA:
            return "it";
        case CB.V6r.POL:
            return "pl";
        case CB.V6r.UN:
            return "_United_Nations";
        case CB.V6r.HEB:
            return "il";
        case CB.V6r.CAT:
            return "_Catalonia";
        case CB.V6r.TRK:
            return "tr";
        case CB.V6r.SLO:
            return "si";
        case CB.V6r.GRK:
            return "gr";
        case CB.V6r.UKR:
            return "ua";
        case CB.V6r.VIE:
            return "vn";
        case CB.V6r.ARA:
            return "sa";
        case CB.V6r.SER:
            return "rs";
        case CB.V6r.LIT:
            return "lt";
        case CB.V6r.BRA:
            return "br";
        case CB.V6r.FAR:
            return "ir";
        case CB.V6r.CRO:
            return "hr";
        case CB.V6r.GAL:
            return "ie";
        case CB.V6r.HIN:
            return "in";
        case CB.V6r.CZE:
            return "cz"
        }
    }
};
CB.V6r.V12u = function(e) {
    switch (e) {
    default:
    case CB.V6r.ENG:
        return "ENG";
    case CB.V6r.DEU:
    case CB.V6r.GER:
        return "GER";
    case CB.V6r.ESP:
        return "ESP";
    case CB.V6r.NED:
        return "NED";
    case CB.V6r.ROM:
        return "ROM";
    case CB.V6r.CHN:
        return "CHN";
    case CB.V6r.FRA:
        return "FRA";
    case CB.V6r.RUS:
        return "RUS";
    case CB.V6r.NOR:
        return "NOR";
    case CB.V6r.POL:
        return "POL";
    case CB.V6r.ITA:
        return "ITA";
    case CB.V6r.HEB:
        return "HEB";
    case CB.V6r.CAT:
        return "CAT";
    case CB.V6r.TRK:
        return "TRK";
    case CB.V6r.SLO:
        return "SLO";
    case CB.V6r.UN:
        return "UN";
    case CB.V6r.GRK:
        return "EL";
    case CB.V6r.UKR:
        return "UKR";
    case CB.V6r.VIE:
        return "VIE";
    case CB.V6r.ARA:
        return "ARA";
    case CB.V6r.SER:
        return "SER";
    case CB.V6r.LIT:
        return "LIT";
    case CB.V6r.BRA:
        return "BRA";
    case CB.V6r.FAR:
        return "FAR";
    case CB.V6r.CRO:
        return "CRO";
    case CB.V6r.GAL:
        return "GAL";
    case CB.V6r.HIN:
        return "HIN";
    case CB.V6r.CZE:
        return "CZE"
    }
}
;
CB.V6r.getNativeLangName = function(e) {
    switch (e) {
    default:
    case CB.V6r.ENG:
        return "English";
    case CB.V6r.DEU:
        return "Deutsch";
    case CB.V6r.ESP:
        return "Espa\u00f1ol";
    case CB.V6r.NED:
        return "Nederlands";
    case CB.V6r.ROM:
        return "Rom\u00e2n";
    case CB.V6r.CHN:
        return "\u4e2d\u6587";
    case CB.V6r.FRA:
        return "Fran\u00e7ais";
    case CB.V6r.RUS:
        return "\u0420\u0443\u0441\u0441\u043a\u0438\u0439";
    case CB.V6r.NOR:
        return "Norsk";
    case CB.V6r.POL:
        return "Polski";
    case CB.V6r.ITA:
        return "Italiano";
    case CB.V6r.HEB:
        return "\u05e2\u05d1\u05e8\u05d9\u05ea";
    case CB.V6r.CAT:
        return "Catal\u00e0";
    case CB.V6r.TRK:
        return "T\u00fcrk\u00e7e";
    case CB.V6r.SLO:
        return "Slovenski";
    case CB.V6r.GRK:
        return "\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac";
    case CB.V6r.UKR:
        return "\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430";
    case CB.V6r.VIE:
        return "Ti\u1ebfng Vi\u1ec7t";
    case CB.V6r.ARA:
        return "\u0627\u0644\u0639\u0631\u0628\u064a\u0629";
    case CB.V6r.SER:
        return "Srbski";
    case CB.V6r.LIT:
        return "Lietuvi\u0173";
    case CB.V6r.BRA:
        return "Portugu\u00eas";
    case CB.V6r.FAR:
        return "\u0641\u0627\u0631\u0633\u06cc";
    case CB.V6r.CRO:
        return "Hrvatski";
    case CB.V6r.GAL:
        return "Gaeilge";
    case CB.V6r.HIN:
        return "\u0939\u093f\u0928\u094d\u0926\u0940";
    case CB.V6r.CZE:
        return "\u010ce\u0161tina"
    }
}
;
CB.V6r.V12v = function(e) {
    var b = [];
    e.forEach(function(d) {
        b.push(this.getNativeLangName(d))
    }
    .bind(this));
    return b
}
;
CB.V6r.V12w = function(e) {
    var b = [];
    e.forEach(function(d) {
        b.push(this.getRibbonFlagName(d))
    }
    .bind(this));
    return b
}
;
"use strict";
CB.V12x = function() {
    var e = function(d, c) {
        this.fLat = d;
        this.fLong = c;
        this.V12z = this.V12y = 0
    }
      , b = function(d) {
        return Math.PI / 180 * d
    };
    e.prototype = {
        isValid: function() {
            return 0 != this.fLat || 0 != this.fLong
        },
        toString: function() {
            return ""
        },
        fromDataBuf: function(d) {
            this.fLat = d.readFloat32();
            this.fLong = d.readFloat32();
            this.V12z = d.V3im()
        },
        V3il: function(d) {
            d.writeFloat32(this.fLat);
            d.writeFloat32(this.fLong);
            d.V3ij(this.V12z)
        },
        getSphericDist: function(d) {
            return this.fLat == d.fLat && this.fLong == d.fLong ? 0 : 6378 * Math.acos(Math.sin(b(this.fLat)) * Math.sin(b(d.fLat)) + Math.cos(b(this.fLat)) * Math.cos(b(d.fLat)) * Math.cos(b(d.fLong - this.fLong)))
        },
        getAzimuthDirection: function(d) {
            return -Math.atan2(Math.sin(b(this.fLong - d.fLong)) * Math.cos(b(this.fLat)), Math.cos(b(this.fLat)) * Math.sin(b(d.fLat)) - Math.sin(b(this.fLat)) * Math.cos(b(d.fLat)) * Math.cos(b(this.fLong - d.fLong)))
        },
        getNewPoint: function(d, c) {
            var f = d / 6378;
            d = Math.acos(Math.cos(f) * Math.cos(b(90 - this.fLat)) + Math.sin(b(90 - this.fLat)) * Math.sin(f) * Math.cos(b(c)));
            c = Math.asin(Math.sin(f) * Math.sin(b(c)) / Math.sin(d));
            return new CB.V12x(90 - d / (Math.PI / 180),c / (Math.PI / 180) + this.V130)
        },
        fromBrowser: function() {
            navigator.geolocation.getCurrentPosition(function(d) {
                this.fLat = d.coords.latitude;
                this.fLong = d.coords.longitude;
                this.V12y = d.coords.altitude
            }, function(d) {}, {
                enableHighAccuracy: !1,
                timeout: 2E4,
                maximumAge: "Infinite"
            })
        }
    };
    return e
}();
"NOMINIFY=w,h,topLeft";
"use strict";
CB.Point = function() {
    var e = function(b, d) {
        "object" == typeof b && "undefined" == typeof d ? void 0 != b.clientX ? this.set(b.clientX, b.clientY) : b.touches && b.touches.length ? this.set(b.touches[0].pageX, b.touches[0].pageY) : void 0 != b.pageX && this.set(b.pageX, b.pageY) : this.set(b, d)
    };
    e.prototype.set = function(b, d) {
        this.x = b;
        this.y = d
    }
    ;
    e.prototype.add = function(b) {
        return new CB.Point(this.x + b.x,this.y + b.y)
    }
    ;
    e.prototype.subtract = function(b) {
        return new CB.Point(this.x - b.x,this.y - b.y)
    }
    ;
    e.prototype.V131 = function(b) {
        b = this.subtract(b);
        return Math.sqrt(b.x * b.x + b.y * b.y)
    }
    ;
    e.prototype.V132 = function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    }
    ;
    e.prototype.toInt = function() {
        this.x = Math.floor(this.x + .5);
        this.y = Math.floor(this.y + .5)
    }
    ;
    e.prototype.cloneIntPoint = function() {
        var b = new e(this.x,this.y);
        b.toInt();
        return b
    }
    ;
    e.prototype.toString = function() {
        return "(" + this.x + "," + this.y + ")"
    }
    ;
    e.prototype.getX = function() {
        return this.x
    }
    ;
    e.prototype.getY = function() {
        return this.y
    }
    ;
    return e
}();
CB.Size = function() {
    var e = function(b, d) {
        this.w = b;
        this.h = d
    };
    e.prototype.toString = function() {
        return "w=" + this.w + ", h=" + this.h
    }
    ;
    e.prototype.V133 = function(b) {
        return new CB.Point((b.w - this.w) / 2,(b.h - this.h) / 2)
    }
    ;
    return e
}();
CB.V134 = function() {
    var e = function(b, d, c, f) {
        this.left = b || 0;
        this.top = d || 0;
        this.right = c || 0;
        this.bottom = f || 0
    };
    Object.defineProperty(e.prototype, "w", {
        get: function() {
            return this.getSize().w
        },
        set: function(b) {
            this.right = this.left + b - 1
        },
        enumerable: !0
    });
    Object.defineProperty(e.prototype, "h", {
        get: function() {
            return this.getSize().h
        },
        set: function(b) {
            this.bottom = this.top + b - 1
        },
        enumerable: !0
    });
    Object.defineProperty(e.prototype, "topLeft", {
        get: function() {
            return new CB.Point(this.left,this.top)
        },
        set: function(b) {
            var d = this.w
              , c = this.h;
            this.left = b.x;
            this.top = b.y;
            this.w = d;
            this.h = c
        },
        enumerable: !0
    });
    e.prototype.V135 = function(b) {
        this.left = b.left;
        this.top = b.top;
        this.right = b.right;
        this.bottom = b.bottom
    }
    ;
    e.prototype.V136 = function(b, d) {
        this.left = b.x;
        this.top = b.y;
        this.right = b.x + d.w - 1;
        this.bottom = b.y + d.h - 1
    }
    ;
    e.prototype.V137 = function(b) {
        this.left = b.left;
        this.top = b.top;
        this.right = b.right;
        this.bottom = b.bottom
    }
    ;
    e.prototype.V138 = function(b, d, c, f) {
        this.left = Math.min(b, c);
        this.right = Math.max(b, c);
        this.top = Math.min(d, f);
        this.bottom = Math.max(d, f)
    }
    ;
    e.prototype.toString = function() {
        return "l=" + this.left + ", t=" + this.top + " " + this.getSize().toString()
    }
    ;
    e.prototype.getPos = function() {
        return new CB.Point(this.left,this.top)
    }
    ;
    e.prototype.V139 = function() {
        return new CB.Point(this.left,this.top)
    }
    ;
    e.prototype.V13a = function() {
        return new CB.Point(this.right,this.top)
    }
    ;
    e.prototype.V13b = function() {
        return new CB.Point(this.right,this.bottom)
    }
    ;
    e.prototype.V13c = function() {
        return new CB.Point(this.left,this.bottom)
    }
    ;
    e.prototype.getSize = function() {
        return new CB.Size(this.right - this.left + 1,this.bottom - this.top + 1)
    }
    ;
    e.prototype.getUnion = function(b) {
        try {
            var d = Math.min(Math.min(this.left, b.left), Math.min(this.right, b.right))
              , c = Math.max(Math.max(this.left, b.left), Math.max(this.right, b.right))
              , f = Math.min(Math.min(this.top, b.top), Math.min(this.bottom, b.bottom))
              , g = Math.max(Math.max(this.top, b.top), Math.max(this.bottom, b.bottom))
        } catch (h) {
            console.log("getUnion")
        }
        return new CB.V134(d,f,c,g)
    }
    ;
    e.prototype.V13d = function(b) {
        var d = new CB.V134(this.left,this.top,this.right,this.bottom);
        if (d.left < b.left || d.left >= b.right)
            d.left = b.left;
        if (d.right > b.right || d.right <= b.left)
            d.right = b.right;
        if (d.top < b.top || d.top >= b.bottom)
            d.top = b.top;
        if (d.bottom > b.bottom || d.bottom <= b.top)
            d.bottom = b.bottom;
        return d
    }
    ;
    e.prototype.isInside = function(b, d) {
        return b >= this.left && b <= this.right && d >= this.top && d <= this.bottom
    }
    ;
    e.prototype.getPath = function() {
        var b = new CB.V13e;
        b.push(this.V139());
        b.push(this.V13a());
        b.push(this.V13b());
        b.push(this.V13c());
        return b
    }
    ;
    e.prototype.move = function(b, d) {
        this.left += b;
        this.top += d;
        this.right += b;
        this.bottom += d
    }
    ;
    e.prototype.V13f = function(b, d) {
        this.left += b;
        this.right -= b;
        this.top += d;
        this.bottom -= d
    }
    ;
    e.prototype.expand = function(b, d) {
        this.V13f(-b, -d)
    }
    ;
    return e
}();
CB.V13g = function() {
    var e = function(b, d, c) {
        this.set(b, d, c)
    };
    e.prototype.set = function(b, d, c) {
        this.x = b;
        this.y = d;
        this.z = c
    }
    ;
    e.prototype.add = function(b) {
        return new CB.Vec(this.x + b.x,this.y + b.y,this.z + b.z)
    }
    ;
    e.prototype.subtract = function(b) {
        return new CB.Point(this.x - b.x,this.y - b.y,this.z - b.z)
    }
    ;
    e.prototype.V29 = function() {
        return void 0 !== this.z ? Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z) : Math.sqrt(this.x * this.x + this.y * this.y)
    }
    ;
    e.prototype.V13h = function() {
        this.x = -this.x;
        this.y = -this.y;
        void 0 !== this.z && (this.z = -this.z)
    }
    ;
    e.prototype.toString = function() {
        return void 0 !== this.z ? "(" + this.x + "," + this.y + "," + this.z + ")" : "(" + this.x + "," + this.y + ")"
    }
    ;
    return e
}();
CB.V13e = function() {
    var e = function() {
        this.subPaths = []
    };
    e.prototype.toString = function() {
        for (var b = "Pth:", d = 0; d < this.subPaths.length; d++)
            b += "s=",
            this.subPaths[d].forEach(function(c, f, g) {
                b += c.toString();
                g < f.length - 1 && (b += ",")
            });
        return b
    }
    ;
    e.prototype.push = function(b) {
        0 === this.subPaths.length && this.subPaths.push([]);
        this.subPaths[this.subPaths.length - 1].push(b)
    }
    ;
    e.prototype.exec = function(b) {
        b.beginPath();
        for (var d = 0; d < this.subPaths.length; d++)
            1 < this.subPaths[d].length && this.V13i(b, this.subPaths[d]);
        b.closePath()
    }
    ;
    e.prototype.V13i = function(b, d) {
        b.moveTo(d[0].x, d[0].y);
        for (var c = 1; c < d.length; c++)
            b.lineTo(d[c].x, d[c].y)
    }
    ;
    e.prototype.V13j = function(b) {
        for (var d = 0; d < this.subPaths.length; d++)
            3 < this.subPaths[d].length && (b.beginPath(),
            this.V13k(b, this.subPaths[d]),
            b.closePath())
    }
    ;
    e.prototype.V13k = function(b, d) {
        b.moveTo(d[0].x, d[0].y);
        var c;
        for (c = 1; c < d.length - 2; c++)
            b.quadraticCurveTo(d[c].x, d[c].y, (d[c].x + d[c + 1].x) / 2, (d[c].y + d[c + 1].y) / 2);
        b.quadraticCurveTo(d[c].x, d[c].y, d[c + 1].x, d[c + 1].y)
    }
    ;
    e.prototype.reverse = function() {
        this.subPaths.length && this.subPaths[this.subPaths.length - 1].reverse()
    }
    ;
    e.prototype.append = function(b) {
        this.subPaths = this.subPaths.concat(b.subPaths)
    }
    ;
    return e
}();
CB.V13l = {
    clipRect: function(e, b) {
        b.getPath().exec(e);
        e.clip()
    },
    V13m: function(e, b, d) {
        b = b.getPath();
        d = d.getPath();
        d.reverse();
        b.append(d);
        this.V13n(e, b)
    },
    V13o: function(e, b, d) {
        d && (e.strokeStyle = d);
        b.getPath().exec(e);
        e.stroke()
    },
    fillRect: function(e, b) {
        b.getPath().exec(e);
        e.fill()
    },
    V13n: function(e, b) {
        b.exec(e);
        e.clip()
    },
    V13p: function(e, b, d, c, f) {
        e.beginPath();
        e.moveTo(b, d);
        e.lineTo(c, f);
        e.stroke()
    },
    V13q: function(e, b, d, c, f, g) {
        c < 2 * g && (g = c / 2);
        f < 2 * g && (g = f / 2);
        e.beginPath();
        e.moveTo(b + g, d);
        e.arcTo(b + c, d, b + c, d + f, g);
        e.arcTo(b + c, d + f, b, d + f, g);
        e.arcTo(b, d + f, b, d, g);
        e.arcTo(b, d, b + c, d, g);
        e.stroke()
    },
    V13r: function(e, b, d, c) {
        (e = CB.V13l.V13s(e, d, c)) && window.saveAs(e, b)
    },
    V13s: function(e, b, d) {
        var c = document.createElement("canvas");
        c.width = b;
        c.height = d;
        e.data && e.data.length ? c.getContext("2d").putImageData(e, 0, 0) : c.getContext("2d").drawImage(e, 0, 0);
        return CB.V13l.V13t(c.toDataURL())
    },
    V13t: function(e) {
        var b = atob(e.split(",")[1]);
        e = e.split(",")[0].split(":")[1].split(";")[0];
        for (var d = new ArrayBuffer(b.length), c = new Uint8Array(d), f = 0; f < b.length; f++)
            c[f] = b.charCodeAt(f);
        if (window.Blob)
            return new Blob([d],{
                type: e
            })
    }
};
CB.Color = function() {
    var e = function(b, d, c, f) {
        this.V13u = b;
        this.V13v = d;
        this.V13w = c;
        this.alpha = void 0 !== f ? f : 1
    };
    e.prototype.toString = function() {
        return "rgba( " + Math.round(this.V13u) + ", " + Math.round(this.V13v) + ", " + Math.round(this.V13w) + ", " + this.alpha + " )"
    }
    ;
    return e
}();
CB.HSLColor = function() {
    var e = function(b, d, c, f) {
        this.hue = b;
        this.saturation = d;
        this.lightness = c;
        this.alpha = f || 1
    };
    e.prototype.toString = function() {
        return 1 > this.alpha ? "hsla( " + Math.round(this.hue) + ", " + Math.round(this.saturation) + "%, " + Math.round(this.lightness) + "%, " + this.alpha + " )" : "hsl( " + Math.round(this.hue) + ", " + Math.round(this.saturation) + "%, " + Math.round(this.lightness) + "% )"
    }
    ;
    e.RED = 0;
    e.YELLOW = 60;
    e.GREEN = 120;
    e.CYAN = 180;
    e.BLUE = 240;
    e.MAGENTA = 300;
    return e
}();
"use strict";
CB.V13x = function() {
    var e = function() {
        this.loaded = !1;
        this.height = this.width = 0;
        this.url = "";
        this.V13y = function() {}
    };
    e.prototype.isValid = function() {
        return 0 < this.width && 0 < this.height
    }
    ;
    e.prototype.V13z = function(b) {
        b ? (this.image = new Image,
        V3ir && V3ir.config.externalCommonPath && (0 > b.search("data:image/png;base64") || !CB.Vq.V124()) && (this.image.crossOrigin = "Anonymous"),
        this.image.addEventListener("load", e.prototype.V140.bind(this)),
        this.image.addEventListener("error", e.prototype.V141.bind(this)),
        this.url = b,
        this.image.src = b) : CB.V3("bmp._fromUrl", "no url")
    }
    ;
    e.V142 = function(b, d) {
        var c = new CB.V13x;
        b.getItem(d, function(f, g) {
            var h = !1;
            g && !f && ((f = (window.URL || window.webkitURL).createObjectURL(g)) ? (c.V13z(f),
            c.urlToRevoke = f,
            h = !0) : CB.V3("Bitmap::fromDB", "imgURL null"));
            h || c.V13z(d)
        });
        return c
    }
    ;
    e.prototype.getPattern = function(b) {
        if ("undefined" != typeof this.image && this.loaded)
            return b.createPattern(this.image, "repeat")
    }
    ;
    e.prototype.V143 = function(b, d, c, f, g) {
        try {
            this.imageData = b.getImageData(d, c, f, g),
            this.loaded = !0,
            this.width = f,
            this.height = g
        } catch (h) {
            console.log(h)
        }
    }
    ;
    e.prototype.V144 = function(b, d, c, f, g, h, k) {
        try {
            void 0 === this.canvas && (this.canvas = document.createElement("canvas"),
            this.context = this.canvas.getContext("2d")),
            this.canvas.width = f,
            this.canvas.height = g,
            0 < d + f && 0 < c + g && this.context && b && (this.context.drawImage(b.canvas, d, c, h, k, 0, 0, f, g),
            this.imageData = this.context.getImageData(0, 0, f, g)),
            this.loaded = !0,
            this.width = f,
            this.height = g
        } catch (l) {
            console.log(l)
        }
    }
    ;
    e.prototype.draw = function(b, d, c, f, g, h, k, l, m) {
        if (isNaN(d) || isNaN(c)) {
            var n = this.url.substring(0, 30);
            CB.V3("BmpDraw", "NaN + " + n + Error().stack)
        } else if (n = Function.prototype.call.bind(Array.prototype.slice),
        this.loaded)
            try {
                if (void 0 !== this.imageData) {
                    var p = n(arguments);
                    p.splice(0, 1, this.imageData);
                    b.putImageData.apply(b, p)
                } else
                    void 0 !== this.image && (p = n(arguments),
                    p.splice(0, 1, this.image),
                    b.drawImage.apply(b, p))
            } catch (q) {
                CB.V3("BMP draw", q)
            }
    }
    ;
    e.prototype.V145 = function(b, d, c, f, g) {
        this.loaded && (void 0 !== this.imageData ? b.putImageData(this.imageData, d, c, f, g) : void 0 !== this.image && b.drawImage(this.image, d, c, f, g))
    }
    ;
    e.prototype.drawTiled = function(b, d, c, f, g) {
        this.loaded && (void 0 !== this.imageData ? this.V146(b, this.imageData, b.putImageData, d, c, f, g) : void 0 !== this.image && this.V146(b, this.image, b.drawImage, d, c, f, g))
    }
    ;
    e.prototype.V146 = function(b, d, c, f, g, h, k) {
        if (isNaN(f) || isNaN(g))
            b = this.url.substring(0, 30),
            CB.V3("Tile", "NaN + " + b + Error().stack);
        else {
            new CB.V134(f,g,f + h,g + k);
            for (var l = g, m = f; l < g + k; ) {
                for (; m < f + h; ) {
                    var n = this.width
                      , p = this.height;
                    m + n > f + h && (n = f + h - m);
                    l + p > g + k && (p = g + k - l);
                    try {
                        c.call(b, d, 0, 0, n, p, m, l, n, p)
                    } catch (q) {
                        CB.V3("BMP tile: ", q)
                    }
                    m += this.width
                }
                m = f;
                l += this.height
            }
        }
    }
    ;
    e.prototype.isValid = function() {
        return this.loaded
    }
    ;
    e.prototype.V140 = function() {
        this.loaded = !0;
        this.width = this.image.width;
        this.height = this.image.height;
        this.V13y();
        this.urlToRevoke && (window.URL || window.webkitURL).revokeObjectURL(this.urlToRevoke)
    }
    ;
    e.prototype.V141 = function() {
        5
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.V147");
CB.V147 = function() {
    var e = function() {
        this.V148 = new CB.V13x;
        this.V149 = new CB.V13x;
        this.V14d = this.V14c = this.V14b = this.V14a = -1;
        this.pos = new CB.Point(0,0);
        this.V14e = new CB.Point(0,0);
        this.isVisible = this.loaded = !1;
        this.h = this.w = 0
    };
    e.prototype.toString = function() {
        return this.pos.toString()
    }
    ;
    e.prototype.V13z = function(b) {
        this.V148.V13y = this.V140.bind(this);
        this.V148.V13z(b)
    }
    ;
    e.prototype.V143 = function(b, d, c) {
        this.V148.V143(b, d, c);
        this.V140()
    }
    ;
    e.prototype.V14f = function(b, d) {
        this.V148.V13y = function() {
            var c = document.createElement("canvas");
            c && (c = c.getContext("2d")) && (this.V148.V145(c, 0, 0, d, d),
            this.V148.V143(c, 0, 0, d, d),
            this.V140())
        }
        .bind(this);
        this.V148.V13z(b)
    }
    ;
    e.prototype.V140 = function() {
        this.w = this.V148.width;
        this.h = this.V148.height;
        this.V14c = Math.floor(this.w / 2);
        this.V14d = Math.floor(this.h / 2);
        this.loaded = !0
    }
    ;
    e.prototype.setPos = function(b) {
        this.pos = b.cloneIntPoint()
    }
    ;
    e.prototype.moveTo = function(b, d) {
        this.V148.loaded && (this.V14e = this.pos,
        this.pos = d = d.cloneIntPoint(),
        this.V149.isValid() && this.V149.draw(b, this.V14b - this.V14c, this.V14a - this.V14d),
        this.V14g && (this.V149 = new CB.V13x),
        this.V14g = !1,
        this.V149.V143(b, d.x - this.V14c, d.y - this.V14d, this.w, this.h),
        this.V14b = d.x,
        this.V14a = d.y,
        this.V14h(b, d.x - this.V14c, d.y - this.V14d),
        this.isVisible = !0)
    }
    ;
    e.prototype.setBackground = function(b) {
        b && (this.V14g = !0,
        this.V149 = b,
        this.V14b = this.pos.x,
        this.V14a = this.pos.y)
    }
    ;
    e.prototype.hasBackground = function() {
        return this.V149.loaded || this.V14g
    }
    ;
    e.prototype.hide = function(b) {
        if (this.V149.isValid() && this.isVisible)
            return this.V149.draw(b, this.V14b - this.V14c, this.V14a - this.V14d),
            this.isVisible = !1,
            !0
    }
    ;
    e.prototype.saveBeforeMove = function(b, d) {
        d = d.cloneIntPoint();
        this.V14g && (this.V149 = new CB.V13x,
        this.V14g = !1);
        this.V149.V143(b, d.x - this.V14c, d.y - this.V14d, this.w, this.h);
        this.V14b = d.x;
        this.V14a = d.y
    }
    ;
    e.prototype.moveToNoSave = function(b, d) {
        this.V148.loaded && (this.V14e = this.pos,
        this.pos = d = d.cloneIntPoint(),
        this.V14h(b, d.x - this.V14c, d.y - this.V14d),
        this.isVisible = !0)
    }
    ;
    e.prototype.show = function(b) {
        this.V149.isValid() && this.V14c && (this.V149.draw(b, this.V14b - this.V14c, this.V14a - this.V14d),
        this.V14g && (this.V149 = new CB.V13x,
        this.V14g = !1),
        this.V149.V143(b, this.V14b - this.V14c, this.V14a - this.V14d, this.w, this.h),
        this.V14h(b, this.V14b - this.V14c, this.V14a - this.V14d),
        this.isVisible = !0)
    }
    ;
    e.prototype.saveBackground = function(b) {
        this.V14g && (this.V149 = new CB.V13x,
        this.V14g = !1);
        this.V149.V143(b, this.V14b - this.V14c, this.V14a - this.V14d, this.w, this.h)
    }
    ;
    e.prototype.V14h = function(b, d, c) {
        b.save();
        if (37 < this.V148.width && !this.V14i) {
            var f = Math.min(3, Math.round(Math.sqrt(this.V148.width / 30)));
            b.shadowOffsetX = f;
            b.shadowOffsetY = f;
            b.shadowBlur = 1 * f;
            b.shadowColor = "rgba( 40, 18, 10, 0.24 )"
        }
        this.V148.draw(b, d, c);
        b.restore()
    }
    ;
    e.prototype.deleteBackground = function() {
        this.V14g = !1;
        this.V149 = new CB.V13x;
        this.V14a = this.V14b = -1
    }
    ;
    e.prototype.V14j = function(b) {
        this.V14k = b
    }
    ;
    e.prototype.getMoveClipRect = function() {
        return new CB.V134(Math.min(this.pos.x, this.V14e.x) - this.V14c,Math.min(this.pos.y, this.V14e.y) - this.V14d,Math.max(this.pos.x, this.V14e.x) + this.V14c,Math.max(this.pos.y, this.V14e.y) + this.V14d)
    }
    ;
    return e
}();
CB.Animation = function() {
    var e = function(b) {
        this.cbcanvas = b;
        this.V14l = 30;
        this.V14m = this.lastTime = 0;
        this.startTime = this.V14n();
        this.V14o = 0;
        this.jobs = [];
        this.V14p = []
    };
    e.prototype.V14q = function() {
        window.cancelAnimationFrame(this.V14r);
        this.V14p = [];
        this.V14s = !1;
        if (this.jobs.length) {
            for (var b = 0; b < this.jobs.length; b++)
                this.jobs[b].deleteBackground();
            this.jobs = [];
            return !0
        }
        return !1
    }
    ;
    e.prototype.V14t = function(b, d, c) {
        this.V14v = !1;
        this.lastTime = this.V14x = this.V14w = 0;
        this.startTime = this.V14n();
        this.V14u = c;
        this.V14p.push(function() {
            this.V14y(b, d)
        }
        .bind(this));
        this.V14r = window.requestAnimationFrame(function(f) {
            this.V14z(f)
        }
        .bind(this));
        this.V14s = !0
    }
    ;
    e.prototype.V14z = function(b) {
        this.V150 && this.V150();
        var d = 10
          , c = 1;
        void 0 === b && (b = new Date);
        this.tick(b);
        for (b = 0; b < this.V14p.length; b++)
            this.V14p[b]();
        this.V14p = [];
        this.V14x += 1;
        this.V14w += this.V14o;
        2 < this.V14x && (d = Math.floor(this.V14w / this.V14x),
        40 > d && (c = 1 < d ? Math.floor(40 / d + .5) : 40));
        this.V14v && (c = 50);
        var f = this.cbcanvas.bufferCtx
          , g = !0;
        for (b = 0; b < this.jobs.length; b++)
            this.jobs[b].shouldHideInThisStep() && this.jobs[b].hide(f);
        for (b = 0; b < this.jobs.length; b++)
            this.jobs[b].isImmobileInThisStep() && !this.jobs[b].getsInvisibleAtEnd() && this.jobs[b].moveToNoSave(f, this.jobs[b].currPos);
        for (b = 0; b < this.jobs.length; b++)
            this.jobs[b].isStillMoving() && (this.jobs[b].hasReachedEndPos() ? this.jobs[b].currPos = this.jobs[b].ptTo : this.jobs[b].displace(c),
            this.jobs[b].saveBeforeMove(f, this.jobs[b].currPos));
        for (b = 0; b < this.jobs.length; b++)
            this.jobs[b].isStillMoving() && (this.jobs[b].moveToNoSave(f, this.jobs[b].currPos),
            this.cbcanvas.joinClipRect(this.jobs[b].getMoveClipRect())),
            this.jobs[b].prepNextStep(c) || (g = !1);
        this.V14u && this.cbcanvas.V151(this.V14u);
        this.V152 && this.V152();
        this.cbcanvas.V153();
        this.V154();
        g ? (this.V14s = !1,
        this.V155 && this.V155(),
        this.jobs = []) : this.V14r = window.requestAnimationFrame(function(h) {
            this.V14z(h)
        }
        .bind(this));
        g || (3 < this.V14x ? this.currFPS = d : delete this.currFPS)
    }
    ;
    e.prototype.V156 = function() {
        window.cancelAnimationFrame(this.V14r);
        this.hideAll();
        this.V14v = !0;
        this.V14r = window.requestAnimationFrame(function(b) {
            this.V14z(b)
        }
        .bind(this))
    }
    ;
    e.prototype.hideAll = function() {
        this.jobs.forEach(function(b) {
            b.shouldHideInThisStep() && b.hide(this.cbcanvas.bufferCtx)
        }
        .bind(this))
    }
    ;
    e.prototype.showAll = function() {
        this.jobs.forEach(function(b) {
            b.shouldHideInThisStep() && b.show(this.cbcanvas.bufferCtx)
        }
        .bind(this))
    }
    ;
    e.prototype.V154 = function() {
        for (var b = [], d = 0; d < this.jobs.length; d++)
            this.jobs[d].canDelete() || b.push(this.jobs[d]);
        this.jobs = b
    }
    ;
    e.prototype.V14y = function(b, d) {
        for (var c = this.cbcanvas.bufferCtx, f = 0; f < this.jobs.length; f++)
            this.jobs[f].hide(c);
        for (f = 0; f < b.length; f++)
            b[f].hide(c);
        for (f = 0; f < this.jobs.length; f++)
            -1 == this.jobs[f].sqTo && this.jobs[f].moveTo(c, this.jobs[f].ptTo);
        for (f = 0; f < this.jobs.length; f++)
            -1 != this.jobs[f].sqTo && this.jobs[f].moveTo(c, this.jobs[f].ptTo);
        var g = 0 < this.jobs.length;
        this.jobs = [];
        for (f = 0; f < b.length; f++)
            b[f].startAnimation(c, d),
            b[f].deleteBackground(),
            b[f].moveTo(c, b[f].ptFrom),
            this.jobs.push(b[f]);
        return g
    }
    ;
    e.prototype.tick = function(b) {
        this.V157(b);
        this.V14m = this.V14n() - this.startTime;
        this.lastTime = b
    }
    ;
    e.prototype.V157 = function(b) {
        0 == this.lastTime && (this.lastTime = this.startTime);
        this.V14o = 0 === this.lastTime || this.lastTime == b ? this.V14l : 1E3 / (b - this.lastTime)
    }
    ;
    e.prototype.V14n = function() {
        return (new Date).getTime()
    }
    ;
    return e
}();
"use strict";
CB.V158 = function() {
    var e = function() {
        this.worker = null
    };
    e.prototype.V159 = function() {
        this.worker || (this.worker = new Worker("/Common/Tools/Graphics/PixelFilterWorker.js"),
        this.worker.onmessage = e.prototype.V15a.bind(this),
        this.worker.error = e.prototype.V141.bind(this))
    }
    ;
    e.prototype.V15a = function(b) {
        if ("result" == b.data.id && (this.isRunning = !1,
        e.callBacks[b.data.ticket]))
            e.callBacks[b.data.ticket](b.data.imageData)
    }
    ;
    e.prototype.V141 = function(b) {}
    ;
    e.sTicket = 0;
    e.callBacks = {};
    e.prototype.abort = function() {
        this.V15b(!0)
    }
    ;
    e.prototype.V15b = function(b) {
        this.worker && (this.isRunning || b) && (this.worker.terminate(),
        delete this.worker)
    }
    ;
    e.prototype.V15c = function(b, d) {
        this.V15b();
        this.V159();
        var c = ++e.sTicket;
        e.callBacks = [];
        e.callBacks[c] = d;
        this.isRunning = !0;
        this.worker.postMessage({
            cmd: "darkenCorners",
            imageData: b,
            ticket: c
        })
    }
    ;
    return e
}();
"use strict";
CB.V15d = function(e) {
    return e
}
;
CB.V15d.extractByWeight = function(e, b, d) {
    if (b > e.length - 3 && 0 < b) {
        d = e.slice(0, b);
        var c = [];
        b < e.length && (c = e.slice(b, e.length));
        return {
            result: d,
            rest: c
        }
    }
    var f = [];
    for (c = 0; c < e.length; c++)
        if (e[c]) {
            var g = e[c].weight;
            void 0 === g && (g = 0);
            f.push({
                inx: c,
                weight: g
            })
        }
    f.sort(function(m, n) {
        return n.weight == m.weight ? m.inx - n.inx : n.weight - m.weight
    });
    var h = [];
    c = [];
    var k = 0;
    f = f.slice(0, b);
    for (g = 0; g < f.length; g++) {
        var l = !1;
        for (k = 0; !l && k < e.length && h.length < b; k++)
            f[g].inx == k && (d && d(e[k]) || h.push(e[k]),
            l = !0)
    }
    for (k = 0; k < e.length; k++) {
        l = !1;
        for (g = 0; !l && g < f.length; g++)
            f[g].inx == k && (l = !0);
        l || void 0 === c || d && d(e[k]) || c.push(e[k])
    }
    c.length && (e = this.extractByWeight(c, 5),
    c = e.rest ? e.result.concat(e.rest) : e.result);
    return {
        result: h,
        rest: c
    }
}
;
"use strict";
CB.V15e = {
    NONE: -1,
    WHITE: 0,
    BLACK: 1,
    V15f: 3
};
CB.V15e.V15g = 8;
CB.V15e.other = function(e) {
    return e ^ CB.V15e.BLACK
}
;
CB.V15e.fromString = function(e) {
    return "w" === e ? CB.V15e.WHITE : CB.V15e.BLACK
}
;
CB.V15e.toString = function(e) {
    return e === CB.V15e.WHITE ? "w" : "b"
}
;
CB.Piece = {
    NONE: 0,
    KING: 1,
    QUEEN: 2,
    KNIGHT: 3,
    BISHOP: 4,
    ROOK: 5,
    PAWN: 6,
    Vcx: 1,
    Vcz: 2,
    W_KNIGHT: 3,
    Vd3: 4,
    Vd1: 5,
    Vd5: 6,
    Vcy: 9,
    Vd0: 10,
    B_KNIGHT: 11,
    Vd4: 12,
    Vd2: 13,
    Vd6: 14,
    V15h: 8,
    WHITE: 0,
    BLACK: 8,
    V15i: 7
};
CB.Piece.V15j = 7;
CB.Piece.V15g = 8;
CB.Piece.V15k = function(e) {
    return e & CB.Piece.V15j
}
;
CB.Piece.V15l = function(e, b) {
    return (e & CB.Piece.V15j) == (b & CB.Piece.V15j)
}
;
CB.Piece.side = function(e) {
    return (e & CB.V15e.V15g) / 8
}
;
CB.Piece.V15m = function(e) {
    return e ^ CB.V15e.V15g
}
;
CB.Piece.V15n = function(e, b) {
    return e | 8 * b
}
;
CB.Piece.V15o = function(e, b) {
    return (e & CB.V15e.V15g) == b
}
;
CB.Piece.V15p = function(e) {
    return (e & CB.Piece.V15j) == CB.Piece.PAWN
}
;
CB.Piece.isKing = function(e) {
    return (e & CB.Piece.V15j) == CB.Piece.KING
}
;
CB.Piece.V15q = function(e) {
    e &= CB.Piece.V15j;
    return e == CB.Piece.QUEEN || e == CB.Piece.BISHOP || e == CB.Piece.ROOK
}
;
CB.Piece.V15r = " KQNBRP  kqnbrp".split("");
CB.Piece.toString = function(e) {
    return CB.Piece.V15r[e]
}
;
CB.Piece.fromString = function(e) {
    e = CB.Piece.V15r.indexOf(e);
    return 0 > e ? CB.Piece.NONE : e
}
;
CB.Piece.V15s = function(e) {
    switch (e) {
    case CB.Piece.KING:
        return lm.KING_ACC;
    case CB.Piece.QUEEN:
        return lm.QUEEN_ACC;
    case CB.Piece.KNIGHT:
        return lm.KNIGHT_ACC;
    case CB.Piece.BISHOP:
        return lm.BISHOP_ACC;
    case CB.Piece.ROOK:
        return lm.ROOK_ACC;
    case CB.Piece.PAWN:
        return lm.PAWN_ACC
    }
}
;
CB.V15t = {
    NONE: 0,
    V15u: 1,
    V15v: 2,
    V15w: 4,
    V15x: 8
};
CB.V15t.V15y = CB.V15t.V15v | CB.V15t.V15u;
CB.V15t.V15z = CB.V15t.V15x | CB.V15t.V15w;
CB.V15t.V160 = CB.V15t.V15y | CB.V15t.V15z;
CB.V15t.toString = function(e) {
    if (e === CB.V15t.NONE)
        return "-";
    var b = "";
    e & CB.V15t.V15v && (b += "K");
    e & CB.V15t.V15u && (b += "Q");
    e & CB.V15t.V15x && (b += "k");
    e & CB.V15t.V15w && (b += "q");
    return b
}
;
CB.V15t.fromString = function(e) {
    var b = e.charAt(0);
    if ("A" <= b && "H" >= b)
        return CB.V15t.V160;
    b = CB.V15t.NONE;
    e = new StringIterator(e);
    for (var d = e.Next(); 0 !== d; d = e.Next())
        switch (d) {
        case "K":
            b |= CB.V15t.V15v;
            break;
        case "Q":
            b |= CB.V15t.V15u;
            break;
        case "k":
            b |= CB.V15t.V15x;
            break;
        case "q":
            b |= CB.V15t.V15w
        }
    return b
}
;
CB.Square = {
    V161: 0,
    V162: 7,
    V163: 3,
    V164: 56,
    A1: 0,
    A2: 1,
    A3: 2,
    A4: 3,
    A5: 4,
    A6: 5,
    A7: 6,
    A8: 7,
    B1: 8,
    B2: 9,
    B3: 10,
    B4: 11,
    B5: 12,
    B6: 13,
    B7: 14,
    B8: 15,
    C1: 16,
    C2: 17,
    C3: 18,
    C4: 19,
    C5: 20,
    C6: 21,
    C7: 22,
    C8: 23,
    D1: 24,
    D2: 25,
    D3: 26,
    D4: 27,
    D5: 28,
    D6: 29,
    D7: 30,
    D8: 31,
    E1: 32,
    E2: 33,
    E3: 34,
    E4: 35,
    E5: 36,
    E6: 37,
    E7: 38,
    E8: 39,
    F1: 40,
    F2: 41,
    F3: 42,
    F4: 43,
    F5: 44,
    F6: 45,
    F7: 46,
    F8: 47,
    G1: 48,
    G2: 49,
    G3: 50,
    G4: 51,
    G5: 52,
    G6: 53,
    G7: 54,
    G8: 55,
    H1: 56,
    H2: 57,
    H3: 58,
    H4: 59,
    H5: 60,
    H6: 61,
    H7: 62,
    H8: 63,
    V165: 0,
    V166: 1,
    V167: 2,
    V168: 3,
    V169: 4,
    V16a: 5,
    V16b: 6,
    V16c: 7,
    V16d: 0,
    V16e: 1,
    V16f: 2,
    V16g: 3,
    V16h: 4,
    V16i: 5,
    V16j: 6,
    V16k: 7
};
CB.V16l = CB.Square;
CB.Square.g_arrSquareStrs = "a1 a2 a3 a4 a5 a6 a7 a8 b1 b2 b3 b4 b5 b6 b7 b8 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e1 e2 e3 e4 e5 e6 e7 e8 f1 f2 f3 f4 f5 f6 f7 f8 g1 g2 g3 g4 g5 g6 g7 g8 h1 h2 h3 h4 h5 h6 h7 h8".split(" ");
CB.Square.toString = function(e) {
    return this.g_arrSquareStrs[e]
}
;
CB.Square.V16m = CB.Square.toString;
CB.Square.V16n = function(e, b) {
    return CB.Square.V16m(CB.Square.V16o(e, b))
}
;
CB.Square.V16p = function(e) {
    return String.fromCharCode("a".charCodeAt() + e)
}
;
CB.Square.V16q = function(e) {
    return e + 1
}
;
CB.Square.V16r = function(e) {
    return e.charCodeAt(0) - "a".charCodeAt()
}
;
CB.Square.V16s = function(e) {
    return e.charCodeAt(0) - "1".charCodeAt()
}
;
CB.Square.fromString = function(e) {
    if (e && 2 === e.length) {
        var b = CB.Square.V16r(e.charAt(0));
        e = CB.Square.V16s(e.charAt(1));
        return CB.Square.V16t(b, e)
    }
}
;
CB.Square.V16u = function(e) {
    return e & CB.Square.V162
}
;
CB.Square.V16v = function(e) {
    return (e & CB.Square.V164) >> CB.Square.V163
}
;
CB.Square.F = function(e) {
    return (e & CB.Square.V164) >> CB.Square.V163
}
;
CB.Square.V16w = CB.Square.V16u;
CB.Square.V16x = CB.Square.V16v;
CB.Square.V16y = function(e, b) {
    var d = CB.Square.V16u(e) - CB.Square.V16u(b);
    e = CB.Square.V16v(e) - CB.Square.V16v(b);
    return Math.sqrt(d * d + e * e)
}
;
CB.Square.V16t = function(e, b) {
    return 8 * e + b
}
;
CB.Square.V16z = function(e, b) {
    return 8 * e + b
}
;
CB.Square.V16o = CB.Square.V16t;
CB.Square.isLegal = function(e, b) {
    return e <= CB.Square.V16c && e >= CB.Square.V165 && b <= CB.Square.V16k && b >= CB.Square.V16d
}
;
CB.Square.V170 = function(e) {
    var b = CB.Square.V16v(e);
    e = CB.Square.V16u(e);
    return !((b + e) % 2)
}
;
CB.Square.V171 = function(e) {
    return !CB.Square.V170(e)
}
;
CB.Square.V172 = function(e) {
    return CB.Square.F(e) == CB.Square.V168 || CB.Square.F(e) == CB.Square.V169
}
;
CB.Square.V173 = function(e) {
    return CB.Square.V16u(e) == CB.Square.V16g || CB.Square.V16u(e) == CB.Square.V16h
}
;
CB.Square.V174 = function(e) {
    return CB.Square.V172(e) && CB.Square.V173(e)
}
;
CB.Square.V131 = function(e, b) {
    var d = CB.Square.V16x(e) - CB.Square.V16x(b);
    e = CB.Square.V16w(e) - CB.Square.V16w(b);
    return Math.sqrt(d * d + e * e)
}
;
CB.Square.V175 = function(e, b) {
    return CB.Square.V16x(e) - CB.Square.V16x(b)
}
;
CB.Square.V176 = function(e) {
    return e === CB.V15e.WHITE ? CB.Square.V16k : CB.Square.V16d
}
;
"use strict";
CB.Board = function() {
    var e = function(b) {
        this.sqs = [];
        for (var d = 0; 64 > d; d++)
            this.sqs.push(0);
        b && this.setup()
    };
    e.V177 = 64;
    e.prototype.setup = function() {
        this.sqs = [CB.Piece.Vd1, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vd2, CB.Piece.W_KNIGHT, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.B_KNIGHT, CB.Piece.Vd3, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vd4, CB.Piece.Vcz, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vd0, CB.Piece.Vcx, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vcy, CB.Piece.Vd3, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vd4, CB.Piece.W_KNIGHT, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.B_KNIGHT, CB.Piece.Vd1, CB.Piece.Vd5, 0, 0, 0, 0, CB.Piece.Vd6, CB.Piece.Vd2]
    }
    ;
    e.prototype.clear = function() {
        this.sqs.forEach(function(b, d, c) {
            c[d] = 0
        })
    }
    ;
    e.prototype.V178 = function(b) {
        for (var d = CB.V15e.WHITE, c = CB.Piece.KING, f = 0; f < b.length; f++)
            switch (b[f]) {
            case "K":
                c = CB.Piece.KING;
                break;
            case "Q":
                c = CB.Piece.QUEEN;
                break;
            case "R":
                c = CB.Piece.ROOK;
                break;
            case "B":
                c = CB.Piece.BISHOP;
                break;
            case "N":
                c = CB.Piece.KNIGHT;
                break;
            case "P":
                c = CB.Piece.PAWN;
                break;
            case "a":
            case "b":
            case "c":
            case "d":
            case "e":
            case "f":
            case "g":
            case "h":
                var g = b.charCodeAt(f)
                  , h = b.charCodeAt(f + 1);
                49 <= h && 56 >= h ? this.sqs[(g - 97 << 3) + h - 49] = c | d : 98 == g && (d = CB.V15e.V15g);
                break;
            case "w":
                d = CB.V15e.WHITE
            }
    }
    ;
    e.prototype.copyFrom = function(b) {
        for (var d = 0; d < b.length; d++)
            this.sqs[d] = b[d]
    }
    ;
    e.prototype.copyTo = function(b) {
        for (var d = 0; 64 > d; d++)
            b[d] = this.sqs[d]
    }
    ;
    e.prototype.getCopy = function() {
        var b = new e;
        this.copyTo(b.sqs);
        return b
    }
    ;
    e.prototype.set = function(b, d) {
        this.sqs[b] = d
    }
    ;
    e.prototype.get = function(b) {
        return this.sqs[b]
    }
    ;
    e.prototype.change = function(b, d) {
        this.sqs[d] = this.sqs[b];
        this.sqs[b] = 0
    }
    ;
    e.prototype.V179 = function(b, d, c) {
        this.sqs[d] = c;
        this.sqs[b] = 0
    }
    ;
    e.prototype.V17a = function(b, d, c) {
        this.sqs[d] = this.sqs[b];
        this.sqs[b] = 0;
        this.sqs[c] = 0
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        for (var d = 0; 64 > d; d++)
            b.writeByte(this.sqs[d])
    }
    ;
    e.prototype.V17b = function() {
        for (var b = [], d = 7; 0 <= d; d--) {
            for (var c = "", f = 0; 8 > f; f++) {
                var g = this.get(8 * f + d);
                c = g ? c + CB.Piece.V15r[g] : CB.Square.V170(8 * f + d) ? c + "." : c + " "
            }
            b.push(c)
        }
        return b
    }
    ;
    e.prototype.V17c = function(b, d, c, f) {
        for (d = 0; 64 > d; d++)
            if ((void 0 === f || !f[d]) && c[d] == b)
                return d;
        return -1
    }
    ;
    e.prototype.test = function() {
        var b = new CB.Board;
        b.setup();
        b.V17b().forEach(function(d) {})
    }
    ;
    return e
}();
"use strict";
CB.V17d = function() {
    var e = function(b, d) {
        void 0 !== b ? (this.cr = b.cr,
        this.ep = b.ep,
        this.mvd = b.board[d.from],
        this.vct = b.board[d.to]) : (this.cr = CB.V15t.NONE,
        this.ep = 0,
        this.mvd = this.vct = CB.Piece.NONE);
        void 0 !== d && (this.fldVct = d.to);
        this.from2 = this.to2 = 0
    };
    e.prototype.V17e = function(b, d) {
        this.fldVct = d;
        this.vct = b
    }
    ;
    e.prototype.V17f = function(b, d) {
        this.from2 = b;
        this.to2 = d
    }
    ;
    return e
}();
"use strict";
CB.V17g = function() {
    var e = function(b, d, c) {
        this.to = this.from = 0;
        this.prom = CB.Piece.NONE;
        b && (this.from = b);
        d && (this.to = d);
        c && (this.prom = c);
        this.annos = this.subLines = null
    };
    e.g_mvW00 = new e(CB.Square.E1,CB.Square.G1);
    e.g_mvW000 = new e(CB.Square.E1,CB.Square.C1);
    e.g_mvB00 = new e(CB.Square.E8,CB.Square.G8);
    e.g_mvB000 = new e(CB.Square.E8,CB.Square.C8);
    e.prototype.isACheck = !1;
    e.prototype.isAMate = !1;
    e.prototype.needCol = !1;
    e.prototype.needRow = !1;
    e.prototype.mvd = CB.Piece.NONE;
    e.prototype.vct = CB.Piece.NONE;
    Object.defineProperty(e.prototype, "piece", {
        get: function() {
            return this.mvd
        },
        set: function(b) {
            this.mvd = b
        },
        enumerable: !0
    });
    Object.defineProperty(e.prototype, "capt", {
        get: function() {
            return this.vct
        },
        set: function(b) {
            this.vct = b
        },
        enumerable: !0
    });
    e.prototype.V17h = !1;
    e.prototype.V17i = !1;
    e.prototype.isNullMove = function() {
        return this.from === this.to && !this.from
    }
    ;
    e.prototype.isCastling = function() {
        return this.isShortCastling() || this.isLongCastling()
    }
    ;
    e.prototype.equals = function(b) {
        return this.from === b.from && this.to === b.to && this.prom === b.prom
    }
    ;
    e.prototype.isValid = function() {
        return this.from != this.to
    }
    ;
    e.prototype.V17j = function() {
        return this.equals(CB.V17g.g_mvW00) && this.mvd === CB.Piece.Vcx || this.equals(CB.V17g.g_mvB00) && this.mvd === CB.Piece.Vcy
    }
    ;
    e.prototype.isShortCastling = function() {
        return this.V17h
    }
    ;
    e.prototype.V17k = function() {
        return this.equals(CB.V17g.g_mvW000) && this.mvd === CB.Piece.Vcx || this.equals(CB.V17g.g_mvB000) && this.mvd === CB.Piece.Vcy
    }
    ;
    e.prototype.isLongCastling = function() {
        return this.V17i
    }
    ;
    e.prototype.setIsCastling = function() {
        this.V17h = this.V17j();
        this.V17i = this.V17k()
    }
    ;
    e.prototype.isCheck = function() {
        return this.isACheck
    }
    ;
    e.prototype.setCheck = function(b) {
        this.isACheck = b
    }
    ;
    e.prototype.isMate = function() {
        return this.isAMate
    }
    ;
    e.prototype.setMate = function(b) {
        this.isAMate = b
    }
    ;
    e.prototype.isTake = function() {
        return this.vct != CB.Piece.NONE
    }
    ;
    e.prototype.getMoved = function() {
        return this.mvd
    }
    ;
    e.prototype.setMoved = function(b) {
        this.mvd = b
    }
    ;
    e.prototype.getVictim = function() {
        return this.vct
    }
    ;
    e.prototype.setVictim = function(b) {
        this.vct = b
    }
    ;
    e.prototype.getPiece = e.prototype.getMoved;
    e.prototype.isProm = function() {
        return this.prom != CB.Piece.NONE
    }
    ;
    e.prototype.V15p = function() {
        return this.mvd && (this.mvd & 7) == CB.Piece.PAWN
    }
    ;
    e.prototype.getSide = function() {
        return CB.Piece.side(this.mvd)
    }
    ;
    e.prototype.isNeedCol = function() {
        return this.needCol
    }
    ;
    e.prototype.setNeedCol = function(b) {
        this.needCol = b
    }
    ;
    e.prototype.isNeedRow = function() {
        return this.needRow
    }
    ;
    e.prototype.setNeedRow = function(b) {
        this.needRow = b
    }
    ;
    e.prototype.getTreeMoveCount = function() {
        var b = 1;
        this.subLines && (b = this.subLines.reduce(function(d, c) {
            return d + c.getTreeMoveCount()
        }, b));
        return b
    }
    ;
    e.prototype.indexOfLine = function(b) {
        return this.subLines ? this.subLines.indexOf(b) : -1
    }
    ;
    e.prototype.findLine = function(b) {
        if (this.subLines)
            for (var d = 0; d < this.subLines.length; ++d) {
                var c = this.subLines[d];
                if (c[0].equals(b))
                    return c
            }
        return null
    }
    ;
    e.prototype.removeLine = function(b) {
        this.subLines && (b = this.subLines.indexOf(b),
        0 > b || this.subLines.splice(b, 1))
    }
    ;
    e.prototype.removeLines = function() {
        this.subLines = null
    }
    ;
    e.prototype.getLine = function(b) {
        return this.subLines[b]
    }
    ;
    e.prototype.getSubLines = function() {
        return this.subLines
    }
    ;
    e.prototype.getSubLinesCount = function() {
        return this.subLines ? this.subLines.length : 0
    }
    ;
    e.prototype.hasLines = function() {
        return null != this.subLines && 0 < this.subLines.length
    }
    ;
    e.prototype.newLine = function(b, d) {
        this.subLines || (this.subLines = []);
        b = new CB.V17l(b,d);
        this.subLines.push(b);
        return b
    }
    ;
    e.prototype.addLine = function(b) {
        this.subLines || (this.subLines = []);
        this.subLines.push(b)
    }
    ;
    e.prototype.insertLine = function(b, d) {
        this.subLines || (this.subLines = []);
        this.subLines.splice(b, 0, d)
    }
    ;
    e.prototype.swapLines = function(b, d) {
        if (this.subLines) {
            var c = this.subLines[b];
            this.subLines[b] = this.subLines[d];
            this.subLines[d] = c
        }
    }
    ;
    e.prototype.write = function(b) {
        if (this.prom) {
            var d = this.to | this.prom - CB.Piece.QUEEN << 6;
            b.writeByte(this.from | 64);
            b.writeByte(d)
        } else
            b.writeByte(this.from),
            b.writeByte(this.to);
        this.V17m(b);
        this.V17n(b)
    }
    ;
    e.prototype.write2 = function(b) {
        if (this.prom) {
            var d = this.to | this.prom - CB.Piece.QUEEN << 6;
            b.writeByte(this.from | 64);
            b.writeByte(d)
        } else
            b.writeByte(this.from),
            b.writeByte(this.to);
        d = 0;
        this.annos && this.annos.count() && (d |= 1);
        this.getSubLinesCount() && (d |= 2);
        b.writeUint8(d);
        d & 1 && this.V17o(b);
        d & 2 && this.V17p(b)
    }
    ;
    e.prototype.read = function(b) {
        this.from = b.readByte();
        this.to = b.readByte();
        64 == (this.from & 192) && (this.prom = CB.Piece.QUEEN + (this.to >> 6));
        this.from &= 63;
        this.to &= 63;
        this.V17q(b);
        this.V17r(b)
    }
    ;
    e.prototype.read2 = function(b) {
        this.from = b.readByte();
        this.to = b.readByte();
        64 == (this.from & 192) && (this.prom = CB.Piece.QUEEN + (this.to >> 6));
        this.from &= 63;
        this.to &= 63;
        var d = b.readByte();
        d & 1 && this.V17s(b);
        d & 2 && this.V17t(b)
    }
    ;
    e.prototype.V17q = function(b) {
        this.annos = CB.Annotation.readFactory(b)
    }
    ;
    e.prototype.V17s = function(b) {
        this.annos = CB.Annotation.readFactory2(b)
    }
    ;
    e.prototype.V17m = function(b) {
        CB.Annotation.write(b, this.annos)
    }
    ;
    e.prototype.V17o = function(b) {
        CB.Annotation.write2(b, this.annos)
    }
    ;
    e.prototype.V17r = function(b) {
        var d = b.readByte();
        if (127 >= d) {
            this.subLines = Array(d);
            for (var c = 0; c < d; ++c)
                this.subLines[c] = CB.V17l.readFactory(b)
        }
    }
    ;
    e.prototype.V17t = function(b) {
        var d = b.readByte();
        if (127 >= d) {
            this.subLines = Array(d);
            for (var c = 0; c < d; ++c)
                this.subLines[c] = CB.V17l.readFactory2(b)
        }
    }
    ;
    e.prototype.V17n = function(b) {
        var d = this.getSubLinesCount();
        b.writeByte(d);
        if (d)
            for (var c = 0; c < d; ++c)
                this.subLines[c].write(b)
    }
    ;
    e.prototype.V17p = function(b) {
        var d = this.getSubLinesCount();
        b.writeByte(d);
        if (d)
            for (var c = 0; c < d; ++c)
                this.subLines[c].write2(b)
    }
    ;
    e.readFactory = createReadFactory(e);
    e.readFactory2 = createReadFactory2(e);
    e.prototype.moveLinesTo = function(b) {
        b.subLines = this.subLines;
        this.subLines = null
    }
    ;
    e.prototype.toString = function() {
        var b = CB.Square.toString(this.from) + CB.Square.toString(this.to);
        this.prom != CB.Piece.NONE && (b += CB.Piece.toString(this.prom).toLowerCase());
        return b
    }
    ;
    e.g_regex = /^[a-h][1-8][a-h][1-8]([NBRQ])?$/i;
    e.isValidString = function(b) {
        return e.g_regex.test(b)
    }
    ;
    e.fromString = function(b) {
        var d = b.substring(0, 2)
          , c = b.substring(2, 4);
        d = CB.Square.fromString(d);
        c = CB.Square.fromString(c);
        var f = void 0;
        4 < b.length && (b = b.charAt(4),
        f = CB.Piece.V15k(CB.Piece.fromString(b)));
        return new CB.V17g(d,c,f)
    }
    ;
    e.prototype.toJSON = function() {
        return {
            from: CB.Square.toString(this.from),
            to: CB.Square.toString(this.to),
            prom: "  Q N B R  ".split(" ")[this.prom % 8]
        }
    }
    ;
    e.prototype.V17u = function(b) {
        this.from = CB.Square.fromString(b.from);
        this.to = CB.Square.fromString(b.to);
        b = " KQNBR".search(RegExp(b.prom, "i"));
        this.prom = 0 < b ? b : 0;
        return {
            from: CB.Square.toString(this.from),
            to: CB.Square.toString(this.to),
            prom: "  Q N B R  ".split(" ")[this.prom % 8]
        }
    }
    ;
    e.prototype.setSubParentData = function(b, d, c) {
        if (this.subLines)
            for (var f = 0; f < this.subLines.length; ++f) {
                var g = this.subLines[f];
                g.setParentMoveIndex(d);
                g.setParentLine(b);
                c && g.setSubParentData(!0)
            }
    }
    ;
    e.prototype.getAnno = function() {
        return this.annos
    }
    ;
    e.prototype.hasAnno = function() {
        return null != this.annos
    }
    ;
    e.prototype.setAnnoItem = function(b, d) {
        this.annos || (this.annos = new CB.Annotation);
        this.annos.setItem(b, d)
    }
    ;
    e.prototype.setAnno = function(b) {
        this.annos = b
    }
    ;
    e.prototype.getAnnoItem = function(b) {
        return this.annos ? this.annos.getItem(b) : null
    }
    ;
    e.prototype.deleteAnnoItem = function(b) {
        this.annos && this.annos.deleteItem(b)
    }
    ;
    e.prototype.V17v = function() {
        this.annos = null
    }
    ;
    e.prototype.unAnnotate = function(b) {
        b || this.V17v();
        this.removeLines()
    }
    ;
    e.prototype.getBaggage = function() {
        return this.V17w
    }
    ;
    e.prototype.setBaggage = function(b) {
        this.V17w = b
    }
    ;
    e.prototype.forAllMoves = function(b) {
        b(this);
        if (this.subLines)
            for (var d = 0; d < this.subLines.length; d++)
                this.subLines[d].forAllMoves(b)
    }
    ;
    e.prototype.getType = function() {
        return this.type
    }
    ;
    e.prototype.V6b = function(b) {
        this.type = b
    }
    ;
    e.prototype.V17x = function() {
        return this.oldEP
    }
    ;
    e.prototype.V17y = function(b) {
        this.oldEP = b
    }
    ;
    e.prototype.V17z = function() {
        return this.V180
    }
    ;
    e.prototype.setOldCastle = function(b) {
        this.V180 = b
    }
    ;
    e.prototype.V181 = function(b) {
        this.mvd = b
    }
    ;
    e.prototype.V182 = function(b) {
        this.prom = b
    }
    ;
    e.prototype.V183 = function(b) {
        b & 1 && (b & 16 ? (this.from ^= 63,
        this.to ^= 63,
        this.getType() & 15 && this.V6b(this.getType() & -16 | (this.getType() & 5) << 1 | (this.getType() & 10) >> 1),
        this.V17z() && setOldCastle((this.V17z() & 5) << 1 | (this.V17z() & 10) >> 1)) : (this.from ^= 7,
        this.to ^= 7,
        this.getType() & 15 && this.V6b(this.getType() & -16 | (this.getType() & 3) << 2 | (this.getType() & 12) >> 2),
        this.V17z() && this.setOldCastle((this.V17z() & 3) << 2 | (this.V17z() & 12) >> 2)),
        this.getPiece() && this.V181(this.getPiece() ^ 8),
        this.getVictim() && this.setVictim(this.getVictim() ^ 8))
    }
    ;
    e.prototype.V184 = function(b) {
        var d = 0;
        b & 2 && (d ^= 56,
        this.V17x() && this.V17y(9 - this.V17x()));
        b & 4 && (d ^= 7);
        if (b & 8) {
            var c = this.from
              , f = this.to;
            f = (f & 7) << 3 | f >> 3 & 7;
            this.from(((c & 7) << 3 | c >> 3 & 7) ^ d);
            this.to(f ^ d)
        } else
            d && (this.from ^= d,
            this.to ^= d);
        b & 1 && this.V183(b)
    }
    ;
    return e
}();
"use strict";
CB.V187 = function() {
    var e = function(b, d, c, f) {
        this.from = b || 0;
        this.to = d || 0;
        this.type = c || 0;
        this.prom = f || 0
    };
    e.prototype.V188 = function(b) {
        b && (this.from = b.from,
        this.to = b.to,
        this.prom = b.prom,
        this.type = void 0 !== b.type ? b.type : 0)
    }
    ;
    e.prototype.toString = function() {
        return CB.Square.toString(this.from) + "-" + CB.Square.toString(this.to) + ", ty=" + this.type
    }
    ;
    e.prototype.fromDataBuf = function(b) {
        this.from = b.readUint8();
        this.to = b.readUint8();
        this.type = b.readUint8();
        this.prom = b.readUint8()
    }
    ;
    e.prototype.V3il = function(b) {
        b.writeUint8(this.from);
        b.writeUint8(this.to);
        b.writeUint8(this.type);
        b.writeUint8(this.prom)
    }
    ;
    return e
}();
"use strict";
CB.V17l = function() {
    var e = function(b, d) {
        this.parent = null;
        this.inxMvParent = 0;
        b && (this.parent = b,
        this.inxMvParent = d)
    };
    e.prototype = [];
    e.prototype.isMainLine = function() {
        return !this.parent
    }
    ;
    e.prototype.V189 = function() {
        this.parent = null;
        this.inxMvParent = 0
    }
    ;
    e.prototype.getParentLine = function() {
        return this.parent
    }
    ;
    e.prototype.setParentLine = function(b) {
        this.parent = b
    }
    ;
    e.prototype.getParentMoveIndex = function() {
        return this.inxMvParent
    }
    ;
    e.prototype.setParentMoveIndex = function(b) {
        this.inxMvParent = b
    }
    ;
    e.prototype.getTreeMoveCount = function() {
        return this.reduce(function(b, d) {
            return b + d.getTreeMoveCount()
        }, 0)
    }
    ;
    e.prototype.setSubParentData = function(b) {
        this.forEach(function(d, c) {
            d.setSubParentData(this, c, b)
        }
        .bind(this))
    }
    ;
    e.prototype.swapMoves = function(b, d) {
        b = [b, this.length - b];
        if (d)
            for (var c = 0, f = d.length; c < f; ++c)
                b.push(d[c]);
        b = this.splice.apply(this, b);
        this.setSubParentData();
        b = [0, d.length].concat(b);
        d.splice.apply(d, b);
        d.setSubParentData();
        d.setParentLine(this);
        return d
    }
    ;
    e.prototype.selfTest = function(b, d, c) {
        CBDebug.assert(this.inxMvParent === c);
        CBDebug.assert(!d || null != this.getParentMove() && 0 <= this.getParentMove().indexOfLine(this));
        b = ObjUtil.clone(b);
        c = 0;
        for (var f = this.length; c < f; ++c) {
            var g = this[c];
            if (g.hasLines()) {
                CBDebug.assert(!d || c);
                for (var h = g.getSubLines(), k = 0; k < h.length; ++k)
                    h[k].selfTest(ObjUtil.clone(b), this, c)
            }
            b.makeMove(g)
        }
    }
    ;
    e.prototype.getParentMove = function() {
        return this.parent ? this.parent[this.inxMvParent] : null
    }
    ;
    e.prototype.toString = function() {
        return this.join(" ")
    }
    ;
    e.readFactory = createReadFactory(e);
    e.readFactory2 = createReadFactory2(e);
    e.prototype.read = function(b) {
        b.readArray(this, CB.V17g.readFactory);
        this.setSubParentData();
        this.V18a()
    }
    ;
    e.prototype.read2 = function(b) {
        var d = b.readUint8();
        d & 128 && (d = (d << 8 | b.readUint8()) & 32767);
        if (0 < d) {
            if (2048 < d)
                return !1;
            if (0 < d) {
                this.length = d;
                for (var c = 0; c < d; c++) {
                    var f = new CB.V17g;
                    f.read2(b);
                    this[c] = f
                }
            }
        } else if (0 > d)
            return !1;
        this.setSubParentData();
        this.V18a()
    }
    ;
    e.prototype.write = function(b) {
        this.V18b();
        b.writeArray(this)
    }
    ;
    e.prototype.write2 = function(b) {
        this.V18b();
        2048 >= this.length && (this.length & -128 && b.writeUint8(this.length << 8 | 128),
        b.writeUint8(this.length & 255));
        for (var d = 0; d < this.length; d++)
            this[d].write2(b)
    }
    ;
    e.prototype.hasLines = function() {
        return this.some(function(b) {
            return b.hasLines()
        })
    }
    ;
    e.prototype.V18a = function() {
        for (var b = 1; b < this.length; b++)
            if (this[b].hasAnno() && this[b].getAnno().hasTraining()) {
                var d = this[b].getAnno().getTraining();
                this[b].getAnno().setTraining(null);
                this[b].getAnno().empty() && this[b].setAnno(null);
                this[b - 1].setAnnoItem(CB.AnnoType.V18c, d)
            }
    }
    ;
    e.prototype.V18b = function() {
        for (var b = this.length - 2; 0 <= b; b--)
            if (this[b].hasAnno() && this[b].getAnno().hasTraining()) {
                var d = this[b].getAnno().getTraining();
                this[b].getAnno().setTraining(null);
                this[b].getAnno().empty() && this[b].setAnno(null);
                this[b + 1].setAnnoItem(CB.AnnoType.V18c, d)
            }
    }
    ;
    e.prototype.isAnnotated = function() {
        return this.some(function(b) {
            return b.hasLines() || b.hasAnno()
        })
    }
    ;
    e.prototype.setAnno = function(b) {
        this.anno = b
    }
    ;
    e.prototype.getAnno = function() {
        return this.anno
    }
    ;
    e.prototype.setAnnoItem = function(b, d) {
        this.anno || (this.anno = new CB.Annotation);
        this.anno.setItem(b, d)
    }
    ;
    e.prototype.hasAnno = function() {
        return void 0 !== this.anno
    }
    ;
    e.prototype.unAnnotate = function(b) {
        this.forEach(function(d) {
            d.unAnnotate(b)
        })
    }
    ;
    e.prototype.forAllMoves = function(b) {
        this.forEach(function(d) {
            d.forAllMoves(b)
        })
    }
    ;
    e.prototype.removeLines = function() {
        this.forEach(function(b) {
            b.removeLines()
        })
    }
    ;
    e.contextToLine = function(b, d) {
        var c = [];
        b = ObjUtil.clone(b);
        for (var f = 0; f < d.length; f++) {
            var g = ObjUtil.clone(d[f]);
            b.preSetMinCtx(g);
            c.push(g);
            b.makeMove(g)
        }
        return c
    }
    ;
    return e
}();
"use strict";
CB.V18d = function() {
    var e = function(b, d) {
        this.line = void 0 != b ? b : null;
        this.mvsToGo = void 0 != d ? parseInt(d) : 0
    };
    e.prototype.getLine = function() {
        return this.line
    }
    ;
    e.prototype.getMovesToGo = function() {
        return this.mvsToGo
    }
    ;
    e.prototype.setMovesToGo = function(b) {
        this.mvsToGo = parseInt(b)
    }
    ;
    e.prototype.incMovesToGo = function() {
        ++this.mvsToGo
    }
    ;
    e.prototype.decMovesToGo = function() {
        --this.mvsToGo
    }
    ;
    e.prototype.isLineEnd = function() {
        return this.line.length === this.mvsToGo
    }
    ;
    e.prototype.isLineStart = function() {
        return 0 === this.mvsToGo
    }
    ;
    e.prototype.pushMove = function(b) {
        this.line.length = this.mvsToGo;
        this.line.push(b);
        ++this.mvsToGo
    }
    ;
    e.prototype.deleteRemaining = function() {
        this.line.length = this.mvsToGo
    }
    ;
    e.prototype.deletePrevious = function() {
        this.line.splice(0, this.mvsToGo - 1);
        this.mvsToGo = 1;
        this.line.setSubParentData();
        this.line.V189();
        return this.line
    }
    ;
    e.prototype.shallowClone = function() {
        return new e(this.line,this.mvsToGo)
    }
    ;
    return e
}();
CB.LineStack = function() {
    var e = function(b, d) {
        b && (d || (d = 0),
        this.push(new CB.V18d(b,d)))
    };
    e.prototype = [];
    e.prototype.Top = function() {
        return this[this.length - 1]
    }
    ;
    e.prototype.shallowClone = function() {
        var b = new CB.LineStack;
        b.length = this.length;
        for (var d = 0, c = this.length; d < c; ++d)
            b[d] = this[d].shallowClone();
        return b
    }
    ;
    e.prototype.deleteRemaining = function() {
        this.Top() && this.Top().deleteRemaining()
    }
    ;
    e.prototype.deletePrevious = function() {
        var b = this.Top()
          , d = b.deletePrevious();
        this.length = 0;
        this.push(b);
        return d
    }
    ;
    e.prototype.gotoPrev = function() {
        var b = this.Top();
        b && (b.decMovesToGo(),
        1 < this.length && 0 === b.getMovesToGo() && this.pop())
    }
    ;
    e.prototype.promoteLine = function() {
        var b = this.Top();
        if (b) {
            var d = b.getLine()
              , c = b.getMovesToGo();
            b = d.getParentLine();
            var f = d.getParentMoveIndex()
              , g = b[f]
              , h = g.indexOfLine(d);
            g.removeLine(d);
            var k = d[0];
            g.moveLinesTo(k);
            b.swapMoves(f, d);
            k.insertLine(h, d);
            c += f;
            this.pop();
            b = this.Top();
            b.setMovesToGo(c)
        }
    }
    ;
    e.prototype.V18e = function() {
        for (var b = [], d = null, c = 0, f = this.length; c < f; ++c) {
            var g = this[c]
              , h = g.getLine();
            g = g.getMovesToGo();
            var k = 0;
            d && (k = d.indexOfLine(h));
            b.push({
                inxLine: k,
                mvsToGo: g
            });
            d = h[g]
        }
        return b
    }
    ;
    e.prototype.selfTest = function() {
        for (var b = null, d = 0, c = 0, f = this.length; c < f; ++c) {
            var g = this[c]
              , h = g.getLine();
            g = g.getMovesToGo();
            CBDebug.assert(h.getParentLine() === b);
            CBDebug.assert(h.getParentMoveIndex() === d);
            CBDebug.assert(!b || 0 <= h.getParentMove().indexOfLine(h));
            b = h;
            d = g
        }
    }
    ;
    return e
}();
"use strict";
CB.Position = function() {
    function e(c, f) {
        this.piece = c;
        this.field = f
    }
    function b(c, f) {
        return function(g) {
            return g === c || f && g === f
        }
    }
    var d = function(c) {
        this.V18f();
        c ? c.length && ("w" == c.charAt(0) ? this.V18g(c) : this.V18h(c)) : this.initStartPos()
    };
    d.NOEP = -1;
    d.prototype.copy = function(c) {
        for (var f = 0; f < this.board.length; ++f)
            this.board[f] = c.board[f];
        this.sd = c.sd;
        this.ep = c.ep;
        this.cr = c.cr;
        this.V18i = c;
        this.numPly = c.numPly
    }
    ;
    d.prototype.equals = function(c) {
        if (!c || this.sd != c.sd || this.ep != c.ep || this.cr != c.cr)
            return !1;
        for (var f = 0; f < this.board.length; ++f)
            if (this.board[f] !== c.board[f])
                return !1;
        return !0
    }
    ;
    d.prototype.V18j = function(c, f) {
        return idiv(c, 2) + 1
    }
    ;
    d.mvToPlyNum = function(c, f) {
        return 2 * (c - 1) + f
    }
    ;
    d.prototype.getMoveNum = function() {
        return this.V18j(this.numPly, this.sd)
    }
    ;
    d.prototype.setMoveNum = function(c) {
        this.numPly = d.mvToPlyNum(c, this.sd)
    }
    ;
    d.prototype.getPlyNum = function() {
        return this.numPly
    }
    ;
    d.prototype.initStartPos = function() {
        this.sd = CB.V15e.WHITE;
        for (var c = CB.Square.V165; c <= CB.Square.V16c; ++c)
            this.board[CB.Square.V16t(c, CB.Square.V16e)] = CB.Piece.Vd5,
            this.board[CB.Square.V16t(c, CB.Square.V16j)] = CB.Piece.Vd6;
        this.board[CB.Square.A1] = this.board[CB.Square.H1] = CB.Piece.Vd1;
        this.board[CB.Square.B1] = this.board[CB.Square.G1] = CB.Piece.W_KNIGHT;
        this.board[CB.Square.C1] = this.board[CB.Square.F1] = CB.Piece.Vd3;
        this.board[CB.Square.D1] = CB.Piece.Vcz;
        this.board[CB.Square.E1] = CB.Piece.Vcx;
        this.board[CB.Square.A8] = this.board[CB.Square.H8] = CB.Piece.Vd2;
        this.board[CB.Square.B8] = this.board[CB.Square.G8] = CB.Piece.B_KNIGHT;
        this.board[CB.Square.C8] = this.board[CB.Square.F8] = CB.Piece.Vd4;
        this.board[CB.Square.D8] = CB.Piece.Vd0;
        this.board[CB.Square.E8] = CB.Piece.Vcy;
        this.cr = CB.V15t.V160;
        this.numPly = this.V18i = 0
    }
    ;
    d.prototype.boardEquals = function(c) {
        for (var f = 0; f < this.board.length && 64 > f; f++)
            if (this.board[f] !== c[f])
                return !1;
        return !0
    }
    ;
    d.prototype.V18h = function(c) {
        c = new StringIterator(c);
        var f = CB.Square.V16k, g = CB.Square.V165, h;
        for (h = c.Next(); 0 !== h && !Char.IsWhiteSpace(h); h = c.Next())
            if ("/" === h)
                --f,
                g = CB.Square.V165;
            else if (Char.IsDigit(h))
                g += Number(h);
            else {
                var k = CB.Square.V16t(g, f);
                h = CB.Piece.fromString(h);
                CBDebug.assert(h !== CB.Piece.NONE);
                this.board[k] = h;
                g++
            }
        c.isEOF() || (c.skipWhile(Char.IsWhiteSpace),
        c.isEOF() || (this.sd = CB.V15e.fromString(c.Current()),
        c.skipWhile(Char.IsWhiteSpace),
        c.isEOF() || (f = c.AcceptUntil(Char.IsWhiteSpace, !0),
        this.cr = CB.V15t.fromString(f),
        c.isEOF() || (c.skipWhile(Char.IsWhiteSpace),
        f = c.AcceptUntil(Char.IsWhiteSpace, !0),
        "-" === f ? this.ep = d.NOEP : (f = CB.Square.fromString(f),
        this.ep = CB.Square.V16v(f)),
        this.numPly = d.mvToPlyNum(1, this.sd),
        c.isEOF() || (c.skipWhile(Char.IsWhiteSpace),
        c.isEOF() || (f = c.AcceptUntil(Char.IsWhiteSpace, !0),
        this.V18i = Number(f),
        c.isEOF() || (c.skipWhile(Char.IsWhiteSpace),
        c.isEOF() || (c = c.AcceptUntil(Char.IsWhiteSpace, !0),
        (c = Number(c)) || (c = 1),
        this.numPly = d.mvToPlyNum(c, this.sd)))))))))
    }
    ;
    d.prototype.V18g = function(c) {
        this.V18k();
        for (var f = c.length, g = !1, h = 0; h < f; h++)
            if (("b" == c[h] || "s" == c[h]) && "K" == c[h + 1]) {
                g = "s" == c[h];
                break
            }
        var k = 0
          , l = 0;
        for (h = 0; h < f; h++)
            switch (c[h]) {
            case "K":
                k = CB.Piece.KING;
                break;
            case "D":
            case "Q":
                k = CB.Piece.QUEEN;
                break;
            case "T":
            case "R":
                k = CB.Piece.ROOK;
                break;
            case "L":
                k = CB.Piece.BISHOP;
                break;
            case "B":
                k = g ? CB.Piece.PAWN : CB.Piece.BISHOP;
                break;
            case "S":
            case "N":
                k = CB.Piece.KNIGHT;
                break;
            case "P":
                k = CB.Piece.PAWN;
                break;
            case "a":
            case "b":
            case "c":
            case "d":
            case "e":
            case "f":
            case "g":
            case "h":
                48 < c.charCodeAt(h + 1) && 57 > c.charCodeAt(h + 1) ? this.board[(c.charCodeAt(h) - 97 << 3) + c.charCodeAt(h + 1) - 49] = k | l : "b" != c[h] || g || (l = CB.Piece.BLACK);
                break;
            case "s":
                g && (l = CB.Piece.BLACK);
                break;
            case "w":
                l = CB.Piece.WHITE;
                break;
            case ":":
                this.V18l(c.slice(h + 1)),
                h = f
            }
        0 == this.cr && (this.board[CB.Square.E1] == CB.Piece.Vcx && (this.board[CB.Square.H1] == CB.Piece.Vd1 ? this.cr |= CB.V15t.V15v : this.board[CB.Square.A1] == CB.Piece.Vd1 && (this.cr |= CB.V15t.V15u)),
        this.board[CB.Square.E8] == CB.Piece.Vcy && (this.board[CB.Square.H8] == CB.Piece.Vd2 ? this.cr |= CB.V15t.V15x : this.board[CB.Square.A8] == CB.Piece.Vd2 && (this.cr |= CB.V15t.V15w)))
    }
    ;
    d.prototype.V18l = function(c) {
        "b" == c[0] && (this.sd = CB.V15e.BLACK)
    }
    ;
    d.prototype.canMakeNullMove = function() {
        return !this.isCheck()
    }
    ;
    d.prototype.makeNullMove = function() {
        return this.makeMove(new CB.V17g(0,0))
    }
    ;
    d.prototype.V18m = function() {
        return this.unmakeMove(new CB.V17g(0,0))
    }
    ;
    d.prototype.makeMove = function(c) {
        if (c) {
            var f = new CB.V17d(this,c);
            ++this.numPly;
            this.sd = CB.V15e.other(this.sd);
            var g = this.ep;
            this.ep = d.NOEP;
            if (c.isNullMove())
                return f;
            var h = this.board[c.from]
              , k = this.board[c.to]
              , l = CB.Square.V16u(c.from)
              , m = CB.Square.V16u(c.to)
              , n = CB.Square.V16v(c.from)
              , p = CB.Square.V16v(c.to)
              , q = !1;
            if (c.Chess960ShortCastling || c.Chess960LongCastling) {
                var t = c.Chess960CastlingFlags
                  , v = CB.Piece.Vcx + 8 * (1 - this.sd)
                  , z = CB.Piece.Vd1 + 8 * (1 - this.sd);
                c.Chess960ShortCastling ? (q = CB.Square.V16t(CB.Square.V16a, l),
                this.sd == CB.V15e.WHITE ? this.board[c.Chess960InitialBlackKingPosition] = CB.Piece.NONE : this.board[c.Chess960InitialWhiteKingPosition] = CB.Piece.NONE,
                this.board[CB.Square.V16t(CB.Square.V16b, l)] = v,
                this.board[q] = z,
                v = t.charAt(0),
                t = CB.Square.V16t(t.charCodeAt(0) - 65, l),
                "F" != v && "G" != v && (this.board[t] = CB.Piece.NONE)) : (q = CB.Square.V16t(CB.Square.V168, l),
                this.sd == CB.V15e.WHITE ? this.board[c.Chess960InitialBlackKingPosition] = CB.Piece.NONE : this.board[c.Chess960InitialWhiteKingPosition] = CB.Piece.NONE,
                this.board[CB.Square.V16t(CB.Square.V167, l)] = v,
                this.board[q] = z,
                v = t.charAt(1),
                t = CB.Square.V16t(t.charCodeAt(1) - 65, l),
                "D" != v && "C" != v && (this.board[t] = CB.Piece.NONE));
                f.V17f(t, q);
                q = !0
            }
            q || (this.board[c.to] = this.board[c.from],
            this.board[c.from] = CB.Piece.NONE);
            CB.Piece.V15k(h) === CB.Piece.PAWN && (p !== n && p === g && k === CB.Piece.NONE && (k = CB.Piece.V15m(h),
            g = CB.Square.V16t(p, l),
            this.board[g] = CB.Piece.NONE,
            f.V17e(k, g)),
            c.prom !== CB.Piece.NONE && (k = CB.Piece.V15n(c.prom, CB.Piece.side(h)),
            this.board[c.to] = k),
            2 === Math.abs(l - m) && (this.ep = n));
            CB.Piece.V15k(h) !== CB.Piece.KING || q || 2 !== Math.abs(p - n) || (p === CB.Square.V16b ? (t = CB.Square.V16t(CB.Square.V16c, l),
            q = CB.Square.V16t(CB.Square.V16a, l)) : (t = CB.Square.V16t(CB.Square.V165, l),
            q = CB.Square.V16t(CB.Square.V168, l)),
            this.board[q] = this.board[t],
            this.board[t] = CB.Piece.NONE,
            f.V17f(t, q));
            if (this.cr) {
                if (this.cr & CB.V15t.V15y)
                    if (c.from === CB.Square.E1)
                        this.cr &= ~CB.V15t.V15y;
                    else if (c.from === CB.Square.A1 || c.to === CB.Square.A1)
                        this.cr &= ~CB.V15t.V15u;
                    else if (c.from === CB.Square.H1 || c.to === CB.Square.H1)
                        this.cr &= ~CB.V15t.V15v;
                if (this.cr & CB.V15t.V15z)
                    if (c.from === CB.Square.E8)
                        this.cr &= ~CB.V15t.V15z;
                    else if (c.from === CB.Square.A8 || c.to === CB.Square.A8)
                        this.cr &= ~CB.V15t.V15w;
                    else if (c.from === CB.Square.H8 || c.to === CB.Square.H8)
                        this.cr &= ~CB.V15t.V15x
            }
            return f
        }
    }
    ;
    d.prototype.unmakeMove = function(c, f) {
        !c.isNullMove() && (this.board[c.from] = f.mvd,
        this.board[c.to] = CB.Piece.NONE,
        this.board[f.fldVct] = f.vct,
        f.to2 || f.from2) && (this.board[f.from2] = this.board[f.to2],
        this.board[f.to2] = CB.Piece.NONE);
        this.cr = f.cr;
        this.ep = f.ep;
        --this.numPly;
        this.sd = CB.V15e.other(this.sd)
    }
    ;
    d.prototype.V3hu = function() {
        var c = this.generateSemiLegals();
        return this.filterLegals(c)
    }
    ;
    d.prototype.generateSemiLegals = function(c) {
        for (var f = [], g = 0; g < this.board.length; ++g) {
            var h = this.board[g];
            h !== CB.Piece.NONE && (c && h !== c || CB.Piece.side(h) === this.sd && this.V18n(g, h, f))
        }
        return f
    }
    ;
    d.prototype.V18o = function(c, f) {
        f || (f = this.board[c]);
        var g = [];
        this.V18n(c, f, g);
        return g
    }
    ;
    d.prototype.V18p = function(c, f) {
        c = this.V18o(c, f);
        return this.filterLegals(c)
    }
    ;
    d.prototype.V18n = function(c, f, g) {
        switch (f) {
        case CB.Piece.Vd5:
        case CB.Piece.Vd6:
            this.V18q(f, c, g);
            break;
        case CB.Piece.W_KNIGHT:
        case CB.Piece.B_KNIGHT:
            this.V18r(f, c, g);
            break;
        case CB.Piece.Vd3:
        case CB.Piece.Vd4:
            this.V18s(f, c, g);
            break;
        case CB.Piece.Vd1:
        case CB.Piece.Vd2:
            this.V18t(f, c, g);
            break;
        case CB.Piece.Vcz:
        case CB.Piece.Vd0:
            this.V18u(f, c, g);
            break;
        case CB.Piece.Vcx:
        case CB.Piece.Vcy:
            this.V18v(f, c, g)
        }
    }
    ;
    d.prototype.V18w = function(c, f) {
        return this.generateSemiLegals(f).filter(function(g) {
            return g.to === c
        })
    }
    ;
    d.g_arrKnightMvs = [[2, 1], [1, 2], [-1, 2], [-2, 1], [-2, -1], [-1, -2], [1, -2], [2, -1]];
    d.g_arrKingMvs = [[1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1], [0, -1], [1, -1]];
    d.g_arrBishopMvs = [[1, 1], [-1, 1], [-1, -1], [1, -1]];
    d.g_arrRookMvs = [[1, 0], [0, 1], [-1, 0], [0, -1]];
    d.prototype.V18r = function(c, f, g) {
        this.V18x(c, f, d.g_arrKnightMvs, !1, g)
    }
    ;
    d.prototype.V18v = function(c, f, g) {
        this.V18x(c, f, d.g_arrKingMvs, !1, g);
        if (c === CB.Piece.Vcx) {
            if (!(this.cr & CB.V15t.V15y) || this.isAttacked(CB.Square.E1, CB.V15e.BLACK))
                return;
            this.cr & CB.V15t.V15v && this.board[CB.Square.F1] === CB.Piece.NONE && this.board[CB.Square.G1] === CB.Piece.NONE && (this.isAttacked(CB.Square.F1, CB.V15e.BLACK) || this.isAttacked(CB.Square.G1, CB.V15e.BLACK) || g.push(CB.V17g.g_mvW00));
            this.cr & CB.V15t.V15u && this.board[CB.Square.D1] === CB.Piece.NONE && this.board[CB.Square.C1] === CB.Piece.NONE && this.board[CB.Square.B1] === CB.Piece.NONE && (this.isAttacked(CB.Square.D1, CB.V15e.BLACK) || this.isAttacked(CB.Square.C1, CB.V15e.BLACK) || g.push(CB.V17g.g_mvW000))
        }
        c === CB.Piece.Vcy && this.cr & CB.V15t.V15z && !this.isAttacked(CB.Square.E8, CB.V15e.WHITE) && (this.cr & CB.V15t.V15x && this.board[CB.Square.F8] === CB.Piece.NONE && this.board[CB.Square.G8] === CB.Piece.NONE && (this.isAttacked(CB.Square.F8, CB.V15e.WHITE) || this.isAttacked(CB.Square.G8, CB.V15e.WHITE) || g.push(CB.V17g.g_mvB00)),
        this.cr & CB.V15t.V15w && this.board[CB.Square.D8] === CB.Piece.NONE && this.board[CB.Square.C8] === CB.Piece.NONE && this.board[CB.Square.B8] === CB.Piece.NONE && (this.isAttacked(CB.Square.D8, CB.V15e.WHITE) || this.isAttacked(CB.Square.C8, CB.V15e.WHITE) || g.push(CB.V17g.g_mvB000)))
    }
    ;
    d.prototype.V18t = function(c, f, g) {
        this.V18x(c, f, d.g_arrRookMvs, !0, g)
    }
    ;
    d.prototype.V18s = function(c, f, g) {
        this.V18x(c, f, d.g_arrBishopMvs, !0, g)
    }
    ;
    d.prototype.V18u = function(c, f, g) {
        this.V18t(c, f, g);
        this.V18s(c, f, g)
    }
    ;
    d.prototype.V18q = function(c, f, g) {
        var h = c === CB.Piece.Vd5 ? 1 : -1
          , k = c === CB.Piece.Vd5 ? CB.Square.V16k : CB.Square.V16d
          , l = CB.Square.V16v(f)
          , m = CB.Square.V16u(f)
          , n = CB.Piece.side(c)
          , p = m + h
          , q = CB.Square.V16t(l, p);
        k = p === k;
        this.board[q] === CB.Piece.NONE && (k ? (g.push(new CB.V17g(f,q,CB.Piece.QUEEN)),
        g.push(new CB.V17g(f,q,CB.Piece.ROOK)),
        g.push(new CB.V17g(f,q,CB.Piece.BISHOP)),
        g.push(new CB.V17g(f,q,CB.Piece.KNIGHT))) : (q = new CB.V17g(f,q),
        g.push(q)),
        c === CB.Piece.Vd5 && m === CB.Square.V16e || c === CB.Piece.Vd6 && m === CB.Square.V16j) && (q = CB.Square.V16t(l, m + 2 * h),
        this.board[q] === CB.Piece.NONE && (q = new CB.V17g(f,q),
        g.push(q)));
        for (q = -1; 1 >= q; q += 2) {
            var t = l + q;
            p = m + h;
            if (CB.Square.isLegal(t, p)) {
                p = CB.Square.V16t(t, p);
                var v = this.board[p];
                if (v !== CB.Piece.NONE && CB.Piece.side(v) !== n)
                    if (k)
                        g.push(new CB.V17g(f,p,CB.Piece.QUEEN)),
                        g.push(new CB.V17g(f,p,CB.Piece.ROOK)),
                        g.push(new CB.V17g(f,p,CB.Piece.BISHOP)),
                        g.push(new CB.V17g(f,p,CB.Piece.KNIGHT));
                    else {
                        var z = new CB.V17g(f,p);
                        g.push(z)
                    }
                v === CB.Piece.NONE && t === this.ep && (v = n === CB.V15e.WHITE ? CB.Square.V16h : CB.Square.V16g,
                t = CB.Square.V16t(t, v),
                t = this.board[t],
                m === v && t === CB.Piece.V15m(c) && (p = new CB.V17g(f,p),
                g.push(p)))
            }
        }
    }
    ;
    d.prototype.V18x = function(c, f, g, h, k) {
        c = CB.Piece.side(c);
        for (var l = CB.Square.V16u(f), m = CB.Square.V16v(f), n = 0, p = g.length; n < p; ++n) {
            var q = g[n]
              , t = m
              , v = l
              , z = h;
            do {
                t += q[0];
                v += q[1];
                if (!CB.Square.isLegal(t, v))
                    break;
                var E = CB.Square.V16t(t, v)
                  , C = this.board[E];
                if (C !== CB.Piece.NONE)
                    if (CB.Piece.side(C) === c)
                        break;
                    else
                        z = !1;
                E = new CB.V17g(f,E);
                k.push(E)
            } while (z)
        }
    }
    ;
    d.prototype.filterLegals = function(c) {
        var f = this;
        return c.filter(function(g) {
            return !f.V18y(g)
        })
    }
    ;
    d.prototype.isProm = function(c, f) {
        var g = this.sd;
        return this.board[c] == CB.Piece.V15n(CB.Piece.PAWN, g) && CB.Square.V16u(f) == CB.Square.V176(g)
    }
    ;
    d.prototype.V18z = function(c, f) {
        return this.board[c] == CB.Piece.V15n(CB.Piece.PAWN, this.sd) && CB.Square.F(c) != CB.Square.F(f) && 0 == this.board[f]
    }
    ;
    d.prototype.isLegalFromTo = function(c, f) {
        var g = new CB.V17g(c,f);
        this.isProm(c, f) && (g.prom = CB.Piece.QUEEN);
        return this.isLegalMove(g)
    }
    ;
    d.prototype.isLegalMove = function(c) {
        return null != c && (c.isNullMove() || this.V190(c)) && !this.V18y(c)
    }
    ;
    d.prototype.V190 = function(c) {
        if (null == c)
            return !1;
        var f = c.from
          , g = c.to;
        if (f === g)
            return !1;
        var h = this.board[f];
        if (h === CB.Piece.NONE || CB.Piece.side(h) !== this.sd)
            return !1;
        g = this.board[g];
        return g !== CB.Piece.NONE && CB.Piece.side(h) === CB.Piece.side(g) ? !1 : this.V18o(f, h).some(c.equals.bind(c))
    }
    ;
    d.prototype.V18y = function(c) {
        var f = this.makeMove(c)
          , g = this.V191();
        this.unmakeMove(c, f);
        return g
    }
    ;
    d.prototype.V18f = function() {
        this.board = Array(CB.Board.V177);
        this.V18k()
    }
    ;
    d.prototype.V18k = function() {
        for (var c = 0; 64 > c; c++)
            this.board[c] = CB.Piece.NONE;
        this.sd = CB.V15e.WHITE;
        this.cr = 0;
        this.ep = d.NOEP;
        this.numPly = this.V18i = 0
    }
    ;
    d.prototype.V192 = function() {
        for (var c = "", f = CB.Square.V16k; f >= CB.Square.V16d; --f) {
            for (var g = 0, h = CB.Square.V165; h <= CB.Square.V16c; ++h) {
                var k = CB.Square.V16t(h, f);
                k = this.board[k];
                k === CB.Piece.NONE ? ++g : (0 < g && (c += g),
                g = 0,
                c += CB.Piece.toString(k))
            }
            0 < g && (c += g);
            f > CB.Square.V16d && (c += "/")
        }
        c = c + " " + CB.V15e.toString(this.sd);
        c = c + " " + CB.V15t.toString(this.cr);
        c += " ";
        this.ep === d.NOEP ? c += "-" : (f = this.getEPField(),
        c += CB.Square.toString(f));
        return c
    }
    ;
    d.prototype.toFEN = function() {
        var c = this.V192();
        c += " 0 ";
        var f = this.getMoveNum();
        return c + f
    }
    ;
    d.prototype.toString = d.prototype.toFEN;
    d.prototype.V193 = function() {
        for (var c = " KQNBRP".split(""), f = "", g = [], h = [], k = 0; 16 > k; k++)
            g.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            h[k] = 0;
        for (k = 0; 64 > k; k++) {
            var l = this.board[k] & 15;
            l && 16 > h[l] && (g[l][h[l]++] = k)
        }
        f += "w";
        for (k = 1; 7 > k; k++)
            if (0 < h[k]) {
                1 < k && (f += ",");
                l = c[k];
                f += String(l);
                for (var m = 0; m < h[k]; m++)
                    l = g[k][m],
                    f += CB.Square.toString(l),
                    m < h[k] - 1 && (f += ",")
            }
        f += "/b";
        for (k = 9; 15 > k; k++)
            if (0 < h[k])
                for (9 < k && (f += ","),
                l = c[k & 7],
                f += String(l),
                m = 0; m < h[k]; m++)
                    l = g[k][m],
                    f += CB.Square.toString(l),
                    m < h[k] - 1 && (f += ",");
        return f
    }
    ;
    d.prototype.getPiece = function(c) {
        return this.board[c]
    }
    ;
    d.prototype.getPieces = function() {
        for (var c = [], f = 0; f < this.board.length; ++f) {
            var g = this.board[f];
            g !== CB.Piece.NONE && (g = new e(g,f),
            c.push(g))
        }
        return c
    }
    ;
    d.prototype.countPieces = function(c) {
        for (var f = 0, g = 0; g < this.board.length; ++g)
            this.board[g] == c && f++;
        return f
    }
    ;
    d.prototype.countAllPieces = function(c) {
        for (var f = 0, g = 0; g < this.board.length; ++g)
            this.board[g] && 0 != (this.board[g] & CB.Piece.V15g) == !!c && f++;
        return f
    }
    ;
    d.prototype.V194 = function(c) {
        for (var f = 0; f < this.board.length; ++f)
            if (this.board[f] && 0 != (this.board[f] & CB.Piece.V15g) == c && (this.board[f] & CB.Piece.V15j) == CB.Piece.KING)
                return f;
        return -1
    }
    ;
    e.prototype.toString = function() {
        var c = CB.Piece.V15k(this.piece);
        return CB.Piece.toString(c) + CB.Square.toString(this.field)
    }
    ;
    e.prototype.equals = function(c) {
        return this.piece === c.piece && this.field === c.field
    }
    ;
    d.prototype.getBoard = function() {
        return this.board
    }
    ;
    d.prototype.isWTM = function() {
        return this.sd === CB.V15e.WHITE
    }
    ;
    d.prototype.isBTM = function() {
        return this.sd === CB.V15e.BLACK
    }
    ;
    d.prototype.setBTM = function(c) {
        this.sd = c ? CB.V15e.BLACK : CB.V15e.WHITE
    }
    ;
    d.prototype.getBTM = d.prototype.isBTM;
    d.prototype.flipSideToMove = function() {
        this.sd = CB.V15e.other(this.sd)
    }
    ;
    d.prototype.getSideToMove = function() {
        return this.sd
    }
    ;
    d.prototype.setSideToMove = function(c) {
        this.sd = c
    }
    ;
    d.prototype.V195 = function() {
        if (this.canMakeNullMove()) {
            var c = ObjUtil.clone(this);
            c.makeNullMove();
            return c
        }
    }
    ;
    d.prototype.setCastleRights = function(c) {
        this.cr = c
    }
    ;
    d.prototype.canCastle = function(c) {
        return c ? this.cr & (CB.V15t.V15x | CB.V15t.V15w) : this.cr & (CB.V15t.V15v | CB.V15t.V15u)
    }
    ;
    d.prototype.V196 = function() {
        return this.ep === d.NOEP ? -1 : this.ep % 8
    }
    ;
    d.prototype.getCPPEPFile = function() {
        return this.ep === d.NOEP ? 0 : this.ep % 8 + 1
    }
    ;
    d.prototype.setCPPEPFile = function(c) {
        this.ep = 0 >= c ? d.NOEP : c - 1
    }
    ;
    d.prototype.getEPField = function() {
        return this.ep === d.NOEP ? -1 : CB.Square.V16t(this.ep, this.sd === CB.V15e.WHITE ? CB.Square.V16i : CB.Square.V16f)
    }
    ;
    d.prototype.getEPCol = function() {
        return this.ep
    }
    ;
    d.prototype.getEPVictimField = function() {
        return this.ep === d.NOEP ? -1 : CB.Square.V16t(this.ep, this.sd === CB.V15e.WHITE ? CB.Square.V16h : CB.Square.V16g)
    }
    ;
    d.prototype.getCastleRights = function() {
        return this.cr
    }
    ;
    d.prototype.V197 = function() {
        var c = 0;
        this.board[CB.Square.E1] === CB.Piece.Vcx && (this.board[CB.Square.A1] === CB.Piece.Vd1 && (c |= CB.V15t.V15u),
        this.board[CB.Square.H1] === CB.Piece.Vd1 && (c |= CB.V15t.V15v));
        this.board[CB.Square.E8] === CB.Piece.Vcy && (this.board[CB.Square.A8] === CB.Piece.Vd2 && (c |= CB.V15t.V15w),
        this.board[CB.Square.H8] === CB.Piece.Vd2 && (c |= CB.V15t.V15x));
        return c
    }
    ;
    d.prototype.V198 = function() {
        for (var c = [], f = this.sd == CB.V15e.WHITE ? CB.Square.V16h : CB.Square.V16g, g = CB.Piece.V15n(CB.Piece.PAWN, this.sd), h = CB.Piece.V15m(g), k = CB.Square.V165; k <= CB.Square.V16c; ++k) {
            var l = CB.Square.V16t(k, f);
            this.board[l] === h && (k > CB.Square.V165 && this.board[CB.Square.V16t(k - 1, f)] === g || k < CB.Square.V16c && this.board[CB.Square.V16t(k + 1, f)] === g) && c.push(k)
        }
        return c
    }
    ;
    d.prototype.isAttacked = function(c, f) {
        return 0 < this.getAttacksTo(c, f).length
    }
    ;
    d.prototype.getAttacksTo = function(c, f) {
        var g = [];
        this.V199(c, f, g);
        return g
    }
    ;
    d.prototype.V199 = function(c, f, g) {
        this.getPawnAttacksTo(c, f, g);
        this.getKnightAttacksTo(c, f, g);
        this.getKingAttacksTo(c, f, g);
        this.V19a(c, f, g)
    }
    ;
    d.prototype.getKnightAttacksTo = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrKnightMvs, b(CB.Piece.V15n(CB.Piece.KNIGHT, f)), !1, g)
    }
    ;
    d.prototype.getKingAttacksTo = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrKingMvs, b(CB.Piece.V15n(CB.Piece.KING, f)), !1, g)
    }
    ;
    d.prototype.getQueenAttacksTo = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrBishopMvs, b(CB.Piece.V15n(CB.Piece.QUEEN, f)), !0, g);
        this.getAttacks(c, f, d.g_arrRookMvs, b(CB.Piece.V15n(CB.Piece.QUEEN, f)), !0, g)
    }
    ;
    d.prototype.getPawnMovesTo = function(c, f, g) {
        if (this.board[c] === CB.Piece.NONE) {
            var h = CB.Square.V16u(c)
              , k = CB.Square.V16v(c);
            if (f !== CB.V15e.WHITE || h !== CB.Square.V16d && h !== CB.Square.V16e)
                if (f !== CB.V15e.BLACK || h !== CB.Square.V16k && h !== CB.Square.V16j) {
                    var l = f === CB.V15e.WHITE ? -1 : 1;
                    c = CB.Piece.V15n(CB.Piece.PAWN, f);
                    f = f === CB.V15e.WHITE ? CB.Square.V16g : CB.Square.V16h;
                    var m = CB.Square.V16t(k, h + l);
                    this.board[m] === c ? g.push(m) : h === f && this.board[m] === CB.Piece.NONE && (h = CB.Square.V16t(k, h + 2 * l),
                    this.board[h] === c && g.push(h))
                }
        }
    }
    ;
    d.prototype.getBishopAttacksTo = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrBishopMvs, b(CB.Piece.V15n(CB.Piece.BISHOP, f)), !0, g)
    }
    ;
    d.prototype.getRookAttacksTo = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrRookMvs, b(CB.Piece.V15n(CB.Piece.ROOK, f)), !0, g)
    }
    ;
    d.prototype.V19a = function(c, f, g) {
        this.getAttacks(c, f, d.g_arrRookMvs, b(CB.Piece.V15n(CB.Piece.ROOK, f), CB.Piece.V15n(CB.Piece.QUEEN, f)), !0, g);
        this.getAttacks(c, f, d.g_arrBishopMvs, b(CB.Piece.V15n(CB.Piece.BISHOP, f), CB.Piece.V15n(CB.Piece.QUEEN, f)), !0, g)
    }
    ;
    d.g_arrWhPawnAttks = [[1, 1], [-1, 1]];
    d.g_arrBlPawnAttks = [[1, -1], [-1, -1]];
    d.prototype.getPawnAttacksTo = function(c, f, g) {
        f === CB.V15e.WHITE ? this.getAttacks(c, f, d.g_arrWhPawnAttks, b(CB.Piece.Vd5), !1, g) : this.getAttacks(c, f, d.g_arrBlPawnAttks, b(CB.Piece.Vd6), !1, g)
    }
    ;
    d.prototype.getAttacks = function(c, f, g, h, k, l) {
        var m = CB.Square.V16u(c);
        c = CB.Square.V16v(c);
        for (var n = 0, p = g.length; n < p; ++n) {
            var q = g[n]
              , t = c
              , v = m
              , z = k;
            do {
                t -= q[0];
                v -= q[1];
                if (!CB.Square.isLegal(t, v))
                    break;
                var E = CB.Square.V16t(t, v)
                  , C = this.board[E];
                if (C !== CB.Piece.NONE) {
                    if (CB.Piece.side(C) !== f)
                        break;
                    else
                        z = !1;
                    h(C) && l.push(E)
                }
            } while (z)
        }
    }
    ;
    d.prototype.V19b = function(c) {
        c = CB.Piece.V15n(CB.Piece.KING, c);
        return this.board.indexOf(c)
    }
    ;
    d.prototype.V19c = function(c, f) {
        c = CB.Piece.V15n(c, f);
        return this.board.indexOf(c)
    }
    ;
    d.prototype.isCheck = function() {
        var c = this.V19b(this.sd)
          , f = CB.V15e.other(this.sd);
        return this.isAttacked(c, f)
    }
    ;
    d.prototype.V191 = function() {
        var c = CB.V15e.other(this.sd);
        c = this.V19b(c);
        return this.isAttacked(c, this.sd)
    }
    ;
    d.prototype.isMate = function() {
        return this.isCheck() ? !this.hasLegals() : !1
    }
    ;
    d.prototype.isStaleMate = function() {
        return this.isCheck() ? !1 : !this.hasLegals()
    }
    ;
    d.prototype.V19d = function() {
        return this.isCheck() || this.isMate() || this.isStaleMate() ? !1 : (this.makeMove(new CB.V17g),
        !0)
    }
    ;
    d.prototype.hasLegals = function() {
        return 0 < this.V3hu().length
    }
    ;
    d.prototype.getVictim = function(c) {
        var f = this.board[c.to];
        return f !== CB.Piece.NONE ? f : CB.Piece.V15k(this.board[c.from]) === CB.Piece.PAWN && CB.Square.V16v(c.from) !== CB.Square.V16v(c.to) ? (c = CB.Square.V16t(CB.Square.V16v(c.to), CB.Square.V16u(c.from)),
        this.board[c]) : CB.Piece.NONE
    }
    ;
    d.prototype.isTake = function(c) {
        return this.getVictim(c) !== CB.Piece.NONE
    }
    ;
    d.prototype.V19e = function(c) {
        var f = c.from
          , g = this.board[f]
          , h = {
            needCol: !1,
            needRow: !1
        }
          , k = CB.Piece.V15k(g);
        if (k === CB.Piece.PAWN || k === CB.Piece.KING)
            return h;
        for (var l = [], m = 0; m < CB.Board.V177; ++m)
            this.board[m] === g && m !== f && l.push(m);
        if (!l.length || k === CB.Piece.BISHOP && l.every(function(v) {
            return CB.Square.V170(v) !== CB.Square.V170(f)
        }))
            return h;
        m = k = !0;
        for (var n = !1, p = 0, q = l.length; p < q; ++p) {
            var t = l[p];
            this.V18o(t, g).some(function(v) {
                return v.to === c.to
            }) && (n = !0,
            k &= CB.Square.V16v(t) !== CB.Square.V16v(f),
            m &= CB.Square.V16u(t) !== CB.Square.V16u(f))
        }
        n && (h.needCol = k || !m,
        h.needRow = !k);
        return h
    }
    ;
    d.prototype.preCalcCtx = function(c) {
        this.preSetMinCtx(c);
        if (!c.isNullMove()) {
            var f = this.V19e(c);
            c.setNeedCol(f.needCol);
            c.setNeedRow(f.needRow)
        }
    }
    ;
    d.prototype.preSetMinCtx = function(c) {
        if (c.isNullMove())
            c.setMoved(CB.Piece.V15n(CB.Piece.PAWN, this.sd)),
            c.setVictim(CB.Piece.NONE);
        else {
            c.setMoved(this.board[c.from]);
            var f = this.getVictim(c);
            c.setVictim(f);
            c.setIsCastling()
        }
    }
    ;
    d.prototype.postCalcCtx = function(c, f) {
        if (c.isNullMove())
            c.setCheck(!1);
        else {
            var g = this.isCheck();
            c.setCheck(g);
            g && f && c.setMate(!this.hasLegals())
        }
    }
    ;
    d.prototype.read = function(c) {
        this.board = c.readByteArray(CB.Board.V177);
        this.sd = c.readInt();
        this.ep = c.readByte() - 1;
        this.cr = c.readByte();
        this.numPly = 0
    }
    ;
    d.prototype.write = function(c) {
        c.writeByteArray(this.board, CB.Board.V177);
        c.writeInt(this.sd);
        c.writeByte(this.ep + 1);
        c.writeByte(this.cr)
    }
    ;
    d.prototype.copyTo = function(c) {
        c.sd = this.sd;
        c.ep = this.ep;
        c.cr = this.cr;
        for (var f = 0; 64 > f; f++)
            c.board[f] = this.board[f]
    }
    ;
    d.packBoard = function(c) {
        for (var f = Array(32), g = 0, h = f.length; g < h; ++g)
            f[g] = c[2 * g] | c[2 * g + 1] << 4;
        return f
    }
    ;
    d.unpackBoard = function(c) {
        for (var f = Array(2 * c.length), g = 0, h = c.length; g < h; ++g)
            f[2 * g] = c[g] & 15,
            f[2 * g + 1] = c[g] >> 4;
        return f
    }
    ;
    d.prototype.V19f = function(c, f) {
        for (var g = 0; g < this.board.length; g++)
            CB.Piece.side(this.board[g]) == f && (c[g] = this.board[g])
    }
    ;
    d.prototype.setEquals = function(c) {
        for (var f = 0; f < this.board.length; f++)
            if (this.board[f] != c.board[f])
                return !1;
        return this.sd != c.sd || this.ep != c.ep || this.cr != c.cr ? !1 : !0
    }
    ;
    d.prototype.setGreater = function(c) {
        for (var f = 0; f < this.board.length; f++)
            if (this.board[f] != c.board[f])
                return this.board[f] > c.board[f];
        return this.sd != c.sd ? this.sd > c.sd : this.ep != c.ep ? this.ep > c.ep : this.cr != c.cr ? this.cr > c.cr : !1
    }
    ;
    d.prototype.dump = function(c) {
        var f = new CB.Board;
        f.copyFrom(this.board);
        f.V17b().forEach(void 0 !== c ? c : function(g) {}
        );
        f = "s=" + this.sd + ", ep=" + this.ep + ", cr=" + this.cr;
        void 0 !== c && c(f)
    }
    ;
    d.prototype.isLegal = function() {
        var c = this.getPieces();
        if (32 < c.length || 2 > c.length)
            return !1;
        for (var f = Array(CB.Piece.Vd6 + 1), g = 0; g < f.length; ++g)
            f[g] = 0;
        for (g = 0; g < c.length; ++g) {
            var h = c[g];
            ++f[h.piece];
            if (CB.Piece.V15k(h.piece) === CB.Piece.PAWN && (h = CB.Square.V16u(h.field),
            h == CB.Square.V16d || h == CB.Square.V16k))
                return !1
        }
        return 1 !== f[CB.Piece.Vcx] || 1 !== f[CB.Piece.Vcy] || 8 < f[CB.Piece.Vd5] || 8 < f[CB.Piece.Vd6] ? !1 : !0
    }
    ;
    d.prototype.V19g = function(c) {
        if (c.length != this.board.length)
            return !1;
        for (var f = 0; f < this.board.length; f++)
            if (this.board[f] != c[f])
                return !1;
        return !0
    }
    ;
    d.prototype.V19h = function(c) {
        for (var f = [], g = 0; g < this.board.length; g++)
            this.board[g] == c && f.push(g);
        return f
    }
    ;
    d.fromValues = function(c, f, g, h) {
        var k = new d;
        c.copyTo(k.board);
        k.sd = f;
        k.setCastleRights(g);
        k.setCPPEPFile(h);
        return k
    }
    ;
    d.prototype.V183 = function() {
        var c = new CB.Board;
        c.copyFrom(this.board);
        this.sd = 1 - this.sd;
        this.setCastleRights((this.cr & 3) << 2 | this.cr >> 2 & 3);
        for (var f = 0; 64 > f; f++)
            this.board[f ^ 7] = c.sqs[f] ? c.sqs[f] ^ 8 : 0
    }
    ;
    d.prototype.V19i = 0;
    d.prototype.V19j = 1;
    d.prototype.NORM_FILE_SWAP = 2;
    d.prototype.V19k = 4;
    d.prototype.V19l = 8;
    d.prototype.V19m = 16;
    d.prototype.V19n = function() {
        if (this.ep) {
            if (this.sd) {
                var c = (this.ep - 1 << 3) + CB.Square.A4
                  , f = !1;
                this.board[c] == (CB.Piece.PAWN | CB.V15e.WHITE) && (c > CB.Square.A4 && this.board[c - 8] == (CB.Piece.PAWN | CB.Piece.BLACK) ? f = !0 : c < CB.Square.H4 && this.board[c + 8] == (CB.Piece.PAWN | CB.Piece.BLACK) && (f = !0))
            } else
                c = (this.ep - 1 << 3) + CB.Square.A5,
                f = !1,
                this.board[c] == (CB.Piece.PAWN | CB.Piece.BLACK) && (c > CB.Square.A5 && this.board[c - 8] == (CB.Piece.PAWN | CB.Piece.WHITE) ? f = !0 : c < CB.Square.H5 && this.board[c + 8] == (CB.Piece.PAWN | CB.Piece.WHITE) && (f = !0));
            f || (this.ep = 0)
        }
    }
    ;
    d.prototype.V19o = [CB.Square.H8, CB.Square.G8, CB.Square.F8, CB.Square.E8, CB.Square.D8, CB.Square.C8, CB.Square.B8, CB.Square.A8, CB.Square.H7, CB.Square.G7, CB.Square.F7, CB.Square.E7, CB.Square.D7, CB.Square.C7, CB.Square.B7, CB.Square.B8, CB.Square.H6, CB.Square.G6, CB.Square.F6, CB.Square.E6, CB.Square.D6, CB.Square.C6, CB.Square.C7, CB.Square.C8, CB.Square.H5, CB.Square.G5, CB.Square.F5, CB.Square.E5, CB.Square.D5, CB.Square.D6, CB.Square.D7, CB.Square.D8, CB.Square.H4, CB.Square.G4, CB.Square.F4, CB.Square.E4, CB.Square.E5, CB.Square.E6, CB.Square.E7, CB.Square.E8, CB.Square.H3, CB.Square.G3, CB.Square.F3, CB.Square.F4, CB.Square.F5, CB.Square.F6, CB.Square.F7, CB.Square.F8, CB.Square.H2, CB.Square.G2, CB.Square.G3, CB.Square.G4, CB.Square.G5, CB.Square.G6, CB.Square.G7, CB.Square.G8, CB.Square.H1, CB.Square.H2, CB.Square.H3, CB.Square.H4, CB.Square.H5, CB.Square.H6, CB.Square.H7, CB.Square.H8];
    d.prototype.V19p = [!1, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !0, !1, !1, !1, !1, !1, !1, !1];
    d.prototype.normalize = function() {
        var c = this.V19i;
        this.sd && (this.V183(),
        c |= this.V19j);
        this.V19n();
        var f = this.V19b(CB.V15e.WHITE)
          , g = this.V19b(CB.V15e.BLACK);
        if (!this.cr) {
            for (var h = !1, k = 0; 64 > k; k++)
                if ((this.board[k] & PIECE) == CB.Piece.PAWN) {
                    h = !0;
                    break
                }
            var l = 0;
            32 > (f & 56) && (c |= this.NORM_FILE_SWAP,
            l ^= 56);
            h || (3 < (f & 7) && (c |= this.V19k,
            l ^= 7),
            k = f ^ l,
            this.V19o[k] != k ? c |= this.V19l : this.V19p[k] && (k = g ^ l,
            this.V19o[k] != k && (c |= this.V19l)));
            if (c & (this.NORM_FILE_SWAP | this.V19k | this.V19l)) {
                g = new CB.Board;
                g.copyFrom(aBoard);
                if (c & this.V19l)
                    for (k = 0; 64 > k; k++)
                        f = k ^ l,
                        f = (f & 7) << 3 | f >> 3 & 7,
                        this.board[f] = g[k];
                else if (l)
                    for (k = 0; 64 > k; k++)
                        this.board[k] = g[k ^ l];
                this.ep && c & NORM_FILE_SWAP && (this.ep = 9 - this.ep)
            }
        }
        return c
    }
    ;
    d.prototype.V184 = function(c) {
        this.V19n();
        var f = 0;
        c & this.NORM_FILE_SWAP && (f ^= 56);
        c & this.V19k && (f ^= 7);
        if (f || c & this.V19l) {
            var g = new CB.Board;
            g.copy(this.board);
            if (c & this.V19l)
                for (var h = 0; 64 > h; h++)
                    this.board[((h & 7) << 3 | h >> 3 & 7) ^ f] = g[h];
            else if (f)
                for (h = 0; 64 > h; h++)
                    this.board[h] = g[h ^ f];
            this.ep && c & this.NORM_FILE_SWAP && (this.ep = 9 - this.ep)
        }
        c & this.V19j && this.V183()
    }
    ;
    return d
}();
"use strict";
CB.Annotation = function() {
    var e = function() {};
    e.V19q = "[#]";
    e.prototype.toString = function() {
        var b = "", d;
        for (d in this)
            this.hasOwnProperty(d) && (b += this[d].toString());
        return b
    }
    ;
    e.prototype.V19r = function(b, d) {
        for (var c = 0; c < d; ++c) {
            b.readShort();
            var f = AnnoRec.readHeader(b);
            f.len -= AnnoRec.ANNO_HEAD_SIZE;
            var g = AnnoFactory.factory(f.type);
            g ? (g.read(f.len, b),
            this.setItem(f.type, g)) : b.skip(f.len)
        }
        return this
    }
    ;
    e.prototype.V19s = function(b, d) {
        this.V19r(b, d);
        return this
    }
    ;
    e.prototype.write = function(b) {
        var d = 0, c;
        for (c in this)
            this.hasOwnProperty(c) && d++;
        b.writeShort(d);
        for (c in this)
            this.hasOwnProperty(c) && this[c].write(b, c)
    }
    ;
    e.prototype.write2 = function(b) {
        var d = [], c;
        for (c in this)
            this.hasOwnProperty(c) && d.push(c);
        var f = b.getPos();
        b.writeByte(0);
        var g = 0;
        for (c = 0; c < d.length; c++)
            this[d[c]].write && (this[d[c]].write(b, d[c]),
            g++);
        d = b.getPos();
        b.setPos(f);
        b.writeByte(g);
        b.setPos(d)
    }
    ;
    e.write = function(b, d) {
        d ? d.write(b) : b.writeShort(0)
    }
    ;
    e.write2 = function(b, d) {
        d ? d.write2(b) : b.writeByte(0)
    }
    ;
    e.prototype.read = function(b) {
        var d = b.readShort();
        this.V19r(b, d)
    }
    ;
    e.prototype.read2 = function(b) {
        var d = b.readByte();
        d && this.V19s(b, d)
    }
    ;
    e.prototype.fromDataBuf = e.prototype.read;
    e.prototype.V3il = e.prototype.write;
    e.readFactory = function(b) {
        var d = b.readShort();
        return d ? (new CB.Annotation).V19r(b, d) : null
    }
    ;
    e.readFactory2 = function(b) {
        var d = b.readUint8();
        return d ? (new CB.Annotation).V19s(b, d) : null
    }
    ;
    e.prototype.empty = function() {
        for (var b in this)
            if (this.hasOwnProperty(b))
                return !1;
        return !0
    }
    ;
    e.prototype.count = function() {
        var b = 0, d;
        for (d in this)
            this.hasOwnProperty(d) && b++;
        return b
    }
    ;
    e.prototype.setItem = function(b, d) {
        this[b] = d
    }
    ;
    e.prototype.hasItem = function(b) {
        return !!this[b]
    }
    ;
    e.prototype.getItem = function(b) {
        return this[b]
    }
    ;
    e.prototype.deleteItem = function(b) {
        delete this[b]
    }
    ;
    e.prototype.V19t = function(b) {
        this[CB.AnnoType.V19u] = new CB.V19v(b)
    }
    ;
    e.prototype.setPreText = function(b) {
        this[CB.AnnoType.V19u] = new CB.V19v(b)
    }
    ;
    e.prototype.addPostText = function(b) {
        this[CB.AnnoType.V19w] && this[CB.AnnoType.V19w].m_str.length ? this[CB.AnnoType.V19w].addText(" " + b) : this[CB.AnnoType.V19w] = new CB.V19v(b)
    }
    ;
    e.prototype.hasDiagram = function() {
        if (this[CB.AnnoType.V19w] && this[CB.AnnoType.V19w].m_str.length)
            return -1 != this[CB.AnnoType.V19w].m_str.search("[#]")
    }
    ;
    e.prototype.toggleDiagram = function() {
        this[CB.AnnoType.V19w] && this[CB.AnnoType.V19w].m_str.length ? -1 != this[CB.AnnoType.V19w].m_str.search("[#]") ? (this[CB.AnnoType.V19w].m_str = this[CB.AnnoType.V19w].m_str.replace("[#]", ""),
        this[CB.AnnoType.V19w].m_str.length || delete this[CB.AnnoType.V19w]) : this[CB.AnnoType.V19w].m_str += "[#]" : this[CB.AnnoType.V19w] = new CB.V19v("[#]")
    }
    ;
    e.prototype.V19x = function() {}
    ;
    e.prototype.V19y = function() {
        return this.hasItem(CB.AnnoType.V19u)
    }
    ;
    e.prototype.V19z = function() {
        if (this.V19y())
            return this[CB.AnnoType.V19u].getString()
    }
    ;
    e.prototype.getPostText = function() {
        if (this.V1a0())
            return this[CB.AnnoType.V19w].getString()
    }
    ;
    e.prototype.V1a0 = function() {
        return this.hasItem(CB.AnnoType.V19w)
    }
    ;
    e.prototype.addSymbol = function(b) {
        this[CB.AnnoType.V1a1] || (this[CB.AnnoType.V1a1] = new CB.V1a2);
        this[CB.AnnoType.V1a1].addSymbol(b)
    }
    ;
    e.prototype.V1a3 = function() {
        return void 0 !== this[CB.AnnoType.V1a1]
    }
    ;
    e.prototype.getSymbol = function() {
        return this[CB.AnnoType.V1a1]
    }
    ;
    e.prototype.V1a4 = function() {
        return this.hasItem(CB.AnnoType.SQUARE_LIST)
    }
    ;
    e.prototype.V1a5 = function() {
        return this.hasItem(CB.AnnoType.ARROW_LIST)
    }
    ;
    e.prototype.hasTraining = function() {
        return this.hasItem(CB.AnnoType.V18c)
    }
    ;
    e.prototype.getTraining = function() {
        return this[CB.AnnoType.V18c]
    }
    ;
    e.prototype.setTraining = function(b) {
        b ? this[CB.AnnoType.V18c] = b : delete this[CB.AnnoType.V18c]
    }
    ;
    return e
}();
"use strict";
CB.GameResultEnum = {
    V1a6: -1,
    BLACK_WINS: 0,
    DRAW: 1,
    WHITE_WINS: 2,
    V1a7: 3,
    UNDEFINED_RESULT: 3,
    V1a8: 3,
    isFinished: function(e) {
        return e >= this.BLACK_WINS && e <= this.WHITE_WINS
    },
    toString: function(e) {
        switch (e) {
        case this.V1a6:
            return lm.IN_PROGRESS;
        case this.WHITE_WINS:
            return "1\u20130";
        case this.BLACK_WINS:
            return "0\u20131";
        case this.DRAW:
            return "\u00bd\u2013\u00bd";
        case this.UNDEFINED_RESULT:
            return "";
        default:
            return ""
        }
    },
    fromString: function(e) {
        switch (e) {
        case "\u00bd\u2013\u00bd":
        case "1/2-1/2":
        case "1/2":
            return this.DRAW;
        case "1\u20130":
        case "1-0":
            return this.WHITE_WINS;
        case "0\u20131":
        case "0-1":
            return this.BLACK_WINS
        }
    }
};
CB.GameResult = function() {
    var e = function(b) {
        this.n = b
    };
    e.prototype.isFinished = function() {
        return CB.GameResultEnum.isFinished(this.n)
    }
    ;
    e.prototype.toString = function() {
        return CB.GameResultEnum.toString(this.n)
    }
    ;
    e.prototype.toPGNString = function() {
        switch (this.n) {
        default:
            return "*";
        case CB.GameResultEnum.WHITE_WINS:
            return "1-0";
        case CB.GameResultEnum.BLACK_WINS:
            return "0-1";
        case CB.GameResultEnum.DRAW:
            return "1/2-1/2"
        }
    }
    ;
    return e
}();
CB.V1a9 = function() {
    var e = function() {
        this.white = new CB.PlayerData;
        this.black = new CB.PlayerData;
        this.event = new CB.EventData;
        this.player = [this.white, this.black];
        this.result = CB.GameResultEnum.V1a7;
        this.clockParams = null
    };
    e.prototype.annotator = "";
    e.prototype.round = 0;
    e.prototype.subRound = 0;
    e.prototype.board = 0;
    e.prototype.eco = "";
    e.prototype.result = CB.GameResultEnum.V1a7;
    e.prototype.eloWh = 0;
    e.prototype.eloBl = 0;
    e.prototype.date = new CB.Date;
    e.prototype.clockParams = null;
    e.prototype.getStrPlayers = function(b, d) {
        var c = this.white.getListStr(d || 0);
        (d = this.black.getListStr(d || 0)) && d.length ? b ? (b = c,
        0 < this.eloWh && (b += " (" + this.eloWh + ")"),
        b = b + " - " + d,
        0 < this.eloBl && (b += " (" + this.eloBl + ")")) : b = c + "-" + d : b = c;
        return b
    }
    ;
    e.prototype.toString = function() {
        var b = this.event.toString()
          , d = this.date.toLocaleString()
          , c = this.getStrPlayers(!0, 999);
        b && (c += ", " + b);
        d && (c += " " + d);
        return c
    }
    ;
    e.prototype.getWhite = function() {
        return this.white.getListStr(99)
    }
    ;
    e.prototype.getClockParams = function() {
        return this.clockParams
    }
    ;
    e.prototype.setClockParams = function(b) {
        this.clockParams = b
    }
    ;
    e.prototype.setWhite = function(b) {
        this.white.init(b)
    }
    ;
    e.prototype.getBlack = function() {
        return this.black.getListStr(99)
    }
    ;
    e.prototype.setBlack = function(b) {
        this.black.init(b)
    }
    ;
    e.prototype.V1aa = function() {
        return this.eco
    }
    ;
    e.prototype.V1ab = function(b) {
        this.eco = b
    }
    ;
    e.prototype.getEvent = function() {
        return this.event.event
    }
    ;
    e.prototype.V1ac = function(b) {
        this.event.event = b
    }
    ;
    e.prototype.getAnnotator = function() {
        return this.annotator
    }
    ;
    e.prototype.V1ad = function(b) {
        this.annotator = b
    }
    ;
    e.prototype.getSite = function() {
        return this.event.site
    }
    ;
    e.prototype.V1ae = function(b) {
        this.event.site = b
    }
    ;
    e.prototype.isDefined = function() {
        return this.getWhite() || this.getBlack()
    }
    ;
    e.prototype.getResult = function() {
        return this.result
    }
    ;
    e.prototype.getCBResult = function() {
        return new CB.GameResult(this.result)
    }
    ;
    e.prototype.V1af = function(b) {
        var d = this.result;
        this.result = "undefined" != typeof b ? b : CB.GameResultEnum.V1a7;
        return d
    }
    ;
    e.prototype.V1ag = function(b) {
        b && (b = b.split("."),
        this.round = parseInt(b[0], 10),
        1 < b.length && (this.subRound = parseInt(b[1], 10)))
    }
    ;
    e.prototype.getRoundStr = function() {
        var b = "";
        this.round && (b = "" + this.round,
        this.subRound && (b = b + "." + this.subRound));
        return b
    }
    ;
    e.prototype.getEloWhite = function() {
        return this.eloWh
    }
    ;
    e.prototype.V1ah = function(b) {
        this.eloWh = b
    }
    ;
    e.prototype.getEloBlack = function() {
        return this.eloBl
    }
    ;
    e.prototype.V1ai = function(b) {
        this.eloBl = b
    }
    ;
    e.prototype.V1aj = function() {
        return Math.max(this.eloWh, this.eloBl)
    }
    ;
    e.prototype.V1ak = function(b) {
        this.date = CB.Date.fromPGNString(b)
    }
    ;
    e.prototype.V1al = function() {
        return this.date.toLocaleString()
    }
    ;
    e.prototype.getDateStr = function() {
        return this.date.toPGNString()
    }
    ;
    e.prototype.setDeleted = function(b) {
        this.flags = (this.deleted = b) ? this.flags | 1 : this.flags & -2
    }
    ;
    e.prototype.read = function(b) {
        this.white = CB.PlayerData.readFactory(b);
        this.black = CB.PlayerData.readFactory(b);
        try {
            this.event = CB.EventData.readFactory(b);
            CB.SourceData.readFactory(b);
            this.annotator = CB.AnnotatorData.readFactory(b).name;
            this.eloWh = b.readShort();
            this.eloBl = b.readShort();
            this.V1am = b.V3ig();
            this.eco = CB.V1a9.V1an(this.V1am);
            this.result = CB.V1a9.V1ao(b);
            this.date = new CB.Date;
            var d = b.readInt();
            this.date.V10d(d);
            this.plyCount = b.readShort();
            this.round = b.readByte();
            this.subRound = b.readByte();
            b.readInt();
            b.readInt();
            b.skipSizedRead()
        } catch (c) {
            return console.log(c),
            !1
        }
        return !0
    }
    ;
    e.prototype.V1aq = function(b) {
        b.beginSizedRead();
        this.eType = b.V3in();
        this.nGame = b.V3im();
        this.white = CB.PlayerData.readFactory(b);
        this.black = CB.PlayerData.readFactory(b);
        this.event = CB.EventData.readFactory(b);
        this.eloWh = b.V3in();
        this.eloBl = b.V3in();
        this.result = CB.V1a9.V1ao(b);
        this.date = new CB.Date;
        this.date.fromDataBuf(b);
        this.plyCount = b.V3in();
        this.round = b.readByte();
        this.subRound = b.readByte();
        b.V3ii();
        b.V3ii();
        this.V1am = b.V3ig();
        this.eco = CB.V1a9.V1an(this.V1am);
        this.flags = b.V3ig();
        this.deleted = !!(this.flags & 1);
        b.endSizedRead()
    }
    ;
    e.prototype.compactToDataBuf = function(b) {
        b.beginSizedWrite();
        void 0 !== this.eType ? b.V3ih(this.eType) : b.V3ih(1);
        void 0 !== this.nGame ? b.V3ij(this.nGame) : b.V3ij(0);
        this.white.write(b);
        this.black.write(b);
        this.event.write(b);
        b.writeShort(this.eloWh);
        b.writeShort(this.eloBl);
        e.V1ar(this.result, b);
        void 0 === this.date && (this.date = new CB.Date(0));
        this.date.V3il(b);
        this.plyCount ? b.V3ih(this.plyCount) : b.V3ih(0);
        b.writeByte(this.round);
        b.writeByte(this.subRound);
        b.V3i3(0);
        b.V3i3(0);
        this.V1am ? b.V3i4(this.V1am) : b.V3i4(0);
        void 0 === this.flags && (this.flags = 0);
        this.deleted && (this.flags |= 1);
        b.V3i4(this.flags);
        b.endSizedWrite()
    }
    ;
    e.prototype.write = function(b) {
        this.white.write(b);
        this.black.write(b);
        this.event.write(b);
        (new CB.SourceData).write(b);
        (new CB.AnnotatorData(this.annotator)).write(b);
        b.writeShort(this.eloWh);
        b.writeShort(this.eloBl);
        b.writeShort(0);
        e.V1ar(this.result, b);
        b.writeInt(0);
        this.plyCount ? b.writeShort(this.plyCount) : b.writeShort(0);
        b.writeByte(this.round);
        b.writeByte(this.subRound);
        b.writeInt(0);
        b.writeInt(0);
        b.beginSizedWrite();
        b.endSizedWrite()
    }
    ;
    e.V1ao = function(b) {
        var d = b.readByte();
        b.readByte();
        b.readByte();
        return d
    }
    ;
    e.V1ar = function(b, d) {
        d.writeByte(b);
        d.writeByte(0);
        d.writeByte(0)
    }
    ;
    e.V1an = function(b) {
        var d = b >> 7;
        if (0 < d && 500 >= d) {
            d--;
            var c = String.fromCharCode("A".charCodeAt() + d / 100)[0];
            d %= 100;
            c += String.fromCharCode("0".charCodeAt() + d / 10)[0];
            c += String.fromCharCode("0".charCodeAt() + d % 10)[0];
            if (d = b & 127)
                c += "/",
                100 <= d ? c += "99" : (c += String.fromCharCode("0".charCodeAt() + d / 10)[0],
                c += String.fromCharCode("0".charCodeAt() + d % 10)[0])
        } else
            c = "";
        return c
    }
    ;
    e.prototype.toJson = function() {
        return {
            gameNo: this.nGame,
            white: this.white.getListStr(1),
            black: this.black.getListStr(1),
            event: this.event.event,
            date: this.date.getYear(),
            result: CB.GameResultEnum.toString(this.result),
            elow: this.eloWh,
            elob: this.eloBl,
            eco: this.eco,
            round: this.round,
            subRound: this.subRound,
            plyCount: this.plyCount,
            flags: this.flags
        }
    }
    ;
    e.prototype.matchesFilterVal = function(b) {
        return -1 != this.white.last.search(b) || -1 != this.black.last.search(b) || -1 != this.event.site.search(b) || -1 != this.event.event.search(b) ? !0 : !1
    }
    ;
    return e
}();
CB.PlayerData = function() {
    var e = function(b, d) {
        this.first = b ? b : "";
        this.last = d ? d : ""
    };
    e.prototype.toString = function() {
        return this.first && this.first.length && this.last && this.last.length ? String.formatEx("{last}, {first}", this) : this.last || this.first
    }
    ;
    e.prototype.getListStr = function(b) {
        return b && this.first && this.last && this.first.length && this.last.length ? this.last + "," + this.first.substr(0, b) : this.last || this.first
    }
    ;
    e.V1as = !0;
    e.V1at = !1;
    e.prototype.init = function(b) {
        if (e.V1as) {
            var d = b.split(",");
            if (2 === d.length) {
                this.first = d[1].trim();
                this.last = d[0].trim();
                return
            }
        }
        if (e.V1at && (d = b.split(" "),
        1 < d.length)) {
            this.first = d[0];
            this.last = d.slice(1).join(" ");
            return
        }
        this.last = b;
        this.first = ""
    }
    ;
    e.create = function(b) {
        var d = new e;
        d.init(b);
        return d
    }
    ;
    e.prototype.read = function(b) {
        this.last = b.readByteLenASCIIString(50);
        this.first = b.readByteLenASCIIString(50);
        this.last = this.last.trim();
        this.first = this.first.trim()
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        b.writeByteLenASCIIString(this.last);
        b.writeByteLenASCIIString(this.first)
    }
    ;
    return e
}();
CB.EventData = function() {
    var e = function() {
        this.event = this.site = "";
        this.V1av = this.flags = this.V1au = this.nation = this.type = this.V1ap = 0
    };
    e.prototype.read = function(b) {
        this.site = b.readByteLenASCIIString(100);
        this.event = b.readByteLenASCIIString(100);
        this.V1ap = b.readInt();
        this.type = b.readShort();
        this.nation = b.readShort();
        this.V1au = b.readByte();
        this.flags = b.readByte();
        this.V1av = b.readShort()
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        b.writeByteLenASCIIString(this.site);
        b.writeByteLenASCIIString(this.event);
        b.writeInt(this.V1ap);
        b.writeShort(this.type);
        b.writeShort(this.nation);
        b.writeByte(this.V1au);
        b.writeByte(this.flags);
        b.writeShort(this.V1av)
    }
    ;
    e.prototype.toString = function() {
        var b = this.event;
        this.site && this.event && this.site != this.event && (b += " ");
        this.site != this.event && (b += this.site);
        return b
    }
    ;
    return e
}();
CB.SourceData = function() {
    var e = function() {
        this.V1aw = this.source = "";
        this.V1az = this.version = this.V1ay = this.V1ax = 0
    };
    e.prototype.read = function(b) {
        this.source = b.readByteLenASCIIString(100);
        this.V1aw = b.readByteLenASCIIString(100);
        this.V1ax = b.readInt();
        this.V1ay = b.readInt();
        this.version = b.readByte();
        this.V1az = b.readByte()
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        b.writeByteLenASCIIString(this.source);
        b.writeByteLenASCIIString(this.V1aw);
        b.writeInt(this.V1ax);
        b.writeInt(this.V1ay);
        b.writeByte(this.version);
        b.writeByte(this.V1az)
    }
    ;
    return e
}();
CB.TeamData = function() {
    var e = function() {
        this.V1b0 = "";
        this.nation = this.V1b1 = this.num = 0
    };
    e.prototype.toString = function() {
        return this.num ? String.formatEx("{team} {num}", this) : this.V1b0
    }
    ;
    e.prototype.read = function(b) {
        this.V1b0 = b.readByteLenASCIIString(100);
        this.num = b.readShort();
        this.V1b1 = b.readByte();
        this.nation = b.readByte()
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        b.writeByteLenASCIIString(this.V1b0);
        b.writeShort(this.num);
        b.writeByte(this.V1b1);
        b.writeByte(this.nation)
    }
    ;
    return e
}();
CB.AnnotatorData = function() {
    var e = function(b) {
        this.name = "";
        b && (this.name = b)
    };
    e.prototype.toString = function() {
        return this.name
    }
    ;
    e.prototype.read = function(b) {
        this.name = b.readByteLenASCIIString(100)
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        b.writeByteLenASCIIString(this.name)
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.V1b2");
CB.V1b2 = function() {
    function e(k, l) {
        return function() {
            return k.apply(l, arguments)
        }
    }
    var b = function(k) {
        this.V1b3(!1);
        this.cmsiManager = k;
        this.commandHandlerId = V3ir.commands.registerCommandHandler(this)
    };
    b.prototype.execCommand = function(k) {
        switch (k) {
        case V3ir.V3ia.CMS_SOLUTION:
            this.V1b4();
            break;
        case V3ir.V3ia.CMS_TRYAGAIN:
            this.V1b5();
            break;
        case V3ir.V3ia.CMS_PREVIOUS:
            this.V1b6();
            break;
        case V3ir.V3ia.CMS_NEXT:
            this.V1b7()
        }
    }
    ;
    b.prototype.V1b8 = function(k) {
        this.gamekernel = this.kernel = k
    }
    ;
    b.prototype.V1b9 = function(k, l) {
        var m = 1E3 * l - 500;
        0 > m && (m = 0);
        return k >= m && k < 1E3 * l ? !0 : !1
    }
    ;
    var d = 0
      , c = 0;
    b.prototype.V1ba = function() {
        var k = document.getElementById("audio");
        if (k) {
            var l = k.currentTime;
            l < d && (c = 0);
            d = l;
            var m = !1;
            if (!k.paused)
                for (k = c; k < f.length; k++)
                    if (CB.V1b2.prototype.V1b9(f[k].timestamp, l))
                        CB.V1b2.prototype.V1bb(f[k].type, f[k].command, f[k].cmsReader),
                        m = !0,
                        c = k;
                    else if (m)
                        break
        }
    }
    ;
    b.prototype.V1bb = function(k, l, m) {
        m = !0;
        "TEXT" == k && (m = !1);
        k = new CB.V11;
        k.ConstructFromString(l, m);
        k.rewind();
        l = new CB.V1bc;
        l.fromDataBuf(k);
        l.fillExecutedMove();
        l._doExecute(g.kernel.game);
        g.kernel.game.updateFromExtern()
    }
    ;
    b.prototype.V1bd = function(k) {
        f.push(k)
    }
    ;
    var f = []
      , g = this
      , h = [];
    b.prototype.gamekernel;
    b.prototype.V1be = function(k) {
        var l = document.getElementById("audio");
        l.src = "Content/" + k + ".mp3";
        var m = new XMLHttpRequest;
        m.open("GET", "Content/" + k + ".json", !1);
        m.send();
        k = Ext.JSON.decode(m.responseText);
        l.load();
        l.play();
        for (l = 0; l < k.length; l++)
            this.V1bd(k[l]);
        g = this;
        this.myTimer || (this.myTimer = setInterval(this.V1ba.bind(this), 500))
    }
    ;
    b.prototype.V1bf = function(k) {
        g = this;
        var l = document.getElementById("audio");
        if (this.gamekernel.cmsiManager) {
            var m = this.gamekernel.cmsiManager.V1bg(this.V1bh(k));
            m == RecorderState.RecordStopped ? (V3ir.panelMgr.setVideoTitle(this.V1bh(k)),
            this.currentNormal = this.V1bh(k)) : m == RecorderState.RecordSolution ? V3ir.panelMgr.setVideoTitle("Solution") : m == RecorderState.RecordOtherMoves && V3ir.panelMgr.setVideoTitle("Variant")
        }
        l.onended = function() {
            g.onMediaEnded()
        }
        ;
        l.addEventListener("timeupdate", function() {
            g.currentPlayerTime = Math.floor(l.currentTime).toString()
        }, !1);
        if (m = l.canPlayType("audio/mp3"))
            m = !0,
            l.src = "http://80.237.188.86:8080/js/" + k + ".mp3";
        else if (m = l.canPlayType("audio/ogg"))
            l.src = "http://80.237.188.86:8080/js/" + k + ".ogg";
        m && (l.load(),
        l.play(),
        this.myTimer || (this.myTimer = setInterval(this.V1ba.bind(this), 500)),
        Ext.data.JsonP.request({
            url: "http://80.237.188.86:8080/json/pubpoints.index",
            callbackKey: "callback",
            params: {
                format: "json",
                file: k
            },
            callback: function(n, p) {
                if (1 == n)
                    for (f && (f.length = 0,
                    f = []),
                    g.currentpubpoint = k,
                    n = 0; n < p.length; n++)
                        e(this.CB.V1b2.prototype.V1bd(p[n]), g)
            },
            scope: window
        }))
    }
    ;
    b.prototype.showMessage = function(k) {
        Ext.MessageBox.alert("Status", k, V1bj)
    }
    ;
    b.prototype.onNormalEnded = function() {
        this.currentNormal = this.currentpubpoint;
        h = this.gamekernel.cmsiManager.V1bk(g.gamekernel.getCurPos());
        h.length ? (g.gamekernel.getCurPos().isWTM() ? g.showMessage("Enter a move on the board for white") : g.showMessage("Enter a move on the board for black"),
        this.V1b3(!0),
        this.saveGameState()) : this.playNextChapter()
    }
    ;
    b.prototype.onSolutionEnded = function() {
        alert("Click Ok to continue with this lecture");
        this.playNextChapter()
    }
    ;
    b.prototype.onVariationEnded = function() {}
    ;
    b.prototype.onWrongMovesEnded = function() {}
    ;
    b.prototype.V1b3 = function(k) {
        this.questionActive = k
    }
    ;
    b.prototype.V1bl = function() {
        this.V1bm();
        this.saveGameState()
    }
    ;
    b.prototype.onSolution = function() {
        if (this.questionActive)
            for (var k = 0; k < h.length; k++)
                if (this.cmsiManager.V1bg(h[k]) == RecorderState.RecordSolution) {
                    this.V1b3(!1);
                    this.V1bf(this.gamekernel.cmsiManager.index + "/" + h[k]);
                    break
                }
    }
    ;
    b.prototype.saveGameState = function() {
        var k = new CB.V11;
        g.kernel.game.write(k);
        k.rewind();
        this.gameSaved = new CB.Game;
        this.gameSaved.read(k)
    }
    ;
    b.prototype.V1bm = function() {
        this.gameSaved && g.kernel.game.assign(this.gameSaved)
    }
    ;
    b.prototype.playNextChapter = function() {
        if (this.currentNormal) {
            var k = this.cmsiManager.V1bn(this.V1bh(this.currentNormal));
            this.V1bf(this.gamekernel.cmsiManager.index + "/" + this.V1bh(k))
        }
    }
    ;
    b.prototype.V1bo = function() {
        if (this.currentNormal) {
            var k = this.cmsiManager.V1bp(this.V1bh(this.currentNormal));
            this.V1bf(this.gamekernel.cmsiManager.index + "/" + this.V1bh(k))
        }
    }
    ;
    b.prototype.V1bh = function(k) {
        for (var l = 0, m = 0; m < k.length; m++)
            "/" == k[m] && (l = m);
        return k.substr(l, k.length - l + 1)
    }
    ;
    b.prototype.V1bq = function(k) {
        var l = !1;
        if (this.questionActive) {
            for (var m = 0; m < h.length; m++) {
                var n = this.gamekernel.cmsiManager.V1br(h[m]);
                n.from == k.from && n.to == k.to && (n = this.gamekernel.cmsiManager.V1bg(h[m]),
                n == RecorderState.RecordSolution ? (l = h[m],
                this.V1bf(this.gamekernel.cmsiManager.index + "/" + l),
                this.V1b3(!1),
                l = !0) : n == RecorderState.RecordGoodMove ? (l = h[m],
                this.V1bf(this.gamekernel.cmsiManager.index + "/" + l),
                l = !0) : n == RecorderState.RecordOtherMoves && (l = h[m],
                this.V1bf(this.gamekernel.cmsiManager.index + "/" + l),
                l = !0))
            }
            l || (alert("This is not a right move, press try again"),
            l = !0)
        }
        this.V1bm();
        this.saveGameState();
        return l
    }
    ;
    b.prototype.onMediaEnded = function() {
        if (this.gamekernel.cmsiManager)
            switch (this.gamekernel.cmsiManager.V1bg(g.currentpubpoint)) {
            case RecorderState.RecordStopped:
            case RecorderState.RecordNormal:
                g.onNormalEnded();
                break;
            case RecorderState.RecordSolution:
                g.onSolutionEnded();
                break;
            case RecorderState.RecordGoodMove:
                g.onVariationEnded();
                break;
            case RecorderState.RecordOtherMoves:
                g.onWrongMovesEnded()
            }
    }
    ;
    b.prototype.V1b5 = function() {
        g.saveGameState()
    }
    ;
    b.prototype.V1b4 = function() {
        g.onSolution()
    }
    ;
    b.prototype.V1b6 = function() {
        this.V1bo()
    }
    ;
    b.prototype.V1b7 = function() {
        g.playNextChapter()
    }
    ;
    return b
}();
"use strict";
CB.namespace("CB.V1bs");
CB.V1bs = function() {
    var e = function(b, d) {
        this.kernel = b;
        this.V1bt = []
    };
    e.prototype.V1bu = function(b) {
        this.V1bt.push(b)
    }
    ;
    e.prototype.V1bw = function(b, d, c, f, g) {
        b = (new Position(b)).toFen();
        return V1bx(b) + "x" + String(d) + "y" + String(c) + "v" + f + "u" + g
    }
    ;
    e.prototype.V1bx = function(b) {
        for (var d = 0; d < b.length; d++)
            "/" == b[d] && (b = "z");
        return b
    }
    ;
    e.prototype.V1by = function(b) {
        b = b.replace(/z/g, "/");
        var d = b.search("x");
        return -1 != d && 8 < b.substr(0, d).length ? b.substr(0, d) : ""
    }
    ;
    e.prototype.V1br = function(b) {
        var d = b.search("x")
          , c = b.search("y")
          , f = b.search("v")
          , g = b.search("K")
          , h = b.search("k")
          , k = 0
          , l = 0;
        -1 != d && -1 != c && -1 != f && f > c && c > d && -1 != g && -1 != h && (k = b.substr(d + 1, c - d - 1),
        b = b.substr(c + 1, f - c - 1),
        k = parseInt(k),
        l = parseInt(b));
        return new CB.V17g(k,l,0,0)
    }
    ;
    e.prototype.V1bg = function(b) {
        var d = 0
          , c = b.search("v")
          , f = b.search("u")
          , g = b.search("K")
          , h = b.search("k");
        -1 != c && -1 != f && -1 != g && -1 != h && f > c && 4 > f - c && (b = b.substr(c + 1, f - c - 1),
        d = parseInt(b));
        return d
    }
    ;
    e.prototype.V1bz = function(b) {
        var d = 0
          , c = b.search("u");
        -1 != c && (b = b.substr(c + 1),
        d = parseInt(b));
        return d
    }
    ;
    e.prototype.V1c0 = function(b) {
        b = this.V1by(b);
        return b.length ? new CB.Position(b) : null
    }
    ;
    e.prototype.V1c1 = function(b, d) {
        if (d = this.V1c0(d)) {
            d = d.toFEN();
            b = b.toFEN();
            for (var c = 0, f = 0; f < b.length && !(d.length < f) && d[f] == b[f]; f++)
                if (" " == b[f] && (c++,
                3 == c))
                    return !0
        }
        return !1
    }
    ;
    e.prototype.V1bn = function(b) {
        var d = b.substr(b.length - 3, 3);
        d++;
        for (var c = 0; c < this.V1bt.length; c++)
            if (d == this.V1bt[c].substr(this.V1bt[c].length - 3, 3))
                return this.V1bt[c];
        return b
    }
    ;
    e.prototype.V1bp = function(b) {
        var d = b.substr(b.length - 3, 3);
        d--;
        0 > d && (d = 0);
        for (var c = 0; c < this.V1bt.length; c++)
            if (d == this.V1bt[c].substr(this.V1bt[c].length - 3, 3))
                return this.V1bt[c];
        return b
    }
    ;
    e.prototype.V16x = function(b) {
        for (var d = 0; d < this.V1bt.length; d++)
            if (-1 != this.V1bt[d].indexOf(b))
                return this.V1bt[d];
        return ""
    }
    ;
    e.prototype.V1c2 = function(b) {
        for (var d = "", c = 0, f = 0; f < this.V1bt.length; f++)
            if (-1 != b.indexOf(this.V1bt[f])) {
                c = f;
                break
            }
        for (f = c + 1; f < this.V1bt.length; f++)
            if (1 >= this.V1bg(this.V1bt[f])) {
                d = this.V1bt[f];
                break
            }
        return d
    }
    ;
    e.prototype.V1bk = function(b) {
        for (var d = [], c = 0; c < this.V1bt.length; c++)
            this.V1c1(b, this.V1bt[c]) && d.push(this.V1bt[c]);
        return d
    }
    ;
    e.prototype.V1c3 = function(b) {
        for (var d = 0, c = 0; c < this.V1bt.length; c++)
            if (-1 != this.V1bt[c].indexOf(b)) {
                d = c + 1;
                break
            }
        b = this.V1bt.length;
        for (c = d + 1; c < this.V1bt.length; c++) {
            var f = this.V1bg(this.V1bt[c]);
            if (2 != f && 3 != f) {
                b = c;
                break
            }
        }
        for (c = []; d < b; d++)
            f = this.V1br(this.V1bt[d]),
            f.from != f.to && (f.fen = this.V1c0(this.V1bt[d]).toFEN(),
            c.push(f));
        return c
    }
    ;
    return e
}();
"use strict";
CB.V1c4 = {
    V1c5: function(e, b) {
        var d = ObjUtil.clone(e);
        e = d.board[b.from];
        if ((e & CB.Piece.V15j) == CB.Piece.PAWN) {
            d.makeMove(b);
            d.sd = CB.V15e.other(d.sd);
            var c = [];
            d.V18q(e, b.to, c);
            if (2 <= c.length) {
                var f = 0;
                c.forEach(function(g) {
                    (g = d.board[g.to]) && (g & CB.Piece.V15j) != CB.Piece.PAWN && f++
                });
                return 2 === f
            }
        }
        return !1
    },
    sumMaterial: function(e, b) {
        var d = 0
          , c = [0, 0, 900, 325, 325, 450, 100];
        e.board.forEach(function(f) {
            f && CB.Piece.side(f) === b && (d += c[CB.Piece.V15k(f)])
        });
        return d
    }
};
"use strict";
CB.V1c6 = {
    CANCEL: -1,
    V1c7: -64,
    V1c8: 63,
    V1c9: 64,
    V1ca: 128,
    V1cb: 256,
    V1cc: 512,
    V1cd: 1024,
    V1ce: 2048,
    V1cf: 4096
};
CB.Game = function() {
    var e = function(b, d) {
        b || (b = new CB.Position);
        this.start = b;
        d || (d = new CB.V17l);
        this.mainLine = d;
        this.stk = new CB.LineStack(this.mainLine);
        this.hdr = new CB.V1a9;
        this.initPost()
    };
    e.prototype.start = null;
    e.prototype.cur = null;
    e.prototype.mainLine = null;
    e.prototype.stk = null;
    e.prototype.hdr = null;
    e.prototype.init = function(b, d) {
        e.call(this, b, d);
        this.fireOnChanged();
        this.fireOnHeaderChanged()
    }
    ;
    e.prototype.initPost = function() {
        this.cur = ObjUtil.clone(this.start);
        e.V1cg(this.start, this.mainLine)
    }
    ;
    e.prototype.assign = function(b, d) {
        this.start = b.start;
        this.cur = b.cur;
        this.mainLine = b.mainLine;
        this.stk = b.stk;
        this.hdr = b.hdr;
        this.replaceGameNo = b.replaceGameNo;
        this.replaceDBId = b.replaceDBId;
        d || (this.fireOnResetGame(),
        this.fireOnCurPosChanged(),
        this.fireOnChanged(),
        this.fireOnHeaderChanged())
    }
    ;
    e.prototype.getMoves = function() {
        return this.mainLine
    }
    ;
    e.prototype.setMoves = function(b) {
        this.mainLine = b
    }
    ;
    e.prototype.exec = function(b, d) {
        d = d || 0;
        for (var c = 0; c < b.mainLine.length && (0 == d || c < d); c++) {
            var f = ObjUtil.clone(b.mainLine[c]);
            this.makeMove(f)
        }
    }
    ;
    e.prototype.getMainLine = e.prototype.getMoves;
    e.prototype.getCurPos = function() {
        return this.cur
    }
    ;
    e.prototype.getStartPos = function() {
        return this.start
    }
    ;
    e.prototype.isNormalInit = function() {
        var b = new CB.Position;
        return ObjUtil.equals(this.start, b)
    }
    ;
    e.prototype.getNextMove = function() {
        var b = this.stk.Top();
        if (b) {
            if (b.isLineEnd())
                return null;
            var d = b.getLine();
            b = b.getMovesToGo();
            return d[b]
        }
        return null
    }
    ;
    e.prototype.getLastMove = function() {
        if (this.stk) {
            var b = this.stk.Top();
            if (!b || b.isLineStart())
                return null;
            var d = b.getLine();
            if (d)
                return b = b.getMovesToGo(),
                d[b - 1]
        }
        return null
    }
    ;
    e.prototype.getPreviousMove = e.prototype.getLastMove;
    e.V1cg = function(b, d) {
        b = ObjUtil.clone(b);
        for (var c = 0, f = d.length; c < f; ++c) {
            var g = d[c];
            b.preCalcCtx(g);
            if (g.hasLines())
                for (var h = g.getSubLines(), k = 0, l = h.length; k < l; ++k)
                    e.V1cg(b, h[k]);
            b.makeMove(g);
            b.postCalcCtx(g, c === d.length - 1)
        }
    }
    ;
    e.prototype.reset = function() {
        e.apply(this);
        this.fireOnResetGame();
        this.fireOnCurPosChanged();
        this.fireOnChanged();
        this.fireOnHeaderChanged()
    }
    ;
    e.prototype.V1af = function(b) {
        this.hdr.V1af(b);
        this.fireOnChanged();
        this.fireOnHeaderChanged()
    }
    ;
    e.prototype.getResult = function() {
        return this.hdr.getResult()
    }
    ;
    e.prototype.getCBResult = function() {
        return this.hdr.getCBResult()
    }
    ;
    e.prototype.getTopItem = function() {
        return this.stk.Top()
    }
    ;
    e.prototype.getTopLine = function() {
        if (this.stk.Top())
            return this.stk.Top().getLine()
    }
    ;
    e.prototype.V1ch = function() {
        if (this.stk.Top())
            return this.stk.Top().getMovesToGo()
    }
    ;
    e.prototype.isLineEnd = function() {
        return this.stk.Top() ? this.stk.Top().isLineEnd() : !1
    }
    ;
    e.prototype.isOnMainLine = function() {
        return 1 === this.stk.length
    }
    ;
    e.prototype.isGameStart = function() {
        return 1 === this.stk.length && this.stk[0].isLineStart()
    }
    ;
    e.prototype.V1ci = function() {
        return 1 === this.stk.length && this.stk[0].isLineEnd()
    }
    ;
    e.prototype.getStackPos = function(b) {
        for (var d = ObjUtil.clone(this.start), c = 0, f = b.length; c < f; ++c) {
            var g = b[c]
              , h = g.getLine();
            g = g.getMovesToGo();
            for (var k = 0; k < g; ++k)
                d.makeMove(h[k])
        }
        return d
    }
    ;
    e.prototype.V1cj = function(b, d) {
        b = e.getStackForLine(b, d);
        return this.getStackPos(b)
    }
    ;
    e.prototype.setStack = function(b) {
        this.stk = b;
        0 < this.stk.length && (this.mainLine = this.stk[0].line);
        this.cur = this.getStackPos(this.stk)
    }
    ;
    e.prototype.V18e = function() {
        return this.stk.V18e()
    }
    ;
    e.prototype.getHeader = function() {
        return this.hdr
    }
    ;
    e.prototype.setHeader = function(b) {
        this.hdr = b
    }
    ;
    e.prototype.getGameNo = function() {
        return this.hdr.nGame
    }
    ;
    e.prototype.V1ck = function() {
        var b = 0;
        this.forAllMoves(function(d) {
            b++
        });
        return b > 2 * this.getMainLine().length ? 5 < this.hdr.annotator.length : !1
    }
    ;
    e.prototype.selfTest = function() {
        CBDebug.call(this.stk, this.stk.selfTest);
        CBDebug.call(this.mainLine, this.mainLine.selfTest, this.start, null, 0)
    }
    ;
    e.prototype.V1cl = function(b) {
        return this.stk.length
    }
    ;
    e.prototype.isOnLastMove = function() {
        return this.getMoveIndex() == this.mainLine.length
    }
    ;
    e.prototype.getPlyNum = function() {
        return this.getCurPos().getPlyNum()
    }
    ;
    e.prototype.getMoveNo = e.prototype.getPlyNum;
    e.prototype.getMoveCount = function() {
        return this.mainLine.length
    }
    ;
    e.prototype.V1cm = function() {
        return this.getLastMove() ? this.getLastMove().getBaggage() : this.V17w
    }
    ;
    e.prototype.V1cn = function(b) {
        this.getLastMove() ? this.getLastMove().setBaggage(b) : this.V17w = b;
        this.fireOnChanged()
    }
    ;
    e.prototype.getAnno = function(b) {
        if (this.getLastMove())
            return this.getLastMove().getAnnoItem(b);
        if (this.mainLine.anno)
            return this.mainLine.anno.getItem(b)
    }
    ;
    e.prototype.setAnno = function(b, d) {
        this.getLastMove() ? (this.getLastMove().setAnnoItem(b, d),
        this.fireOnChanged()) : (this.mainLine.anno = this.mainLine.anno || new CB.Annotation,
        this.mainLine.anno.setItem(b, d));
        this.fireOnAnnoChanged(b, d)
    }
    ;
    e.prototype.V1co = function() {
        this.getLastMove() && (this.getLastMove().deleteAnnoItem(CB.AnnoType.ARROW_LIST),
        this.getLastMove().deleteAnnoItem(CB.AnnoType.SQUARE_LIST),
        this.fireOnChanged())
    }
    ;
    e.prototype.deleteAnno = function(b) {
        this.getLastMove() && (this.getLastMove().deleteAnnoItem(b),
        this.fireOnChanged())
    }
    ;
    e.prototype.V1cp = function(b, d, c) {
        this.mainLine.anno || (this.mainLine.anno = new CB.Annotation);
        this.mainLine.anno.setItem(b, d);
        c || this.fireOnChanged()
    }
    ;
    e.prototype.V1cq = function(b) {
        return this.mainLine.anno ? this.mainLine.anno.getItem(b) : null
    }
    ;
    e.prototype.getOrCreateCurrAnno = function() {
        if (this.getPreviousMove())
            return this.getPreviousMove().hasAnno() || this.getPreviousMove().setAnno(new CB.Annotation),
            this.getPreviousMove().getAnno();
        this.getMoves().hasAnno() || this.getMoves().setAnno(new CB.Annotation);
        return this.getMoves().getAnno()
    }
    ;
    e.prototype.updateFromExtern = function() {
        this.fireOnChanged();
        this.fireOnCurPosChanged()
    }
    ;
    e.prototype.V1cr = function() {
        this.fireOnHeaderChanged()
    }
    ;
    e.prototype.V1cs = function(b, d) {
        for (var c = this.getCurLine(), f = 0; f < c.length; f++)
            c[f] && (b ? c[f].deleteAnnoItem(b) : c[f].setAnno(null));
        d || this.fireOnChanged()
    }
    ;
    e.prototype.deleteAnno = function(b, d) {
        this.getLastMove() && (this.getLastMove().deleteAnnoItem(b),
        d || this.fireOnAnnoChanged())
    }
    ;
    e.prototype.getEvaluationProfile = function() {
        if (this.mainLine.anno && this.mainLine.anno[CB.AnnoType.V1ct])
            return this.mainLine.anno[CB.AnnoType.V1ct];
        var b = this.getCurLine();
        if (b.length && b[0].annos)
            return b[0].annos[CB.AnnoType.V1ct]
    }
    ;
    e.prototype.V1cu = function(b) {
        this.mainLine.anno || (this.mainLine.anno = new CB.Annotation);
        b = b || new CB.EvalProfileAnno;
        return this.mainLine.anno[CB.AnnoType.V1ct] = b
    }
    ;
    e.prototype.V1cv = function() {
        this.mainLine.anno && delete this.mainLine.anno[CB.AnnoType.V1ct]
    }
    ;
    e.prototype.toString = function() {
        var b = new CB.V1cw(CB.V3ho)
          , d = this.hdr.toString();
        d += "\r\n";
        for (var c = 0; c < this.mainLine.length; c++) {
            var f = b.getMoveNota(this.mainLine[c])
              , g = b.getStrMoveNumInLine(c, this.getStartPos().getPlyNum());
            d += g + f;
            c < this.mainLine.length - 1 && (d += " ")
        }
        return d += " " + this.hdr.getCBResult().toString()
    }
    ;
    e.prototype.onSync = function(b) {
        if (V3ir.panelMgr && V3ir.panelMgr.onSync)
            V3ir.panelMgr.onSync(b)
    }
    ;
    e.prototype.V1cx = function(b) {
        for (var d = Math.min(this.mainLine.length, b.mainLine.length), c = 0; c < d; c++)
            if (!this.mainLine[c].equals(b.mainLine[c]))
                return !1;
        return !0
    }
    ;
    e.V1cy = function() {
        return new CB.Game
    }
    ;
    e.prototype.V1cz = function(b) {
        this.delayfireOnCurPosChanged(b);
        this.delayfireOnChanged(b);
        this.delayfireOnHeaderChanged(b);
        this.delayfireOnAnnoChanged(b)
    }
    ;
    e.prototype.V1d0 = function() {
        this.continuefireOnCurPosChanged();
        this.continuefireOnChanged();
        this.continuefireOnHeaderChanged();
        this.continuefireOnAnnoChanged()
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "CurPosChanged", function() {
        return [this, this.getCurPos()]
    });
    V3i1.addEvent(e, "Navigate", function() {
        return [this]
    });
    V3i1.addEvent(e, "Move", function() {
        return [this, this.getLastMove()]
    });
    V3i1.addEvent(e, "Changed");
    V3i1.addEvent(e, "HeaderChanged");
    V3i1.addEvent(e, "AnnoChanged");
    V3i1.addEvent(e, "ResetGame");
    V3i1.addEvent(e, "GameEnd", function() {
        return [this, this.getResult()]
    });
    V3i1.addEvent(e, "ClickInNotation");
    V3i1.addEvent(e, "NotaDoubleClick");
    V3i1.addEvent(e, "Eval");
    return e
}();
(function(e) {
    e.prototype.jump = function(d) {
        d = this.getMoveIndex() + d;
        1 > d && (d = 1);
        d > this.mainLine.length && (d = this.mainLine.length);
        this.gotoIndex(d);
        this.fireOnNavigate();
        this.fireOnCurPosChanged()
    }
    ;
    e.prototype.gotoFirst = function() {
        this.gotoIndex(0)
    }
    ;
    e.prototype.gotoLast = function() {
        this.gotoIndex(this.mainLine.length)
    }
    ;
    e.prototype.gotoIndex = function(d, c) {
        d = e.getStackForIndex(this.mainLine, d);
        this.gotoStack(d, c)
    }
    ;
    e.prototype.gotoLine = function(d, c) {
        d = e.getStackForLine(d, c);
        this.gotoStack(d)
    }
    ;
    e.prototype.gotoSimplePath = function(d) {
        for (var c = this.mainLine, f = new CB.LineStack, g = 0, h = d.length; g < h; ++g) {
            var k = d[g]
              , l = new CB.V18d(c,k.mvsToGo);
            f.push(l);
            g < h - 1 && (c = c[k.mvsToGo].getLine(k.inxLine))
        }
        this.gotoStack(f)
    }
    ;
    e.prototype.triggerOnClickInNotation = function() {
        this.fireOnClickInNotation()
    }
    ;
    e.prototype.gotoNext = function() {
        if (!this.isLineEnd()) {
            var d = this.getNextMove();
            this.cur.makeMove(d);
            (d = this.getTopItem()) && d.incMovesToGo();
            this.fireOnCurPosChanged();
            this.fireOnNavigate()
        }
    }
    ;
    e.prototype.gotoPrev = function(d) {
        if (!this.isGameStart()) {
            var c = this.stk;
            c.gotoPrev();
            this.gotoStack(c, d)
        }
    }
    ;
    e.prototype.gotoPrevClone = function() {
        if (!this.isGameStart()) {
            var d = ObjUtil.clone(this.stk);
            d.gotoPrev();
            this.gotoStack(d)
        }
    }
    ;
    e.prototype.gotoStart = function() {
        this.gotoIndex(0);
        this.fireOnCurPosChanged();
        this.fireOnNavigate()
    }
    ;
    e.prototype.gotoEnd = function() {
        this.gotoIndex(this.mainLine.length);
        this.fireOnCurPosChanged();
        this.fireOnNavigate()
    }
    ;
    e.prototype.gotoStack = function(d, c) {
        this.setStack(d);
        c || (this.fireOnCurPosChanged(),
        this.fireOnNavigate())
    }
    ;
    e.prototype.gotoMove = function(d, c) {
        var f = this.getNextMove();
        return f ? d.equals(f) ? (d.mvd = f.mvd,
        this.gotoNext(),
        c && this.fireOnMove(),
        !0) : (d = f.findLine(d)) ? (this.gotoLine(d, 1),
        c && this.fireOnMove(),
        !0) : !1 : !1
    }
    ;
    e.prototype.beginLineNextMove = function(d) {
        var c = this.getNextMove();
        if (!c || !c.hasLines() || d >= c.getSubLines().length)
            return !1;
        d = c.getSubLines()[d][0];
        return this.gotoMove(d) ? d : !1
    }
    ;
    e.prototype.endLine = function() {
        if (1 < this.stk.length) {
            var d = this.stk[this.stk.length - 2]
              , c = d.getLine();
            this.gotoLine(c, d.mvsToGo);
            return this.getMoveIndex()
        }
    }
    ;
    e.prototype.getMoveOffs = function() {
        return this.cur.numPly - this.start.numPly
    }
    ;
    e.prototype.getMoveIndex = function() {
        var d = 0;
        if (0 < this.stk.length) {
            d = this.stk[this.stk.length - 1];
            var c = d.getLine();
            d = d.getMovesToGo();
            for (var f = this.stk.length - 2; 0 <= f; --f) {
                var g = this.stk[f].getLine()
                  , h = c.getParentMoveIndex()
                  , k = g[h]
                  , l = k.indexOfLine(c);
                CBDebug.assert(0 <= l, "inxPrevLine >= 0");
                for (c = 0; c < l; ++c)
                    d += k.getLine(c).getTreeMoveCount();
                h += 1;
                for (k = g.length; h < k; ++h)
                    if (l = g[h],
                    l.hasLines()) {
                        c = 0;
                        for (var m = l.getSubLinesCount(); c < m; ++c)
                            d += l.getLine(c).getTreeMoveCount()
                    }
                d += g.length;
                c = g
            }
        }
        return d
    }
    ;
    e.getStackForLine = function(d, c) {
        for (var f = []; null != d; c = d.getParentMoveIndex(),
        d = d.getParentLine())
            c = new CB.V18d(d,c),
            f.push(c);
        for (d = new CB.LineStack; 0 < f.length; )
            c = f.pop(),
            d.push(c);
        return d
    }
    ;
    e.getStackForIndex = function(d, c) {
        c = {
            complete: !1,
            inxMv: c
        };
        var f = new CB.LineStack;
        b.call(this, d, c, f);
        return f
    }
    ;
    var b = function(d, c, f) {
        var g = d.length;
        if (c.inxMv <= g)
            return f.push(new CB.V18d(d,c.inxMv)),
            c.complete = !0;
        c.inxMv -= g;
        for (g = d.length - 1; 0 <= g; --g) {
            var h = d[g];
            if (h.hasLines()) {
                f.push(new CB.V18d(d,g));
                for (var k = 0, l = h.getSubLinesCount(); k < l; ++k) {
                    var m = h.getLine(k);
                    b(m, c, f);
                    if (c.complete)
                        return !0
                }
                f.pop()
            }
        }
        return !1
    }
}
)(CB.Game);
(function(e) {
    function b(k) {
        this.cur.preCalcCtx(k);
        var l = this.cur.makeMove(k);
        this.cur.postCalcCtx(k, !0);
        return l
    }
    function d(k, l, m) {
        var n = b.call(this, k)
          , p = this.stk.Top()
          , q = p.getMovesToGo();
        l = p.getLine()[q].getLine(l);
        l[0] = k;
        m(l);
        k = new CB.V18d(l,1);
        this.stk.push(k);
        this.fireOnMove();
        this.fireOnCurPosChanged();
        return n
    }
    function c(k, l) {
        return d.call(this, k, l, function(m) {
            m.length = 1
        })
    }
    function f(k, l) {
        var m = function(n) {
            h(this.cur, n, 1)
        }
        .bind(this);
        return d.call(this, k, l, m)
    }
    function g(k) {
        var l = b.call(this, k)
          , m = this.stk.Top();
        if (m) {
            var n = m.getLine()
              , p = m.getMovesToGo();
            p < n.length ? (m = n[p].newLine(n, p),
            m = new CB.V18d(m,0),
            m.pushMove(k),
            this.stk.push(m)) : m.pushMove(k);
            this.fireOnMove();
            this.fireOnCurPosChanged();
            return l
        }
    }
    function h(k, l, m) {
        m = m || 0;
        for (k = ObjUtil.clone(k); m < l.length; ++m) {
            var n = l[m];
            if (!k.isLegalMove(n))
                break;
            if (n.hasLines())
                for (var p = n.getSubLinesCount() - 1; 0 <= p; --p) {
                    var q = n.getLine(p);
                    h(k, q);
                    0 === q.length && n.removeLine(p)
                }
            k.makeMove(n)
        }
        l.length = m
    }
    e.prototype.storeOnce = function() {
        this.storeState = {
            start: ObjUtil.clone(this.start),
            cur: ObjUtil.clone(this.cur),
            mainLine: ObjUtil.clone(this.mainLine),
            stk: ObjUtil.clone(this.stk)
        }
    }
    ;
    e.prototype.restoreOnce = function() {
        this.storeState && (this.start = ObjUtil.clone(this.storeState.start),
        this.cur = ObjUtil.clone(this.storeState.cur),
        this.mainLine = ObjUtil.clone(this.storeState.mainLine),
        this.stk = ObjUtil.clone(this.storeState.stk))
    }
    ;
    e.prototype.storeOnce2 = function() {
        this.storeState = {
            start: ObjUtil.clone2(this.start),
            cur: ObjUtil.clone2(this.cur),
            mainLine: ObjUtil.clone2(this.mainLine),
            stk: ObjUtil.clone2(this.stk)
        }
    }
    ;
    e.prototype.restoreOnce2 = function() {
        this.storeState && (this.start = ObjUtil.clone2(this.storeState.start),
        this.cur = ObjUtil.clone2(this.storeState.cur),
        this.mainLine = ObjUtil.clone2(this.storeState.mainLine),
        this.stk = ObjUtil.clone2(this.storeState.stk))
    }
    ;
    e.prototype.beginLine = function(k) {
        g.call(this, k)
    }
    ;
    e.prototype.makeMove = function(k, l) {
        0 <= l && 63 >= l && (l = CB.V1c6.V1cc);
        if (this.gotoMove(k))
            return !0;
        var m = null
          , n = l & CB.V1c6.V1c7;
        l &= CB.V1c6.V1c8;
        switch (n) {
        case CB.V1c6.CANCEL & CB.V1c6.V1c7:
        case CB.V1c6.CANCEL:
            break;
        case CB.V1c6.V1ce:
            m = g.call(this, k);
            this.promoteLine();
            break;
        case CB.V1c6.V1cc:
            m = g.call(this, k);
            break;
        case CB.V1c6.V1cd:
            m = this._makeMoveInsertMove.call(this, k);
            break;
        default:
        case CB.V1c6.V1ca:
            m = this._makeMoveOverwriteMain(k);
            break;
        case CB.V1c6.V1cb:
            m = c.call(this, k, l);
            break;
        case CB.V1c6.V1cf:
            m = f.call(this, k, l)
        }
        if (m)
            return k.undo = m,
            !0;
        CB.V3("No Undo", "Type=" + n + ", mv=" + k);
        return !1
    }
    ;
    e.prototype._makeMoveOverwriteMain = function(k) {
        return this._makeMoveInMain(k, function(l, m) {
            l.length = m + 1
        })
    }
    ;
    e.prototype._makeMoveInMain = function(k, l) {
        var m = b.call(this, k);
        m || CB.V3("MoveInMain, no undo", k);
        var n = this.stk.Top();
        if (n) {
            var p = n.getLine()
              , q = n.getMovesToGo();
            p[q] = k;
            l(p, q);
            n.setMovesToGo(q + 1)
        }
        k.undo = m;
        this.fireOnMove();
        this.fireOnCurPosChanged();
        return m
    }
    ;
    e.prototype._makeMoveInsertMove = function(k) {
        this._makeMoveInMain(k, function(l, m) {
            h(this.cur, l, m + 1)
        }
        .bind(this))
    }
}
)(CB.Game);
"use strict";
(function(e) {
    function b(d) {
        CBDebug.call(this, this.selfTest);
        if (!this.isOnMainLine()) {
            var c = this.getTopLine();
            if (c) {
                var f = c.getParentMove()
                  , g = f.getSubLinesCount();
                g && 1 !== g && (c = f.indexOfLine(c),
                d = c + d,
                0 > d || d >= g || (f.swapLines(c, d),
                CBDebug.call(this, this.selfTest),
                this.fireOnChanged()))
            }
        }
    }
    e.prototype.promoteLine = function() {
        if (this.isOnMainLine())
            return !1;
        CBDebug.call(this, this.selfTest);
        this.stk.promoteLine();
        CBDebug.call(this, this.selfTest);
        this.fireOnChanged();
        return !0
    }
    ;
    e.prototype.upLine = function() {
        b.call(this, -1)
    }
    ;
    e.prototype.downLine = function() {
        b.call(this, 1)
    }
    ;
    e.prototype.deleteLine = function() {
        if (!this.isOnMainLine()) {
            CBDebug.call(this, this.selfTest);
            var d = this.stk.shallowClone()
              , c = this.getTopLine();
            c.getParentMove().removeLine(c);
            d.pop();
            this.setStack(d);
            CBDebug.call(this, this.selfTest);
            this.fireOnCurPosChanged();
            this.fireOnChanged()
        }
    }
    ;
    e.prototype.deleteRemaining = function(d) {
        this.stk.deleteRemaining();
        d || this.fireOnChanged()
    }
    ;
    e.prototype.deletePrevious = function() {
        if (0 != this.getCurLine().length) {
            var d = this.stk.shallowClone();
            d.gotoPrev();
            d = this.getStackPos(d);
            this.mainLine = this.stk.deletePrevious();
            this.start = d;
            this.fireOnChanged()
        }
    }
    ;
    e.prototype.unAnnotate = function(d) {
        this.mainLine.unAnnotate(d);
        d = new CB.LineStack(this.mainLine,0);
        this.setStack(d);
        this.fireOnChanged();
        this.fireOnCurPosChanged()
    }
    ;
    e.prototype.startLine = function() {
        this.gotoPrev()
    }
    ;
    e.prototype.forAllMoves = function(d) {
        this.mainLine.forAllMoves(d)
    }
}
)(CB.Game);
(function(e) {
    function b(d) {
        for (var c = [], f = 0, g = this.stk.length; f < g; ++f) {
            var h = this.stk[f]
              , k = h.getLine();
            h = h.getMovesToGo();
            d || f != g - 1 || (h = k.length);
            h && (c = c.concat(k.slice(0, h)))
        }
        return c
    }
    e.prototype.getCurLine = function() {
        return b.call(this, !1)
    }
    ;
    e.prototype.getCurLineCut = function() {
        return b.call(this, !0)
    }
    ;
    e.prototype.getLineStartMoveNo = function() {
        for (var d = 0, c = 0; c < this.stk.length - 1; c++)
            d += this.stk[c].getMovesToGo();
        return d
    }
    ;
    e.prototype.getCurLineIndex = function() {
        for (var d = 0, c = 0, f = this.stk.length; c < f; ++c)
            d += this.stk[c].getMovesToGo();
        return d
    }
    ;
    e.prototype.setCurLineIndex = function(d) {
        for (var c = new LineStack, f = 0, g = this.stk.length; f < g; ++f) {
            var h = this.stk[f]
              , k = h.getMovesToGo();
            if (f < g - 1 && k < d)
                c.push(h),
                d -= k;
            else {
                f = h.getLine();
                k = d;
                d = new CB.V18d(f,k);
                c.push(d);
                break
            }
        }
        this.gotoStack(c)
    }
}
)(CB.Game);
(function(e) {
    function b(f) {
        var g = new CB.Position;
        g = ObjUtil.equals(this.start, g);
        f.V3ip(g);
        g || (this.start.write(f),
        f.writeShort(0),
        f.writeShort(this.start.getMoveNum()),
        f.V3ip(g))
    }
    function d(f) {
        var g = f.V3iq();
        !g && (this.start.read(f),
        f.readShort(),
        g = f.readShort(),
        this.start.setMoveNum(g),
        g = f.V3iq()) && (this.start = new CB.Position)
    }
    function c(f) {
        d.call(this, f);
        var g = new CB.Annotation;
        g.read2(f);
        this.mainLine.read2(f);
        g.empty() || this.mainLine.setAnno(g)
    }
    e.prototype.fromBuf64 = function(f) {
        var g = new CB.V11;
        g.V1o(f);
        f = new CB.Game;
        var h = new CB.V1a9;
        h.V1aq(g);
        g.V3im();
        f.readGameOnly2(g);
        f.setHeader(h);
        this.assign(f)
    }
    ;
    e.prototype.fromBuf642 = function(f) {
        var g = new CB.V11;
        g.V1o(f);
        this.read(g);
        return this
    }
    ;
    e.prototype.toBuf64 = function() {
        var f = new CB.V11;
        this.write(f);
        return f.V1q()
    }
    ;
    e.arrayToBuf64 = function(f) {
        var g = new CB.V11;
        g.V3i4(f.length);
        f.forEach(function(h) {
            var k = new CB.V11;
            h.write(k);
            g.writeDataBuffer(k)
        });
        return g.V1q()
    }
    ;
    e.arrayFromBuf64 = function(f) {
        var g = []
          , h = new CB.V11;
        h.V1o(f);
        f = h.V3ig();
        for (var k = 0; k < f; k++) {
            var l = h.readDataBuffer()
              , m = new CB.Game;
            m.read(l);
            g.push(m)
        }
        return g
    }
    ;
    e.prototype.write = function(f) {
        var g = this.getMoveIndex();
        f.writeInt(g);
        f.writeInt(0);
        this.hdr.write(f);
        b.call(this, f);
        (this.mainLine.anno || new CB.Annotation).write(f);
        this.mainLine.write(f);
        f.beginSizedWrite();
        f.endSizedWrite()
    }
    ;
    e.prototype.read = function(f) {
        var g = f.readInt();
        f.readInt();
        this.hdr.read(f);
        d.call(this, f);
        var h = new CB.Annotation;
        h.read(f);
        this.mainLine.read(f);
        h.empty() || this.mainLine.setAnno(h);
        f.beginSizedRead();
        f.endSizedRead();
        this.initPost();
        CBDebug.call(this, this.selfTest);
        this.fireOnChanged();
        this.gotoIndex(g)
    }
    ;
    e.prototype.read2 = function(f) {
        var g = !1;
        this.hdr.read(f) && (c.call(this, f),
        g = !0);
        this.initPost();
        return g
    }
    ;
    e.prototype.read3 = function(f) {
        var g = f.readInt();
        f.readInt();
        this.hdr.read(f);
        c.call(this, f);
        f.beginSizedWrite();
        f.endSizedWrite();
        this.initPost();
        CBDebug.call(this, this.selfTest);
        this.fireOnChanged();
        this.fireOnHeaderChanged();
        this.gotoIndex(g)
    }
    ;
    e.prototype.readGameOnly2 = function(f) {
        c.call(this, f);
        this.initPost()
    }
    ;
    e.prototype.writeGameOnly2 = function(f) {
        b.call(this, f);
        f.writeUint8(0);
        this.mainLine.write2(f)
    }
    ;
    e.prototype.fromDataBuf = e.prototype.read;
    e.prototype.V3il = e.prototype.write
}
)(CB.Game);
"use strict";
CB.Game = CB.Game || function() {}
;
(function(e) {
    function b(d, c, f, g) {
        if (f.isMainLine() && ObjUtil.equals(d, c))
            return g.push(new CB.V18d(f)),
            !0;
        c = ObjUtil.clone(c);
        for (var h = 0; h < f.length; ++h) {
            var k = f[h];
            if (k.hasLines())
                for (var l = k.getSubLinesCount() - 1; 0 <= l; --l) {
                    var m = k.getLine(l);
                    g.push(new CB.V18d(f,h));
                    if (b(d, c, m, g))
                        return !0;
                    g.pop()
                }
            if (e.canCut(k, d, c))
                break;
            else if (c.makeMove(k),
            ObjUtil.equals(d, c))
                return g.push(new CB.V18d(f,h + 1)),
                !0
        }
        return !1
    }
    e.canCut = function(d, c, f) {
        f.preSetMinCtx(d);
        var g = f.sd
          , h = d.getMoved();
        f.getPiece(d.to);
        var k = d.from;
        d = d.to;
        var l = CB.Square.V16u(k);
        f = CB.Square.V16u(d);
        var m = CB.Piece.V15n(CB.Piece.PAWN, g)
          , n = g === CB.V15e.WHITE ? CB.Square.V16e : CB.Square.V16j;
        if (h === m && l === n && c.getPiece(k) === m)
            return !0;
        k = CB.Piece.V15m(m);
        g = g === CB.V15e.WHITE ? CB.Square.V16j : CB.Square.V16e;
        return h === k && f === g && c.getPiece(d) === k || c.cr & CB.V15t.V15y && h === CB.Piece.Vcx || c.cr & CB.V15t.V15z && h === CB.Piece.Vcy ? !0 : !1
    }
    ;
    e.prototype.hasPos = function(d) {
        return this._findPos(d)
    }
    ;
    e.prototype._findPos = function(d) {
        var c = this.getStartPos()
          , f = new CB.LineStack;
        return b(d, c, this.mainLine, f) ? f : null
    }
    ;
    e.prototype.gotoPos = function(d, c) {
        var f = this._findPos(d);
        if (!f)
            return !1;
        this.gotoStack(f, c);
        CBDebug.call(this, this.selfTest);
        CBDebug.assert(this.cur.equals(d));
        return !0
    }
    ;
    e.prototype.findInTree = function(d) {
        for (this.gotoEnd(); 0 < this.getMoveNo(); ) {
            if (d.hasPos(this.getCurPos()))
                return this.getMoveNo();
            this.gotoPrev()
        }
        return -1
    }
}
)(CB.Game);
"use strict";
(function(e) {
    e.prototype.merge = function(b, d) {
        var c = b.getStartPos();
        c = this._findPos(c);
        if (!c)
            return this.assign(b, d);
        c = c.Top();
        var f = c.getLine()
          , g = c.getMovesToGo();
        c = 0;
        b = b.mainLine;
        for (var h = g; h < f.length && c < b.length && f[h].equals(b[c]); ++h,
        ++c)
            ;
        if (!(c >= b.length)) {
            h >= f.length || (g = f[h],
            f = new CB.V17l(f,h),
            g.addLine(f));
            for (; c < b.length; ++c)
                f.push(b[c]);
            f.setSubParentData(!1);
            d || this.fireOnChanged()
        }
    }
}
)(CB.Game);
"use strict";
CB.V1d1 = {
    V1d2: 5,
    V1d3: 3,
    STRONG: 2,
    NORMAL: 1,
    V1d4: .7,
    V1d5: .5,
    NONE: 0
};
CB.V1d6 = function() {
    var e = function(b) {
        this.ready = !1;
        b && this.init(b)
    };
    e.prototype.init = function(b) {}
    ;
    e.prototype.getMoves = function(b) {}
    ;
    e.prototype.V1d7 = function() {
        this.ready = !0;
        this.fireOnReady(this)
    }
    ;
    e.prototype.isReady = function() {
        return this.ready
    }
    ;
    e.selectMove = function(b, d) {
        if (0 == b.length)
            return null;
        d = d || CB.V1d1.STRONG;
        return b.pickRandom(function(c) {
            return Math.pow(c.weight, d)
        }).mv
    }
    ;
    e.getTournMoves = function(b) {
        return b.filter(function(d) {
            return d.tourn
        }).map(function(d) {
            return d.mv
        })
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "Ready");
    return e
}();
CB.FBKBook = function() {
    function e(d) {
        this.V1d8 = d || this.V1d8
    }
    CB.inherit(e, CB.V1d6);
    e.prototype.V1d8 = [];
    e.prototype.init = function(d) {
        CB.V1d9.load(d, this.V1da.bind(this), {
            responseType: "arraybuffer"
        })
    }
    ;
    e.prototype.V1da = function(d) {
        this.V1d8 = new Uint8Array(d);
        this.V1d7()
    }
    ;
    e.prototype.getMoves = function(d) {
        var c = []
          , f = new CB.Position;
        this.V1db(d, f, 0, c);
        return c
    }
    ;
    e.prototype.tmp = {};
    e.canCut = CB.Game.canCut;
    e.V1dc = function(d) {
        switch (d) {
        case b.GOOD_MV:
            return 10;
        case b.PLAYABLE_MV:
            return 3;
        case b.GAMBIT_MV:
            return 1;
        default:
            return 0
        }
    }
    ;
    e.V1dd = function(d) {
        return d == b.GOOD_MV
    }
    ;
    e.prototype.V1db = function(d, c, f, g) {
        for (var h = d.equals(c), k = !0; k && f < this.V1d8.length; ) {
            f = this.read(f, this.tmp);
            var l = this.tmp.endOfLine;
            k = this.tmp.hasSiblings;
            var m = new CB.V17g(this.tmp.from,this.tmp.to);
            h && g.push({
                mv: m,
                weight: e.V1dc(this.tmp.type),
                tourn: e.V1dd(this.tmp.type)
            });
            l || (h || e.canCut(m, d, c) ? f = this.V1de(f) : (l = c.makeMove(m),
            f = this.V1db(d, c, f, g),
            c.unmakeMove(m, l)))
        }
        return f
    }
    ;
    e.prototype.V1de = function(d) {
        for (var c = 1; c && d < this.V1d8.length; )
            d = this.skip(d, this.tmp),
            this.tmp.hasSiblings && ++c,
            this.tmp.endOfLine && --c;
        return d
    }
    ;
    var b = {
        GOOD_MV: 0,
        PLAYABLE_MV: 1,
        GAMBIT_MV: 2,
        BAD_MV: 3
    };
    e.V1df = function(d) {
        return CB.Square.V16t(CB.Square.V16u(d), CB.Square.V16v(d))
    }
    ;
    e.prototype.skip = function(d, c) {
        var f = this.V1d8[d++]
          , g = this.V1d8[d++];
        c.hasSiblings = !(f & 64);
        c.endOfLine = !!(f & 128);
        c.type = g >> 6;
        return d
    }
    ;
    e.prototype.read = function(d, c) {
        var f = this.V1d8[d++]
          , g = this.V1d8[d++];
        c.from = e.V1df(f & 63);
        c.to = e.V1df(g & 63);
        c.hasSiblings = !(f & 64);
        c.endOfLine = !!(f & 128);
        c.type = g >> 6;
        return d
    }
    ;
    return e
}();
"use strict";
CB.V1dg = function() {
    var e = function(b, d) {
        var c = CB.V10z() + "Chess/Logic/BookWorker.js";
        this.worker = new Worker(c);
        this.worker.onmessage = this.V15a.bind(this);
        this.type = b;
        this.path = d;
        this.V1dh = 0;
        this.onDone = {}
    };
    CB.inherit(e, CB.V1d6);
    e.prototype.init = function() {
        this.worker.postMessage({
            cmd: "init",
            type: this.type,
            path: this.path
        })
    }
    ;
    e.prototype.V1di = function(b) {
        var d = b.id;
        b = b.res;
        for (var c = 0; c < b.length; ++c) {
            var f = b[c].mv;
            f = new CB.V17g(f.from,f.to);
            b[c].mv = f
        }
        if (c = this.onDone[d])
            c(this, b),
            delete this.onDone[d]
    }
    ;
    e.prototype.V15a = function(b) {
        switch (b.data.cmd) {
        case "ready":
            this.V1d7();
            break;
        case "resp":
            this.V1di(b.data)
        }
    }
    ;
    e.prototype.V1dj = function(b, d) {
        var c = this.V1dh++;
        this.onDone[c] = d;
        this.worker.postMessage({
            cmd: "req",
            pos: b.toFEN(),
            id: c
        })
    }
    ;
    return e
}();
"use strict";
CB.V3ho = {
    arrStrPieces: [],
    V1dk: "x",
    V1dl: "+",
    strMate: "#",
    strProm: "",
    V1dm: "0-0",
    V1dn: "0-0-0",
    V1do: "--",
    V1dp: !1
};
CB.V3ho.arrStrPieces[CB.Piece.Vcx] = CB.V3ho.arrStrPieces[CB.Piece.Vcy] = "K";
CB.V3ho.arrStrPieces[CB.Piece.Vcz] = CB.V3ho.arrStrPieces[CB.Piece.Vd0] = "Q";
CB.V3ho.arrStrPieces[CB.Piece.Vd1] = CB.V3ho.arrStrPieces[CB.Piece.Vd2] = "R";
CB.V3ho.arrStrPieces[CB.Piece.Vd3] = CB.V3ho.arrStrPieces[CB.Piece.Vd4] = "B";
CB.V3ho.arrStrPieces[CB.Piece.W_KNIGHT] = CB.V3ho.arrStrPieces[CB.Piece.B_KNIGHT] = "N";
CB.V3ho.arrStrPieces[CB.Piece.Vd5] = CB.V3ho.arrStrPieces[CB.Piece.Vd6] = "";
CB.V1cw = function() {
    var e = function(b) {
        this.V1dq = b || CB.V3ho
    };
    e.prototype.V1dr = function() {
        return this.V1dq
    }
    ;
    e.prototype.V1ds = function(b, d, c) {
        var f = 0;
        c && (f = c);
        b = b.getMoveNum();
        for (c = ""; f < d.length; ++f) {
            var g = d[f]
              , h = g.getMoved();
            h = CB.Piece.side(h) === CB.V15e.WHITE;
            c += this.getMoveNota(g, h || !f ? b : 0) + " ";
            h || ++b
        }
        return c
    }
    ;
    e.prototype.V1dt = function(b, d) {
        var c = b.getMainLine().length;
        c -= d;
        0 > c && (c = 0);
        c = Math.floor(c / 2) + 1;
        for (var f = [], g = d = Math.max(0, b.getMoveNo() - d); g < b.getMainLine().length; ++g) {
            var h = b.getMainLine()[g]
              , k = h.getMoved();
            k = CB.Piece.side(k) === CB.V15e.WHITE;
            f.push(this.getMoveNota(h, k || g == d ? c : 0));
            k || ++c
        }
        return f
    }
    ;
    e.prototype.V1du = function(b, d) {
        var c = Math.floor(d.getCurPos().getMoveNum() / 2 + 1);
        d.getCurPos().preCalcCtx(b);
        return this.getMoveNota(b, c)
    }
    ;
    e.prototype.getMoveNota = function(b, d) {
        var c = ""
          , f = b.getMoved();
        d && (c = "" + d + ".",
        CB.Piece.side(f) === CB.V15e.BLACK && (c += ".."));
        b.isNullMove() ? c += this.V1dq.V1do : b.isShortCastling() || b.Chess960ShortCastling ? c += this.V1dq.V1dm : b.isLongCastling() || b.Chess960LongCastling ? c += this.V1dq.V1dn : (1 > f || 15 < f || (c += this.V1dq.arrStrPieces[f]),
        b.isNeedCol() && (c += CB.Square.V16p(CB.Square.V16v(b.from))),
        b.isNeedRow() && (c += CB.Square.V16q(CB.Square.V16u(b.from))),
        b.isTake() && (f === CB.Piece.Vd5 || f === CB.Piece.Vd6 ? (c += CB.Square.V16p(CB.Square.V16v(b.from)),
        this.V1dq.V1dp || (c += this.V1dq.V1dk)) : c += this.V1dq.V1dk),
        c += CB.Square.toString(b.to),
        b.prom && (c += this.V1dq.strProm,
        c += this.V1dq.arrStrPieces[b.prom]));
        b.isMate() ? c += this.V1dq.strMate : b.isCheck() && (c += this.V1dq.V1dl);
        return c
    }
    ;
    e.prototype.getStrMoveNumInLine = function(b, d, c) {
        var f = CB.Position.prototype.V18j(b + d)
          , g = "";
        if (0 == (b + d & 1) || 0 == b)
            g = f.toString() + ".",
            c ? 0 == (b + d & 1) && (g += "..") : 0 != (b + d & 1) && (g += "..");
        return g
    }
    ;
    e.V1dv = {};
    e.V1dv.V1dw = CB.V3ho;
    return e
}();
var NotationLocalizations = CB.V1cw.V1dv;
"use strict";
CB.V1dx = {
    NONE: 0,
    V1dy: 1,
    V1dz: 2,
    V1e0: 3,
    V1e1: function(e) {
        return e == CB.V15e.BLACK ? CB.V1dx.V1dy : CB.V1dx.V1dz
    }
};
CB.V1e2 = function() {
    var e = function(d) {
        this.board = d;
        this.V1e3 = function() {
            return null
        }
        ;
        this.V1e4 = !0;
        this.V1e5 = []
    };
    e.prototype.onMove = function() {
        var d = this.getMySide();
        null !== d && d === this.getCurPos().getSideToMove() && this.V1e6()
    }
    ;
    e.prototype.V1e7 = function() {
        if (this.V1e5.length)
            return this.V1e5[this.V1e5.length - 1].to
    }
    ;
    e.prototype.V1e8 = function(d) {}
    ;
    e.prototype.clearPreMoves = function() {
        var d = 0 < this.V1e5.length;
        this.V1e5 = [];
        return d
    }
    ;
    e.prototype.V1e9 = function(d) {
        switch (d % 7) {
        case 0:
            return "hsla( 120, 90%, 40%, 0.9 )";
        case 1:
            return "hsla( 120, 00%, 100%, 0.9 )";
        case 2:
            return "hsla( 5, 90%, 70%, 0.9 )";
        case 3:
            return "hsla( 180, 90%, 50%, 0.9 )";
        case 4:
            return "hsla( 180, 00%, 40%, 0.9 )";
        case 5:
            return "hsla( 0, 0%, 5%, 0.9 )";
        case 6:
            return "hsla( 270, 70%, 60%, 0.9 )"
        }
    }
    ;
    e.prototype.renderPreMoves = function() {
        try {
            for (var d = [], c = 0; c < this.V1e5.length; c++) {
                var f = this.V1e5[c];
                if (f) {
                    var g = this.V1e9(c);
                    d.push(new CB.V1ea(f.from,f.to,g))
                }
            }
            d.length && this.V1eb().queueBoardAttributes(d, {
                eraseQueue: !1,
                renderNow: !0,
                requestAnimInRender: !0
            })
        } catch (h) {
            CB.V3("ME::rp")
        }
    }
    ;
    e.prototype.boardWinMoveEntered = function(d, c, f) {
        try {
            var g = this.V1eb().board
              , h = this.getMySide()
              , k = this.getMySide() === this.getCurPos().getSideToMove();
            null === h && (k = !0);
            if (this.colorOk(g.get(d), d) && this.V1ed(d) && k) {
                var l = new CB.V17g(d,c,f & 7);
                this.fireOnStopClock();
                this.fireOnMoveEntered(l);
                return !0
            }
            if (this.V1e4) {
                var m = new CB.V17g(d,c,f & 7)
                  , n = !1;
                this.V1e5.forEach(function(p) {
                    p.from == d && p.to == c && (n = !0)
                });
                n || this.V1e5.push(m)
            }
        } catch (p) {
            CB.V3("MvE::Entd", p)
        }
        return !1
    }
    ;
    e.prototype.V1ed = function(d) {
        d = this.getCurPos().getPiece(d);
        return d === CB.Piece.NONE ? !1 : CB.Piece.side(d) == this.getCurPos().getSideToMove()
    }
    ;
    e.prototype.V1ee = function(d) {
        try {
            var c = !0;
            if (this.V1e4) {
                var f = this.getCurPos().getPiece(d);
                f && CB.Piece.side(f) != this.getCurPos().getSideToMove() && CB.Piece.side(f) === this.getMySide() && (c = !1);
                d == this.V1e7() && (c = !1)
            }
            c && this.board.undoAttributes(!0)
        } catch (g) {
            CB.V3("ME::clr", g)
        }
    }
    ;
    var b = !1;
    e.prototype.V1e6 = function() {
        if (b)
            return !1;
        b = !0;
        var d = !1;
        if (this.V1e5.length) {
            var c = this.V1e5.shift();
            if (c && (this.getCurPos().isLegalFromTo(c.from, c.to) && this.getCurPos().getSideToMove() == this.getMySide() ? (this.fireOnStopClock(),
            (new CB.Timer(function() {
                this.fireOnMoveEntered(c)
            }
            .bind(this))).runOnce(0),
            d = !0,
            this.renderPreMoves()) : this.clearPreMoves(),
            this.V1eb().onAfterPremove && d))
                this.V1eb().onAfterPremove()
        }
        b = !1;
        return d
    }
    ;
    e.prototype.getFirstSquareOfPremoveFrom = function(d) {
        for (var c = this.V1e5.length - 1; 0 <= c; c--)
            this.V1e5[c].to == d && (d = this.V1e5[c].from);
        return d
    }
    ;
    e.prototype.V1ef = function(d, c) {
        var f = {
            ok: !1,
            from: -1
        };
        try {
            if (d.get(c) == CB.Piece.NONE) {
                var g = this.getCurPos().V3hu();
                g = g.filter(function(h) {
                    return h.to == c
                });
                if (f.ok = 1 == g.length && this.V1eg())
                    f.from = g[0].from
            }
        } catch (h) {
            CB.V3("ME:FS", h)
        }
        return f
    }
    ;
    e.prototype.V1eh = function(d, c, f) {
        return this.colorOk(d.get(c), c) ? this.getCurPos().isLegalFromTo(c, f) || this.isPremove(d, c, f) : !1
    }
    ;
    e.prototype.isLegal = function(d, c, f) {
        return this.V1ei() && this.getGame() ? this.getCurPos().isLegalFromTo(c, f) : !1
    }
    ;
    e.prototype.V1ej = function(d) {
        return !!(this.V1eb().board.get(d) & CB.Piece.V15g) == this.getCurPos().isBTM() && 0 < this.V1eb().board.get(d)
    }
    ;
    e.prototype.V1el = function(d) {
        return !!(this.V1eb().board.get(d) & CB.Piece.V15g) != this.getCurPos().isBTM() && 0 < this.V1eb().board.get(d)
    }
    ;
    e.prototype.V1em = function(d, c) {
        var f = this.V1eb().board;
        if (this.colorOk(f.get(d), d) && this.getCurPos().isLegalFromTo(d, c)) {
            f = 0;
            if (this.V1eb().isWhitePromoPawn(d) || this.V1eb().isBlackPromoPawn(d))
                f = CB.Piece.QUEEN;
            return this.boardWinMoveEntered(d, c, f)
        }
        return !1
    }
    ;
    e.prototype.colorOk = function(d, c) {
        switch (this.V1en()) {
        case CB.V1dx.V1e0:
            return !0;
        case CB.V1dx.V1dy:
            return this.getCurPos().isWTM() || this.V1eo(d, CB.V15e.WHITE, c);
        case CB.V1dx.V1dz:
            return this.getCurPos().isBTM() || this.V1eo(d, CB.V15e.BLACK, c);
        default:
            return !1
        }
    }
    ;
    e.prototype.V1eo = function(d, c, f) {
        return this.V1e4 && (this.V1ep(f) || d && CB.Piece.side(d) == c) ? !0 : !1
    }
    ;
    e.prototype.V1ei = function() {
        switch (this.V1en()) {
        case CB.V1dx.V1e0:
            return !0;
        case CB.V1dx.V1dy:
            return this.getCurPos().isWTM();
        case CB.V1dx.V1dz:
            return this.getCurPos().isBTM();
        default:
            return !1
        }
    }
    ;
    e.prototype.V1eg = function() {
        switch (this.V1en()) {
        case CB.V1dx.V1dy:
            return this.getCurPos().isWTM();
        case CB.V1dx.V1dz:
            return this.getCurPos().isBTM();
        default:
        case CB.V1dx.V1e0:
            return !0
        }
    }
    ;
    e.prototype.V1eq = function(d) {}
    ;
    e.prototype.V1er = function() {
        this.V1es(null)
    }
    ;
    e.prototype.isPremove = function(d, c, f) {
        return 0 <= c && 0 <= f && 63 >= c && 63 > f ? this.V1ep(c) ? !0 : (d = d.get(c)) && this.V1e4 && this.getCurPos().isBTM() == (CB.Piece.side(d) == CB.V15e.WHITE) : !1
    }
    ;
    e.prototype.isLegalFromTo = function(d, c) {
        return this.getCurPos().isLegalFromTo(d, c)
    }
    ;
    e.prototype.V1ep = function(d) {
        if (this.V1e4)
            for (var c = 0; c < this.V1e5.length; c++)
                if (this.V1e5[c].to == d)
                    return !0;
        return !1
    }
    ;
    e.prototype.V1et = function(d, c) {
        if (-1 == d)
            return !1;
        for (var f = this.V1e5.length - 1; 0 <= f; f--)
            if (this.V1e5[f].to == d) {
                var g = this.getCurPos().board[this.V1e5[0].from];
                if ((g & CB.Piece.V15j) == CB.Piece.PAWN && CB.Piece.side(g) == c)
                    return 6 == CB.Square.V16w(d) || 1 == CB.Square.V16w(d)
            }
        return !1
    }
    ;
    e.prototype.V1eu = function(d, c) {
        return this.isLegalFromTo(d, c) ? this.getCurPos().getEPCol() == CB.Square.V16x(c) : !1
    }
    ;
    e.prototype.test = function() {}
    ;
    e.prototype.getGame = function() {
        return this.board.getGame()
    }
    ;
    e.prototype.getCurPos = function() {
        return this.getGame() ? this.getGame().getCurPos() : new CB.Position
    }
    ;
    e.prototype.V1eb = function() {
        return this.board
    }
    ;
    e.prototype.getMySide = function() {
        return this.V1e3()
    }
    ;
    e.prototype.V1es = function(d) {
        ObjUtil.isFunction(d) ? this.V1e3 = d : this.V1e3 = function() {
            return d
        }
    }
    ;
    e.prototype.V1en = function() {
        switch (this.getMySide()) {
        case CB.V15e.WHITE:
            return CB.V1dx.V1dy;
        case CB.V15e.BLACK:
            return CB.V1dx.V1dz;
        default:
            return CB.V1dx.V1e0
        }
    }
    ;
    e.prototype.V1ev = function(d, c) {
        if (0 <= c && 64 > c)
            return d = d.get(c),
            this.getCurPos().isBTM() == (CB.Piece.side(d) == CB.V15e.BLACK)
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "MoveEntered");
    V3i1.addEvent(e, "StopClock");
    return e
}();
"use strict";
CB.V1ew = function() {
    var e = 1
      , b = function(d, c) {
        this.game = c || new CB.Game;
        CB.V1(this, "game");
        this.V1ey();
        this.V1ez = [];
        this.V1ex = d;
        this.V1f0 = !0;
        this.uniqueId = e++;
        this.V1f1 = new CB.V1f2;
        this.V1f1.setGame(this.game);
        this.fnInitGame = function(f) {
            f.reset();
            if (PGN && V3ir && V3ir.urlParams && V3ir.urlParams.pgn) {
                var g = PGN.V1f3(V3ir.urlParams.pgn);
                f.assign(g)
            } else
                V3ir && V3ir.urlParams && V3ir.urlParams.buf64 ? (CB.V1b.V100("buf64"),
                g = new CB.Game,
                g.fromBuf64(V3ir.urlParams.buf64),
                f.assign(g)) : V3ir && V3ir.urlParams && V3ir.urlParams.hasStartPos && V3ir.urlParams.hasStartPos() ? (V3ir.urlParams.fen ? g = new CB.Position(V3ir.urlParams.fen) : V3ir.urlParams.pos && (g = new CB.Position,
                g.V18g(V3ir.urlParams.pos)),
                g.isLegal() && f.assign(new CB.Game(g))) : this.playFromPgnGame && !this.playFromPgnGame.isNormalInit() && f.assign(new CB.Game(this.playFromPgnGame.getStartPos()))
        }
    };
    b.prototype.destroy = function() {
        this.setBoardWin(null);
        this.V1f1.setGame(null);
        this.V1f4();
        this.releaseCommandHandlers();
        this.V3i6 && this.V3i6.destroy()
    }
    ;
    b.prototype.V1f5 = function(d) {
        this.boardWin && (this.boardWin.moveEntry.allowedColor = d)
    }
    ;
    b.prototype.V1f6 = function() {
        this.commandHandlerId = V3ir.commands.registerCommandHandler(this);
        this.V1f7 = V3ir.commands.registerkeyDownHandler(this)
    }
    ;
    b.prototype.releaseCommandHandlers = function() {
        V3ir.commands.unregisterCommandHandler(this.commandHandlerId);
        V3ir.commands.unregisterkeyDownHandler(this.V1f7)
    }
    ;
    b.prototype.createControl = function(d, c, f, g) {
        this.V1f8 = !0;
        var h = "undefined" === typeof this.boardArea;
        this.boardArea = new CB.V1f9(d,c,f,g);
        var k = (g ? g.fnBoardFactory : null) || this.fnBoardFactory;
        if (k)
            var l = k(d, c, f, "ByKernel", g);
        else
            CB.V1fa ? l = new CB.V1fa(d,c,f,"ByKernel",g) : "object" === typeof PlaychessBoardControl && (l = new CB.PlaychessBoardControl(d,c,f,"ByKernel",g)),
            g && g.mixin && CB.V0(l, g.mixin);
        !g || !g.addTitle || V3ir.panelMgr.hasLogo && V3ir.panelMgr.hasLogo() || l.addTitle(null, g.noClock);
        this.setBoardWin(l);
        this.V3i6.createGUIElements(this.boardWin);
        this.boardArea.V1fb(this.boardWin);
        h && this.initGame();
        this.V1fc && this.boardWin.V1fd();
        this.releaseCommandHandlers();
        this.V1f6();
        return this.boardArea
    }
    ;
    b.prototype.createControl3D = function(d, c, f) {
        this.V1f8 = V3ir.animatedBoard();
        this.boardArea = new CB.BoardArea3D(d,c,f);
        d = new CB.BoardControl3D(d,c,f,"FritzBoard",this.V1fe.bind(this));
        this.setBoardWin(d);
        this.V3i6.createGUIElements(this.boardWin);
        this.boardArea.V1fb(this.boardWin);
        this.boardWin.V1fd();
        this.releaseCommandHandlers();
        this.V1f6();
        return this.boardArea
    }
    ;
    b.prototype.V1fe = function() {
        this.boardWin && this.boardWin.setGame(this.game)
    }
    ;
    b.prototype.V1ff = function(d) {
        this.V1f1 && this.V1f1.enable(d)
    }
    ;
    b.prototype.setBlackIsBottom = function(d) {
        this.boardWin && this.boardWin.setBlackIsBottom(d)
    }
    ;
    b.prototype.setBoardWin = function(d) {
        this.boardWin && this.boardWin.moveEntry.removeOnMoveEnteredListener(this.V1fg);
        if (this.boardWin = d)
            this.boardWin.moveEntry && (this.boardWin.moveEntry.V1es && this.boardWin.moveEntry.V1es(this.getMySide.bind(this)),
            this.boardWin.moveEntry.addOnMoveEnteredListener && (this.V1fg = this.boardWin.moveEntry.addOnMoveEnteredListener(this.V1bq.bind(this)))),
            this.boardWin.setGame(this.game),
            this.idGame && (this.boardWin.idGame = this.idGame)
    }
    ;
    b.prototype.V1fh = function(d, c, f) {
        this.notation = CB.NotaElement.factory(d, c, null);
        this.notation.setGame(this.game);
        return this.notation
    }
    ;
    b.prototype.V1fi = function(d) {
        this.notation && this.notation.V1fi(d)
    }
    ;
    b.prototype.V1fj = function() {
        this.V3i6 && this.V3i6.V1fj()
    }
    ;
    b.prototype.setPlayingMode = function(d) {
        this.V1fk = this.V1fk || {};
        this.V3i6 && this.V3i6.V1fl(this.V1fk);
        this.boardWin && this.V3i6 && (this.V3i6.V1fm(this.boardWin),
        this.V3i6.destroy());
        this.V3i6 = d;
        this.boardWin && (this.V3i6.createGUIElements(this.boardWin),
        this.V3i6.V1fj(),
        this.V3i6 && this.V3i6.V1fn(this.V1fk),
        this.V3i6.updateGamePos(!0));
        this.boardArea && this.boardArea.V1fo();
        this.V3i6.getFnLoadSearchResult && (this.loadSearchResultGame = this.V3i6.getFnLoadSearchResult())
    }
    ;
    b.V1fp = null;
    b.V1fq = function(d) {
        b.V1fr();
        return b.V1fp[d]
    }
    ;
    b.V1fr = function() {
        b.V1fp || (b.V1fp = {},
        b.V1fp[V3ir.V3ia.LEVEL_BLITZ_3_0] = {
            clockParams: new CB.V1fs(3,0)
        },
        b.V1fp[V3ir.V3ia.LEVEL_BLITZ_4_0] = {
            clockParams: new CB.V1fs(4,0)
        },
        b.V1fp[V3ir.V3ia.LEVEL_BLITZ_5_0] = {
            clockParams: new CB.V1fs(5,0)
        },
        b.V1fp[V3ir.V3ia.LEVEL_BLITZ_3_2] = {
            clockParams: new CB.V1fs(3,2)
        },
        b.V1fp[V3ir.V3ia.LEVEL_BLITZ_5_5] = {
            clockParams: new CB.V1fs(5,5)
        },
        b.V1fp[V3ir.V3ia.LEVEL_1_SECOND] = {
            fixedTime: 1E3
        },
        b.V1fp[V3ir.V3ia.LEVEL_5_SECONDS] = {
            fixedTime: 5E3
        },
        b.V1fp[V3ir.V3ia.LEVEL_15_SECONDS] = {
            fixedTime: 15E3
        },
        b.V1fp[V3ir.V3ia.LEVEL_40_SECONDS] = {
            fixedTime: 4E4
        })
    }
    ;
    b.prototype.execCommand = function(d) {
        try {
            switch (d) {
            case V3ir.V3ia.NEW_GAME:
                this.newGame();
                break;
            case V3ir.V3ia.SETUP_POSITION:
                this.togglePosInputMode(this.V3i6.posLegalChecker);
                break;
            case V3ir.V3ia.TAKEBACK:
                this.V3i6.mayNavigate() && this.game.gotoPrev();
                break;
            case V3ir.V3ia.EXECMOVE:
                this.V3i6.mayNavigate() && this.game.gotoNext();
                break;
            case V3ir.V3ia.START_LINE:
                this.startLine();
                break;
            case V3ir.V3ia.FLIP_BOARD:
                this.boardWin && this.boardWin.flipBoard();
                break;
            case V3ir.V3ia.PROMOTE_LINE:
                this.V3i6.onPromoteLine() && (this.game.promoteLine(),
                this.V3i6.V1ft());
                break;
            case V3ir.V3ia.DELETE_LINE:
                this.V3i6.onDeleteLine() && (this.game.deleteLine(),
                this.V3i6.V1fu());
                break;
            case V3ir.V3ia.CUT_LINE:
                this.V3i6.onCutLine() && (this.game.deleteRemaining(),
                this.V3i6.V1fv());
                break;
            case V3ir.V3ia.DELETE_PREVIOUS_MOVES:
                this.V3i6.V1fw() && this.game.deletePrevious();
                break;
            case V3ir.V3ia.ADD_POST_TEXT:
                this.V1fx(!0);
                break;
            case V3ir.V3ia.ADD_PRE_TEXT:
                this.V1fx(!1);
                break;
            case V3ir.V3ia.INSERT_DIAGRAM:
                this.V3i6.V1fy() && this.V1fz();
                break;
            case V3ir.V3ia.ENGINE_PLUS_LINE:
                this.V1g0(1);
                break;
            case V3ir.V3ia.ENGINE_MINUS_LINE:
                this.V1g0(-1);
                break;
            case V3ir.V3ia.OPEN_CMS:
                this.V1g1();
                break;
            case V3ir.V3ia.PLAYERDB_TEST:
                this.V3i6.test();
                break;
            case V3ir.V3ia.GAME_COPYTOCLIPBOARD:
                this.V1g2();
                break;
            case V3ir.V3ia.GAME_PASTEFROMCLIPBOARD:
                this.V1g3();
                break;
            case V3ir.V3ia.MARK_GOOD:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.GOOD);
                break;
            case V3ir.V3ia.MARK_BAD:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.V1g5);
                break;
            case V3ir.V3ia.MARK_VERYGOOD:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.V1g6);
                break;
            case V3ir.V3ia.MARK_VERYBAD:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.V1g7);
                break;
            case V3ir.V3ia.MARK_INTERESTING:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.V1g8);
                break;
            case V3ir.V3ia.MARK_DUBIOUS:
                this.V3i6.onAnnotate() && this.addSymbol(CB.V1g4.V1g9);
                break;
            case V3ir.V3ia.WHITE_WINS:
                this.V3i6.onEval(CB.V1ga.WHITE_WINS) && this.addSymbol(CB.V1ga.WHITE_WINS);
                break;
            case V3ir.V3ia.WHITE_BETTER:
                this.V3i6.onEval(CB.V1ga.WHITE_BETTER) && this.addSymbol(CB.V1ga.WHITE_BETTER);
                break;
            case V3ir.V3ia.WHITE_SLIGHTLY:
                this.V3i6.onEval(CB.V1ga.V1gb) && this.addSymbol(CB.V1ga.V1gb);
                break;
            case V3ir.V3ia.EQUAL:
                this.V3i6.onEval(CB.V1ga.EQUAL) && this.addSymbol(CB.V1ga.EQUAL);
                break;
            case V3ir.V3ia.UNCLEAR:
                this.V3i6.onEval(CB.V1ga.UNCLEAR) && this.addSymbol(CB.V1ga.UNCLEAR);
                break;
            case V3ir.V3ia.BLACK_WINS:
                this.V3i6.onEval(CB.V1ga.BLACK_WINS) && this.addSymbol(CB.V1ga.BLACK_WINS);
                break;
            case V3ir.V3ia.BLACK_BETTER:
                this.V3i6.onEval(CB.V1ga.BLACK_BETTER) && this.addSymbol(CB.V1ga.BLACK_BETTER);
                break;
            case V3ir.V3ia.BLACK_SLIGHTLY:
                this.V3i6.onEval(CB.V1ga.V1gc) && this.addSymbol(CB.V1ga.V1gc);
                break;
            case V3ir.V3ia.COMPENSATION:
                this.V3i6.onEval(CB.V1ga.COMPENSATION) && this.addSymbol(CB.V1ga.COMPENSATION)
            }
        } catch (c) {
            d = V3ir.V3ia.toNumString(d),
            CB.V3(d, c)
        }
    }
    ;
    b.prototype.onKeyDown = function(d) {
        var c = this.V3i6.onKeyDown(d);
        if (!c && d && d.getKey)
            switch (this.V1gd = c = !0,
            d.getKey()) {
            default:
                c = !1;
                break;
            case d.A:
                d.ctrlKey ? this.V1fx(!0) : c = !1;
                break;
            case d.F:
                d.ctrlKey ? this.execCommand(CB.V1ge.FLIP_BOARD) : c = !1;
                break;
            case d.N:
                d.ctrlKey ? this.execCommand(CB.V1ge.NEW_GAME) : c = !1;
                break;
            case d.LEFT:
                this.V3i6.mayNavigate() && this.game.gotoPrev();
                break;
            case d.RIGHT:
                this.V1gf();
                break;
            case d.HOME:
                this.V3i6.mayNavigate() && this.game.gotoStart();
                break;
            case d.END:
                this.V1gg();
                break;
            case d.PAGE_DOWN:
                this.V1gh();
                break;
            case d.PAGE_UP:
                this.V3i6.mayNavigate() && this.game.jump(-20);
                break;
            case d.SPACE:
                this.V3i6.mayNavigate() && (c = this.execCommand(CB.V1ge.ENGINE_MOVE_NOW));
                break;
            case d.F2:
                d.altKey ? this.execCommand(CB.V1ge.TOGGLE_ANALYSIS_ENGINE) : c = !1
            }
        return c
    }
    ;
    b.prototype.onFileSelect = function(d, c) {
        return !1
    }
    ;
    b.prototype.V1gf = function() {
        this.V3i6.V1gi() && this.game.gotoNext()
    }
    ;
    b.prototype.V1gg = function() {
        this.V3i6.V1gj() && this.game.gotoEnd()
    }
    ;
    b.prototype.V1gh = function() {
        this.V3i6.V1gk() && this.game.jump(20)
    }
    ;
    b.prototype.togglePosInputMode = function(d) {
        V3ir.isPremium() ? this.posInput ? this.V1gm() : this.V1gl(d) : V3ir.panelMgr.showBoardMessage(lm.PREMIUM_ONLY, 3E3)
    }
    ;
    b.prototype.V1gn = function() {
        var d = new CB.Position("8/7k/P7/8/K7/8/8/8 w - - 0 1");
        d = new CB.Game(d);
        this.game.assign(d)
    }
    ;
    b.prototype.V1gl = function(d) {
        this.boardWin && (this.boardWin.destroyTitle(),
        this.posInput = new CB.PosInputControl(this.boardWin.cbcanvas,this.boardWin.width,this.boardWin.height,"posInput",function(c) {
            (new CB.Timer(function() {
                this.V1gm(c)
            }
            .bind(this))).Va1()
        }
        .bind(this),d,{}),
        this.boardArea.V1go(this.posInput),
        this.posInput.V1gp(),
        this.posInput.setPosition(this.getCurPos()),
        this.boardArea.V1gq())
    }
    ;
    b.prototype.V1gm = function(d) {
        if (this.posInput) {
            var c = new CB.Game(this.posInput.V1gr());
            this.boardArea.removePosInput(this.boardWin);
            this.posInput.destroy();
            delete this.posInput;
            this.V3i6.createGUIElements(this.boardWin);
            d || this.game.assign(c);
            this.V3i6.V1eq(c.getCurPos());
            this.boardWin.moveEntry.V1eq(c.getCurPos());
            this.setBlackIsBottom(c.getCurPos().getBTM())
        }
    }
    ;
    b.prototype.V1gs = function(d) {
        d && (this.game.assign(PGN.V1f3(d)),
        this.game.gotoFirst())
    }
    ;
    b.prototype.initGame = function() {
        this.fnInitGame(this.game, this);
        this.V3i6.newGame(!1)
    }
    ;
    b.prototype.newGame = function() {
        this.boardWin && (this.boardWin.V1gt(),
        this.boardWin.destroyMessage(),
        this.boardWin.V1gu(),
        this.boardWin.moveEntry.clearPreMoves());
        this.V3i6.V1gv(this.game);
        this.V3i6.newGame(!0)
    }
    ;
    b.prototype.V1ey = function() {
        this.game && (this.V1gw = this.game.addOnNavigateListener(this.V1gx.bind(this)),
        this.V1gy = this.game.addOnMoveListener(this.V1gz.bind(this)),
        this.V1h0 = this.game.addOnChangedListener(this.V1h1.bind(this)),
        this.idHeaderListener = this.game.addOnHeaderChangedListener(this.V1h2.bind(this)),
        this.V1h3 = this.game.addOnCurPosChangedListener(this.V1h4.bind(this)),
        this.V1h5 = this.game.addOnResetGameListener(this.V1h6.bind(this)),
        this.V1h7 = this.game.addOnClickInNotationListener(this.V1h8.bind(this)),
        this.V1h9 = this.game.addOnAnnoChangedListener(this.V1ha.bind(this)))
    }
    ;
    b.prototype.V1f4 = function() {
        this.game.removeOnNavigateListener(this.V1gw);
        this.game.removeOnMoveListener(this.V1gy);
        this.game.removeOnChangedListener(this.V1h0);
        this.game.removeOnHeaderChangedListener(this.idHeaderListener);
        this.game.removeOnCurPosChangedListener(this.V1h3);
        this.game.removeOnResetGameListener(this.V1h5);
        this.game.removeOnClickInNotationListener(this.V1hb);
        this.game.removeOnAnnoChangedListener(this.V1h9)
    }
    ;
    b.prototype.V1hc = function() {
        return this.onDBGameClicked.bind(this)
    }
    ;
    b.prototype.onDBGameClicked = function(d, c) {
        d.loadGameAsync(this.V1hd.bind(this), c)
    }
    ;
    b.prototype.V1hd = function(d) {
        void 0 !== d && (this.loadSearchResultGame ? this.loadSearchResultGame(d) : (this.game.assign(d),
        this.game.gotoFirst()))
    }
    ;
    b.prototype.V1he = function(d) {
        1E4 > d && this.V1hf() && !this.V1gd && setTimeout(function() {
            this.V1he(d + 1)
        }
        .bind(this), 5)
    }
    ;
    b.prototype.V1hg = function(d) {
        0 < this.game.getMoveIndex() && !this.V1gd && (this.game.gotoPrev(),
        setTimeout(function() {
            this.V1hg()
        }
        .bind(this), 5))
    }
    ;
    b.prototype.V1hf = function() {
        0 == this.V1ez.length && (this.V1ez = this.getCurPos().V3hu());
        this.game.makeMove(this.V1ez[Math.floor(Math.random() * this.V1ez.length)]);
        return !0
    }
    ;
    b.prototype.getMySide = function() {
        if (this.V3i6)
            return this.V3i6.getMySide()
    }
    ;
    b.prototype.V1es = function(d) {
        this.V3i6 && this.V3i6.V1es(d)
    }
    ;
    b.prototype.V1hh = function(d) {}
    ;
    b.prototype.V1bq = function(d) {
        try {
            if (this.game.getCurPos().isLegalMove(d)) {
                try {
                    var c = this.V3i6.V1bq(d)
                } catch (h) {
                    CB.V3("GK:ReactTo:pm.react", h)
                }
                if (!c)
                    if (this.V3i6.onEnteredMove(d)) {
                        if (!this.game.gotoMove(d)) {
                            var f = this.V3i6.getMoveEnterType();
                            this.V1hi && (f = this.V1hi,
                            this.V1hi = null);
                            var g = function(h, k) {
                                k != CB.V1c6.CANCEL && (this.game.makeMove(h, k),
                                this.V3i6.V1hj(d),
                                this.V1hk())
                            }
                            .bind(this);
                            f == CB.V1c6.V1c9 ? (c = function(h, k, l, m) {
                                g(l, k)
                            }
                            ,
                            CB.V1hl && CB.V1hl.V1hm(this.game, this.game.getCurPos(), d, null, c)) : g(d, f)
                        }
                    } else
                        this.game.fireOnCurPosChanged()
            }
        } catch (h) {
            CB.V3("GK:ReactTo", h)
        }
    }
    ;
    b.prototype.V1hn = function(d, c) {
        this.boardWin && this.boardWin.V1hn(d || !this.V1f8, c)
    }
    ;
    b.prototype.markSquare = function(d, c) {
        this.boardWin && this.boardWin.markSquare(d, c)
    }
    ;
    b.prototype.drawArrow = function(d, c, f) {
        this.boardWin && this.boardWin.drawArrow(d, c, f)
    }
    ;
    b.prototype.V1ho = function(d) {
        if (this.boardWin) {
            var c = this.boardWin.animSteps.forMove;
            CB.Vq.V37() ? this.boardWin.animSteps.forMove = d || 4 : this.boardWin.animSteps.forMove = d || 10
        }
        this.game.gotoNext();
        this.boardWin && (this.boardWin.animSteps.forMove = c)
    }
    ;
    b.prototype.V1hp = function(d) {
        if (this.boardWin) {
            var c = this.boardWin.animSteps.forMove;
            CB.Vq.V37() ? this.boardWin.animSteps.forMove = d || 2.5 : this.boardWin.animSteps.forMove = d || 6
        }
        this.game.gotoPrev();
        this.boardWin && (this.boardWin.animSteps.forMove = c)
    }
    ;
    b.prototype.V1hq = function(d, c) {
        this.V1hr(function() {
            this.game.makeMove(d, CB.V1c6.V1ca)
        }
        .bind(this), c)
    }
    ;
    b.prototype.V1hr = function(d, c) {
        var f = this.boardWin.animSteps.forMove;
        CB.Vq.V37() ? this.boardWin.animSteps.forMove = c || 4 : this.boardWin.animSteps.forMove = c || 10;
        d();
        this.boardWin.animSteps.forMove = f;
        this.boardWin.V155 = function() {
            this.boardWin.V155 = null
        }
        .bind(this)
    }
    ;
    b.prototype.V1af = function(d, c) {
        this.game.V1af(d);
        this.V3i6.V1hs(d, c)
    }
    ;
    b.prototype.V1hk = function() {
        if (!this.isFinished()) {
            var d = {
                drawType: 0
            }
              , c = this.V1ht(d);
            if (c != CB.GameResultEnum.V1a8)
                return this.V3i6.V1hu || this.V1af(c, CB.V1hv.TECHNICAL),
                this.V1hw && this.V1hw(c, d),
                !0
        }
        return !1
    }
    ;
    b.prototype.isFinished = function() {
        return this.game.hdr.getCBResult().isFinished()
    }
    ;
    b.prototype.isBTM = function() {
        return this.game.getCurPos().isBTM()
    }
    ;
    b.prototype.V1ht = function(d) {
        return b.V1hx(this.game, d)
    }
    ;
    b.V1hx = function(d, c) {
        var f = (new CB.V1hy).checkGame(d)
          , g = CB.GameResultEnum.V1a8;
        switch (f) {
        case CB.V1hz.STALEMATE:
        case CB.V1hz.Veq:
            g = CB.GameResultEnum.DRAW;
            break;
        case CB.V1hz.MATE:
            g = d.getCurPos().isBTM() ? CB.GameResultEnum.WHITE_WINS : CB.GameResultEnum.BLACK_WINS;
            break;
        case CB.V1hz.V1i0:
        case CB.V1hz.V1i1:
        case CB.V1hz.V1i2:
            g = CB.GameResultEnum.DRAW
        }
        c && (c.drawType = f);
        return g
    }
    ;
    b.prototype.V1gx = function() {
        this.V3i6.onGameNavigate()
    }
    ;
    b.prototype.V1gz = function(d) {
        this.V3i6.V1i3(d)
    }
    ;
    b.prototype.V1h4 = function() {
        this.V3i6.updateGamePos();
        this.V1i4()
    }
    ;
    b.prototype.V1h1 = function(d) {
        this.V3i6.updateGamePos(d);
        this.V1i4()
    }
    ;
    b.prototype.V1h2 = function(d) {
        this.V3i6.V1i5()
    }
    ;
    b.prototype.V1h6 = function() {
        this.V3i6.onResetGame();
        this.boardWin && (this.boardWin.V1i6 = !0)
    }
    ;
    b.prototype.V1h8 = function() {
        this.V3i6.V1i7()
    }
    ;
    b.prototype.V1fx = function(d) {
        this.V1ex && (this.V1f0 == d ? this.V1ex.V1i8() : this.V1ex.V1i9(),
        this.V1f0 = d,
        this.V1ex.V1ia() && (this.game.getAnno(this.V1f0 ? CB.AnnoType.V19w : CB.AnnoType.V19u),
        this.V1i4()))
    }
    ;
    b.prototype.V1g0 = function(d) {
        this.V3i6.V1g0(d)
    }
    ;
    b.prototype.V1ha = function(d, c) {
        this.V3i6.V1ib && this.V3i6.V1ib(d, c)
    }
    ;
    b.prototype.onAnnoEnter = function(d, c) {
        null != d && (this.V3i6.onTextAnno(d, this.V1f0) && (d.length ? this.game.setAnno(this.V1f0 ? CB.AnnoType.V19w : CB.AnnoType.V19u, new CB.V19v(d)) : this.game.deleteAnno(this.V1f0 ? CB.AnnoType.V19w : CB.AnnoType.V19u)),
        this.V1ex && setTimeout(this.V1ex.V1ic.bind(this.V1ex)))
    }
    ;
    b.prototype.V1i4 = function() {
        if (this.V1ex && this.V1ex.V1ia && this.V1ex.V1ia()) {
            var d = this.game.getAnno(this.V1f0 ? CB.AnnoType.V19w : CB.AnnoType.V19u);
            d ? this.V1ex.V1id(d.getString()) : this.V1ex.V1id("")
        }
    }
    ;
    b.prototype.V1ie = function(d) {
        d && d.length && (this.game.getOrCreateCurrAnno().addPostText(d),
        this.game.fireOnChanged())
    }
    ;
    b.prototype.V1if = function(d) {
        d && d.length && (this.game.getOrCreateCurrAnno().setPreText(d),
        this.game.fireOnChanged())
    }
    ;
    b.prototype.V1fz = function() {
        var d = this.game.getOrCreateCurrAnno();
        d.toggleDiagram();
        this.V3i6.onTextAnno(d.getPostText() || "", !0) && this.game.fireOnChanged()
    }
    ;
    b.prototype.deleteAnno = function(d) {
        this.game.deleteAnno(d)
    }
    ;
    b.prototype.addSymbol = function(d) {
        this.game.getOrCreateCurrAnno().addSymbol(d);
        this.game.fireOnAnnoChanged()
    }
    ;
    b.prototype.V1ig = function(d) {
        this.game.getOrCreateCurrAnno().addSymbol(d);
        this.game.fireOnAnnoChanged()
    }
    ;
    b.prototype.V1ih = function() {
        for (var d = 0; d < this.game.getMoves().length - 1; d++) {
            var c = this.game.getMoves()[d].getAnno();
            if (void 0 === c || null === c || void 0 === c.getItem(CB.AnnoType.TIME))
                return !1
        }
        return 2 < this.game.getMoves().length
    }
    ;
    b.prototype.V1ii = function(d) {
        d && this.game.getOrCreateCurrAnno().setItem(CB.AnnoType.TIME, d)
    }
    ;
    b.prototype.V1ij = function() {
        this.V1ie(CB.Annotation.V19q)
    }
    ;
    b.prototype.hasTraining = function() {
        for (var d = 0; d < this.game.getMoves().length - 1; d++) {
            var c = this.game.getMoves()[d].getAnno();
            if (c && c.getItem(CB.AnnoType.V18c))
                return !0
        }
        return !1
    }
    ;
    b.prototype.V1ik = function() {
        for (var d = 0; d < this.game.getMoves().length - 1; d++) {
            var c = this.game.getMoves()[d].getAnno();
            if (c) {
                c.getItem(CB.AnnoType.V18c) && this.game.gotoIndex(d + 1);
                break
            }
            if (this.game.getMoves()[d].hasLines())
                break
        }
    }
    ;
    b.prototype.getMoveNo = function() {
        return this.game.getMoveNo()
    }
    ;
    b.prototype.V1il = function(d) {
        this.game.makeMove(d);
        this.V1hn(!1);
        this.V1hk()
    }
    ;
    b.prototype.V1im = function(d) {
        this.idGame = d;
        this.boardWin && (this.boardWin.idGame = d)
    }
    ;
    b.prototype.getCurPos = function() {
        return this.game.getCurPos()
    }
    ;
    b.prototype.V1bb = function(d, c) {
        var f = new CB.V11
          , g = !0;
        "TEXT" == d && (g = !1);
        f.V1m(c, g);
        f.rewind();
        d = new CB.V1bc;
        d.fromDataBuf(f);
        d.isSetBoardOrientation() && this.boardWin && this.boardWin.setBlackIsBottom(1 == d.V6c, !0);
        d.fillExecutedMove();
        f = this.game.getHeader().getWhite();
        d._doExecute(this.game);
        d = this.game.getHeader().getWhite();
        this.game.updateFromExtern();
        0 != f.localeCompare(d) && this.game.V1cr()
    }
    ;
    b.prototype.V1g2 = function() {
        this.V1in(this.game.toString())
    }
    ;
    b.prototype.V1in = function(d) {
        if (window.clipboardData && clipboardData.setData) {
            if (this.boardWin) {
                this.boardWin.addMessage("You may now paste this game as text everywhere.", !0);
                var c = this.boardWin;
                (new CB.Timer).runOnce(3E3, function() {
                    c.destroyMessage()
                })
            }
            clipboardData.setData("Text", d)
        }
    }
    ;
    b.prototype.V1g3 = function() {
        if (window.clipboardData && clipboardData.getData) {
            var d = clipboardData.getData("Text");
            this.V1gs(d)
        }
        0 < V3ir.V3i2.userName.length && (new CB.V1io(V3ir.V3i2.userName,V3ir.V3i2.password)).getActivity(CB.V1ip.V1iq, this.V1ir.bind(this))
    }
    ;
    b.prototype.V1ir = function(d, c) {
        0 != d && (this.V1gs(c),
        this.game.updateFromExtern())
    }
    ;
    b.prototype.startLine = function() {
        this.game.gotoPrev();
        this.V1hi = CB.V1c6.V1cc
    }
    ;
    return b
}();
"use strict";
CB.V1is = {
    V1it: 0,
    V1iu: 1,
    V1iv: 2,
    V1iw: 3,
    V1ix: 4,
    V1iy: 5,
    V1iz: 6,
    V1j0: 7,
    V1j1: 8,
    V1j2: 9,
    V1j3: 10,
    Vfr: 11,
    V1j4: 12,
    V1j5: 13,
    V1j6: 14,
    V1j7: 15,
    V1j8: 16,
    V1j9: 17,
    V1ja: 18,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return "GameAction: " + b;
        return "Unknown GameAction: " + e
    }
};
CB.V1bc = function() {
    var e = function() {
        this.type = CB.V1is.V1it;
        this.V6c = 0
    };
    e.prototype.fromDataBuf = function(b) {
        this.type = b.V3im();
        this.V6c = b.V3im();
        switch (this.type) {
        case CB.V1is.V1ix:
            this.V1jb = new CB.V187;
            this.V1jb.fromDataBuf(b);
            break;
        case CB.V1is.V1iy:
            this.moveData = new CB.V1jc;
            this.moveData.fromDataBuf(b);
            break;
        case CB.V1is.V1iv:
            this.setGame = new CB.Game;
            this.setGame.fromDataBuf(b);
            break;
        case CB.V1is.V1iz:
        case CB.V1is.V1j4:
            this.anno = new CB.Annotation;
            this.anno.fromDataBuf(b);
            break;
        case CB.V1is.V1j7:
            this.setGame = new CB.Game;
            this.setGame.read3(b);
            break;
        case CB.V1is.V1j8:
            this.moves = new CB.V1jd;
            this.moves.V1je(rBuf, rBuf.ReadInt());
            break;
        case CB.V1is.V1j9:
            this.header = new CB.V1jf,
            this.header.ReadFromDataBuffer(rBuf, 0)
        }
    }
    ;
    e.prototype.V3il = function(b) {
        b.V3ij(this.type);
        b.V3ij(this.V6c);
        switch (this.type) {
        case CB.V1is.V1ix:
            this.V1jb.V3il(b);
            break;
        case CB.V1is.V1iy:
            this.moveData.V3il(b);
            break;
        case CB.V1is.V1iv:
            this.setGame.V3il(b);
            break;
        case CB.V1is.V1iz:
        case CB.V1is.V1j4:
            this.anno.V3il(b)
        }
    }
    ;
    e.prototype.V1jg = function(b) {
        this.type = CB.V1is.V1iy;
        this.moveData = b
    }
    ;
    e.prototype.V1jh = function(b) {
        this.type = CB.V1is.V1ix;
        this.V1jb = b
    }
    ;
    e.prototype.setAnno = function(b) {
        this.type = CB.V1is.V1iz;
        this.anno = b
    }
    ;
    e.prototype.V1ji = function(b) {
        this.type = CB.V1is.V1iw;
        this.V6c = b
    }
    ;
    e.prototype.setGame = function(b, d) {
        this.type = CB.V1is.V1iv;
        this.setGame = b;
        this.V6c = 0;
        this.nMoveIndex = d
    }
    ;
    e.prototype.V1jj = function() {
        this.type = CB.V1is.V1j0
    }
    ;
    e.prototype.V1jk = function() {
        this.type = CB.V1is.Vfr
    }
    ;
    e.prototype.V1jl = function() {
        this.type = CB.V1is.V1j1
    }
    ;
    e.prototype.V1jm = function() {
        this.type = CB.V1is.V1j3
    }
    ;
    e.prototype.addText = function(b) {
        this.anno = new CB.Annotation;
        this.anno.addPostText(b);
        this.type = CB.V1is.V1j4
    }
    ;
    e.prototype.V1jn = function() {
        return this.type == CB.V1is.V1iy || this.type == CB.V1is.V1ix
    }
    ;
    e.prototype.V1jo = function() {
        return this.type == CB.V1is.V1iy
    }
    ;
    e.prototype.V1jp = function() {
        return this.type == CB.V1is.V1iv
    }
    ;
    e.prototype.isSetBoardOrientation = function() {
        return this.type == CB.V1is.V1ja
    }
    ;
    e.prototype.V1jq = function() {
        return this.type == CB.V1is.V1j4 || this.type == CB.V1is.V1iz
    }
    ;
    e.prototype.V1jr = function() {
        return this.type == CB.V1is.V1iw
    }
    ;
    e.prototype.V1js = function() {
        return this.type == CB.V1is.V1j3
    }
    ;
    e.prototype.V1jt = function() {
        if (this.moveData)
            return this.moveData.centiSecs
    }
    ;
    e.prototype.fillExecutedMove = function() {
        if (this.type == CB.V1is.V1ix)
            return new CB.V17g(this.V1jb.from,this.V1jb.to,this.V1jb.prom);
        if (this.type == CB.V1is.V1iy)
            return new CB.V17g(this.moveData.move[0],this.moveData.move[1],this.moveData.move[2],this.moveData.type)
    }
    ;
    e.prototype.V5 = function(b, d) {
        var c = !0;
        d && this.V1ju() && (c = this.V1jv(b, d));
        c && (c = this._doExecute(b));
        c && d && this.V1jw() && (c = this.V1jv(b, d));
        return c
    }
    ;
    e.prototype.toString = function() {
        var b = CB.V1is.toString(this.type);
        switch (this.type) {
        default:
            return b;
        case CB.V1is.V1iy:
            return "MvData=" + this.moveData.toString();
        case CB.V1is.V1iz:
            return "SetAnno=" + this.anno;
        case CB.V1is.V1j4:
            return "AddAnno=" + this.anno;
        case CB.V1is.V1ix:
            return "SetMove=" + this.V6c
        }
    }
    ;
    e.prototype._doExecute = function(b) {
        var d = !0;
        switch (this.type) {
        case CB.V1is.V1iu:
            b.reset();
            break;
        case CB.V1is.V1iw:
            b.gotoIndex(this.V6c);
            d = this.V6c === b.getMoveIndex();
            break;
        case CB.V1is.V1ix:
            var c = new CB.V17g(this.V1jb.from,this.V1jb.to,this.V1jb.prom);
            this.V1jx(c, b.getCurPos()) ? (d = this.V6c,
            d === CB.V1c6.V1c9 && b.getPlyNum() < b.getMoves().length && (d = CB.V1c6.V1ca),
            d = b.makeMove(c, d)) : d = !1;
            break;
        case CB.V1is.V1iy:
            d = this.V1jy(this.moveData, b);
            break;
        case CB.V1is.V1j7:
        case CB.V1is.V1iv:
            b.assign(this.setGame);
            d = !0;
            break;
        case CB.V1is.V1iz:
            this.V6c || 0 == b.getMoveOffs() ? b.getMoves().setAnno(this.anno) : (c = b.getPreviousMove()) && c.setAnno(this.anno);
            b.fireOnChanged();
            break;
        case CB.V1is.V1j0:
            b.deleteLine();
            break;
        case CB.V1is.V1j1:
            b.promoteLine();
            break;
        case CB.V1is.V1j2:
            b.deletePrevious();
            break;
        case CB.V1is.V1j3:
            b.deleteRemaining();
            break;
        case CB.V1is.Vfr:
            b.unAnnotate();
            break;
        case CB.V1is.V1j4:
            (c = this.V6c || 0 == b.getMoveOffs() ? b.getMoves().getAnno() : b.getPreviousMove().getAnno()) || (c = new CB.Annotation);
            this.anno.V19y() ? c.V19t(this.anno.V19z()) : this.anno.V1a0() && c.addPostText(this.anno.getPostText());
            this.V6c || 0 == b.getMoveOffs() ? b.getMoves().setAnno(c) : b.getPreviousMove().setAnno(c);
            b.fireOnChanged();
            break;
        case CB.V1is.V1j6:
            b.onSync(this.V6c);
            break;
        case CB.V1is.V1j8:
            b.setMoves(this.moves);
            break;
        case CB.V1is.V1j9:
            b.setHeader(this.header),
            b.fireOnChanged()
        }
        return d
    }
    ;
    e.prototype.V1ju = function() {
        return this.type == CB.V1is.V1ix || this.type == CB.V1is.V1iy || this.type == CB.V1is.V1iz || this.type == CB.V1is.V1j4 || this.type == CB.V1is.V1j1 || this.type == CB.V1is.V1j3
    }
    ;
    e.prototype.V1jw = function() {
        return this.type == CB.V1is.V1iw || this.type == CB.V1is.V1j2 || this.type == CB.V1is.V1j0
    }
    ;
    e.prototype.V1jv = function(b, d) {
        var c = 0 == b.getMoveOffs() || b.getPreviousMove() && b.getPreviousMove().equals(d);
        c || console.log("Cntrl move NOT OK: " + this.toString() + ", ctrl=" + d + ", prev=" + b.getPreviousMove());
        return c
    }
    ;
    e.prototype.V1jz = function() {
        return this.type == CB.V1is.V1ix || this.type == CB.V1is.V1iy || this.type == CB.V1is.V1iu || this.type == CB.V1is.V1j0 || this.type == CB.V1is.V1j1 || this.type == CB.V1is.V1j2 || this.type == CB.V1is.V1j3
    }
    ;
    e.prototype.V1jy = function(b, d) {
        var c = !1;
        try {
            var f = new CB.V17g(b.move[0],b.move[1],b.move[2]);
            this.V1jx(f, d.getCurPos()) && (d.enableEvents(!1),
            d.makeMove(f, CB.V1c6.V1ca),
            d.getOrCreateCurrAnno().setItem(CB.AnnoType.TIME, new CB.V1k0(CB.V10a.V10b(b.centiSecs))),
            d.enableEvents(!0),
            d.fireOnMove(),
            d.fireOnCurPosChanged(),
            c = !0)
        } catch (g) {
            CB.V3("GA::ExecMoveData", g)
        }
        return c
    }
    ;
    e.prototype.V1jx = function(b, d) {
        return d.isLegalMove(b)
    }
    ;
    return e
}();
"use strict";
CB.V1hz = {
    V1k1: 0,
    MATE: 1,
    STALEMATE: 2,
    Veq: 3,
    V1i0: 4,
    V1i1: 5,
    V1i2: 6,
    DRAW: 7,
    WHITE_WINS: 8,
    BLACK_WINS: 9,
    V1k2: 10
};
CB.V1hy = function() {
    var e = function() {};
    e.prototype.checkGame = function(b) {
        var d = this.V1k3(b.getCurPos());
        if (d != CB.V1hz.V1k1)
            return d;
        if (5 <= b.getPlyNum()) {
            d = b.getCurPos().getCastleRights();
            var c = b.getMoves().length;
            if (590 < c)
                return CB.V1hz.V1i2;
            for (var f = Math.max(0, c - 5), g = c - 1; g >= f; g--) {
                var h = b.getMoves()[g];
                if (h) {
                    if (!h.undo && h.isValid() && g < b.getPlyNum() - 1) {
                        for (f = h = 0; f < g; f++)
                            b.getMoves()[f].undo && h++;
                        break
                    }
                    if (h.isTake() || h.isProm() || h.V15p())
                        return CB.V1hz.V1k1
                } else
                    return CB.V1hz.V1k1
            }
            f = b.getCurPos().getEPCol();
            var k = c - 100
              , l = 1
              , m = ObjUtil.clone(b.getCurPos());
            for (g = c; 0 < g; --g) {
                h = b.getMoves()[--g];
                if (!h || !h.undo)
                    break;
                if (h.isTake() || h.isProm() || h.V15p())
                    break;
                if (b.getCurPos().getEPCol() != f)
                    break;
                if (g <= k)
                    return CB.V1hz.V1i1;
                m.unmakeMove(h, h.undo);
                if (l && d != m.getCastleRights() && (l = 0,
                0 >= k))
                    break;
                if (0 < g) {
                    h = b.getMoves()[g - 1];
                    if (h.isTake() || h.isProm() || h.V15p())
                        break;
                    if (b.getCurPos().getEPCol() != f)
                        break;
                    if (g <= k)
                        return CB.V1hz.V1i1;
                    if (!h.undo)
                        break;
                    m.unmakeMove(h, h.undo);
                    if (l) {
                        if (d != m.getCastleRights() && (l = 0,
                        0 >= k))
                            break;
                        if (f == m.getEPCol() && m.boardEquals(b.getCurPos().board) && (l++,
                        3 <= l))
                            return CB.V1hz.V1i0
                    }
                }
            }
        }
        return CB.V1hz.V1k1
    }
    ;
    e.prototype.V1k3 = function(b) {
        if (!b.hasLegals())
            return b.isCheck() ? CB.V1hz.MATE : CB.V1hz.STALEMATE;
        for (var d = [0, 0, 0, 0, 0, 0, 0, 0], c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], f = 0, g = 0, h = 0; 64 > h; h++)
            d[b.board[h] & 7]++,
            c[b.board[h] & 15]++,
            (b.board[h] & 7) == CB.Piece.BISHOP && (b.board[h] & 8 ? g = (h & 1) == (h >> 3 & 1) ? g | 1 : g | 2 : f = (h & 1) == (h >> 3 & 1) ? f | 1 : f | 2);
        return d[CB.Piece.QUEEN] || d[CB.Piece.ROOK] || d[CB.Piece.PAWN] || !(!d[CB.Piece.BISHOP] && 1 >= d[CB.Piece.KNIGHT] || !d[CB.Piece.KNIGHT] && (1 >= d[CB.Piece.BISHOP] || 3 > f && 3 > g && (!f || !g || f == g))) ? CB.V1hz.V1k1 : CB.V1hz.Veq
    }
    ;
    e.prototype.canWin = function(b, d) {
        var c = !1;
        try {
            var f = b.board
              , g = d == CB.V15e.WHITE ? 0 : CB.V15e.V15g;
            b = [];
            for (var h = 0; 16 > h; h++)
                b[h] = 0;
            for (h = 0; 64 > h; h++)
                b[f[h] & 15]++,
                f[h] && (f[h] & CB.V15e.V15g) == g && (f[h] & CB.Piece.V15j) != CB.Piece.KING && (c = !0);
            if (c & !b[CB.Piece.Vd5] && !b[CB.Piece.Vd6]) {
                var k = d == CB.V15e.WHITE ? CB.Piece.WHITE : CB.Piece.BLACK;
                if (!(b[k | CB.Piece.QUEEN] || b[k | CB.Piece.ROOK] || 1 != b[k | CB.Piece.BISHOP] + b[k | CB.Piece.KNIGHT] || b[CB.Piece.V15h - k | CB.Piece.BISHOP] || b[CB.Piece.V15h - k | CB.Piece.KNIGHT]))
                    if (b[k | CB.Piece.BISHOP]) {
                        if (b[CB.Piece.V15h - k | CB.Piece.QUEEN] || b[CB.Piece.V15h - k | CB.Piece.ROOK])
                            c = !1
                    } else
                        b[k | CB.Piece.KNIGHT] && b[CB.Piece.V15h - k | CB.Piece.QUEEN] && !b[CB.Piece.V15h - k | CB.Piece.ROOK] && (c = !1)
            }
        } catch (l) {
            c = !0,
            CB.V3("CanWin", l)
        }
        return c
    }
    ;
    e.V1k4 = function(b) {
        switch (b) {
        default:
        case CB.V1hz.MATE:
            return "Mate";
        case CB.V1hz.STALEMATE:
            return "Stalemate";
        case CB.V1hz.Veq:
            return "No Material";
        case CB.V1hz.V1i0:
            return "Threefold Rep";
        case CB.V1hz.V1i1:
            return "50 Moves Rule";
        case CB.V1hz.V1i2:
            return "290 Moves";
        case CB.V1hz.DRAW:
            return "Draw";
        case CB.V1hz.WHITE_WINS:
            return "WWin";
        case CB.V1hz.BLACK_WINS:
            return "BWin";
        case CB.V1hz.V1k2:
            return "Twofold Rep"
        }
    }
    ;
    return e
}();
"use strict";
CB.V1k5 = function() {
    var e = function() {
        this.set = new CB.Set;
        this.V1k6 = 0;
        this.V1k7 = !0
    };
    e.prototype.save = function() {
        (new CB.V1v).save("posns_trackCnt", this.V1k6);
        this.set.save("posns", function(b) {
            return 200 > this.V1k6 - b.lastSeenAt
        }
        .bind(this))
    }
    ;
    e.prototype.load = function() {
        this.V1k6 = (new CB.V1v).load("posns_trackCnt") || 0;
        this.set.load("posns", function(b) {
            if (b) {
                var d = new CB.Position;
                d.copy(b.pos);
                d = new CB.V1k8(d);
                d.cnt = b.cnt;
                d.lastSeenAt = b.lastSeenAt;
                return d
            }
        })
    }
    ;
    e.prototype.track = function(b) {
        if (this.V1k7) {
            this.V1k6++;
            if (this.set.contains(new CB.V1k8(b)))
                return b = this.set.get(new CB.V1k8(b)),
                b.inc(),
                b.lastSeenAt = this.V1k6,
                !0;
            b = new CB.V1k8(b);
            b.lastSeenAt = this.V1k6;
            this.set.insert(b)
        }
        return !1
    }
    ;
    e.prototype.V1k9 = function(b) {
        b = this.set.get(new CB.V1k8(b));
        return void 0 !== b && 0 != b.cnt ? this.V1k6 - b.lastSeenAt : -1
    }
    ;
    return e
}();
CB.V1k8 = function() {
    var e = function(b) {
        this.pos = ObjUtil.clone(b);
        this.lastSeenAt = this.cnt = 0
    };
    e.prototype.setEquals = function(b) {
        return this.pos.setEquals(b.pos)
    }
    ;
    e.prototype.setGreater = function(b) {
        return this.pos.setGreater(b.pos)
    }
    ;
    e.prototype.inc = function() {
        this.cnt++
    }
    ;
    return e
}();
"use strict";
CB.V1ka = function() {
    function e(k) {
        return h[CB.Piece.V15k(k)]
    }
    function b(k) {
        return function(l) {
            return new CB.V17g(l,k)
        }
    }
    function d(k, l) {
        var m = 0
          , n = l.to;
        k.preSetMinCtx(l);
        m += e(l.getVictim());
        k.makeMove(l);
        l = k.getAttacksTo(n, k.getSideToMove()).map(b(n));
        l = k.filterLegals(l);
        if (!l.length)
            return m;
        l.forEach(function(z) {
            k.preSetMinCtx(z)
        });
        n = l[0];
        for (var p = e(n.getMoved()), q = 1; q < l.length; ++q) {
            var t = l[q]
              , v = e(t.getMoved());
            v < p && (n = t,
            p = v)
        }
        l = d(k, n);
        0 < l && (m -= l);
        return m
    }
    function c(k) {
        return e(k.getVictim()) - e(k.getMoved())
    }
    function f(k, l) {
        return c(l) - c(k)
    }
    function g(k, l, m, n, p) {
        n = Math.max(l, n);
        var q = k.isCheck();
        if (n > p && !q)
            return l;
        var t = k.generateSemiLegals();
        t.forEach(function(F) {
            k.preSetMinCtx(F)
        });
        q || (t = t.filter(function(F) {
            return F.isTake()
        }));
        t = k.filterLegals(t);
        t.sort(f);
        q = l;
        for (var v = 0; v < t.length; ++v) {
            var z = t[v]
              , E = l + e(z.getVictim())
              , C = k.makeMove(z);
            E = -g(k, -E, m, -p, -n);
            k.unmakeMove(z, C);
            q = Math.max(q, E);
            n = Math.max(n, E);
            if (n > p)
                break
        }
        return q
    }
    var h = {};
    (function(k) {
        k[CB.Piece.NONE] = 0;
        k[CB.Piece.KING] = 1E6;
        k[CB.Piece.QUEEN] = 900;
        k[CB.Piece.ROOK] = 500;
        k[CB.Piece.KNIGHT] = 325;
        k[CB.Piece.BISHOP] = 325;
        k[CB.Piece.PAWN] = 100
    }
    )(h);
    return {
        evaluateLocal: function(k, l) {
            k = ObjUtil.clone(k);
            return d(k, l)
        },
        evaluateFull: function(k, l, m) {
            void 0 === m && (m = !0);
            k = ObjUtil.clone(k);
            k.preSetMinCtx(l);
            var n = e(l.getVictim());
            k.makeMove(l);
            return -g(k, n, m, CB.V1kb.V1kc, CB.V1kb.MAX_VALUE)
        },
        evaluatePieceNominal: e,
        evaluateLine: function(k, l) {
            k = ObjUtil.clone(k);
            for (var m = 1, n = 0, p = 0; p < l.length; ++p) {
                var q = l[p]
                  , t = m;
                var v = q;
                k.preSetMinCtx(v);
                v = v.getVictim();
                v = e(v);
                n += t * v;
                m = -m;
                k.makeMove(q)
            }
            return n
        },
        evaluatePos: function(k) {
            for (var l = 0, m = k.getSideToMove(), n = CB.Square.A1; n <= CB.Square.H8; ++n) {
                var p = k.getPiece(n);
                if (p !== CB.Piece.NONE) {
                    var q = CB.Piece.side(p);
                    p = e(p);
                    q !== m && (p = -p);
                    l += p
                }
            }
            return l
        }
    }
}();
"use strict";
var BitBoard = function(e, b) {
    this.low = UShort(e);
    this.high = UShort(b)
};
BitBoard.prototype.equals = function(e) {
    return this.low === e.low && this.high === e.high
}
;
BitBoard.prototype.copy = function() {
    return new BitBoard(this.low,this.high)
}
;
BitBoard.prototype.empty = function() {
    return !this.low && !this.high
}
;
BitBoard.prototype.notEmpty = function() {
    return this.low || this.high
}
;
BitBoard.prototype.isZero = function(e) {
    e = UShort(e);
    return 32 > e ? !(this.low & 1 << e) : !(this.high & 1 << e - 32)
}
;
BitBoard.prototype.isSet = function(e) {
    return !this.isZero(e)
}
;
BitBoard.prototype.setBit = function(e) {
    e = UShort(e);
    32 > e ? this.low = UShort(this.low | 1 << e) : this.high = UShort(this.high | 1 << e - 32);
    return this
}
;
BitBoard.prototype.clearBit = function(e) {
    e = UShort(e);
    32 > e ? this.low = UShort(this.low & ~(1 << e)) : this.high = UShort(this.high & ~(1 << e - 32));
    return this
}
;
BitBoard.prototype.popcnt = function() {
    return popcnt32(this.low) + popcnt32(this.high)
}
;
BitBoard.prototype.clearLSB = function() {
    this.low ? this.low = popLSB32(this.low) : this.high = popLSB32(this.high);
    return this
}
;
BitBoard.prototype.LSB = function() {
    return this.low ? getLSB32(this.low) : 32 + getLSB32(this.high)
}
;
BitBoard.prototype.popLSB = function() {
    var e = this.LSB();
    this.clearLSB();
    return e
}
;
BitBoard.prototype.MSB = function() {
    return this.high ? 32 + getMSB32(this.high) : getMSB32(this.low)
}
;
BitBoard.prototype.AND = function(e) {
    this.low = UShort(this.low & e.low);
    this.high = UShort(this.high & e.high);
    return this
}
;
BitBoard.prototype.AND_NOT = function(e) {
    this.low = UShort(this.low & ~e.low);
    this.high = UShort(this.high & ~e.high);
    return this
}
;
BitBoard.prototype.OR = function(e) {
    this.low = UShort(this.low | e.low);
    this.high = UShort(this.high | e.high);
    return this
}
;
BitBoard.prototype.XOR = function(e) {
    this.low = UShort(this.low ^ e.low);
    this.high = UShort(this.high ^ e.high);
    return this
}
;
BitBoard.prototype.NOT = function() {
    this.low = UShort(~this.low);
    this.high = UShort(~this.high);
    return this
}
;
BitBoard.prototype.makeN = function() {
    var e = this.copy();
    e.SHLEFT();
    return e
}
;
BitBoard.prototype.makeE = function() {
    var e = this.copy();
    e.SHUP();
    return e
}
;
BitBoard.prototype.makeS = function() {
    var e = this.copy();
    e.SHRIGHT();
    return e
}
;
BitBoard.prototype.makeW = function() {
    var e = this.copy();
    e.SHDOWN();
    return e
}
;
BitBoard.prototype.makeNW = function() {
    var e = this.copy();
    e.SHLEFT();
    e.SHDOWN();
    return e
}
;
BitBoard.prototype.makeNE = function() {
    var e = this.copy();
    e.SHLEFT();
    e.SHUP();
    return e
}
;
BitBoard.prototype.makeSW = function() {
    var e = this.copy();
    e.SHRIGHT();
    e.SHDOWN();
    return e
}
;
BitBoard.prototype.makeSE = function() {
    var e = this.copy();
    e.SHRIGHT();
    e.SHUP();
    return e
}
;
BitBoard.prototype.SHUP = function() {
    var e = UShort((this.low & 4278190080) >>> 24);
    this.low = UShort(this.low << 8);
    this.high = UShort(this.high << 8 | e);
    return this
}
;
BitBoard.prototype.SHDOWN = function() {
    var e = UShort((this.high & 255) << 24);
    this.low = UShort(this.low >>> 8 | e);
    this.high = UShort(this.high >>> 8);
    return this
}
;
BitBoard.prototype.fileA = function() {
    return makeBB(255, 0)
}
;
BitBoard.prototype.fileH = function() {
    return makeBB(0, 255)
}
;
BitBoard.prototype.rank1 = function() {
    return new BitBoard(16843009,16843009)
}
;
BitBoard.prototype.rank8 = function() {
    return new BitBoard(2155905152,2155905152)
}
;
BitBoard.prototype.SHLEFT = function() {
    this.AND_NOT(this.rank8());
    var e = UShort((this.low & 2147483648) >>> 31);
    this.low = UShort(this.low << 1);
    this.high = UShort(this.high << 1 | e);
    return this
}
;
BitBoard.prototype.SHRIGHT = function() {
    this.AND_NOT(this.rank1());
    var e = UShort((this.high & 1) << 31);
    this.low = UShort(this.low >>> 1 | e);
    this.high = UShort(this.high >>> 1);
    return this
}
;
BitBoard.prototype.SHL = function(e) {
    e = UShort(e);
    31 < e ? (this.high = UShort(this.low << e - 32),
    this.low = UShort(0)) : 0 < e && (this.high = UShort(this.high << e | this.low >>> 32 - e),
    this.low = UShort(this.low << e));
    return this
}
;
BitBoard.prototype.SHR = function(e) {
    e = UShort(e);
    31 < e ? (this.low = this.high >>> e - 32,
    this.high = UShort(0)) : 0 < e && (this.low = UShort(this.low >>> e | this.high << 32 - e),
    this.high >>>= e);
    return this
}
;
BitBoard.prototype.SHIFT = function(e) {
    63 < e || -63 > e ? this.low = this.high = UShort(0) : 0 < e ? this.SHL(e) : 0 > e && this.SHR(-e);
    return this
}
;
BitBoard.prototype.toSet = function() {
    for (var e = [], b = this.copy(), d = b.popcnt(); e.length < d; ) {
        var c = b.LSB();
        if (0 <= c)
            e.push(c),
            b.clearLSB();
        else
            break
    }
    return e
}
;
function UShort(e) {
    return e >>> 0
}
function popcnt32(e) {
    e = UShort(e);
    e -= e >>> 1 & 1431655765;
    e = (e & 858993459) + (e >>> 2 & 858993459);
    return 16843009 * (e + (e >>> 4) & 252645135) >>> 24
}
function popLSB32(e) {
    e = UShort(e);
    return UShort(e & e - 1)
}
function getLSB32(e) {
    e = UShort(e);
    return popcnt32((e & -e) - 1)
}
function getMSB32(e) {
    return e ? 31 - Math.clz32(UShort(e)) : 0
}
var Boards = {
    ZERO: zeroBB(),
    ONE: allSetBB(),
    LIGHT_SQUARES: lightBB(),
    DARK_SQUARES: darkBB(),
    FILES: fileBBs(),
    RANKS: rankBBs(),
    DIAGONALS: diagBBs(),
    ANTIDIAGONALS: antiDiagBBs(),
    CENTER_FILES: centerFiles(),
    WHITE_SPACE: whiteSpace(),
    BLACK_SPACE: blackSpace(),
    RANK1: rankBB(0),
    RANK2: rankBB(1),
    RANK3: rankBB(2),
    RANK4: rankBB(3),
    RANK5: rankBB(4),
    RANK6: rankBB(5),
    RANK7: rankBB(6),
    RANK8: rankBB(7),
    FILE_A: fileBB(0),
    FILE_B: fileBB(1),
    FILE_C: fileBB(2),
    FILE_D: fileBB(3),
    FILE_E: fileBB(4),
    FILE_F: fileBB(5),
    FILE_G: fileBB(6),
    FILE_H: fileBB(7),
    OUTPOSTAREAS: [outpostArea(0), outpostArea(1)],
    BORDER: fileBB(0).OR(fileBB(7)).OR(rankBB(0)).OR(rankBB(7)),
    INNERRANKS: rankBB(0).OR(rankBB(7)).NOT(),
    INNER_FOUR: rankBB(2).OR(rankBB(3)).OR(rankBB(4)).OR(rankBB(5)),
    SLIDING_MASKS: [rankBB(7).NOT(), allSetBB(), rankBB(0).NOT()],
    REVERSE_RANKS: reverseRankBBs(),
    CENTER: fileBB(3).OR(fileBB(4)).AND(rankBB(3).OR(rankBB(4))),
    BIG_CENTER: fileBB(2).OR(fileBB(3)).OR(fileBB(4)).OR(fileBB(5)).AND(rankBB(3).OR(rankBB(4)))
};
Boards.KNIGHT_MOVEMENTS = knightBBs();
Boards.KING_MOVEMENTS = kingBBs();
Boards.RELATIVE_RANK = [Boards.RANKS, Boards.REVERSE_RANKS];
Boards.INNER = Boards.BORDER.copy().NOT();
Boards.LIGHT_INNER = Boards.LIGHT_SQUARES.copy().AND(Boards.INNER);
Boards.DARK_INNER = Boards.DARK_SQUARES.copy().AND(Boards.INNER);
Boards.LIGHT_CENTER = Boards.LIGHT_SQUARES.copy().AND(Boards.CENTER);
Boards.DARK_CENTER = Boards.DARK_SQUARES.copy().AND(Boards.CENTER);
Boards.SHELTER_000 = [fileBB(0).OR(fileBB(1)).OR(fileBB(2)).AND(rankBB(1).OR(rankBB(2))), fileBB(0).OR(fileBB(1)).OR(fileBB(2)).AND(rankBB(5).OR(rankBB(6)))];
Boards.SHELTER_00 = [fileBB(5).OR(fileBB(6)).OR(fileBB(7)).AND(rankBB(1).OR(rankBB(2))), fileBB(5).OR(fileBB(6)).OR(fileBB(7)).AND(rankBB(5).OR(rankBB(6)))];
Boards.MASK_00 = [Boards.RANK1.copy().OR(Boards.RANK2).OR(Boards.RANK3).AND(Boards.FILE_F.copy().OR(Boards.FILE_G).OR(Boards.FILE_H)), Boards.RANK6.copy().OR(Boards.RANK7).OR(Boards.RANK8).AND(Boards.FILE_F.copy().OR(Boards.FILE_G).OR(Boards.FILE_H))];
Boards.MASK_000 = [Boards.RANK1.copy().OR(Boards.RANK2).OR(Boards.RANK3).AND(Boards.FILE_A.copy().OR(Boards.FILE_B).OR(Boards.FILE_C)), Boards.RANK6.copy().OR(Boards.RANK7).OR(Boards.RANK8).AND(Boards.FILE_A.copy().OR(Boards.FILE_B).OR(Boards.FILE_C))];
Boards.WEIGHT_AREA = [Boards.RANK3.copy().OR(Boards.RANK4).OR(Boards.RANK5).OR(Boards.RANK6).OR(Boards.RANK7).OR(Boards.RANK8), Boards.RANK6.copy().OR(Boards.RANK5).OR(Boards.RANK4).OR(Boards.RANK3).OR(Boards.RANK2).OR(Boards.RANK1)];
Boards.PASSEDPAWN_RANKS = [rankBB(3).OR(rankBB(4)).OR(rankBB(5)).OR(rankBB(6)), rankBB(4).OR(rankBB(3)).OR(rankBB(2)).OR(rankBB(1))];
Boards.KING_00 = [Boards.RANK1.copy().OR(Boards.RANK2).AND(Boards.FILE_G.copy().OR(Boards.FILE_H)), Boards.RANK7.copy().OR(Boards.RANK8).AND(Boards.FILE_G.copy().OR(Boards.FILE_H))];
Boards.KING_000 = [Boards.RANK1.copy().OR(Boards.RANK2).AND(Boards.FILE_A.copy().OR(Boards.FILE_B).OR(Boards.FILE_C)), Boards.RANK7.copy().OR(Boards.RANK8).AND(Boards.FILE_A.copy().OR(Boards.FILE_B).OR(Boards.FILE_C))];
function makeBB(e, b) {
    return new BitBoard(e,b)
}
function zeroBB() {
    return makeBB(0, 0)
}
function twoZeroBB() {
    return [zeroBB(), zeroBB()]
}
function allSetBB() {
    return makeBB(4294967295, 4294967295)
}
function lightBB() {
    return makeBB(1437226410, 1437226410)
}
function darkBB() {
    return makeBB(2857740885, 2857740885)
}
function fileBB(e) {
    return makeBB(255, 0).SHL(8 * e)
}
function rankBB(e) {
    return makeBB(16843009, 16843009).SHL(e)
}
function fileBBs() {
    for (var e = [], b = 0; 8 > b; ++b)
        e.push(fileBB(b));
    return e
}
function centerFiles() {
    for (var e = fileBB(2), b = 3; 5 >= b; b++)
        e.OR(fileBB(b));
    return e
}
function rankBBs() {
    for (var e = [], b = 0; 8 > b; ++b)
        e.push(rankBB(b));
    return e
}
function reverseRankBBs() {
    for (var e = [], b = 7; 0 <= b; b--)
        e.push(rankBB(b));
    return e
}
function squareBB(e) {
    return zeroBB().setBit(e)
}
function diagBB(e) {
    return makeBB(270549120, 16909320).AND(allSetBB().SHIFT(8 * e)).SHIFT(e)
}
function diagBBs() {
    for (var e = [], b = -7; 8 > b; ++b)
        e.push(diagBB(b));
    return e
}
function antiDiagBB(e) {
    return makeBB(134480385, 2151686160).AND(allSetBB().SHIFT(8 * -e)).SHIFT(e)
}
function antiDiagBBs() {
    for (var e = [], b = -7; 8 > b; ++b)
        e.push(antiDiagBB(b));
    return e
}
function knightBB(e) {
    var b = zeroBB().setBit(e);
    e = b.copy().SHR(1).AND_NOT(Boards.FILES[7]);
    var d = b.copy().SHR(2).AND_NOT(Boards.FILES[7]).AND_NOT(Boards.FILES[6])
      , c = b.copy().SHL(1).AND_NOT(Boards.FILES[0]);
    b = b.copy().SHL(2).AND_NOT(Boards.FILES[0]).AND_NOT(Boards.FILES[1]);
    d = d.OR(b);
    e = e.OR(c);
    return d.copy().SHL(8).OR(d.SHR(8)).OR(e.copy().SHL(16)).OR(e.SHR(16))
}
function knightBBs() {
    for (var e = [], b = 0; 64 > b; ++b)
        e.push(knightBB(b));
    return e
}
function kingBB(e) {
    var b = zeroBB().setBit(e);
    e = b.copy().SHR(1).AND_NOT(Boards.FILES[7]).OR(b.copy().SHL(1).AND_NOT(Boards.FILES[0]));
    var d = b.copy().OR(e).SHR(8);
    b = b.copy().OR(e).SHL(8);
    return e.OR(d).OR(b)
}
function kingBBs() {
    for (var e = [], b = 0; 64 > b; ++b)
        e.push(kingBB(b));
    return e
}
function whiteSpace() {
    var e = centerFiles().OR(fileBB(1)).OR(fileBB(6))
      , b = rankBB(1).OR(rankBB(2)).OR(rankBB(3)).OR(rankBB(4));
    e.AND(b);
    return e
}
function blackSpace() {
    var e = centerFiles().OR(fileBB(1)).OR(fileBB(6))
      , b = rankBB(3).OR(rankBB(4)).OR(rankBB(5)).OR(rankBB(6));
    e.AND(b);
    return e
}
function oneRankBack(e) {
    return e.copy().AND_NOT(Boards.RANK1).SHR(1)
}
function oneRankForward(e) {
    return e.copy().AND_NOT(Boards.RANK8).SHL(1)
}
function border() {
    return fileBB(0).OR(fileBB(7)).OR(rankBB(0)).OR(rankBB(7))
}
function inner() {
    return border().NOT()
}
function outpostArea(e) {
    return e ? inner().AND(rankBB(1).OR(rankBB(2)).OR(rankBB(3)).OR(rankBB(4))) : inner().AND(rankBB(3).OR(rankBB(4)).OR(rankBB(5)).OR(rankBB(6)))
}
"use strict";
var Constants = {
    NUM_RANKS: 8,
    NUM_FILES: 8,
    FILE_CHARS: "abcdefgh",
    RANK_CHARS: "12345678",
    PIECE_CHARS: "\u2659\u265f\u2658\u265e\u2657\u265d\u2656\u265c\u2655\u265b\u2654\u265a",
    Pieces: {
        PAWN: 0,
        KNIGHT: 1,
        BISHOP: 2,
        ROOK: 3,
        QUEEN: 4,
        KING: 5
    },
    NUM_PIECES: 6,
    Colors: {
        WHITE: 0,
        BLACK: 1
    },
    WHITE: 0,
    BLACK: 1,
    PIECE_NAMES: "pawn knight bishop rook queen king".split(" "),
    ALG_NAMES: " NBRQK",
    MoveTypes: {
        QUIET: 0,
        DOUBLE_PAWN_PUSH: 1,
        KING_CASTLE: 2,
        QUEEN_CASTLE: 3,
        CAPTURE: 4,
        EN_PASSANT_CAPTURE: 5,
        KNIGHT_PROMOTION: 8,
        BISHOP_PROMOTION: 9,
        ROOK_PROMOTION: 10,
        QUEEN_PROMOTION: 11,
        KNIGHT_PROMOTION_CAPTURE: 12,
        BISHOP_PROMOTION_CAPTURE: 13,
        ROOK_PROMOTION_CAPTURE: 14,
        QUEEN_PROMOTION_CAPTURE: 15
    },
    ALL_WHITE: 6,
    ALL_BLACK: 7,
    CORNERS: [7, 63, 0, 56],
    Status: {
        NORMAL: 0,
        CHECKMATE: 1,
        DRAW: 2
    }
}
  , Pieces = {
    PAWN: 0,
    KNIGHT: 1,
    BISHOP: 2,
    ROOK: 3,
    QUEEN: 4,
    KING: 5
};
"use strict";
function perft(e, b) {
    if (!e)
        return 1;
    for (var d = 0, c = $jscomp.makeIterator(b.availableMoves(!0)), f = c.next(); !f.done; f = c.next())
        b.makeMove(f.value) && (d += perft(e - 1, b),
        b.unmakeMove());
    return d
}
function casIdx(e, b) {
    return e + (b ? 0 : 2)
}
function casRkSq(e, b) {
    return Constants.CORNERS[casIdx(e, b)]
}
function pieceChar(e, b) {
    return Constants.PIECE_CHARS.charAt(2 * e + b)
}
function otherColor(e) {
    return e ^ 1
}
function idxToRank(e) {
    return e >>> 3
}
function idxToFile(e) {
    return e & 7
}
function rfToIdx(e, b) {
    return b + e * Constants.NUM_FILES
}
function isLight(e, b) {
    return !!((e + b) % 2)
}
function rfToAlg(e, b) {
    return Constants.FILE_CHARS[b] + Constants.RANK_CHARS[e]
}
function algToIdx(e) {
    var b = Constants.RANK_CHARS.indexOf(e[1]);
    e = Constants.FILE_CHARS.indexOf(e[0]);
    return rfToIdx(b, e)
}
function idxToAlg(e) {
    return rfToAlg(idxToRank(e), idxToFile(e))
}
"use strict";
var BitMove = function(e, b, d, c, f) {
    this.val = b & 63 | (e & 63) << 6 | (d & 15) << 12 | (c & 7) << 16 | ((f || 0) & 7) << 19
};
BitMove.prototype.to = function() {
    return this.val & 63
}
;
BitMove.prototype.from = function() {
    return this.val >>> 6 & 63
}
;
BitMove.prototype.type = function() {
    return this.val >>> 12 & 15
}
;
BitMove.prototype.piece = function() {
    return this.val >>> 16 & 7
}
;
BitMove.prototype.isCapt = function() {
    return !!(this.type() & 4)
}
;
BitMove.prototype.captPiece = function() {
    return this.val >>> 19 & 7
}
;
BitMove.prototype.isPromo = function() {
    return !!(this.type() & 8)
}
;
BitMove.prototype.isCas = function() {
    return this.type() === Constants.MoveTypes.KING_CASTLE || this.type() === Constants.MoveTypes.QUEEN_CASTLE
}
;
BitMove.prototype.promoPiece = function() {
    return this.isPromo() ? Constants.Pieces.KNIGHT + (this.type() & 3) : Constants.Pieces.PAWN
}
;
BitMove.prototype.captSq = function() {
    return this.type() !== Constants.MoveTypes.EN_PASSANT_CAPTURE ? this.to() : this.to() + (this.from() < this.to() ? -Constants.NUM_FILES : Constants.NUM_FILES)
}
;
BitMove.prototype.toCBMove = function() {}
;
BitMove.prototype.toString = function() {
    return idxToAlg(this.from()) + idxToAlg(this.to())
}
;
"use strict";
var Square = {
    A1: 0,
    A2: 1,
    A3: 2,
    A4: 3,
    A5: 4,
    A6: 5,
    A7: 6,
    A8: 7,
    B1: 8,
    B2: 9,
    B3: 10,
    B4: 11,
    B5: 12,
    B6: 13,
    B7: 14,
    B8: 15,
    C1: 16,
    C2: 17,
    C3: 18,
    C4: 19,
    C5: 20,
    C6: 21,
    C7: 22,
    C8: 23,
    D1: 24,
    D2: 25,
    D3: 26,
    D4: 27,
    D5: 28,
    D6: 29,
    D7: 30,
    D8: 31,
    E1: 32,
    E2: 33,
    E3: 34,
    E4: 35,
    E5: 36,
    E6: 37,
    E7: 38,
    E8: 39,
    F1: 40,
    F2: 41,
    F3: 42,
    F4: 43,
    F5: 44,
    F6: 45,
    F7: 46,
    F8: 47,
    G1: 48,
    G2: 49,
    G3: 50,
    G4: 51,
    G5: 52,
    G6: 53,
    G7: 54,
    G8: 55,
    H1: 56,
    H2: 57,
    H3: 58,
    H4: 59,
    H5: 60,
    H6: 61,
    H7: 62,
    H8: 63,
    RANK_1: 0,
    RANK_2: 1,
    RANK_3: 2,
    RANK_4: 3,
    RANK_5: 4,
    RANK_6: 5,
    RANK_7: 6,
    RANK_8: 7,
    FILE_A: 0,
    FILE_B: 1,
    FILE_C: 2,
    FILE_D: 3,
    FILE_E: 4,
    FILE_F: 5,
    FILE_G: 6,
    FILE_H: 7,
    MD_BL: -9,
    MD_LEFT: -8,
    MD_FL: -7,
    MD_BACK: -1,
    MD_FORWARD: 1,
    MD_BR: 7,
    MD_RIGHT: 8,
    MD_FR: 9,
    fileDiff: function(e, b) {
        return (e >> 3) - (b >> 3)
    },
    rankDiff: function(e, b) {
        return (b & 7) - (e & 7)
    }
}
  , BitPos = function() {
    this.bitboards = [Boards.RANKS[1].copy().OR(Boards.RANKS[6]), squareBB(Square.B1).OR(squareBB(Square.G1)).OR(squareBB(Square.B8)).OR(squareBB(Square.G8)), squareBB(Square.C1).OR(squareBB(Square.F1)).OR(squareBB(Square.C8)).OR(squareBB(Square.F8)), squareBB(Square.A1).OR(squareBB(Square.H1)).OR(squareBB(Square.A8)).OR(squareBB(Square.H8)), squareBB(Square.D1).OR(squareBB(Square.D8)), squareBB(Square.E1).OR(squareBB(Square.E8)), Boards.RANKS[0].copy().OR(Boards.RANKS[1]), Boards.RANKS[6].copy().OR(Boards.RANKS[7])];
    this.turn = Constants.Colors.WHITE;
    this.cas = 15;
    this.enPas = -1;
    this.init()
};
BitPos.prototype.fromChessPos = function(e) {
    e.getBTM() ? this.turn = Constants.Colors.BLACK : this.turn = Constants.Colors.WHITE;
    this.cas = 0;
    e.cr && CB.V15t.V15v && (this.cas |= 1);
    e.cr && CB.V15t.V15x && (this.cas |= 2);
    e.cr && CB.V15t.V15u && (this.cas |= 4);
    e.cr && CB.V15t.V15w && (this.cas |= 8);
    this.enPas = e.V196();
    for (var b = 0; 8 > b; b++)
        this.bitboards[b] = zeroBB();
    e = e.board;
    for (b = 0; 64 > b; b++)
        if (e[b]) {
            var d = 0 != (e[b] & 8)
              , c = b;
            switch (e[b] & 7) {
            case CB.Piece.KING:
                this.bitboards[5].setBit(c);
                break;
            case CB.Piece.QUEEN:
                this.bitboards[4].setBit(c);
                break;
            case CB.Piece.ROOK:
                this.bitboards[3].setBit(c);
                break;
            case CB.Piece.BISHOP:
                this.bitboards[2].setBit(c);
                break;
            case CB.Piece.KNIGHT:
                this.bitboards[1].setBit(c);
                break;
            case CB.Piece.PAWN:
                this.bitboards[0].setBit(c)
            }
            d ? this.bitboards[Constants.ALL_BLACK].setBit(c) : this.bitboards[Constants.ALL_WHITE].setBit(c)
        }
    this.init()
}
;
BitPos.prototype.toChessPos = function() {
    var e = new CB.Position;
    e.V18k();
    e.sd = this.turn == Constants.Colors.BLACK ? CB.V15e.BLACK : CB.V15e.WHITE;
    e.ep = this.enPas;
    e.cr = 0;
    this.cas & 1 && (e.cr |= CB.V15t.V15v);
    this.cas & 2 && (e.cr |= CB.V15t.V15x);
    this.cas & 4 && (e.cr |= CB.V15t.V15u);
    this.cas & 8 && (e.cr |= CB.V15t.V15w);
    for (var b = this.getOccupied(), d = 0; 64 > d; d++) {
        var c = d;
        if (b.isSet(d)) {
            var f = this.bitboards[Constants.ALL_BLACK].isSet(d)
              , g = 0;
            this.bitboards[0].isSet(d) && (g = CB.Piece.PAWN);
            this.bitboards[1].isSet(d) && (g = CB.Piece.KNIGHT);
            this.bitboards[2].isSet(d) && (g = CB.Piece.BISHOP);
            this.bitboards[3].isSet(d) && (g = CB.Piece.ROOK);
            this.bitboards[4].isSet(d) && (g = CB.Piece.QUEEN);
            this.bitboards[5].isSet(d) && (g = CB.Piece.KING);
            e.board[c] = g | (f ? CB.Piece.V15h : 0)
        }
    }
    return e
}
;
BitPos.prototype.init = function() {
    this.halfMoves = 0;
    this.pieceList = [];
    this.moves = [];
    this.hist = [];
    for (var e = 0; 64 > e; e++)
        this.pieceList[e] = this.getPieceFromBB(e)
}
;
BitPos.prototype.colorBB = function(e) {
    return this.bitboards[Constants.ALL_WHITE + e]
}
;
BitPos.prototype.getPieces = function(e) {
    return this.bitboards[Constants.ALL_WHITE + e].copy()
}
;
BitPos.prototype.pieceBB = function(e) {
    return this.bitboards[e]
}
;
BitPos.prototype.getPiecesOfSide = function(e, b) {
    return this.bitboards[e].copy().AND(this.bitboards[Constants.ALL_WHITE + b])
}
;
BitPos.prototype.getPawns = function(e) {
    return this.getPiecesOfSide(Pieces.PAWN, e)
}
;
BitPos.prototype.getKnights = function(e) {
    return this.getPiecesOfSide(Pieces.KNIGHT, e)
}
;
BitPos.prototype.getBishops = function(e) {
    return this.getPiecesOfSide(Pieces.BISHOP, e)
}
;
BitPos.prototype.getRooks = function(e) {
    return this.getPiecesOfSide(Pieces.ROOK, e)
}
;
BitPos.prototype.getQueens = function(e) {
    return this.getPiecesOfSide(Pieces.QUEEN, e)
}
;
BitPos.prototype.getKing = function(e) {
    return this.getPiecesOfSide(Pieces.KING, e)
}
;
BitPos.prototype.kingPos = function(e) {
    return this.getPiecesOfSide(Pieces.KING, e).LSB()
}
;
BitPos.prototype.getOccupied = function() {
    return this.bitboards[Constants.ALL_WHITE].copy().OR(this.bitboards[Constants.ALL_BLACK])
}
;
BitPos.prototype.emptyBB = function() {
    return this.getOccupied().NOT()
}
;
BitPos.prototype.inCheck = function() {
    return this.isAttacked(otherColor(this.turn), this.kingPos(this.turn))
}
;
BitPos.prototype.pawnAttack = function(e, b) {
    var d = e === Constants.Colors.WHITE;
    e = b.copy().AND_NOT(Boards.FILES[0]).SHIFT(d ? 7 : -9);
    b = b.copy().AND_NOT(Boards.FILES[Constants.NUM_FILES - 1]).SHIFT(d ? 9 : -7);
    return e.OR(b)
}
;
BitPos.prototype.slidingAttack = function(e, b, d, c) {
    e = e.copy();
    var f = zeroBB();
    c = c * Constants.NUM_FILES + d;
    d = Boards.SLIDING_MASKS[1 + d];
    for (e.SHIFT(c); !e.AND(d).empty(); e.AND_NOT(b).SHIFT(c))
        f.OR(e);
    return f
}
;
BitPos.prototype.bishopAttack = function(e, b) {
    return this.slidingAttack(e.copy(), b, 1, 1).OR(this.slidingAttack(e.copy(), b, 1, -1)).OR(this.slidingAttack(e.copy(), b, -1, 1)).OR(this.slidingAttack(e.copy(), b, -1, -1))
}
;
BitPos.prototype.rookAttack = function(e, b) {
    return this.slidingAttack(e.copy(), b, 0, 1).OR(this.slidingAttack(e.copy(), b, 0, -1)).OR(this.slidingAttack(e.copy(), b, 1, 0)).OR(this.slidingAttack(e.copy(), b, -1, 0))
}
;
BitPos.prototype.isAttacked = function(e, b) {
    var d = this.getPiecesOfSide(Pieces.PAWN, e);
    if (this.pawnAttack(e, d).isSet(b))
        return !0;
    d = this.getKnights(e);
    if (!Boards.KNIGHT_MOVEMENTS[b].copy().AND(d).empty())
        return !0;
    d = this.getPiecesOfSide(Pieces.KING, e);
    if (!Boards.KING_MOVEMENTS[b].copy().AND(d).empty())
        return !0;
    d = this.getOccupied();
    var c = this.getPiecesOfSide(Pieces.QUEEN, e)
      , f = this.getPiecesOfSide(Pieces.BISHOP, e).copy().OR(c);
    if (this.bishopAttack(f, d).isSet(b))
        return !0;
    e = this.getPiecesOfSide(Pieces.ROOK, e).copy().OR(c);
    return this.rookAttack(e, d).isSet(b) ? !0 : !1
}
;
BitPos.prototype.hasCasRight = function(e, b) {
    return 0 !== (this.cas & 1 << casIdx(e, b))
}
;
BitPos.prototype.clearCasRight = function(e, b) {
    this.cas &= ~(1 << casIdx(e, b))
}
;
BitPos.prototype.canCastle = function(e, b) {
    if (!this.hasCasRight(e, b))
        return !1;
    var d = b ? 1 : -1
      , c = e === Constants.Colors.WHITE ? 4 : 60
      , f = this.getOccupied();
    return f.isSet(c + d) || f.isSet(c + 2 * d) || !b && f.isSet(c + 3 * d) || !this.isCasLegal(e, b) ? !1 : !0
}
;
BitPos.prototype.isCasLegal = function(e, b) {
    var d = otherColor(e);
    b = b ? 1 : -1;
    e = e === Constants.Colors.WHITE ? 4 : 60;
    return !this.isAttacked(d, e) && !this.isAttacked(d, e + b) && !this.isAttacked(d, e + 2 * b)
}
;
BitPos.prototype.isDraw = function() {
    if (100 <= this.halfMoves)
        return !0;
    if (!this.pieceBB(Pieces.PAWN).empty() || !this.pieceBB(Pieces.ROOK).empty() || !this.pieceBB(Pieces.QUEEN).empty())
        return !1;
    var e = this.colorBB(Constants.Colors.WHITE).popcnt()
      , b = this.colorBB(Constants.Colors.BLACK).popcnt();
    if (4 > e + b)
        return !0;
    if (!this.pieceBB(Pieces.KNIGHT).empty())
        return !1;
    e = this.pieceBB(Pieces.BISHOP);
    return e.copy().AND(Boards.LIGHT_SQUARES).equals(e) || e.copy().AND(Boards.DARK_SQUARES).equals(e) ? !0 : !1
}
;
BitPos.prototype.status = function() {
    return this.availableMoves().length ? this.isDraw() ? Constants.Status.DRAW : Constants.Status.NORMAL : this.inCheck() ? Constants.Status.CHECKMATE : Constants.Status.DRAW
}
;
BitPos.prototype.availableMoves = function(e, b) {
    b = this.getMoves(!!b);
    return e ? b : b.filter(this.isLegalMove, this)
}
;
BitPos.prototype.isLegalMove = function(e) {
    this.update(e);
    var b = this.inCheck();
    this.revert(e);
    return !b
}
;
BitPos.prototype.getMoves = function(e) {
    var b = []
      , d = this.turn
      , c = this.colorBB(d)
      , f = this.colorBB(otherColor(d))
      , g = this.getOccupied()
      , h = this
      , k = function(F, P, X) {
        for (; !F.empty(); ) {
            var W = F.popLSB();
            b.push(new BitMove(W - P,W,X,Pieces.PAWN,h.getPieceFromPL(W)))
        }
    }
      , l = function(F, P, X) {
        k(F.copy(), P, X ? Constants.MoveTypes.QUEEN_PROMOTION_CAPTURE : Constants.MoveTypes.QUEEN_PROMOTION);
        k(F.copy(), P, X ? Constants.MoveTypes.ROOK_PROMOTION_CAPTURE : Constants.MoveTypes.ROOK_PROMOTION);
        k(F.copy(), P, X ? Constants.MoveTypes.BISHOP_PROMOTION_CAPTURE : Constants.MoveTypes.BISHOP_PROMOTION);
        k(F.copy(), P, X ? Constants.MoveTypes.KNIGHT_PROMOTION_CAPTURE : Constants.MoveTypes.KNIGHT_PROMOTION)
    }
      , m = function(F, P, X) {
        for (; !P.empty(); ) {
            var W = P.popLSB();
            c.isZero(W) && b.push(new BitMove(F,W,f.isSet(W) ? Constants.MoveTypes.CAPTURE : Constants.MoveTypes.QUIET,X,h.getPieceFromPL(W)))
        }
    }
      , n = 1 - 2 * d
      , p = Constants.NUM_FILES * n
      , q = this.getPiecesOfSide(Pieces.PAWN, d)
      , t = Boards.RANKS[d ? 0 : Constants.NUM_RANKS - 1];
    if (!e) {
        var v = q.copy().AND(Boards.RANKS[d ? 6 : 1]).SHIFT(2 * p).AND_NOT(g).AND_NOT(g.copy().SHIFT(p));
        k(v, 2 * p, Constants.MoveTypes.DOUBLE_PAWN_PUSH);
        v = q.copy().SHIFT(p).AND_NOT(g);
        k(v.copy().AND_NOT(t), p, Constants.MoveTypes.QUIET);
        l(v.copy().AND(t), p, !1)
    }
    var z = Boards.FILES[d ? Constants.NUM_FILES - 1 : 0];
    v = p - n;
    var E = q.copy().AND_NOT(z).SHIFT(v).AND(f);
    k(E.copy().AND_NOT(t), v, Constants.MoveTypes.CAPTURE);
    l(E.copy().AND(t), v, !0);
    E = Boards.FILES[d ? 0 : Constants.NUM_FILES - 1];
    p += n;
    var C = q.copy().AND_NOT(E).SHIFT(p).AND(f);
    k(C.copy().AND_NOT(t), p, Constants.MoveTypes.CAPTURE);
    l(C.copy().AND(t), p, !0);
    0 <= this.enPas && (l = squareBB(this.enPas + n).AND(q).AND_NOT(z).SHIFT(v),
    k(l, v, Constants.MoveTypes.EN_PASSANT_CAPTURE),
    n = squareBB(this.enPas - n).AND(q).AND_NOT(E).SHIFT(p),
    k(n, p, Constants.MoveTypes.EN_PASSANT_CAPTURE));
    n = e ? f : Boards.ONE;
    for (q = this.getKnights(d).copy(); !q.empty(); )
        l = q.popLSB(),
        m(l, Boards.KNIGHT_MOVEMENTS[l].copy().AND(n), Pieces.KNIGHT);
    for (q = this.getPiecesOfSide(Pieces.QUEEN, d).copy(); !q.empty(); )
        l = q.popLSB(),
        m(l, this.bishopAttack(squareBB(l), g).OR(this.rookAttack(squareBB(l), g)).AND(n), Pieces.QUEEN);
    for (q = this.getPiecesOfSide(Pieces.BISHOP, d).copy(); !q.empty(); )
        l = q.popLSB(),
        m(l, this.bishopAttack(squareBB(l), g).AND(n), Pieces.BISHOP);
    for (q = this.getPiecesOfSide(Pieces.ROOK, d).copy(); !q.empty(); )
        l = q.popLSB(),
        m(l, this.rookAttack(squareBB(l), g).AND(n), Pieces.ROOK);
    g = this.kingPos(d);
    m(g, Boards.KING_MOVEMENTS[g].copy().AND(n), Pieces.KING);
    e || (this.canCastle(d, !0) && b.push(new BitMove(g,g + 2,Constants.MoveTypes.KING_CASTLE,Pieces.KING,null)),
    this.canCastle(d, !1) && b.push(new BitMove(g,g - 2,Constants.MoveTypes.QUEEN_CASTLE,Pieces.KING,null)));
    return b
}
;
BitPos.prototype.capture = function(e, b, d) {
    this.pieceBB(e).clearBit(d);
    this.colorBB(b).clearBit(d);
    this.pieceList[d] = null
}
;
BitPos.prototype.uncapture = function(e, b, d) {
    this.pieceBB(e).setBit(d);
    this.colorBB(b).setBit(d);
    this.pieceList[d] = e
}
;
BitPos.prototype.move = function(e, b, d, c) {
    var f = squareBB(d).OR(squareBB(c));
    this.pieceBB(e).XOR(f);
    this.colorBB(b).XOR(f);
    this.pieceList[d] = null;
    this.pieceList[c] = e
}
;
BitPos.prototype.casRook = function(e, b) {
    var d = casRkSq(e, b);
    this.move(Pieces.ROOK, e, d, d + (b ? -2 : 3))
}
;
BitPos.prototype.unCastleRook = function(e, b) {
    var d = casRkSq(e, b);
    this.move(Pieces.ROOK, e, d + (b ? -2 : 3), d)
}
;
BitPos.prototype.promote = function(e, b, d, c) {
    this.pieceBB(e).clearBit(c);
    this.pieceBB(b).setBit(c);
    this.pieceList[c] = b
}
;
BitPos.prototype.update = function(e) {
    e.isCapt() && this.capture(e.captPiece(), otherColor(this.turn), e.captSq());
    e.isCas() && this.casRook(this.turn, e.type() === Constants.MoveTypes.KING_CASTLE);
    this.move(e.piece(), this.turn, e.from(), e.to());
    e.isPromo() && this.promote(Pieces.PAWN, e.promoPiece(), this.turn, e.to())
}
;
BitPos.prototype.revert = function(e) {
    e.isPromo() && this.promote(e.promoPiece(), Pieces.PAWN, this.turn, e.to());
    this.move(e.piece(), this.turn, e.to(), e.from());
    e.isCas() && this.unCastleRook(this.turn, e.type() === Constants.MoveTypes.KING_CASTLE);
    e.isCapt() && this.uncapture(e.captPiece(), otherColor(this.turn), e.captSq())
}
;
BitPos.prototype.makeMove = function(e) {
    this.update(e);
    if (this.inCheck())
        return this.revert(e),
        !1;
    this.moves.push(e);
    this.hist.push(this.enPas);
    this.hist.push(this.cas);
    this.hist.push(this.halfMoves);
    e.type() === Constants.MoveTypes.DOUBLE_PAWN_PUSH ? this.enPas = e.to() : this.enPas = -1;
    var b = this.turn;
    e.piece() === Pieces.KING ? (this.clearCasRight(b, !0),
    this.clearCasRight(b, !1)) : e.piece() === Pieces.ROOK && (e.from() === casRkSq(b, !0) ? this.clearCasRight(b, !0) : e.from() === casRkSq(b, !1) && this.clearCasRight(b, !1));
    b = otherColor(b);
    e.captPiece() === Pieces.ROOK && (e.captSq() === casRkSq(b, !0) ? this.clearCasRight(b, !0) : e.captSq() === casRkSq(b, !1) && this.clearCasRight(b, !1));
    e.isCapt() || e.piece() === Pieces.PAWN ? this.halfMoves = 0 : this.halfMoves++;
    this.turn = b;
    return !0
}
;
BitPos.prototype.unmakeMove = function() {
    if (0 < !this.moves.length)
        return null;
    var e = this.moves.pop();
    this.turn = otherColor(this.turn);
    this.revert(e);
    this.halfMoves = this.hist.pop();
    this.cas = this.hist.pop();
    this.enPas = this.hist.pop();
    return e
}
;
BitPos.prototype.getPieceFromPL = function(e) {
    return this.pieceList[e]
}
;
BitPos.prototype.getPieceFromBB = function(e) {
    for (var b = Pieces.PAWN; b <= Pieces.KING; b++)
        if (this.pieceBB(b).isSet(e))
            return b;
    return null
}
;
BitPos.toBitSquare = function(e) {
    return (e & 7) << 3 | e >> 3
}
;
BitPos.toCBSquare = function(e) {
    return (e & 7) << 3 | e >> 3
}
;
BitPos.toBitPiece = function(e) {
    return [-1, 5, 4, 1, 2, 3, 0][CB.Piece.V15k(e)]
}
;
BitPos.toCBPiece = function(e) {
    return [CB.Piece.PAWN, CB.Piece.KNIGHT, CB.Piece.BISHOP, CB.Piece.ROOK, CB.Piece.QUEEN, CB.Piece.KING][e]
}
;
BitPos.toCBSet = function(e) {
    var b = [];
    e = e.copy();
    for (var d = e.popcnt(); b.length < d; ) {
        var c = e.LSB();
        if (0 <= c)
            b.push(BitPos.toCBSquare(c)),
            e.clearLSB();
        else
            break
    }
    return b
}
;
BitPos.test = function() {
    var e = new CB.Position("r3r1k1/pp3pbp/1qp3p1/2B5/2BP2b1/Q1n2N2/P4PPP/3R1K1R b - - 0 17")
      , b = new BitPos;
    b.fromChessPos(e);
    e = b.toChessPos();
    e.dump();
    b.availableMoves().forEach(function(d) {});
    e.V3hu()
}
;
"use strict";
var BeautyScore = function() {
    this.reset()
};
BeautyScore.prototype.reset = function() {
    this.active = !0;
    this.movesWithoutHint = this.totalHangVal = this.hangPieceScore = this.hangPieceCount = this.totalSacVal = this.sacsScore = this.sacsCount = this.mateScore = 0;
    this.smotheredMate = this.mateWithAPawn = this.fullBoardMate = this.hintedThis = !1;
    this.totalSacValPerMove = [];
    this.totalHangValPerMove = [];
    this.sacsScorePerMove = [];
    this.hangPieceScorePerMove = [];
    this.saccedQueens = [];
    this.saccedRooks = [];
    this.saccedBishops = [];
    this.saccedKnights = [];
    this.saccedPawns = [];
    this.maxHang = null;
    this.maxHangDiff = 0;
    this.underPromotionScorePerMove = [];
    this.underPromotionScore = 0;
    this.doubleRooksSeventhRank = !1
}
;
BeautyScore.prototype.getScore = function() {
    return this.getMateScore() + this.sacsScore + this.hangPieceScore + this.underPromotionScore + (this.doubleRooksSeventhRank ? 5 : 0)
}
;
BeautyScore.prototype.toString = function() {
    return String.f("Beauty Score - Mate: {0}, SacsScore={1}/{2}, HangPieceScore={3}/{4}", this.getMateScore(), this.sacsScore, this.sacsCount, this.hangPieceScore, this.hangPieceCount)
}
;
BeautyScore.prototype.updateBeautyScores = function(e) {
    this.totalSacValPerMove = this.totalSacValPerMove.splice(0, e);
    this.sacsScorePerMove = this.sacsScorePerMove.splice(0, e);
    this.sacsCount = this.getSacsCount();
    this.totalSacVal = this.getTotalSacVal();
    this.sacsScore = this.getSacsScore();
    this.totalHangValPerMove = this.totalHangValPerMove.splice(0, e);
    this.hangPieceScorePerMove = this.hangPieceScorePerMove.splice(0, e);
    this.hangPieceCount = this.getHangPiecesCount();
    this.totalHangVal = this.getTotalHangVal();
    this.hangPieceScore = this.getHangPiecesScore();
    this.underPromotionScorePerMove = this.underPromotionScorePerMove.splice(0, e);
    this.underPromotionScore = this.getUnderPromotionScore()
}
;
BeautyScore.prototype.getSacsScore = function() {
    return this.sacsScorePerMove.reduce(function(e, b) {
        return e + b
    }, 0)
}
;
BeautyScore.prototype.getSacsCount = function() {
    return this.totalSacValPerMove.filter(function(e) {
        return 0 != e
    }).length
}
;
BeautyScore.prototype.getTotalSacVal = function() {
    return this.totalSacValPerMove.reduce(function(e, b) {
        return e + b
    }, 0)
}
;
BeautyScore.prototype.getSaccedPieceCount = function(e) {
    return e.reduce(function(b, d) {
        return b + d
    }, 0)
}
;
BeautyScore.prototype.getHangPiecesScore = function() {
    return this.hangPieceScorePerMove.reduce(function(e, b) {
        return e + b
    }, 0)
}
;
BeautyScore.prototype.getHangPiecesCount = function() {
    return this.totalHangValPerMove.filter(function(e) {
        return 0 != e
    }).length
}
;
BeautyScore.prototype.getTotalHangVal = function() {
    return this.totalHangValPerMove.reduce(function(e, b) {
        return e + b
    }, 0)
}
;
BeautyScore.prototype.getUnderPromotionScore = function() {
    return this.underPromotionScorePerMove.reduce(function(e, b) {
        return e + b
    }, 0)
}
;
BeautyScore.prototype.getUnderPromotionCount = function() {
    return this.underPromotionScorePerMove.filter(function(e) {
        return 0 != e
    }).length
}
;
BeautyScore.prototype.initScoreArray = function(e, b) {
    e.length = b;
    for (var d = e[b] = 0; d < b; d++)
        void 0 == e[d] && (e[d] = 0);
    return e
}
;
BeautyScore.prototype.onEnteredMove = function(e, b, d) {
    if (!this.isQueensGambit(e, b)) {
        var c = e.getCurPos();
        this.hintedThis ? this.hintedMoves++ : this.movesWithoutHint++;
        this.hintedThis = !1;
        if (d) {
            d = this.calcSacScoreOnMove(e, b, c);
            var f = new CB.Game;
            f.exec(e);
            var g = Att.pieceVal(f.getCurPos().board[b.to]);
            f.makeMove(b);
            var h = new Att
              , k = h.getHangingPieces(f.getCurPos(), c.getSideToMove(), 0);
            c = h.getHangingPieces(f.getCurPos(), CB.V15e.other(c.getSideToMove()), 0);
            h = 0;
            k = this.getMaxHangVal(f, k, b.to);
            k > g && (f = this.getMaxHangVal(f, c, -1),
            e = this.getNonRecaptureHang(e, b),
            this.maxHangDiff = Math.max(0, h = k - f + e),
            0 >= this.maxHangDiff && this.resetHangingPiecesVars());
            return {
                score: d.score,
                att: d.attCalc,
                hang: h,
                hasBeauty: function() {
                    return 0 > this.att || 0 < this.hang
                }
            }
        }
        return 0
    }
}
;
BeautyScore.prototype.calcSacScoreOnMove = function(e, b, d) {
    e = e.getMoveIndex();
    var c = (new Att).calc(d, b.from, b.to)
      , f = 0;
    this.totalSacValPerMove = this.initScoreArray(this.totalSacValPerMove, e);
    this.saccedQueens = this.initScoreArray(this.saccedQueens, e);
    this.saccedRooks = this.initScoreArray(this.saccedRooks, e);
    this.saccedBishops = this.initScoreArray(this.saccedBishops, e);
    this.saccedKnights = this.initScoreArray(this.saccedKnights, e);
    this.saccedPawns = this.initScoreArray(this.saccedPawns, e);
    if (0 > c) {
        this.totalSacValPerMove[e] = Math.abs(c);
        this.totalSacVal = this.getTotalSacVal();
        this.sacsCount = this.getSacsCount();
        switch (d.board[b.from]) {
        case CB.Piece.Vcz:
        case CB.Piece.Vd0:
            this.saccedQueens[e] = 1;
            break;
        case CB.Piece.Vd1:
        case CB.Piece.Vd2:
            this.saccedRooks[e] = 1;
            break;
        case CB.Piece.Vd3:
        case CB.Piece.Vd4:
            this.saccedBishops[e] = 1;
            break;
        case CB.Piece.W_KNIGHT:
        case CB.Piece.B_KNIGHT:
            this.saccedKnights[e] = 1;
            break;
        default:
            this.saccedPawns[e] = 1
        }
        f = 1;
        -200 > c && (f += 3);
        -400 >= c && (f += 5);
        -650 > c && (f += 8)
    }
    this.sacsScorePerMove = this.initScoreArray(this.sacsScorePerMove, e);
    this.sacsScorePerMove[e] = f;
    this.sacsScore = this.getSacsScore();
    return {
        score: f,
        attCalc: c
    }
}
;
BeautyScore.prototype.isQueensGambit = function(e, b) {
    return 2 == e.getMoveCount() && 19 == b.to
}
;
BeautyScore.prototype.getMaxHangVal = function(e, b, d) {
    for (var c = 0, f = 0; f < b.length; f++)
        if (b[f].attackVal > c && b[f].sq != d) {
            var g = this.getCapturedOnSquareVal(e, b[f].sq);
            b[f].attackVal - g > c && (c = b[f].attackVal - g,
            this.maxHang = b[f])
        }
    return c
}
;
BeautyScore.prototype.getCapturedOnSquareVal = function(e, b) {
    for (e.gotoEnd(); 0 < e.getMoveNo(); )
        if (e.gotoPrev(),
        e.getNextMove().to == b)
            return Att.pieceVal(e.getCurPos().board[b]);
    return 0
}
;
BeautyScore.prototype.getNonRecaptureHang = function(e, b) {
    var d = e.getLastMove();
    return d.vct && b.to != d.to && (d = this.getCapturedOnSquareVal(e, d.to),
    e = Att.pieceVal(e.getCurPos().board[b.to]),
    d > e) ? d - e : 0
}
;
BeautyScore.prototype.resetHangingPiecesVars = function() {
    this.maxHang = null;
    this.maxHangDiff = 0
}
;
BeautyScore.prototype.addHangingPieceScore = function(e, b) {
    var d = e.getMoveIndex() - 2
      , c = 1;
    200 < this.maxHangDiff && (c += 3);
    400 <= this.maxHangDiff && (c += 5);
    650 < this.maxHangDiff && (c += 8);
    e.gotoPrev();
    e.getNextMove().to == b.sq ? (this.totalSacValPerMove = this.initScoreArray(this.totalSacValPerMove, d),
    this.totalSacValPerMove[d] = this.maxHangDiff,
    this.sacsCount = this.getSacsCount(),
    this.totalSacVal = this.getTotalSacVal(),
    this.sacsScorePerMove = this.initScoreArray(this.sacsScorePerMove, d),
    this.sacsScorePerMove[d] = c,
    this.sacsScore = this.getSacsScore()) : (this.totalHangValPerMove = this.initScoreArray(this.totalHangValPerMove, d),
    this.totalHangValPerMove[d] = this.maxHangDiff,
    this.hangPieceCount = this.getHangPiecesCount(),
    this.totalHangVal = this.getTotalHangVal(),
    this.hangPieceScorePerMove = this.initScoreArray(this.hangPieceScorePerMove, d),
    this.hangPieceScorePerMove[d] = c,
    this.hangPieceScore = this.getHangPiecesScore())
}
;
BeautyScore.prototype.addMateScore = function(e) {
    this.mateScore++;
    this.fullBoard(e) && (this.mateScore += 3,
    this.fullBoardMate = !0);
    this.isMateWithAPawn(e) && (this.mateScore += 5,
    this.mateWithAPawn = !0);
    this.isSmotheredMate(e) && (this.mateScore += 6,
    this.smotheredMate = !0);
    this.queensOnBoard(e) && this.mateScore++;
    this.sideToMoveIsMaterialUpLT(e, 200) && this.mateScore++;
    this.sideToMoveIsMaterialUpLT(e, -100) && this.mateScore++
}
;
BeautyScore.prototype.getMateScore = function() {
    return this.mateScore
}
;
BeautyScore.prototype.notifyHinted = function() {
    this.hintedMoves++;
    this.hintedThis = !1
}
;
BeautyScore.prototype.notifyNotHinted = function() {
    this.hintedMoves++;
    this.hintedThis = !1
}
;
BeautyScore.prototype.queensOnBoard = function(e) {
    return 0 < e.countPieces(CB.Piece.Vcz) && 0 < e.countPieces(CB.Piece.Vd0)
}
;
BeautyScore.prototype.fullBoard = function(e) {
    return 1 == e.countPieces(CB.Piece.Vcz) && 1 == e.countPieces(CB.Piece.Vd0) && 2 == e.countPieces(CB.Piece.Vd1) && 2 == e.countPieces(CB.Piece.Vd2) && 2 == e.countPieces(CB.Piece.Vd3) && 2 == e.countPieces(CB.Piece.Vd4) && 2 == e.countPieces(CB.Piece.W_KNIGHT) && 2 == e.countPieces(CB.Piece.B_KNIGHT) && 8 == e.countPieces(CB.Piece.Vd5) && 8 == e.countPieces(CB.Piece.Vd6)
}
;
BeautyScore.prototype.isMateWithAPawn = function(e) {
    var b = CB.Piece.Vcy
      , d = CB.Piece.Vd5
      , c = -9
      , f = 7;
    e.getSideToMove() == CB.V15e.WHITE && (b = CB.Piece.Vcx,
    d = CB.Piece.Vd6,
    c = -7,
    f = 9);
    for (var g = 0; 64 > g && e.board[g] != b; g++)
        ;
    return e.board[g + c] == d || e.board[g + f] == d ? !0 : !1
}
;
BeautyScore.prototype.isSmotheredMate = function(e) {
    var b = CB.Piece.Vcy
      , d = CB.Piece.W_KNIGHT
      , c = [17, -17, 15, -15, 10, -10, 6, -6];
    e.getSideToMove() == CB.V15e.WHITE && (b = CB.Piece.Vcx,
    d = CB.Piece.B_KNIGHT);
    for (var f = 0; 64 > f && e.board[f] != b; f++)
        ;
    for (b = 0; b < c.length; b++)
        if (e.board[f + c[b]] == d) {
            d = [8, -8, 9, -9, 7, -7, 1, -1];
            c = f % 8 + 1;
            b = parseInt(f / 8) + 1;
            for (var g = 0; g < d.length; g++)
                if (!(63 < f + d[g])) {
                    var h = (f + d[g]) % 8 + 1
                      , k = parseInt((f + d[g]) / 8) + 1;
                    if (!(1 < Math.abs(c - h) || 1 < Math.abs(b - k)) && e.board[f + d[g]] == CB.Piece.NONE)
                        return !1
                }
            return !0
        }
    return !1
}
;
BeautyScore.prototype.checkUnderPromotionScore = function(e, b) {
    this.underPromotionScorePerMove = this.initScoreArray(this.underPromotionScorePerMove, e);
    switch (b.prom) {
    case CB.Piece.Vd1:
    case CB.Piece.Vd2:
        this.underPromotionScorePerMove[e] = 5;
        break;
    case CB.Piece.Vd3:
    case CB.Piece.Vd4:
        this.underPromotionScorePerMove[e] = 10;
        break;
    case CB.Piece.W_KNIGHT:
    case CB.Piece.B_KNIGHT:
        this.underPromotionScorePerMove[e] = 12
    }
}
;
BeautyScore.prototype.checkDoubleRooksSeventhRank = function(e, b) {
    var d = b.to % 8 + 1;
    e = e.getCurPos();
    var c = 0;
    if (e.board[b.to] == CB.Piece.Vd1 && 7 == d)
        for (b = CB.Square.A7; b <= CB.Square.H7 && (e.board[b] != CB.Piece.Vd1 || (c++,
        2 != c)); b += 8)
            ;
    else if (e.board[b.to] == CB.Piece.Vd2 && 2 == d)
        for (c = 0,
        b = CB.Square.A2; b <= CB.Square.H2 && (e.board[b] != CB.Piece.Vd2 || (c++,
        2 != c)); b += 8)
            ;
    this.doubleRooksSeventhRank = 2 == c
}
;
BeautyScore.prototype.sideToMoveIsMaterialUpLT = function(e, b) {
    var d = CB.V1c4.sumMaterial(e, CB.V15e.WHITE)
      , c = CB.V1c4.sumMaterial(e, CB.V15e.BLACK);
    return e.getSideToMove() == CB.V15e.WHITE ? d - c < b : c - d < b
}
;
var SwapStack = function(e) {
    this.swapVal = Array(32);
    this.next = 1;
    this.sign = -1;
    this.swapVal[0] = e
};
SwapStack.prototype.add = function(e) {
    this.swapVal[this.next] = this.swapVal[this.next - 1] + this.sign * e;
    this.next++;
    this.sign = -this.sign
}
;
SwapStack.prototype.pop = function() {
    this.next--
}
;
SwapStack.prototype.miniMax = function() {
    var e = 0;
    if (0 < this.next) {
        this.next--;
        for (this.sign = this.next & 1 ? -1 : 1; 0 < this.next; )
            0 > this.sign ? this.swapVal[this.next] < this.swapVal[this.next - 1] && (this.swapVal[this.next - 1] = this.swapVal[this.next]) : this.swapVal[this.next] > this.swapVal[this.next - 1] && (this.swapVal[this.next - 1] = this.swapVal[this.next]),
            this.next--,
            this.sign = -this.sign;
        e = this.swapVal[0]
    }
    return e
}
;
var Att = function() {
    Att.MU1 = 1;
    Att.MU2 = 2;
    Att.ML1 = 4;
    Att.ML2 = 8;
    Att.MD1 = 16;
    Att.MD2 = 32;
    Att.MR1 = 64;
    Att.MR2 = -128;
    Att.MU2R1 = Att.MU1 | Att.MU2 | Att.MR1;
    Att.MU1R2 = Att.MU1 | Att.MR1 | Att.MR2;
    Att.MD1R2 = Att.MD1 | Att.MR1 | Att.MR2;
    Att.MD2R1 = Att.MD1 | Att.MD2 | Att.MR1;
    Att.MD2L1 = Att.MD1 | Att.MD2 | Att.ML1;
    Att.MD1L2 = Att.MD1 | Att.ML1 | Att.ML2;
    Att.MU1L2 = Att.MU1 | Att.ML1 | Att.ML2;
    Att.MU2L1 = Att.MU1 | Att.MU2 | Att.ML1;
    Att.SEARCH_A = 0;
    Att.SEARCH_F = 56;
    Att.SEARCH_R = 7;
    Att.cDir = [Att.ML1 | Att.MD1, Att.ML1 | Att.MD2, Att.ML1, Att.ML1, Att.ML1, Att.ML1, Att.ML1 | Att.MU2, Att.ML1 | Att.MU1, Att.ML2 | Att.MD1, Att.ML2 | Att.MD2, Att.ML2, Att.ML2, Att.ML2, Att.ML2, Att.ML2 | Att.MU2, Att.ML2 | Att.MU1, Att.MD1, Att.MD2, 0, 0, 0, 0, Att.MU2, Att.MU1, Att.MD1, Att.MD2, 0, 0, 0, 0, Att.MU2, Att.MU1, Att.MD1, Att.MD2, 0, 0, 0, 0, Att.MU2, Att.MU1, Att.MD1, Att.MD2, 0, 0, 0, 0, Att.MU2, Att.MU1, Att.MR2 | Att.MD1, Att.MR2 | Att.MD2, Att.MR2, Att.MR2, Att.MR2, Att.MR2, Att.MR2 | Att.MU2, Att.MR2 | Att.MU1, Att.MR1 | Att.MD1, Att.MR1 | Att.MD2, Att.MR1, Att.MR1, Att.MR1, Att.MR1, Att.MR1 | Att.MU2, Att.MR1 | Att.MU1];
    Att.cCov = [Att.MD1L2, -17, Att.MU1L2, -15, Att.MD1R2, 15, Att.MU1R2, 17, Att.MD2L1, -10, Att.MU2L1, -6, Att.MD2R1, 6, Att.MU2R1, 10, Att.MD1 | Att.ML1, -9, Att.MD1 | Att.MR1, 7, Att.MU1 | Att.MR1, 9, Att.MU1 | Att.ML1, -7, Att.ML1, -8, Att.MD1, -1, Att.MR1, 8, Att.MU1, 1, Att.MD1 | Att.ML1, -9, Att.ML1, -8, Att.MU1 | Att.ML1, -7, Att.MD1, -1, Att.MU1, 1, Att.MD1 | Att.MR1, 7, Att.MR1, 8, Att.MU1 | Att.MR1, 9, Att.MU1 | Att.ML1, -7, Att.MU1 | Att.MR1, 9, Att.MD1 | Att.ML1, -9, Att.MD1 | Att.MR1, 7];
    Att.cAttChess = [Att.MD1L2, -17, Att.MU1L2, -15, Att.MD1R2, 15, Att.MU1R2, 17, Att.MD2L1, -10, Att.MU2L1, -6, Att.MD2R1, 6, Att.MU2R1, 10, Att.MD1 | Att.ML1, -9, Att.MD1 | Att.MR1, 7, Att.MU1 | Att.MR1, 9, Att.MU1 | Att.ML1, -7, Att.ML1, -8, Att.MD1, -1, Att.MR1, 8, Att.MU1, 1, Att.MD1 | Att.ML1, -9, Att.ML1, -8, Att.MU1 | Att.ML1, -7, Att.MD1, -1, Att.MU1, 1, Att.MD1 | Att.MR1, 7, Att.MR1, 8, Att.MU1 | Att.MR1, 9, Att.MD1 | Att.ML1, -9, Att.MD1 | Att.MR1, 7, Att.MU1 | Att.ML1, -7, Att.MU1 | Att.MR1, 9];
    Att.S_KING = 32;
    Att.S_QUEEN = 16;
    Att.S_KNIGHT = 0;
    Att.S_BISHOP = 16;
    Att.S_ROOK = 24;
    Att.S_PAWN_W = 48;
    Att.S_PAWN_B = 52;
    Att.S_QUEEN_EX = 56
};
Att.prototype.getAttacksOnPieces = function(e, b) {
    e = ObjUtil.clone(e);
    var d = !0;
    b !== CB.V15e.other(e.getSideToMove()) && (e.canMakeNullMove() ? e.makeNullMove() : d = !1);
    var c = [];
    if (d) {
        d = e.V3hu();
        for (var f = 0; f < d.length; f++) {
            var g = d[f].to
              , h = e.board[g];
            if (h && CB.Piece.side(h) == b) {
                var k = this.calc(e, d[f].from, d[f].to);
                c[g] ? (k > c[g].maxAtt && (c[g].maxAtt = k,
                c[g].maxAttN = c[g].att.length),
                c[g].att.push(k),
                c[g].from.push(d[f].from)) : c[g] = {
                    piece: h,
                    att: [k],
                    maxAttN: 0,
                    maxAtt: k,
                    from: [d[f].from],
                    getMaxAttFromSq: function() {
                        return this.from[this.maxAttN]
                    }
                }
            }
        }
    }
    return c
}
;
Att.prototype.getHangingPieces = function(e, b, d) {
    e = this.getAttacksOnPieces(e, b);
    b = [];
    for (var c = 0; c < e.length; c++)
        e[c] && e[c].maxAtt > d && b.push({
            sq: c,
            piece: e[c].piece,
            attackVal: e[c].maxAtt,
            attackSq: e[c].getMaxAttFromSq(),
            toString: function() {
                return String.f("sq={0}, p={1}, fr={2}", CB.Square.toString(this.sq), this.piece, CB.Square.toString(this.attackSq))
            }
        });
    return b
}
;
Att.prototype.getCoveredSquares = function(e, b) {
    var d = ObjUtil.clone(e)
      , c = !0;
    b != d.getSideToMove() && (d.canMakeNullMove() ? d.makeNullMove() : c = !1);
    var f = new Set;
    if (c)
        for (c = 0; 64 > c; c++) {
            var g = e.board[c]
              , h = [];
            g && CB.Piece.side(g) == b && (h = this.getCoveredSqs(g, d, c),
            h.forEach(function(k) {
                f.add(k)
            }))
        }
    return f
}
;
Att.prototype.getCoveredSqs = function(e, b, d) {
    var c = [];
    switch (CB.Piece.V15k(e)) {
    case CB.Piece.KING:
        c = this.getKingCoveredSqs(d);
        break;
    case CB.Piece.QUEEN:
        c = this.getQueenCoveredSqs(b, d);
        break;
    case CB.Piece.ROOK:
        c = this.getRookCoveredSqs(b, d);
        break;
    case CB.Piece.BISHOP:
        c = this.getBishopCoveredSqs(b, d);
        break;
    case CB.Piece.KNIGHT:
        c = this.getKnightCoveredSqs(d);
        break;
    case CB.Piece.PAWN:
        c = this.getPawnCoveredSqs(d, b.board[d] & CB.Piece.V15h)
    }
    return c
}
;
Att.prototype.getPawnCoveredSqs = function(e, b) {
    var d = new Set;
    b = b ? Att.S_PAWN_B : Att.S_PAWN_W;
    var c = Att.cDir[e];
    c & Att.cCov[b + 0] || d.add(e + Att.cCov[b + 1]);
    b += 2;
    c & Att.cCov[b + 0] || d.add(e + Att.cCov[b + 1]);
    return d
}
;
Att.prototype.getKnightCoveredSqs = function(e) {
    for (var b = new Set, d = Att.S_KNIGHT, c = Att.cDir[e], f = 7; 0 <= f; f--,
    d += 2)
        c & Att.cCov[d + 0] || b.add(e + Att.cCov[d + 1]);
    return b
}
;
Att.prototype.getKingCoveredSqs = function(e) {
    for (var b = new Set, d = Att.S_KING, c = Att.cDir[e], f = 7; 0 <= f; f--,
    d += 2)
        c & Att.cCov[d + 0] || b.add(e + Att.cCov[d + 1]);
    return b
}
;
Att.prototype.getBishopCoveredSqs = function(e, b) {
    for (var d = new Set, c = Att.S_BISHOP, f = 4, g; f--; ) {
        var h = Att.cCov[c++]
          , k = Att.cCov[c++];
        for (g = b; !(Att.cDir[g] & h || (g += k,
        d.add(g),
        e.board[g])); )
            ;
    }
    return d
}
;
Att.prototype.getRookCoveredSqs = function(e, b) {
    for (var d = new Set, c = Att.S_ROOK, f = 4, g; f--; ) {
        var h = Att.cCov[c++]
          , k = Att.cCov[c++];
        for (g = b; !(Att.cDir[g] & h || (g += k,
        d.add(g),
        e.board[g])); )
            ;
    }
    return d
}
;
Att.prototype.getQueenCoveredSqs = function(e, b) {
    var d = this.getRookCoveredSqs(e, b);
    this.getBishopCoveredSqs(e, b).forEach(function(c) {
        d.add(c)
    });
    return d
}
;
Att.prototype.coversFromTo = function(e, b, d, c) {
    e = ObjUtil.clone(e);
    var f = !0;
    b != e.getSideToMove() && (e.canMakeNullMove() ? e.makeNullMove() : f = !1);
    if (f) {
        e = e.board;
        f = b ? CB.Piece.BLACK : CB.Piece.WHITE;
        var g = Att.cDir[c], h, k, l;
        b = b ? Att.S_PAWN_B : Att.S_PAWN_W;
        if (!(g & Att.cAttChess[b + 0]) && e[c + Att.cAttChess[b + 1]] == f + CB.Piece.PAWN && d == c + Att.cAttChess[b + 1])
            return !0;
        b += 2;
        if (!(g & Att.cAttChess[b + 0]) && e[c + Att.cAttChess[b + 1]] == f + CB.Piece.PAWN && d == c + Att.cAttChess[b + 1])
            return !0;
        b = Att.S_KNIGHT;
        for (h = 8; h--; b += 2)
            if (!(g & Att.cAttChess[b + 0]) && e[c + Att.cAttChess[b + 1]] === f + CB.Piece.KNIGHT && d == c + Att.cAttChess[b + 1])
                return !0;
        b = Att.S_BISHOP;
        for (h = 4; h--; ) {
            var m = Att.cAttChess[b++];
            var n = Att.cAttChess[b++];
            for (k = c; !(Att.cDir[k] & m); )
                if (k += n,
                l = e[k]) {
                    if (l == CB.Piece.BISHOP + f && k == d)
                        return !0;
                    break
                }
        }
        b = Att.S_ROOK;
        for (h = 4; h--; )
            for (m = Att.cAttChess[b++],
            n = Att.cAttChess[b++],
            k = c; !(Att.cDir[k] & m); )
                if (k += n,
                l = e[k]) {
                    if (l == CB.Piece.ROOK + f && k == d)
                        return !0;
                    break
                }
        b = Att.S_QUEEN;
        for (h = 8; h--; )
            for (m = Att.cAttChess[b++],
            n = Att.cAttChess[b++],
            k = c; !(Att.cDir[k] & m); )
                if (k += n,
                l = e[k]) {
                    if (l == CB.Piece.QUEEN + f && k == d)
                        return !0;
                    break
                }
        b = Att.S_KING;
        for (h = 8; h--; b += 2)
            if (!(g & Att.cAttChess[b]) && e[c + Att.cAttChess[b + 1]] == f + CB.Piece.KING && d == c + Att.cAttChess[b + 1])
                return !0
    }
    return !1
}
;
Att.prototype.V1c5 = function(e, b) {
    var d = ObjUtil.clone(e);
    e = d.board[b.from];
    if ((e & CB.Piece.V15j) == CB.Piece.PAWN) {
        d.makeMove(b);
        d.sd = CB.V15e.other(d.sd);
        var c = [];
        d.V18q(e, b.to, c);
        if (2 <= c.length) {
            var f = 0;
            c.forEach(function(g) {
                (g = d.board[g.to]) && (g & CB.Piece.V15j) != CB.Piece.PAWN && f++
            });
            return 2 === f
        }
    }
    return !1
}
;
Att.prototype.sumMaterial = function(e, b) {
    var d = 0;
    e.board.forEach(function(c) {
        c && CB.Piece.side(c) === b && (d += Att.pieceVal(c))
    }
    .bind(this));
    return d
}
;
Att.prototype.materialDiff = function(e) {
    return this.sumMaterial(e, CB.V15e.WHITE) - this.sumMaterial(e, CB.V15e.BLACK)
}
;
Att.prototype.calcAll = function(e, b) {
    e = ObjUtil.clone(e);
    for (var d = new SwapStack(0), c = b; 64 > c; ) {
        var f = e.generateSemiLegals();
        c = this.getAttackSq(e, f, b);
        64 > c && (d.add(this.calcGain(e, c, b)),
        c = this.getBestAttackSq(e, f, c, b),
        f = new CB.V17g(c,b),
        e.isProm(c, b) && (f.prom = CB.Piece.V15n(CB.Piece.QUEEN, e.getSideToMove())),
        e.makeMove(f))
    }
    return d.miniMax()
}
;
Att.prototype.calc = function(e, b, d) {
    if (!e.isLegalFromTo(b, d))
        return 0;
    var c = ObjUtil.clone(e);
    for (e = new SwapStack(this.calcGain(e, b, d)); 64 > b; ) {
        var f = new CB.V17g(b,d);
        c.isProm(b, d) && (f.prom = CB.Piece.V15n(CB.Piece.QUEEN, c.getSideToMove()));
        c.makeMove(f);
        f = c.V3hu();
        b = this.getAttackSq(c, f, d);
        64 > b && (e.add(this.calcGain(c, b, d)),
        b = this.getBestAttackSq(c, f, b, d))
    }
    return e.miniMax()
}
;
Att.prototype.calcPL = function(e, b, d) {
    for (var c = ObjUtil.clone(e), f = new SwapStack(this.calcGain(e, b, d)); 64 > b; ) {
        var g = new CB.V17g(b,d);
        c.isProm(b, d) && (g.prom = CB.Piece.V15n(CB.Piece.QUEEN, c.getSideToMove()));
        c.makeMove(g);
        b = this.getAttackSqPL(c, d, e.getBTM());
        if (64 > b) {
            if (CB.Piece.isKing(c.board[d])) {
                f.pop();
                break
            }
            f.add(this.calcGain(c, b, d));
            b = this.getBestAttackSqPL(c, b, d)
        }
    }
    return f.miniMax()
}
;
Att.pieceVal = function(e) {
    return [0, 15E3, 900, 325, 325, 500, 100][e & CB.Piece.V15j]
}
;
Att.prototype.calcGain = function(e, b, d) {
    var c = Att.pieceVal(e.board[d]);
    (e.board[b] & CB.Piece.V15j) == CB.Piece.PAWN && (e.isProm(b, d) ? c += Att.pieceVal(CB.Piece.QUEEN) - Att.pieceVal(CB.Piece.PAWN) : e.V18z(b, d) && (c += Att.pieceVal(CB.Piece.PAWN)));
    return c
}
;
Att.prototype.getAttackSq = function(e, b, d) {
    for (var c = -1, f = 2E4, g = 0; g < b.length; g++)
        b[g].to == d && Att.pieceVal(e.board[b[g].from]) < f && (c = g,
        f = Att.pieceVal(e.board[b[g].from]));
    return 0 <= c ? b[c].from : 64
}
;
Att.prototype.getAttackSqPL = function(e, b, d) {
    e = e.board;
    var c = d ? CB.Piece.BLACK : CB.Piece.WHITE, f = Att.cDir[b], g, h, k;
    if (e[b]) {
        d = d ? Att.S_PAWN_B : Att.S_PAWN_W;
        if (!(f & Att.cAttChess[d + 0]) && e[b + Att.cAttChess[d + 1]] == c + CB.Piece.PAWN)
            return b + Att.cAttChess[d + 1];
        d += 2;
        if (!(f & Att.cAttChess[d + 0]) && e[b + Att.cAttChess[d + 1]] == c + CB.Piece.PAWN)
            return b + Att.cAttChess[d + 1];
        d = Att.S_KNIGHT;
        for (g = 8; g--; d += 2)
            if (!(f & Att.cAttChess[d + 0]) && e[b + Att.cAttChess[d + 1]] === c + CB.Piece.KNIGHT)
                return b + Att.cAttChess[d + 1];
        d = Att.S_BISHOP;
        for (g = 4; g--; ) {
            var l = Att.cAttChess[d++];
            var m = Att.cAttChess[d++];
            for (h = b; !(Att.cDir[h] & l); )
                if (h += m,
                k = e[h]) {
                    if (k == CB.Piece.BISHOP + c)
                        return h;
                    break
                }
        }
        d = Att.S_ROOK;
        for (g = 4; g--; )
            for (l = Att.cAttChess[d++],
            m = Att.cAttChess[d++],
            h = b; !(Att.cDir[h] & l); )
                if (h += m,
                k = e[h]) {
                    if (k == CB.Piece.ROOK + c)
                        return h;
                    break
                }
        d = Att.S_QUEEN;
        for (g = 8; g--; )
            for (l = Att.cAttChess[d++],
            m = Att.cAttChess[d++],
            h = b; !(Att.cDir[h] & l); )
                if (h += m,
                k = e[h]) {
                    if (k == CB.Piece.QUEEN + c)
                        return h;
                    break
                }
        d = Att.S_KING;
        for (g = 8; g--; d += 2)
            if (!(f & Att.cAttChess[d]) && e[b + Att.cAttChess[d + 1]] == c + CB.Piece.KING)
                return b + Att.cAttChess[d + 1]
    }
}
;
Att.prototype.getBestAttackSq = function(e, b, d, c) {
    var f = 64
      , g = e.board[d] & CB.Piece.V15j;
    if (g == CB.Piece.QUEEN || g == CB.Piece.ROOK)
        for (var h = 0; h < b.length; h++) {
            var k = b[h];
            if (k.to == c && k.from != d && (e.board[k.from] & CB.Piece.V15j) == g) {
                f = k.from;
                break
            }
        }
    64 > f ? (b = e.board[d],
    e.board[d] = 0,
    g = this.countCheck(e.board, c, !e.getBTM()),
    e.board[d] = b,
    b = e.board[f],
    e.board[f] = 0,
    c = this.countCheck(e.board, c, !e.getBTM()),
    e.board[f] = b,
    g < c && (f = d)) : f = d;
    return f
}
;
Att.prototype.getBestAttackSqPL = function(e, b, d) {
    var c = 64
      , f = e.board[b] & CB.Piece.V15j;
    if (f == CB.Piece.QUEEN || f == CB.Piece.ROOK)
        f = e.board[b],
        e.board[b] = CB.Piece.V15j,
        c = this.getAttackSqPL(e, d, e.getBTM()),
        e.board[b] = f;
    if (64 > c) {
        f = e.board[b];
        e.board[b] = CB.Piece.V15j;
        var g = this.countCheck(e, d, !e.getBTM());
        e.board[b] = f;
        f = e.board[c];
        e.board[c] = CB.Piece.V15j;
        d = this.countCheck(e, d, !e.getBTM());
        e.board[c] = f;
        g <= d && (c = b)
    } else
        c = b;
    return c
}
;
Att.prototype.countCheck = function(e, b, d) {
    var c = Att.cDir[b], f = d ? CB.Piece.BLACK : CB.Piece.WHITE, g, h = 0, k, l, m = Att.S_KNIGHT;
    for (k = 8; k--; m += 2)
        c & Att.cAttChess[m + 0] || e[b + Att.cAttChess[m + 1]] === f + CB.Piece.KNIGHT && ++h;
    m = Att.S_BISHOP;
    for (k = 4; k--; ) {
        var n = Att.cAttChess[m++];
        var p = Att.cAttChess[m++];
        for (l = b; !(Att.cDir[l] & n); )
            if (l += p,
            (g = e[l]) && (g == CB.Piece.QUEEN + f || g === CB.Piece.BISHOP + f)) {
                ++h;
                break
            }
    }
    m = Att.S_ROOK;
    for (k = 4; k--; )
        for (n = Att.cAttChess[m++],
        p = Att.cAttChess[m++],
        l = b; !(Att.cDir[l] & n); )
            if (l += p,
            (g = e[l]) && (g == CB.Piece.QUEEN + f || g == CB.Piece.ROOK + f)) {
                ++h;
                break
            }
    m = Att.S_KING;
    for (k = 8; k--; m += 2)
        c & Att.cAttChess[m] || e[b + Att.cAttChess[m + 1]] == f + CB.Piece.KING && ++h;
    m = d ? Att.S_PAWN_B : Att.S_PAWN_W;
    c & Att.cAttChess[m] || e[b + Att.cAttChess[m + 1]] == f + CB.Piece.PAWN && ++h;
    m += 2;
    c & Att.cAttChess[m] || e[b + Att.cAttChess[m + 1]] == f + CB.Piece.PAWN && ++h;
    return h
}
;
Att.prototype.evaluatePins = function(e) {
    var b = []
      , d = []
      , c = 0
      , f = 0;
    e = ObjUtil.clone(e);
    for (var g = e.ep = 0; 64 > g; g++) {
        var h = e.board[g];
        CB.Piece.V15q(h) && (CB.Piece.V15o(h, CB.Piece.WHITE) ? (e.setSideToMove(CB.V15e.BLACK),
        h = this.getPinValue(e, g),
        c += h.pinEval,
        b = b.concat(h.pins)) : (e.setSideToMove(CB.V15e.WHITE),
        d = this.getPinValue(e, g),
        f += d.pinEval,
        d = b.concat(d.pins)))
    }
    return {
        valW: c,
        valB: f,
        pinsW: b,
        pinsB: d,
        hasPinnedW: function(k) {
            for (var l = 0; l < this.pinsW.length; l++)
                if (this.pinsW[l].pinnedSq == k)
                    return !0
        },
        hasPinnedB: function(k) {
            for (var l = 0; l < this.pinsB.length; l++)
                if (this.pinsB[l].pinnedSq == k)
                    return !0
        }
    }
}
;
Att.prototype.getPinValue = function(e, b) {
    var d = []
      , c = 0
      , f = null
      , g = 4
      , h = e.board;
    switch (h[b] & CB.Piece.V15j) {
    case CB.Piece.QUEEN:
        f = Att.S_QUEEN;
        g = 8;
        break;
    case CB.Piece.BISHOP:
        f = Att.S_BISHOP;
        break;
    case CB.Piece.ROOK:
        f = Att.S_ROOK
    }
    if (f)
        for (var k = e.getBTM() ? CB.Piece.BLACK : CB.Piece.WHITE; g--; )
            for (var l = Att.cAttChess[f++], m = Att.cAttChess[f++], n = b; !(Att.cDir[n] & l); )
                if (n += m,
                h[n]) {
                    var p = h[n];
                    if (CB.Piece.V15o(p, k))
                        for (var q = n; !(Att.cDir[n] & l); )
                            if (n += m,
                            h[n]) {
                                l = h[n];
                                if (CB.Piece.V15o(l, k) && !CB.Piece.V15p(l)) {
                                    m = ObjUtil.clone(e);
                                    m.ep = 0;
                                    var t = Att.pieceVal(l)
                                      , v = t;
                                    if (!CB.Piece.isKing(l)) {
                                        var z = m.board[q];
                                        m.board[q] = 0;
                                        m.flipSideToMove();
                                        v = CB.Piece.isKing(p) || m.isCheck() ? t = this.calcPL(m, b, n) : t = this.calc(m, b, n);
                                        m.board[q] = z;
                                        m.flipSideToMove()
                                    }
                                    0 < v && (CB.Piece.isKing(p) || (z = m.isCheck() ? this.calcPL(m, b, q) : this.calc(m, b, q),
                                    0 >= z && (z = Att.pieceVal(p) >> 1),
                                    v > z && (v = z)),
                                    t && (m.flipSideToMove(),
                                    this.hasSafeCapture(m, b) && (v = 0),
                                    m.flipSideToMove()));
                                    0 < v && (d.push({
                                        gain: v,
                                        pinner: m.board[b],
                                        pinned: p,
                                        pinnedTo: l,
                                        pinnerSq: b,
                                        pinnedSq: q,
                                        pinnedToSq: n,
                                        toString: function() {
                                            return String.f("Sq={0}, gain={1}, pinner={2}", CB.Square.toString(this.pinnedSq), this.gain, CB.Square.toString(this.pinnerSq))
                                        }
                                    }),
                                    v = CB.Piece.isKing(l) ? (v >> 2) + 10 : (v >> 3) + 5,
                                    c += v)
                                }
                                break
                            }
                    break
                }
    return {
        pins: d,
        pinEval: c
    }
}
;
Att.prototype.checkDoubleAttack = function(e, b) {
    var d = ObjUtil.clone(e);
    d.preCalcCtx(b);
    d.makeMove(b);
    var c = d.isCheck();
    if (c && d.isMate())
        return [];
    var f = ObjUtil.clone(d);
    d.setSideToMove(CB.V15e.other(d.getSideToMove()));
    if (b.vct || this.countCheck(d, b.to, e.getBTM()))
        return 0;
    for (var g = d.board, h = e.getBTM() ? 0 : CB.Piece.V15h, k = [], l = 0; 64 > l; l++)
        g[l] && (g[l] & CB.Piece.V15h) == h && (g[l] == CB.Piece.KING + h && c ? k.push(l) : 0 > this.calcAll(d, l) && k.push(l));
    if (1 < k.length) {
        var m = this.getCoveredSquares(e, e.getSideToMove())
          , n = [];
        k.forEach(function(p) {
            m.has(p) || this.hasSafeCapture(f, b.to, 0, p) || n.push(p)
        }
        .bind(this));
        if (1 < n.length)
            return n
    }
    return []
}
;
Att.prototype.hasSafeCapture = function(e, b, d, c) {
    var f = -1;
    "undefined" != typeof c && (f = c);
    c = !1;
    d = d || 0;
    if (e.isCheck())
        for (var g = e.generateSemiLegals(), h = 0; h < g.length; h++) {
            if (g[h].to == b && (-1 == f || f == g[h].from)) {
                var k = g[h];
                if (this.calcPL(e, k.from, k.to) >= d) {
                    c = !0;
                    break
                }
            }
        }
    else
        for (g = e.V3hu(),
        h = 0; h < g.length; h++)
            if (k = g[h],
            k.to == b && (-1 == f || f == k.from) && this.calc(e, k.from, k.to) >= d) {
                c = !0;
                break
            }
    return c
}
;
Att.testPins = function() {
    for (var e = [{
        fen: "4k3/8/2r5/1B6/8/8/8/2K5 w - - 0 0",
        value: 135,
        sq: 12
    }, {
        fen: "5k2/8/8/8/6b1/5R2/8/3K4 b - - 0 1",
        value: 135,
        sq: 51
    }, {
        fen: "k3q2R/8/8/8/8/8/5K2/B7 w - - 0 1",
        value: 235,
        sq: 63
    }, {
        fen: "k3n2R/8/8/8/8/8/5K2/8 w - - 0 0",
        value: 91,
        sq: 63
    }, {
        fen: "1k3q2/8/8/8/5b2/3N4/2K5/5R2 w - - 0 1",
        value: 45,
        sq: 40
    }, {
        fen: "1k3q2/8/8/8/5b2/8/2K5/5R2 w - - 0 1",
        value: 25,
        sq: 40
    }, {
        fen: "1k3q2/8/8/8/5b2/8/Q1K4n/5R2 w - - 0 1",
        value: 0,
        sq: 40
    }, {
        fen: "2r5/5k2/4n3/2B5/8/8/8/2Q3K1 b - - 0 1",
        value: 45,
        sq: 23
    }, {
        fen: "k7/8/8/8/4b2K/8/7P/7B w - - 0 0",
        value: 0,
        sq: 56
    }, {
        fen: "k7/8/8/8/4n2K/8/7P/7B w - - 0 0",
        value: 91,
        sq: 56
    }, {
        fen: "r3k2R/8/8/8/8/8/8/5K2 b q - 0 1",
        value: 67,
        sq: 63
    }, {
        fen: "k7/7Q/8/8/4b2K/6P1/6B1/1q6 b - - 0 1",
        value: 67,
        sq: 63
    }, {
        fen: "1nb1q2k/1r3r1p/p3p2B/1p1pP3/2pP2Q1/7R/PPB2PP1/R5K1 b - - 0 30",
        value: 67,
        sq: 63
    }, {
        fen: "7k/7p/7B/8/8/7R/8/6K1 w - - 0 1",
        value: 67,
        sq: 63
    }], b = new Att, d = 0; d < e.length; d++) {
        var c = new CB.Position(e[d].fen);
        console.log(String.f("{1}. W/B Pins for {0}", e[d].fen, d));
        c = b.evaluatePins(c);
        if (c.valW) {
            console.log(String.f("White Val {0}", c.valW));
            for (var f = 0; f < c.pinsW.length; f++)
                console.log(String.f("{0}", c.pinsW[f].toString()))
        }
        if (c.valB)
            for (console.log(String.f("Black Val {0}", c.valB)),
            f = 0; f < c.pinsB.length; f++)
                console.log(String.f("{0}", c.pinsB[f].toString()))
    }
}
;
Att.testAtt = function() {}
;
Att.testCovers = function() {
    for (var e = [{
        fen: "8/8/2P4r/8/2R5/7k/8/7K w - - 0 1",
        from: "c4",
        side: 0,
        yes: ["c6", "c2"],
        no: ["c7", "c8", "h8", "g2"]
    }, {
        fen: "8/7k/8/7K/1p6/3N4/8/8 w - - 0 1",
        from: "d3",
        side: 0,
        yes: "b4 c5 e5 f4 f2 e1 c1 b2".split(" "),
        no: "a2 c7 g2 h5 h7 e8".split(" ")
    }, {
        fen: "7k/8/8/8/4P3/8/8/7K w - - 0 1",
        from: "e4",
        side: 0,
        yes: ["d5", "f5"],
        no: ["e5", "e4"]
    }, {
        fen: "8/p7/k7/8/2n5/P3Q3/K7/8 b - - 0 1",
        from: "c4",
        side: 1,
        yes: "a3 e3 a5 b6 d6 e5 d2 b2".split(" "),
        no: "a2 c7 g2 h5 h7 e8".split(" ")
    }, {
        fen: "8/3NBN2/4k3/3RPN2/8/2K5/8/8 b - - 0 1",
        from: "e6",
        side: 1,
        yes: "d7 e7 f7 f6 f5 e5 d5 d6".split(" "),
        no: "d4 e8 f8 f4 f3 d2 d1 a6".split(" ")
    }, {
        fen: "8/8/p3p3/8/2B5/8/5K1k/8 w - - 0 1",
        from: "c4",
        side: 0,
        yes: "a6 e6 b5 d5 a2 d3".split(" "),
        no: ["b2", "e5", "f7", "g8"]
    }], b = new Att, d = 0; d < e.length; d++) {
        console.log("Test Cover for:" + e[d].fen);
        for (var c = 0; c < e[d].yes.length; c++) {
            var f = b.coversFromTo(new CB.Position(e[d].fen), e[d].side, CB.Square.fromString(e[d].from), CB.Square.fromString(e[d].yes[c]));
            console.log("Test Yes:" + e[d].yes[c] + " => " + f);
            f ? console.log("OK") : console.log("Wrong!")
        }
        for (c = 0; c < e[d].no.length; c++)
            f = b.coversFromTo(new CB.Position(e[d].fen), e[d].side, CB.Square.fromString(e[d].from), CB.Square.fromString(e[d].no[c])),
            console.log("Test No:" + e[d].no[c] + " => " + f),
            f ? console.log("Wrong!") : console.log("OK")
    }
}
;
Att.testDoubleAttacks = function() {
    for (var e = [{
        fen: "7k/7p/b4b2/8/8/8/2R3P1/7K w - - 0 1",
        move: "c2c6",
        double: !0
    }, {
        fen: "7k/8/8/8/4n3/8/8/3Q3K b - - 0 1",
        move: "e4f2",
        double: !0
    }, {
        fen: "4R3/1b5k/8/4p3/8/8/8/4K3 w - - 0 1",
        move: "e8e7",
        double: !0
    }], b = new Att, d = {}, c = 0; c < e.length; d = {
        $jscomp$loop$prop$str$201: d.$jscomp$loop$prop$str$201
    },
    c++) {
        console.log("Test Double Attack Cover for:" + e[c].fen);
        var f = new CB.V17g.fromString(e[c].move)
          , g = new CB.Position(e[c].fen);
        f = b.checkDoubleAttack(g, f);
        g = b.getCoveredSquares(g, CB.V15e.other(g.getSideToMove()));
        d.$jscomp$loop$prop$str$201 = "Covered: ";
        g.forEach(function(h) {
            return function(k) {
                h.$jscomp$loop$prop$str$201 += k.toString() + ","
            }
        }(d));
        console.log(d.$jscomp$loop$prop$str$201);
        0 < f.length == e[c].double ? console.log("OK") : console.log("Wrong!")
    }
}
;
Att.testCoveredSquares = function() {
    for (var e = [{
        fen: "7k/6q1/2p1rn2/8/8/8/1P5B/1KQ1R3 w - - 0 1",
        sq: "h8",
        piece: 1
    }, {
        fen: "7k/6q1/2p1rn2/8/8/8/1P5B/1KQ1R3 w - - 0 1",
        sq: "b1",
        piece: 1
    }], b = new Att, d = {}, c = 0; c < e.length; d = {
        $jscomp$loop$prop$str$206: d.$jscomp$loop$prop$str$206,
        $jscomp$loop$prop$strW$207: d.$jscomp$loop$prop$strW$207,
        $jscomp$loop$prop$strB$208: d.$jscomp$loop$prop$strB$208
    },
    c++) {
        console.log("Test Covered for:" + e[c].fen);
        var f = new CB.Position(e[c].fen)
          , g = {};
        d.$jscomp$loop$prop$str$206 = "";
        switch (e[c].piece) {
        case CB.Piece.KING:
            g = b.getKingCoveredSqs(CB.Square.fromString(e[c].sq));
            d.$jscomp$loop$prop$str$206 = "King: ";
            g.forEach(function(h) {
                return function(k) {
                    h.$jscomp$loop$prop$str$206 += CB.Square.toString(k) + ","
                }
            }(d));
            break;
        case CB.Piece.BISHOP:
            g = b.getBishopCoveredSqs(f, CB.Square.fromString(e[c].sq));
            d.$jscomp$loop$prop$str$206 = "Bishop: ";
            g.forEach(function(h) {
                return function(k) {
                    h.$jscomp$loop$prop$str$206 += CB.Square.toString(k) + ","
                }
            }(d));
            break;
        case CB.Piece.ROOK:
            g = b.getRookCoveredSqs(f, CB.Square.fromString(e[c].sq));
            d.$jscomp$loop$prop$str$206 = "Rook: ";
            g.forEach(function(h) {
                return function(k) {
                    h.$jscomp$loop$prop$str$206 += CB.Square.toString(k) + ","
                }
            }(d));
            break;
        case CB.Piece.QUEEN:
            g = b.getQueenCoveredSqs(f, CB.Square.fromString(e[c].sq)),
            d.$jscomp$loop$prop$str$206 = "Queen: ",
            g.forEach(function(h) {
                return function(k) {
                    h.$jscomp$loop$prop$str$206 += CB.Square.toString(k) + ","
                }
            }(d))
        }
        console.log(d.$jscomp$loop$prop$str$206);
        g = b.getCoveredSquares(f, CB.V15e.WHITE);
        f = b.getCoveredSquares(f, CB.V15e.BLACK);
        d.$jscomp$loop$prop$strW$207 = "";
        d.$jscomp$loop$prop$strB$208 = "";
        g.forEach(function(h) {
            return function(k) {
                h.$jscomp$loop$prop$strW$207 += CB.Square.toString(k) + ","
            }
        }(d));
        f.forEach(function(h) {
            return function(k) {
                h.$jscomp$loop$prop$strB$208 += CB.Square.toString(k) + ","
            }
        }(d));
        console.log("All White: " + d.$jscomp$loop$prop$strW$207);
        console.log("All Black: " + d.$jscomp$loop$prop$strB$208)
    }
}
;
"use strict";
function vecOut(e) {
    for (var b = "", d = 0; d < e.length; d++)
        b += String.f("{0}", e[d].toFixed(1)),
        d < e.length - 1 && (b += "/");
    return b
}
var Evaluation = function(e) {
    this.bitPos = new BitPos;
    this.bitPos.fromChessPos(e);
    this.pos = e;
    this.toMove = e.getSideToMove();
    this.init();
    this.initScores();
    this.initStatics();
    this.initAttackParams();
    this.buildAttacks(e);
    this.calcMaterial();
    this.initKing();
    this.initPawns();
    this.initPinned();
    this.initMobility()
};
Evaluation.prototype.init = function() {
    Evaluation.bbSquare = [];
    Evaluation.allRookAttacks = [];
    Evaluation.allBishopAttacks = [];
    Evaluation.allKnightAttacks = [];
    Evaluation.allKingAttacks = [];
    Evaluation.allPawnAttacks = [[], []];
    Evaluation.kingRing = [[], []];
    Evaluation.kingZone = [];
    Evaluation.between = [];
    Evaluation.lines = [];
    Evaluation.kingDistance = [];
    Evaluation.ranksInFront = [[], []];
    Evaluation.passedMask = [[], []];
    Evaluation.forward = [[], []];
    Evaluation.adjacentFiles = [];
    Evaluation.neighbourFiles = []
}
;
Evaluation.prototype.evaluate = function() {
    for (var e = this.spaces(), b = this.pawns(), d = this.knights(), c = this.bishops(), f = this.rooks(), g = this.queens(), h = this.kings(), k = this.attacks(), l = [b[0].passed, b[1].passed], m = this.activity(d, c, f, g), n = 0; 2 > n; n++)
        h[n].myDistToPasseds = l[0].kingDist[n] + l[1].kingDist[n],
        h[n].oppDistToPasseds = l[0].kingDist[1 - n] + l[1].kingDist[1 - n];
    var p = []
      , q = [];
    [e, b, d, c, f, g, h, k, l, m].forEach(function(t) {
        t.length && (t[0].test && (p = p.concat(t[0].test)),
        t[1].test && (p = p.concat(t[1].test)),
        t[0].colors && (q = t[0].colors),
        t[1].colors && (q = t[1].colors))
    });
    e = {
        Spaces: e,
        Pawns: b,
        Knights: d,
        Bishops: c,
        Rooks: f,
        Queens: g,
        Kings: h,
        Attacks: k,
        Passed: l,
        Activity: m,
        test: p,
        colors: q
    };
    e.Complexity = this.complexity(e);
    e.test = e.test.concat(e.Complexity.test);
    return e
}
;
Evaluation.prototype.complexity = function(e) {
    for (var b = {
        val: [0, 0],
        kingAtt: [0, 0],
        weakAtt: [0, 0],
        area: [0, 0],
        weightArea: [0, 0],
        weakPawns: 0,
        candidates: 0,
        passVal: 0,
        attack: 0,
        safety: [0, 0],
        developed: [0, 0],
        asym: 0,
        shelter: 0,
        storm: 0,
        mat: this.matInhomogen,
        potential: e.Attacks[0].potential + e.Attacks[1].potential,
        getNIcons: function() {
            for (var h = -1, k = [0, 59, 140, 260, 410], l = 0; l < k.length; l++)
                this.scalarVal > k[l] && (h = l);
            return h
        },
        str: function() {
            return String.f("ComplexityMG={0}", this.scalarVal.toFixed(2))
        },
        dbg: function() {
            return String.f("Weak={0}/P={1}, Pass={2}, Cand={3}, Potent={4}, KingAtt={5}, Area={6}, Safety={7}, Attack={8}, Asym={9}, Material={10}, Shelter={11}, Storm={12}, Dev={13}", this.weakAtt, this.weakPawns, this.passVal.toFixed(1), this.candidates, this.potential, this.kingAtt, vecOut(this.weightArea), vecOut(this.safety), this.attack, this.asym, this.mat.toFixed(1), this.shelter.toFixed(1), this.storm.toFixed(1), vecOut(this.developed))
        },
        text: function() {
            for (var h = -1, k = [0, 59, 140, 260, 410, 500], l = 0; l < k.length; l++)
                this.scalarVal > k[l] && (h = l);
            return ["", lm.TECHNICAL, lm.CALM, lm.NORMAL, lm.SHARP, lm.VERY_SHARP, lm.BOARD_ON_FIRE][h + 1]
        },
        test: []
    }, d = 0; 2 > d; d++)
        b.weakPawns += e.Pawns[d].nWeak,
        b.candidates = e.Pawns[d].nCandidates,
        b.kingAtt[d] += e.Knights[d].kingAtt + e.Bishops[d].kingAtt + e.Rooks[d].kingAtt + e.Queens[d].kingAtt,
        b.weakAtt[d] += e.Knights[d].weakAtt + e.Bishops[d].weakAtt + e.Rooks[d].weakAtt + e.Queens[d].weakAtt,
        b.safety[d] = e.Kings[d].safety,
        b.weightArea[d] = e.Activity[d].val,
        b.developed[d] = e.Activity[d].devel;
    b.val = this.add(b.val, this.mult(this.cpxMatInhomogen, this.matInhomogen));
    d = 0;
    for (var c = [1, 2, 6, 15], f = 0; 2 > f; f++) {
        for (var g = 3; 6 >= g; g++)
            d += c[g - 3] * this.passedPawns[f].copy().AND(Boards.RELATIVE_RANK[f][g]).popcnt();
        0 < e.Passed[f].front && (d += .5 * e.Passed[f].front)
    }
    b.passVal = d;
    b.val = this.add(b.val, this.mult(this.cpxPassed, d));
    d = this.mult(this.cpxAsym, this.pawnAsym);
    b.val = this.add(b.val, d);
    for (c = 0; 2 > c; c++)
        b.attack = e.Attacks[c].hanging + e.Attacks[c].badness + e.Attacks[c].controlThem + e.Attacks[c].pawnAttacks + e.Attacks[c].nTwiceAttacked + e.Attacks[c].nAttacked,
        b.val = this.add(b.val, this.mult(this.cpxArea, .2 * b.weightArea[c])),
        b.val = this.add(b.val, this.mult(this.cpxWeakPawns, e.Pawns[c].nWeak)),
        b.val = this.add(b.val, this.mult(this.cpxCandidates, e.Pawns[c].nCandidates)),
        b.val = this.add(b.val, this.mult(this.cpxPawnPush, e.Pawns[c].pushCnt)),
        b.val = this.add(b.val, this.mult(this.cpxCenterPush, e.Pawns[c].centerPushCnt)),
        b.val = this.add(b.val, this.mult(this.cpxTension, e.Pawns[c].tension)),
        b.val = this.add(b.val, this.mult(this.cpxPawnKingRing, .3 * e.Pawns[c].kring)),
        b.val = this.add(b.val, this.mult(this.cpxHanging, e.Attacks[c].hanging)),
        b.val = this.add(b.val, this.mult(this.cpxBadness, e.Attacks[c].badness)),
        b.val = this.add(b.val, this.mult(this.cpxControl, e.Attacks[c].controlThem)),
        b.val = this.add(b.val, this.mult(this.cpxWeakBack, e.Attacks[c].weakBack)),
        b.val = this.add(b.val, this.mult(this.cpxPawnAttacks, e.Attacks[c].pawnAttacks)),
        b.val = this.add(b.val, this.mult(this.cpxAttack, e.Attacks[c].nAttacked)),
        b.val = this.add(b.val, this.mult(this.cpxUndef, e.Attacks[c].undefendedVal)),
        b.val = this.add(b.val, this.mult(this.cpxTwice, e.Attacks[c].nTwiceAttacked)),
        b.val = this.add(b.val, this.mult(this.cpxPotential, .1 * e.Attacks[c].potential)),
        0 > e.Kings[c].safety && (f = -Math.max(-40, e.Kings[c].safety),
        2 > b.developed[1 - c] && (f /= 2),
        g = this.pos.canCastle(c) ? this.cpxSafetyCanCastle : this.cpxSafety,
        b.val = this.add(b.val, this.mult(g, f)),
        0 > e.Kings[c].shelter && !this.pos.canCastle(c) && (f = [-this.phaseScaleKingSafety * this.cpxShelter[0] / 100, -this.phaseScaleKingSafety * this.cpxShelter[1] / 100],
        b.val = this.add(b.val, this.mult(f, e.Kings[c].shelter)),
        b.shelter = -e.Kings[c].shelter * f[0]),
        0 < e.Kings[c].storm && !this.pos.canCastle(c) && (f = [this.phaseScaleKingSafety * this.cpxStorm[0] / 100, this.phaseScaleKingSafety * this.cpxStorm[1] / 100],
        b.val = this.add(b.val, this.mult(f, .1 * e.Kings[c].storm)),
        b.storm = .1 * e.Kings[c].storm * f[0])),
        b.val = this.add(b.val, this.mult(this.cpxQueenPin, e.Queens[c].queenPinCnt())),
        b.val = this.add(b.val, this.mult(this.cpxConnected, e.Passed[c].connected));
    e = this.pinned[0].popcnt() + this.pinned[1].popcnt();
    b.val = this.add(b.val, this.mult(this.cpxPins, e));
    this.oppBishops && (b.val[1] = this.scaleDiffBishops(this.ppScaleDown, b.val[1]));
    b.scalarVal = this.scalarEv(b.val);
    b.asym = this.scalarEv(d);
    return b
}
;
Evaluation.prototype.activity = function(e, b, d, c) {
    return [this.evalActivity(0, e, b, d, c), this.evalActivity(1, e, b, d, c)]
}
;
Evaluation.prototype.evalActivity = function(e, b, d, c, f) {
    var g = 0
      , h = []
      , k = {
        pns: null,
        kn: [this.getKnights(e)],
        bi: [this.getBishops(e)],
        ro: [this.getRooks(e)],
        qu: [this.getQueens(e)]
    }
      , l = {
        pns: this.attackedBy[e][Pieces.PAWN],
        kn: b[e].areaBBs,
        bi: d[e].areaBBs,
        ro: c[e].areaBBs,
        qu: f[e].areaBBs
    };
    g += 2 * this.calcWeightArea(e, k, h);
    k = this.calcWeightArea(e, l, h);
    g = Math.round(100 * (k ? g + .5 * k : 0)) / 100;
    var m = 0;
    [b, d, c, f].forEach(function(n) {
        n[e].mob.forEach(function(p) {
            m += p
        })
    });
    d = this.calcDev(l);
    b = 0;
    this.totPieces[e] && (b = Math.round((d.area - .7 * d.queenArea) / this.totPieces[e] * 10) / 10,
    d = squareBB(this.bitPos.kingPos(e)),
    d.copy().AND(Boards.KING_00[e]).notEmpty() ? b += .8 : d.copy().AND(Boards.KING_000[e]).notEmpty() && (b += .8));
    return {
        val: g,
        mobility: m,
        devel: b,
        test: h,
        getNIcons: function() {
            for (var n = -1, p = [0, 5, 10, 14.5, 18], q = 0; q < p.length; q++)
                this.val > p[q] && (n = q);
            return n
        },
        str: function() {
            return String.f("Activity={0}", this.val.toFixed(3))
        },
        dbg: function() {
            return String.f("Devel={0}, Mobil={1}", this.devel.toFixed(1), this.mobility)
        }
    }
}
;
Evaluation.prototype.calcDev = function(e) {
    for (var b = zeroBB(), d = 0, c = 0; c < e.kn.length; c++)
        d += e.kn[c].popcnt(),
        b.OR(e.kn[c]);
    for (c = 0; c < e.bi.length; c++)
        d += e.bi[c].popcnt(),
        b.OR(e.bi[c]);
    for (c = 0; c < e.ro.length; c++)
        d += e.ro[c].popcnt(),
        b.OR(e.ro[c]);
    for (var f = c = 0; f < e.qu.length; f++)
        d += e.qu[f].popcnt(),
        c += e.qu[f].popcnt(),
        b.OR(e.qu[f]);
    d += e.pns.copy().AND(Boards.CENTER).popcnt();
    d += b.copy().AND(Boards.CENTER).popcnt();
    return {
        bbAreaDev: b,
        area: d,
        queenArea: c
    }
}
;
Evaluation.prototype.calcWeightArea = function(e, b, d) {
    var c = [0, 0];
    c = this.add(c, this.calcPawnWeightArea(e, b, d));
    c = this.add(c, this.calcQueenWeightArea(e, b, d));
    c = this.add(c, this.calcRookWeightArea(e, b, d));
    c = this.add(c, this.calcBishopWeightArea(e, b, d));
    c = this.add(c, this.calcKnightWeightArea(e, b, d));
    return .1 * this.scalarEv(c)
}
;
Evaluation.prototype.calcPawnWeightArea = function(e, b) {
    if (!b.pns)
        return [0, 0];
    var d = [0, 0]
      , c = [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[.1, 1], [.2, 1], [.2, 1], [.3, 1]], [[1, 1], [1.5, 1], [2, 1], [2.5, 1]], [[2, 1], [3, 1], [4, 1], [5, 1]], [[4, 1], [6, 1], [8, 1], [10, 1]], [[16, 1], [25, 1], [32, 1], [36, 1]], [[20, 1], [30, 1], [40, 1], [48, 1]]];
    b = b.pns;
    for (var f = 0; 8 > f; f++) {
        var g = b.copy().AND(Boards.RELATIVE_RANK[e][f]);
        if (g.popcnt())
            for (var h = 0; 8 > h; h++) {
                var k = Math.min(h, Square.FILE_H - h);
                g.copy().AND(fileBB(h)).popcnt() && (d = this.add(d, c[f][k]))
            }
    }
    return d
}
;
Evaluation.prototype.calcQueenWeightArea = function(e, b, d) {
    return this.calcPieceWeightArea(e, Pieces.QUEEN, b, b.qu, [[[1, 1], [1, 1], [1, 1], [1, 1]], [[1, 1], [2, 1], [1.5, 1], [1.8, 1]], [[1, 1], [2, 1], [1.6, 1], [2, 1]], [[2, 1], [2, 1], [1.7, 1], [2.1, 1]], [[2, 1], [2, 1], [1.8, 1], [2.2, 1]], [[2, 1], [3, 1], [2, 1], [2.4, 1]], [[2.4, 1], [4, 1], [2.1, 1], [2.5, 1]], [[2.6, 1], [5, 1], [2.2, 1], [3, 1]]], d)
}
;
Evaluation.prototype.calcKnightWeightArea = function(e, b, d) {
    return this.calcPieceWeightArea(e, Pieces.KNIGHT, b, b.kn, [[[.5, 1], [1, 1], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [1, 1]], [[1.5, 1], [1.5, 1], [2, 1], [2, 1]], [[2, 1], [2, 1], [3, 1], [4, 1]], [[3, 1], [3, 1], [4, 1], [4, 1]], [[4, 1], [4, 1], [5, 1], [5, 1]], [[5, 1], [5, 1], [6, 1], [6, 1]], [[4, 1], [4, 1], [5, 1], [6, 1]]], d)
}
;
Evaluation.prototype.calcBishopWeightArea = function(e, b, d) {
    return this.calcPieceWeightArea(e, Pieces.BISHOP, b, b.bi, [[[.5, 1], [1, 1], [1, 1], [1, 1]], [[1, 1], [2, 1], [2, 1], [2, 1]], [[1.5, 1], [2, 1], [2, 1], [3, 1]], [[2, 1], [2, 1], [2, 1], [3, 1]], [[3, 1], [2, 1], [2, 1], [4, 1]], [[3, 1], [3, 1], [3, 1], [5, 1]], [[4, 1], [4, 1], [4, 1], [4, 1]], [[3, 1], [3, 1], [3, 1], [3, 1]]], d)
}
;
Evaluation.prototype.calcRookWeightArea = function(e, b, d) {
    return this.calcPieceWeightArea(e, Pieces.ROOK, b, b.ro, [[[1, 1], [1, 1], [2, 1], [3, 1]], [[1, 1], [2, 1], [2, 1], [3, 1]], [[1, 1], [2, 1], [2, 1], [3, 1]], [[2, 1], [2, 1], [2, 1], [3, 1]], [[3, 1], [2, 1], [2, 1], [3, 1]], [[3, 1], [3, 1], [3, 1], [3, 1]], [[4, 1], [4, 1], [4, 1], [4, 1]], [[3, 1], [3, 1], [3, 1], [3, 1]]], d)
}
;
Evaluation.prototype.calcPieceWeightArea = function(e, b, d, c, f, g) {
    var h = [0, 0];
    d = this.calcSpecialBBs(e, b, d, g);
    for (var k = 0; k < c.length; k++)
        for (var l = c[k].copy(), m = 0; 8 > m; m++) {
            var n = l.copy().AND(Boards.RELATIVE_RANK[e][m]);
            if (n.popcnt())
                for (var p = 0; 8 > p; p++) {
                    var q = Math.min(p, Square.FILE_H - p)
                      , t = n.copy().AND(fileBB(p));
                    t.popcnt() && (q = this.calcSpecialBonus(e, b, f[m][q], t, d, g),
                    h = this.add(h, q))
                }
        }
    return h
}
;
Evaluation.prototype.calcSpecialBonus = function(e, b, d, c, f, g) {
    var h = [1, 1];
    c.copy().AND(f.closeChecks).notEmpty() ? (h = this.add(h, [2, .2]),
    c.copy().AND(this.attackedByTwo[e]).notEmpty() && (h = this.add(h, [2, .1]))) : c.copy().AND(f.checks).notEmpty() ? h = this.add(h, [.8, .1]) : c.copy().AND(this.kingRing[1 - e]).notEmpty() ? h = this.add(h, [.5, 0]) : c.copy().AND(this.kingRing[e]).notEmpty() && (h = this.add(h, [.1, 0]));
    b != Pieces.QUEEN && c.copy().AND(f.gardez).notEmpty() && (h = this.add(h, [.6, .1]));
    c.copy().AND(f.weakPawns).notEmpty() && (h = this.add(h, [.5, 1.5]));
    c.copy().AND(f.neutralizeAtt).notEmpty() && (h = this.add(h, [.3, .4]));
    c.copy().AND(f.rookGardez).notEmpty() && (h = this.add(h, [.5, .5]));
    c.copy().AND(f.passedPath).notEmpty() && (h = this.add(h, [.5, 1.6]));
    c.copy().AND(f.passedBehind).notEmpty() && (h = this.add(h, [.2, 1]));
    c.copy().AND(f.oppPieces).notEmpty() && (h = this.add(h, [.2, .4]));
    c.copy().AND(f.pawnPushMe).notEmpty() && (h = this.add(h, [.3, .5]));
    h = this.checkMajorPiecePawnPush(e, b, c, f.pawnPushMe, h, g);
    c.copy().AND(f.pawnPushOpp).notEmpty() && (h = this.add(h, [.3, .5]));
    return this.mult(d, this.scalarEv(h))
}
;
Evaluation.prototype.calcSpecialBBs = function(e, b, d, c) {
    d = {};
    c = allSetBB().AND_NOT(this.getAttackedByPiece(1 - e, Pieces.PAWN));
    var f = this.bitPos.kingPos(1 - e);
    d.checks = this.attackedBy[e][b].copy().AND(this.getAttacks(b, f, this.getAllPieces(), 1 - e));
    d.closeChecks = d.checks.AND(this.kingRing[1 - e]);
    d.gardez = zeroBB();
    b != Pieces.QUEEN && (f = this.getQueens(1 - e).LSB(),
    64 > f && (d.gardez = this.attackedBy[e][b].copy().AND(this.getAttacks(b, f, this.getAllPieces(), 1 - e)).AND(c)));
    f = this.weakPawns[1 - e].copy();
    for (d.weakPawns = zeroBB(); f.notEmpty(); ) {
        var g = f.popLSB();
        d.weakPawns.OR(this.getAttacks(b, g, this.getAllPieces(), 1 - e)).AND(c)
    }
    d.neutralizeAtt = zeroBB();
    for (f = this.attackedByAll[1 - e].copy().AND_NOT(this.attackedBy[e][Pieces.PAWN]).AND_NOT(this.attackedBy[1 - e][Pieces.PAWN]).AND_NOT(this.getPieces(1 - e)); f.notEmpty(); )
        g = f.popLSB(),
        d.neutralizeAtt.OR(this.getAttacks(b, g, this.getAllPieces(), 1 - e));
    d.rookGardez = zeroBB();
    if (b == Pieces.BISHOP || b == Pieces.KNIGHT)
        for (f = this.getRooks(1 - e); f.notEmpty(); )
            g = f.popLSB(),
            d.rookGardez.OR(this.getAttacks(b, g, this.getAllPieces(), 1 - e)).AND(c);
    d.passedPath = zeroBB();
    g = this.passedPawns[e].copy();
    for (f = zeroBB(); g.notEmpty(); ) {
        var h = g.popLSB();
        f.OR(Evaluation.forward[e][h])
    }
    for (g = this.passedPawns[1 - e].copy(); g.notEmpty(); )
        h = g.popLSB(),
        f.OR(Evaluation.forward[1 - e][h]);
    for (; f.notEmpty(); )
        g = f.popLSB(),
        d.passedPath.OR(this.getAttacks(b, g, this.getAllPieces(), 1 - e));
    d.passedPath.AND(c);
    d.passedBehind = zeroBB();
    if (b == Pieces.ROOK || b == Pieces.QUEEN) {
        for (b = this.passedPawns[e].copy(); b.notEmpty(); )
            f = b.popLSB(),
            d.passedBehind.OR(Evaluation.forward[1 - e][f]);
        for (b = this.passedPawns[1 - e].copy(); b.notEmpty(); )
            f = b.popLSB(),
            d.passedBehind.OR(Evaluation.forward[e][f])
    }
    d.passedBehind.AND(c);
    d.oppPieces = zeroBB();
    c = this.getPieces(1 - e).AND_NOT(this.attackedBy[1 - e][Pieces.PAWN]).AND_NOT(this.getKing(1 - e));
    d.oppPieces = c;
    c = this.getPawns(e).AND(Boards.RELATIVE_RANK[e][1]);
    c = e ? c.makeS() : c.makeN();
    c.AND_NOT(this.getAllPieces());
    c = e ? c.makeS() : c.makeN();
    c.AND_NOT(this.getAllPieces());
    b = this.getPawns(e);
    b = e ? b.makeS() : b.makeN();
    b.AND_NOT(this.getAllPieces()).AND(Boards.PASSEDPAWN_RANKS[e]);
    d.pawnPushMe = b.OR(c);
    d.pawnPushMe.AND_NOT(this.makePawnAtt(this.getPawns(e), e));
    c = this.getPawns(1 - e).AND(Boards.RELATIVE_RANK[1 - e][1]);
    c = e ? c.makeN() : c.makeS();
    c.AND_NOT(this.getAllPieces());
    c = e ? c.makeN() : c.makeS();
    c.AND_NOT(this.getAllPieces());
    b = this.getPawns(1 - e);
    b = e ? b.makeN() : b.makeS();
    b.AND_NOT(this.getAllPieces()).AND(Boards.PASSEDPAWN_RANKS[1 - e]);
    d.pawnPushOpp = b.OR(c);
    d.pawnPushOpp.AND_NOT(this.makePawnAtt(this.getPawns(1 - e), 1 - e));
    return d
}
;
Evaluation.prototype.checkMajorPiecePawnPush = function(e, b, d, c, f, g) {
    if (b == Pieces.ROOK)
        for (b = c.copy(),
        c = d.LSB(); b.notEmpty(); )
            g = b.popLSB(),
            g >> 3 == c >> 3 && Evaluation.forward[1 - e][g].copy().AND(d).notEmpty() && (g += 0 == e ? Square.MD_BACK : Square.MD_FORWARD,
            Evaluation.forward[1 - e][g].copy().AND(this.getAllPawns()).empty() && (f = this.add(f, [1, 1])));
    return f
}
;
Evaluation.prototype.evalSpace = function(e) {
    var b = e ? 1 : 0
      , d = e ? 0 : 1
      , c = 0
      , f = 0
      , g = 0
      , h = this.cntBlockedPawns[b];
    if (2E3 < this.pieceMaterial()) {
        var k = b ? Boards.BLACK_SPACE.copy() : Boards.WHITE_SPACE.copy();
        k.AND_NOT(this.getPawns(b));
        k.AND_NOT(this.getAttackedByPiece(d, Pieces.PAWN));
        var l = this.pawnSpace(b).copy().AND(k).AND_NOT(this.getAttackedBy(d));
        c = k.popcnt() + 3 * l.popcnt();
        g = this.pos.countAllPieces(e);
        f = g + this.cntBlockedPawns[b]
    }
    return {
        val: c * f * f / 10,
        factor: c,
        factor2: f,
        freeCnt: k ? k.popcnt() : 0,
        closeCnt: l ? l.popcnt() : 0,
        nPieces: g,
        test: [],
        str: function() {
            return String.f("Space{0}={1}", ["W", "B"][e], this.val)
        },
        dbg: function() {
            return String.f("N={0}/{1} Pieces={2}, Blocked={3}", this.factor, this.factor2, this.nPieces, h)
        }
    }
}
;
Evaluation.prototype.spaces = function() {
    var e = this.evalSpace(0)
      , b = this.evalSpace(1);
    return [e, b]
}
;
Evaluation.prototype.evalKnights = function(e) {
    for (var b = e ? 1 : 0, d = e ? 0 : 1, c = this.getKnights(b), f = 0, g = [0, 0], h = [], k = [], l = [], m = [], n = [], p = [], q = 0, t = [], v = 0, z = 0; c.notEmpty(); ) {
        var E = [0, 0]
          , C = c.popLSB();
        p.push(C);
        var F = squareBB(C)
          , P = this.mult(this.pstKnight[this.relSq(C, b)], .1);
        E = this.add(E, P);
        l.push(this.scalarEv(P));
        this.minorBlocksPawnMask[b].copy().AND(F).notEmpty() && (E = this.add(E, [10, 5]));
        P = Evaluation.allKnightAttacks[C].copy();
        f += P.popcnt();
        this.attackedByTwo[b].OR(this.attackedByAny[b].copy().AND(P));
        this.attackedByAny[b].OR(P);
        this.attackedByPiece[b][Pieces.KNIGHT].OR(P);
        var X = P.copy().AND(this.mobilityArea[b]).popcnt();
        if (F.copy().AND(this.pinned[b]).empty()) {
            X = this.sMobilityBonusKnight[X];
            m.push(X);
            E = this.add(E, X);
            X = Evaluation.allKnightAttacks[C].copy().AND_NOT(this.getPieces(b));
            q += X.popcnt();
            t.push(X);
            X = P.copy().AND(this.weakPawns[d]);
            X.notEmpty() && (X = X.popcnt(),
            v += X,
            X = this.mult(this.sWeakPawnAttack[0], X),
            E = this.add(E, X));
            if (P.copy().AND(this.kingRing[d]).notEmpty()) {
                this.numKingAttackers[b]++;
                X = .5 * P.copy().AND(this.kingRing[d]).AND_NOT(this.attackedBy[d][Pieces.KING]).AND_NOT(this.getPieces(b)).popcnt();
                this.kingAttackPower[b] += this.vKingAttackPower[Pieces.KNIGHT];
                var W = P.copy().AND(this.attackedBy[d][Pieces.KING]);
                X += W.popcnt();
                z += X;
                E = this.add(E, [6 * X, 0]);
                this.closeKingAttackers[b] += X
            }
            X = this.bitPos.kingPos(d);
            P = Evaluation.allKnightAttacks[X].copy().AND(P);
            P.empty() || (P = this.mult([this.vKnightCheck[P.popcnt() - 1 & 3], 0], .2),
            n.push(P),
            E = this.add(E, P));
            F.copy().AND(this.outPosts[b]).notEmpty() && (C = this.evalOutpost(b, Pieces.KNIGHT, C, F),
            E = this.add(E, [C, C]))
        }
        g = this.add(g, E);
        h.push(E);
        k.push(this.scalarEv(E))
    }
    var V = [];
    h.forEach(function(u) {
        V.push(u[0])
    });
    var ca = [];
    m.forEach(function(u) {
        ca.push(this.scalarEv(u))
    }
    .bind(this));
    return {
        val: this.scalarEv(g),
        evs: h,
        attCnt: f,
        area: q,
        areaBBs: t,
        weakAtt: v,
        kingAtt: z,
        pst: l,
        mob: ca,
        checks: n,
        test: [],
        getVal: function(u) {
            return k[u]
        },
        getNVals: function() {
            return p.length
        },
        getDiodColor: function(u) {
            return Evaluation.getValColor(this.getVal(u), 0, 50, 0, 130)
        },
        getDiodGradient: function(u) {
            return Evaluation.getGradient(this.getDiodColor(u))
        },
        getDiodBlinks: function(u) {
            return 65 < this.getVal(u)
        },
        getDiodText: function(u) {
            return this.getVal(u)
        },
        getDiodSq: function(u) {
            return p[u]
        },
        getDiodTip: function(u) {
            return String.f("{0} {1}", this.getStrPiece(), CB.Square.toString(p[u]))
        },
        getStrPiece: function() {
            return "Knight"
        },
        str: function() {
            return String.f("Knight{0}={1}, Sqs={2}", ["W", "B"][e], this.val, Evaluation.debugSqs(p))
        },
        dbg: function() {
            return String.f("Tot={0}, attCnt={2}, area={3}, mob={4}, checks={5}", V, this.pst, f, q, this.mob, this.checks)
        }
    }
}
;
Evaluation.prototype.knights = function() {
    return [this.evalKnights(0), this.evalKnights(1)]
}
;
Evaluation.prototype.bishops = function() {
    return [this.evalSliders(0, Pieces.BISHOP), this.evalSliders(1, Pieces.BISHOP)]
}
;
Evaluation.prototype.rooks = function() {
    return [this.evalSliders(0, Pieces.ROOK), this.evalSliders(1, Pieces.ROOK)]
}
;
Evaluation.prototype.queens = function() {
    return [this.evalSliders(0, Pieces.QUEEN), this.evalSliders(1, Pieces.QUEEN)]
}
;
Evaluation.prototype.evalSliders = function(e, b) {
    for (var d = e ? 1 : 0, c = e ? 0 : 1, f = this.bitPos.getPiecesOfSide(b, e), g, h = [0, 0], k = [], l = [], m = [], n = [], p = 0, q = [], t = [], v = [], z = [], E = [], C = 0, F = 0, P = -30, X = 30, W = [[0, 0], [0, 0]]; f.notEmpty(); ) {
        var V = [0, 0]
          , ca = f.popLSB();
        z.push(ca);
        var u = this.relSq(ca, e)
          , D = squareBB(ca);
        switch (b) {
        case Pieces.BISHOP:
            V = this.add(V, this.mult(this.pstBishop[u], .5));
            this.minorBlocksPawnMask[d].copy().AND(D).empty() || (V = this.add(V, [5, 5]));
            m.push(this.pstBishop[u][0]);
            P = -33;
            X = 50;
            break;
        case Pieces.ROOK:
            V = this.add(V, this.mult(this.pstRook[u], .5));
            m.push(this.pstRook[u][0]);
            P = -53;
            X = 50;
            break;
        case Pieces.QUEEN:
            V = this.add(V, this.mult(this.pstQueen[u], .5));
            var B = this.bitPos.kingPos(c);
            V = this.add(V, this.sQueenKingDist[Math.min(Math.abs((ca >> 3) - (B >> 3)), Math.abs((ca & 7) - (B & 7)))]);
            m.push(this.pstQueen[u][0]);
            P = -10;
            X = 30
        }
        B = this.getAllPieces().XOR(this.mobilityArea[d].copy().AND(this.getKnights(c).OR(this.getRooks(c))));
        var H = this.getAllPieces().XOR(this.mobilityArea[d].copy().AND(this.getKnights(c).OR(this.getBishops(c))));
        u = this.getAttacks(b, ca, this.getAllPieces()).AND_NOT(this.getPieces(d));
        switch (b) {
        case Pieces.BISHOP:
            g = B.copy().XOR(this.getAllQueens());
            g = this.getAttacks(b, ca, g);
            break;
        case Pieces.ROOK:
            g = H.copy().XOR(this.getRooks(d).OR(this.getAllQueens()));
            g = this.getAttacks(b, ca, g);
            break;
        case Pieces.QUEEN:
            g = this.getAllPieces(),
            g = this.getAttacks(Pieces.BISHOP, ca, g).OR(this.getAttacks(Pieces.ROOK, ca, g))
        }
        p += u.popcnt();
        v.push(u);
        this.attackedByTwo[d].OR(this.attackedByAny[d].copy().AND(g));
        this.attackedByAny[d].OR(g);
        this.attackedByPiece[d][b].OR(g);
        D.copy().AND(this.getPinned()).notEmpty() && g.AND(Evaluation.lines[ca][this.bitPos.kingPos(d)]);
        B = g.copy().AND(this.weakPawns[c]);
        B.notEmpty() && (B = B.popcnt(),
        C += B,
        B = this.mult(this.sWeakPawnAttack[b - Pieces.KNIGHT], B),
        V = this.add(V, B));
        g.copy().AND(this.kingRing[c]).notEmpty() ? (this.numKingAttackers[d]++,
        B = g.copy().AND(this.kingRing[c]).AND_NOT(this.attackedBy[c][Pieces.KING]).AND_NOT(this.getPieces(d)),
        F += .5 * B.popcnt(),
        this.kingAttackPower[d] += this.vKingAttackPower[b],
        B = g.copy().AND(this.attackedBy[c][Pieces.KING]).popcnt(),
        F += B,
        V = this.add(V, [2 * B, 0]),
        this.closeKingAttackers[d] += B,
        q.push(B + 1)) : q.push(0);
        b == Pieces.QUEEN && (g.AND_NOT(this.attackedBy[c][Pieces.KNIGHT].copy().OR(this.attackedBy[c][Pieces.BISHOP]).OR(this.attackedBy[c][Pieces.ROOK])),
        Evaluation.ranksInFront[c][Square.RANK_5 - e].copy().AND(g).empty() && (V = this.sub(V, 8)));
        B = g.copy().AND(this.mobilityArea[d]).popcnt();
        H = this.bitPos.kingPos(c);
        switch (b) {
        case Pieces.BISHOP:
            V = this.add(V, this.sMobilityBonusBishop[B]);
            n.push(this.sMobilityBonusBishop[B]);
            u = this.getAttacks(Pieces.BISHOP, H, this.getAllPieces()).AND(u);
            u.empty() || (u = this.mult([this.vBishopCheck[u.popcnt() - 1 & 1], 0], .1),
            t.push(u),
            V = this.add(V, u));
            break;
        case Pieces.ROOK:
            V = this.add(V, this.sMobilityBonusRook[B]);
            n.push(this.sMobilityBonusRook[B]);
            u = this.getAttacks(Pieces.ROOK, H, this.getAllPieces()).AND(u);
            u.empty() || (u = this.mult([this.vRookCheck[u.popcnt() - 1 & 3], 0], .1),
            t.push(u),
            V = this.add(V, u));
            break;
        case Pieces.QUEEN:
            V = this.add(V, this.sMobilityBonusQueen[B]),
            n.push(this.sMobilityBonusQueen[B]),
            u = this.getAttacks(Pieces.QUEEN, H, this.getAllPieces()).AND(u),
            u.empty() || (u = this.mult([this.vQueenCheck[u.popcnt() - 1 & 7], 0], .05),
            t.push(u),
            V = this.add(V, u))
        }
        b == Pieces.BISHOP && (u = D.copy().AND(Boards.LIGHT_SQUARES).notEmpty() ? 0 : 1,
        u = this.bishopPenalty[e][u],
        W[e] = this.add(W[e], u),
        V = this.sub(V, W[e], u),
        D.copy().AND(this.outPosts[d]).notEmpty() && (D = this.evalOutpost(d, Pieces.BISHOP, ca, D),
        V = this.add(V, D)),
        D = this.getPawns(e),
        D.OR(this.getPawns(c).AND(this.attackedBy[c][Pieces.PAWN]).AND_NOT(this.attackedBy[d][Pieces.PAWN])),
        this.getAttacks(Pieces.BISHOP, ca, D).AND(Evaluation.allKingAttacks[this.bitPos.kingPos(c)]).notEmpty() && (V = this.add(V, [5, 5])),
        1 < this.getAttacks(Pieces.BISHOP, ca, this.getAllPawns()).AND(Boards.CENTER).popcnt() && (V = this.add(V, 10, 0)));
        b == Pieces.ROOK && (V = this.add(V, this.rookBonus[d][ca >> 3]),
        this.relRank(ca, e) > Square.RANK_4 && (D = rankBB(ca & 7).AND(this.getPawns(c)).AND(this.attackedBy[c][Pieces.PAWN]),
        V = this.add(V, [0, D.popcnt()])),
        fileBB(ca >> 3).copy().AND(this.getQueens(d)).notEmpty() && (D = this.getQueens(d).LSB(),
        Evaluation.between[ca][D].copy().AND(this.getPawns(d)).empty() && (V = this.add(V, [4, 2]))));
        b == Pieces.QUEEN && (ca = this.getSliderStops(this.getRooks(c).OR(this.getBishops(c)), ca, c),
        ca.blockers.AND(this.getPieces(d)),
        D = ca.blockers.popcnt(),
        V = this.sub(V, [-2 * D, -1 * D]),
        E.push(ca.blockers.notEmpty() ? ca.blockers.LSB() : -1));
        h = this.add(h, V);
        k.push(V);
        l.push(this.scalarEv(V))
    }
    var J = [];
    k.forEach(function(Q) {
        J.push(Q[0])
    });
    var K = [];
    n.forEach(function(Q) {
        K.push(this.scalarEv(Q))
    }
    .bind(this));
    return {
        val: this.scalarEv(h),
        evs: k,
        area: p,
        areaBBs: v,
        kingAtt: F,
        weakAtt: C,
        checks: t,
        queenPins: E.length,
        bishPenalty: this.scalarEv(W[e]),
        queenPinCnt: function() {
            for (var Q = 0, Y = 0; Y < E.length; Y++)
                0 <= E[Q] && Q++;
            return Q
        },
        mob: K,
        p: b,
        getVal: function(Q) {
            return l[Q]
        },
        getNVals: function() {
            return z.length
        },
        getDiodColor: function(Q) {
            return Evaluation.getValColor(this.getVal(Q), P, X, 0, 130)
        },
        getDiodGradient: function(Q) {
            return Evaluation.getGradient(this.getDiodColor(Q))
        },
        getDiodBlinks: function(Q) {
            return this.getVal(Q) > X + 5
        },
        getDiodText: function(Q) {
            return this.getVal(Q)
        },
        getDiodSq: function(Q) {
            return z[Q]
        },
        getDiodTip: function(Q) {
            return String.f("{0} {1} ", this.getStrPiece(), CB.Square.toString(z[Q]))
        },
        getStrPiece: function() {
            return ["Bishop", "Rook", "Queen"][b - 2]
        },
        str: function() {
            return String.f("{0}{1}={2}, Sqs={3}", ["Bish", "Rook", "Queen"][b - 2], ["W", "B"][e], this.val, Evaluation.debugSqs(z))
        },
        dbg: function() {
            var Q = String.f("Tot={0}, Mob={1}, Area={2}, King={3}", J, K, p, q);
            b == Pieces.QUEEN ? Q += String.f(", qPins={0}", E) : b == Pieces.BISHOP && (Q += String.f(", Penalty={0}", this.bishPenalty));
            this.checks.length && (Q += String.f(", checks={0}", this.checks));
            return Q
        },
        test: []
    }
}
;
Evaluation.prototype.evalOutpost = function(e, b, d, c) {
    var f = this.relSq(d, e);
    f = b == Pieces.KNIGHT ? this.vOutpostBonus[f - 3 - 8] : this.vOutpostBonus[f + 1 - 8];
    var g = 3 & this.pos.countPieces(CB.Piece.KNIGHT + (e ? 8 : 0));
    (Boards.LIGHT_SQUARES.copy().AND(c).notEmpty() ? Boards.LIGHT_SQUARES.copy() : Boards.DARK_SQUARES.copy()).AND(this.getBishops(1 - e)).notEmpty() && (g += 4);
    c.copy().AND(this.attackedBy[e][Pieces.PAWN]).notEmpty() && (g += 8);
    b == Pieces.BISHOP && (g += 16);
    f = f * this.vOutpostFactor[g] >> 4;
    c.copy().AND(this.outPosts2[e]).notEmpty() && (f = 15 * f >> 6);
    b == Pieces.KNIGHT && (b = Evaluation.allKnightAttacks[d].copy().AND(this.outPosts[e]),
    b.AND(this.attackedBy[e][Pieces.PAWN]),
    b.notEmpty() && (f += f / 8));
    return f
}
;
Evaluation.prototype.evalPawns = function() {
    var e = twoZeroBB()
      , b = twoZeroBB();
    this.outPosts = [Boards.OUTPOSTAREAS[0].copy(), Boards.OUTPOSTAREAS[1].copy()];
    this.passedPawns = twoZeroBB();
    this.weakPawns = twoZeroBB();
    this.candidatePawns = [allSetBB(), allSetBB()];
    for (var d = [[0, 0], [0, 0]], c = [0, 0], f = [0, 0], g = [0, 0], h = [[0, 0], [0, 0]], k = [], l = [[], []], m = 0; 2 > m; m++) {
        var n = m ? 1 : 0
          , p = 1 - n
          , q = this.getPawns(n)
          , t = this.getPawns(p)
          , v = q.copy()
          , z = [0, 0];
        for (k[m] = []; !v.empty(); ) {
            var E = v.popLSB()
              , C = squareBB(E)
              , F = E >> 3
              , P = E & 7
              , X = this.relRank(E, n);
            z = this.mult(this.pstPawn[this.relSq(E, n)], .3);
            z = this.add(z, [2, 0]);
            d[m] = this.add(d[m], z);
            t.copy().AND(Evaluation.allPawnAttacks[n][E]).empty() && e[n].OR(fileBB(F));
            this.outPosts[p].AND_NOT(Evaluation.passedMask[m][E].copy().AND(Evaluation.neighbourFiles[F]));
            var W = !q.copy().AND(Evaluation.forward[m][E]).empty();
            W && (this.candidatePawns[p].AND_NOT(Evaluation.neighbourFiles[F]),
            this.candidatePawns[n].AND_NOT(C),
            z = this.sub(z, this.sDoubledPawn[F]),
            f[m]++);
            var V = t.copy().AND(Evaluation.passedMask[m][E]).empty();
            V && !W && this.passedPawns[m].OR(C);
            var ca = t.copy().AND(Evaluation.forward[m][E]).empty() ? 0 : 1
              , u = q.copy().AND(Evaluation.neighbourFiles[F]).empty();
            u ? (b[m].OR(Evaluation.passedMask[m][E].copy().OR(C)),
            V || this.weakPawns[m].OR(C),
            this.candidatePawns[m].AND_NOT(fileBB(F)),
            z = this.sub(z, this.sIsolatedPawn[8 * ca + F])) : q.copy().AND(Evaluation.allPawnAttacks[p][E]).empty() && (z = this.sub(z, [1, 2]));
            var D = !rankBB(P).OR(rankBB(P - 1 + 2 * m)).AND(Evaluation.neighbourFiles[F]).AND(q).empty();
            D && (z = this.add(z, this.sConnectedPawn[6 * F + X - 1]));
            var B = !t.copy().AND(Evaluation.allPawnAttacks[m][E]).empty();
            B && (z = this.add(z, this.sPawnLever[X]));
            !(V | u | D | B) && X <= Square.RANK_4 && q.copy().AND(Evaluation.neighbourFiles[F]).AND(Evaluation.ranksInFront[p][P]).empty() && (P = 0 == m ? Square.MD_FORWARD : Square.MD_BACK,
            X = E,
            V = t.copy().AND(Evaluation.allPawnAttacks[m][X + P]),
            V.empty() && q.copy().AND(Evaluation.allPawnAttacks[m][X]).empty() && (X += P,
            V = t.copy().AND(Evaluation.allPawnAttacks[m][X + P]),
            V.empty() && q.copy().AND(Evaluation.allPawnAttacks[m][X]).empty() && (X += P,
            V = t.copy().AND(Evaluation.allPawnAttacks[m][X + P]),
            V.empty() && q.copy().AND(Evaluation.allPawnAttacks[m][X]).empty() && (X += P,
            V = t.copy().AND(Evaluation.allPawnAttacks[m][X + P])))),
            V.empty() ? z = this.sub(z, [0, 1]) : (this.weakPawns[n].OR(C),
            u = 0,
            ca || W ? (u += 16,
            t.isSet(X + P) && (u += 8)) : 1 < V.popcnt() && (u += 8),
            z = this.sub(z, this.sBackwardPawn[F + u]),
            this.candidatePawns[m].AND_NOT(C)));
            C = .5 * this.pawnAtKingZone(m, E);
            g[m] += C;
            z = this.add(z, [C, .1 * C]);
            h[m] = this.add(h[m], z);
            k[m].push(z[0]);
            l[m].push(E)
        }
        2E3 < this.pieceMaterial() && (n = m ? Boards.BLACK_SPACE.copy() : Boards.WHITE_SPACE.copy(),
        n.AND_NOT(this.getPawns(m)),
        n.AND_NOT(this.getAttackedByPiece(p, Pieces.PAWN)),
        p = this.pawnSpace(m).copy().AND(n).AND_NOT(this.getAttackedBy(p)),
        c[m] = p.popcnt(),
        h[m][0] += c[m])
    }
    m = this.getPawns(0);
    p = this.getPawns(1);
    n = e[0].copy().AND_NOT(e[1]);
    e = e[1].copy().AND_NOT(e[0]);
    this.candidatePawns[0].AND(n.copy().AND(m).AND_NOT(this.passedPawns[0]));
    this.candidatePawns[1].AND(e.copy().AND(p).AND_NOT(this.passedPawns[1]));
    for (e = 0; 2 > e; e++)
        for (n = this.candidatePawns[e].copy(); n.notEmpty(); )
            q = n.popLSB(),
            q = this.relRank(q, e),
            h[e] = this.add(h[e], this.sCandidatePawn[q - 1]);
    b = b[0].copy().AND(b[1]).AND(rankBB(2).OR(rankBB(5)));
    b.empty() || (e = b.copy().AND(rankBB(5)).popcnt(),
    h[0] = this.add(h[0], [e, -e]),
    b = b.copy().AND(rankBB(2)).popcnt(),
    h[1] = this.add(h[1], [b, -b]));
    b = this.passedPawns[0].copy().OR(this.candidatePawns[0]);
    b.empty() || p.empty() || !(b.MSB() >> 3 > p.MSB() >> 3 || b.LSB() >> 3 < p.LSB() >> 3) || (h[0] = this.add(h[0], [-3, 8]));
    b = this.passedPawns[1].copy().OR(this.candidatePawns[1]);
    b.empty() || m.empty() || !(b.MSB() >> 3 > m.MSB() >> 3 || b.LSB() >> 3 < m.LSB() >> 3) || (h[1] = this.add(h[1], [-3, 8]));
    this.passedPawns[0].AND(Boards.PASSEDPAWN_RANKS[0]);
    this.passedPawns[1].AND(Boards.PASSEDPAWN_RANKS[1]);
    b = Boards.CENTER.copy().AND(this.getPawns(0)).notEmpty();
    e = Boards.CENTER.copy().AND(this.getPawns(1)).notEmpty();
    b && !e && (h[0][0] += 3);
    e && !b && (h[1][0] += 3);
    this.calcPawnFeatures(m, p);
    b = this.attackedBy[0][Pieces.PAWN].copy().AND(this.getPawns(1));
    e = [];
    m = this.getPawns(0).popcnt() - this.getPawns(1).popcnt();
    0 <= m ? (h[0][0] += 6 * m,
    h[0][1] += 8 * m) : (h[1][0] -= 6 * m,
    h[1][1] -= 8 * m);
    for (m = {
        $jscomp$loop$prop$c$83$210: 0
    }; 2 > m.$jscomp$loop$prop$c$83$210; m = {
        $jscomp$loop$prop$c$83$210: m.$jscomp$loop$prop$c$83$210
    },
    m.$jscomp$loop$prop$c$83$210++)
        p = this.getPawns(m.$jscomp$loop$prop$c$83$210),
        p = m.$jscomp$loop$prop$c$83$210 ? p.makeS() : p.makeN(),
        p.AND_NOT(this.getAllPawns()),
        n = p.copy().AND(Boards.CENTER),
        e[m.$jscomp$loop$prop$c$83$210] = {
            val: this.scalarEv(h[m.$jscomp$loop$prop$c$83$210]),
            nWeak: this.weakPawns[m.$jscomp$loop$prop$c$83$210].popcnt(),
            nPassed: this.passedPawns[m.$jscomp$loop$prop$c$83$210].popcnt(),
            nDoubled: f[m.$jscomp$loop$prop$c$83$210],
            blocked: this.cntBlockedPawns[m.$jscomp$loop$prop$c$83$210],
            nCandidates: this.candidatePawns[m.$jscomp$loop$prop$c$83$210].popcnt(),
            pushCnt: p.popcnt(),
            centerPushCnt: n.popcnt(),
            tension: b.popcnt(),
            space: c[m.$jscomp$loop$prop$c$83$210],
            pst: d[m.$jscomp$loop$prop$c$83$210],
            pawnEvs: k[m.$jscomp$loop$prop$c$83$210],
            sqs: l[m.$jscomp$loop$prop$c$83$210],
            kring: g[m.$jscomp$loop$prop$c$83$210],
            str: function(H) {
                return function() {
                    return String.f("Pawns{0}={1}", ["W", "B"][H.$jscomp$loop$prop$c$83$210], this.val)
                }
            }(m),
            dbg: function() {
                return String.f("Weak={0}, Pass={1}, Doubl={2}, Cand={3}, Evals={4}, Blockd={5}, PushCnt={6}/{7}, Tens={8}, Space={9}, KRing={10}, pst={11}", this.nWeak, this.nPassed, this.nDoubled, this.nCandidates, vecOut(this.pawnEvs), this.blocked, this.pushCnt, this.centerPushCnt, this.tension, this.space.toFixed(1), this.kring.toFixed(1), vecOut(this.pst))
            },
            getNVals: function() {
                return this.sqs.length ? 1 : 0
            },
            getVal: function() {
                var H = this.val;
                this.passed && (H += this.passed.val);
                return H
            },
            getDiodColor: function() {
                return Evaluation.getValColor(this.getVal(), -10, 30, 0, 130)
            },
            getDiodGradient: function(H) {
                return Evaluation.getGradient(this.getDiodColor(H))
            },
            getDiodBlinks: function() {
                return !1
            },
            getDiodText: function() {
                return this.getVal()
            },
            getDiodTip: function() {
                return "Pawns"
            }
        };
    e[0].test = [];
    return e
}
;
Evaluation.prototype.pawnAtKingZone = function(e, b) {
    var d = this.bitPos.kingPos(1 - e);
    d = Evaluation.kingZone[d].copy();
    var c = this.kingRing[1 - e].copy().AND_NOT(d).AND(Evaluation.allPawnAttacks[e][b]);
    d.AND(Evaluation.allPawnAttacks[e][b]);
    b = c.popcnt();
    b += 3 * d.popcnt();
    return b *= Math.sqrt(this.attackPotential[e] + 1)
}
;
Evaluation.prototype.calcPawnFeatures = function(e, b) {
    var d = [Boards.OUTPOSTAREAS[0].copy(), Boards.OUTPOSTAREAS[1].copy()];
    this.outPosts2 = twoZeroBB();
    var c = d[0].copy().AND_NOT(this.outPosts[0].copy().OR(this.getAllPawns()));
    for (c.AND(this.attackedBy[0][Pieces.PAWN]).AND_NOT(this.attackedBy[1][Pieces.PAWN]); c.notEmpty(); ) {
        var f = c.popLSB();
        if (f >= -Square.MD_FL) {
            var g = squareBB(f);
            f += Square.MD_FL;
            var h = squareBB(f);
            if (e.copy().AND(h).notEmpty() || Evaluation.forward[0][f].copy().AND(b).empty() || h.copy().AND(this.attackedBy[0][Pieces.PAWN]).AND_NOT(this.attackedBy[1][Pieces.PAWN]).notEmpty())
                f += 2 * Square.MD_RIGHT,
                f <= Square.H8 && (h = squareBB(f),
                (e.copy().AND(h).notEmpty() || Evaluation.forward[0][f].copy().AND(b).empty() || h.copy().AND(this.attackedBy[0][Pieces.PAWN]).AND_NOT(this.attackedBy[1][Pieces.PAWN]).notEmpty()) && this.outPosts2[0].OR(g))
        }
    }
    c = d[1].copy().AND_NOT(this.outPosts[1].copy().OR(this.bitPos.bitboards[Pieces.PAWN]));
    for (c.AND(this.attackedBy[1][Pieces.PAWN]).AND_NOT(this.attackedBy[0][Pieces.PAWN]); c.notEmpty(); )
        if (d = c.popLSB(),
        d >= -Square.MD_BL && (f = squareBB(d),
        d += Square.MD_BL,
        g = squareBB(d),
        b.copy().AND(g).notEmpty() || Evaluation.forward[1][d].copy().AND(e).empty() || g.copy().AND(this.attackedBy[1][Pieces.PAWN]).AND_NOT(this.attackedBy[0][Pieces.PAWN]).notEmpty()))
            d += 2 * Square.MD_RIGHT,
            d <= Square.H8 && (g = squareBB(d),
            (b.copy().AND(g).notEmpty() || Evaluation.forward[1][d].copy().AND(e).empty() || g.copy().AND(this.attackedBy[1][Pieces.PAWN]).AND_NOT(this.attackedBy[0][Pieces.PAWN]).notEmpty()) && this.outPosts2[1].OR(f));
    this.outPosts[0].OR(this.outPosts2[0]);
    this.outPosts[1].OR(this.outPosts2[1]);
    b = b.makeS().AND(e);
    e = 4 * (2 <= Boards.LIGHT_INNER.copy().AND(b).popcnt() ? 1 : 0);
    b = 4 * (2 <= Boards.DARK_INNER.copy().AND(b).popcnt() ? 1 : 0);
    c = 3 <= Boards.LIGHT_INNER.copy().AND(this.getPawns(0)).popcnt() ? 1 : 0;
    d = 3 <= Boards.LIGHT_INNER.copy().AND(this.getPawns(1)).popcnt() ? 1 : 0;
    f = Boards.LIGHT_CENTER.copy().AND(this.getPawns(0)).popcnt();
    g = Boards.LIGHT_CENTER.copy().AND(this.getPawns(1)).popcnt();
    h = b + 2 * d + c;
    this.bishopPenalty[0][0] = this.add(this.sBishopPawnColor[e + 2 * c + d], f);
    this.bishopPenalty[1][0] = this.add(this.sBishopPawnColor[h], g);
    c = 3 <= Boards.DARK_INNER.copy().AND(this.getPawns(0)).popcnt() ? 1 : 0;
    d = 3 <= Boards.DARK_INNER.copy().AND(this.getPawns(1)).popcnt() ? 1 : 0;
    f = Boards.DARK_CENTER.copy().AND(this.getPawns(0)).popcnt();
    g = Boards.DARK_CENTER.copy().AND(this.getPawns(1)).popcnt();
    h = e + 2 * d + c;
    this.bishopPenalty[0][1] = this.add(this.sBishopPawnColor[b + 2 * c + d], f);
    this.bishopPenalty[1][1] = this.add(this.sBishopPawnColor[h], g);
    for (e = 0; 8 > e; e++)
        this.kingFileQuality[e] = 5;
    for (e = 0; 8 > e; e++)
        this.rookBonus[0][e] = [0, 0],
        this.rookBonus[1][e] = [0, 0],
        fileBB(e).AND(this.getAllPawns()).empty() ? (this.rookBonus[0][e] = [12, 0],
        this.rookBonus[1][e] = [12, 0],
        this.kingFileQuality[e] -= 3,
        0 < e && this.kingFileQuality[e - 1]--,
        7 > e && this.kingFileQuality[e + 1]--) : fileBB(e).AND(this.getPawns(0)).empty() ? (this.rookBonus[0][e] = [6, 13],
        this.kingFileQuality[e] -= 2) : fileBB(e).AND(this.getPawns(1)).empty() && (this.rookBonus[1][e] = [6, 13],
        this.kingFileQuality[e] -= 2)
}
;
Evaluation.prototype.pawns = function() {
    var e = this.evalPawns();
    e[0].passed = this.evalPassed(0);
    e[1].passed = this.evalPassed(1);
    return e
}
;
Evaluation.prototype.evalKings = function(e) {
    var b = this.evalKingPawns(e, 0 != (this.pos.cr & (e ? CB.V15t.V15z : CB.V15t.V15y)))
      , d = this.evalKingSafety(e, 25 <= this.phaseScaleKingSafety ? 1 : 0);
    ObjUtil.copyTo(d, b);
    b.val = .3 * this.scaleKingSafety(64, this.phaseScaleKingSafety, b.val);
    b.val += .1 * this.scalarEv(b.pst);
    this.safety = d = 1.2 * this.scaleKingSafety(64, this.phaseScaleKingSafety, d.safety);
    b.val += d;
    b.str = function() {
        return String.f("King{0}={1},evSh={2}", ["W", "B"][e], this.val.toFixed(3), this.ev)
    }
    ;
    b.dbg = function() {
        return String.f("Shelt={0}/Storm={1}/Safe={2}(atts={3}), pst={4}/file={5}", this.shelter, this.storm, this.safety, this.nAtts, this.pst, this.fileQual)
    }
    ;
    b.getNVals = function() {
        return 1
    }
    ;
    b.getVal = function() {
        var c = this.val;
        return c -= this.myDistToPasseds / 5 - this.oppDistToPasseds / 40
    }
    ;
    b.getDiodColor = function() {
        return Evaluation.getValColor(this.getVal(), -40, 30, 0, 130)
    }
    ;
    b.getDiodGradient = function(c) {
        return Evaluation.getGradient(this.getDiodColor(c))
    }
    ;
    b.getDiodBlinks = function() {
        return !1
    }
    ;
    b.getDiodText = function() {
        return Math.round(this.getVal())
    }
    ;
    b.getDiodTip = function() {
        return "King"
    }
    ;
    return b
}
;
Evaluation.prototype.evalKingPawns = function(e, b) {
    var d = this.bitPos.kingPos(e)
      , c = this.compareShelter(e);
    b ? (b = this.pos.getCastleRights(),
    e && (b >>= 2),
    this.psKing[e] = this.sCastlingBonus[b & 3]) : this.psKing[e] = this.pstKing[this.relSq(d, e)];
    d >> 3 == Square.FILE_E && (this.psKing[e] = this.add(this.psKing[e], [-150, 0]));
    this.pawnStormDanger[e] = .05 * c.storm2;
    return {
        ev: c.ev,
        val: c.val2,
        shelter: c.shelter2,
        storm: c.storm2,
        pst: this.psKing[e],
        fileQual: c.fileQual,
        test: c.test
    }
}
;
Evaluation.prototype.compareShelter = function(e) {
    var b = this.bitPos.kingPos(e);
    b = this.evalShelter(e, b);
    if (0 != (this.pos.cr & (e ? CB.V15t.V15z : CB.V15t.V15y))) {
        if (e && this.pos.cr & CB.V15t.V15x || !e && this.pos.cr & CB.V15t.V15v) {
            var d = this.evalShelter(e, this.relSq(Square.G1, e));
            d.ev[0] > b.ev[0] && (b = d)
        }
        if (e && this.pos.cr & CB.V15t.V15w || !e && this.pos.cr & CB.V15t.V15u)
            e = this.evalShelter(e, this.relSq(Square.C1, e)),
            e.ev[0] > b.ev[0] && (b = e)
    }
    return b
}
;
Evaluation.prototype.evalShelter = function(e, b) {
    var d = [[-10, 40, 45, 35, 30, 15, 20], [-40, 35, 25, -40, -20, -10, -6], [-10, 40, 15, -2, 20, 3, -30], [-30, -10, -20, -40, -40, -60, -140]]
      , c = [[70, -150, -100, 70, 50, 30, 10], [35, -15, 90, 30, 25, -5, 3], [-5, 40, 130, 20, 0, -10, -5], [-8, -6, 70, 5, 8, -7, -15]]
      , f = e ? 1 : 0
      , g = e ? 0 : 1;
    e = this.getPawns(f).AND_NOT(Evaluation.forward[g][b]);
    g = this.getPawns(g).AND_NOT(Evaluation.forward[g][b]);
    var h = [0, 0]
      , k = [0, 0]
      , l = [0, 0];
    b >>= 3;
    h[0] += 2 * this.kingFileQuality[b];
    b < Square.FILE_B && (b = Square.FILE_B);
    b > Square.FILE_G && (b = Square.FILE_G);
    for (var m = b - 1; m <= b + 1; m++) {
        var n = e.copy().AND(fileBB(m))
          , p = f ? n.MSB() : n.LSB()
          , q = n.notEmpty() ? this.relRank(p, f) : 0;
        n = g.copy().AND(fileBB(m));
        p = f ? n.MSB() : n.LSB();
        n = n.notEmpty() ? this.relRank(p, f) : 0;
        var t = Math.min(m, Square.FILE_H - m);
        h = this.add(h, [d[t][q], 0]);
        q && q == n - 1 ? n == Square.RANK_3 && (k[0] += 40,
        k[1] += 40) : (q = c[t][n],
        0 == t && 1 <= n && 2 >= n && (t = Boards.FILE_G,
        0 == m && t == Boards.FILE_B,
        g.copy().AND(t).notEmpty() || this.attackedBy[f][Pieces.PAWN].copy().AND(squareBB(p)).notEmpty()) && (q = 120 - 20 * n),
        k = this.add(k, [q, 0]))
    }
    l = this.sub(l, k);
    l = this.add(l, h);
    return {
        ev: l,
        val2: this.scalarEv(l),
        shelter2: this.scalarEv(h),
        storm2: this.scalarEv(k),
        fileQual: this.kingFileQuality[b],
        test: []
    }
}
;
Evaluation.prototype.evalKingSafety = function(e, b) {
    if (!this.numKingAttackers[1 - e] && 25 > this.attackPotential[1 - e])
        return {
            safety: 0,
            nAtts: 0
        };
    var d = this.bitPos.kingPos(e)
      , c = 0
      , f = e ? 1 : 0;
    e = e ? 0 : 1;
    var g = this.attackedByAny[e].copy().AND(this.attackedBy[f][Pieces.KING]).AND_NOT(this.attackedByTwo[f])
      , h = this.vKingsafetyFactor[2 + 5 * b]
      , k = this.vKingsafetyFactor[3 + 5 * b]
      , l = this.vKingsafetyFactor[4 + 5 * b]
      , m = (this.numKingAttackers[e] * this.kingAttackPower[e] >> 3) + this.pawnStormDanger[f] + this.vKingsafetyFactor[5 * b] * this.closeKingAttackers[e] + this.vKingsafetyFactor[1 + 5 * b] * g.popcnt();
    m += h * (this.pinned[f].popcnt() ? 1 : 0);
    m += k * (4 * (this.attackPotential[e] - 20) - this.attackPotential[f]) >> 3;
    h = this.getKnights(f).OR(this.getBishops(f));
    if (h.notEmpty()) {
        for (var n = k = 0; h.notEmpty(); )
            n += Evaluation.kingDistance[d][h.popLSB()],
            k += 4;
        m += l * n / k - 9
    }
    l = this.attackedBy[e][Pieces.KNIGHT].copy().OR(this.attackedBy[e][Pieces.BISHOP]);
    l.AND(this.kingRing[f]).empty() && (l = this.attackedBy[f][Pieces.KNIGHT].copy().OR(this.attackedBy[f][Pieces.BISHOP]),
    l.AND(this.kingRing[f]).notEmpty() && (m -= 5));
    l = this.attackedBy[e][Pieces.QUEEN].copy().AND(this.attackedBy[f][Pieces.KING]).AND_NOT(this.getPieces(e));
    l.notEmpty() && (l.AND(this.attackedBy[e][Pieces.PAWN].copy().OR(this.attackedBy[e][Pieces.KNIGHT]).OR(this.attackedByPiece[e][Pieces.BISHOP]).OR(this.attackedByPiece[e][Pieces.ROOK])),
    l.copy().AND(g).notEmpty() && (h = l.copy().AND(g).popcnt(),
    m += this.vQueenContactCheck[h - 1],
    h = this.attackedBy[f][Pieces.KING].copy().AND_NOT(this.getPieces(f)).AND_NOT(this.attackedByAny[e]),
    h = Math.min(3, h.popcnt()),
    k = this.pos.getSideToMove() == f ? 1 : 0,
    m *= this.vEvasionBonus[4 * k + h]),
    l = l.copy().AND_NOT(g),
    b && l.notEmpty() && (m += this.vUnsafeQueenContactCheck[l.popcnt() - 1]));
    l = g.copy().AND(this.attackedByPiece[e][Pieces.ROOK]).AND_NOT(this.getPieces(e));
    l.notEmpty() && (l.AND(this.attackedBy[e][Pieces.PAWN].copy().OR(this.attackedBy[e][Pieces.KNIGHT]).OR(this.attackedByPiece[e][Pieces.BISHOP]).OR(this.attackedByPiece[e][Pieces.QUEEN])),
    g = l.popcnt(),
    m += this.vRookContactCheck[g]);
    m = Math.max(0, m);
    if (b) {
        b = this.getPieces(e).OR(this.attackedByAny[f]).NOT();
        f = this.attackedBy[f][Pieces.PAWN].copy().OR(this.getPawns(e)).NOT();
        g = this.getAttacks(Pieces.ROOK, d, this.getAllPieces());
        h = this.getAttacks(Pieces.BISHOP, d, this.getAllPieces());
        l = g.copy().OR(h).AND(b).AND(this.attackedBy[e][Pieces.QUEEN]);
        l.notEmpty() && (m += this.vQueenCheck[l.popcnt() - 1 & 7]);
        l = g.copy().AND(b).AND(this.attackedBy[e][Pieces.ROOK]);
        l.notEmpty() && (m += this.vRookCheck[l.popcnt() - 1 & 3]);
        l = h.copy().AND(b).AND(this.attackedBy[e][Pieces.BISHOP]);
        l.notEmpty() && (m += this.vBishopCheck[l.popcnt() - 1 & 1]);
        l = h.copy().AND(f).AND(this.attackedBy[e][Pieces.BISHOP]);
        l.notEmpty() && (c -= this.vCheckThreat[1]);
        l = Evaluation.allKnightAttacks[d].copy().AND(this.attackedByPiece[e][Pieces.KNIGHT]).AND(b);
        if (l.notEmpty())
            for (m += this.vKnightCheck[l.popcnt() - 1 & 3],
            b = zeroBB(); l.notEmpty(); )
                b.OR(Evaluation.allKnightAttacks[l.popLSB()]),
                1 < b.AND(this.getKnights(e)).popcnt() && (m += 12);
        l = Evaluation.allKnightAttacks[d].copy().AND(this.attackedByPiece[e][Pieces.KNIGHT]).AND(f);
        l.notEmpty() && (c -= this.vCheckThreat[0]);
        c += -Math.min(440, (-m + 168 * m * m) / 32768)
    } else
        c = -Math.min(450, (-m + 117 * m * m) / 32768);
    return {
        safety: Math.round(1E5 * c) / 1E5,
        nAtts: Math.round(100 * m) / 100
    }
}
;
Evaluation.prototype.kings = function() {
    return [this.evalKings(0), this.evalKings(1)]
}
;
Evaluation.prototype.evalAttacks = function(e) {
    var b = this.bitPos.kingPos(e)
      , d = [0, 0]
      , c = !1
      , f = e ? 1 : 0
      , g = e ? 0 : 1
      , h = [0, 0]
      , k = [0, 0]
      , l = [0, 0];
    if (this.relRank(b, e) == Square.RANK_1) {
        var m = Boards.RELATIVE_RANK[e][Square.RANK_1].copy().AND(this.attackedByPiece[g][Pieces.ROOK].copy().OR(this.attackedByPiece[g][Pieces.QUEEN])).AND_NOT(this.attackedByAny[f]);
        m.notEmpty() && (m = Boards.RELATIVE_RANK[e][Square.RANK_2].copy().AND(Evaluation.allKingAttacks[b]).AND_NOT(this.getPieces(f).OR(this.attackedByAny[g])),
        m.empty() && (c = !0))
    }
    var n = this.getPieces(f).AND(this.attackedByPiece[g][Pieces.KING]).AND_NOT(this.attackedByPiece[f][Pieces.PAWN]);
    n.notEmpty() && (b = 3 * Math.min(2, n.copy().AND(this.getPawns(f)).popcnt()),
    b += Math.min(2, n.copy().AND_NOT(this.getPawns(f)).popcnt()),
    d = this.sub(d, this.sKingAttacks[b]));
    b = [0, 0];
    m = [0, 0];
    var p = 0
      , q = 0;
    n = this.getPieces(f).XOR(this.getPawns(f)).XOR(this.getKing(f)).AND(this.attackedByAny[g]);
    h[f] = n.popcnt();
    var t = 0
      , v = new Att
      , z = ObjUtil.clone(this.pos);
    for (z.getSideToMove() == e && z.canMakeNullMove() && z.makeNullMove(); n.notEmpty(); ) {
        var E = n.popLSB()
          , C = squareBB(E)
          , F = BitPos.toBitPiece(this.pos.board[E])
          , P = this.pos.getSideToMove() == f ? 1 : 0
          , X = this.attackedByPiece[g][Pieces.PAWN].copy();
        F > Pieces.BISHOP && (X.OR(this.attackedByPiece[g][Pieces.KNIGHT].copy().OR(this.attackedByPiece[g][Pieces.BISHOP])),
        F > Pieces.ROOK && X.OR(this.attackedByPiece[g][Pieces.ROOK]));
        X = C.copy().AND(X).notEmpty();
        P += X ? 2 : 0;
        X = C.copy().AND(this.attackedByAny[f]).notEmpty();
        P += X ? 4 : 0;
        C = C.copy().AND(this.getPinned()).notEmpty();
        P += C ? 8 : 0;
        F = Evaluation.attackParams[F - Pieces.KNIGHT][P];
        b = this.add(b, F.scAttack);
        m = this.add(m, F.scHanging);
        p += F.hanging;
        q += F.badness;
        E = v.calcAll(z, E);
        t += Math.abs(E)
    }
    n = this.getPawns(e);
    for (E = 0; n.notEmpty(); )
        F = n.popLSB(),
        (F = v.calcAll(z, F)) && E++,
        t += Math.abs(F);
    q = Math.min(15, q);
    b = this.mult(b, this.vAttackBadness[q] / 64);
    d = this.sub(d, b);
    h[f] += .6 * E;
    v = this.getPawns(f).AND(this.attackedByPiece[f][Pieces.PAWN]).AND(this.attackedByAny[g]).popcnt();
    h[f] += .3 * v;
    v = this.getPawns(f);
    v = f ? v.makeS() : v.makeN();
    v.AND_NOT(this.getAllPieces());
    z = v.copy().AND(f ? Boards.RANK6 : Boards.RANK3);
    z = f ? z.makeS() : z.makeN();
    v.OR(z.AND_NOT(this.getAllPieces()));
    z = this.attackedByAll[g].copy().NOT().OR(this.attackedByAll[f]).AND_NOT(this.attackedBy[g][Pieces.PAWN]);
    v.AND(z);
    v = this.makePawnAtt(v, f).AND(this.getPieces(g).AND_NOT(this.getPawns(g)));
    k[e] = v.popcnt();
    d = this.add(d, this.mult(this.sPawnThreat, k[e]));
    v = this.attackedBy[g][Pieces.PAWN].copy().OR(this.attackedByTwo[g].copy().AND_NOT(this.attackedByTwo[f]));
    v = this.attackedByAll[g].copy().AND_NOT(v).AND(this.attackedByAll[f]).AND_NOT(this.getAllPieces()).AND_NOT(this.attackedBy[f][Pieces.PAWN]);
    l[e] = v.popcnt();
    z = this.getPieces(f).AND_NOT(this.attackedByAny[g]).AND_NOT(this.attackedByAny[f]).AND_NOT(this.getKing(f));
    for (v = [0, 0]; z.notEmpty(); ) {
        n = z.popLSB();
        for (E = Evaluation.allBishopAttacks[n].copy().AND(this.getBishops(g).OR(this.getQueens(g))); E.notEmpty(); )
            F = E.popLSB(),
            Evaluation.between[n][F].copy().AND(this.getPieces(f).OR(this.getPawns(g))).empty() && 1 == Evaluation.between[n][F].copy().AND(this.getPieces(g).AND_NOT(this.blockedPawns[g])).popcnt() && (v = this.add(v, this.matVal[BitPos.toBitPiece(this.pos.board[n])]));
        for (E = Evaluation.allRookAttacks[n].copy().AND(this.getRooks(g).OR(this.getQueens(g))); E.notEmpty(); )
            F = E.popLSB(),
            Evaluation.between[n][F].copy().AND(this.getPieces(f).OR(this.getPawns(g))).empty() && 1 == Evaluation.between[n][F].copy().AND(this.getPieces(g).AND_NOT(this.blockedPawns[g])).popcnt() && (v = this.add(v, this.matVal[BitPos.toBitPiece(this.pos.board[n])]))
    }
    f = this.attackedByTwo[e].copy().AND(this.getPieces(1 - e)).popcnt();
    g = this.attackedByTwo[1 - e].copy().AND(this.getPieces(e)).popcnt();
    return {
        val: this.scalarEv(d),
        oppVal: 0,
        test: [],
        weakBack: c ? 1 : 0,
        hanging: p,
        badness: q,
        scHanging: m,
        scAttack: b,
        nAttacked: h[e],
        nTwiceAttacked: g,
        nAttackingTwice: f,
        pawnAttacks: k[e],
        controlThem: l[e],
        potential: this.attackPotential[e],
        undefendedVal: this.scalarEv(v) / 300,
        attackedVal: t,
        str: function() {
            return String.f("AttackVal{0}={1}", ["W", "B"][e], this.val)
        },
        dbg: function() {
            return String.f("WeakBR={0}, hanging={1}, badness={2}, nAttacked={3}, twice={4}, pushAtt={5}, control={6}, undefVal={7}, potntl={8}, matVal={9}", this.weakBack, this.hanging, this.badness, this.nAttacked.toFixed(1), this.nTwiceAttacked, this.pawnAttacks, this.controlThem, this.undefendedVal.toFixed(1), this.potential, this.attackedVal)
        },
        squareDiod: !0,
        getDiodVal: function() {
            return this.val - Math.pow(t, .7) - 4 * this.nAttacked - 4 * this.nTwiceAttacked
        },
        getNVals: function() {
            return 1
        },
        getDiodGradient: function() {
            for (var W = this.oppVal, V = [0, 10, 20, 40, 60, 90, 120], ca = 0, u = 0; u < V.length; u++)
                W > V[u] && (ca = u);
            V = [[0, 80], [20, 70], [30, 63], [40, 55], [50, 50], [60, 45], [70, 40], [75, 40]];
            W = String.f("hsl( {0}, {1}%, {2}% )", 340, V[ca][0], V[ca][1] + 4);
            ca = String.f("hsl( {0}, {1}%, {2}% )", 340, V[ca][0], V[ca][1] - 4);
            return String.f("background-image: radial-gradient( {0}, {1} )", W, ca)
        },
        getDiodBlinks: function() {
            return !1
        },
        getDiodText: function() {
            return Math.round(this.oppVal)
        }
    }
}
;
Evaluation.prototype.attacks = function() {
    var e = this.evalAttacks(0)
      , b = this.evalAttacks(1);
    b.oppVal = -e.getDiodVal();
    e.oppVal = -b.getDiodVal();
    return [e, b]
}
;
Evaluation.prototype.evalPassed = function(e) {
    var b = [0, 0];
    b = 1 - e;
    for (var d = 0, c = e ? Square.MD_BACK : Square.MD_FORWARD, f = this.passedPawns[e].copy(), g = [0, 0], h = [0, 0]; f.notEmpty(); ) {
        var k = f.popLSB()
          , l = k >> 3
          , m = this.relRank(k, e) - Square.RANK_4
          , n = Evaluation.allPawnAttacks[b][k].copy().AND(this.getPawns(e)).notEmpty() ? 1 : 0;
        g = this.add(g, this.sPPRankBonus[m + 4 * n]);
        g = this.add(g, this.sPPFileBonus[l]);
        3 > d && l < Square.FILE_H && f.copy().AND(fileBB(l + 1)).notEmpty() && (g = this.add(g, this.sConnectedPPBonus[d]),
        d++);
        l = k + c;
        n = Evaluation.kingDistance[this.bitPos.kingPos(e)][l];
        1 < n && 7 > n && Evaluation.kingPathNextStep[this.bitPos.kingPos(e)][l].copy().AND_NOT(this.attackedByAny[b].copy().OR(this.getPieces(e))).empty() && n++;
        n = this.sPPOwnKingDistance[n + 8 * m];
        h[e] += n[1];
        g = this.sub(g, n);
        n = Evaluation.kingDistance[this.bitPos.kingPos(b)][l];
        n = this.sPPOpponentKingDistance[n + 8 * m];
        h[b] += n[1];
        g = this.add(g, n);
        var p = Evaluation.forward[e][k].copy();
        n = p.copy();
        var q = Evaluation.forward[b][k].copy().AND(this.getAllRooks().OR(this.getAllQueens()));
        q.notEmpty() && q.AND(this.getAttacks(Pieces.ROOK, k, this.getAllPieces()));
        this.getPieces(e).AND(q).empty() && p.AND(this.attackedByAny[e]);
        this.getPieces(b).AND(q).empty() && n.AND(this.attackedByAny[b].copy().OR(this.getPieces(b)));
        l = squareBB(l);
        k = (p.copy().AND(l).notEmpty() ? 1 : 0) + (p.equals(Evaluation.forward[e][k]) ? 1 : 0);
        l = (n.copy().AND(l).empty() ? 1 : 0) + (n.empty() ? 1 : 0);
        g = this.add(g, this.sPPBlock[9 * m + 3 * k + l])
    }
    b = g;
    if (this.oppBishops)
        for (b[1] = this.scaleDiffBishops(this.ppScaleDown, b[1]),
        c = 0; 2 > c; c++)
            h[c] = this.scaleDiffBishops(.6 * this.ppScaleDown, h[c]);
    c = this.passedPawns[0].copy();
    f = this.passedPawns[1].copy();
    g = 0;
    c.notEmpty() && (g = c.copy().AND(Boards.RANK7).notEmpty() ? 5 : c.copy().AND(Boards.RANK6).notEmpty() ? 4 : c.copy().AND(Boards.RANK5).notEmpty() ? 3 : c.copy().AND(Boards.RANK4).notEmpty() ? 2 : 1);
    f.notEmpty() && (g = f.copy().AND(Boards.RANK2).notEmpty() ? g + 30 : f.copy().AND(Boards.RANK3).notEmpty() ? 24 : f.copy().AND(Boards.RANK4).notEmpty() ? 18 : f.copy().AND(Boards.RANK5).notEmpty() ? 12 : g + 6);
    m = 0;
    if (0 == e && c.notEmpty() || 1 == e && f.notEmpty())
        m = this.vFrontmostPP[g] / (4 + this.attackPotential[0] + this.attackPotential[1]),
        e && (m = -m),
        b[1] += m;
    return {
        val: this.scalarEv(b),
        connected: d,
        front: m,
        test: [],
        kingDist: [this.scalarEv([0, h[0]]), this.scalarEv([0, h[1]])],
        str: function() {
            return String.f("Passed{0}={1}", ["W", "B"][e], this.val)
        },
        dbg: function() {
            return String.f("KDistW={0}, B={1}, conn={2}, front={2}", this.kingDist[0], this.kingDist[1], this.connected, this.front)
        }
    }
}
;
Evaluation.prototype.passed = function() {
    return [this.evalPassed(0), this.evalPassed(1)]
}
;
Evaluation.prototype.scalarEv = function(e) {
    e = this.phaseScale * e[0] + (64 - this.phaseScale) * e[1];
    return Math.round(0 < e ? (e + 32) / 64 : (e - 32) / 64)
}
;
Evaluation.prototype.scaleKingSafety = function(e, b, d) {
    e *= d * b;
    return 0 < e ? (e + 2048) / 4096 : (e - 2048) / 4096
}
;
Evaluation.prototype.scaleDiffBishops = function(e, b) {
    e *= b;
    return 0 < e ? (e + 32) / 64 : (e - 32) / 64
}
;
Evaluation.prototype.testPST = function(e) {
    return {
        colSqs: this.toColors(this.pstKing, e, 1)
    }
}
;
Evaluation.prototype.testAttacks = function(e) {
    return [Evaluation.allPawnAttacks[0][Square.E4], Evaluation.allPawnAttacks[0][Square.A7], Evaluation.allPawnAttacks[1][Square.H2], Evaluation.allPawnAttacks[1][Square.D6]]
}
;
Evaluation.prototype.slidingAttack = function(e, b, d, c) {
    e = e.copy();
    var f = zeroBB();
    c = c * Constants.NUM_FILES + d;
    d = Boards.SLIDING_MASKS[1 + d];
    for (e.SHIFT(c); !e.AND(d).empty(); e.AND_NOT(b).SHIFT(c))
        f.OR(e);
    return f
}
;
Evaluation.prototype.testBetween = function(e) {
    return [Evaluation.between[Square.G7][Square.B2], Evaluation.between[Square.A2][Square.F7], Evaluation.between[Square.F8][Square.F1], Evaluation.between[Square.A8][Square.H8]]
}
;
Evaluation.prototype.testPinned = function(e) {
    e = new Evaluation(e);
    return [e.pinned[0], e.pinned[1], e.discoCandidates[0]]
}
;
Evaluation.prototype.testPawns = function(e) {
    var b = new Evaluation(e);
    b.evalPawns();
    var d = Boards.OUTPOSTAREAS[0].copy().AND_NOT(b.outPosts[0].copy().OR(b.bitPos.bitboards[Pieces.PAWN]));
    d.AND(b.attackedBy[0][Pieces.PAWN]).AND_NOT(b.attackedBy[1][Pieces.PAWN]);
    switch (e.numPly) {
    default:
    case 0:
        return [b.outPosts[0]];
    case 1:
        return [d];
    case 2:
        return [b.attackedBy[0][Pieces.PAWN]];
    case 3:
        return [b.attackedBy[1][Pieces.PAWN]];
    case 4:
        return [Boards.OUTPOSTAREAS[0]]
    }
}
;
Evaluation.prototype.testKnights = function(e) {
    new Evaluation(e);
    e = e.getSideToMove();
    for (var b = this.bitPos.getKnights(e), d = []; !b.empty(); ) {
        var c = b.popLSB();
        squareBB(c).copy().AND(this.pinned[e]).empty() ? (c = Evaluation.allKnightAttacks[c].copy(),
        d.push(c.copy().AND(this.mobilityArea[e]))) : d.push(zeroBB())
    }
    return d
}
;
Evaluation.prototype.testKings = function() {
    return []
}
;
Evaluation.prototype.testRooks = function() {
    this.evalSliders(0, Pieces.ROOK);
    return []
}
;
Evaluation.prototype.getPinned = function() {
    return this.pinned[0].copy().OR(this.pinned[1])
}
;
Evaluation.prototype.getAllPieces = function() {
    return this.bitPos.bitboards[Constants.ALL_WHITE].copy().OR(this.bitPos.bitboards[Constants.ALL_BLACK])
}
;
Evaluation.prototype.getPawns = function(e) {
    return this.bitPos.getPawns(e)
}
;
Evaluation.prototype.getAllPawns = function() {
    return this.bitPos.bitboards[Pieces.PAWN].copy()
}
;
Evaluation.prototype.getAllQueens = function() {
    return this.bitPos.bitboards[Pieces.QUEEN].copy()
}
;
Evaluation.prototype.getAllRooks = function() {
    return this.bitPos.bitboards[Pieces.ROOK].copy()
}
;
Evaluation.prototype.getAllBishops = function() {
    return this.bitPos.bitboards[Pieces.BISHOP].copy()
}
;
Evaluation.prototype.getRooks = function(e) {
    return this.bitPos.getRooks(e)
}
;
Evaluation.prototype.getKnights = function(e) {
    return this.bitPos.getKnights(e)
}
;
Evaluation.prototype.getBishops = function(e) {
    return this.bitPos.getBishops(e)
}
;
Evaluation.prototype.getQueens = function(e) {
    return this.bitPos.getQueens(e)
}
;
Evaluation.prototype.getKing = function(e) {
    return this.bitPos.getKing(e)
}
;
Evaluation.prototype.getPieces = function(e) {
    return this.bitPos.getPieces(e)
}
;
Evaluation.prototype.getNonPawns = function(e) {
    return this.getPieces(e).AND_NOT(this.getPawns(e))
}
;
Evaluation.prototype.getOccupied = function() {
    return this.bitPos.getOccupied()
}
;
Evaluation.prototype.getAttackedByPiece = function(e, b) {
    return this.attackedBy[e][b]
}
;
Evaluation.prototype.getAttackedBy = function(e) {
    return this.attackedByAll[e]
}
;
Evaluation.prototype.pawnSpace = function(e) {
    var b = this.getPawns(e);
    e ? (b.OR(b.copy().SHLEFT()),
    b.OR(b.copy().SHLEFT()),
    b.OR(b.copy().SHLEFT())) : (b.OR(b.copy().SHRIGHT()),
    b.OR(b.copy().SHRIGHT()),
    b.OR(b.copy().SHRIGHT()));
    return b
}
;
Evaluation.prototype.pieceMaterial = function() {
    for (var e = this.pos.board, b = 0, d = 0; 64 > d; d++) {
        var c = CB.Piece.V15k(e[d]);
        c != CB.Piece.V1kd && c != CB.Piece.KING && (b += Att.pieceVal(c))
    }
    return b
}
;
Evaluation.prototype.initStatics = function() {
    if (!(0 < Evaluation.bbSquare.length)) {
        for (var e = 0; 64 > e; e++)
            Evaluation.bbSquare.push(squareBB(e));
        e = [Square.MD_BACK + Square.MD_BL, Square.MD_BACK + Square.MD_BR, Square.MD_FORWARD + Square.MD_FL, Square.MD_FORWARD + Square.MD_FR, Square.MD_RIGHT + Square.MD_FR, Square.MD_RIGHT + Square.MD_BR, Square.MD_LEFT + Square.MD_FL, Square.MD_LEFT + Square.MD_BL];
        for (var b = 0; 8 > b; b++)
            for (var d = 0; 8 > d; d++) {
                var c = (b << 3) + d
                  , f = Evaluation.bbSquare[c].copy().XOR(fileBB(b).OR(rankBB(d)));
                Evaluation.allRookAttacks[c] = f;
                f = zeroBB();
                for (var g = c + Square.MD_BL, h = Math.min(d, b); 0 < h; h--)
                    f.OR(Evaluation.bbSquare[g]),
                    g += Square.MD_BL;
                g = c + Square.MD_FL;
                for (h = Math.min(7 - d, b); 0 < h; h--)
                    f.OR(Evaluation.bbSquare[g]),
                    g += Square.MD_FL;
                g = c + Square.MD_FR;
                for (h = Math.min(7 - d, 7 - b); 0 < h; h--)
                    f.OR(Evaluation.bbSquare[g]),
                    g += Square.MD_FR;
                g = c + Square.MD_BR;
                for (h = Math.min(d, 7 - b); 0 < h; h--)
                    f.OR(Evaluation.bbSquare[g]),
                    g += Square.MD_BR;
                Evaluation.allBishopAttacks[c] = f;
                f = zeroBB();
                for (g = 0; 8 > g; ++g)
                    h = c + e[g],
                    h < Square.A1 || h > Square.H8 || 2 < Math.abs(Square.rankDiff(h, c)) || Math.abs(2 < Square.fileDiff(h, c)) || f.OR(Evaluation.bbSquare[h]);
                Evaluation.allKnightAttacks[c] = f
            }
        for (e = 0; 8 > e; e++)
            for (b = 0; 8 > b; b++)
                d = (e << 3) + b,
                c = zeroBB(),
                0 < e && c.OR(squareBB(e - 1 << 3 | b)),
                7 > e && c.OR(squareBB(e + 1 << 3 | b)),
                Evaluation.allPawnAttacks[0][d] = 7 > b ? c.makeN() : zeroBB(),
                Evaluation.allPawnAttacks[1][d] = 0 < b ? c.makeS() : zeroBB();
        for (e = 0; 8 > e; e++)
            for (b = 0; 8 > b; b++)
                d = (e << 3) + b,
                c = Evaluation.allPawnAttacks[0][d].copy().OR(Evaluation.allPawnAttacks[1][d]),
                e > Square.FILE_A && c.OR(squareBB((e - 1 << 3) + b)),
                e < Square.FILE_H && c.OR(squareBB((e + 1 << 3) + b)),
                b > Square.RANK_1 && c.OR(squareBB((e << 3) + (b - 1))),
                b < Square.RANK_7 && c.OR(squareBB((e << 3) + (b + 1))),
                Evaluation.allKingAttacks[d] = c.copy(),
                Evaluation.kingZone[d] = c.copy().OR(squareBB(d)),
                Evaluation.kingRing[0][d] = c.copy().OR(c.makeN()),
                Evaluation.kingRing[1][d] = c.copy().OR(c.makeS());
        this.initBetweens()
    }
}
;
Evaluation.prototype.initBetweens = function() {
    if (!Evaluation.between.length) {
        for (var e = 0; 64 > e; e++) {
            Evaluation.between[e] = [];
            Evaluation.lines[e] = [];
            Evaluation.kingDistance[e] = [];
            for (var b = 0; b < e; b++)
                Evaluation.between[e][b] = Evaluation.between[b][e],
                Evaluation.lines[e][b] = Evaluation.lines[b][e],
                Evaluation.kingDistance[e][b] = Evaluation.kingDistance[b][e];
            for (b = e; 64 > b; b++) {
                if (e != b) {
                    var d = void 0
                      , c = Evaluation.bbSquare[e]
                      , f = Evaluation.bbSquare[b];
                    if (Evaluation.allRookAttacks[e].isSet(b)) {
                        d = e >> 3;
                        var g = b >> 3
                          , h = e & 7
                          , k = b & 7;
                        d = this.slidingAttack(c, f, h == k ? 0 : h > k ? -1 : 1, d == g ? 0 : d > g ? -1 : 1)
                    } else
                        Evaluation.allBishopAttacks[e].isSet(b) && (d = this.slidingAttack(c, f, 0 < (b & 7) - (e & 7) ? 1 : -1, 0 < (b >> 3) - (e >> 3) ? 1 : -1));
                    d && (Evaluation.lines[e][b] = d.copy(),
                    d.AND_NOT(c),
                    d.AND_NOT(f),
                    Evaluation.between[e][b] = d)
                }
                Evaluation.kingDistance[e][b] = Math.max(Math.abs(Square.rankDiff(e, b)), Math.abs(Square.fileDiff(e, b)))
            }
        }
        Evaluation.kingPathNextStep = [];
        for (e = 0; 64 > e; e++)
            for (Evaluation.kingPathNextStep[e] = [],
            b = 0; 64 > b; b++)
                if (Evaluation.kingPathNextStep[e].push(zeroBB()),
                c = Evaluation.kingDistance[e][b],
                !(1 >= c))
                    for (f = Evaluation.allKingAttacks[e].copy(); f.notEmpty(); )
                        d = f.popLSB(),
                        g = squareBB(d),
                        c > Evaluation.kingDistance[d][b] && Evaluation.kingPathNextStep[e][b].OR(g)
    }
}
;
Evaluation.prototype.buildAttacks = function(e) {
    this.attackedBy = [];
    this.attackedByAll = [];
    this.attackedByAny = [];
    this.attackedByTwo = [];
    this.attackedByPiece = [];
    for (var b = 0; 2 > b; b++) {
        this.attackedBy[b] = [];
        this.attackedByPiece[b] = [];
        for (var d = 0; 6 > d; d++)
            this.attackedBy[b].push(new BitBoard(0,0)),
            this.attackedByPiece[b].push(new BitBoard(0,0));
        this.attackedByAll[b] = new BitBoard(0,0)
    }
    b = e.board;
    d = new Att;
    for (var c = 0; 64 > c; c++)
        if (b[c]) {
            var f = 0 != (b[c] & CB.Piece.V15h)
              , g = CB.Piece.V15k(b[c])
              , h = d.getCoveredSqs(g, e, c);
            this.addToAttackedBy(h, g, f)
        }
    for (e = 0; e < Constants.NUM_PIECES; e++)
        this.attackedByAll[Constants.WHITE].OR(this.attackedBy[Constants.WHITE][e]),
        this.attackedByAll[Constants.BLACK].OR(this.attackedBy[Constants.BLACK][e]);
    this.pawnDoubleAtt = [];
    for (e = 0; 2 > e; e++)
        this.pawnDoubleAtt[e] = this.makePawnDoubleAtt(this.getPawns(e), e);
    this.cntBlockedPawns = [];
    this.blockedPawns = [];
    this.blockedPawns[0] = this.getPawns(0).SHLEFT().AND(this.getPawns(1));
    this.blockedPawns[1] = this.getPawns(1).SHRIGHT().AND(this.getPawns(0));
    this.cntBlockedPawns[0] = this.getPawns(0).SHLEFT().AND(this.getPawns(1).OR(this.pawnDoubleAtt[1])).popcnt();
    this.cntBlockedPawns[1] = this.getPawns(1).SHRIGHT().AND(this.getPawns(0).OR(this.pawnDoubleAtt[0])).popcnt();
    this.kingRing = [Evaluation.kingRing[0][this.bitPos.kingPos(0)], Evaluation.kingRing[1][this.bitPos.kingPos(1)]];
    this.attackedByAny[0] = this.attackedBy[0][Pieces.PAWN].copy().OR(this.attackedBy[0][Pieces.KING]);
    this.attackedByAny[1] = this.attackedBy[1][Pieces.PAWN].copy().OR(this.attackedBy[1][Pieces.KING]);
    this.attackedByTwo[0] = this.attackedBy[0][Pieces.PAWN].copy().AND(this.attackedBy[0][Pieces.KING]);
    this.attackedByTwo[1] = this.attackedBy[1][Pieces.PAWN].copy().AND(this.attackedBy[1][Pieces.KING]);
    for (e = 0; 2 > e; e++)
        this.attackedByPiece[e][Pieces.KING] = this.attackedBy[e][Pieces.KING].copy(),
        this.attackedByPiece[e][Pieces.PAWN] = this.attackedBy[e][Pieces.PAWN].copy()
}
;
Evaluation.prototype.addToAttackedBy = function(e, b, d) {
    e.forEach(function(c) {
        this.attackedBy[d ? 1 : 0][BitPos.toBitPiece(b)].setBit(c)
    }
    .bind(this))
}
;
Evaluation.prototype.makePawnDoubleAtt = function(e, b) {
    return b == Constants.WHITE ? e.makeNW().AND(e.makeNE()) : e.makeSW().AND(e.makeSE())
}
;
Evaluation.prototype.makePawnAtt = function(e, b) {
    return b == Constants.WHITE ? e.makeNW().OR(e.makeNE()) : e.makeSW().OR(e.makeSE())
}
;
Evaluation.prototype.getSliderStops = function(e, b, d) {
    var c = {
        blockers: zeroBB(),
        pinners: zeroBB()
    }
      , f = Evaluation.allRookAttacks[b].copy().AND(this.getRooks(d)).OR(Evaluation.allBishopAttacks[b].copy().AND(this.getBishops(d)));
    f.AND(e);
    for (e = this.getAllPieces().XOR(f); f.notEmpty(); ) {
        var g = f.popLSB()
          , h = Evaluation.between[b][g].copy().AND(e);
        1 == h.popcnt() && (c.blockers.OR(h),
        h.copy().AND(this.getPieces(1 - d)).notEmpty() && c.pinners.setBit(g))
    }
    return c
}
;
Evaluation.prototype.add = function(e, b) {
    return "number" === typeof b ? [e[0] + b, e[1] + b] : [e[0] + b[0], e[1] + b[1]]
}
;
Evaluation.prototype.sub = function(e, b) {
    return "number" === typeof b ? [e[0] - b, e[1] - b] : [e[0] - b[0], e[1] - b[1]]
}
;
Evaluation.prototype.mult = function(e, b) {
    return [e[0] * b, e[1] * b]
}
;
Evaluation.prototype.maxEv = function(e, b) {
    return [Math.max(e[0], b[0]), Math.max(e[1], b[1])]
}
;
Evaluation.prototype.initScores = function() {
    this.pstPawn = [[0, 0], [-1, 0], [-4, 2], [-4, 5], [-4, 5], [-2, 3], [6, 3], [0, 0], [0, 0], [2, 2], [-1, 2], [-2, 4], [-1, 3], [5, 2], [3, 2], [0, 0], [0, 0], [1, 3], [-2, 1], [4, 1], [2, 2], [5, 1], [-5, 1], [0, 0], [0, 0], [-5, 4], [0, 0], [8, 0], [4, 0], [-9, 0], [-12, 0], [0, 0], [0, 0], [-5, 4], [0, 0], [8, 0], [4, 0], [-9, 0], [-12, 0], [0, 0], [0, 0], [1, 3], [-2, 1], [4, 1], [2, 2], [5, 1], [-5, 1], [0, 0], [0, 0], [2, 2], [-1, 2], [-2, 4], [-1, 3], [5, 2], [3, 2], [0, 0], [0, 0], [-1, 0], [-4, 2], [-4, 5], [-4, 5], [-2, 3], [6, 3], [0, 0]];
    this.pstKnight = [[-35, -26], [-16, -16], [-7, -8], [6, -12], [6, -11], [4, -20], [-14, -19], [-54, -19], [-19, -28], [0, -14], [9, -6], [20, -11], [20, -8], [13, -15], [-8, -18], [-22, -26], [-11, -11], [10, -2], [21, 6], [34, 4], [32, 5], [30, 0], [7, -4], [-10, -12], [-3, 1], [18, 11], [29, 16], [40, 11], [38, 13], [38, 8], [11, 6], [6, -1], [-3, 1], [18, 11], [29, 16], [40, 11], [38, 13], [38, 8], [11, 6], [6, -1], [-11, -11], [10, -2], [21, 6], [34, 4], [32, 5], [30, 0], [7, -4], [-10, -12], [-19, -28], [0, -14], [9, -6], [20, -11], [20, -8], [13, -15], [-8, -18], [-22, -26], [-35, -26], [-16, -16], [-7, -8], [6, -12], [6, -11], [4, -20], [-14, -19], [-54, -19]];
    this.pstBishop = [[-15, -18], [-9, -13], [-6, -10], [-7, -9], [-7, -8], [-8, -7], [-13, -9], [-23, -12], [-6, -12], [7, -7], [5, -4], [5, -4], [5, -3], [2, -1], [1, -5], [-13, -9], [-9, -14], [1, -6], [5, -3], [4, -3], [3, -4], [3, -3], [-1, -5], [-13, -10], [-12, -6], [-2, 1], [2, 3], [5, 3], [3, 4], [1, 4], [-2, 0], [-13, -5], [-12, -6], [-2, 1], [2, 3], [5, 3], [3, 4], [1, 4], [-2, 0], [-13, -5], [-9, -14], [1, -6], [5, -3], [4, -3], [3, -4], [3, -3], [-1, -5], [-13, -10], [-6, -12], [7, -7], [5, -4], [5, -4], [5, -3], [2, -1], [1, -5], [-13, -9], [-15, -18], [-9, -13], [-6, -10], [-7, -9], [-7, -8], [-8, -7], [-13, -9], [-23, -12]];
    this.pstRook = [[-17, -2], [-14, -4], [-15, -3], [-13, -5], [-1, -3], [-1, -2], [2, -4], [-14, -1], [-14, -7], [-11, -9], [-11, -7], [-8, -8], [4, -4], [4, -4], [7, -5], [-11, -3], [-13, -9], [-11, -9], [-11, -8], [-9, -8], [3, -3], [6, -4], [12, -8], [-10, -3], [-13, -8], [-9, -9], [-10, -8], [-9, -7], [1, -3], [7, -4], [18, -9], [-12, -5], [-13, -8], [-9, -9], [-10, -8], [-9, -7], [1, -3], [7, -4], [18, -9], [-12, -5], [-13, -9], [-11, -9], [-11, -8], [-9, -8], [3, -3], [6, -4], [12, -8], [-10, -3], [-14, -7], [-11, -9], [-11, -7], [-8, -8], [4, -4], [4, -4], [7, -5], [-11, -3], [-17, -2], [-14, -4], [-15, -3], [-13, -5], [-1, -3], [-1, -2], [2, -4], [-14, -1]];
    this.pstQueen = [[-11, -12], [-5, -8], [-4, -5], [-2, -1], [-1, -5], [1, -9], [2, -13], [-8, -20], [-6, -8], [-2, -1], [1, 3], [2, 8], [4, 7], [4, -1], [4, 1], [-4, -8], [-5, -7], [0, 2], [3, 14], [4, 17], [6, 14], [5, 8], [9, 1], [0, -8], [-3, -6], [3, 7], [4, 17], [7, 22], [10, 16], [5, 11], [11, 4], [3, -7], [-3, -6], [3, 7], [4, 17], [7, 22], [10, 16], [5, 11], [11, 4], [3, -7], [-5, -7], [0, 2], [3, 14], [4, 17], [6, 14], [5, 8], [9, 1], [0, -8], [-6, -8], [-2, -1], [1, 3], [2, 8], [4, 7], [4, -1], [4, 1], [-4, -8], [-11, -12], [-5, -8], [-4, -5], [-2, -1], [-1, -5], [1, -9], [2, -13], [-8, -20]];
    this.pstKing = [[90, -18], [88, 7], [66, 35], [64, 45], [77, 42], [66, 38], [42, 31], [32, 19], [101, 0], [97, 26], [82, 50], [87, 56], [107, 54], [101, 49], [74, 42], [58, 31], [83, 23], [90, 42], [88, 57], [99, 63], [111, 62], [108, 56], [79, 51], [57, 40], [73, 31], [84, 48], [93, 59], [106, 63], [118, 62], [97, 61], [81, 51], [46, 48], [73, 31], [84, 48], [93, 59], [106, 63], [118, 62], [97, 61], [81, 51], [46, 48], [83, 23], [90, 42], [88, 57], [99, 63], [111, 62], [108, 56], [79, 51], [57, 40], [101, 0], [97, 26], [82, 50], [87, 56], [107, 54], [101, 49], [74, 42], [58, 31], [90, -18], [88, 7], [66, 35], [64, 45], [77, 42], [66, 38], [42, 31], [32, 19]];
    this.sQueenKingDist = [[0, -12], [0, -17], [0, -7], [0, -12], [0, -8], [0, -12], [0, -18], [0, -20]];
    this.sWeakPawnAttack = [[4, 17], [6, 15], [5, 19], [3, 10]];
    this.sMobilityBonusKnight = [[-13, -8], [4, 1], [18, 6], [23, 8], [28, 9], [33, 10], [36, 11], [38, 9], [38, 7]];
    this.sMobilityBonusBishop = [[-15, -6], [-2, 2], [11, 7], [17, 14], [25, 17], [31, 24], [36, 27], [40, 28], [41, 30], [42, 30], [44, 31], [46, 28], [49, 30], [53, 23]];
    this.sMobilityBonusRook = [[-48, -39], [-36, -20], [-21, -18], [-16, -6], [-11, 4], [-7, 10], [-3, 20], [1, 29], [5, 35], [8, 41], [11, 42], [12, 44], [13, 46], [16, 43], [17, 40]];
    this.sMobilityBonusQueen = [[-28, -9], [-19, -16], [-4, -18], [0, -18], [4, -12], [7, -5], [9, 3], [12, 10], [13, 10], [14, 11], [14, 12], [14, 13], [14, 14], [15, 13], [15, 14], [15, 16], [15, 16], [16, 15], [17, 15], [16, 16], [15, 16], [15, 15], [10, 19], [13, 17], [11, 17], [8, 20], [11, 16], [16, 15]];
    this.sKingAttacks = [[0, 1], [0, 3], [0, 0], [0, 8], [0, 11], [0, 9], [0, 18], [0, 20], [0, 14]];
    this.sBishopPawnColor = [[-1, 11], [5, 6], [6, 17], [9, 17], [8, 16], [15, 16], [14, 17], [17, 19]];
    this.sCastlingBonus = [[0, 0], [70, 49], [76, 42], [76, 73]];
    this.sPPRankBonus = [[21, 0], [56, 4], [83, 16], [177, 37], [22, 1], [60, 4], [91, 21], [182, 42]];
    this.sPPFileBonus = [[6, 6], [1, 1], [-2, -2], [-7, -7], [-7, -7], [-2, -2], [1, 1], [6, 6]];
    this.sConnectedPPBonus = [[9, 1], [17, 8], [-10, 11]];
    this.sPPOwnKingDistance = [[0, 16], [0, 8], [0, 8], [0, 15], [0, 25], [0, 34], [0, 44], [0, 53], [0, 40], [0, 0], [0, 10], [0, 24], [0, 43], [0, 61], [0, 78], [0, 101], [0, 91], [0, 28], [0, 35], [0, 54], [0, 91], [0, 123], [0, 156], [0, 183], [0, 187], [0, 27], [0, 40], [0, 54], [0, 83], [0, 124], [0, 156], [0, 186]];
    this.sPPOpponentKingDistance = [[0, -15], [0, 16], [0, 21], [0, 31], [0, 36], [0, 44], [0, 54], [0, 64], [0, -21], [0, 26], [0, 50], [0, 74], [0, 102], [0, 127], [0, 154], [0, 176], [0, -45], [0, 31], [0, 73], [0, 126], [0, 174], [0, 223], [0, 281], [0, 328], [0, -72], [0, 26], [0, 120], [0, 206], [0, 278], [0, 350], [0, 443], [0, 528]];
    this.sPPBlock = [[1, 1], [14, 14], [19, 19], [7, 7], [21, 21], [29, 29], [9, 9], [17, 17], [21, 21], [1, 1], [28, 28], [46, 46], [12, 12], [46, 46], [59, 59], [11, 11], [48, 48], [67, 67], [14, 14], [77, 77], [116, 116], [44, 44], [91, 91], [153, 153], [44, 44], [116, 116], [166, 166], [8, 8], [147, 147], [173, 173], [68, 68], [189, 189], [250, 250], [56, 56], [164, 164], [259, 259]];
    this.sDoubledPawn = [[11, 16], [10, 26], [10, 32], [8, 36], [8, 36], [10, 32], [10, 26], [11, 16]];
    this.sIsolatedPawn = [[17, 26], [18, 29], [20, 25], [22, 26], [22, 26], [20, 25], [18, 29], [17, 26], [9, 11], [11, 13], [15, 4], [15, 5], [15, 5], [15, 4], [11, 13], [9, 11]];
    this.sConnectedPawn = [[0, 0], [3, 3], [4, 4], [10, 10], [11, 11], [64, 64], [1, 1], [3, 3], [6, 6], [13, 13], [13, 13], [53, 53], [4, 4], [6, 6], [5, 5], [14, 14], [25, 25], [56, 56], [-1, -1], [6, 6], [6, 6], [16, 16], [31, 31], [81, 81], [-1, -1], [6, 6], [6, 6], [16, 16], [31, 31], [81, 81], [4, 4], [6, 6], [5, 5], [14, 14], [25, 25], [56, 56], [1, 1], [3, 3], [6, 6], [13, 13], [13, 13], [53, 53], [0, 0], [3, 3], [4, 4], [10, 10], [11, 11], [64, 64]];
    this.sPawnLever = [[0, 0], [1, 14], [0, -1], [1, -11], [12, 1], [30, -2], [0, 0], [0, 0]];
    this.sBackwardPawn = [[18, 19], [18, 18], [17, 20], [17, 23], [17, 23], [17, 20], [18, 18], [18, 19], [15, 19], [15, 26], [15, 20], [21, 22], [21, 22], [15, 20], [15, 26], [15, 19], [11, 3], [10, -5], [10, -5], [13, -5], [13, -5], [10, -5], [10, -5], [11, 3], [10, 5], [11, 4], [12, -3], [14, -4], [14, -4], [12, -3], [11, 4], [10, 5]];
    this.sCandidatePawn = [[0, -10], [0, -10], [2, -9], [3, -3], [-6, 9]];
    this.sLoneRookMalus = [[0, -49], [0, 35], [0, 9], [0, -14], [0, -22], [0, 0], [0, 0], [0, 0]];
    this.sBishopPair = [[60, 27], [35, 60], [34, 39], [31, 22]];
    this.matVal = [[80, 100], [310, 265], [335, 290], [530, 475], [1010, 930]];
    this.vKingsafetyFactor = [16, 13, 34, 20, 18, 13, 20, 10, 5, 11];
    this.vKingAttackPower = [0, 30, 16, 28, 40];
    this.vUnsafeQueenContactCheck = [5, 13, 19, 51, 19];
    this.vQueenContactCheck = [94, 148, 242, 288, 104];
    this.vRookContactCheck = [-1, 20, 70, 139, 30];
    this.vEvasionBonus = [33, 21, 18, 16, 28, 27, 26, 17];
    this.vQueenCheck = [50, 100, 160, 174, 196, 197, 232, 243];
    this.vRookCheck = [42, 74, 99, 79];
    this.vBishopCheck = [9, 14];
    this.vKnightCheck = [21, 28, 50, 70];
    this.vCheckThreat = [3, 1];
    this.vFrontmostPP = [0, 9, 23, 36, 37, 30, -9, 0, 9, 18, 39, 49, -23, -9, 0, 7, 20, 37, -36, -18, -7, 0, 11, 35, -37, -39, -20, -11, 0, 20, -30, -49, -37, -35, -20, 0];
    this.vAttackBadness = [23, 25, 27, 27, 32, 30, 29, 28, 29, 26, 26, 26, 26, 25, 23, 26];
    this.sPPScaleDown = [-2, 55, 69, 52, 29, 51, 53, 36, 30, 59, 60, 98, 32, 63, 68, 89];
    this.sDifferentBishops = [-26, -4, -26, 42, -31, -23, -19, -15, -34, -18, -18, -33, -31, -14, -10, -9];
    this.sFeatureWeight = [55, 42, 40, 50, 62, 85, 64, 1];
    this.vOutpostBonus = [7, 8, 12, 18, 5, 8, 5, 3, 11, 15, 13, 6, 8, 17, 6, 0, 16, 22, 12, 18, 12, 15, 9, 1, 16, 22, 12, 18, 12, 15, 9, 1, 11, 15, 13, 6, 8, 17, 6, 0, 7, 8, 12, 18, 5, 8, 5, 3];
    this.vOutpostFactor = [4, 15, 21, 24, 9, 15, 22, 88, 41, 27, 32, 38, 22, 25, 28, 28, 3, 21, 27, 59, 16, 19, 18, 16, 32, 24, 29, 16, 19, 21, 23, 15];
    this.sPawnThreat = [6, 3];
    this.cpxMatInhomogen = [5, 6];
    this.cpxArea = [6, 3];
    this.cpxWeakPawns = [6, 3];
    this.cpxPassed = [5, 8];
    this.cpxConnected = [10, 10];
    this.cpxCandidates = [1, 1];
    this.cpxPawnPush = [1, 1];
    this.cpxCenterPush = [6, 1];
    this.cpxTension = [6, 6];
    this.cpxPawnKingRing = [8, 1];
    this.cpxHanging = [10, 6];
    this.cpxAsym = [3, 4];
    this.cpxBadness = [3, 3];
    this.cpxControl = [2, 1];
    this.cpxPotential = [5, 5];
    this.cpxWeakBack = [25, 10];
    this.cpxPawnAttacks = [8, 4];
    this.cpxAttack = [5, 7];
    this.cpxTwice = [5, 7];
    this.cpxUndef = [4, 3];
    this.cpxPins = [8, 5];
    this.cpxQueenPin = [6, 4];
    this.cpxSafety = [3, 1];
    this.cpxSafetyCanCastle = [2, 1];
    this.cpxShelter = [4, 2];
    this.cpxStorm = [4, 1]
}
;
Evaluation.prototype.calcMaterial = function() {
    var e = [[0, 0], [0, 0]];
    this.pieces = [[], []];
    this.totPieces = [0, 0];
    for (var b = 0; 2 > b; b++)
        for (var d = 0; 2 > d; d++)
            for (var c = Pieces.PAWN; c < Pieces.KING; c++) {
                var f = BitPos.toCBPiece(c) + (b ? 8 : 0);
                f = this.pos.countPieces(f);
                e[b][d] += f * this.matVal[c][d];
                d || (this.pieces[b][c] = f,
                this.totPieces[b] += f)
            }
    this.material = e;
    this.matScore = [e[0][0] - e[1][0], e[0][1] - e[1][1]];
    this.attackPotential = [];
    this.supporters = [];
    for (b = e = 0; 2 > b; b++)
        d = this.pos.countPieces(CB.Piece.KNIGHT | 8 * b),
        c = this.pos.countPieces(CB.Piece.BISHOP | 8 * b),
        f = this.pos.countPieces(CB.Piece.ROOK | 8 * b),
        this.attackPotential[b] = 15 * this.pos.countPieces(CB.Piece.QUEEN | 8 * b) + 3 * d + 2 * c + 5 * f,
        this.supporters[b] = d + c + f,
        e += this.attackPotential[b];
    this.phaseScale = Math.min(64, (this.material[0][0] + this.material[1][0]) / 72);
    30 == e && 0 == this.supporters[0] + this.supporters[1] && (e = 24);
    this.phaseScaleKingSafety = 13 > e ? 0 : Math.min(64, e);
    e = this.supporters[0];
    b = this.supporters[1];
    1 == this.pos.countPieces(CB.Piece.QUEEN) && !this.pos.countPieces(CB.Piece.Vd0) && !e && 2 < b && this.sub(this.matScore, [0, 20]);
    1 == this.pos.countPieces(CB.Piece.Vd0) && !this.pos.countPieces(CB.Piece.Vcz) && !b && 2 < e && this.sub(this.matScore, [0, 20]);
    this.pos.countPieces(CB.Piece.PAWN) || 1 != this.pos.countPieces(CB.Piece.ROOK) || !this.pos.countPieces(CB.Piece.Vd6) || this.pos.countPieces(CB.Piece.KNIGHT) || this.pos.countPieces(CB.Piece.BISHOP) || this.pos.countPieces(CB.Piece.BISHOP) || (this.matScore = this.sub(this.matScore, this.sLoneRookMalus[this.pos.countPieces(CB.Piece.Vd6) - 1]));
    this.pos.countPieces(CB.Piece.Vd6) || 1 != this.pos.countPieces(CB.Piece.Vd2) || !this.pos.countPieces(CB.Piece.PAWN) || this.pos.countPieces(CB.Piece.B_KNIGHT) || this.pos.countPieces(CB.Piece.Vd4) || this.pos.countPieces(CB.Piece.Vd4) || (this.matScore = this.sub(this.matScore, this.sLoneRookMalus[this.pos.countPieces(CB.Piece.Vd5) - 1]));
    e = this.pos.countPieces(CB.Piece.PAWN);
    b = this.pos.countPieces(CB.Piece.Vd6);
    d = e + b;
    c = Math.max(0, d - 1) >> 2;
    this.bishopPair = [!1, !1];
    2 == this.pos.countPieces(CB.Piece.BISHOP) && (this.matScore = this.add(this.matScore, this.sBishopPair[c]),
    this.bishopPair[0] = !0);
    2 == this.pos.countPieces(CB.Piece.Vd4) && (this.matScore = this.add(this.matScore, this.sBishopPair[c]),
    this.bishopPair[0] = !0);
    for (this.ppScaleDown = this.scOppColorBish = 0; 1 == this.pos.countPieces(CB.Piece.BISHOP) && 1 == this.pos.countPieces(CB.Piece.Vd4) && 0 != d; ) {
        c = this.pos.countAllPieces(0) + this.pos.countAllPieces(1) - d - 2 - 2;
        if (8 <= c)
            break;
        d = 4 * [0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3][d] + (c >> 1);
        this.ppScaleDown = this.sPPScaleDown[d];
        if (e == b)
            break;
        this.scOppColorBish = this.matVal[0][1] * (e - b);
        this.scOppColorBish = this.scaleDiffBishops(this.sDifferentBishops[d], this.scOppColorBish);
        e = Boards.LIGHT_SQUARES.copy().AND(this.getBishops(0)).notEmpty();
        b = Boards.LIGHT_SQUARES.copy().AND(this.getBishops(1)).notEmpty();
        if (this.oppBishops = e != b)
            this.matScore = this.add(this.matScore, this.scOppColorBish);
        break
    }
    this.matInhomogen = 0;
    e = this.pos.countPieces(CB.Piece.KNIGHT);
    b = this.pos.countPieces(CB.Piece.KNIGHT | 8);
    d = this.pos.countPieces(CB.Piece.BISHOP);
    c = this.pos.countPieces(CB.Piece.BISHOP | 8);
    f = this.pos.countPieces(CB.Piece.ROOK);
    var g = this.pos.countPieces(CB.Piece.ROOK | 8)
      , h = this.pos.countPieces(CB.Piece.QUEEN)
      , k = this.pos.countPieces(CB.Piece.QUEEN | 8)
      , l = this.pos.countPieces(CB.Piece.PAWN)
      , m = this.pos.countPieces(CB.Piece.PAWN | 8);
    this.matInhomogen = Math.abs(e + d - b - c) * Math.sqrt(this.matVal[Pieces.BISHOP][0]) * .3;
    this.matInhomogen += Math.abs(f - g) * Math.sqrt(this.matVal[Pieces.ROOK][0]) * .3;
    this.matInhomogen += Math.abs(h - k) * Math.sqrt(this.matVal[Pieces.QUEEN][0]) * .3;
    e + d == b + c && (this.matInhomogen += Math.abs(e - b));
    this.matInhomogen += Math.abs(l - m)
}
;
Evaluation.prototype.initKing = function() {
    this.sqKing = [this.bitPos.getPiecesOfSide(Pieces.KING, 0).LSB(), this.bitPos.getPiecesOfSide(Pieces.KING, 1).LSB()];
    this.psKing = [];
    this.pawnShelter = [];
    this.pawnStormDanger = [];
    this.numKingAttackers = [];
    this.closeKingAttackers = [0, 0];
    this.kingAttackPower = [0, 0];
    var e = Evaluation.kingRing[0][this.sqKing[0]].copy();
    this.numKingAttackers[1] = e.AND(this.attackedBy[1][Pieces.PAWN]).popcnt();
    this.numKingAttackers[1] += e.AND(this.attackedBy[1][Pieces.KING]).popcnt();
    e = Evaluation.kingRing[1][this.sqKing[1]].copy();
    this.numKingAttackers[0] = e.AND(this.attackedBy[0][Pieces.PAWN]).popcnt();
    this.numKingAttackers[0] += e.AND(this.attackedBy[0][Pieces.KING]).popcnt()
}
;
Evaluation.prototype.initPawns = function() {
    this.minorBlocksPawnMask = [];
    this.minorBlocksPawnMask[0] = Boards.RANK2.copy().OR(Boards.RANK3).OR(Boards.RANK4).AND_NOT(this.attackedBy[1][Pieces.PAWN]);
    this.minorBlocksPawnMask[0].AND(this.getPawns(1).makeS());
    this.minorBlocksPawnMask[1] = Boards.RANK7.copy().OR(Boards.RANK6).OR(Boards.RANK5).AND_NOT(this.attackedBy[0][Pieces.PAWN]);
    this.minorBlocksPawnMask[1].AND(this.getPawns(0).makeN());
    for (var e = allSetBB(), b = zeroBB(), d = 0; 8 > d; d++)
        e.XOR(rankBB(d)),
        Evaluation.ranksInFront[0][d] = e.copy(),
        Evaluation.ranksInFront[1][d] = b.copy(),
        b.XOR(rankBB(d));
    Evaluation.adjacentFiles[0] = fileBB(0).OR(fileBB(1));
    Evaluation.adjacentFiles[7] = fileBB(6).OR(fileBB(7));
    Evaluation.neighbourFiles[0] = fileBB(1);
    Evaluation.neighbourFiles[7] = fileBB(6);
    for (e = 1; 6 >= e; e++)
        Evaluation.adjacentFiles[e] = fileBB(e - 1).OR(fileBB(e)).OR(fileBB(e + 1)),
        Evaluation.neighbourFiles[e] = fileBB(e - 1).OR(fileBB(e + 1));
    for (e = 0; 2 > e; e++)
        for (b = 0; 64 > b; b++)
            Evaluation.passedMask[e][b] = Evaluation.ranksInFront[e][b & 7].copy().AND(Evaluation.adjacentFiles[b >> 3]),
            Evaluation.forward[e][b] = Evaluation.ranksInFront[e][b & 7].copy().AND(fileBB(b >> 3));
    e = this.getPawns(0);
    b = this.getPawns(1);
    for (d = this.pawnAsym = 0; 8 > d; d++)
        e.copy().AND(fileBB(d)).popcnt() != b.copy().AND(fileBB(d)).popcnt() && this.pawnAsym++;
    this.bishopPenalty = [[], []];
    this.kingFileQuality = [];
    this.rookBonus = [[], []]
}
;
Evaluation.prototype.initPinned = function() {
    this.pinned = [zeroBB(), zeroBB()];
    this.discoCandidates = [zeroBB(), zeroBB()];
    for (var e = 0; 2 > e; e++) {
        var b = this.sqKing[e]
          , d = this.getRooks(1 - e).OR(this.getQueens(1 - e))
          , c = this.getBishops(1 - e).OR(this.getQueens(1 - e));
        d = Evaluation.allRookAttacks[b].copy().AND(d);
        c = Evaluation.allBishopAttacks[b].copy().AND(c);
        d.OR(c);
        for (c = this.getPieces(e); !d.empty(); ) {
            var f = d.popLSB();
            f = Evaluation.between[f][b].copy().AND(this.getOccupied());
            1 < f.popcnt() || (f.copy().AND(c).empty() ? this.discoCandidates[e].OR(f) : this.pinned[e].OR(f))
        }
    }
}
;
Evaluation.prototype.initMobility = function() {
    var e = this.attackedBy[1][Pieces.PAWN].copy().OR(this.getPawns(0)).OR(this.getKing(0))
      , b = this.attackedBy[0][Pieces.PAWN].copy().OR(this.getPawns(1)).OR(this.getKing(1));
    this.mobilityArea = [e.NOT(), b.NOT()]
}
;
Evaluation.prototype.getAttacks = function(e, b, d, c) {
    switch (e) {
    default:
    case Pieces.KING:
        return Evaluation.allKingAttacks[b];
    case Pieces.PAWN:
        return Evaluation.allPawnAttacks[c][b];
    case Pieces.KNIGHT:
        return Evaluation.allKnightAttacks[b];
    case Pieces.BISHOP:
        return this.bitPos.bishopAttack(squareBB(b), d);
    case Pieces.ROOK:
        return this.bitPos.rookAttack(squareBB(b), d);
    case Pieces.QUEEN:
        return this.bitPos.rookAttack(squareBB(b), d).OR(this.bitPos.bishopAttack(squareBB(b), d))
    }
}
;
Evaluation.prototype.initAttackParams = function() {
    if (!Evaluation.attackParams) {
        var e = [58, 77, 74, 10, 120, 122, 122, 98, 37, 40, 16, -4, 105, 112, 87, 41, 52, 61, 48, 6, 90, 93, 101, 50, 4, 25, 0, 2, 104, 75, 56, 30]
          , b = [0, 0, 9, 6, 5, 3];
        Evaluation.attackParams = [];
        for (var d = Pieces.KNIGHT; d < Pieces.KING; d++) {
            Evaluation.attackParams[d - Pieces.KNIGHT] = [];
            for (var c = 0; 16 > c; c++) {
                var f = {
                    scHanging: [0, 0],
                    scAttack: [0, 0],
                    hanging: 0,
                    badness: 1
                }
                  , g = d - 1
                  , h = 0 != (c & 2)
                  , k = 0 != (c & 4);
                h && (g += 4);
                k && (g += 8);
                if (h || !k)
                    f.scHanging = this.add(f.scHanging, [91, 300, 310, 500, 1E3, 9E3][d]),
                    f.hanging++,
                    f.badness += 2;
                c & 1 ? g += 16 : f.badness++;
                g = e[g];
                c & 8 ? (f.badness += 2,
                h && (f.badness += 2),
                f.scAttack = this.mult([g, g], b[d]),
                f.scAttack = this.mult(f.scAttack, .25)) : f.scAttack = g;
                Evaluation.attackParams[d - Pieces.KNIGHT].push(f)
            }
        }
    }
}
;
Evaluation.prototype.relSq = function(e, b) {
    return e ^ 7 * b
}
;
Evaluation.prototype.relRank = function(e, b) {
    return this.relSq(e, b) & 7
}
;
Evaluation.prototype.testShifts = function(e) {
    return e ? this.getPawns(0).makeSE() : this.getPawns(0).makeSW()
}
;
Evaluation.prototype.toColors = function(e, b, d) {
    for (var c = [], f = 99999, g = -9999, h = 0; 64 > h; h++) {
        var k = e[this.relSq(h, b)][d];
        k < f && (f = k);
        k > g && (g = k)
    }
    for (h = 0; 64 > h; h++)
        k = e[this.relSq(h, b)][d],
        c.push(Evaluation.getPSTColor(k, f, g));
    return c
}
;
Evaluation.getValColor = function(e, b, d, c, f) {
    var g = 1;
    if (c > f) {
        g = -1;
        var h = c;
        c = f;
        f = h
    }
    if (d <= b)
        return "black";
    h = (f - c) / (d - b);
    4 < h && (h = 4);
    e < b && (e = b);
    e > d && (e = d);
    e = Math.ceil((e - b) * h);
    return -1 == g ? f - e : e + c
}
;
Evaluation.getPSTColor = function(e, b, d) {
    return String.f("hsl( {0}, 90%, 60% )", getValColor(e, b, d, 0))
}
;
Evaluation.getGradient = function(e) {
    return String.f("background-image: radial-gradient( hsl( {0}, 60%, 70% ), hsl( {0}, 60%, 50% ) )", e)
}
;
Evaluation.debugSqs = function(e) {
    return e.map(function(b) {
        return CB.Square.toString(b)
    }).join()
}
;
"use strict";
var ChessKnowledge = function() {};
ChessKnowledge.isEndgame = function(e) {
    var b = CB.V1c4.sumMaterial(e, CB.V15e.WHITE)
      , d = CB.V1c4.sumMaterial(e, CB.V15e.BLACK);
    return 12 > e.getPieces().length && 2100 > b + d
}
;
ChessKnowledge.getOpposition = function(e, b) {
    var d = CB.Square.V16x(e)
      , c = CB.Square.V16x(b);
    e = CB.Square.V16w(e);
    b = CB.Square.V16w(b);
    if (d == c && 2 == Math.abs(e - b))
        return c = [],
        e > b ? (0 <= d - 1 && 8 > b + 1 && c.push(8 * (d - 1) + b + 1),
        8 > b + 1 && c.push(8 * (d + 0) + b + 1),
        8 > d + 1 && 8 > b + 1 && c.push(8 * (d + 1) + b + 1)) : (0 <= d - 1 && 8 > e + 1 && c.push(8 * (d - 1) + e + 1),
        8 > e + 1 && c.push(8 * (d + 0) + e + 1),
        8 > d + 1 && 8 > e + 1 && c.push(8 * (d + 1) + e + 1)),
        c;
    if (e == b && 2 == Math.abs(d - c))
        return e = [],
        d > c ? (8 > c + 1 && 0 <= b - 1 && e.push(8 * (c + 1) + b - 1),
        8 > c + 1 && e.push(8 * (c + 1) + b + 0),
        8 > c + 1 && 8 > b + 1 && e.push(8 * (c + 1) + b + 1)) : (8 > d + 1 && 0 <= b - 1 && e.push(8 * (d + 1) + b - 1),
        8 > d + 1 && e.push(8 * (d + 1) + b + 0),
        8 > d + 1 && 8 > b + 1 && e.push(8 * (d + 1) + b + 1)),
        e
}
;
ChessKnowledge.isPassedPawn = function(e, b, d) {
    e = e.board;
    if ((e[b] & CB.Piece.V15j) == CB.Piece.PAWN && (e[b] & CB.Piece.V15h) == d) {
        d = CB.Square.V16x(b);
        var c = CB.Square.V16w(b);
        if (e[b] & CB.Piece.V15h)
            for (b = CB.Piece.PAWN,
            --c; 1 <= c; c--) {
                var f = -1
                  , g = -1;
                7 > d && (f = CB.Square.V16z(d + 1, c));
                0 < d && (g = CB.Square.V16z(d - 1, c));
                var h = CB.Square.V16z(d, c);
                if (0 <= f && e[f] == b || 0 <= g && e[g] == b || (e[h] & CB.Piece.V15j) == CB.Piece.PAWN)
                    return !1
            }
        else
            for (b = CB.Piece.PAWN | CB.Piece.V15h,
            c += 1; 6 >= c; c++)
                if (g = f = -1,
                0 < d && (f = CB.Square.V16z(d - 1, c)),
                7 > d && (g = CB.Square.V16z(d + 1, c)),
                h = CB.Square.V16z(d, c),
                0 <= f && e[f] == b || 0 <= g && e[g] == b || (e[h] & CB.Piece.V15j) == CB.Piece.PAWN)
                    return !1;
        return !0
    }
    return !1
}
;
ChessKnowledge.testPassedPawns = function() {
    for (var e = [{
        fen: "8/8/7k/2P5/8/5K2/8/8 w - - 0 1",
        passed: !0,
        sq: 20
    }, {
        fen: "8/8/2p4k/2P5/8/5K2/8/8 b - - 0 1",
        passed: !1,
        sq: 21
    }, {
        fen: "8/8/7k/8/3pP3/3P3K/8/8 w - - 0 1",
        passed: !0,
        sq: 35
    }, {
        fen: "8/8/7k/1P6/1P6/7K/8/8 w - - 0 1",
        passed: !1,
        sq: 11
    }, {
        fen: "8/8/7k/1P6/1P6/7K/8/8 w - - 0 1",
        passed: !0,
        sq: 12
    }, {
        fen: "8/8/5p1k/8/4P3/7K/8/8 w - - 0 1",
        passed: !1,
        sq: 45
    }, {
        fen: "8/8/4p3/3P3k/8/6K1/8/8 w - - 0 1",
        passed: !1,
        sq: 28
    }, {
        fen: "8/7k/8/7K/2p5/8/2P5/8 w - - 0 1",
        passed: !1,
        sq: 19
    }, {
        fen: "8/7k/8/7K/8/8/7p/8 w - - 0 1",
        passed: !0,
        sq: 57
    }], b = 0; b < e.length; b++) {
        var d = new CB.Position(e[b].fen);
        console.log(String.f("{1}. Passed Pawns {0}", e[b].fen, b));
        (d = ChessKnowledge.isPassedPawn(d, e[b].sq, d.board[e[b].sq] & CB.Piece.V15h)) ? console.log(String.f("Passed OK on {0}", CB.Square.toString(e[b].sq))) : console.log(String.f("NO Passed Pawn {0}", CB.Square.toString(e[b].sq)));
        d != e[b].passed ? console.log("TEST FAILED") : console.log("TEST OK")
    }
}
;
"use strict";
CB.V1ke = function() {
    var e = function(b, d, c, f) {
        this.V1kg = b;
        this.url = d;
        this.engine = {};
        this.V1ex = c;
        this.V1kf = f
    };
    e.prototype.load = function() {
        var b = this;
        try {
            b.url.match(/http/i) ? $.ajax({
                url: b.url,
                type: "GET",
                data: {},
                async: !0,
                cache: !0,
                processData: !1,
                success: function(d) {
                    d = new Blob([d],{
                        type: "application/javascript"
                    });
                    b.engine = new Worker(URL.createObjectURL(d));
                    b.engine.onmessage = e.prototype.V15a.bind(b);
                    b.engine.error = e.prototype.V141.bind(b);
                    b.engine.postMessage({
                        cmd: "reset"
                    });
                    b.isRunning = !1
                }
            }) : (this.engine = new Worker(this.url),
            this.engine.onmessage = e.prototype.V15a.bind(this),
            this.engine.error = e.prototype.V141.bind(this),
            this.engine.postMessage({
                cmd: "reset"
            }),
            this.isRunning = !1)
        } catch (d) {}
    }
    ;
    e.prototype.V1kh = function() {
        this.abort()
    }
    ;
    e.prototype.newGame = function() {
        this.abort();
        this.engine.postMessage({
            cmd: "reset"
        })
    }
    ;
    e.prototype.makeMove = function(b) {
        this.engine.postMessage({
            cmd: "move",
            move: b.toJSON()
        })
    }
    ;
    e.prototype.search = function(b, d) {
        this.isRunning = !0;
        this.engine.postMessage({
            cmd: "search",
            timeout: b,
            maxdepth: d
        })
    }
    ;
    e.prototype.V1ki = function(b) {
        this.abort();
        b = b.toFEN();
        this.engine.postMessage({
            cmd: "position",
            fen: b
        });
        this.V1ex && this.V1ex.V1kj(this.V1kg)
    }
    ;
    e.prototype.V1kk = function(b, d) {
        this.abort();
        this.engine.postMessage({
            cmd: "reset"
        });
        if (!b.isNormalInit()) {
            var c = {
                cmd: "position",
                fen: b.getStartPos().toFEN()
            };
            d.forEach(function(g) {
                c[g.piece + "Table"] = this.V1kl(g.vals)
            }
            .bind(this));
            this.engine.postMessage(c)
        }
        for (d = 0; d < b.mainLine.length; d++) {
            var f = b.mainLine[d].toJSON();
            this.engine.postMessage({
                cmd: "move",
                move: f
            })
        }
        this.V1ex && this.V1ex.V1kj(this.V1kg)
    }
    ;
    e.prototype.V1km = function(b) {
        this.abort();
        b = b.toFEN();
        this.engine.postMessage({
            cmd: "position",
            fen: b
        });
        this.engine.postMessage({
            cmd: "analyze"
        });
        this.isRunning = !0;
        this.V1ex && this.V1ex.V1kj(this.V1kg)
    }
    ;
    e.prototype.abort = function() {
        this.isRunning && (this.engine.terminate(),
        this.isRunning = !1,
        this.load())
    }
    ;
    e.prototype.V15a = function(b) {
        "pv" == b.data.id ? this.V1kf.V1kn(this.V1kg, b.data) : "move" == b.data.id && (this.V1kf.V1ko(this.V1kg, b.data),
        this.isRunning = !1)
    }
    ;
    e.prototype.V141 = function(b) {
        alert(b)
    }
    ;
    e.prototype.V1kp = function(b, d) {}
    ;
    e.prototype.V1kl = function(b) {
        for (var d = Array(64), c = 0; 64 > c; c++)
            d[c] = 0;
        b.forEach(function(f) {
            var g = CB.Square.V16w(f.sq)
              , h = CB.Square.V16x(f.sq);
            d[8 * (7 - g) + h] = f.val
        });
        return JSON.stringify(d)
    }
    ;
    e.prototype.V1kq = function() {
        return ""
    }
    ;
    return e
}();
"use strict";
CB.V1kr = function() {
    var e = function(b, d) {
        this.line = b;
        this.eval = d
    };
    e.prototype.getEval = function() {
        return this.eval
    }
    ;
    e.prototype.getLine = function() {
        return this.line
    }
    ;
    e.prototype.length = function() {
        return this.line.length
    }
    ;
    e.prototype.getMove = function(b) {
        return this.line[b || 0] || new CB.V17g(0,0,0)
    }
    ;
    e.prototype.key = function() {
        return this.getMove().toString()
    }
    ;
    e.prototype.toString = function() {
        return String.formatEx("{eval}: {line}", this)
    }
    ;
    return e
}();
"use strict";
CB.Beefy = function() {
    var e = function(b, d, c) {
        this.setEngine(b);
        this.V1ks = new CB.Tick;
        this.nHighestMoveInBook = 0;
        this.handicapStyle = d || CB.V1kt.BEGINNER;
        switch (d) {
        default:
        case CB.V1kt.BEGINNER:
            e.CFG = e.V1ku;
            break;
        case CB.V1kt.AMATEUR:
            e.CFG = e.V1kv;
            break;
        case CB.V1kt.CLUBPLAYER:
            e.CFG = e.V1kw
        }
        this.name = c;
        this.V1kx = new CB.Timer
    };
    e.prototype.iAmPorky = !0;
    e.prototype.engine = null;
    e.prototype.lastDepth = -1;
    e.prototype.curLines = [];
    e.prototype.depthLines = [];
    e.prototype.depthArrLines = [];
    e.prototype.V1ky = null;
    e.prototype.evals = [];
    e.prototype.setTag = function(b) {
        this.engine.setTag(b)
    }
    ;
    e.prototype.getTag = function() {
        return this.engine.getTag()
    }
    ;
    e.prototype.setEngine = function(b) {
        this.engine && (this.engine.stop(),
        this.engine.removeOnUCIInfoListener(this.V1kz),
        this.engine.removeOnLineListener(this.idOnLine),
        this.engine.removeOnBestMoveListener(this.V1l0));
        if (this.engine = b)
            this.V1kz = this.engine.addOnUCIInfoListener(this.V1l1.bind(this)),
            this.idOnLine = this.engine.addOnLineListener(this._onLine.bind(this)),
            this.V1l0 = this.engine.addOnBestMoveListener(this._onBest.bind(this))
    }
    ;
    e.prototype.getHandicap = function() {
        return this.handicapStyle
    }
    ;
    e.prototype.V1l2 = function(b) {
        return this.engine
    }
    ;
    e.prototype.detachEngine = function() {
        var b = this.V1l2();
        this.setEngine(null);
        return b
    }
    ;
    e.prototype.V1l1 = function(b) {
        this.fireOnUCIInfo(this)
    }
    ;
    e.prototype._onLine = function(b, d, c, f, g, h, k, l) {
        if (f == CB.V1l3.V1l4) {
            if (d > this.lastDepth || this.V1ks.Va6() > 2 * CB.Beefy.CFG.V1l5) {
                this.maxPVNum = 0;
                0 < this.lastDepth && this.curLines[this.lastDepth] && this.storeLines(ObjUtil.clone(this.curLines[this.lastDepth]), this.lastDepth);
                if (0 < this.lastDepth) {
                    b = this.V1l6(this.lastDepth);
                    if (!b)
                        return;
                    this.evals[this.gm.getMoveNo()] = b.getEval();
                    c = d > this.V1l7() || this.V1ks.Va6() > CB.Beefy.CFG.V1l5;
                    2 < this.lastDepth && (c = c || 1 == this.depthArrLines[this.lastDepth - 1].length && 12 < d);
                    c && this.V1l8(this.evals);
                    if (f = this.V1l9(this.lastDepth) || this.V1la(this.lastDepth))
                        this.engine.stop(),
                        this.V1lb(f, this.lastDepth, b),
                        this.V1lc(f.getMove(), f.getMove(1), f.getEval(), b),
                        this.evals[this.gm.getMoveNo()] = f.getEval();
                    else if ((f = this.V1ld(this.lastDepth, b.getEval())) || b.getEval() > CB.Beefy.CFG.V1le && (c || d > this.V1l7() - 1) && !this.isRecapture(b.getMove()) && (f = this.V1lf(this.lastDepth, b.getEval())),
                    f)
                        this.engine.stop(),
                        this.V1lb(f, this.lastDepth, b),
                        this.V1lc(f.getMove(), f.getMove(1), f.getEval(), b),
                        c = Math.abs(this.evals[this.gm.getMoveNo()] - f.getEval()),
                        c > .6 * Math.abs(f.getEval()) && 60 < c && this.fireOnLosingLine(f, b),
                        this.evals[this.gm.getMoveNo()] = f.getEval();
                    else if (f = this.V1lg(this.curLines[this.lastDepth], d),
                    b = f.candidate ? f.candidate : f.best,
                    this.V1lb(b, this.lastDepth, f.bestLine),
                    c || b.getMove().isAMate)
                        this.engine.stop(),
                        this.V1lh() || this.V1lc(b.getMove(), b.getMove(1), b.getEval(), f.best),
                        this.evals[this.gm.getMoveNo()] = b.getEval()
                }
                this.lastDepth = d
            }
            g && (h = CB.V1kb.V1li(h));
            k > this.maxPVNum && 3 > k && (this.maxPVNum = k);
            d = new CB.V1kr(l,h);
            this.curLines[this.lastDepth] || (this.curLines[this.lastDepth] = {});
            this.curLines[this.lastDepth][d.key()] = d
        }
    }
    ;
    e.prototype.V1l7 = function() {
        return this.isEndgame() ? CB.Beefy.CFG.V1lj : CB.Beefy.CFG.V1lk
    }
    ;
    e.prototype._onBest = function(b, d) {
        this.bestAt1Ply ? this.V1lc(new CB.V17g(d.move.from,d.move.to,d.move.prom)) : (this.bestAt1Ply = d,
        this.V1ll = d.move,
        this.engine.clearHash(),
        this.engine.setMultiPV(this._getNVarsToCalc()),
        this.engine.go(this.gm, {
            infinite: !0
        }))
    }
    ;
    e.prototype._getNVarsToCalc = function(b) {
        b = this.gm.getCurPos().V3hu();
        var d = 20;
        CB.Vq.V37() && (d = 10);
        return Math.min(b.length, d)
    }
    ;
    e.prototype.storeLines = function(b, d) {
        this.depthLines[d] = b;
        this.depthArrLines[d] = AnalysisEngine.linesToArray(b);
        var c = this.gm.getCurPos();
        this.depthArrLines[d].forEach(function(f) {
            var g = ObjUtil.clone(c);
            f.line.forEach(function(h) {
                g.preSetMinCtx(h);
                g.makeMove(h)
            })
        })
    }
    ;
    e.prototype.V1lb = function(b, d, c) {
        this.V1ll = b.getMove();
        this.V1lm = b;
        this.fireOnInfo(this, d, d, 1, 1, this.V1ks.Va6());
        this.fireOnLine(this, d, 1, CB.V1l3.V1l4, !1, b.getEval(), 1, b.getLine(), {
            analysis: !1,
            handicapStyle: this.handicapStyle,
            bestLine: c
        });
        this.V1kx.runOnce(.9 * CB.Beefy.CFG.V1l5, function() {
            this.engine && this.engine.stop();
            this.fireOnBestMove(this, {
                move: this.V1ll
            })
        }
        .bind(this))
    }
    ;
    e.prototype.V1lc = function(b, d, c, f) {
        this.fireOnBestMove(this, {
            move: b,
            ponder: d,
            eval: c,
            trulyBestLine: f
        })
    }
    ;
    e.prototype.V1ln = function() {
        this.V1lo && this.V1lm && (this.V1lo.getEval() > this.V1lm.getEval() && this.fireOnBlunder(this, this.V1lo.getEval(), this.V1lm.getEval(), this.V1lm.getLine()),
        this.fireOnBestMove(this, {
            move: this.V1lm.getMove()
        }))
    }
    ;
    e.V1lp = function(b) {
        var d = b.getCurLineCut();
        b = b.isNormalInit() ? null : ObjUtil.clone(b.getStartPos());
        d = new CB.Game(b,d);
        d.gotoLast();
        return d
    }
    ;
    e.prototype.setHighestMoveInBook = function(b) {
        this.nHighestMoveInBook = b
    }
    ;
    e.prototype.go = function(b, d) {
        this.V1kx.stop();
        this.fireOnSearchStart(d);
        this.gm = CB.Beefy.V1lp(b);
        this.V1lq();
        this.engine.clearHash();
        this.engine.go(this.gm, {
            depth: 1,
            ponder: "false"
        });
        this.V1ks.start()
    }
    ;
    e.prototype.V1lq = function() {
        this.lastDepth = -1;
        this.curLines = [];
        this.V1lo = this.V1lm = null;
        this.depthArrLines = [];
        this.bestAt1Ply = null
    }
    ;
    e.prototype.getCurPos = function() {
        return this.engine.getCurPos()
    }
    ;
    e.prototype.getLines = function() {
        return this.engine.getLines()
    }
    ;
    e.prototype.getBestMove = function() {
        return this.V1lm ? this.V1lm.getMove() : null
    }
    ;
    e.prototype.stop = function() {
        return this.engine.stop()
    }
    ;
    e.prototype.getName = function() {
        return "Fritz"
    }
    ;
    e.prototype.isCalculating = function() {
        return !!this.engine && this.engine.isCalculating()
    }
    ;
    e.prototype.newGame = function(b) {
        this.engine.newGame();
        this.fireOnNewGame(b);
        this.nHighestMoveInBook = 0;
        this.evals = []
    }
    ;
    e.prototype.offerDrawToEngine = function() {
        if (this.gm) {
            var b = 0
              , d = this.gm.getMoveNo();
            if (d > 2 * CB.Beefy.CFG.V1lr)
                for (var c = d - 2 * CB.Beefy.CFG.V1lr; c <= d; c++)
                    if (void 0 !== this.evals[c])
                        if (this.evals[c] <= CB.Beefy.CFG.V1ls)
                            b++;
                        else
                            break;
            return b >= CB.Beefy.CFG.V1lr - 1 ? !0 : !1
        }
    }
    ;
    e.prototype.setMultiPV = function(b) {}
    ;
    e.prototype.getMultiPV = function() {
        return 1
    }
    ;
    e.prototype.clearHash = function() {}
    ;
    e.prototype.dispose = function() {
        this.engine.dispose()
    }
    ;
    e.prototype.exit = function() {
        this.stop();
        this.dispose();
        this.fireOnExit()
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "Line");
    V3i1.addEvent(e, "LosingLine");
    V3i1.addEvent(e, "CurMove");
    V3i1.addEvent(e, "CurLine");
    V3i1.addEvent(e, "Info");
    V3i1.addEvent(e, "BestMove");
    V3i1.addEvent(e, "UCIInfo");
    V3i1.addEvent(e, "NewGame");
    V3i1.addEvent(e, "Blunder");
    V3i1.addEvent(e, "Resign");
    V3i1.addEvent(e, "SearchStart");
    V3i1.addEvent(e, "Exit");
    V3i1.addEvent(e, "Stop");
    V3i1.addEvent(e, "Threat");
    V3i1.addEvent(e, "BeautyScore");
    V3i1.addEvent(e, "BookMove");
    V3i1.addEvent(e, "StrongMove");
    V3i1.addEvent(e, "Eval");
    V3i1.addEvent(e, "Hints");
    V3i1.addEvent(e, "MoveFeedback");
    V3i1.addEvent(e, "StaticEval");
    return e
}();
"use strict";
CB.Beefy.V1ku = {
    V1lt: 2,
    V1lk: 6,
    V1lj: 10,
    V1l5: 6E3,
    V1lu: -2E3,
    V1ls: 100,
    V1lr: 4,
    V1lv: 50,
    V1le: -500,
    V1lw: -200,
    V1lx: -300,
    V1ly: 1,
    V1lz: 1,
    V1m0: 70,
    V1m1: -900,
    V1m2: 2,
    V1m3: 2E3,
    V1m4: 800,
    V1m5: .1,
    V1m6: .7,
    V1m7: 100,
    V1m8: 30,
    MAX_LINENUMBER_NORMAL: 30,
    V1m9: 40,
    MIN_BLUNDER_OPENING: 10,
    MAX_LINENUMBER_OPENING: 10,
    V1ma: 150,
    V1mb: 5,
    V1mc: 1.5,
    V1md: -400,
    V1me: 90,
    MIN_BLUNDER_DEFEND_HARDER: 20,
    MAX_LINENUMBER_DEFEND_HARDER: 20,
    V1mf: 5,
    V1mg: 6,
    V1mh: 150,
    V1mi: 80,
    V1mj: !0,
    V1mk: .6,
    V1ml: 0,
    V1mm: .1
};
CB.Beefy.V1kv = {
    V1lt: 2,
    V1lk: 8,
    V1lj: 12,
    V1l5: 7E3,
    V1lu: -900,
    V1ls: 100,
    V1lr: 10,
    V1lv: 30,
    V1le: -400,
    V1lw: -100,
    V1lx: -100,
    V1m0: 70,
    V1ly: 1,
    V1lz: 1,
    V1m1: -500,
    V1m2: 2,
    V1m3: 900,
    V1m4: 500,
    V1m5: .3,
    V1m6: .8,
    V1m7: 60,
    V1m8: 10,
    MAX_LINENUMBER_NORMAL: 8,
    V1m9: 20,
    MIN_BLUNDER_OPENING: 0,
    MAX_LINENUMBER_OPENING: 6,
    V1ma: 150,
    V1mb: 5,
    V1mc: 1.5,
    V1md: -350,
    V1me: 50,
    MIN_BLUNDER_DEFEND_HARDER: 10,
    MAX_LINENUMBER_DEFEND_HARDER: 6,
    V1mf: 1,
    V1mg: 4,
    V1mh: 90,
    V1mi: 70,
    V1mj: !0,
    V1mk: .3,
    V1ml: .1,
    V1mm: .1
};
CB.Beefy.V1kw = {
    V1lt: 2,
    V1lk: 11,
    V1lj: 20,
    V1l5: 1E4,
    V1lu: -750,
    V1ls: 2,
    V1lr: 12,
    V1lv: 15,
    V1le: -300,
    V1lw: 70,
    V1lx: -20,
    V1ly: .7,
    V1lz: .7,
    V1m1: -80,
    V1m2: 3,
    V1m0: 90,
    V1m3: 500,
    V1m4: 200,
    V1m5: .6,
    V1m6: 1,
    V1m7: 25,
    V1m8: 5,
    MAX_LINENUMBER_NORMAL: 4,
    V1m9: 10,
    MIN_BLUNDER_OPENING: 0,
    MAX_LINENUMBER_OPENING: 2,
    V1ma: 400,
    V1mb: 10,
    V1mc: 4,
    V1md: -250,
    V1me: 30,
    MIN_BLUNDER_DEFEND_HARDER: 2,
    MAX_LINENUMBER_DEFEND_HARDER: 2,
    V1mf: .3,
    V1mg: .5,
    V1mh: 50,
    V1mi: 30,
    V1mj: !1,
    V1mk: .05,
    V1ml: .3,
    V1mm: .1
};
CB.Beefy.V1mn = {
    V1lt: 2,
    V1lk: 12,
    V1lj: 24,
    V1l5: 12E3,
    V1ly: .5,
    V1lz: .5,
    V1m1: -60,
    V1m2: 3,
    V1m7: 20,
    V1m8: 5,
    V1md: -150,
    V1ml: .4,
    V1mm: .1
};
CB.Beefy.prototype.V1l9 = function(e) {
    if (1 <= e && this.depthArrLines[e] && this.isRecapture(this.depthArrLines[e][0].getMove()))
        return this.depthArrLines[e][0]
}
;
CB.Beefy.prototype.V1la = function(e) {
    if (3 <= e && this.depthArrLines[e] && this.isCastling(this.depthArrLines[e][0].getMove()))
        return this.depthArrLines[e][0]
}
;
CB.Beefy.prototype.V1ld = function(e, b) {
    if (-2E4 > b && this.depthArrLines[e]) {
        b = !1;
        for (var d = 0; d < this.depthArrLines[e].length; d++)
            if (this.isFutileMateDefense(this.gm.getCurPos(), this.depthArrLines[e][d].getMove()))
                b = !0;
            else if ((b || 0 == d) && -2E4 > this.depthArrLines[e][d].getEval())
                return this.depthArrLines[e][d]
    }
}
;
CB.Beefy.prototype.isFutileMateDefense = function(e, b) {
    var d = new Att
      , c = Att.pieceVal(e.board[b.from]);
    return d.calc(e, b.from, b.to) < .6 * -c
}
;
CB.Beefy.prototype.V1lf = function(e, b) {
    var d = this.find1PlyLosingAtThisDepth(e, b);
    return d ? d : this.findLowPlyLosingAtThisDepth(e, b)
}
;
CB.Beefy.prototype.find1PlyLosingAtThisDepth = function(e, b) {
    if (this.bestAt1Ply && !this.isEndgame() && (CB.Beefy.CFG.V1ly > Math.random() || 200 < b)) {
        var d = this.depthLines[e][this.bestAt1Ply.move];
        d ? this.calcResponseSacrificeVal(d) : d = new CB.V1kr([this.bestAt1Ply.move],this.getEvalOf(this.bestAt1Ply.move, this.depthArrLines[e]));
        if (d && (CB.Beefy.CFG.V1mj || !this.refuteIsPawnFork(this.gm.getCurPos(), d)) && d.getEval() > CB.Beefy.CFG.V1m1) {
            e = b - d.getEval();
            var c = CB.Beefy.CFG.V1m0;
            24 > this.gm.getMoveNo() && (c *= 1.5);
            if (e > c && e < this.getMaxLosingVal(b))
                return d
        }
    }
}
;
CB.Beefy.prototype.findLowPlyLosingAtThisDepth = function(e, b) {
    var d = CB.Beefy.CFG.V1m2;
    this.isEndgame() && (d = 2 * CB.Beefy.CFG.V1m2 + 1);
    if (e > d)
        for (var c = d; 7 >= c && c < e; c++)
            if ((c > d + 1 || CB.Beefy.CFG.V1lz > Math.random() || 200 < b) && this.depthArrLines[c])
                for (var f = this.depthArrLines[c][0].getEval(), g = 0; g < this.depthArrLines[c].length; g++) {
                    var h = f - this.depthArrLines[c][g].getEval();
                    if (h <= CB.Beefy.CFG.V1lv) {
                        var k = this.depthArrLines[c][g].getMove()
                          , l = this.depthLines[e][k]
                          , m = 0;
                        l ? 0 < this.calcResponseSacrificeVal(l).att && (m = 100) : l = new CB.V1kr([k],this.getEvalOf(k, this.depthArrLines[c]));
                        if (l && (CB.Beefy.CFG.V1mj || !this.refuteIsPawnFork(this.gm.getCurPos(), l)) && l.getEval() > this.getMinEvalAfterPlyBlunder(b) - m && (k = b - l.getEval(),
                        k > h + 60 && k < this.getMaxLosingVal(b) + m))
                            return l
                    }
                }
}
;
CB.Beefy.prototype.calcResponseSacrificeVal = function(e) {
    if (2 <= e.line.length) {
        var b = ObjUtil.clone(this.gm.getCurPos());
        b.makeMove(e.line[0]);
        e = e.line[1];
        b = (new Att).calc(b, e.from, e.to);
        if (0 > b)
            return {
                att: -b,
                sacmove: e.debug
            }
    }
    return {
        att: 0,
        sacmove: ""
    }
}
;
CB.Beefy.prototype.getEvalOf = function(e, b) {
    for (var d = 0; d < b.length; d++)
        if (b[d].line.length && e.equals(b[d].line[0]))
            return b[d].getEval();
    return b.length ? b[b.length - 1].getEval() : 0
}
;
CB.Beefy.prototype.getMinEvalAfterPlyBlunder = function(e) {
    return 30 >= this.gm.getMoveOffs() || e < CB.Beefy.V1mo ? CB.Beefy.CFG.V1m1 : CB.Beefy.CFG.V1m1 - 1.5 * (this.gm.getMoveOffs() - 30)
}
;
CB.Beefy.prototype.getMaxLosingVal = function(e) {
    return 2E4
}
;
CB.Beefy.prototype.V1l6 = function(e) {
    for (var b = AnalysisEngine.linesToArray(this.depthLines[e]); 0 == b.length && 0 < e; )
        e--,
        b = AnalysisEngine.linesToArray(this.depthLines[e]);
    var d = this.gm.getCurPos();
    b.forEach(function(c) {
        d.preSetMinCtx(c.getMove())
    });
    return b[0]
}
;
CB.Beefy.prototype.V1lg = function(e, b) {
    var d = AnalysisEngine.linesToArray(e)
      , c = d[0].getEval();
    e = {
        best: d[0],
        candidate: null
    };
    if (c > CB.Beefy.CFG.V1m3 || 2E4 < c || this.isEndgame() && c > CB.Beefy.CFG.V1m4 && Math.random() < CB.Beefy.CFG.V1m5 || d.hasClearlyBest(80) && this.isRecapture(d[0].getMove()) && Math.random() < CB.Beefy.CFG.V1m6 || 5 < d.getNLinesInEvalRange(15) || 1 == d.length && 14 < b)
        return e;
    var f = CB.Beefy.CFG.V1m7
      , g = CB.Beefy.CFG.V1m8
      , h = CB.Beefy.CFG.MAX_LINENUMBER_NORMAL;
    8 >= this.gm.getMoveNo() - this.nHighestMoveInBook && (f = CB.Beefy.CFG.V1m9,
    g = CB.Beefy.CFG.MIN_BLUNDER_OPENING,
    h = CB.Beefy.CFG.MAX_LINENUMBER_OPENING);
    c > CB.Beefy.CFG.V1ma && (g = Math.max(g, Math.abs(c / CB.Beefy.CFG.V1mb)),
    f = Math.max(f, Math.abs(c / CB.Beefy.CFG.V1mc)),
    h = 999);
    c < CB.Beefy.CFG.V1md && (f = CB.Beefy.CFG.V1me,
    g = CB.Beefy.CFG.MIN_BLUNDER_DEFEND_HARDER,
    h = CB.Beefy.CFG.MAX_LINENUMBER_DEFEND_HARDER);
    var k = this.gm.getCurPos();
    d.forEach(function(n) {
        k.preSetMinCtx(n.getMove())
    });
    var l = Math.random()
      , m = Math.random();
    if (b = d.pickRandom(function(n) {
        if (n.lineNumber > h)
            return 0;
        var p = c - n.getEval();
        return n.getMove().isACheck && p < CB.Beefy.CFG.V1mi ? CB.Beefy.CFG.V1mg : n.getMove().vct && n.getMove().isACheck && p < CB.Beefy.CFG.V1mh ? CB.Beefy.CFG.V1mf + CB.Beefy.CFG.V1mg : n.getMove().vct && p < CB.Beefy.CFG.V1mh ? CB.Beefy.CFG.V1mf : p > f ? 0 < n.getEval() && 250 > f ? 100 * l * CB.Beefy.CFG.V1mk / (Math.pow(p, 2) + 1) : 0 : c - n.getEval() < g ? m * CB.Beefy.CFG.V1ml : this.V1mp(n.getMove()) ? CB.Beefy.CFG.V1mm : 1
    }
    .bind(this)))
        e.candidate = b;
    return e
}
;
CB.Beefy.prototype.V1lh = function() {
    var e = 0
      , b = this.gm.getMoveNo();
    if (14 < b)
        for (var d = b - 14; d <= b; d++)
            if (void 0 !== this.evals[d])
                if (this.evals[d] < CB.Beefy.CFG.V1lu)
                    e++;
                else
                    break;
    return 6 <= e ? (this.fireOnResign(),
    !0) : !1
}
;
CB.Beefy.prototype.refuteIsPawnFork = function(e, b) {
    e = ObjUtil.clone(e);
    e.makeMove(b.getMove());
    if (b = b.getMove(1))
        return CB.V1c4.V1c5(e, b)
}
;
CB.Beefy.prototype.isEndgame = function() {
    var e = CB.V1c4.sumMaterial(this.gm.getCurPos(), CB.V15e.WHITE)
      , b = CB.V1c4.sumMaterial(this.gm.getCurPos(), CB.V15e.BLACK);
    return 16 > this.gm.getCurPos().getPieces().length && 2100 > e + b
}
;
CB.Beefy.prototype.isRecapture = function(e) {
    var b = this.gm.getLastMove();
    if (b)
        return b.to == e.to && 0 != b.vct
}
;
CB.Beefy.prototype.V1mp = function(e) {
    if (20 < this.gm.getMoveNo())
        return !1;
    var b = this.gm.getLastMove();
    if (b)
        return b.to == e.from
}
;
CB.Beefy.prototype.isCastling = function(e) {
    return (this.gm.getCurPos().board[e.from] & CB.Piece.V15j) === CB.Piece.KING ? 2 === Math.abs(CB.Square.V175(e.from, e.to)) : !1
}
;
"use strict";
CB.Beefy.prototype.V1l8 = function(e) {
    for (var b = 0, d = 0, c = this.gm.getMoveNo(); 2 <= c; --c) {
        var f = e[c] - e[c - 2];
        isNaN(f) || (30 > f ? d++ : d -= Math.abs(f / 30),
        b++)
    }
}
;
"use strict";
CB.V1l3 = {
    V1mq: 1,
    V1mr: 2,
    V1l4: 3
};
CB.V1kb = function() {
    var e = {
        MATE_VALUE: 3E4,
        MATE_THRESHOLD: 28E3,
        MOVE_VALUE: 28E3,
        MOVE_THRESHOLD: 26E3
    };
    e.V1kc = -e.MATE_VALUE;
    e.MAX_VALUE = e.MATE_VALUE;
    e.V1li = function(b) {
        return 0 > b ? -e.MATE_VALUE - b : e.MATE_VALUE - b
    }
    ;
    e.V1ms = function(b) {
        return b > -e.MATE_THRESHOLD || b < e.MATE_THRESHOLD ? -1 : 0 > b ? b - e.MATE_THRESHOLD : e.MATE_THRESHOLD - b
    }
    ;
    return e
}();
CB.V1mt = function() {
    var e = {
        EV_TOTALLY_WINNING: 200,
        EV_WINNING: 140,
        EV_ADVANTAGE: 70,
        EV_SLIGHT_ADVANTAGE: 25
    };
    e.EV_TOTALLY_LOSING = -e.EV_TOTALLY_WINNING;
    e.EV_LOSING = -e.EV_WINNING;
    e.EV_DISADVANTAGE = -e.EV_ADVANTAGE;
    e.EV_SLIGHT_DISADVANTAGE = -e.EV_SLIGHT_ADVANTAGE;
    e.getGlyph = function(b) {
        return b >= e.EV_WINNING ? CB.V1mu.V1mv : b >= e.EV_ADVANTAGE ? CB.V1mu.V1mw : b > e.EV_SLIGHT_ADVANTAGE ? CB.V1mu.V1mx : b >= e.EV_SLIGHT_DISADVANTAGE ? CB.V1mu.V1my : b > e.EV_DISADVANTAGE ? CB.V1mu.V1mz : b > e.EV_LOSING ? CB.V1mu.V1n0 : CB.V1mu.V1n1
    }
    ;
    return e
}();
CB.V1n2 = {
    V1n3: "MultiPV",
    V1n4: "Ponder"
};
CB.EngineInstance = function() {
    var e = {
        getPosString: function(d) {
            var c = "position startpos";
            d.isNormalInit() || (c = "position fen " + d.getStartPos().toFEN());
            d = d.getCurLineCut();
            if (0 < d.length) {
                c += " moves";
                for (var f = 0; f < d.length; ++f)
                    c += " " + d[f].toString()
            }
            return c
        },
        getGoString: function(d) {
            var c = new StringBuilder;
            c.append("go ");
            d = d || {};
            d.depth ? c.appendFormat("depth {0} ", d.depth) : d.moveTime && c.appendFormat("movetime {0} ", Math.round(d.moveTime));
            d.wTime && c.appendFormat("wtime {0} ", Math.round(d.wTime));
            d.bTime && c.appendFormat("btime {0} ", Math.round(d.bTime));
            (d.infinite || ObjUtil.isEmpty(d)) && c.appendFormat("infinite ");
            return c.toString()
        },
        getSetOptionString: function(d, c) {
            d = String.formatEx("setoption name {0}", d);
            "undefined" !== typeof c && (d += String.formatEx(" value {0}", c));
            return d
        }
    }
      , b = function(d, c, f, g) {
        this.url = d;
        this.worker = null;
        this.V1n5 = !1;
        this.V1n6 = f || null;
        this.name = g;
        this.szPool = c;
        this.V1n7 = [];
        this.cur = null;
        this.lines = [];
        this.V1n8 = {
            name: "",
            author: ""
        };
        this.V1n9 = !1;
        this.szPool && !CB.EngineInstance.V1na && (this.V1nb = setInterval(this.V1nc.bind(this), b.POOL_TIMEOUT));
        this.V1nd = CB.EngineInstance._createPreDefaultOptions();
        0 < this.szPool && !CB.EngineInstance.V1na && this.V1ne();
        this.id = ++b.engineCount;
        this.minDepthForFire = 0;
        this.infinite = !1
    };
    b.engineCount = 0;
    b._createPreDefaultOptions = function() {
        var d = {};
        d[CB.V1n2.V1n3] = 1;
        d[CB.V1n2.V1n4] = "false";
        return d
    }
    ;
    b.prototype.setMinDepthForFire = function(d) {
        this.minDepthForFire = d
    }
    ;
    b.prototype.getTag = function() {
        return this.V1n6
    }
    ;
    b.prototype.setTag = function(d) {
        this.V1n6 = d
    }
    ;
    b.prototype.V1nf = function() {
        CBDebug.assert(null != this.worker);
        CBDebug.assert(this.V1n5);
        this.V1n5 = !1;
        this.worker.terminate();
        this.worker = null;
        this.V1ng = !1
    }
    ;
    b.prototype.V1nh = function(d) {
        d = d.split(" ");
        var c = CB.V17g.fromString(d[1]), f;
        "ponder" == d[2] && (f = CB.V17g.fromString(d[3]));
        this.V1n5 = !1;
        this.fireOnBestMove(this, {
            move: c,
            ponder: f
        })
    }
    ;
    b.prototype.V1ni = function(d) {
        for (var c = d.split(" "), f = d = null, g = null, h = 1, k = null, l = null, m = null, n = null, p = null, q = null, t = CB.V1l3.V1l4, v = !1, z = 1; z < c.length; ++z)
            switch (c[z]) {
            case "depth":
                d = parseInt(c[++z]);
                break;
            case "seldepth":
                f = parseInt(c[++z]);
                break;
            case "nps":
                l = parseInt(c[++z]);
                break;
            case "nodes":
                m = parseInt(c[++z]);
                break;
            case "score":
                var E = c[++z];
                g = parseInt(c[++z]);
                switch (E) {
                case "mate":
                    v = !0
                }
                break;
            case "time":
                n = parseInt(c[++z]);
                break;
            case "currmovenumber":
                q = parseInt(c[++z]);
                break;
            case "currmove":
                E = c[++z];
                p = CB.V17g.fromString(E);
                break;
            case "lowerbound":
                t = CB.V1l3.V1mq;
                break;
            case "upperbound":
                t = CB.V1l3.V1mr;
                break;
            case "multipv":
                h = parseInt(c[++z]);
                break;
            case "pv":
                for (k = [],
                ++z; z < c.length; ++z)
                    if (E = c[z],
                    CB.V17g.isValidString(E))
                        k.push(CB.V17g.fromString(E));
                    else {
                        --z;
                        break
                    }
            }
        f = f || d;
        d && d > this.minDepthForFire && this.fireOnInfo(this, d, f, m, l, n);
        p && (this.V1nj || this.fireOnCurMove(this, q, p));
        k && (this.lines[h - 1] = k,
        d > this.minDepthForFire || 2 >= d) && (c = ObjUtil.clone(k),
        this.fireOnLine(this, d, f, t, v, g, h, c, {
            handicapStyle: 0,
            analysis: this.V1nk && this.V1nk.infinite
        }))
    }
    ;
    b.g_regexMeta = /^id (\w+) (.*)$/i;
    b.prototype.V1nl = function(d) {
        this.V1n9 || (d = b.g_regexMeta.exec(d)) && d.length && (this.V1n8[d[1]] = d[2])
    }
    ;
    b.prototype.V1nm = function(d) {
        this.V1n9 || (this.V1n9 = !0,
        this.V1nj || this.fireOnUCIInfo(this))
    }
    ;
    b.prototype.V1nn = function(d) {
        "readyok" !== d && ("uciok" === d ? this.V1nm() : d.startsWith("id") ? this.V1nl(d) : d.startsWith("option") || (d.startsWith("bestmove") ? this.V1nh(d) : d.startsWith("info") && this.V1ni(d)))
    }
    ;
    b.prototype.V1no = function(d) {
        this.V1ng = !1;
        this.V1nn(d.data)
    }
    ;
    b.prototype.V1np = function(d) {
        try {
            this.worker && this.worker.postMessage(d)
        } catch (c) {
            CB.V3("Post", c)
        }
    }
    ;
    b.POOL_TIMEOUT = 4E3;
    b.prototype.V1n7 = [];
    b.prototype.V1nq = function() {
        if (0 == this.V1n7.length)
            try {
                return new Worker(this.url)
            } catch (d) {
                alert("Engine: " + d)
            }
        return this.V1n7.pop()
    }
    ;
    b.prototype.V1nc = function() {
        this.V1n7.length >= this.szPool || this.V1ne()
    }
    ;
    b.prototype.V1ne = function() {
        try {
            CB.EngineInstance.V1na ? this.V1nr(function(d) {
                this.V1n7.push(d)
            }
            .bind(this)) : this.V1n7.push(new Worker(this.url))
        } catch (d) {
            CB.V3("Engine " + this.url, d)
        }
    }
    ;
    b.prototype.V1ns = function() {
        try {
            if (this.worker = this.V1nq())
                this.worker.onmessage = this.V1no.bind(this),
                this.worker.onerror = function(d) {
                    d.preventDefault()
                }
                ,
                this.V1np("uci"),
                this.V1np("isready"),
                this.V1nt()
        } catch (d) {
            CB.V3("Start this.url", d)
        }
    }
    ;
    b.prototype.go = function(d, c) {
        try {
            this.V1nk = c || {
                infinite: !0
            };
            this.V1nk.nMultiPV = this.nMultiPV || 1;
            this.infinite = this.V1nk.infinite || this.V1nk.analysis;
            this.stop();
            this.V1n5 = !0;
            this.V1nj || this.fireOnSearchStart(this.V1nk);
            if (!this.worker && !this.V1ng) {
                this.V1ng = !0;
                if (CB.EngineInstance.V1na) {
                    this.V1nr(function(h) {
                        return function(k) {
                            this.V1ng = !1;
                            this.worker = k;
                            this.worker.onmessage = this.V1no.bind(this);
                            this.worker.onerror = function(m) {
                                m.preventDefault()
                            }
                            ;
                            this.V1np("uci");
                            this.V1np("isready");
                            this.V1nt();
                            k = e.getPosString(h);
                            var l = e.getGoString(this.V1nk);
                            "" != l && (this.cur = ObjUtil.clone(h.getCurPos()),
                            this.lines = [],
                            this.V1np(k),
                            this.V1np(l))
                        }
                        .bind(this)
                    }
                    .call(this, d));
                    return
                }
                this.V1ns()
            }
            var f = e.getPosString(d)
              , g = e.getGoString(this.V1nk);
            "" != g && (this.cur = ObjUtil.clone(d.getCurPos()),
            this.lines = [],
            this.V1np(f),
            this.V1np(g))
        } catch (h) {
            CB.V3("EngineGo", h)
        }
    }
    ;
    b.prototype.getCurPos = function() {
        return this.cur
    }
    ;
    b.prototype.getLines = function() {
        return this.lines
    }
    ;
    b.prototype.getBestMove = function() {
        return 0 == this.lines.length || 0 == this.lines[0].length ? null : this.lines[0][0]
    }
    ;
    b.prototype.stop = function() {
        this.worker && this.V1n5 && (this.V1np("quit"),
        this.V1nf(),
        this.fireOnStop(this.infinite))
    }
    ;
    b.prototype.getName = function() {
        return this.V1n8.name
    }
    ;
    b.prototype.isCalculating = function() {
        return this.V1n5
    }
    ;
    b.prototype.setHighestMoveInBook = function() {}
    ;
    b.prototype.newGame = function(d) {
        this.worker && !this.V1n5 && this.V1np("ucinewgame");
        this.V1nj || this.fireOnNewGame(d)
    }
    ;
    b.prototype.dispose = function() {
        if (this.szPool) {
            if (this.V1n7.length)
                for (var d = 0; d < this.V1n7.length; ++d)
                    this.V1n7[d].terminate();
            clearInterval(this.V1nb)
        }
        this.removeAllListeners()
    }
    ;
    b.prototype.exit = function() {
        this.stop();
        this.dispose();
        this.fireOnExit()
    }
    ;
    b.prototype.V1nd = null;
    b.prototype.V1nu = function(d, c) {
        this.V1nd[d] = c;
        this.worker && this.V1np(e.getSetOptionString(d, c))
    }
    ;
    b.prototype.V1nv = function(d) {
        return this.V1nd[d]
    }
    ;
    b.prototype.setMultiPV = function(d) {
        this.V1nu(CB.V1n2.V1n3, d);
        this.nMultiPV = d
    }
    ;
    b.prototype.getMultiPV = function() {
        return this.V1nv(CB.V1n2.V1n3)
    }
    ;
    b.prototype.clearHash = function() {}
    ;
    b.prototype.V1nw = function(d) {
        this.V1nu(CB.V1n2.V1n4, d ? "true" : "false")
    }
    ;
    b.prototype.offerDrawToEngine = function() {
        return !1
    }
    ;
    b.prototype.V1nt = function() {
        for (var d in this.V1nd)
            this.V1nd.hasOwnProperty(d) && this.V1np(e.getSetOptionString(d, this.V1nd[d]))
    }
    ;
    b.prototype.V1nr = function(d) {
        var c = "/Common/Chess/Engine/df14/df14AjaxData.js";
        V3ir.canRunWebAssembly() && !CB.Vq.V37() && (c = "/Common/Chess/Engine/webasm/fritzajax3.js");
        this.url = c;
        $.ajax({
            url: c,
            type: "GET",
            data: {},
            async: !0,
            cache: !0,
            processData: !1,
            success: function(f) {
                f = new Blob([f],{
                    type: "application/javascript"
                });
                try {
                    var g = new Worker(URL.createObjectURL(f));
                    d(g)
                } catch (h) {}
            }
        })
    }
    ;
    V3i1.initForListeners(b);
    V3i1.addEvent(b, "Line");
    V3i1.addEvent(b, "LosingLine");
    V3i1.addEvent(b, "CurMove");
    V3i1.addEvent(b, "CurLine");
    V3i1.addEvent(b, "Info");
    V3i1.addEvent(b, "BestMove");
    V3i1.addEvent(b, "UCIInfo");
    V3i1.addEvent(b, "NewGame");
    V3i1.addEvent(b, "SearchStart");
    V3i1.addEvent(b, "Exit");
    V3i1.addEvent(b, "Stop");
    V3i1.addEvent(b, "Threat");
    V3i1.addEvent(b, "BeautyScore");
    V3i1.addEvent(b, "BookMove");
    V3i1.addEvent(b, "StrongMove");
    V3i1.addEvent(b, "Eval");
    V3i1.addEvent(b, "Hints");
    V3i1.addEvent(b, "MoveFeedback");
    V3i1.addEvent(b, "StaticEval");
    return b
}();
"use strict";
var AnalysisEngine = function(e) {
    AnalysisEngine.DefaultOptions = {};
    AnalysisEngine.engineCount = 0;
    e = e || {};
    this.options = ObjUtil.copyTo(AnalysisEngine.DefaultOptions, e, !0);
    this.szPool = 0;
    V3ir.canRunWebAssembly() && (this.szPool = 2);
    this.loadEngineInstance();
    this.id = ++AnalysisEngine.engineCount;
    console.log("AnalysisEngine");
    AnalysisEngine.InitListeners();
    this.analysisTick = new CB.Tick
};
AnalysisEngine.createGlobal = function(e) {
    try {
        "undefined" !== typeof V3ir && !V3ir.analysisEngine && CB.Vq.V35() && V3ir.config.useAnalysisEngines && (V3ir.analysisEngine = new AnalysisEngine(e || {
            minDepthForFire: 5
        }))
    } catch (b) {
        CB.V3("PM:initAnalysisEngine", b)
    }
}
;
AnalysisEngine.prototype.destroy = function() {}
;
AnalysisEngine.prototype.loadEngineInstance = function() {
    this.engine = new CB.EngineInstance(V3ir.config.getEngineUrl()[0],this.szPool,1,"Analysis");
    this.options.minDepthForFire && this.engine.setMinDepthForFire(this.options.minDepthForFire);
    this.idOnLine = this.engine.addOnLineListener(this._onLine.bind(this));
    this.idOnBestMove = this.engine.addOnBestMoveListener(this._onBest.bind(this))
}
;
AnalysisEngine.prototype.onGameNavigate = function() {}
;
AnalysisEngine.prototype.engineGo = function(e) {
    this._resetGoState();
    this.kernel = e;
    this.engine.setMultiPV(this._getNVarsToCalc());
    this.engine.go(this.kernel.game, {
        infinite: !0
    });
    this.engine.fireOnThreat(!1);
    this.running = !0;
    this.analysisTick.start()
}
;
AnalysisEngine.prototype.threatGo = function(e) {
    this._resetGoState();
    this.engine.setMultiPV(2);
    this.engine.go(e, {
        infinite: !0
    });
    this.running = !0;
    this.analysisTick.start()
}
;
AnalysisEngine.prototype.engineStop = function() {
    this.engine.stop();
    this.running = !1
}
;
AnalysisEngine.prototype.clearLines = function() {
    this._resetGoState()
}
;
AnalysisEngine.prototype.dispose = function() {
    this.engine.exit()
}
;
AnalysisEngine.prototype.linkPlayingMode = function(e) {
    e.getMarkedSquaresOnButtonDown && (e.clickHintTimer || (e.clickHintTimer = new CB.Timer),
    e.kernel.boardWin.isHandlerBoard ? (e.idOnLineListener || (e.idOnLineListener = this.addOnLineListener(e.onAnalysisLine.bind(e))),
    e.idOnStrongMoveListener || (e.idOnStrongMoveListener = this.addOnStrongMoveListener(e.onAnalysisStrongMove.bind(e)))) : (e.kernel.boardWin.fnMarkSquaresOnButtonDown = e.getMarkedSquaresOnButtonDown.bind(e),
    e.startClickHintTimer && (e.kernel.boardWin.fnSquareClick = e.startClickHintTimer.bind(e)),
    e.kernel.boardWin.fnSquareChangeInMouseMove = function() {
        e.clickHintTimer && e.clickHintTimer.stop()
    }
    .bind(e),
    e.kernel.boardWin.fnSquareRelease = function() {
        e.clickHintTimer && e.clickHintTimer.stop()
    }
    .bind(e),
    e.idOnLineListener || (e.idOnLineListener = this.addOnLineListener(e.onAnalysisLine.bind(e)),
    e.kernel.boardWin.idOnLineListener || (e.kernel.boardWin.idOnLineListener = this.addOnLineListener(e.kernel.boardWin.refreshMarkedSquares.bind(e.kernel.boardWin))))))
}
;
AnalysisEngine.prototype.unlinkPlayingMode = function(e) {
    e.clickHintTimer && e.clickHintTimer.stop();
    e.kernel.boardWin && (e.kernel.boardWin.fnSquareClick = null,
    e.kernel.boardWin.fnMarkSquaresOnButtonDown = null,
    this.removeOnLineListener(e.kernel.boardWin.idOnLineListener),
    e.kernel.boardWin.idOnLineListener = null);
    this.removeOnLineListener(e.idOnLineListener);
    this.removeOnStrongMoveListener(e.idOnStrongMoveListener);
    e.idOnLineListener = null;
    e.idOnStaticEvalListener = null
}
;
AnalysisEngine.prototype.linkPlayingModeForThreat = function(e) {
    e.idOnThreatLineListener || (e.idOnThreatLineListener = this.addOnLineListener(e.onThreatLine.bind(e)))
}
;
AnalysisEngine.prototype.unlinkPlayingModeForThreat = function(e) {
    this.removeOnLineListener(e.idOnThreatLineListener);
    e.idOnThreatLineListener = null
}
;
AnalysisEngine.prototype._getNVarsToCalc = function() {
    return this.nFixedVars ? this.nFixedVars : 128
}
;
AnalysisEngine.prototype.getHintSquaresOnButtonDown = function(e) {
    var b = [];
    if (0 < this.lastDepth) {
        var d = AnalysisEngine.linesToArray(this.curLines[this.lastDepth - 1]);
        d.sort(function(f, g) {
            return g.getEval() - f.getEval()
        });
        if (!d.length)
            return b;
        var c = d[0].getEval();
        d.forEach(function(f) {
            var g = f.getEval();
            f.getMove().from == e && b.push({
                sq: f.getMove().to,
                clr: this._getTargetSqClr(g, c),
                txt: c - g
            })
        }
        .bind(this))
    }
    return b
}
;
AnalysisEngine.prototype.getCounterMoveTo = function(e, b) {
    if (0 < this.lastDepth) {
        var d = AnalysisEngine.linesToArray(this.curLines[this.lastDepth - 1]);
        d.sort(function(k, l) {
            return l.getEval() - k.getEval()
        });
        if (d.length)
            for (var c = d[0].getEval(), f = 0; f < d.length; f++) {
                var g = d[f]
                  , h = g.getEval();
                if (g.getMove(0).from == e && g.getMove(0).to == b)
                    return {
                        from: g.getMove(1).from,
                        to: g.getMove(1).to,
                        clr: this._getTargetSqClr(h, c)
                    }
            }
    }
}
;
AnalysisEngine.prototype._getTargetSqClr = function(e, b) {
    if (23E3 < Math.abs(e))
        return new CB.HSLColor(0,0,0,.6);
    e = b - e;
    b = .55 + .15;
    b = [[2E4, 0, 95, 55, 1], [1E3, 3, 95, 50, .9], [700, 4, 95, 48, .9], [400, 12, 95, 47, .9], [300, 14, 95, 46, .9], [250, 18, 95, 46, b], [200, 19, 95, 45, .9], [170, 20, 90, 60, .9], [140, 24, 90, 60, .9], [120, 28, 90, 60, .9], [100, 30, 90, 60, .9], [90, 34, 90, 45, .9], [80, 38, 90, 45, b], [70, 46, 90, 45, b], [60, 50, 90, 45, b], [50, 65, 90, 45, b], [40, 70, 90, 45, .55], [30, 75, 90, 45, .55], [20, 80, 90, 45, .55], [15, 90, 90, 45, .55], [10, 100, 90, 45, .55], [7, 110, 90, 45, .55], [5, 115, 90, 42, .7], [0, 120, 90, 42, .74]];
    for (var d = 0; d < b.length; d++)
        if (e >= b[d][0])
            return new CB.HSLColor(b[d][1],b[d][2],b[d][3],b[d][4]);
    return new CB.HSLColor(CB.HSLColor.GREEN,90,40,.6)
}
;
AnalysisEngine.prototype._resetGoState = function() {
    this.curLines = [];
    this.baseLines = {};
    this.depthLines = [];
    this.depthArrLines = [];
    this.lastDepth = 1;
    this.bestAt1Ply = null;
    this.firedStrong = !1
}
;
AnalysisEngine.prototype._onLine = function(e, b, d, c, f, g, h, k) {
    if (c == CB.V1l3.V1l4 || f) {
        if (b > this.lastDepth) {
            this.maxPVNum = 0;
            0 < this.lastDepth && this.curLines[this.lastDepth] && this.storeLines(ObjUtil.clone(this.curLines[this.lastDepth]), this.lastDepth);
            if (this.lastDepth && this.depthArrLines[this.lastDepth] && this.depthArrLines[this.lastDepth].length) {
                e = null;
                if (1 < this.depthArrLines[this.lastDepth].length) {
                    var l = this.depthArrLines[this.lastDepth][1];
                    var m = this.depthArrLines[this.lastDepth][1].getEval();
                    e = this.checkIfStrongMoveExists()
                }
                (!this.options.minDepthForFire || this.lastDepth >= this.options.minDepthForFire || 1 == this.lastDepth) && this.fireOnLine(this.lastDepth, this.depthArrLines[this.lastDepth][0].getEval(), this.depthArrLines[this.lastDepth][0], m, l, e)
            }
            this.lastDepth = b;
            18E4 <= this.analysisTick.getExpired() && this.engineStop()
        }
        f && (g = CB.V1kb.V1li(g));
        b = new CB.V1kr(k,g);
        this.curLines[this.lastDepth] || (this.curLines[this.lastDepth] = {});
        this.curLines[this.lastDepth][b.key()] = b
    }
}
;
AnalysisEngine.prototype.storeLines = function(e, b) {
    this.depthLines[b] = e;
    this.depthArrLines[b] = AnalysisEngine.linesToArray(e)
}
;
AnalysisEngine.prototype.is1PlyBest = function(e) {
    if (this.depthArrLines[1] && this.depthArrLines[1].length && this.depthArrLines[1][0].line[0].equals(e))
        return this.depthArrLines[1].hasClearlyBest(60)
}
;
AnalysisEngine.prototype.everythingElseLoses = function(e) {
    var b = e[0].getEval();
    return -200 > e[1].getEval() && -50 < b
}
;
AnalysisEngine.linesToArray = function(e) {
    var b = [], d;
    for (d in e)
        e.hasOwnProperty(d) && b.push(e[d]);
    b.sort(function(c, f) {
        return f.getEval() - c.getEval()
    });
    for (e = 0; e < b.length; e++)
        b[e].lineNumber = e;
    b.getNLinesInEvalRange = function(c) {
        for (var f = 0, g = this[0].getEval(), h = 1; h < this.length && !(g - this[h].getEval() > c); h++)
            f++;
        return f
    }
    ;
    b.hasClearlyBest = function(c) {
        return 1 == b.length ? !0 : b[0].getEval() - b[1].getEval() >= c
    }
    ;
    return b
}
;
AnalysisEngine.getSortedLines = function(e) {
    e = AnalysisEngine.linesToArray(e);
    e.sort(function(b, d) {
        return d.getEval() - b.getEval()
    });
    return e
}
;
AnalysisEngine.prototype._onBest = function(e, b) {}
;
AnalysisEngine.prototype.getBestMove = function() {
    if (3 < this.lastDepth)
        return AnalysisEngine.getSortedLines(this.curLines[this.lastDepth])[0].getMove()
}
;
AnalysisEngine.prototype.isBest = function(e) {
    var b = this.getBestMove();
    if (b)
        return b.equals(e)
}
;
AnalysisEngine.prototype.getEval = function() {
    return 1 < this.lastDepth && this.depthArrLines[this.lastDepth - 1] && this.depthArrLines[this.lastDepth - 1].length ? this.depthArrLines[this.lastDepth - 1][0].getEval() : 0
}
;
AnalysisEngine.prototype.isRecapture = function(e, b) {
    return e.to == b.to && 0 != e.vct
}
;
AnalysisEngine.prototype.isExchange = function(e, b, d) {
    e = e.board;
    if (d)
        return b.to == d.to && (e[d.to] & CB.Piece.V15j) == (e[d.from] & CB.Piece.V15j)
}
;
AnalysisEngine.prototype.checkIfStrongMoveExists = function() {
    var e = {};
    if (6 < this.lastDepth) {
        var b = AnalysisEngine.getSortedLines(this.curLines[this.lastDepth])
          , d = this.hasBest(b)
          , c = !1;
        if (d) {
            var f = new Att
              , g = this.kernel.game.getCurPos();
            f = f.calc(g, d.from, d.to);
            if (0 > f)
                e = {
                    move: d,
                    att: f,
                    sac: !0,
                    trivial: this.is1PlyBest(d)
                },
                this.fireOnStrongMove(e),
                c = this.firedStrong = !0;
            else {
                var h = this.kernel.game;
                h.getMoveCount() && this.hasClearlyBest(b) && 0 == f && (f = h.getMoves()[h.getMoves().length - 1],
                this.isRecapture(f, d) || this.isExchange(g, d, b[0].line[1]) || (e = {
                    move: d,
                    att: 0,
                    precise: !0,
                    win: 90 < b[0].getEval(),
                    trivial: this.is1PlyBest(d),
                    elseLoses: this.everythingElseLoses(b)
                },
                this.fireOnStrongMove(e),
                c = this.firedStrong = !0))
            }
        }
        this.firedStrong && !c && (this.fireOnStrongMove({
            cancel: !0
        }),
        this.firedStrong = !1)
    }
    return e
}
;
AnalysisEngine.prototype.hasBest = function(e) {
    if (1 < e.length) {
        var b = e[0].getEval()
          , d = Math.abs(b - e[1].getEval());
        if (d > Math.abs(b) / 4 && 50 < d)
            return e[0].line[0]
    }
}
;
AnalysisEngine.prototype.hasClearlyBest = function(e) {
    if (1 < e.length) {
        var b = e[0].getEval()
          , d = Math.abs(b - e[1].getEval());
        if (d > Math.abs(b) / 3 && 80 < d)
            return e[0].line[0]
    }
}
;
AnalysisEngine.prototype.detMoveValue = function(e) {
    if (1 < this.lastDepth) {
        var b = AnalysisEngine.linesToArray(this.curLines[this.lastDepth]);
        b.sort(function(f, g) {
            return g.getEval() - f.getEval()
        });
        if (1 < b.length) {
            for (var d = b[0].getEval(), c = 0; c < b.length; c++)
                if (e.equals(b[c].getMove()))
                    return e = b[c].getEval(),
                    this.makeMoveValue(c, d, e);
            this.makeMoveValue(99, d, b[b.length - 1].getEval())
        }
    }
    return this.makeMoveValue(-1)
}
;
AnalysisEngine.prototype.makeMoveValue = function(e, b, d) {
    return {
        inx: e,
        evBest: b,
        evDiff: Math.abs(b - d),
        lineEv: d,
        playable: function() {
            return this.evDiff < Math.abs(this.evBest) / 3 || 70 > this.evDiff || 400 < this.lineEv
        },
        blunder: function() {
            return this.evDiff > Math.abs(this.evBest / 2) && 100 < this.evDiff
        },
        bigBlunder: function() {
            return this.evDiff > Math.abs(this.evBest) && 200 < this.evDiff
        },
        recapt: !1
    }
}
;
AnalysisEngine.InitListeners = function() {
    AnalysisEngine.prototype.fireEvent || (V3i1.initForListeners(AnalysisEngine),
    V3i1.addEvent(AnalysisEngine, "Line"),
    V3i1.addEvent(AnalysisEngine, "StrongMove"),
    V3i1.addEvent(AnalysisEngine, "StaticEval"))
}
;
var AnalysisMoves = function() {
    this.maxMoveNo = 0;
    this.moves = []
};
AnalysisMoves.prototype.get = function(e) {
    return this.moves[e]
}
;
AnalysisMoves.prototype.setPlayed = function(e, b, d) {
    this.moves[b] || (this.moves[b] = new CB.V1nx);
    this.moves[b].playedMove = e;
    this.moves[b].check = d;
    b > this.maxMoveNo && (this.maxMoveNo = b)
}
;
AnalysisMoves.prototype.isBestMove = function(e, b) {
    if (this.moves[b])
        return this.moves[b].isBest(e)
}
;
AnalysisMoves.prototype.isGoodMove = function(e, b) {
    return this.moves[b] && this.moves[b].isGood(e)
}
;
AnalysisMoves.prototype.isOnlyMove = function(e, b) {
    return this.moves[b] && this.moves[b].isOnly(e)
}
;
AnalysisMoves.prototype.isNonTrivialOnlyMove = function(e, b) {
    return this.moves[b] && this.moves[b].isNonTrivialOnly(e)
}
;
AnalysisMoves.prototype.isNonTrivialBest = function(e, b) {
    return this.moves[b] && this.moves[b].isNonTrivialBest(e)
}
;
AnalysisMoves.prototype.getBestMove = function(e) {
    if (0 < e && this.moves[e] && this.moves[e - 1] && this.moves[e].line)
        return this.moves[e].line[0]
}
;
AnalysisMoves.prototype.isBlunder = function(e) {
    if (0 < e && this.moves[e] && this.moves[e - 1]) {
        var b = this.moves[e].eval
          , d = b - this.moves[e - 1].eval
          , c = b;
        this.moves[e - 1].btm && (d = -d,
        c = -c);
        if (-150 > d && Math.abs(d) > .5 * Math.abs(b) && 0 > c)
            return d
    }
    return 0
}
;
AnalysisMoves.prototype.isPlayable = function(e) {
    if (0 < e && this.moves[e] && this.moves[e - 1]) {
        var b = this.moves[e].eval
          , d = b - this.moves[e - 1].eval;
        this.moves[e - 1].btm && (d = -d);
        return -80 > d && Math.abs(d) < Math.max(40, .4 * Math.abs(b))
    }
    return !1
}
;
AnalysisMoves.prototype.playedRecapture = function(e) {
    if (0 < e && this.moves[e] && this.moves[e - 1]) {
        var b = this.moves[e - 1].playedMove;
        e = this.moves[e].playedMove;
        if (b && b.to == e.to && b.vct)
            return !0
    }
    return !1
}
;
AnalysisMoves.prototype.isRecapture = function(e, b) {
    return 0 < e && this.moves[e] && (e = this.moves[e].playedMove) && e.to == b.to ? !0 : !1
}
;
AnalysisMoves.prototype.isOnlyLegal = function(e) {
    return 0 < e && this.moves[e] ? this.moves[e].isOnlyLegal() : !1
}
;
AnalysisMoves.prototype.wasInCheck = function(e) {
    return 0 < e && this.moves[e] ? this.moves[e].check : !1
}
;
AnalysisMoves.prototype.playedCapture = function(e) {
    return 0 < e && this.moves[e] ? 0 != this.moves[e].playedMove.vct : !1
}
;
AnalysisMoves.prototype.isNotWorse = function(e) {
    return this.moves[e] && this.moves[e].isEvalAboveForSide(-40)
}
;
AnalysisMoves.prototype.secondLoses = function(e) {
    return this.moves[e] && this.moves[e].secondLoses()
}
;
AnalysisMoves.prototype.punishedBlunder = function(e, b) {
    return 0 < e && this.moves[e] && this.moves[e - 1] && this.moves[e].line.length && this.moves[e].line[0].equals(b) ? (b = Math.abs(this.moves[e].eval - this.moves[e - 1].eval),
    b > .4 * Math.abs(this.moves[e - 1].eval) && 150 < b) : !1
}
;
AnalysisMoves.prototype.getEvals = function() {
    for (var e = [], b = 0; b < this.maxMoveNo; b++)
        this.moves[b] && this.moves[b].line && (e[b] = this.moves[b].eval);
    return e
}
;
AnalysisMoves.prototype.countAnalysed = function(e) {
    for (var b = 0, d = 0; d < this.maxMoveNo; d++)
        this.moves[d] && this.moves[d].line && this.moves[d].btm == e && b++;
    return b
}
;
CB.V1nx = function() {
    var e = function(b, d, c, f, g, h) {
        this.updateLines(b, d, c, f, g, h)
    };
    e.prototype.updateLines = function(b, d, c, f, g, h) {
        b && (this.line = b.line,
        2 >= g && (this.line1Ply = b.line));
        c && (this.secondLine = c.line);
        this.secondEval = f;
        this.eval = d;
        this.depth = g;
        this.btm = h
    }
    ;
    e.prototype.isBest = function(b) {
        return this.line && this.line.length && this.line[0].equals(b)
    }
    ;
    e.prototype.isGood = function(b) {
        if (this.line && this.line.length && this.line[0].equals(b) || this.secondLine && this.secondLine.length && this.secondLine[0].equals(b) && this.V1ny())
            return !0
    }
    ;
    e.prototype.V1ny = function() {
        var b = Math.abs(this.eval - this.secondEval);
        return 25 > b || b < .15 * Math.abs(this.eval)
    }
    ;
    e.prototype.V1nz = function(b) {
        return this.line1Ply && this.line1Ply.length && this.line1Ply[0].equals(b)
    }
    ;
    e.prototype.isOnlyLegal = function() {
        if (this.line)
            return this.line.length && !this.secondLine
    }
    ;
    e.prototype.isOnly = function(b) {
        return this.line && this.line.length && this.line[0].equals(b) && this.V1o0()
    }
    ;
    e.prototype.isNonTrivialOnly = function(b) {
        return this.isOnly(b) && !this.V1nz(b)
    }
    ;
    e.prototype.isNonTrivialBest = function(b) {
        return this.isBest(b) && !this.V1nz(b)
    }
    ;
    e.prototype.V1o0 = function() {
        if (this.secondLine && this.secondLine.length) {
            var b = Math.abs(this.eval - this.secondEval);
            if (30 < b && b > .3 * Math.abs(this.eval))
                return !0
        }
        return !1
    }
    ;
    e.prototype.isEvalAboveForSide = function(b) {
        var d = this.eval;
        this.btm && (d = -this.eval);
        return d >= b
    }
    ;
    e.prototype.secondLoses = function() {
        if (this.secondEval) {
            var b = this.btm ? -this.secondEval : this.secondEval;
            return this.isEvalAboveForSide(-60) && -200 > b
        }
        return !1
    }
    ;
    return e
}();
"use strict";
CB.Evaluation = function() {
    var e = function(b) {
        this.val = b
    };
    e.V1o1 = function(b) {
        return 2E4 < b ? lm.WHITE_MATES : 420 < b ? lm.WHITE_CLEARLY_WINNING : 350 < b ? lm.WHITE_WINNING : 250 < b ? lm.WHITE_DECISIVE : 130 < b ? lm.WHITE_CLEARLY_BETTER : 80 < b ? lm.WHITE_BETTER : 40 < b ? lm.WHITE_SLIGHTLY : 22 < b ? lm.WHITE_EDGE : -2E4 > b ? lm.BLACK_MATES : -420 > b ? lm.BLACK_CLEARLY_WINNING : -350 > b ? lm.BLACK_WINNING : -250 > b ? lm.BLACK_DECISIVE : -130 > b ? lm.BLACK_CLEARLY_BETTER : -80 > b ? lm.BLACK_BETTER : -40 > b ? lm.BLACK_SLIGHTLY : -22 > b ? lm.BLACK_EDGE : lm.EQUAL_POS
    }
    ;
    e.V1o2 = function(b) {
        b = e.V1o3(b);
        return CB.V10z() + String.f("Media/Emojis/Fritz/Fritz{0}.png", b)
    }
    ;
    e.V1o4 = function() {
        return e.V1o2(81)
    }
    ;
    e.V1o5 = function() {
        return this.V1o6("Ruler.png")
    }
    ;
    e.V1o7 = function() {
        return this.V1o6("Books.png")
    }
    ;
    e.V1o8 = function() {
        return CB.V10z() + "Media/Emojis/Fritz/FritzConcentrated.png"
    }
    ;
    e.V1o9 = function() {
        return this.V1o6("Sleeping.png")
    }
    ;
    e.V1oa = function() {
        return this.V1o6("LightBulb.png")
    }
    ;
    e.V1ob = function() {
        return this.V1o6("Exclam.png")
    }
    ;
    e.V1o6 = function(b) {
        return CB.V10z() + String.f("Media/Emojis/{0}", b)
    }
    ;
    e.V1o3 = function(b) {
        return 2E4 < b ? "Mates" : 420 < b ? "ClearlyWins" : 350 < b ? "Wins" : 250 < b ? "Decisive" : 130 < b ? "ClearlyBetter" : 80 < b ? "Better" : 40 < b ? "SlightlyBetter" : 22 < b ? "Equal" : -420 > b ? "ClearlyLosing" : -350 > b ? "Losing" : -250 > b ? "DecisivelyWorse" : -130 > b ? "ClearlyWorse" : -80 > b ? "Worse" : -40 > b ? "SlightlyWorse" : "Equal"
    }
    ;
    e.prototype.toString = function() {
        return e.V1o1(this.val)
    }
    ;
    return e
}();
"use strict";
CB.V1oc = function() {
    var e = 0
      , b = function(d) {
        this.V1oe = d;
        this.V1of = new CB.Timer(this.update.bind(this));
        this.V1ek = !1;
        this.id = ++e
    };
    b.prototype.V1og = function(d) {
        this.V1oe.V1oh(d)
    }
    ;
    b.prototype.V1oi = function() {
        this.V1oe.setText("---", !1);
        this.V1oe.setText("---", !0)
    }
    ;
    b.prototype.start = function() {}
    ;
    b.prototype.stop = function() {}
    ;
    b.prototype.isRunning = function() {
        return !1
    }
    ;
    b.prototype.V1oj = function(d) {
        this.V1ek = d
    }
    ;
    b.prototype.onMove = function(d) {
        this.V1oj(d);
        this.start()
    }
    ;
    b.prototype.V1ok = function(d) {}
    ;
    b.prototype.V1og = function(d) {
        this.V1oe.V1oh(d)
    }
    ;
    b.prototype.update = function() {}
    ;
    return b
}();
"use strict";
CB.V1fs = function() {
    var e = function(b, d) {
        this.V1ol = void 0 !== b ? b : 0;
        this.incSecs = d || 0;
        1 > this.V1ol && 0 == this.incSecs && (this.V1ol = 1);
        this.flags = this.V1on = this.V1om = 0
    };
    e.V1oo = 1;
    e.prototype.fromDataBuf = function(b) {
        this.V1ol = b.V3im() & 65535;
        this.incSecs = b.V3im() & 65535;
        this.V1om = b.V3in();
        this.V1on = b.V3in();
        this.flags = b.V3im();
        return !0
    }
    ;
    e.prototype.V3il = function(b) {
        b.V3ij(this.V1ol & 65535);
        b.V3ij(this.incSecs & 65535);
        b.V3ih(this.V1om);
        b.V3ih(this.V1on);
        b.V3ij(this.flags)
    }
    ;
    e.prototype.toString = function() {
        var b = this.V1ol + "m + " + this.incSecs + "s";
        this.V1om && (b += String.f(" (W add {0}m)", this.V1om));
        return b
    }
    ;
    e.prototype.V1op = function() {
        return 0 == this.V1om && 0 == this.V1on && 0 == this.incSecs && (1 == this.V1ol || 3 == this.V1ol || 5 == this.V1ol)
    }
    ;
    e.V1oq = function(b) {
        var d = new CB.V1fs(3,0);
        b && (b = b.split(","),
        b.length && (d.V1ol = b[0],
        0 == d.V1ol && (d.V1ol = 5),
        1 < b.length && (d.incSecs = b[1])));
        return d
    }
    ;
    e.prototype.V1or = function() {
        return 40 * this.V1ol + this.incSecs
    }
    ;
    e.prototype.V1os = function() {
        return 900 < this.V1ot() ? CB.Server.V1ou.V1ov : 180 <= this.V1ot() ? CB.Server.V1ou.V1ow : CB.Server.V1ou.V1ox
    }
    ;
    e.prototype.V1oy = function() {
        switch (this.V1os()) {
        case CB.Server.V1ou.V1ox:
            return "Bullet";
        case CB.Server.V1ou.V1ow:
            return "Blitz";
        case CB.Server.V1ou.V1ov:
            return "Slow"
        }
    }
    ;
    e.prototype.V1ot = function() {
        return 60 * this.V1ol + 40 * this.incSecs
    }
    ;
    e.prototype.V1oz = function() {
        return this.V1os() == CB.Server.V1ou.V1ow
    }
    ;
    e.prototype.V1p0 = function() {
        return this.V1os() == CB.Server.V1ou.V1ox
    }
    ;
    e.prototype.V1p1 = function() {
        return this.V1os() == CB.Server.V1ou.V1ov
    }
    ;
    e.prototype.getStartSecs = function() {
        return 60 * this.V1ol
    }
    ;
    e.prototype.V1p2 = function(b, d) {
        var c = this.V1ol + this.V1om
          , f = this.V1ol;
        d === CB.V15e.WHITE ? this.V1om += b - c : (b = f - b,
        this.V1ol -= b,
        this.V1om += b)
    }
    ;
    return e
}();
"use strict";
CB.V1p3 = {
    V1p4: -1,
    V1p5: -2,
    V1p6: -3,
    V1p7: -4,
    V1p8: 0,
    V1p9: 1,
    V1pa: 2,
    V1pb: 3
};
CB.ChessClock = function() {
    var e = 1
      , b = function(d, c, f) {
        CB.ChessClock.superClass.call(this, d);
        this.V1pc = c;
        this.V1pd = f;
        this.result = CB.GameResultEnum.V1a6;
        this.V1pe = !1;
        this.V1pg = this.V1pf = 0;
        this.uniqueId = e++;
        this.V1ph = !1;
        this.V1ec = null;
        this.V1pi = [];
        this.V1pj = [0, 0];
        this.V1pk = [0, 0];
        this.clockParams = new CB.V1fs(3,0);
        this.V1pl = 0
    };
    CB.inherit(b, CB.V1oc);
    b.prototype.V1pm = function() {
        return 10 * this.V1pf
    }
    ;
    b.prototype.V1pn = function() {
        return 10 * this.V1pg
    }
    ;
    b.prototype.destroy = function() {}
    ;
    b.prototype.V1po = function() {
        this.setClockParams(this.clockParams)
    }
    ;
    b.prototype.setClockParams = function(d) {
        this.V1pi = [!1, !1];
        this.result = CB.GameResultEnum.V1a6;
        d ? (this.clockParams = d,
        this.V1pf = 6E3 * (this.clockParams.V1ol + this.clockParams.V1om) + this.clockParams.V1on,
        this.V1pg = 6E3 * this.clockParams.V1ol,
        0 == this.clockParams.V1ol && (this.V1pg = this.V1pf = 1E3),
        this.V1oe.V1pp(new Date(10 * this.V1pf), !1),
        this.V1oe.V1pp(new Date(10 * this.V1pg), !0),
        this.V1oe.V1pq(3E3 < this.clockParams.V1ot())) : (this.V1oi(),
        delete this.clockParams);
        delete this.V1pr;
        delete this.V1ps;
        this.V1pj = [0, 0];
        this.V1pk = [0, 0]
    }
    ;
    b.prototype.V1pt = function(d) {
        this.V1pe = d;
        this.V1oe.V1pt(d)
    }
    ;
    b.prototype.V1ok = function(d) {
        this.stop();
        if (this.clockParams) {
            for (var c = 6E3 * (this.clockParams.V1ol + this.clockParams.V1om) + this.clockParams.V1on, f = 6E3 * this.clockParams.V1ol, g = this.V1pe ? -1 : 1, h = 0; h < d.getPlyNum(); h++)
                if (h < d.getMoves().length) {
                    var k = d.getMoves()[h].getAnno();
                    k && (k = k.getItem(CB.AnnoType.TIME)) && (h & 1 ? (f -= g * k.getTimeIn100th(),
                    f += g * this.clockParams.incSecs * 100) : (c -= g * k.getTimeIn100th(),
                    c += g * this.clockParams.incSecs * 100))
                }
            this.V1ek = 0 != (d.getMoves().length & 1);
            d.expiredSecs && d.expiredSecs[d.getMoves().length] && (g = d.expiredSecs[d.getMoves().length],
            this.V1ek ? f -= 100 * g : c -= 100 * g);
            this.V1pf = c;
            this.V1pg = f;
            this.V1pu();
            this.V1oe.V1oj && this.V1oe.V1oj(this.V1ek);
            this.V1pv(c, f);
            d.isOnLastMove() && (d.hdr.getCBResult().isFinished() ? this.V1oe.V1bj(d.hdr.getResult()) : this.start(!0))
        }
    }
    ;
    b.prototype.V1hs = function(d) {
        this.isFinished() || (this.result = d,
        this.stop(),
        this.V1oe.V1bj(d))
    }
    ;
    b.prototype.V1pw = function() {
        this.result = CB.GameResultEnum.V1a6
    }
    ;
    b.prototype.isFinished = function() {
        return this.result >= CB.GameResultEnum.BLACK_WINS && this.result <= CB.GameResultEnum.V1a7
    }
    ;
    b.prototype.V1oj = function(d) {
        this.clockParams && !this.isFinished() && ((this.V1ek = d) ? this.V1pg += 100 * this.clockParams.incSecs : this.V1pf += 100 * this.clockParams.incSecs,
        this.V1pu(),
        this.V1oe.V1oj && this.V1oe.V1oj(d))
    }
    ;
    b.prototype.isRunning = function() {
        return this.V1ph
    }
    ;
    b.prototype.start = function(d) {
        if (!this.V1ph && this.clockParams && !this.isFinished()) {
            this.V1ph = !0;
            this.V1pu();
            var c = this.V1ek ? 1 : 0;
            d && (this.V1pr += 10 * this.V1pj[c],
            this.V1pl += this.V1pk[c]);
            this.V1pv(this.V1pf, this.V1pg);
            this.V1of.runOnce(1E3);
            delete this.V1ps
        }
    }
    ;
    b.prototype.stop = function() {
        if (this.V1ph && (this.V1of.stop(),
        this.V1pr)) {
            this.V1ph = !1;
            var d = (CB.Vab() - this.V1pr + 5) / 10;
            this.V1ps = d;
            this.isFinished() || this.V1px(d, this.V1ek)
        }
    }
    ;
    b.prototype.V1pu = function() {
        this.V1pr = CB.Vab();
        this.V1pl = this.V1ek ? this.V1pg : this.V1pf
    }
    ;
    b.prototype.continue = function() {
        if (!this.V1ph && this.clockParams && !this.isFinished()) {
            var d = this.V1ps;
            d ? (this.V1ph = !0,
            this.V1pu(),
            this.V1pr -= 10 * d,
            this.V1pl += d,
            this.V1ek ? this.V1pg += d : this.V1pf += d,
            this.V1pv(this.V1pf, this.V1pg),
            this.V1of.runOnce(1E3),
            delete this.V1ps) : this.start()
        }
    }
    ;
    b.prototype.V1py = function(d) {
        return d ? this.V1pg : this.V1pf
    }
    ;
    b.prototype.V1pz = function(d, c, f) {
        this.V1pj[c] = d;
        this.V1pk[c] = f
    }
    ;
    b.prototype.V1pv = function(d, c) {
        0 <= d ? this.V1oe.V1pp(new Date(10 * d), !1) : this.V1oe.V1pp(-1, !1);
        0 <= c ? this.V1oe.V1pp(new Date(10 * c), !0) : this.V1oe.V1pp(-1, !0)
    }
    ;
    b.prototype.V1px = function(d, c) {
        if (this.clockParams)
            return this.V1oe.V1q0(new Date(10 * d), c),
            this.V1oe.V1q0(new Date(10 * d), c),
            d = this.V1pe ? c ? this.V1pg = this.V1pl + d : this.V1pf = this.V1pl + d : c ? this.V1pg = this.V1pl - d : this.V1pf = this.V1pl - d,
            0 > d ? this.V1oe.V1pp(-1, c) : this.V1oe.V1pp(new Date(10 * d), c, this.V1q1()),
            d
    }
    ;
    b.prototype.V1q2 = function(d) {
        this.clockParams && !this.isFinished() && (this.V1pr = CB.Vab() - 10 * d)
    }
    ;
    b.prototype.V1q3 = function() {
        if (this.clockParams && !this.isFinished()) {
            var d = this.getExpired();
            this.V1q2(d - 100 * this.clockParams.incSecs)
        }
    }
    ;
    b.prototype.reset = function() {
        this.setClockParams(new CB.V1fs(0,0))
    }
    ;
    b.prototype.getExpired = function() {
        return this.V1ps ? this.V1ps : this.V1pr ? (CB.Vab() - this.V1pr + 5) / 10 : 0
    }
    ;
    b.prototype.V1q4 = function() {
        var d = b.V1q5(new Date(10 * this.V1pf))
          , c = b.V1q5(new Date(10 * this.V1pg))
          , f = "";
        0 <= this.V1pf && (f = String.f("{0}={1}", lm.WHITE, d));
        d = "";
        0 <= this.V1pg && (d = String.f("{0}={1}", lm.BLACK, c));
        (c = f) && d && (c += ", ");
        return c + d
    }
    ;
    b.prototype.V1q6 = function() {
        return new CB.V1k0(CB.V10a.V10b(this.getExpired()))
    }
    ;
    b.prototype.setText = function(d, c) {
        this.V1oe.setText(d, c)
    }
    ;
    b.prototype.update = function() {
        var d = (CB.Vab() - this.V1pr + 5) / 10
          , c = this.V1px(d, this.V1ek);
        if (0 < c) {
            this.V1oe.V1q7(1E3 > c);
            var f = 1E3;
            1E3 > c && (f = 100);
            this.V1of.runOnce(f);
            15 < d / 100 && d > c / 3 && this.V1pd && !this.V1pi[this.V1ek ? 1 : 0] && (this.V1pd(this.V1ek),
            this.V1pi[this.V1ek ? 1 : 0] = !0)
        } else
            this.V1pc && !this.isFinished() && (this.V1oe.setText("TIME", this.V1ek),
            this.V1pc(this.uniqueId))
    }
    ;
    b.prototype.V1q1 = function() {
        if (null != this.V1ec) {
            if (this.V1ek) {
                var d = this.V1pg;
                var c = this.V1pf
            } else
                d = this.V1pf,
                c = this.V1pg;
            return Math.abs(d - c) < .1 * Math.abs(d) && 2E3 < d ? CB.V1p3.V1p8 : d > c ? d > 1.2 * c ? d > 2 * c ? CB.V1p3.V1pb : CB.V1p3.V1pa : CB.V1p3.V1p9 : d < .7 * c ? d < .5 * c ? d < .3 * c && 1E3 > d ? CB.V1p3.V1p7 : CB.V1p3.V1p6 : CB.V1p3.V1p5 : CB.V1p3.V1p4
        }
        return 0
    }
    ;
    b.V1q5 = function(d, c, f) {
        0 > d && (d = new Date(0));
        var g = "";
        c && (g = d.getUTCHours() + ":");
        1E4 > d.valueOf() && !f ? (c = d.getUTCSeconds(),
        d = Math.floor(d.getUTCMilliseconds() / 100),
        g = c + "." + d + "s") : (c = d.getUTCMinutes(),
        1 == c.toString().length && 0 < c && (c = "0" + c),
        g += c,
        c = Math.floor(d.getUTCSeconds()),
        1 == c.toString().length && (c = "0" + c),
        g += ":" + c);
        return g
    }
    ;
    return b
}();
"use strict";
CB = CB || {};
CB.V1q9 = function() {
    var e = function() {};
    e.prototype.destroy = function() {}
    ;
    e.prototype.V1qa = function() {}
    ;
    e.prototype.V1og = function(b) {}
    ;
    e.prototype.onAnnotate = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.onTextAnno = function(b, d) {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.V1fy = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.onEval = function(b) {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.onPromoteLine = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.V1fw = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.onCutLine = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.onDeleteLine = function() {
        this.V1qb = !1;
        return !0
    }
    ;
    e.prototype.V1fu = function() {}
    ;
    e.prototype.V1ft = function() {}
    ;
    e.prototype.V1fv = function() {}
    ;
    e.prototype.onBeforeUnload = function() {}
    ;
    e.prototype.getMoveEnterType = function() {
        return CB.V1c6.V1ca
    }
    ;
    e.prototype.mayNavigate = function() {
        return !0
    }
    ;
    e.prototype.V1gi = function() {
        return !0
    }
    ;
    e.prototype.V1gj = function() {
        return !0
    }
    ;
    e.prototype.V1gk = function() {
        return !0
    }
    ;
    e.prototype.mayLoadGames = function() {
        return !0
    }
    ;
    e.prototype.onKeyDown = function(b) {
        return !1
    }
    ;
    e.prototype.isAnalysis = function() {
        return !1
    }
    ;
    e.prototype.setAnalysis = function(b) {}
    ;
    e.prototype.engineMoveNow = function() {
        return !1
    }
    ;
    e.prototype.onResetGame = function() {}
    ;
    e.prototype.V1qc = function() {
        this.V1qd();
        this.V1qb = !1
    }
    ;
    e.prototype.V1qe = function() {}
    ;
    e.prototype.V1i5 = function() {}
    ;
    e.prototype.V1qd = function() {
        this.saveToCloud(!0);
        this.V1qf = 0
    }
    ;
    e.prototype.onExit = function() {
        this.saveToCloud()
    }
    ;
    e.prototype.onEntry = function() {}
    ;
    e.prototype.shouldAnimatePosChange = function() {
        6;
        return CB.Vq.runsOnChessBaseDomain() || !CB.Vq.V121()
    }
    ;
    e.prototype.saveToCloud = function(b) {
        return V3ir.cloudMgr && V3ir.cloudMgr.isConnected() && !this.V1qb && this.V1qg(b) && (6 < this.kernel.game.getMoves().length || !this.kernel.game.isNormalInit()) ? (V3ir.cloudMgr.saveGameToClipboard(this.kernel.game),
        this.V1qb = !0) : !1
    }
    ;
    e.prototype.V1qg = function() {
        return !0
    }
    ;
    e.prototype.updateGamePos = function() {}
    ;
    e.prototype.V1i3 = function() {}
    ;
    e.prototype.onGameNavigate = function() {}
    ;
    e.prototype.V1i7 = function() {}
    ;
    e.prototype.V1qh = function() {}
    ;
    e.prototype.V1eq = function(b) {}
    ;
    e.prototype.onEnteredMove = function(b) {
        return !0
    }
    ;
    e.prototype.V1hj = function(b) {}
    ;
    e.prototype.V1hs = function(b) {}
    ;
    e.prototype.V1qi = function() {}
    ;
    e.prototype.V1qj = function() {}
    ;
    e.prototype.V1qk = function() {}
    ;
    e.prototype.V1en = function() {
        return CB.V1dx.V1e0
    }
    ;
    e.prototype.V1ql = function(b) {}
    ;
    e.prototype.getMySide = function() {
        return null
    }
    ;
    e.prototype.V1es = function(b) {}
    ;
    e.prototype.V1qm = function() {}
    ;
    e.prototype.setTimeControl = function(b) {}
    ;
    e.prototype.V1qn = function() {}
    ;
    e.prototype.V1qo = function() {}
    ;
    e.prototype.V1gv = function(b) {
        b.reset()
    }
    ;
    e.prototype.newGame = function() {}
    ;
    e.prototype.V1fj = function() {}
    ;
    e.prototype.createGUIElements = function(b) {}
    ;
    e.prototype.V1fm = function(b) {}
    ;
    e.prototype.V1fl = function(b) {}
    ;
    e.prototype.V1fn = function(b) {}
    ;
    e.prototype.posLegalChecker = function(b) {
        return b.isLegal()
    }
    ;
    e.prototype.V1bq = function(b) {
        return !1
    }
    ;
    e.prototype.blockLiveBookUpdate = function(b) {}
    ;
    e.prototype.getFnLoadSearchResult = function() {
        return CB.V1qp ? CB.V1qp.getFnLoadSearchResult() : null
    }
    ;
    return e
}();
"use strict";
CB = CB || {};
CB.V1qq = function() {
    var e = function(b) {
        CB.V1qq.superClass.call(this);
        this.kernel = b;
        this.V1qr = !1
    };
    CB.inherit(e, CB.V1q9);
    e.prototype.loadGame = function(b) {
        this.V1qc();
        this.kernel.game.assign(b);
        this.V1qe()
    }
    ;
    e.prototype.destroy = function() {
        this.V1qa()
    }
    ;
    e.prototype.V1qa = function() {
        this.V1qs = null;
        this.V1qt && (this.V1qt.stop(),
        delete this.V1qt);
        this.V1qu && (this.V1qu.stop(),
        delete this.V1qu)
    }
    ;
    e.prototype.V1og = function(b) {
        this.V1qs && this.V1qs.V1og(b)
    }
    ;
    e.prototype.onEnteredMove = function(b) {
        this.V1qs && this.V1qs.stop();
        return !0
    }
    ;
    e.prototype.isAnalysis = function() {
        return !0
    }
    ;
    e.prototype.V1qv = function(b) {
        try {
            "undefined" !== typeof V3ir && !V3ir.analysisEngine && CB.Vq.V35() && V3ir.config.useAnalysisEngines && CB.AnalysisEngine && (V3ir.analysisEngine = new AnalysisEngine(b || {
                minDepthForFire: 5
            }))
        } catch (d) {
            CB.V3("PM:initAnalysisEngine", d)
        }
    }
    ;
    e.prototype.V1qw = function(b) {
        try {
            this.V1qy = new CB.V1ke(0,"/Common/Chess/Engine/Engine.js",null,this),
            CB.Vq.Vr() || this.V1qy.load()
        } catch (d) {
            CB.V3("PM:initThreatEngine", d)
        }
    }
    ;
    e.prototype.V1kn = function(b, d) {}
    ;
    e.prototype.V1ko = function(b, d) {}
    ;
    e.prototype.getCounterMoveTo = function(b, d) {}
    ;
    e.prototype.getMoveEnterType = function() {
        return this.kernel.game.isLineEnd() ? CB.V1c6.V1cc : V3ir.allowMoveEntryDialog() ? CB.V1c6.V1c9 : this.isAnalysis() ? CB.V1c6.V1cc : CB.V1c6.V1ca
    }
    ;
    e.prototype.V1hs = function(b) {
        this.V1qs && this.V1qs.V1hs(b)
    }
    ;
    e.prototype.V1qi = function() {
        this.V1qs && this.V1qs.V1ok(this.kernel.game)
    }
    ;
    e.prototype.V1qj = function() {
        this.V1qs && this.V1qs.start()
    }
    ;
    e.prototype.V1qk = function() {
        this.V1qs && this.V1qs.stop()
    }
    ;
    e.prototype.V1en = function() {
        return CB.V1dx.V1e0
    }
    ;
    e.prototype.onGameNavigate = function() {
        this.V1qi()
    }
    ;
    e.prototype.V1qn = function(b, d, c) {
        delete this.V1qu;
        this.kernel.boardWin && this.kernel.boardWin.V1qz() && (this.V1qs && this.V1qs.stop(),
        this.V1qt = new CB.V1r0(this.kernel.boardWin.V1qz()),
        this.V1qt.setTime(b, d, c),
        this.V1qt.V1hs(this.kernel.game.hdr.getResult()),
        this.V1qs = this.V1qt)
    }
    ;
    e.prototype.V1i5 = function() {
        this.V1qt && this.V1qt.V1hs(this.kernel.game.hdr.getResult())
    }
    ;
    e.prototype.V1qo = function(b) {
        delete this.V1qt;
        this.kernel.boardWin && this.kernel.boardWin.V1r1() && (this.V1qu = new CB.ChessClock(this.kernel.boardWin.V1qz()),
        this.V1qu.setClockParams(b),
        b && this.V1qu.V1ok(this.kernel.game),
        this.V1qs = this.V1qu)
    }
    ;
    e.prototype.V1r2 = function(b) {
        b.fnMarkSquaresOnButtonDown = this.getMarkedSquaresOnButtonDown.bind(this)
    }
    ;
    e.prototype.V1r3 = function() {
        this.kernel.boardWin && (this.kernel.boardWin.fnMarkSquaresOnButtonDown = null)
    }
    ;
    e.prototype.getMarkedSquaresOnButtonDown = function(b) {
        return this.V1r4(b)
    }
    ;
    e.prototype.V1r5 = function() {
        return "hsla( 0, 0%, 50%, 0.25 )"
    }
    ;
    e.prototype.V1r4 = function(b) {
        var d = [];
        this.kernel.game.getCurPos().V3hu().forEach(function(c) {
            c.from == b && d.push({
                sq: c.to,
                clr: this.V1r5()
            })
        }
        .bind(this));
        return d
    }
    ;
    e.prototype.V1r6 = function(b) {
        this.V1qr = b
    }
    ;
    return e
}();
CB.V1hv = {
    NONE: 0,
    TECHNICAL: 2,
    V1r7: 4,
    RESIGN: 8,
    V1r8: 16,
    V70: 32,
    V1r9: 64
};
"use strict";
CB.V1ra = function() {
    return {
        requestLiveBookOnGamePos: function(e) {
            V3ir.panelMgr.tbBook && V3ir.aTBLobby && V3ir.aTBLobby.hasIdReceived && (!this.V1rb || !this.V1rb.equals(this.kernel.game.getCurPos()) || e) && (this.V1rc || (this.V1rc = V3ir.aTBLobby.addOnLiveBookListener(this.liveBookListener.bind(this))),
            this.V1rb = ObjUtil.clone(this.kernel.game.getCurPos()),
            V3ir.panelMgr.tbBook.clear(),
            V3ir.aTBLobby.requestAllMoves(this.kernel.game.getCurPos(), !1, !0))
        },
        requestMyMovesOnGamePos: function(e) {
            this.myMoves = [];
            !V3ir.myMovesMgr || !V3ir.panelMgr.tbBook || this.V1rd && this.V1rd.equals(this.kernel.game.getCurPos()) && !e || (this.V1rd = ObjUtil.clone(this.kernel.game.getCurPos()),
            this.myMoves = null,
            !V3ir.myMovesMgr.isLoggedIn() && V3ir.myMovesMgr.wasLoggedIn() ? V3ir.myMovesMgr.reconnectUser() : V3ir.myMovesMgr.checkPosAndMoves(this.kernel.game.getCurPos(), !1, CB.V15e.other(this.V1re)))
        },
        blockLiveBookUpdate: function() {}
    }
}();
CB.V1rf = function() {
    return {
        toggleEngine: function() {
            if (this.V1rg(0))
                return this.V1ri(0),
                !1;
            this.V1rh(0);
            this.updateGamePos();
            return !0
        },
        incNMultiVars: function(e) {
            this.V1rj += e;
            1 > this.V1rj && (this.V1rj = 1);
            64 < this.V1rj && (this.V1rj = 64)
        },
        goAll: function() {
            this.V1rk = !1;
            this.V1rl.forEach(function(e) {
                e.setMultiPV(this.V1rj);
                e && (e.go(this.kernel.game, {
                    infinite: !0
                }),
                e.fireOnThreat(!1))
            }
            .bind(this))
        },
        toggleThreat: function() {
            if (this.V1rk)
                this.goAll();
            else {
                var e = ObjUtil.clone(this.kernel.game.cur);
                if (e.V19d()) {
                    this.V1rk = !0;
                    var b = new CB.Game(e);
                    this.V1rl.forEach(function(d) {
                        d.setMultiPV(this.V1rj);
                        d && (d.go(b, {
                            infinite: !0
                        }),
                        d.fireOnThreat(!0))
                    }
                    .bind(this))
                }
            }
        },
        toggleAnalysisThreat: function() {
            if (V3ir.analysisEngine)
                if (this.V1rk)
                    V3ir.analysisEngine.engineGo(this.kernel),
                    V3ir.analysisEngine.engine.fireOnThreat(!1);
                else {
                    var e = ObjUtil.clone(this.kernel.game.cur);
                    e.V19d() && (this.V1rk = !0,
                    e = new CB.Game(e),
                    V3ir.analysisEngine.engine.setMultiPV(1),
                    V3ir.analysisEngine.engine.go(e, {
                        infinite: !0
                    }),
                    V3ir.analysisEngine.engine.fireOnThreat(!0))
                }
        }
    }
}();
"use strict";
CB = CB || {};
CB.V1rm = function() {
    var e = function(b, d) {
        CB.V1qq.call(this, b);
        this.szPool = d || 0;
        this.V1rl = [];
        this.V1rn = 0;
        this.panEng = null
    };
    CB.inherit(e, CB.V1qq);
    e.prototype.loadEngineInstance = function(b, d, c) {
        return new CB.EngineInstance(b,this.szPool,d,c)
    }
    ;
    e.prototype.V1g0 = function(b) {
        var d = this.V1rl[0]
          , c = d.getMultiPV();
        c = Math.max(c + b, 1);
        this.V1rj = c = Math.min(c, 64);
        this.V1ro();
        d.setMultiPV(c);
        this.goAll({
            analysis: !0,
            infinite: !0
        })
    }
    ;
    e.prototype.toggleThreat = function() {}
    ;
    e.prototype.toggleAnalysisThreat = function() {}
    ;
    e.prototype.V1rh = function(b) {
        this.V1rn < b + 1 && (this.V1rn = b + 1);
        if (V3ir.panelMgr.openEnginePanel) {
            var d = this.panEng = V3ir.panelMgr.openEnginePanel(b);
            if (d && !this.V1rl[b]) {
                var c = this.V1rl[b] = this.loadEngineInstance(V3ir.config.getEngineUrl()[b], b);
                d.setEngine(c);
                d.setAnalysis && d.setAnalysis(this.isAnalysis());
                this.addOnBestMove(c);
                c.setTag(b)
            }
        }
    }
    ;
    e.prototype.V1rg = function(b) {
        return !!this.V1rl[b]
    }
    ;
    e.prototype.V1ri = function(b) {
        this.V1rl[b] && (this.V1rl[b].exit(),
        delete this.V1rl[b])
    }
    ;
    e.prototype.V1rp = function(b, d) {
        this.kernel.game.getCurPos().isLegalMove(d.move) && this.kernel.V1il(d.move)
    }
    ;
    e.prototype.addOnBestMove = function(b) {
        this.idOnBestMove || (this.idOnBestMove = b.addOnBestMoveListener(this.V1rp.bind(this)))
    }
    ;
    e.prototype.removeOnBestMove = function(b) {
        b.removeOnBestMoveListener(this.idOnBestMove);
        this.idOnBestMove = null
    }
    ;
    e.prototype.destroy = function() {
        this.V1ro();
        this.V1rl.forEach(function(b) {
            b && b.dispose()
        })
    }
    ;
    e.prototype.goAll = function(b) {
        this.V1rl.forEach(function(d) {
            d && d.go(this.kernel.game, b)
        }
        .bind(this))
    }
    ;
    e.prototype.V1ro = function() {
        this.V1rl.forEach(function(b) {
            b && b.stop()
        })
    }
    ;
    e.prototype.newGame = function() {
        this.V1ro();
        this.V1rl.forEach(function(b) {
            b && b.newGame(this.getHandicap())
        }
        .bind(this))
    }
    ;
    e.prototype.setEngineOff = e.prototype.V1ro;
    e.prototype.V1rq = function() {
        this.setHandicap(!this.V1rr())
    }
    ;
    e.prototype.setHandicap = function(b) {}
    ;
    e.prototype.V1rr = function() {
        return !1
    }
    ;
    e.prototype.getHandicap = function() {
        return 0
    }
    ;
    e.prototype.V1fl = function(b) {}
    ;
    e.prototype.V1fn = function(b) {}
    ;
    e.prototype.V1ib = function(b, d) {}
    ;
    return e
}();
"use strict";
CB.V1rs = function() {
    var e = function h(c, f, g) {
        h.superClass.call(this, c, CB.V1rs.POOL_SIZE);
        this.kernel = c;
        this.V1rt = f || 1;
        this.V1ru = 0;
        this.active = !0;
        this.V1rv = new CB.Timer(this.V1rw.bind(this));
        this.V1rx = new CB.Timer(this.V1ry.bind(this));
        "undefined" != typeof V3ir && !V3ir.analysisEngine && CB.Vq.V11f() && V3ir.config.useAnalysisEngines && AnalysisEngine && CB.Vq.V35() && (V3ir.analysisEngine = new AnalysisEngine);
        this.V1rj = 1;
        this.V1rz = g ? g.hintTimeout || 500 : 500;
        this.V1s0 = g && g.liveBookSilent ? this.checkLiveBook.bind(this) : this.V1s1.bind(this);
        this.V1s2 = 0
    };
    CB.inherit(e, CB.V1rm);
    CB.V1rf && CB.mixin(e, CB.V1rf);
    e.POOL_SIZE = 0;
    e.prototype.destroy = function() {
        V3ir.analysisEngine && (V3ir.analysisEngine.engineStop(),
        V3ir.analysisEngine.unlinkPlayingMode(this));
        this.superClass.destroy.call(this);
        V3ir.commands.fireChecked(CB.V1ge.TOGGLE_ANALYSIS_ENGINE, !1)
    }
    ;
    e.prototype.V1fj = function() {
        for (var c = 0; c < this.V1rt; c++)
            this.V1rh(c);
        V3ir.commands.fireChecked(CB.V1ge.TOGGLE_ANALYSIS_ENGINE, !0);
        this.panEng && (this.V1s3 = this.panEng.addOnMoveEnteredListener(this.kernel.V1bq.bind(this.kernel)))
    }
    ;
    e.prototype.createGUIElements = function(c) {
        this.superClass.createGUIElements.call(this, c);
        c.shouldAnimatePosChange = this.shouldAnimatePosChange.bind(this);
        CB.Vq.V37() && (c.animSteps = {
            forMove: .3,
            forPosition: .2
        });
        V3ir.analysisEngine && V3ir.analysisEngine.linkPlayingMode(this)
    }
    ;
    e.prototype.onResetGame = function() {
        this.V1s2 = 0
    }
    ;
    e.prototype.onEnteredMove = function(c) {
        return this.V1s4 ? this.V1s4(c) : !0
    }
    ;
    e.prototype.onExit = function() {
        this.superClass.onExit.call(this);
        V3ir.analysisEngine && (V3ir.analysisEngine.engineStop(),
        V3ir.analysisEngine.clearLines())
    }
    ;
    e.prototype.V1hj = function(c) {
        if (this.V1s5)
            return this.V1s5(c)
    }
    ;
    e.prototype.setEngineOff = function() {
        this.active = !1;
        this.superClass.setEngineOff.call(this)
    }
    ;
    e.prototype.isAnalysis = function() {
        return !0
    }
    ;
    e.prototype.setAnalysis = function(c) {
        clearTimeout(this.timer);
        this.active = c;
        V3ir.commands.fireChecked(CB.V1ge.TOGGLE_ANALYSIS_ENGINE, c);
        for (var f = 0; f < this.V1rn; ++f)
            c || void 0 === this.V1rl[f] || this.V1rl[f].abort();
        c && this.updateGamePos()
    }
    ;
    e.prototype.setTimeControl = function(c) {
        throw Error("Cannot set search time on analysis playing mode");
    }
    ;
    e.prototype.V1qh = function() {
        this.setAnalysis(!0);
        for (var c = 0; c < this.V1s6; ++c)
            this.V1rh(c);
        this.updateGamePos()
    }
    ;
    e.prototype.V1s7 = !1;
    e.prototype.engineMoveNow = function() {}
    ;
    e.prototype.engineStop = function() {
        V3ir.analysisEngine && (V3ir.analysisEngine.engineStop(),
        V3ir.analysisEngine.clearLines());
        this.V1ro()
    }
    ;
    e.ENGINE_DELAY = 100;
    var b = new CB.V3id;
    e.prototype.gateUpdate = new CB.V3id;
    e.prototype.updateGamePos = function(c) {
        this.kernel == V3ir.panelMgr.getKernel() && (this.engineStop(),
        this.V1qr || (b.exec(function() {
            this.active && this.kernel.game.getCurPos().hasLegals() && (this.goAll({
                analysis: !0,
                infinite: !0
            }),
            this.V1s8())
        }
        .bind(this), e.ENGINE_DELAY),
        this.gateUpdate.exec(function() {
            this.V1s0()
        }
        .bind(this), c ? 10 : 400)))
    }
    ;
    e.prototype.V1s8 = function() {
        if ("undefined" != typeof Evaluation) {
            var c = (new Evaluation(this.kernel.getCurPos())).evaluate();
            V3ir.analysisEngine.fireOnStaticEval(c)
        }
    }
    ;
    e.prototype.V1s9 = function() {}
    ;
    e.prototype.V1s1 = function() {
        !V3ir.aTBLobby || !V3ir.aTBLobby.isLoggedIn() || this.V1sa && this.V1sa.equals(this.kernel.game.getCurPos()) && !this.kernel.forceTBUpdate || (this.V1sa = ObjUtil.clone(this.kernel.game.getCurPos()),
        V3ir.panelMgr.tbBook && (V3ir.panelMgr.tbBook.clear("Requesting moves..."),
        V3ir.panelMgr.tbBook.isVisible() && V3ir.aTBLobby.requestAllMoves(this.kernel.game.getCurPos(), !1, !1, this.kernel.ticket),
        this.V1sb || (this.V1sb = V3ir.aTBLobby.addOnLiveBookListener(this.liveBookListener.bind(this))),
        this.V1sc || (this.V1sc = V3ir.aTBLobby.addOnTBDataListener(this.V1sd.bind(this))),
        this.V1rv.runOnce(5E3),
        V3ir.aTBLobby.requestPosInfo(this.kernel.game.getCurPos()),
        this.V1rx.isActive || this.V1rx.runOnce(15E3)),
        this.kernel.forceTBUpdate = !1)
    }
    ;
    e.prototype.checkLiveBook = function() {
        this.V1se() ? this.V1sa && this.V1sa.equals(this.kernel.game.getCurPos()) && !this.kernel.forceTBUpdate || (this.V1sa = ObjUtil.clone(this.kernel.game.getCurPos()),
        V3ir.aTBLobby.requestAllMoves(this.kernel.game.getCurPos(), !1, !1, this.kernel.ticket),
        this.V1sb || (this.V1sb = V3ir.aTBLobby.addOnLiveBookListener(this.liveBookListener.bind(this))),
        this.V1sc || (this.V1sc = V3ir.aTBLobby.addOnTBDataListener(this.V1sd.bind(this))),
        this.V1rv.runOnce(5E3),
        this.kernel.forceTBUpdate = !1) : V3ir.aTBLobby.fireOnLiveBookDisplay({
            ticket: this.kernel.ticket,
            moves: []
        })
    }
    ;
    e.prototype.V1se = function() {
        var c = this.kernel.getCurPos();
        return 6 < c.getPieces().length && 16 > c.getPieces().length ? !1 : V3ir.aTBLobby && V3ir.aTBLobby.isLoggedIn() && (6 > this.V1s2 || 10 > this.kernel.game.getMoveNo()) && (60 > this.kernel.game.getMoveNo() || 6 >= c.getPieces().length || 2550 < this.kernel.game.hdr.V1aj())
    }
    ;
    e.prototype.liveBookListener = function(c) {
        V3ir.aTBLobby.fireOnLiveBookDisplay(c);
        this.V1rv.stop();
        this.V1s2 = 0
    }
    ;
    e.prototype.V1sd = function() {}
    ;
    e.prototype.V1rw = function() {
        V3ir.panelMgr.tbBook && V3ir.panelMgr.tbBook.setEmptyText(lm.FRESH_POSITION);
        this.V1s2++
    }
    ;
    e.prototype.V1ry = function() {
        V3ir.aTBLobby && V3ir.aTBLobby.hasIdReceived && V3ir.panelMgr.tbBook && V3ir.aTBLobby.requestPosInfo(this.kernel.game.getCurPos())
    }
    ;
    e.prototype.V1sf = function() {
        this.active && this.kernel.game.getCurPos().hasLegals() && this.goAll()
    }
    ;
    e.prototype.getMoveEnterType = function() {
        return this.V1sg ? this.V1sg() : CB.V1c6.V1cc
    }
    ;
    e.prototype.getCounterMoveTo = function(c, f) {
        if (V3ir.analysisEngine)
            return V3ir.analysisEngine.getCounterMoveTo(c, f)
    }
    ;
    e.prototype.getMarkedSquaresOnButtonDown = function(c, f) {
        return !f || this.clickHintTimer && this.clickHintTimer.isActive() ? this.V1r4(c) : this.V1sh(c)
    }
    ;
    e.prototype.V1fu = function() {
        if (this.V1si)
            this.V1si.onDeleteLine()
    }
    ;
    e.prototype.V1ft = function() {
        if (this.V1si)
            this.V1si.onPromoteLine()
    }
    ;
    e.prototype.V1fv = function() {
        if (this.V1si)
            this.V1si.onCutLine()
    }
    ;
    e.prototype.onGameNavigate = function() {
        this.superClass.onGameNavigate.call(this);
        if (this.V1si)
            this.V1si.onGameNavigate()
    }
    ;
    e.prototype.startClickHintTimer = function(c) {
        this.kernel.game.getMoveOffs() < this.V1sj || (this.clickHintTimer || (this.clickHintTimer = new CB.Timer),
        this.clickHintTimer.runOnce(this.V1rz, function() {
            var f = this.V1sh(c);
            this.kernel.boardWin.V1sk(f)
        }
        .bind(this)))
    }
    ;
    e.prototype.V1r5 = function() {
        return "hsla( 0, 0%, 55%, 0.50 )"
    }
    ;
    e.prototype.V1sh = function(c) {
        var f = [];
        if (CB.Piece.side(this.kernel.getCurPos().board[c]) != this.kernel.getCurPos().getSideToMove())
            return f;
        V3ir.analysisEngine && (c = V3ir.analysisEngine.getHintSquaresOnButtonDown(c),
        c.forEach(function(g) {
            for (var h = !1, k = 0; !h && k < f.length; k++)
                f[k].sq == g.sq && (h = !0);
            h || f.push(g)
        }),
        0 == c.length && !V3ir.analysisEngine.running && V3ir.config.useAnalysisEngines && V3ir.analysisEngine.engineGo(this.kernel));
        return f
    }
    ;
    e.prototype.V1rp = function(c, f) {}
    ;
    e.prototype.onAnalysisLine = function(c, f, g) {
        this.kernel.game.V1sl || V3ir.isInOfficialRoom || (this.kernel.getCurPos().getBTM() && (f = -f),
        this.kernel.game.fireOnEval(c, f, g))
    }
    ;
    e.prototype.onAnalysisStrongMove = function(c) {}
    ;
    e.prototype.toggleEngine = function() {
        if (this.V1rg(0))
            return this.V1ri(0),
            !1;
        this.V1rh(0);
        this.updateGamePos();
        return !0
    }
    ;
    e.prototype.V1ib = function(c, f) {
        this.V1si && this.V1si.V1sm(c, f)
    }
    ;
    return e
}();
"use strict";
CB.V1kt = {
    V1sn: 0,
    BEGINNER: 1,
    AMATEUR: 2,
    CLUBPLAYER: 3,
    V1so: function(e) {
        switch (e) {
        default:
            return CB.V1kt.V1sn;
        case V3ir.V3ia.LEVEL_BEGINNER:
            return CB.V1kt.BEGINNER;
        case V3ir.V3ia.LEVEL_AMATEUR:
            return CB.V1kt.AMATEUR;
        case V3ir.V3ia.LEVEL_CLUBPLAYER:
            return CB.V1kt.CLUBPLAYER;
        case V3ir.V3ia.LEVEL_MASTER:
            return CB.V1kt.V1sn
        }
    },
    V1sp: function(e) {
        switch (e) {
        default:
            return lm.MASTER;
        case CB.V1kt.BEGINNER:
            return lm.BEGINNER;
        case CB.V1kt.AMATEUR:
            return lm.AMATEUR;
        case CB.V1kt.CLUBPLAYER:
            return lm.CLUBPLAYER
        }
    }
};
var MoveHint = function() {
    this.openingHints = this.hintCnt = this.clickAssists = 0;
    this.clickSq = -1
}
  , HintMeter = function() {
    this.reset()
};
HintMeter.prototype.reset = function() {
    this.moveHints = [];
    this.bonusHints = 0;
    this.cntHintsLimitShown = 3
}
;
HintMeter.prototype.getMaxGuestHints = function() {
    return 16 + this.bonusHints
}
;
HintMeter.prototype.getMaxBasicHints = function() {
    return 40 + this.bonusHints
}
;
HintMeter.prototype.getMaxPremiumHints = function() {
    return 100 + this.bonusHints
}
;
HintMeter.prototype.addBonusHints = function(e) {
    this.bonusHints += e
}
;
HintMeter.prototype.addMove = function(e) {
    this.moveHints[e] ? this.moveHints.splice(e + 1) : this.moveHints[e] = new MoveHint
}
;
HintMeter.prototype.incClickAssists = function(e, b) {
    this.addMove(e);
    this.moveHints[e].clickAssists++;
    this.moveHints[e].clickSq = b
}
;
HintMeter.prototype.incHints = function(e) {
    this.addMove(e);
    this.moveHints[e].hintCnt++
}
;
HintMeter.prototype.incOpeningHints = function(e) {
    this.addMove(e);
    this.moveHints[e].openingHints++
}
;
HintMeter.prototype.inc = function(e, b) {
    this.addMove(b);
    e.isOpeningHint() ? this.incOpeningHints(b) : this.incHints(b)
}
;
HintMeter.prototype.sameClickSquare = function(e, b) {
    return this.moveHints[e] && this.moveHints[e].clickSq == b
}
;
HintMeter.prototype.notifyHintLimitShown = function(e) {
    this.moveNoHintsLimit != e && (this.cntHintsLimitShown--,
    this.moveNoHintsLimit = e)
}
;
HintMeter.prototype.showHintsLimit = function() {
    return 0 < this.cntHintsLimitShown
}
;
HintMeter.prototype.hinted = function(e) {
    if (this.moveHints[e])
        return 0 < this.moveHints[e].hintCnt || 0 < this.moveHints[e].openingHints
}
;
HintMeter.prototype.sumHints = function(e) {
    return this.sum(this.moveHints[e])
}
;
HintMeter.prototype.getMoveCount = function() {
    var e = 0;
    this.moveHints.forEach(function(b) {
        e++
    });
    return e
}
;
HintMeter.prototype.getTotalHints = function() {
    var e = 0;
    this.moveHints.forEach(function(b) {
        b && (e += b.hintCnt + b.clickAssists)
    });
    return e
}
;
HintMeter.prototype.getHelpPercent = function() {
    var e = 0
      , b = 0;
    this.moveHints.forEach(function(d) {
        e++;
        d && (b += this.calcHelpPercent(d))
    }
    .bind(this));
    return e ? Math.round(b / e) : 0
}
;
HintMeter.prototype.calcHelpPercent = function(e) {
    if (e = .8 * e.clickAssists + e.hintCnt + .2 * e.openingHints) {
        if (.2 >= e)
            return 10;
        if (.4 >= e)
            return 20;
        if (.8 >= e)
            return 50;
        if (1 >= e)
            return 60;
        if (1.8 >= e)
            return 70;
        if (3 >= e)
            return 80
    } else
        return 0;
    return 100
}
;
HintMeter.prototype.sum = function(e) {
    return e ? e.clickAssists + e.hintCnt + e.openingHints : 0
}
;
HintMeter.prototype.getSupportText = function() {
    if (6 < this.getMoveCount()) {
        var e = this.getHelpPercent()
          , b = lm.HINTS_HERO;
        20 < e && (b = lm.HINTS_BRAVE,
        30 < e && (b = lm.HINTS_CONFIDENT,
        40 < e && (b = lm.HINTS_COMPETITIVE,
        50 < e && (b = lm.HINTS_ATTENTIVE,
        60 < e && (b = lm.HINTS_INTERESTED,
        70 < e && (b = lm.HINTS_GUARDED,
        80 < e && (b = lm.HINTS_CAUTIOUS,
        90 < e && (b = lm.HINTS_LEARNING))))))));
        return b
    }
}
;
CB.V1sq = function() {
    var e = {
        useBook: !0,
        useClock: !0,
        showClock: !0,
        hintTime: 3E3,
        handicapOn: !0,
        bookUrl: "../../Databases/Book/Fritz4.fbk",
        bookType: "CB.FBKBook",
        timeControl: CB.Vq.V37() ? 4E3 : 2500,
        alertBlunders: !1,
        engineName: "Fritz"
    }
      , b = function(f, g) {
        g = g || {};
        e.bookUrl = e.bookUrl || V3ir.config.bookUrl[0];
        this.options = ObjUtil.copyTo(e, g, !0);
        b.superClass.call(this, f);
        this.kernel = f;
        this.V1sr = 800;
        this.V1re = null;
        this.V1ss = !0;
        this.V1st = new CB.V1dg(this.options.bookType,this.options.bookUrl);
        this.V1st.addOnReadyListener(this.V1su.bind(this));
        this.V1st.init();
        this.V1sv = !1;
        this.V1sw = new CB.Timer;
        this.clickHintTimer = new CB.Timer;
        this.V1sx = new CB.Timer;
        this.nHighestMoveInBook = 0;
        V3ir.analysisEngine || (V3ir.analysisEngine = new AnalysisEngine);
        this.V1qb = !1;
        this.V1sy = new BeautyScore;
        this.V1sz = Math.round(Date.now() / 1E3);
        this.V1t0 = new AnalysisMoves;
        this.hintMeter = new HintMeter;
        this.V1t1 = V3ir.ratedGame = !0;
        this.analysisTick = new CB.Tick;
        this.isAgainstEngineMode = !0
    };
    CB.inherit(b, CB.V1rm);
    CB.mixin(b, CB.V1ra);
    b.prototype.destroy = function() {
        this.superClass.destroy.call(this);
        this.V1qs && this.V1qs.V1oe.destroy();
        V3ir.analysisEngine && (V3ir.analysisEngine.engineStop(),
        V3ir.analysisEngine.unlinkPlayingMode(this));
        V3ir.panelMgr.removeOnClickAssistListener(this.V1t2);
        V3ir.panelMgr.removeOnNextHintListener(this.V1t3)
    }
    ;
    b.prototype.loadEngineInstance = function(f, g) {
        f = this.superClass.loadEngineInstance.call(this, f, g, "AgainstEng");
        return !V3ir.hasUrlGame() || V3ir.panelMgr.isPlugin ? (g = parseInt(V3ir.V3i2.load("Handicap")) || CB.V1kt.AMATEUR,
        this.V1t4(f, g, "loadInst")) : f
    }
    ;
    b.prototype.V1t5 = function(f, g, h, k) {
        this.options.alertBlunders && 100 < g - h && this.kernel.boardWin && this.kernel.boardWin.addMessage("ACHTUNG!", !0)
    }
    ;
    b.prototype.V1t6 = function() {
        if (this.V1sv)
            return this.V1st.V1dj(this.kernel.game.getCurPos(), this.V1t7.bind(this)),
            !0
    }
    ;
    b.prototype.V1su = function(f) {
        this.V1sv = !0
    }
    ;
    b.prototype.V1t7 = function(f, g) {
        this.engineStop();
        f = CB.V1d1.STRONG;
        if (this.getHandicap() == CB.V1kt.AMATEUR || this.getHandicap() == CB.V1kt.BEGINNER)
            f = CB.V1d1.NORMAL;
        (g = CB.V1d6.selectMove(g, f)) ? (this.V1sw.stop(),
        this.V1rp(null, {
            move: g
        }),
        this.nHighestMoveInBook = this.kernel.game.getMoveNo(),
        this.V1t8(g, this.getHandicap(), 0),
        this.V1s2 = 0) : (this.nHighestMoveInBook || (this.nHighestMoveInBook = Math.max(1, this.kernel.game.getMoveNo() - 4)),
        this.engineGo())
    }
    ;
    b.prototype.isSearching = function() {
        if (this.V1rl[0])
            return this.V1rl[0].isCalculating()
    }
    ;
    b.prototype.V1rr = function() {
        return 0 < this.getHandicap()
    }
    ;
    b.prototype.getHandicap = function() {
        return this.V1rl[0] && this.V1rl[0].getHandicap ? this.V1rl[0].getHandicap() : CB.V1kt.V1sn
    }
    ;
    b.prototype.setHandicap = function(f) {
        var g = !1;
        this.V1rl[0] && this.V1rl[0].isCalculating() && (g = !0,
        this.V1rl[0].stop());
        this.V1qs && this.V1qs.stop();
        var h = this.V1rl[0];
        this.removeOnBestMove(h);
        h.detachEngine && (h = h.detachEngine());
        f && (h = this.V1t4(h, f, "handicap"));
        this.addOnBestMove(h);
        this.V1rl[0] = h;
        this.panEng && this.panEng.setEngine(h);
        V3ir.commands.fireChecked(CB.V1ge.V1t9, this.V1rr());
        V3ir.commands.fireChecked(CB.V1ge.V1ta, this.V1rr());
        this.V1tb();
        g && this.engineGo();
        this.getHandicap() && V3ir.V3i2.save("Handicap", this.getHandicap());
        f && this.V1rl[0] && !this.V1rl[0].isCalculating() && this.kernel.getCurPos().getSideToMove() == this.V1re && this.V1tc()
    }
    ;
    b.prototype.V1t4 = function(f, g, h) {
        f = new CB.Beefy(f,g,h);
        f.addOnResignListener(this.V1td.bind(this));
        f.addOnLosingLineListener(this.V1te.bind(this));
        return f
    }
    ;
    b.prototype.V1tf = function() {
        if (this.isMyMove()) {
            this.kernel.boardWin.undoAttributes();
            var f = new CB.HSLColor(120,80,35,.58)
              , g = function(k, l) {
                l = l || f;
                this.kernel.boardWin.destroyMessage();
                this.kernel.boardWin.queueBoardAttributes([new CB.V1ea(k.from,k.to,l,12)], {
                    eraseQueue: !0,
                    renderNow: !0,
                    requestAnimInRender: !0
                });
                this.V1tg(null, this.hintMeter)
            }
            .bind(this);
            this.V1th(function(k) {
                g(k);
                if (this.hintMove && this.V1ti && this.hintMove.equals(k))
                    this.V1tj = CB.HintTypes.NONE,
                    this.V1tk();
                else {
                    this.hintMeter.incOpeningHints(this.kernel.getMoveNo());
                    var l = Hint.makeHint(CB.HintTypes.BOOK);
                    this.V1tl({
                        hints: [l],
                        index: 0,
                        hintMove: k,
                        pos: this.kernel.getCurPos(),
                        hintMeter: this.hintMeter,
                        force: !0
                    })
                }
            }
            .bind(this));
            this.requestLiveBookOnGamePos(!0);
            if (!this.V1tk() && V3ir.checkHintsLoginLimit()) {
                this.hintMeter.incHints(this.kernel.getMoveNo());
                var h = this.V1tm();
                h ? (this.hintMove && h.equals(this.hintMove) || V3ir.panelMgr.showEngHint(""),
                g(h)) : this.V1tn ? g(this.V1tn) : (this.V1rl[0] && this.V1rl[0].isCalculating() && this.V1rl[0].stop(),
                this.V1re === this.kernel.getCurPos().getSideToMove() && (this.V1qs && this.V1qs.stop(),
                this.V1re = null))
            }
        } else
            V3ir.panelMgr.showBoardMessage(lm.NOT_YOUR_MOVE),
            V3ir.panelMgr.showEngHint(lm.NOT_YOUR_MOVE, "engOutHintStatus")
    }
    ;
    b.prototype.V1tm = function() {
        if (V3ir.analysisEngine)
            return V3ir.analysisEngine.getBestMove()
    }
    ;
    b.prototype.V1th = function(f) {
        var g = function(h) {
            f(h, new CB.HSLColor(220,80,35,.58))
        };
        this.V1to = function(h) {
            if (h && h.length)
                h.forEach(g);
            else if (!this.V1tm()) {
                var k = !1
                  , l = this.V1rl[0];
                l.iAmPorky && (l = l.detachEngine(),
                k = !0);
                l && (h = function(m, n) {
                    f(n.move);
                    k && this.V1rl[0].setEngine(m);
                    l.removeOnBestMoveListener(this.V1tp);
                    this.addOnBestMove(this.V1rl[0])
                }
                .bind(this),
                l.setMultiPV(1),
                this.V1tp = l.addOnBestMoveListener(h),
                this.kernel.boardWin.addMessage(lm.CALCULATING_HINT, !0),
                this.V1tq(),
                l.go(this.kernel.game, {
                    moveTime: this.options.hintTime
                }),
                this.removeOnBestMove(this.V1rl[0]))
            }
        }
        .bind(this)
    }
    ;
    b.prototype.V1rp = function(f, g) {
        this.V1tr = null;
        f = this.kernel.game.getCurPos();
        f.isLegalMove(g.move) && (this.V1ts() && this.lbInfo && this.lbInfo.position && this.lbInfo.position.boardEquals(f.board) && this.lbInfo.tbInfo && (this.lbInfo.sorted || CB.V1tt.V1tu(this.lbInfo.moves, f.getSideToMove() == CB.V15e.BLACK),
        g.move = this.lbInfo.tbInfo.moveList.V1tv(g.move)),
        this.kernel.V1il(g.move),
        this.V1tw(g),
        this.V1tn = g.ponder,
        this.V1tx())
    }
    ;
    b.prototype.V1tw = function(f) {}
    ;
    b.prototype.getMoveEnterType = function() {
        return CB.V1c6.V1ty
    }
    ;
    b.prototype.V1fj = function() {
        this.V1rh(0);
        V3ir.commands.fireChecked(CB.V1ge.TOGGLE_ANALYSIS_ENGINE, !1);
        V3ir.commands.fireEnabledChanged(CB.V1ge.V1t9, !0);
        V3ir.commands.fireChecked(CB.V1ge.V1t9, this.V1rr());
        V3ir.commands.fireEnabledChanged(CB.V1ge.ENGINE_HINT, !0);
        V3ir.commands.fireEnabledChanged(CB.FritzCommandIds.LEVEL_5_SECONDS, !0);
        V3ir.preventDefaultTimeControlUpdate || this.V1tb()
    }
    ;
    b.prototype.createGUIElements = function(f) {
        this.superClass.createGUIElements.call(this, f);
        V3ir.preventDefaultTimeControlUpdate || this.setTimeControl(this.options.timeControl);
        this.V1qs && this.V1qs.stop();
        this.kernel.V1hw = this.V1hw.bind(this);
        V3ir.analysisEngine && V3ir.analysisEngine.linkPlayingMode(this);
        f.animSteps = {
            forMove: 8,
            forPosition: 4
        };
        CB.Vq.V37() && (f.animSteps = {
            forMove: 5,
            forPosition: 2
        });
        this.V1t2 = V3ir.panelMgr.addOnClickAssistListener(this.V1tz.bind(this));
        this.V1t3 = V3ir.panelMgr.addOnNextHintListener(this.V1tf.bind(this))
    }
    ;
    b.prototype.V1fm = function(f) {
        this.superClass.V1fm.call(this, f);
        V3ir.commands.fireEnabledChanged(CB.V1ge.ENGINE_HINT, !1);
        V3ir.commands.fireEnabledChanged(CB.V1ge.V1t9, !1);
        V3ir.commands.fireEnabledChanged(CB.FritzCommandIds.LEVEL_5_SECONDS, !1);
        f.removePlayingClock()
    }
    ;
    b.prototype.setEngineOff = function() {
        this.superClass.setEngineOff.call(this);
        this.V1ss = !1;
        this.V1qs && this.V1qs.stop()
    }
    ;
    b.prototype.onGameNavigate = function() {
        this.superClass.onGameNavigate.call(this);
        this.V1rl[0] && this.V1rl[0].isCalculating() && this.V1rl[0].stop();
        this.V1qi();
        this.V1re = null;
        V3ir.ratedGame = 3 > this.V1u0++;
        this.V1tx()
    }
    ;
    b.prototype.V1gv = function(f) {
        V3ir.hasUrlGame() ? this.kernel.fnInitGame(f) : f.reset();
        this.V1tb();
        this.nHighestMoveInBook > f.getMoves().length && (this.nHighestMoveInBook = f.getMoves().length);
        this.V1sy.reset()
    }
    ;
    b.prototype.newGame = function(f) {
        this.superClass.newGame.call(this);
        var g = this.kernel.game;
        g.gotoLast();
        this.V1ss = !0;
        this.V1s2 = 0;
        g.isNormalInit() && 0 == g.getMainLine().length ? this.V1re = CB.V15e.other(this.kernel.boardWin.V1u1()) : g.hdr.white.last == this.options.engineName ? this.V1re = CB.V15e.WHITE : g.hdr.black.last == this.options.engineName ? this.V1re = CB.V15e.BLACK : g.isNormalInit() || 0 != g.getMainLine().length ? this.V1re = null : (this.V1re = CB.V15e.other(g.getCurPos().getSideToMove()),
        this.kernel.boardWin.setBlackIsBottom(this.V1re == CB.V15e.WHITE));
        this.V1qs && (CBDebug.assert(this.V1qs, "CLOCK NOT SET"),
        this.V1qs.stop(),
        this.V1qs.V1po());
        if (!CB.Vq.V8x() && f)
            V3ir.chessAudio.onNewGame();
        (f = g.getHeader().getClockParams()) && this.setTimeControl({
            clockParams: f
        });
        V3ir.urlParams.depth && (this.V1u2 = V3ir.urlParams.depth);
        this.setHeaderData();
        this.nHighestMoveInBook > g.getMoves().length && (this.nHighestMoveInBook = g.getMoves().length);
        this.V1t0 = new AnalysisMoves;
        null != this.V1re && g.getCurPos().getSideToMove() != this.V1re && V3ir.analysisEngine && this.V1tx();
        V3ir.ratedGame = !0;
        this.hintMeter.reset();
        this.V1u0 = 0;
        this.strong = null
    }
    ;
    b.prototype.V1u3 = function() {
        for (var f = this.V1t0.getEvals(), g = !1, h = 0; !g && h < f.length; h++)
            f[h] && (g = !0);
        g && (this.kernel.game.getEvaluationProfile() || this.kernel.game.V1cu(),
        g = this.kernel.game.getEvaluationProfile(),
        g.evalArr = f,
        g.last = this.V1t0.maxMoveNo - 1,
        this.kernel.game.fireOnChanged())
    }
    ;
    b.prototype.V1u4 = function() {
        this.hintMeter.incHints(this.kernel.getMoveNo());
        this.V1tg(null, this.hintMeter)
    }
    ;
    b.prototype.V1tx = function() {
        V3ir.analysisEngine && (V3ir.analysisEngine.engineGo(this.kernel),
        this.analysisTick.start())
    }
    ;
    b.prototype.setHeaderData = function() {
        var f = this.kernel.game.getHeader()
          , g = this.V1u5();
        this.V1re == CB.V15e.WHITE ? (f.setWhite(this.options.engineName),
        f.setBlack(g)) : (f.setWhite(g),
        f.setBlack(this.options.engineName));
        this.V1tb()
    }
    ;
    b.prototype.V1u5 = function() {
        var f = V3ir.V3i2.userName;
        V3ir.isLoggedIn() && f || (f = lm.GUEST);
        return f
    }
    ;
    b.prototype.V1tb = function() {
        this.kernel.game.hdr.event.event = this.getLevelStr();
        this.kernel.game.fireOnHeaderChanged()
    }
    ;
    b.prototype.getLevelStr = function() {
        return lm ? this.getHandicap() ? lm.LEVEL + " " + CB.V1kt.V1sp(this.getHandicap()) : 15E3 > this.V1sr ? lm.LEVEL + " - " + lm.MASTER : lm.LEVEL + " - " + lm.GRANDMASTER : "LM!"
    }
    ;
    b.prototype.V1eq = function(f) {
        this.superClass.V1eq.call(this);
        this.V1re = CB.V15e.other(f.getSideToMove());
        V3ir.ratedGame = !1
    }
    ;
    b.prototype.V1en = function() {
        return CB.V1dx.V1e1(this.V1re)
    }
    ;
    b.prototype.getMySide = function() {
        return null == this.V1re ? this.kernel.getCurPos().getSideToMove() : CB.V15e.other(this.V1re)
    }
    ;
    b.prototype.isAnalysis = function() {
        return !1
    }
    ;
    b.prototype.setAnalysis = function(f) {
        throw Error("Cannot set analysis on playing mode");
    }
    ;
    b.prototype.setTimeControl = function(f) {
        "number" === typeof f && (f = {
            fixedTime: f
        });
        this.V1ss = !0;
        f.fixedTime ? (this.V1u2 = null,
        this.V1sr = f.fixedTime,
        this.V1qs && (f = new CB.V1fs(0,0),
        f.V1ol = 0,
        this.V1qs.setClockParams(f),
        this.V1qs.V1pt(!0))) : f.clockParams && (this.V1sr = 0,
        this.V1qs && (this.V1qs.setClockParams(f.clockParams),
        this.V1qs.V1pt(!1)),
        this.kernel.game.getHeader().setClockParams(f.clockParams));
        this.V1qi();
        this.V1tb();
        this.V1rl[0] && !this.V1rl[0].isCalculating() && this.kernel.getCurPos().getSideToMove() == this.V1re && this.V1tc()
    }
    ;
    b.WAIT_FOR_BEST_TIMEOUT = 300;
    b.prototype.engineMoveNow = function() {
        V3ir.analysisEngine && V3ir.analysisEngine.engineStop();
        this.kernel.game.deleteRemaining();
        if (this.V1rl[0] && this.V1rl[0].isCalculating()) {
            var f = null
              , g = !1;
            f = function() {
                var h = this.V1rl[0].getBestMove();
                if (h)
                    return g && this.kernel.boardWin.destroyMessage(),
                    this.V1rl[0].stop(),
                    this.V1rp(this.V1rl[0], {
                        move: h
                    }),
                    !0;
                g || (g = !0);
                setTimeout(f, b.WAIT_FOR_BEST_TIMEOUT);
                return !1
            }
            .bind(this);
            f()
        } else {
            if (!this.kernel.game.getCurPos().hasLegals())
                return !1;
            this.V1ss = !0;
            this.V1re = this.kernel.game.getCurPos().sd;
            this.setHeaderData();
            this.kernel.boardWin.setBlackIsBottom(this.kernel.game.getCurPos().isWTM());
            this.V1qs && (this.V1qs.stop(),
            this.V1qi(),
            this.V1qs.start());
            this.V1tc()
        }
        return !0
    }
    ;
    b.prototype.V1u6 = function() {
        return this.V1u2 ? {
            depth: this.V1u2
        } : this.V1sr ? {
            moveTime: this.V1sr,
            strSide: this.V1u7(),
            engineToMove: 1
        } : this.V1qs ? {
            wTime: this.V1qs.V1pm(),
            bTime: this.V1qs.V1pn()
        } : {
            moveTime: 1E3
        }
    }
    ;
    b.prototype.V1u7 = function() {
        return this.V1re ? lm.BLACK : lm.WHITE
    }
    ;
    b.prototype.onEnteredMove = function(f) {
        this.V1qb = !1;
        this.clickHintTimer.stop();
        this.V1sx.stop();
        try {
            V3ir.analysisEngine && V3ir.analysisEngine.engineStop(),
            this.V1tn = null,
            this.kernel.game.deleteRemaining(),
            null === this.V1re && (this.V1re = CB.V15e.other(this.kernel.getCurPos().getSideToMove()),
            this.setHeaderData()),
            this.kernel.boardWin.setBlackIsBottom(this.V1re !== CB.V15e.BLACK),
            this.superClass.onEnteredMove.call(this, f),
            this.kernel.game.hdr.V1af(CB.GameResultEnum.V1a7) != CB.GameResultEnum.V1a7 && this.kernel.game.fireOnHeaderChanged()
        } catch (g) {
            CB.V3("AgEng::onEntrd", g)
        }
        this.V1tg(this.V1sy, this.hintMeter);
        V3ir.updateRatedGame(this.hintMeter);
        return !0
    }
    ;
    b.prototype.V1hj = function(f) {
        if (V3ir.analysisEngine) {
            this.V1u8 && (this.V1u8 = null);
            var g = this.detMoveValue(f)
              , h = this.kernel.game.getMoveIndex() - 1;
            this.V1sy.updateBeautyScores(h);
            if (g.playable()) {
                var k = 0
                  , l = new CB.Game;
                l.exec(this.kernel.game, this.kernel.game.getMoveNo());
                l.gotoPrev();
                l.deleteRemaining();
                var m = l.getCurPos().isCheck();
                (l = this.V1sy.onEnteredMove(l, f, !0)) && l.hasBeauty() && -50 < V3ir.analysisEngine.getEval() && (V3ir.analysisEngine.isBest(f) ? (k = 4,
                -300 > l.att ? (this.kernel.addSymbol(CB.V1g4.V1g6),
                this.kernel.V1ie(lm.rnd(lm.BRILLIANT, lm.SPLENDID, lm.COOL, lm.EXCELLENT, lm.BEAUTIFUL, lm.POWERFUL)),
                k = 8) : 0 > l.att ? (this.kernel.addSymbol(CB.V1g4.GOOD),
                this.kernel.V1ie(lm.rnd(lm.SUPER, lm.STRONG, lm.WELL_PLAYED, lm.FINE, lm.BRAVE, lm.THIS_IS_THE_WAY)),
                k = 4) : 100 < l.hang ? (this.kernel.addSymbol(CB.V1g4.GOOD),
                this.kernel.V1ie(lm.rnd(lm.SHARP, lm.HOT_MOVE, lm.TRICKY, lm.ADVENTUROUS)),
                k = 3) : 75 <= l.hang && (this.kernel.V1ie(lm.rnd(lm.NICE, lm.GOOD)),
                k = 2)) : -200 > l.att && (this.kernel.addSymbol(CB.V1g4.V1g8),
                this.kernel.V1ie(lm.rnd(lm.RISKY, lm.GOOD_GAMBLE, lm.NO_FEAR, lm.ON_THE_EDGE)),
                k = 3));
                !k && this.strong && this.strong.precise && (k = this.strong.trivial ? 1 : this.strong.elseLoses ? 1 : 2);
                !k || m || this.V1u9 || (this.hintMeter.addBonusHints(k),
                V3ir.panelMgr.showBoardMessage(lm.BONUS_HINTS + " = " + k, 4E3))
            }
            V3ir.analysisEngine.isBest(f) && (0 != f.prom && f.prom != CB.Piece.Vcz && f.prom != CB.Piece.Vd0 && this.V1sy.checkUnderPromotionScore(h, f),
            this.V1sy.doubleRooksSeventhRank || this.V1sy.checkDoubleRooksSeventhRank(this.kernel.game, f));
            this.V1tg(this.V1sy, this.hintMeter);
            this.V1ua(g)
        } else
            V3ir.ratedGame || (this.V1sy.reset(),
            this.V1tg(null));
        this.strong = null
    }
    ;
    b.prototype.detMoveValue = function(f) {
        var g = V3ir.analysisEngine.detMoveValue(f);
        g.book = this.V1u9 || 8 > this.kernel.getMoveNo();
        if (this.V1ti) {
            var h = this.V1ti[0];
            h && f.equals(h) && (g.nHints = this.hintMeter.sumHints(this.kernel.getMoveNo() - 1))
        }
        f = this.kernel.game.getMoveNo() - 1;
        this.V1t0.playedRecapture(f) || this.V1t0.isOnlyLegal(f) || g.book || (0 == g.inx || 10 > g.evDiff ? (300 < g.evBest && !g.nHints && (g.str = lm.rnd(lm.GRANDMA, lm.NOBODY_NEEDS_HINTS, lm.NOTHING_TO_CHANCE, lm.STAYING_CONCENTRATED, lm.LOST_FOR_ME, lm.YOU_HAVE_A_POINT)),
        150 < g.evBest && !g.str) ? g.str = lm.rnd(lm.TIGHTENING_GRIP, lm.KEEPING_ON_TRACK, lm.ZONING_IN, lm.IN_THE_FLOW, lm.NO_MERCY_FOR_ME, lm.OUT_FOR_BLOOD, lm.GETTING_WORRIED) : -40 < g.evBest ? g.nHints ? 1 == g.nHints && (g.str = lm.rnd(lm.ALL_RIGHT, lm.YES_THATS_IT, lm.YEP, lm.EXACTLY, lm.YOU_SAW_IT, lm.THAT_WAS_GOOD_HINT)) : g.str = lm.rnd(lm.RIGHT_EXCLAM, lm.WELL_PLAYED, lm.PRECISE_PLAY, lm.RIGHT_MOVE, lm.CORRECT_WITHOUT_HINTS, lm.WHO_NEEDS_HINTS) : -120 < g.evBest ? g.str = lm.rnd(lm.THAT_WAS_NECESSARY, lm.CONCENTRATED_PLAY, lm.KEEP_GOING, lm.MAKES_SENSE, lm.GOOD_RESISTANCE) : -220 < g.evBest ? g.str = lm.rnd(lm.DONT_GIVE_UP, lm.KEEP_YOUR_CHANCES, lm.KEEP_RESISTING, lm.NOT_FALTERING) : -400 < g.evBest && (g.str = lm.rnd(lm.KEEP_DEFENDING, lm.DONT_LOSE_HOPE, lm.CHANCE_MIGHT_COME)) : g.bigBlunder() ? g.str = lm.rnd(lm.OUCH, lm.OVERSIGHT, lm.FRITZ_SORRY, lm.UH_OH, lm.DONT_WORRY) : g.blunder() && (g.str = lm.rnd(lm.NOT_SO_GOOD, lm.HMM, lm.LOOKS_LIKE_MISTAKE, lm.THERE_WAS_BETTER_MOVE)));
        return g
    }
    ;
    b.prototype.V1tc = function() {
        null === this.V1re && (this.V1re = this.kernel.getCurPos().getSideToMove());
        this.V1sw.stop();
        if (this.kernel.getCurPos().getSideToMove() == this.V1re) {
            var f = this.V1ub();
            f ? this.V1sx.runOnce(400, function() {
                this.V1rp(null, {
                    move: f
                })
            }
            .bind(this)) : this.V1uc() ? this.V1ts() ? this.engineGo() : (this.V1tq(),
            V3ir.aTBLobby.isConnected() ? (this.V1tr = function(g, h) {
                g ? (this.engineStop(),
                this.V1rp(null, {
                    move: g
                }),
                this.nHighestMoveInBook = this.kernel.game.getMoveNo(),
                this.V1t8(g, this.getHandicap(), h)) : this.V1t6() || this.engineGo()
            }
            ,
            this.V1sw.runOnce(1500, function() {
                this.V1t6() || (this.engineGo(),
                this.V1s2++)
            }
            .bind(this))) : (this.V1tr = null,
            this.V1t6() || this.engineGo())) : this.engineGo()
        }
    }
    ;
    b.prototype.V1ub = function() {
        if (this.kernel.playFromPgnGame && this.kernel.playFromPgnGame.gotoPos(this.kernel.game.getCurPos()))
            return this.kernel.playFromPgnGame.getNextMove()
    }
    ;
    b.prototype.engineGo = function() {
        this.V1tn = null;
        0 < this.V1rl.length && (this.V1rl[0].setMultiPV(1),
        this.V1rl[0].setHighestMoveInBook(this.nHighestMoveInBook),
        this.V1rl[0].go(this.kernel.game, this.V1u6()))
    }
    ;
    b.prototype.engineStop = function() {
        this.V1rl[0] && this.V1rl[0].isCalculating() && this.V1rl[0].stop();
        V3ir.analysisEngine && V3ir.analysisEngine.engineStop()
    }
    ;
    b.prototype.V1t8 = function(f, g, h) {
        0 < this.V1rl.length && this.V1rl[0].fireOnBookMove(f, g, h)
    }
    ;
    b.prototype.V1tg = function(f, g) {
        0 < this.V1rl.length && this.V1rl[0].fireOnBeautyScore(f, g)
    }
    ;
    b.prototype.V1tq = function() {
        0 < this.V1rl.length && this.V1rl[0].fireOnSearchStart({
            strSide: this.V1u7(),
            engineToMove: this.V1re == this.kernel.getCurPos().getSideToMove()
        })
    }
    ;
    b.prototype.V1ud = function(f) {
        0 < this.V1rl.length && this.V1rl[0].fireOnStrongMove(f)
    }
    ;
    b.prototype.V1ue = function(f) {
        0 < this.V1rl.length && this.V1rl[0].fireOnStaticEval(f)
    }
    ;
    b.prototype.V1uf = function(f, g) {
        0 < this.V1rl.length && this.V1rl[0].fireOnEval(f, g)
    }
    ;
    b.prototype.V1ua = function(f) {
        0 < this.V1rl.length && this.V1rl[0].fireOnMoveFeedback(f)
    }
    ;
    b.prototype.V1tl = function(f) {
        if (0 < this.V1rl.length) {
            f.moveNo = this.kernel.getMoveNo();
            var g = this.V1rl[0].fireOnHints(f);
            g && g.forEach(function(h) {
                h.displayed && (h = f.hints[f.index],
                this.V1u8 && this.V1u8.equals(h) || (!f.force && this.hintMeter.hinted(this.kernel.getMoveNo()) || this.hintMeter.inc(h, this.kernel.getMoveNo()),
                this.V1tg(null, this.hintMeter)),
                this.V1tj = h.type,
                this.V1u8 = h)
            }
            .bind(this))
        }
    }
    ;
    b.prototype.V1ug = function(f, g) {
        for (var h = 0; h < f.length; h++)
            if (f[h].type == g && h < f.length - 1)
                return h + 1;
        return f.length ? 0 : -1
    }
    ;
    b.prototype.V1uh = function() {
        return !1
    }
    ;
    b.prototype.V1uc = function() {
        var f = this.kernel.getCurPos();
        return 6 < f.getPieces().length && 16 > f.getPieces().length ? !1 : 6 < f.getPieces().length ? !this.nHighestMoveInBook || 8 > this.kernel.game.getMoveNo() - this.nHighestMoveInBook : 3 > this.V1s2 || 10 > this.kernel.game.getMoveNo()
    }
    ;
    b.prototype.V1ts = function() {
        return 6 >= this.kernel.getCurPos().getPieces().length
    }
    ;
    b.prototype.V1i3 = function() {
        this.superClass.V1i3.call(this);
        if (this.isMyMove()) {
            var f = this.kernel.getMoveNo();
            this.hintMeter.addMove(f)
        }
        this.V1ss && (this.V1qs && (CBDebug.assert(this.V1qs, "CLOCK NOT SET"),
        this.V1qs.stop(),
        f = this.V1qs.V1q6(),
        this.kernel.V1ii(f)),
        this.V1sy.maxHang && (f = new CB.Game,
        f.exec(this.kernel.game),
        this.V1sy.addHangingPieceScore(f, this.V1sy.maxHang),
        this.V1sy.maxHang = null,
        this.V1sy.maxHangDiff = 0,
        this.V1tg(this.V1sy)),
        (f = this.kernel.game.getLastMove()) && this.V1t0.setPlayed(f, this.kernel.game.getMoveNo() - 1, this.kernel.getCurPos().isCheck()),
        this.kernel.game.getCurPos().hasLegals() && (this.V1qs && (this.V1qs.isFinished() && this.kernel.game.getCurPos().hasLegals() && (this.kernel.game.V1af(CB.GameResultEnum.V1a8),
        this.V1qs.V1pw()),
        this.V1qs.onMove(this.kernel.getCurPos().isBTM())),
        this.V1tc()))
    }
    ;
    b.prototype.onResetGame = function() {
        0 < this.V1rl.length && this.V1rl[0].stop();
        this.V1s2 = 0
    }
    ;
    var d = new CB.V3id;
    b.prototype.updateGamePos = function() {
        this.V1sz = Math.round(Date.now() / 1E3);
        this.V1u9 = !1;
        d.exec(function() {
            this.V1ss || this.V1qi();
            this.requestLiveBookOnGamePos && this.requestLiveBookOnGamePos();
            this.requestMyMovesOnGamePos && this.requestMyMovesOnGamePos();
            this.V1s8()
        }
        .bind(this), 200);
        this.V1ui = -1;
        this.V1uj()
    }
    ;
    b.prototype.V1s8 = function() {
        if ("undefined" != typeof Evaluation) {
            var f = new Evaluation(this.kernel.getCurPos());
            this.V1ue(f.evaluate())
        }
    }
    ;
    b.prototype.V1uj = function() {
        this.hints = [];
        this.V1tj = CB.HintTypes.NONE;
        this.hintMove = null
    }
    ;
    b.prototype.blockLiveBookUpdate = function(f) {}
    ;
    b.prototype.liveBookListener = function(f) {
        this.lbInfo = f;
        var g = this.kernel.getCurPos()
          , h = g.getSideToMove();
        6 >= g.getPieces().length && (f.sorted || CB.V1tt.V1tu(f.moves, h == CB.V15e.BLACK));
        V3ir.aTBLobby.fireOnLiveBookDisplay(this.lbInfo);
        var k;
        if (this.V1tr) {
            var l = this.V1uk();
            f.moves.length && g.boardEquals(f.position.board) && (k = this.V1ul(f.tbInfo, g.getSideToMove()).pickRandom(function(n) {
                if (n.getNGames() < l)
                    return 0;
                var p = 1.1;
                this.V1rr() && (p = .9);
                return Math.pow(n.getNGames(), p)
            }
            .bind(this)));
            if (k) {
                if (k.getNGames() > l)
                    var m = k.move;
                this.V1tr(m, k.getNGames())
            }
            this.V1tr = null
        } else
            (f = this.V1um(f.tbInfo, this.kernel.getCurPos().getSideToMove())) && f.length && (this.V1u9 = !0,
            this.V1to ? (this.V1sw.stop(),
            this.V1to(f),
            this.V1to = null) : f.length && this.kernel.getCurPos().getSideToMove() != this.V1re && (this.V1uj(),
            this.V1un = [0, 0],
            this.hintMove = f[0],
            this.V1ti = CB.V17l.contextToLine(this.kernel.game.getCurPos(), [this.hintMove]),
            CB.Hints.V1uo(this.kernel.game, this.hintMove, this.V1ti, 0, !1, function(n, p) {
                n.forEach(function(q) {
                    q.book = !0
                });
                this.V1up(n, p, !0)
            }
            .bind(this), 1E3)))
    }
    ;
    b.prototype.V1um = function(f, g) {
        if (f = this.V1ul(f, g)) {
            f.sort(function(l, m) {
                return m.getNGames() - l.getNGames()
            });
            g = [];
            var h = 0;
            f.forEach(function(l) {
                h += l.getNGames()
            });
            for (var k = 0; k < f.length; k++)
                (2 > k || f[k].getNGames() > h / 4) && g.push(f[k].move);
            return g
        }
    }
    ;
    b.prototype.V1uk = function() {
        "IFDEBUG";
        return 2E3
    }
    ;
    b.prototype.V1ul = function(f, g) {
        if (f) {
            var h = f.moveList.moves
              , k = [];
            f = f.moveList.getMaxGames();
            f = Math.max(1, Math.sqrt(f));
            1E4 < f && (f = 1E4);
            for (var l = 0; l < h.length; l++)
                this.V1uq(h[l], f, g) && k.push(h[l]);
            return k
        }
    }
    ;
    b.prototype.V1uq = function(f, g, h) {
        if (f.isMyMove)
            return !0;
        g = 0;
        void 0 !== h && (g = f.getEloAv());
        f = f.getNGames();
        return 20 <= f && 2280 <= g || 15 <= f && 2320 <= g || 5 <= f && 2380 <= g || 4 <= f && 2400 <= g || 3 <= f && 2500 <= g || 2 <= f && 2550 <= g || 1 <= f && 2600 <= g
    }
    ;
    b.prototype.myMovesListener = function(f) {
        this.myMoves = f.moves
    }
    ;
    b.prototype.initCloudListener = function(f) {
        f.addOnMyMovesListener(this.myMovesListener.bind(this))
    }
    ;
    b.prototype.getFnLoadSearchResult = function() {
        return CB.V1qp.getFnLoadSearchResult()
    }
    ;
    b.prototype.V1qe = function() {
        this.hintMeter.reset()
    }
    ;
    b.prototype.V1ur = function() {
        this.kernel.getCurPos().getSideToMove() == CB.V15e.BLACK ? (this.kernel.V1ie("Time"),
        this.kernel.game.V1af(CB.GameResultEnum.WHITE_WINS),
        this.V1us(),
        this.V1ut(CB.GameResultEnum.WHITE_WINS)) : (this.kernel.V1ie("Time"),
        this.kernel.game.V1af(CB.GameResultEnum.BLACK_WINS),
        this.V1us(),
        this.V1ut(CB.GameResultEnum.BLACK_WINS));
        this.V1ss = !1;
        this.kernel.getCurPos().getSideToMove() == this.V1re && this.V1rl[0].stop()
    }
    ;
    b.prototype.V1hw = function(f) {
        this.V1rl[0].stop();
        var g = CB.GameResultEnum.toString(f)
          , h = this.kernel.getCurPos();
        h.isMate() ? (g += " (" + lm.MATE + ")",
        h.getSideToMove() == this.V1re && this.V1sy.addMateScore(h)) : this.kernel.getCurPos().isStaleMate() && (g += " (" + lm.STALEMATE + ")");
        this.kernel.boardWin && this.kernel.boardWin.addMessage(g, !0);
        this.saveToCloud();
        this.V1us();
        this.V1ut(f);
        CB.V1uu("Game")
    }
    ;
    b.prototype.V1td = function() {
        var f = String.formatEx(lm.RESIGNS, "Fritz");
        V3ir.panelMgr.showBoardMessage(f, 7E3);
        var g = this.V1re == CB.V15e.BLACK ? CB.GameResultEnum.WHITE_WINS : CB.GameResultEnum.BLACK_WINS;
        this.kernel.V1ie(f);
        this.kernel.V1af(g);
        this.saveToCloud();
        this.V1us();
        this.V1ut(g);
        CB.V1uu("Game")
    }
    ;
    b.prototype.V1te = function(f, g) {
        f = g.getEval() - f.getEval();
        300 < f && this.kernel.addSymbol(CB.V1g4.V1g7);
        140 < f && this.kernel.addSymbol(CB.V1g4.V1g5);
        70 < f && this.kernel.addSymbol(CB.V1g4.V1g9)
    }
    ;
    b.prototype.userResigns = function() {
        if (!CB.GameResultEnum.isFinished(this.kernel.game.getResult())) {
            var f = this.V1re == CB.V15e.WHITE ? CB.GameResultEnum.WHITE_WINS : CB.GameResultEnum.BLACK_WINS;
            this.kernel.V1ie(String.formatEx(lm.RESIGNS, this.V1u5()));
            this.kernel.V1af(f);
            this.saveToCloud();
            this.V1us();
            this.V1ut(f);
            CB.V1uu("Game")
        }
    }
    ;
    b.prototype.userOffersDraw = function() {
        if (!CB.GameResultEnum.isFinished(this.kernel.game.getResult()))
            if (this.V1rl[0] && this.V1rl[0].offerDrawToEngine()) {
                V3ir.panelMgr.showBoardMessage(String.formatEx(lm.ACCEPTED_DRAW, "Fritz"), 2E3);
                var f = this.V1re = CB.GameResultEnum.DRAW;
                this.kernel.V1af(f);
                this.saveToCloud();
                this.V1us();
                this.V1ut(f)
            } else
                V3ir.panelMgr.showBoardMessage(String.formatEx(lm.REJECTS_DRAW, "Fritz"), 2E3)
    }
    ;
    b.prototype.onAnalysisLine = function(f, g, h, k, l, m) {
        var n = g
          , p = k;
        this.kernel.getCurPos().getBTM() && (n = -n,
        p = -p);
        m = this.kernel.game.getMoveNo();
        this.V1t0.moves[m] ? this.V1t0.moves[m].updateLines(h, n, l, p, f, this.kernel.getCurPos().getBTM()) : (n = new CB.V1nx(h,n,l,p,f,this.kernel.getCurPos().getBTM()),
        this.V1t0.moves[m] = n);
        if (6 <= f || 2E4 < g)
            if (this.isMyMove() && !this.V1u9 && (this.V1uj(),
            this.V1un = [g, k],
            this.V1ti = CB.V17l.contextToLine(this.kernel.game.getCurPos(), h.line),
            this.hintMove = this.V1ti[0],
            (3E3 < this.analysisTick.getExpired() || 2E4 < g || 12 < f) && CB.Hints.V1uo(this.kernel.game, this.hintMove, this.V1ti, g, !l, this.V1up.bind(this), 1E3)),
            this.V1t0.isBlunder(m) && this.V1uv != m && (this.V1uv = m,
            !this.V1t0.isBlunder(m - 1) && this.isMyMove()))
                V3ir.chessAudio.onFightOppWrong();
        24 < f && V3ir.analysisEngine && V3ir.analysisEngine.engineStop()
    }
    ;
    b.prototype.V1up = function(f, g, h) {
        if (this.V1uw(f) && this.hintMove) {
            this.hints = f;
            this.V1tj = CB.HintTypes.NONE;
            for (var k = 0; k < f.length; k++)
                CB.Hints.V1ux(g, this.kernel.getCurPos(), f[k], null, function(l) {}
                .bind(this));
            this.V1tl({
                hints: this.hints,
                index: 0,
                hintMove: g,
                pos: this.kernel.getCurPos(),
                hintMeter: this.hintMeter,
                book: h
            })
        }
    }
    ;
    b.prototype.V1tk = function() {
        if (this.hints.length && this.hintMove) {
            var f = this.V1ug(this.hints, this.V1tj);
            0 <= f && this.V1tl({
                hints: this.hints,
                index: f,
                hintMove: this.hintMove,
                hintMeter: this.hintMeter,
                pos: this.kernel.getCurPos(),
                force: !0
            });
            return !0
        }
    }
    ;
    b.prototype.V1uw = function(f) {
        if (f.length != this.hints.length)
            return !0;
        for (var g = 0; g < f.length; g++)
            if (!this.hints[g].equals(f[g]))
                return !0
    }
    ;
    b.prototype.isMyMove = function() {
        return this.kernel.getCurPos().getSideToMove() != this.V1re
    }
    ;
    b.prototype.onAnalysisStrongMove = function(f) {
        this.V1ud(f);
        this.strong = f.cancel ? null : f
    }
    ;
    var c = new CB.HSLColor(0,0,40,.4);
    b.prototype.getMarkedSquaresOnButtonDown = function(f, g, h) {
        if (this.kernel.getCurPos().getSideToMove() == this.V1re)
            return [];
        if (g && !this.clickHintTimer.isActive() && this.V1t1) {
            if ((g = this.hintMeter.sameClickSquare(this.kernel.getMoveNo(), f)) || V3ir.checkHintsLoginLimit())
                return h = this.V1sh(f),
                h.length && (g || this.hintMeter.incClickAssists(this.kernel.getMoveNo(), f),
                0 <= this.V1ui && f != this.V1ui && this.V1tg(null, this.hintMeter),
                this.V1ui = f),
                h;
            this.hintMeter.showHintsLimit(this.kernel.getMoveNo()) && (V3ir.panelMgr.showHintsLimitExceeded(),
            this.hintMeter.notifyHintLimitShown(this.kernel.getMoveNo()))
        } else
            return h ? this.V1r4(f) : []
    }
    ;
    b.prototype.V1r4 = function(f) {
        var g = [];
        this.kernel.game.getCurPos().V3hu().forEach(function(h) {
            h.from == f && g.push({
                sq: h.to,
                clr: c
            })
        });
        return g
    }
    ;
    b.prototype.startClickHintTimer = function(f, g) {}
    ;
    b.prototype.notifyHinted = function() {
        this.V1sy.notifyHinted()
    }
    ;
    b.prototype.V1sh = function(f) {
        if (this.kernel.getCurPos().getSideToMove() == this.V1re)
            return [];
        var g = [];
        this.lbInfo && this.lbInfo.moves.forEach(function(h) {
            h.move.from == f && 70 < h.getNGames() && g.push({
                sq: h.move.to,
                clr: new CB.HSLColor(CB.HSLColor.BLUE,80,60,.8)
            })
        }
        .bind(this));
        V3ir.analysisEngine && V3ir.analysisEngine.getHintSquaresOnButtonDown(f).forEach(function(h) {
            for (var k = !1, l = 0; !k && l < g.length; l++)
                g[l].sq == h.sq && (k = !0);
            k || g.push(h)
        });
        return g
    }
    ;
    b.prototype.V1tz = function(f) {
        this.V1t1 = f
    }
    ;
    b.prototype.getCounterMoveTo = function(f, g) {
        if ((this.getHandicap() == CB.V1kt.BEGINNER || this.getHandicap() == CB.V1kt.AMATEUR) && 2 < Math.round(Date.now() / 1E3) - this.V1sz)
            return V3ir.analysisEngine.getCounterMoveTo(f, g)
    }
    ;
    b.prototype.V1us = function() {
        if (V3ir.ratedGame && CB.FritzCommandIds) {
            var f = V3ir.V3i2.userName
              , g = "";
            g = CB.Vq.runsOnChessBaseCom() ? "https://fritz.chessbase.com/AccountBeauty" : "http://localhost/Portal/AccountBeauty?subDomain=fritz";
            f = {
                UserName: encodeURIComponent(f),
                BeautyScore: this.V1sy.getScore(),
                FullBoardMateCount: this.V1sy.fullBoardMate ? 1 : 0,
                MateWithAPawnCount: this.V1sy.mateWithAPawn ? 1 : 0,
                SmotheredMateCount: this.V1sy.smotheredMate ? 1 : 0,
                UnderPromotionCount: this.V1sy.getUnderPromotionCount(),
                DoubleRooksOnSeventhRankCount: this.V1sy.doubleRooksSeventhRank ? 1 : 0,
                SaccedQueens: this.V1sy.getSaccedPieceCount(this.V1sy.saccedQueens),
                SaccedRooks: this.V1sy.getSaccedPieceCount(this.V1sy.saccedRooks),
                SaccedBishops: this.V1sy.getSaccedPieceCount(this.V1sy.saccedBishops),
                SaccedKnights: this.V1sy.getSaccedPieceCount(this.V1sy.saccedKnights),
                SaccedPawns: this.V1sy.getSaccedPieceCount(this.V1sy.saccedPawns)
            };
            $.ajax({
                url: g,
                method: "POST",
                data: f
            }).fail(function(h, k, l) {})
        }
    }
    ;
    b.prototype.V1ut = function(f) {
        if (CB.FritzCommandIds && V3ir.ratedGame) {
            var g = .5;
            if (f == CB.GameResultEnum.WHITE_WINS && this.V1re == CB.V15e.BLACK || f == CB.GameResultEnum.BLACK_WINS && this.V1re == CB.V15e.WHITE)
                g = 1;
            else if (f == CB.GameResultEnum.WHITE_WINS && this.V1re == CB.V15e.WHITE || f == CB.GameResultEnum.BLACK_WINS && this.V1re == CB.V15e.BLACK)
                g = 0;
            var h = V3ir.V3i2.userName
              , k = "";
            switch (V3ir.curLevelId) {
            default:
                k = "fritz_beginner";
                break;
            case CB.FritzCommandIds.LEVEL_AMATEUR:
                k = "fritz_amateur";
                break;
            case CB.FritzCommandIds.LEVEL_CLUBPLAYER:
                k = "fritz_clubplayer";
                break;
            case CB.FritzCommandIds.LEVEL_5_SECONDS:
                k = "fritz_master";
                break;
            case CB.FritzCommandIds.LEVEL_15_SECONDS:
                k = "fritz_grandmaster"
            }
            f = "";
            f = CB.Vq.runsOnChessBaseCom() ? "https://fritz.chessbase.com/SaveNewElo" : "http://localhost/Portal/SaveNewElo?subDomain=fritz";
            g = {
                UserName: encodeURIComponent(h),
                HandicapName: encodeURIComponent(k),
                GameResult: g
            };
            $.ajax({
                url: f,
                method: "POST",
                dataType: "json",
                contentType: "application/json; charset=UTF-8",
                data: JSON.stringify(g)
            }).fail(function(l, m, n) {})
        }
    }
    ;
    return b
}();
"use strict";
CB.CalculateMode = function() {
    var e = function f(c) {
        f.superClass.call(this, c, CB.CalculateMode.POOL_SIZE);
        this.kernel = c;
        V3ir.analysisEngine || CB.Vq.V37() || (V3ir.analysisEngine = new AnalysisEngine);
        this.V1uy = new CB.Tick
    };
    CB.inherit(e, CB.V1qq);
    CB.mixin(e, CB.V1ra);
    e.prototype.destroy = function() {
        this.superClass.destroy.call(this);
        V3ir.analysisEngine && (V3ir.analysisEngine.engineStop(),
        V3ir.analysisEngine.unlinkPlayingMode(this));
        this.kernel.boardWin && (this.kernel.boardWin.setBlind(!1),
        this.kernel.boardWin.moveEntry.V1e4 = !0,
        this.kernel.game.restoreOnce(),
        this.kernel.game.gotoLast(),
        this.kernel.game.fireOnChanged());
        V3ir.commands.fireChecked(V3ir.V3ia.CALCULATE_LINES, !1)
    }
    ;
    e.prototype.createGUIElements = function(c) {
        V3ir.analysisEngine && V3ir.analysisEngine.linkPlayingMode(this);
        this.kernel.game.unAnnotate(!0);
        this.kernel.game.gotoLast();
        this.kernel.game.storeOnce();
        this.kernel.game.deletePrevious();
        this.kernel.V1ie(lm.CALC_INFO);
        this.kernel.boardWin.setBlind(!0, function() {
            return this
        }
        .bind(this));
        this.kernel.boardWin.moveEntry.V1e4 = !1;
        this.kernel.V1hw = this.V1hw.bind(this);
        this.V1sj = this.kernel.game.getMoveOffs();
        this.kernel.boardWin.setBlackIsBottom(this.kernel.getCurPos().getBTM())
    }
    ;
    e.prototype.V1fj = function() {
        V3ir.commands.fireChecked(CB.V1ge.CALCULATE_LINES, !0)
    }
    ;
    e.prototype.onEnteredMove = function(c) {
        return !0
    }
    ;
    e.prototype.V1fy = function() {
        this.superClass.V1fy.apply(this);
        this.kernel.game.forAllMoves(function(c) {
            (c = c.getAnno()) && c.hasDiagram() && c.toggleDiagram()
        }
        .bind(this));
        return !0
    }
    ;
    e.prototype.isCalculateMode = !0;
    var b = new CB.V3id;
    e.prototype.updateGamePos = function() {
        b.exec(function() {
            V3ir.analysisEngine && V3ir.analysisEngine.engineGo(this.kernel);
            this.V1uy.start();
            this.requestLiveBookOnGamePos()
        }
        .bind(this), 200)
    }
    ;
    e.prototype.V1hj = function(c) {}
    ;
    e.prototype.setEngineOff = function() {}
    ;
    e.prototype.getMoveEnterType = function() {
        return CB.V1c6.V1cc
    }
    ;
    e.prototype.getMarkedSquaresOnButtonDown = function(c, f) {
        return !f || this.clickHintTimer && this.clickHintTimer.isActive() ? this.V1r4(c) : this.V1sh(c)
    }
    ;
    e.prototype.isAnalysis = function() {
        return !1
    }
    ;
    e.prototype.V1hu = !0;
    e.prototype.V1hw = function() {}
    ;
    e.prototype.notifyHinted = function() {}
    ;
    e.prototype.onAnalysisLine = function(c, f, g) {
        5 <= c && 3E3 < this.V1uy.getExpired() && this.kernel.game.getMoveOffs() > this.V1sj && (this.kernel.game.V1cs(CB.AnnoType.V1a1, !0),
        c = f,
        this.kernel.getCurPos().getBTM() && (c = -c),
        this.kernel.addSymbol(CB.V1mt.getGlyph(c)),
        this.V1uy.start())
    }
    ;
    e.prototype.onAnalysisStrongMove = function(c) {}
    ;
    e.prototype.V1r4 = function(c) {
        var f = [];
        if (this.kernel.game.getMoveOffs() < this.V1sj)
            return f;
        this.kernel.game.getCurPos().V3hu().forEach(function(g) {
            g.from == c && f.push({
                sq: g.to,
                clr: "hsla( 0, 0%, 40%, 0.4 )"
            })
        });
        return f
    }
    ;
    e.prototype.startClickHintTimer = function(c) {
        this.kernel.game.getMoveOffs() < this.V1sj || (this.clickHintTimer || (this.clickHintTimer = new CB.Timer),
        this.clickHintTimer.runOnce(400, function() {
            var f = this.V1sh(c);
            this.kernel.boardWin.V1sk(f)
        }
        .bind(this)))
    }
    ;
    e.prototype.V1sh = function(c) {
        var f = [];
        if (this.kernel.game.getMoveOffs() < this.V1sj)
            return f;
        this.lbInfo && this.lbInfo.moves.forEach(function(g) {
            g.move.from == c && 70 < g.getNGames() && f.push({
                sq: g.move.to,
                clr: (new CB.HSLColor(CB.HSLColor.BLUE,80,60,.8)).toString()
            })
        }
        .bind(this));
        V3ir.analysisEngine && V3ir.analysisEngine.getHintSquaresOnButtonDown(c).forEach(function(g) {
            for (var h = !1, k = 0; !h && k < f.length; k++)
                f[k].sq == g.sq && (h = !0);
            h || f.push(g)
        });
        return f
    }
    ;
    e.prototype.liveBookListener = function(c) {
        try {
            this.lbInfo = c;
            var f = this.kernel.getCurPos()
              , g = f.getSideToMove();
            6 >= f.getPieces().length && (c.sorted || CB.V1tt.V1tu(c.moves, g == CB.V15e.BLACK));
            V3ir.aTBLobby.fireOnLiveBookDisplay(this.lbInfo)
        } catch (h) {
            CB.V3("LB:" + h)
        }
    }
    ;
    return e
}();
"use strict";
CB.AnnoType = {
    V19w: 2,
    V1a1: 3,
    SQUARE_LIST: 4,
    ARROW_LIST: 5,
    V1uz: 6,
    TIME: 7,
    V1v0: 8,
    V18c: 9,
    JSON: 10,
    V1v1: 11,
    V1v2: 16,
    V1v3: 16,
    V1v4: 17,
    V1v5: 18,
    V1v6: 19,
    V1v7: 20,
    V1v8: 21,
    V1v9: 22,
    V1va: 23,
    V1vb: 24,
    V1vc: 25,
    V1vd: 26,
    V1ve: 27,
    V1vf: 32,
    V1vg: 32,
    V1vh: 33,
    V1vi: 34,
    V1vj: 35,
    Vdk: 36,
    V1j6: 37,
    V1ct: 38,
    V1vk: 127,
    V1vl: 127,
    V1vm: 127,
    V1vn: 128,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return "AnnoType: " + b;
        return "Unknown AnnoType: " + e
    }
};
CB.V1g4 = {
    NONE: 0,
    GOOD: 1,
    V1g5: 2,
    V1g6: 3,
    V1g7: 4,
    V1g8: 5,
    V1g9: 6,
    ONLY_MOVE: 8,
    V1vo: 22,
    V1vp: 165,
    V1vq: 166,
    WHITE: 167,
    BLACK: 168,
    V1vr: 169
};
CB.V1ga = {
    NONE: 0,
    EQUAL: 11,
    UNCLEAR: 13,
    V1gc: 15,
    BLACK_BETTER: 17,
    BLACK_WINS: 19,
    WHITE_WINS: 18,
    WHITE_BETTER: 16,
    V1gb: 14,
    COMPENSATION: 44,
    V1vs: 132,
    V1vt: 36,
    V1vu: 40,
    V1vv: 138,
    V1vw: 32,
    V1vx: 146
};
CB.V1vy = {
    V1vz: 0,
    V1w0: 1,
    V1w1: 2,
    V1w2: 3,
    V1w3: 4
};
CB.AnnoType.V19u = CB.AnnoType.V1vn | CB.AnnoType.V19w;
CB.AnnoType.V1w4 = CB.AnnoType.V1vn | CB.AnnoType.SQUARE_LIST;
CB.AnnoType.V1w5 = CB.AnnoType.V1vn | CB.AnnoType.ARROW_LIST;
CB.V1w6 = {
    V1w7: 1,
    V1w8: 2,
    V1w9: 4,
    V1wa: 8,
    V1wb: 16,
    V1wc: 32,
    V1wd: 64,
    V1vu: 128,
    V1we: 256,
    SACRIFICE: 512,
    Veq: 1024,
    V1wf: 2048,
    V1wg: 4096,
    V1wh: 8192,
    V1wi: 16384,
    V41: 32768
};
var AnnoFactory = {
    factory: function(e) {
        return e in this ? new this[e] : null
    }
};
function AnnoRec() {}
AnnoRec.readHeader = function(e) {
    return {
        inxMv: e.readBEInt24(),
        type: e.readByte(),
        len: e.readBEInt16()
    }
}
;
AnnoRec.writeHeader = function(e, b, d, c) {
    e.writeBEInt24(b);
    e.writeByte(d);
    e.writeBEInt16(c)
}
;
AnnoRec.ANNO_HEAD_SIZE = 6;
CB.V19v = function() {
    var e = function(b, d) {
        this.V1wj = d || CB.V1vy.V1vz;
        this.m_str = b ? b : ""
    };
    e.prototype.getString = function() {
        return this.m_str
    }
    ;
    e.prototype.V1wk = function(b) {
        this.m_str = b
    }
    ;
    e.prototype.toString = function() {
        return this.m_str
    }
    ;
    e.prototype.addText = function(b) {
        this.m_str += b
    }
    ;
    e.prototype.getType = function() {
        return this.V1wj
    }
    ;
    e.prototype.V1wl = function(b) {
        return this.V1wj === b
    }
    ;
    e.prototype.write = function(b, d) {
        var c = AnnoRec.ANNO_HEAD_SIZE + 2 + this.m_str.length;
        b.V3i4(c);
        AnnoRec.writeHeader(b, 0, d, c);
        b.writeByte(this.V1wj || CB.V1vy.V1vz);
        b.writeByte(0);
        b.writeSizedString(this.m_str)
    }
    ;
    e.prototype.read = function(b, d) {
        this.V1wj = d.readByte();
        d.readByte();
        this.m_str = d.readSizedString(b - 2);
        CB.V1b.V72(this.m_str) && (this.m_str = CB.V1b.V1d(this.m_str))
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V19w] = CB.V19v;
AnnoFactory[CB.AnnoType.V19u] = CB.V19v;
CB.V1wm = function() {
    var e = function(b) {
        this.obj = b
    };
    e.prototype.V1wn = function() {
        return this.obj
    }
    ;
    e.prototype.V1wo = function(b) {
        this.obj = b
    }
    ;
    e.prototype.toString = function() {
        return JSON.stringify(this.obj)
    }
    ;
    e.prototype.write = function(b) {
        var d = JSON.stringify(this.obj)
          , c = AnnoRec.ANNO_HEAD_SIZE + d.length;
        b.V3i4(c);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.JSON, c);
        b.writeSizedString(d)
    }
    ;
    e.prototype.read = function(b, d) {
        b = d.readSizedString(b);
        b = JSON.parse(b);
        this.V1wo(b)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.JSON] = CB.V1wm;
CB.V1wp = function() {
    var e = function() {
        this.arr = []
    };
    e.prototype.push = function(b) {
        this.arr.push(b)
    }
    ;
    e.prototype.get = function(b) {
        return this.arr[b]
    }
    ;
    e.prototype.getArray = function() {
        return this.arr
    }
    ;
    e.prototype.write = function(b) {
        var d = JSON.stringify(this.arr)
          , c = AnnoRec.ANNO_HEAD_SIZE + d.length;
        b.V3i4(c);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1v1, c);
        b.writeSizedString(d)
    }
    ;
    e.prototype.read = function(b, d) {
        b = d.readSizedString(b);
        this.arr = JSON.parse(b)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1v1] = CB.V1wp;
CB.V1a2 = function() {
    var e = function() {};
    e.prototype = [];
    e.prototype.toString = function() {
        return "syms"
    }
    ;
    e.prototype.V1wq = function(b) {
        return 1 <= b && 6 >= b
    }
    ;
    e.prototype.V1wr = function(b) {
        return 11 <= b && 19 >= b || 44 == b
    }
    ;
    e.prototype.addSymbol = function(b) {
        for (var d = 0; d < this.length; d++)
            if (this.V1wq(this[d]) && this.V1wq(b) || this.V1wr(this[d]) && this.V1wr(b)) {
                b != this[d] && this.push(b);
                this.splice(d, 1);
                return
            }
        for (d = 0; d < this.length; d++)
            if (b == this[d]) {
                this.splice(d, 1);
                return
            }
        this.push(b)
    }
    ;
    e.prototype.hasExclusiveEval = function(b) {
        for (var d = 0; d < this.length; d++)
            if (b == this[d] && this.V1wr(b))
                return !0;
        return !1
    }
    ;
    e.prototype.getEval = function() {
        for (var b = 0; b < this.length; b++)
            if (this.V1wr(this[b]))
                return this[b];
        return 0
    }
    ;
    e.prototype.removeMyMoveMark = function() {
        for (var b = 0; b < this.length; b++)
            if (this[b] === CB.V1g4.V1vp) {
                this.splice(b, 1);
                break
            }
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + this.length;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1a1, d);
        for (d = 0; d < this.length; d++)
            b.writeByte(this[d])
    }
    ;
    e.prototype.read = function(b, d) {
        for (var c = 0; c < b; ++c)
            this.push(d.readByte())
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1a1] = CB.V1a2;
CB.V1ws = {
    NONE: 0,
    GREEN: 1,
    YELLOW: 2,
    RED: 3,
    V1wt: 4
};
CB.V1ws.V1wu = function(e) {
    switch (e) {
    case "R":
        return CB.V1ws.RED;
    case "Y":
        return CB.V1ws.YELLOW;
    case "G":
        return CB.V1ws.GREEN;
    default:
        return CB.V1ws.NONE
    }
}
;
CB.V1ws.fromString = function(e) {
    switch (e) {
    case "R":
    case "LR":
        return CB.V1ws.RED;
    case "Y":
        return CB.V1ws.YELLOW;
    case "LG":
    case "G":
        return CB.V1ws.GREEN;
    default:
        return CB.V1ws.GREEN
    }
}
;
CB.V1ws.V1wv = function(e) {
    switch (e) {
    case CB.V1ws.RED:
        return "R";
    case CB.V1ws.YELLOW:
        return "Y";
    case CB.V1ws.GREEN:
        return "G"
    }
    return ""
}
;
CB.ColSq = function() {
    function e(b, d) {
        this.field = b;
        this.color = d
    }
    e.STRING_LEN = 3;
    e.prototype.init = function(b) {
        this.color = CB.V1ws.GREEN;
        this.field = CB.Square.A1;
        4 == b.length ? (this.color = CB.V1ws.fromString(b.substring(0, 2)),
        this.field = CB.Square.fromString(b.substring(2, 4))) : 3 == b.length && (this.color = CB.V1ws.V1wu(b[0]),
        this.field = CB.Square.fromString(b.substring(1)))
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.read = function(b) {
        this.color = b.readByte();
        this.field = b.readByte();
        this.color--;
        this.field--
    }
    ;
    e.prototype.write = function(b) {
        b.writeByte(this.color + 1);
        b.writeByte(this.field + 1)
    }
    ;
    e.prototype.toString = function() {
        return CB.V1ws.V1wv(this.color) + CB.Square.toString(this.field)
    }
    ;
    e.prototype.getColour = function() {
        switch (this.color) {
        case CB.V1ws.GREEN:
            return "hsla( 120, 65%, 50%, 0.75 )";
        case CB.V1ws.YELLOW:
            return "hsla( 60, 65%, 50%, 0.8 )";
        case CB.V1ws.RED:
            return "hsla( 0, 65%, 50%, 0.75 )"
        }
    }
    ;
    return e
}();
CB.ColSqAnno = function() {
    var e = function() {};
    e.prototype = [];
    e.prototype.read = function(b, d) {
        for (var c = 0; c < b / 2; c++) {
            var f = new CB.ColSq(0,0);
            f.read(d);
            this.push(f)
        }
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 2 * this.length;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.SQUARE_LIST, d);
        for (d = 0; d < this.length; d++)
            this[d].write(b)
    }
    ;
    e.prototype.toString = function(b) {
        b || (b = ",");
        return this.join(b)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.SQUARE_LIST] = CB.ColSqAnno;
CB.ColArrow = function() {
    var e = function(b, d, c) {
        this.from = b;
        this.to = d;
        this.color = c
    };
    e.STRING_LEN = 5;
    e.prototype.init = function(b) {
        this.from = CB.Square.fromString(b.substring(1, 3));
        this.to = CB.Square.fromString(b.substring(3, 5));
        this.color = CB.V1ws.V1wu(b[0])
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.read = function(b) {
        this.color = b.readByte();
        this.from = b.readByte();
        this.to = b.readByte();
        this.color--;
        this.from--;
        this.to--
    }
    ;
    e.prototype.write = function(b) {
        b.writeByte(this.color + 1);
        b.writeByte(this.from + 1);
        b.writeByte(this.to + 1)
    }
    ;
    e.prototype.toString = function() {
        return CB.V1ws.V1wv(this.color)
    }
    ;
    e.prototype.getColour = function() {
        switch (this.color) {
        case CB.V1ws.GREEN:
            return "hsla( 120, 70%, 50%, 0.90 )";
        case CB.V1ws.YELLOW:
            return "hsla( 50, 75%, 65%, 0.90 )";
        case CB.V1ws.RED:
            return "hsla( 1, 85%, 45%, 0.90 )"
        }
    }
    ;
    return e
}();
CB.ColArrowAnno = function() {
    var e = function() {};
    e.prototype = [];
    e.prototype.read = function(b, d) {
        for (var c = 0; c < b / 3; c++) {
            var f = new CB.ColArrow;
            f.read(d);
            this.push(f)
        }
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 3 * this.length;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.ARROW_LIST, d);
        for (d = 0; d < this.length; d++)
            this[d].write(b)
    }
    ;
    e.prototype.toString = function(b) {
        b || (b = ",");
        return this.join(b)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.ARROW_LIST] = CB.ColArrowAnno;
AnnoFactory[CB.AnnoType.V1uz] = CB.V19v;
CB.V1ww = function() {
    var e = function(b, d) {
        b && (this.eval = b);
        d && (this.depth = d);
        this.type = 0
    };
    e.prototype.eval = 0;
    e.prototype.depth = 0;
    e.prototype.toString = function() {
        return this.eval + "/" + this.depth
    }
    ;
    e.prototype.read = function(b, d) {
        this.eval = d.V3in();
        this.type = d.V3in();
        this.depth = d.V3in()
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 6;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1vh, d);
        b.V3ih(this.eval);
        b.V3ih(this.type);
        b.V3ih(this.depth)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1vh] = CB.V1ww;
CB.V1k0 = function() {
    var e = function(b) {
        this.time = b || 0
    };
    e.prototype.getString = function() {
        var b = this.time >> 24
          , d = this.time >> 16 & 255
          , c = this.time >> 8 & 255
          , f = this.time & 255
          , g = "";
        0 < b && (g = b + ":");
        0 < d && (10 > d && 0 < g.length && (g += "0"),
        g += d + ":");
        10 > c && 0 < g.length && (g += "0");
        0 == d && 0 == b && 10 > c ? (g += c,
        b = Math.floor(f / 10),
        0 < b && (g += "." + b)) : (b = Math.round(c + f / 100),
        60 == b && (b = 59.9),
        g += b);
        return g
    }
    ;
    e.prototype.V1wx = function(b) {
        this.time = CB.V10a.V10b(b)
    }
    ;
    e.prototype.toString = function() {
        return "Time: " + Math.round(this.getTimeIn100th() / 100) + "s"
    }
    ;
    e.prototype.read = function(b, d) {
        this.time = d.readBEInt32()
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 4;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.TIME, d);
        b.writeBEInt32(this.time)
    }
    ;
    e.prototype.getTimeIn100th = function() {
        return 36E4 * (this.time >> 24) + 6E3 * (this.time >> 16 & 255) + 100 * (this.time >> 8 & 255) + (this.time & 255)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.TIME] = CB.V1k0;
CB.V1wy = function() {
    var e = function() {};
    e.prototype.toString = function() {
        return "TC=NOTIMPL"
    }
    ;
    e.prototype.read = function(b, d) {
        for (var c = 0; c < b; c++)
            d.readByte()
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.Vdk] = CB.V1wy;
CB.V1wz = function() {
    var e = function() {
        this.data = []
    };
    e.prototype.toString = function() {
        return "Sync"
    }
    ;
    e.prototype.read = function(b, d) {
        for (var c = 0; c < b; c++)
            this.data[c] = d.readByte()
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 4;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1j6, d);
        var c = 0;
        for (d = this.data.length; c < d; ++c)
            b.writeByte(this.data[c])
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1j6] = CB.V1wz;
CB.V1x0 = function() {
    var e = function(b) {
        this.V1x1 = b
    };
    e.prototype.toString = function() {
        return "Medal-" + this.V1x1
    }
    ;
    e.prototype.getString = function() {
        return this.toString()
    }
    ;
    e.prototype.getOneMedal = function() {
        return this.V1x1 & CB.V1w6.SACRIFICE ? CB.V1w6.SACRIFICE : this.V1x1 & CB.V1w6.V1wg ? CB.V1w6.V1wg : this.V1x1 & CB.V1w6.V1wc ? CB.V1w6.V1wc : this.V1x1 & CB.V1w6.V1wh ? CB.V1w6.V1wh : this.V1x1
    }
    ;
    e.prototype.read = function(b, d) {
        this.V1x1 = d.V3ii()
    }
    ;
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 4;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1vi, d);
        b.V3i3(this.V1x1)
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1vi] = CB.V1x0;
CB.EvalProfileAnno = function() {
    var e = function(b, d, c) {
        this.first = b || 0;
        this.last = d || 0;
        this.evalArr = c || [];
        this.min = 32767;
        this.max = -32767;
        this.V1x2()
    };
    e.V1x3 = 32767;
    e.prototype.V1x2 = function() {
        for (var b = 0; b < this.evalArr.length; b++)
            this.evalArr[b] != e.V1x3 && (this.evalArr[b] > this.max && (this.max = this.evalArr[b]),
            this.evalArr[b] < this.min && (this.min = this.evalArr[b]))
    }
    ;
    e.prototype.range = function() {
        return Math.max(1, this.max - this.min)
    }
    ;
    e.prototype.toString = function() {
        return "MoveMedal"
    }
    ;
    e.prototype.isValid = function() {
        return this.last > this.first
    }
    ;
    e.prototype.read = function(b, d) {
        this.evalArr = [];
        this.last = this.first = 0;
        b = d.readBEInt16();
        if (600 > b) {
            for (var c = 0; c < b; c++) {
                var f = new ArrayBuffer(4)
                  , g = new DataView(f);
                g.setInt8(0, d.readByte());
                g.setInt8(1, d.readByte());
                g.setInt8(2, d.readByte());
                g.setInt8(3, d.readByte());
                f = g.getInt16(2);
                g.getInt8(1);
                g = g.getInt8(0);
                -1 == g ? this.evalArr.push(e.V1x3) : (1 == g && (f = 0 > f ? -3E4 + f : 3E4 - f),
                this.evalArr.push(f))
            }
            this.last = b - 1
        }
        this.V1x2()
    }
    ;
    e.readFactory = createReadFactory(e);
    e.prototype.write = function(b) {
        var d = AnnoRec.ANNO_HEAD_SIZE + 2 + 4 * this.evalArr.length;
        b.V3i4(d);
        AnnoRec.writeHeader(b, 0, CB.AnnoType.V1ct, d);
        b.writeBEInt16(this.evalArr.length);
        for (d = 0; d < this.evalArr.length; d++) {
            var c = new ArrayBuffer(4);
            c = new DataView(c);
            this.evalArr[d] == e.V1x3 ? (c.setInt8(0, 255),
            c.setInt16(2, 0)) : (c.setInt8(0, 0),
            c.setInt16(2, this.evalArr[d]));
            c.setInt8(1, 0);
            b.writeBEInt32(c.getInt32(0))
        }
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V1ct] = CB.EvalProfileAnno;
CB.V1x4 = function() {
    var e = function(c) {
        this.move = c;
        this.solved = !1;
        this.nHelpClicked = 0;
        this.texts = {};
        this.texts.en == {
            question: "",
            help: ""
        }
    }
      , b = ["en", "de", "es", "it"]
      , d = [CB.V6r.ENG, CB.V6r.DEU, CB.V6r.ESP, CB.V6r.ITA];
    e.prototype.getQuestion = function(c) {
        if (this.texts[c])
            return this.texts[c].question;
        for (c = 0; c < b.length; c++)
            if (this.texts[b[c]])
                return this.texts[b[c]].question
    }
    ;
    e.prototype.getHelp = function(c) {
        if (this.texts[c])
            return this.texts[c].help;
        for (c = 0; c < b.length; c++)
            if (this.texts[b[c]])
                return this.texts[b[c]].help
    }
    ;
    e.prototype.toString = function() {
        return "Training"
    }
    ;
    e.prototype.V1x5 = function(c, f) {
        c.V3ii();
        c.V3ig();
        var g = c.V3ig();
        for (f = 0; f < g && 10 > f; f++) {
            var h = this.V1x6(c)
              , k = h.ln;
            k && (this.texts[k] || (this.texts[k] = {}),
            this.texts[k].question = h.str)
        }
        h = c.V3ig();
        for (f = 0; f < h && 10 > f; f++)
            this.V1x6(c);
        g = c.V3ig();
        for (f = 0; f < g && 10 > f; f++)
            if (h = this.V1x6(c),
            k = h.ln)
                this.texts[k] || (this.texts[k] = {}),
                this.texts[k].help = h.str;
        h = c.V3ig();
        for (f = 0; f < h && 10 > f; f++)
            this.V1x6(c)
    }
    ;
    e.prototype.V1x7 = function(c) {
        c.V3ig();
        var f = c.getPos();
        this.V1x5(c, f);
        f = c.readByte();
        for (var g = 0; g < f && 60 > g; g++) {
            var h = c.readByte()
              , k = c.readByte()
              , l = c.readByte();
            c.readByte();
            var m = c.V3ig();
            0 == g && (this.move = new CB.V17g(h,k,l));
            for (h = 0; h < m; h++)
                this.V1x6(c)
        }
        c.getPos()
    }
    ;
    e.prototype.V1x8 = function(c) {
        c.V3ig();
        this.V1x5(c);
        for (var f = c.readByte(), g = 0; g < f && 60 > g; g++) {
            c.readByte();
            for (var h = c.V3ig(), k = 0; k < h; k++)
                this.V1x6(c);
            h = c.V3ig();
            for (k = 0; k < h; k++)
                this.V1x6(c)
        }
    }
    ;
    e.prototype.read = function(c, f) {
        f.V3ig();
        switch (f.readByte()) {
        case 1:
            this.V1x7(f);
            break;
        case 2:
            this.V1x8(f)
        }
    }
    ;
    e.prototype.write = function(c) {
        var f = new CB.V11;
        f.V3i4(1);
        f.writeByte(1);
        var g = f.getPos();
        f.V3i4(0);
        f.getPos();
        f.V3i3(300);
        f.V3i4(0);
        var h = f.getPos();
        f.V3i4(0);
        for (var k = 0, l = 0; l < b.length; l++)
            this.texts[b[l]] && this.texts[b[l]].question && (k = this.V1x9(this.texts[b[l]].question, f, k, d[l]));
        f.V1t(h, function() {
            f.V3i4(k)
        });
        f.V3i4(0);
        var m = 0;
        h = f.getPos();
        f.V3i4(0);
        for (l = 0; l < b.length; l++)
            this.texts[b[l]] && this.texts[b[l]].help && (m = this.V1x9(this.texts[b[l]].help, f, m, d[l]));
        f.V1t(h, function() {
            f.V3i4(m)
        });
        f.V3i4(0);
        this.move ? (f.writeByte(1),
        f.writeByte(this.move.from),
        f.writeByte(this.move.to),
        f.writeByte(this.move.prom)) : (f.writeByte(1),
        f.writeByte(0),
        f.writeByte(0),
        f.writeByte(0));
        f.writeByte(5);
        f.V3i4(0);
        var n = f.getPos();
        f.V1t(g, function() {
            f.V3i4(n)
        });
        g = AnnoRec.ANNO_HEAD_SIZE + f.getSize();
        c.V3i4(g);
        AnnoRec.writeHeader(c, 0, CB.AnnoType.V18c, g);
        c.writeData(f)
    }
    ;
    e.prototype.V1x6 = function(c) {
        c.readByte();
        var f = c.readByte()
          , g = c.V3ig();
        c = c.readSizedString(g);
        CB.V1b.V72(c) && (c = CB.V1b.V1d(c));
        return {
            ln: CB.V6r.V12s(f),
            str: c
        }
    }
    ;
    e.prototype.V1x9 = function(c, f, g, h) {
        c && (f.writeByte(h),
        f.writeByte(0),
        f.V3i4(c.length),
        f.writeSizedString(c),
        g++);
        return g
    }
    ;
    return e
}();
AnnoFactory[CB.AnnoType.V18c] = CB.V1x4;
"use strict";
CB.V1mu = {
    NONE: 0,
    V1xa: 1,
    V1xb: 2,
    V1xc: 3,
    V1xd: 4,
    V1xe: 5,
    V1xf: 6,
    V1xg: 7,
    V1xh: 8,
    V1xi: 9,
    V1xj: 10,
    V1xk: 11,
    V1my: 12,
    V1xl: 13,
    V1mx: 14,
    V1mz: 15,
    V1mw: 16,
    V1n0: 17,
    V1mv: 18,
    V1n1: 19,
    V1xm: 20,
    V1xn: 21,
    V1xo: 22,
    V1xp: 23,
    V1xq: 24,
    V1xr: 25,
    V1xs: 26,
    V1xt: 27,
    V1xu: 28,
    V1xv: 29,
    V1xw: 30,
    V1xx: 31,
    V1xy: 32,
    V1xz: 33,
    V1y0: 34,
    V1y1: 35,
    V1y2: 36,
    V1y3: 37,
    V1y4: 38,
    V1y5: 39,
    V1y6: 40,
    V1y7: 41,
    V1y8: 42,
    V1y9: 43,
    V1ya: 44,
    V1yb: 45,
    V1yc: 46,
    V1yd: 47,
    V1ye: 48,
    V1yf: 49,
    V1yg: 50,
    V1yh: 51,
    V1yi: 52,
    V1yj: 53,
    V1yk: 54,
    V1yl: 55,
    V1ym: 56,
    V1yn: 57,
    V1yo: 58,
    V1yp: 59,
    V1yq: 60,
    V1yr: 61,
    V1ys: 62,
    V1yt: 63,
    V1yu: 64,
    V1yv: 65,
    V1yw: 66,
    V1yx: 67,
    V1yy: 68,
    V1yz: 69,
    V1z0: 70,
    V1z1: 71,
    V1z2: 72,
    V1z3: 73,
    V1z4: 74,
    V1z5: 75,
    V1z6: 76,
    V1z7: 77,
    V1z8: 78,
    V1z9: 79,
    V1za: 80,
    V1zb: 81,
    V1zc: 82,
    V1zd: 83,
    V1ze: 84,
    V1zf: 85,
    V1zg: 86,
    V1zh: 87,
    V1zi: 88,
    V1zj: 89,
    V1zk: 90,
    V1zl: 91,
    V1zm: 92,
    V1zn: 93,
    V1zo: 94,
    V1zp: 95,
    V1zq: 96,
    V1zr: 97,
    V1zs: 98,
    V1zt: 99,
    V1zu: 100,
    V1zv: 101,
    V1zw: 102,
    V1zx: 103,
    V1zy: 104,
    V1zz: 105,
    V200: 106,
    V201: 107,
    V202: 108,
    V203: 109,
    V204: 110,
    V205: 111,
    V206: 112,
    V207: 113,
    V208: 114,
    V209: 115,
    V20a: 116,
    V20b: 117,
    V20c: 118,
    V20d: 119,
    V20e: 120,
    V20f: 121,
    V20g: 122,
    V20h: 123,
    V20i: 124,
    V20j: 125,
    V20k: 126,
    V20l: 127,
    V20m: 128,
    V20n: 129,
    V20o: 130,
    V20p: 131,
    V20q: 132,
    V20r: 133,
    V20s: 134,
    V20t: 135,
    V20u: 136,
    V20v: 137,
    V20w: 138,
    V20x: 139,
    V20y: 140,
    V20z: 141,
    V210: 142,
    V211: 143,
    V212: 144,
    V213: 145,
    V1vx: 146,
    V214: 147,
    V1wg: 148,
    V1a7: 149,
    V215: 150,
    V216: 151,
    V217: 152,
    V218: 153,
    V219: 154,
    V21a: 155,
    V21b: 156,
    V21c: 157,
    V21d: 158,
    V21e: 159,
    V21f: 160,
    V21g: 161,
    V21h: 162,
    V21i: 163,
    V21j: 164,
    V21k: 165,
    V1vq: 166,
    WHITE: 167,
    BLACK: 168,
    V1vr: 169
};
var V3ib = {};
V3ib[CB.V1mu.NONE] = "";
V3ib[CB.V1mu.V1xa] = "!";
V3ib[CB.V1mu.V1xb] = "?";
V3ib[CB.V1mu.V1xc] = "\u203c";
V3ib[CB.V1mu.V1xd] = "??";
V3ib[CB.V1mu.V1xe] = "!?";
V3ib[CB.V1mu.V1xf] = "?!";
V3ib[CB.V1mu.V1xg] = "!";
V3ib[CB.V1mu.V1xh] = "\ue021";
V3ib[CB.V1mu.V1xi] = "";
V3ib[CB.V1mu.V1xj] = "=";
V3ib[CB.V1mu.V1xk] = "=";
V3ib[CB.V1mu.V1my] = "=";
V3ib[CB.V1mu.V1xl] = "\u221e";
V3ib[CB.V1mu.V1mx] = "\ue02f";
V3ib[CB.V1mu.V1mz] = "\ue02e";
V3ib[CB.V1mu.V1mw] = "\u00b1";
V3ib[CB.V1mu.V1n0] = "\ue01a";
V3ib[CB.V1mu.V1mv] = "+-";
V3ib[CB.V1mu.V1n1] = "-+";
V3ib[CB.V1mu.V1xm] = "+-";
V3ib[CB.V1mu.V1xn] = "-+";
V3ib[CB.V1mu.V1xo] = "\ue01d";
V3ib[CB.V1mu.V1xp] = "\ue01d";
V3ib[CB.V1mu.V1xq] = "\ue023";
V3ib[CB.V1mu.V1xr] = "\ue023";
V3ib[CB.V1mu.V1xs] = "\ue023";
V3ib[CB.V1mu.V1xt] = "\ue023";
V3ib[CB.V1mu.V1xu] = "\ue023";
V3ib[CB.V1mu.V1xv] = "\ue023";
V3ib[CB.V1mu.V1xw] = "\ue02d";
V3ib[CB.V1mu.V1xx] = "\ue02d";
V3ib[CB.V1mu.V1xy] = "\ue02d";
V3ib[CB.V1mu.V1xz] = "\ue02d";
V3ib[CB.V1mu.V1y0] = "\ue02d";
V3ib[CB.V1mu.V1y1] = "\ue02d";
V3ib[CB.V1mu.V1y2] = "\ue012";
V3ib[CB.V1mu.V1y3] = "\ue012";
V3ib[CB.V1mu.V1y4] = "\ue012";
V3ib[CB.V1mu.V1y5] = "\ue012";
V3ib[CB.V1mu.V1y6] = "\ue013";
V3ib[CB.V1mu.V1y7] = "\ue013";
V3ib[CB.V1mu.V1y8] = "\ue004\ue000";
V3ib[CB.V1mu.V1y9] = "\ue004\ue000";
V3ib[CB.V1mu.V1ya] = "\ue000";
V3ib[CB.V1mu.V1yb] = "\ue000";
V3ib[CB.V1mu.V1yc] = "\ue000";
V3ib[CB.V1mu.V1yd] = "\ue000";
V3ib[CB.V1mu.V1ye] = "\ue01e";
V3ib[CB.V1mu.V1yf] = "\ue01e";
V3ib[CB.V1mu.V1yg] = "\ue01e";
V3ib[CB.V1mu.V1yh] = "\ue01e";
V3ib[CB.V1mu.V1yi] = "\ue01e";
V3ib[CB.V1mu.V1yj] = "\ue01e";
V3ib[CB.V1mu.V1yk] = "\ue00f";
V3ib[CB.V1mu.V1yl] = "\ue00f";
V3ib[CB.V1mu.V1ym] = "\ue00f";
V3ib[CB.V1mu.V1yn] = "\ue00f";
V3ib[CB.V1mu.V1yo] = "\ue00f";
V3ib[CB.V1mu.V1yp] = "\ue00f";
V3ib[CB.V1mu.V1yq] = "\ue00e";
V3ib[CB.V1mu.V1yr] = "\ue00e";
V3ib[CB.V1mu.V1ys] = "\ue00e";
V3ib[CB.V1mu.V1yt] = "\ue00e";
V3ib[CB.V1mu.V1yu] = "\ue00e";
V3ib[CB.V1mu.V1yv] = "\ue00e";
V3ib[CB.V1mu.V1yw] = "\ue010\ue0181";
V3ib[CB.V1mu.V1yx] = "\ue010\ue0188";
V3ib[CB.V1mu.V1yy] = "";
V3ib[CB.V1mu.V1yz] = "";
V3ib[CB.V1mu.V1z0] = "\ue010\ue024";
V3ib[CB.V1mu.V1z1] = "\ue010\ue024";
V3ib[CB.V1mu.V1z2] = "";
V3ib[CB.V1mu.V1z3] = "";
V3ib[CB.V1mu.V1z4] = "\ue010\ue024";
V3ib[CB.V1mu.V1z5] = "\ue010\ue024";
V3ib[CB.V1mu.V1z6] = "";
V3ib[CB.V1mu.V1z7] = "";
V3ib[CB.V1mu.V1z8] = "\ue010\ue029";
V3ib[CB.V1mu.V1z9] = "\ue010\ue029";
V3ib[CB.V1mu.V1za] = "\ue010\ue029";
V3ib[CB.V1mu.V1zb] = "\ue010\ue029";
V3ib[CB.V1mu.V1zc] = "";
V3ib[CB.V1mu.V1zd] = "";
V3ib[CB.V1mu.V1ze] = "";
V3ib[CB.V1mu.V1zf] = "";
V3ib[CB.V1mu.V1zg] = "\ue010\ue028";
V3ib[CB.V1mu.V1zh] = "\ue010\ue028";
V3ib[CB.V1mu.V1zi] = "";
V3ib[CB.V1mu.V1zj] = "";
V3ib[CB.V1mu.V1zk] = "\ue010\ue027";
V3ib[CB.V1mu.V1zl] = "\ue010\ue027";
V3ib[CB.V1mu.V1zm] = "";
V3ib[CB.V1mu.V1zn] = "";
V3ib[CB.V1mu.V1zo] = "\ue010\ue026";
V3ib[CB.V1mu.V1zp] = "\ue010\ue026";
V3ib[CB.V1mu.V1zq] = "";
V3ib[CB.V1mu.V1zr] = "";
V3ib[CB.V1mu.V1zs] = "\ue010\ue025";
V3ib[CB.V1mu.V1zt] = "\ue010\ue025";
V3ib[CB.V1mu.V1zu] = "";
V3ib[CB.V1mu.V1zv] = "";
V3ib[CB.V1mu.V1zw] = "";
V3ib[CB.V1mu.V1zx] = "";
V3ib[CB.V1mu.V1zy] = "";
V3ib[CB.V1mu.V1zz] = "";
V3ib[CB.V1mu.V200] = "";
V3ib[CB.V1mu.V201] = "";
V3ib[CB.V1mu.V202] = "";
V3ib[CB.V1mu.V203] = "";
V3ib[CB.V1mu.V204] = "";
V3ib[CB.V1mu.V205] = "";
V3ib[CB.V1mu.V206] = "";
V3ib[CB.V1mu.V207] = "";
V3ib[CB.V1mu.V208] = "";
V3ib[CB.V1mu.V209] = "";
V3ib[CB.V1mu.V20a] = "";
V3ib[CB.V1mu.V20b] = "";
V3ib[CB.V1mu.V20c] = "";
V3ib[CB.V1mu.V20d] = "";
V3ib[CB.V1mu.V20e] = "";
V3ib[CB.V1mu.V20f] = "";
V3ib[CB.V1mu.V20g] = "\ue010\ue01f";
V3ib[CB.V1mu.V20h] = "\ue010\ue01f";
V3ib[CB.V1mu.V20i] = "\ue010\ue01f";
V3ib[CB.V1mu.V20j] = "\ue010\ue01f";
V3ib[CB.V1mu.V20k] = "";
V3ib[CB.V1mu.V20l] = "";
V3ib[CB.V1mu.V20m] = "";
V3ib[CB.V1mu.V20n] = "";
V3ib[CB.V1mu.V20o] = "\ue017";
V3ib[CB.V1mu.V20p] = "\ue017";
V3ib[CB.V1mu.V20q] = "\ue017";
V3ib[CB.V1mu.V20r] = "\ue017";
V3ib[CB.V1mu.V20s] = "\ue017";
V3ib[CB.V1mu.V20t] = "\ue017";
V3ib[CB.V1mu.V20u] = "\ue01c";
V3ib[CB.V1mu.V20v] = "\ue01c";
V3ib[CB.V1mu.V20w] = "\ue01c";
V3ib[CB.V1mu.V20x] = "\ue01c";
V3ib[CB.V1mu.V20y] = "\u2206";
V3ib[CB.V1mu.V20z] = "\ue022";
V3ib[CB.V1mu.V210] = "\ue020";
V3ib[CB.V1mu.V211] = "\u2264";
V3ib[CB.V1mu.V212] = "=";
V3ib[CB.V1mu.V213] = "RR";
V3ib[CB.V1mu.V1vx] = "N";
V3ib[CB.V1mu.V214] = "\ue010";
V3ib[CB.V1mu.V1wg] = "\ue01f";
V3ib[CB.V1mu.V1a7] = "\ue018";
V3ib[CB.V1mu.V215] = "\ue019";
V3ib[CB.V1mu.V216] = "\ue001";
V3ib[CB.V1mu.V217] = "\ue001";
V3ib[CB.V1mu.V218] = "\ue002";
V3ib[CB.V1mu.V219] = "\ue003";
V3ib[CB.V1mu.V21a] = "\ue02b";
V3ib[CB.V1mu.V21b] = "\ue02b";
V3ib[CB.V1mu.V21c] = "\ue02c";
V3ib[CB.V1mu.V21d] = "\ue02c";
V3ib[CB.V1mu.V21e] = "\ue007";
V3ib[CB.V1mu.V21f] = "\ue007";
V3ib[CB.V1mu.V21g] = "\ue008";
V3ib[CB.V1mu.V21h] = "\ue008";
V3ib[CB.V1mu.V21i] = ">";
V3ib[CB.V1mu.V21j] = ">";
V3ib[CB.V1mu.V21k] = "*";
V3ib[CB.V1mu.V1vq] = "**";
V3ib[CB.V1mu.WHITE] = "";
V3ib[CB.V1mu.BLACK] = "";
V3ib[CB.V1mu.V1vr] = "";
var PieceGlyphs = {};
PieceGlyphs[CB.Piece.PAWN] = "\ue029";
PieceGlyphs[CB.Piece.KNIGHT] = "\ue028";
PieceGlyphs[CB.Piece.BISHOP] = "\ue027";
PieceGlyphs[CB.Piece.ROOK] = "\ue026";
PieceGlyphs[CB.Piece.QUEEN] = "\ue025";
PieceGlyphs[CB.Piece.KING] = "\ue024";
var V3hp = {};
V3hp[CB.Piece.PAWN] = "\u2659";
V3hp[CB.Piece.KNIGHT] = "\u2658";
V3hp[CB.Piece.BISHOP] = "\u2657";
V3hp[CB.Piece.ROOK] = "\u2656";
V3hp[CB.Piece.QUEEN] = "\u2655";
V3hp[CB.Piece.KING] = "\u2654";
V3ib.getText = function(e) {
    return V3ib[e]
}
;
V3ib.addTexts = function(e, b) {
    var d = {};
    d[GlyphType.MOVE_GLYPH] = d[GlyphType.PRE_GLYPH] = d[GlyphType.POST_GLYPH] = "";
    for (var c = 0, f = b.length; c < f; ++c) {
        var g = b[c]
          , h = V3ib.getText(g);
        d[GlyphType.getType(g)] += h
    }
    return d[GlyphType.PRE_GLYPH] + e + d[GlyphType.MOVE_GLYPH] + d[GlyphType.POST_GLYPH]
}
;
CB.V3hr = ObjUtil.clone(CB.V3ho);
CB.V3hr.arrStrPieces[CB.Piece.Vcx] = CB.V3hr.arrStrPieces[CB.Piece.Vcy] = PieceGlyphs[CB.Piece.KING];
CB.V3hr.arrStrPieces[CB.Piece.Vcz] = CB.V3hr.arrStrPieces[CB.Piece.Vd0] = PieceGlyphs[CB.Piece.QUEEN];
CB.V3hr.arrStrPieces[CB.Piece.Vd1] = CB.V3hr.arrStrPieces[CB.Piece.Vd2] = PieceGlyphs[CB.Piece.ROOK];
CB.V3hr.arrStrPieces[CB.Piece.Vd3] = CB.V3hr.arrStrPieces[CB.Piece.Vd4] = PieceGlyphs[CB.Piece.BISHOP];
CB.V3hr.arrStrPieces[CB.Piece.W_KNIGHT] = CB.V3hr.arrStrPieces[CB.Piece.B_KNIGHT] = PieceGlyphs[CB.Piece.KNIGHT];
CB.V3hr.arrStrPieces[CB.Piece.Vd5] = CB.V3hr.arrStrPieces[CB.Piece.Vd6] = "";
CB.UnicodeV3hr = ObjUtil.clone(CB.V3ho);
CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vcx] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vcy] = V3hp[CB.Piece.KING];
CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vcz] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd0] = V3hp[CB.Piece.QUEEN];
CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd1] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd2] = V3hp[CB.Piece.ROOK];
CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd3] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd4] = V3hp[CB.Piece.BISHOP];
CB.UnicodeV3hr.arrStrPieces[CB.Piece.W_KNIGHT] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.B_KNIGHT] = V3hp[CB.Piece.KNIGHT];
CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd5] = CB.UnicodeV3hr.arrStrPieces[CB.Piece.Vd6] = "";
var GlyphType = {
    PRE_GLYPH: 0,
    MOVE_GLYPH: 1,
    POST_GLYPH: 2,
    getType: function(e) {
        return e <= CB.V1mu.V1xi || e >= CB.V1mu.V21k && e <= CB.V1mu.V1vr || e === CB.V1mu.V1xo || e === CB.V1mu.V1xp ? GlyphType.MOVE_GLYPH : e <= CB.V1mu.V20x || e >= CB.V1mu.V1vx ? GlyphType.POST_GLYPH : GlyphType.PRE_GLYPH
    }
};
NotationLocalizations.glyphs = CB.V3hr;
NotationLocalizations.uglyphs = CB.UnicodeV3hr;
"use strict";
CB.TokenType = {
    NONE: 0,
    UNKNOWN: 1,
    V21l: 2,
    V21m: 3,
    V21n: 4,
    V21o: 5,
    V21p: 6,
    V21q: 7,
    V21r: 8,
    V21s: 9,
    V21t: 10,
    V21u: 11,
    V21v: 12,
    V21w: 13,
    V21x: 14,
    CHECK: 15,
    MATE: 16,
    MOVE: 17,
    V21y: 18,
    V21z: 19,
    V10x: 20,
    V220: 21,
    V221: 22,
    V222: 23,
    V1g5: 24,
    V1g7: 25,
    GOOD: 26,
    V1g6: 27,
    V223: 28,
    V224: 29,
    WHITE_WINNING: 30,
    BLACK_WINNING: 31
};
function Token(e, b) {
    this.type = e;
    b && (this.str = b)
}
Token.prototype.type = CB.TokenType.UNKNOWN;
Token.prototype.str = "";
Token.prototype.toString = function() {
    var e = EnumToString(CB.TokenType, this.type);
    this.str && (e += "(" + this.str + ")");
    return e
}
;
function V3hw(e) {
    this.m_it = new StringIterator(e);
    this.m_it.Next()
}
V3hw.prototype.m_it = new StringIterator("");
V3hw.prototype.m_inHeader = !1;
V3hw.prototype.nextToken = function() {
    this.m_it.skipWhile(Char.IsWhiteSpace, !0);
    if (this.m_it.isEOF())
        return new Token(CB.TokenType.V21l);
    var e = this.m_it.Current();
    this.m_it.Next();
    switch (e) {
    case "X":
    case "#":
        return new Token(CB.TokenType.MATE);
    case "+":
        return this.m_it.AcceptChar("-", !0) && !this.m_it.AcceptStr("-+", !0) ? new Token(CB.TokenType.WHITE_WINNING) : new Token(CB.TokenType.CHECK);
    case "$":
        return new Token(CB.TokenType.V21x);
    case "*":
        return new Token(CB.TokenType.V21t,e);
    case "[":
        return this.m_inHeader = !0,
        new Token(CB.TokenType.V21m);
    case "]":
        return this.m_inHeader = !1,
        new Token(CB.TokenType.V21n);
    case "(":
        return new Token(CB.TokenType.V21r);
    case ")":
        return new Token(CB.TokenType.V21s);
    case ".":
        return new Token(CB.TokenType.V220)
    }
    if (this.m_inHeader) {
        if (Char.IsLetterOrDigit(e))
            return e += this.m_it.AcceptWhile(Char.IsLetterOrDigit, !0),
            new Token(CB.TokenType.V21o,e);
        if ('"' === e)
            return e = this.m_it.AcceptUntil(Char.getIsChar("]"), !0),
            e = e.trim(),
            '"' === e.charAt(e.length - 1) && (e = e.slice(0, e.length - 1)),
            new Token(CB.TokenType.V21p,e)
    }
    if ("{" === e)
        return e = this.m_it.AcceptUntil(Char.getIsChar("}"), !0),
        this.m_it.skipWhile(Char.getIsChar("}"), !0),
        new Token(CB.TokenType.V21q,e);
    if ("0" === e) {
        if (this.m_it.AcceptStr("-0-0", !0))
            return new Token(CB.TokenType.V221);
        if (this.m_it.AcceptStr("-0", !0))
            return new Token(CB.TokenType.V222);
        if (this.m_it.AcceptStr("-1", !0))
            return new Token(CB.TokenType.V21v)
    }
    if ("O" === e) {
        if (this.m_it.AcceptStr("-O-O", !0))
            return new Token(CB.TokenType.V221);
        if (this.m_it.AcceptStr("-O", !0))
            return new Token(CB.TokenType.V222)
    }
    if ("1" === e) {
        if (this.m_it.AcceptStr("-0", !0))
            return new Token(CB.TokenType.V21u);
        if (this.m_it.AcceptStr("/2-1/2", !0))
            return new Token(CB.TokenType.V21w)
    }
    if (Char.IsDigit(e))
        return e += this.m_it.AcceptWhile(Char.IsDigit, !0),
        new Token(CB.TokenType.V10x,e);
    if ("-" === e) {
        if (this.m_it.AcceptChar("+", !0) && !this.m_it.AcceptStr("+-", !0))
            return new Token(CB.TokenType.BLACK_WINNING);
        if (this.m_it.AcceptChar("-", !0))
            return new Token(CB.TokenType.V21z)
    }
    return "?" === e ? this.m_it.AcceptChar("?", !0) ? new Token(CB.TokenType.V1g7) : this.m_it.AcceptChar("!", !0) ? new Token(CB.TokenType.V223) : new Token(CB.TokenType.V1g5) : "!" === e ? this.m_it.AcceptChar("?", !0) ? new Token(CB.TokenType.V224) : this.m_it.AcceptChar("!", !0) ? new Token(CB.TokenType.V1g6) : new Token(CB.TokenType.GOOD) : "Z" === e && this.m_it.AcceptChar("0", !0) ? new Token(CB.TokenType.V21z) : V3hw.isMoveChar(e) ? (e += this.m_it.AcceptWhile(V3hw.isMoveChar, !0),
    new Token(CB.TokenType.MOVE,e)) : new Token(CB.TokenType.UNKNOWN,e)
}
;
V3hw.isMoveChar = function(e) {
    return "a" <= e && "h" >= e || "1" <= e && "8" >= e || "x" === e || "=" === e || Char.IsUpperCaseLetter(e) && CB.Piece.fromString(e) !== CB.Piece.NONE
}
;
CB.V225 = function() {
    var e = function(b) {
        this.V226 = new V3hw(b);
        this.V227 = null
    };
    e.prototype.V228 = function(b) {
        this.V227 || (this.V227 = this.V226.nextToken());
        return b && b(this.V227.type) ? this.V227 : null
    }
    ;
    e.V229 = function(b) {
        return function(d) {
            return d === b
        }
    }
    ;
    e.prototype.pop = function(b) {
        if (b = this.V228(b))
            this.V227 = null;
        return b
    }
    ;
    e.prototype.V22a = function(b) {
        return this.pop(e.V229(b))
    }
    ;
    e.prototype.V22b = function(b) {
        return this.V228(e.V229(b))
    }
    ;
    return e
}();
"use strict";
function PGNSubLine() {}
PGNSubLine.prototype = [];
CB.V22c = function() {
    var e = function(b) {
        this.V22d = null;
        this.V22j = this.V22i = this.V22h = this.V22g = this.V22f = this.V22e = !1;
        this.V22l = this.V22k = CB.Piece.NONE;
        this.V22q = this.V22p = this.V22o = this.V22n = this.V22m = -1;
        b && (this.V22d = b,
        this.init(b))
    };
    e.g_regex = /^(K|Q|R|N|B)?([a-h]?)([1-8]?)(x?)([a-h])([1-8])(?:=?(K|Q|R|N|B))?$/;
    e.prototype.init = function(b) {
        e.g_regex.exec(b) && (this.V22k = CB.Piece.fromString(RegExp.$1),
        this.V22k = CB.Piece.V15k(this.V22k),
        RegExp.$2 && (this.V22m = CB.Square.V16r(RegExp.$2)),
        RegExp.$3 && (this.V22n = CB.Square.V16s(RegExp.$3)),
        RegExp.$4 && (this.V22j = !0),
        RegExp.$5 && (this.V22o = CB.Square.V16r(RegExp.$5)),
        RegExp.$6 && (this.V22p = CB.Square.V16s(RegExp.$6)),
        RegExp.$7 && (this.V22l = CB.Piece.fromString(RegExp.$7),
        this.V22l = CB.Piece.V15k(this.V22l)),
        0 > this.V22n && this.V22k === CB.Piece.NONE && (this.V22k = CB.Piece.PAWN),
        0 <= this.V22o && 0 <= this.V22p && (this.V22q = CB.Square.V16t(this.V22o, this.V22p)))
    }
    ;
    e.prototype.V22r = function() {
        this.V22i = !0
    }
    ;
    e.prototype.isNullMove = function() {
        return this.V22i
    }
    ;
    e.prototype.V22s = function() {
        this.V22h = !0
    }
    ;
    e.prototype.isLongCastling = function() {
        return this.V22h
    }
    ;
    e.prototype.V22t = function() {
        this.V22g = !0
    }
    ;
    e.prototype.isShortCastling = function() {
        return this.V22g
    }
    ;
    e.prototype.setCheck = function(b) {
        this.V22e = b
    }
    ;
    e.prototype.setMate = function(b) {
        this.V22f = b
    }
    ;
    e.prototype.isTake = function() {
        return this.V22j
    }
    ;
    e.prototype.matches = function(b) {
        var d = b.from;
        return this.V22q !== b.to || this.V22k !== CB.Piece.NONE && (b = b.getMoved(),
        CB.Piece.V15k(b) !== this.V22k) ? !1 : this.matchesFrom(d)
    }
    ;
    e.prototype.matchesFrom = function(b) {
        return 0 <= this.V22m && this.V22m !== CB.Square.V16v(b) || 0 <= this.V22n && this.V22n !== CB.Square.V16u(b) ? !1 : !0
    }
    ;
    e.prototype.getMoved = function() {
        return this.V22k
    }
    ;
    e.prototype.getTo = function() {
        return this.V22q
    }
    ;
    e.prototype.getProm = function() {
        return this.V22l
    }
    ;
    return e
}();
CB.V22u = function() {
    var e = function(b) {
        this.m_strComment = b
    };
    e.prototype.m_strComment = "";
    e.prototype.getComment = function() {
        return this.m_strComment
    }
    ;
    return e
}();
function PGNGlyph(e) {
    this.m_glyph = e
}
PGNGlyph.prototype.m_glyph = 0;
PGNGlyph.prototype.getGlyph = function() {
    return this.m_glyph
}
;
function PGNMoveNum(e, b) {
    this.m_num = e;
    this.m_isBlack = b
}
function PGNGame() {
    this.m_hdrs = {};
    this.m_mainLine = new PGNSubLine
}
PGNGame.prototype.m_hdrs = {};
PGNGame.prototype.m_mainLine = new PGNSubLine;
PGNGame.prototype.getHeaders = function() {
    return this.m_hdrs
}
;
PGNGame.prototype.getMainLine = function() {
    return this.m_mainLine
}
;
CB.V22v = function() {
    function e(f) {
        switch (f) {
        case CB.TokenType.V1g5:
            return CB.V1mu.V1xb;
        case CB.TokenType.V223:
            return CB.V1mu.V1xf;
        case CB.TokenType.GOOD:
            return CB.V1mu.V1xa;
        case CB.TokenType.V224:
            return CB.V1mu.V1xe;
        case CB.TokenType.V1g6:
            return CB.V1mu.V1xc;
        case CB.TokenType.V1g7:
            return CB.V1mu.V1xd;
        case CB.TokenType.WHITE_WINNING:
            return CB.V1mu.V1mv;
        case CB.TokenType.BLACK_WINNING:
            return CB.V1mu.V1n1;
        default:
            return CB.V1mu.NONE
        }
    }
    function b(f) {
        return e(f) !== CB.V1mu.NONE
    }
    var d = function(f) {
        this.V22w = f ? f : new CB.V225("")
    };
    d.prototype.V22x = function() {
        var f = new PGNGame;
        return this.V22y(f.m_hdrs) && this.V22z(f) ? f : null
    }
    ;
    d.prototype.V230 = function() {
        var f = new PGNGame;
        return this.V22y(f.m_hdrs) ? f : null
    }
    ;
    d.prototype.V22z = function(f) {
        this.V231(f.m_mainLine);
        var g = this.V232();
        null != g && (f.m_hdrs.result = g);
        return !0
    }
    ;
    d.V233 = function(f) {
        return f === CB.TokenType.V21v || f === CB.TokenType.V21u || f === CB.TokenType.V21w || f === CB.TokenType.V21t
    }
    ;
    d.prototype.V232 = function() {
        var f = this.V22w.pop(d.V233);
        if (f)
            switch (f.type) {
            case CB.TokenType.V21v:
                return CB.GameResultEnum.BLACK_WINS;
            case CB.TokenType.V21u:
                return CB.GameResultEnum.WHITE_WINS;
            case CB.TokenType.V21w:
                return CB.GameResultEnum.DRAW;
            case CB.TokenType.V21t:
                return CB.GameResultEnum.V1a7
            }
        return null
    }
    ;
    d.prototype.V231 = function(f) {
        for (var g = this.V234(); null != g; g = this.V234())
            f.push(g);
        return !0
    }
    ;
    d.prototype.V234 = function() {
        var f = this.V235();
        return f || (f = this.V236()) || (f = this.V237()) || (f = this.V238()) ? f : (f = this.V239()) ? f : null
    }
    ;
    d.prototype.V237 = function() {
        if (this.V22w.V22a(CB.TokenType.V21x)) {
            var f = this.V22w.V22a(CB.TokenType.V10x);
            return new PGNGlyph(Number(f.str))
        }
        return (f = this.V22w.pop(b)) ? (f = e(f.type),
        new PGNGlyph(f)) : null
    }
    ;
    d.prototype.V238 = function() {
        if (this.V22w.V22a(CB.TokenType.V21r)) {
            var f = new PGNSubLine;
            this.V231(f);
            this.V22w.V22a(CB.TokenType.V21s);
            return f
        }
        return null
    }
    ;
    d.prototype.V239 = function() {
        var f = this.V22w.V22a(CB.TokenType.V21q);
        return f ? new CB.V22u(f.str) : null
    }
    ;
    d.prototype.V235 = function() {
        var f = this.V22w.V22a(CB.TokenType.V10x);
        if (f) {
            for (var g = 0; this.V22w.V22a(CB.TokenType.V220); )
                ++g;
            return new PGNMoveNum(Number(f.str),1 < g)
        }
        return null
    }
    ;
    d.V23a = function(f) {
        return f === CB.TokenType.MOVE || f === CB.TokenType.V221 || f === CB.TokenType.V222 || f === CB.TokenType.V21z
    }
    ;
    d.prototype.V236 = function() {
        var f = this.V22w.pop(d.V23a);
        if (f) {
            var g = new CB.V22c;
            switch (f.type) {
            case CB.TokenType.MOVE:
                g.init(f.str);
                break;
            case CB.TokenType.V221:
                g.V22s();
                break;
            case CB.TokenType.V222:
                g.V22t();
                break;
            case CB.TokenType.V21z:
                g.V22r()
            }
            if (f.type !== CB.TokenType.V21z) {
                f = null != this.V22w.V22a(CB.TokenType.CHECK);
                var h = !1;
                f || (h = null != this.V22w.V22a(CB.TokenType.MATE));
                g.setCheck(f);
                g.setMate(h)
            }
            return g
        }
        return null
    }
    ;
    d.prototype.V22y = function(f) {
        for (; this.V23b(f); )
            ;
        return !0
    }
    ;
    d.prototype.V23b = function(f) {
        if (this.V22w.V22a(CB.TokenType.V21m)) {
            var g = this.V22w.V22a(CB.TokenType.V21o)
              , h = this.V22w.V22a(CB.TokenType.V21p);
            this.V22w.V22a(CB.TokenType.V21n);
            g && (g = g.str.toLowerCase(),
            f[g] = h.str);
            return !0
        }
        return !1
    }
    ;
    d.V23c = function(f) {
        for (var g = new CB.ColSqAnno, h = 0, k = f.length; h < k; ++h) {
            var l = f[h]
              , m = new CB.ColSq;
            m.init(l);
            g.push(m)
        }
        return g
    }
    ;
    d.V23d = function(f) {
        for (var g = new CB.ColArrowAnno, h = 0, k = f.length; h < k; ++h) {
            var l = f[h]
              , m = new CB.ColArrow;
            m.init(l);
            g.push(m)
        }
        return g
    }
    ;
    d.V23e = function(f) {
        var g = "";
        0 < f.length && (g = f[0]);
        return new CB.V19v(g)
    }
    ;
    d.V23f = function(f) {
        f = f[0].split(":");
        f = 3600 * Number(f[0]) + 60 * Number(f[1]) + Number(f[2]);
        var g = new CB.V1k0;
        g.V1wx(100 * f);
        return g
    }
    ;
    d.V23g = function(f) {
        var g = .01 * Number(f[0])
          , h = 0;
        1 < f.length && (h = Number(f[1]));
        return new CB.V1ww(g,h)
    }
    ;
    d.V23h = function(f) {
        var g = new CB.V1x4;
        if (7 <= f.length && 2 == f[0].length) {
            g.move = f[4];
            for (var h = 0; h < f.length / 7; h++)
                2 == f[7 * h].length && (g.texts[f[7 * h].toLowerCase()] = {
                    question: f[7 * h + 1],
                    help: f[7 * h + 2]
                })
        } else
            g.move = f[3],
            g.texts.en = {
                question: f[0],
                help: f[1]
            };
        g.fromPGN = !0;
        return g
    }
    ;
    d.V23i = function(f) {
        var g = [];
        if (3 < f.length) {
            for (var h = parseInt(f[0]), k = parseInt(f[1]), l = 0; l < k - h + 1; l++)
                g.push(parseInt(f[l + 2]));
            f = new CB.EvalProfileAnno(h,k,g);
            f.fromPGN = !0;
            return f
        }
    }
    ;
    d.V23j = function(f) {
        return new CB.V1x0(parseInt(f[0]))
    }
    ;
    var c = {
        cal: {
            func: d.V23d,
            type: CB.AnnoType.ARROW_LIST
        },
        csl: {
            func: d.V23c,
            type: CB.AnnoType.SQUARE_LIST
        },
        dia: {
            func: d.V23e,
            type: CB.AnnoType.V1uz
        },
        eval: {
            func: d.V23g,
            type: CB.AnnoType.V1vh
        },
        emt: {
            func: d.V23f,
            type: CB.AnnoType.TIME
        },
        tqu: {
            func: d.V23h,
            type: CB.AnnoType.V18c
        },
        mdl: {
            func: d.V23j,
            type: CB.AnnoType.V1vi
        },
        evp: {
            func: d.V23i,
            type: CB.AnnoType.V1ct
        }
    };
    d.V23k = /(-?(?:\d?\d\.\s?\d\d?)|(?:#\d+))\/\s?(\d+)/;
    d.V23l = function(f, g) {
        if (0 <= g.indexOf("/")) {
            var h = g.replace(/\r/g, " ");
            h = h.replace(/\n/g, " ");
            h = h.replace(/\s\s/g, " ");
            var k = d.V23k.exec(h);
            k && (g = k[1],
            g = g.replace(/\s/g, ""),
            g = 0 === g.indexOf("#") ? 32E3 : 0 === g.indexOf("-#") ? -32E3 : Number(g),
            g = new CB.V1ww(g,Number(k[2])),
            f.setAnnoItem(CB.AnnoType.V1vh, g),
            g = k.index,
            k = k[0].length,
            g = h.substring(0, g) + h.substring(g + k))
        }
        if (0 <= g.indexOf("[%")) {
            h = [];
            g = PGNCommand.process(g, h);
            var l = 0;
            for (k = h.length; l < k; ++l) {
                var m = h[l];
                if (m.m_cmd in c) {
                    var n = c[m.m_cmd]
                      , p = n.type;
                    (m = n.func(m.m_args)) && f.setAnnoItem(p, m)
                }
            }
        }
        g && f.setAnnoItem(CB.AnnoType.V19w, new CB.V19v(g))
    }
    ;
    return d
}();
CB.PGN = function() {
    var e = {
        V23m: function(f) {
            return void 0 === f ? "" : "?" === f ? "" : f
        },
        isDefined: function(f) {
            return f && "?" !== f
        },
        V23n: function(f) {
            var g = new CB.V1a9;
            g.setWhite(e.V23m(f.white));
            g.setBlack(e.V23m(f.black));
            g.V1ac(e.V23m(f.event));
            g.V1ae(e.V23m(f.site));
            g.V1ad(e.V23m(f.annotator));
            g.V1ab(e.V23m(f.eco));
            var h = f.result;
            "string" === typeof h ? g.V1af(CB.GameResultEnum.fromString(h)) : g.V1af(h);
            g.V1ag(e.V23m(f.round));
            e.isDefined(f.whiteelo) && g.V1ah(parseInt(f.whiteelo));
            e.isDefined(f.blackelo) && g.V1ai(parseInt(f.blackelo));
            e.isDefined(f.date) && g.V1ak(f.date);
            e.isDefined(f.timecontrol) && g.setClockParams(e.V23o(f.timecontrol));
            e.isDefined(f.plycount) && (g.plyCount = parseInt(f.plycount) + 1 >> 1);
            e.isDefined(f.variant) && -1 != f.variant.indexOf("960") && (g.variant = "Chess960");
            return g
        }
    }
      , b = /^(\d+)(?:\+(\d+))?$/;
    e.V23o = function(f) {
        return (f = b.exec(f)) ? new CB.V1fs(Number(f[1]) / 60,Number(f[2])) : new CB.V1fs
    }
    ;
    e.toGame = function(f) {
        var g = null
          , h = f.getHeaders();
        h.fen && (g = h.fen);
        g && e.V23p(g);
        h = e.V23n(h);
        g = new CB.Position(g);
        f = f.getMainLine();
        f = e.V23q(g, f);
        f = new CB.Game(g,f);
        f.setHeader(h);
        return f
    }
    ;
    e.V23p = function(f) {
        f = f.split(" ");
        var g = f[2]
          , h = g.charAt(0);
        "A" <= h && "H" >= h ? (e.Chess960CastlingFlags = g,
        f = f[0],
        f = f.substring(f.length - 8).indexOf("K") % 8,
        e.Chess960InitialWhiteKingPosition = CB.Square.V16t(f, 0),
        e.Chess960InitialBlackKingPosition = CB.Square.V16t(f, 7)) : e.V23r()
    }
    ;
    e.toMove = function(f, g) {
        if (f.isLongCastling()) {
            var h = g.isWTM() ? CB.V17g.g_mvW000 : CB.V17g.g_mvB000;
            e.Chess960CastlingFlags && (h = g.isWTM() ? new CB.V17g(e.Chess960InitialWhiteKingPosition,CB.Square.C1) : new CB.V17g(e.Chess960InitialBlackKingPosition,CB.Square.C8),
            h.Chess960LongCastling = !0,
            h.Chess960CastlingFlags = e.Chess960CastlingFlags,
            h.Chess960InitialWhiteKingPosition = e.Chess960InitialWhiteKingPosition,
            h.Chess960InitialBlackKingPosition = e.Chess960InitialBlackKingPosition);
            if (e.V23s || g.isLegalMove(h))
                return ObjUtil.clone(h)
        }
        if (f.isShortCastling() && (h = g.isWTM() ? CB.V17g.g_mvW00 : CB.V17g.g_mvB00,
        e.Chess960CastlingFlags && (h = g.isWTM() ? new CB.V17g(e.Chess960InitialWhiteKingPosition,CB.Square.G1) : new CB.V17g(e.Chess960InitialBlackKingPosition,CB.Square.G8),
        h.Chess960ShortCastling = !0,
        h.Chess960CastlingFlags = e.Chess960CastlingFlags,
        h.Chess960InitialWhiteKingPosition = e.Chess960InitialWhiteKingPosition,
        h.Chess960InitialBlackKingPosition = e.Chess960InitialBlackKingPosition),
        e.V23s || g.isLegalMove(h)))
            return ObjUtil.clone(h);
        if (f.isNullMove())
            return new CB.V17g;
        var k = f.getTo()
          , l = f.getMoved()
          , m = g.getSideToMove()
          , n = f.getProm();
        l !== CB.Piece.PAWN && (n = CB.Piece.NONE);
        h = [];
        switch (l) {
        case CB.Piece.KNIGHT:
            g.getKnightAttacksTo(k, m, h);
            break;
        case CB.Piece.BISHOP:
            g.getBishopAttacksTo(k, m, h);
            break;
        case CB.Piece.ROOK:
            g.getRookAttacksTo(k, m, h);
            break;
        case CB.Piece.QUEEN:
            g.getQueenAttacksTo(k, m, h);
            break;
        case CB.Piece.KING:
            g.getKingAttacksTo(k, m, h);
            break;
        case CB.Piece.PAWN:
            f.isTake() ? (l = g.getPiece(k),
            l === CB.Piece.NONE && k === g.getEPField() && (l = g.getEPVictimField(),
            l = g.getPiece(l)),
            l !== CB.Piece.NONE && CB.Piece.side(l) !== m && g.getPawnAttacksTo(k, m, h)) : (l = g.getPiece(k),
            l === CB.Piece.NONE && g.getPawnMovesTo(k, m, h));
            break;
        default:
            return null
        }
        if (!h.length)
            return null;
        if (1 === h.length && e.V23s)
            return new CB.V17g(h[0],k,n);
        f = f.matchesFrom.bind(f);
        h = h.filter(f);
        if (!h.length)
            return null;
        if (1 === h.length && e.V23s)
            return new CB.V17g(h[0],k);
        f = h.map(function(p) {
            return new CB.V17g(p,k)
        });
        f = g.filterLegals(f);
        return f.length ? 1 === f.length ? f[0] : null : null
    }
    ;
    e.V23t = function(f) {
        for (var g = ["\r\n", "\n", "\r"], h = 0, k = g.length; h < k; ++h) {
            var l = g[h];
            if (0 <= f.indexOf(l))
                return l
        }
        return null
    }
    ;
    e.V23u = function(f) {
        f = f.replace(/\r\n/g, "\n");
        return f = f.replace(/\r/g, "\n")
    }
    ;
    e.V23v = function(f) {
        return 0 <= f.indexOf("\r\r") || 0 <= f.indexOf("\n\n")
    }
    ;
    e.Chess960CastlingFlags = null;
    e.Chess960InitialWhiteKingPosition = null;
    e.Chess960InitialBlackKingPosition = null;
    e.V23w = function(f) {
        var g = f.indexOf("[");
        -1 == g && (g = f.indexOf("1."));
        0 < g && (f = f.slice(g));
        g = [];
        var h = e.V23t(f);
        if (null == h)
            return [f];
        "\r\n" === h && e.V23v(f) && (f = e.V23u(f),
        h = "\n");
        var k = h + h + "[";
        h = 2 * h.length;
        for (var l = 0, m = f.indexOf(k, l); -1 != m && l < f.length; m = f.indexOf(k, l))
            l = f.substring(l, m),
            g.push(l),
            l = m + h;
        l < f.length && (f = f.substring(l),
        g.push(f));
        return g
    }
    ;
    var d = /\[(\w+)\s+"([\s\S]*?)"\]/g
      , c = /^\s*$/;
    e.V23x = function(f) {
        var g = e.V23t(f);
        g || (g = "\r\n");
        for (var h = new StringBuilder, k = d.lastIndex = 0, l; l = d.exec(f); ) {
            var m = l.index;
            k = f.substring(k, m);
            c.test(k) || (h.append(g),
            h.append(k.trim()),
            h.append(g),
            h.append(g));
            k = l[1];
            var n = l[2];
            n = n.replace(/\r/g, " ");
            n = n.replace(/\n/g, " ");
            h.appendFormat('[{0} "{1}"]', k, n);
            h.append(g);
            k = m + l[0].length
        }
        f = f.substring(k);
        c.test(f) || (h.append(g),
        h.append(f.trim()),
        h.append(g),
        h.append(g));
        return h.toString()
    }
    ;
    e.V23s = !0;
    e.V23r = function() {
        e.Chess960CastlingFlags = null;
        e.Chess960InitialWhiteKingPosition = null;
        e.Chess960InitialBlackKingPosition = null
    }
    ;
    e.V1f3 = function(f) {
        return f ? (e.V23r(),
        f = new CB.V225(f),
        (f = (new CB.V22v(f)).V22x()) ? e.toGame(f) : null) : new CB.Game
    }
    ;
    e.V23y = function(f) {
        return f ? (f = new CB.V225(f),
        (f = (new CB.V22v(f)).V230()) ? toGame(f) : null) : new CB.Game
    }
    ;
    e.V23z = function(f) {
        f = new CB.V225(f);
        var g = {};
        (new CB.V22v(f)).V22y(g);
        return g ? e.V23n(g) : null
    }
    ;
    e.V23q = function(f, g) {
        var h = ObjUtil.clone(f);
        f = new CB.V17l;
        for (var k = null, l = null, m = null, n = 0, p = g.length; n < p; ++n) {
            var q = g[n];
            if (!(q instanceof PGNMoveNum))
                if (q instanceof CB.V22c) {
                    q = e.toMove(q, h);
                    if (!q)
                        break;
                    k = h.makeMove(q);
                    l = q;
                    f.push(q);
                    m && (m.m_strComment && 0 == m.m_strComment.indexOf("[%") ? CB.V22v.V23l(l, m.getComment()) : l.setAnnoItem(CB.AnnoType.V19u, new CB.V19v(m.getComment())),
                    m = null)
                } else if (q instanceof PGNSubLine) {
                    if (l) {
                        h.unmakeMove(l, k);
                        q = e.V23q(h, q);
                        l.addLine(q);
                        var t = f.length - 1;
                        q.setParentLine(f);
                        q.setParentMoveIndex(t);
                        h.makeMove(l)
                    }
                } else
                    q instanceof CB.V22u ? l ? (q = q.getComment(),
                    CB.V22v.V23l(l, q)) : (m = q,
                    1 >= g.length && "[" != m.getComment()[0] && f.setAnnoItem(CB.AnnoType.V19u, new CB.V19v(m.getComment()))) : q instanceof PGNGlyph && l && ((t = l.getAnnoItem(CB.AnnoType.V1a1)) || (t = new CB.V1a2),
                    t.push(q.getGlyph()),
                    l.setAnnoItem(CB.AnnoType.V1a1, t))
        }
        for (g = 0; g < f.length - 1; g++)
            f[g].hasAnno() && f[g].getAnno().hasTraining() && (h = f[g].getAnno().getTraining(),
            k = f[g + 1],
            h.move = new CB.V17g(k.from,k.to,k.prom));
        return f
    }
    ;
    return e
}();
var PGN = CB.PGN;
function PGNCommand(e, b) {
    e || (e = "");
    b || (b = []);
    this.m_cmd = e;
    this.m_args = b
}
PGNCommand.prototype.init = function(e, b) {
    this.m_cmd = e;
    PGNCommand.initArgs(b, this.m_args)
}
;
PGNCommand.initArgs = function(e, b) {
    e = e.replace(/[\n]/g, " ");
    e = e.replace(/[\r]/g, "");
    var d = /(".*?")|([-\w\n]+),|([-:\w\n]+)$/g;
    d.lastIndex = 0;
    var c;
    do
        if (c = d.exec(e)) {
            var f = c[1] || c[2] || c[3];
            if (f)
                '"' === f[0] && (f = f.substring(1),
                '"' === f[f.length - 1] && (f = f.substring(0, f.length - 1))),
                b.push(f),
                d.lastIndex === c.index && ++d.lastIndex,
                c = 0 <= c.index;
            else
                break
        } else
            break;
    while (c)
}
;
PGNCommand.g_regexWhole = /\[%(\w+)((?:"[^"]*"|[^"\]]*)*)\]/;
PGNCommand.process = function(e, b) {
    for (; e; ) {
        var d = PGNCommand.g_regexWhole.exec(e);
        if (d) {
            var c = new PGNCommand
              , f = d[0];
            c.init(d[1], d[2]);
            b.push(c);
            e = e.substring(0, d.index) + e.substring(d.index + f.length)
        } else
            break
    }
    return e
}
;
"use strict";
CB.V240 = ObjUtil.copyTo(CB.V3ho, {
    strProm: "="
}, !0);
CB.V241 = function() {
    function e(h) {
        return h && "?" !== h
    }
    function b(h, k) {
        h.appendFormat("[%{0}", k);
        if (arguments.length - 2) {
            h.append(" ");
            for (var l = 2; l < arguments.length; ++l) {
                var m = arguments[l];
                2 < l && h.append(",");
                h.append(m)
            }
        }
        h.appendFormat("]")
    }
    function d(h, k, l) {
        for (var m = 0; m < k.length; ++m) {
            var n = k[m];
            if (n) {
                var p = n.getMoved();
                var q = h
                  , t = l
                  , v = 0 == m;
                if (n) {
                    var z = n.getAnno();
                    if (n.hasAnno()) {
                        var E = q
                          , C = z[CB.AnnoType.V19u];
                        C && (E.append("{"),
                        E.append(C.getString()),
                        E.append("} "))
                    }
                    E = n.getMoved();
                    if (v || CB.Piece.side(E) === CB.V15e.WHITE)
                        q.append(t),
                        q.append("."),
                        CB.Piece.side(E) === CB.V15e.BLACK && q.append(".."),
                        q.append(" ");
                    v = g.getMoveNota(n);
                    q.append(v);
                    q.append(" ");
                    if (n.hasAnno()) {
                        v = q;
                        if (E = z.getItem(CB.AnnoType.V1a1)) {
                            C = 0;
                            for (var F = E.length; C < F; ++C)
                                v.appendFormat("${0} ", E[C])
                        }
                        E = z.count();
                        z.hasItem(CB.AnnoType.V1a1) && --E;
                        z.hasItem(CB.AnnoType.V19u) && --E;
                        if (E) {
                            v.append("{");
                            if (C = z[CB.AnnoType.TIME]) {
                                E = v;
                                C = C.getTimeIn100th();
                                F = Math.floor(C / 36E4);
                                C -= 36E4 * F;
                                var P = Math.floor(C / 6E3);
                                b(E, "emt", String.formatEx("{0}:{1}:{2}", F, P, Math.round((C - 6E3 * P) / 100, 1)))
                            }
                            (z = z[CB.AnnoType.V19w]) && v.append(z.getString());
                            v.append("} ")
                        }
                    }
                    if (n.hasLines())
                        for (v = 0; v < n.getSubLinesCount(); ++v)
                            q.append("("),
                            z = n.getLine(v),
                            d(q, z, t),
                            q.append(")")
                }
                CB.Piece.side(p) === CB.V15e.BLACK && ++l
            } else
                break
        }
    }
    function c(h, k, l) {
        h.appendFormat('[{0} "{1}"]', k, l);
        h.append("\r\n")
    }
    var f = {}
      , g = new CB.V1cw(CB.V240);
    f.V242 = function(h) {
        var k = new StringBuilder
          , l = h.getHeader();
        c(k, "Event", l.getEvent());
        c(k, "White", l.getWhite());
        c(k, "Black", l.getBlack());
        c(k, "Site", l.getSite());
        c(k, "Round", l.getRoundStr());
        c(k, "Annotator", l.getAnnotator());
        c(k, "Result", l.getCBResult().toPGNString());
        e(l.variant) && c(k, "Variant", l.variant);
        c(k, "Date", l.getDateStr());
        l.getEloWhite() && c(k, "WhiteElo", l.getEloWhite());
        l.getEloBlack() && c(k, "BlackElo", l.getEloBlack());
        c(k, "PlyCount", h.getMainLine().length);
        if (!h.isNormalInit()) {
            c(k, "Setup", 1);
            var m = h.getStartPos().toFEN();
            if (e(l.variant) && "chess960" == l.variant.toLowerCase()) {
                m = m.split(" ");
                var n = m[0]
                  , p = n.substring(n.length - 8);
                n = p.indexOf("R");
                p = p.indexOf("R", n + 1);
                n = String.fromCharCode(n % 8 + 65);
                p = String.fromCharCode(p % 8 + 65);
                n = p + n + p.toLowerCase() + n.toLowerCase();
                m = m[0] + " " + m[1] + " " + n + " " + m[3] + " " + m[4] + " " + m[5]
            }
            c(k, "FEN", m)
        }
        if (l = l.getClockParams())
            m = l.getStartSecs().toString(),
            l.incSecs && (m += "+" + l.incSecs),
            c(k, "TimeControl", m);
        k.append("\r\n");
        l = 1;
        h.isNormalInit() || (l = h.getStartPos().getMoveNum());
        d(k, h.getMainLine(), l);
        k.append(h.hdr.getCBResult().toPGNString());
        k.append("\r\n");
        k.append("\r\n");
        return k.toString()
    }
    ;
    f.V243 = function(h) {
        return h.map(f.V242).join("\n")
    }
    ;
    f.V244 = function(h) {
        h = this.V242(h);
        for (var k = ['Site "?"', 'Round "?"', 'Date "????.??.??"', 'Result "*"'], l = 0; l < k.length; l++)
            h = h.replace("/[" + k[l] + "/]/ig", "");
        h = encodeURI(h);
        h = h.replace(/\.%20/ig, ".");
        h = h.replace(/%0D%0A/ig, "%20");
        h = h.replace(/%20%20/ig, "%20");
        return h = h.replace(/%20%20/ig, "%20")
    }
    ;
    f.toFEN = function(h) {
        var k = new StringBuilder;
        h = h.getCurPos().toFEN();
        k.append(h);
        return k.toString()
    }
    ;
    return f
}();
"use strict";
CB.V245 = function() {
    var e = function() {
        this.nGames = 0;
        this.games = [];
        this.headers = [];
        this.V246 = 0;
        this.V247(0);
        this.V248(200);
        this.V249 = ""
    };
    e.prototype.V24a = function(b) {}
    ;
    e.prototype.incUsers = function() {
        this.V246++
    }
    ;
    e.prototype.decUsers = function() {
        this.V246--
    }
    ;
    e.prototype.getNUsers = function() {
        return this.V246
    }
    ;
    e.prototype.V24b = function() {}
    ;
    e.prototype.V24c = function() {
        this.V24d && this.V24d.V24c(this)
    }
    ;
    e.prototype.V24e = function() {
        this.V24d && this.V24d.V24e(this)
    }
    ;
    e.prototype.V24f = function(b, d) {
        alert("not implemented")
    }
    ;
    e.prototype.V24g = function() {
        return !0
    }
    ;
    e.prototype.V24h = function() {
        return !1
    }
    ;
    e.prototype.V24i = function() {
        return !1
    }
    ;
    e.prototype.getGameCount = function() {
        return this.nGames
    }
    ;
    e.prototype.V24j = function() {
        return "Database"
    }
    ;
    e.prototype.V24k = function() {
        return this.V24g()
    }
    ;
    e.prototype.V24l = function(b) {
        return {
            gameNo: b,
            white: "Not available",
            black: "",
            event: "",
            date: new CB.Date(0),
            result: "",
            eco: ""
        }
    }
    ;
    e.prototype.V24m = function(b, d, c) {
        for (var f = []; d <= c && d <= this.getGameCount(); d++) {
            var g = this.V24l(d);
            f.push(g)
        }
        (new Ext.util.DelayedTask).delay(100, function() {
            b(f)
        })
    }
    ;
    e.prototype.getGame = function(b) {
        return new CB.Game
    }
    ;
    e.prototype.loadGameAsync = function(b, d) {
        var c = this.getGame(d);
        (new CB.Timer(function() {
            b(c)
        }
        )).runOnce(10)
    }
    ;
    e.prototype.V24n = function(b) {}
    ;
    e.prototype.V24o = function(b) {}
    ;
    e.prototype.V24p = function() {}
    ;
    e.prototype.setSubSet = function(b) {
        this.V24q = b
    }
    ;
    e.prototype.V24r = function() {
        delete this.V24q
    }
    ;
    e.prototype.V24s = function() {
        return this.V24q ? this.V24q.length : this.getGameCount()
    }
    ;
    e.prototype.getGameNoInSet = function(b) {
        return this.V24q && b <= this.V24q.length && 0 < b ? this.V24q[b - 1] : b
    }
    ;
    e.prototype.getSetInxOfGameNo = function(b) {
        if (this.V24q)
            for (var d = 0; d < this.V24q.length; d++) {
                if (this.V24q[d] == b)
                    return d + 1
            }
        else
            return b
    }
    ;
    e.prototype.V24t = function(b) {
        this.headers.filter(function(d) {
            return void 0 !== d
        }).length != this.nGames && this.V24d ? this.V24d && this.V24d.V24v(this.V24b(), b) : this.V24u(b)
    }
    ;
    e.prototype.clearFilter = function() {
        this.V24r()
    }
    ;
    e.prototype.V24u = function(b) {
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.V24w("Searching locally ... ", null, 2E4);
        b = new RegExp(b,"i");
        for (var d = [], c = 1; c < this.headers.length; c++)
            this.headers[c].matchesFilterVal(b) && d.push(this.headers[c].nGame);
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.Vch();
        this.setSubSet(d)
    }
    ;
    e.prototype.V24x = function(b, d) {}
    ;
    e.prototype.V24y = function() {
        return this.pageSize
    }
    ;
    e.prototype.V248 = function(b) {
        1 > b && (b = 1);
        this.pageSize = b
    }
    ;
    e.prototype.V24z = function() {
        return this.V250
    }
    ;
    e.prototype.V247 = function(b) {
        0 > b && (b = 0);
        this.V250 = b
    }
    ;
    e.prototype.V251 = function() {
        var b = this.V24z() + this.V24y();
        b > this.V24s() && (b = this.V24s());
        return b
    }
    ;
    e.prototype.V252 = function() {
        for (var b = [], d = this.V24z(); d < this.V251(); d++)
            if (this.V24q) {
                if (this.V24q[d] <= this.getGameCount()) {
                    var c = this.V24l(this.V24q[d]);
                    b.push(c)
                }
            } else
                c = this.V24l(d + 1),
                b.push(c);
        return b
    }
    ;
    return e
}();
"use strict";
CB.V253 = function() {
    var e = function(b, d) {
        this.pgn = "";
        this.V254 = [];
        this.headers = [];
        this.games = [];
        this.V255 = !1;
        this.V256 = d;
        "string" == typeof b ? this.V257(b) : (this.V258(b),
        this.V1bv = b.name)
    };
    CB.inherit(e, CB.V245);
    e.prototype.getGameCount = function() {
        return this.V254.length
    }
    ;
    e.prototype.V24j = function() {
        return this.V1bv
    }
    ;
    e.prototype.V24b = function() {
        return function(b) {
            for (var d = [], c = 0; c < b.length; c++) {
                var f = this.getGame(b[c]);
                d.push(f)
            }
            return d
        }
        .bind(this)
    }
    ;
    e.prototype.V24l = function(b) {
        if (0 >= b)
            return null;
        void 0 === this.headers[b] && b < this.V254.length + 1 && (this.headers[b] = PGN.V23z(this.V254[b - 1]));
        var d = this.headers[b];
        return d ? (d.nGame = b,
        d.toJson()) : this.superClass.V24l(b)
    }
    ;
    e.prototype.V24m = function(b, d, c) {
        if (this.V255)
            this.V259(b, d, c);
        else {
            var f = this.V256;
            this.V256 = function() {
                f && f(this);
                this.V259(b, d, c)
            }
            .bind(this)
        }
    }
    ;
    e.prototype.V259 = function(b, d, c) {
        for (var f = []; d <= c && d <= this.getGameCount(); d++) {
            var g = this.V24l(d);
            f.push(g)
        }
        (new Ext.util.DelayedTask).delay(100, function() {
            b(f)
        })
    }
    ;
    e.prototype.getGame = function(b) {
        return b ? PGN.V1f3(this.V254[b - 1]) : new CB.Game
    }
    ;
    e.prototype.V24f = function(b, d) {
        alert("Sorry, you cannot save into a PGN database.")
    }
    ;
    e.prototype.toString = function() {
        for (var b = "", d = 1; d <= this.getGameCount(); d++) {
            var c = this.getGame(d);
            c = CB.V241.V242(c);
            b += c
        }
        return b
    }
    ;
    e.prototype.V257 = function(b) {
        this.V254 = PGN.V23w(b);
        void 0 !== this.V256 && this.V256(this);
        this.V255 = !0
    }
    ;
    e.prototype.V258 = function(b) {
        if ("function" == typeof FileReader) {
            var d = new FileReader;
            d.onloadend = function() {
                this.V25a(d)
            }
            .bind(this);
            d.onerror = function() {
                this.V25b(d)
            }
            .bind(this);
            d.onprogress = function() {}
            .bind(this);
            d.onload = function() {}
            .bind(this);
            d.readAsText(b)
        }
    }
    ;
    e.prototype.V25a = function(b) {
        b.result && (this.V254 = PGN.V23w(b.result),
        void 0 !== this.V256 && this.V256(this));
        this.V255 = !0
    }
    ;
    e.prototype.V25b = function(b) {
        alert("Could not load file, sorry");
        this.V255 = !0
    }
    ;
    e.prototype.V25c = function(b) {
        this.headers[b] || (this.headers[b] = PGN.V23z(this.V254[b - 1]),
        this.headers[b].nGame = b)
    }
    ;
    e.prototype.V24u = function(b) {
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.V24w("Searching locally ... ", null, 2E4);
        b = new RegExp(b,"i");
        for (var d = [], c = 1; c <= this.getGameCount(); c++)
            this.V25c(c),
            this.headers[c].matchesFilterVal(b) && d.push(this.headers[c].nGame);
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.Vch();
        this.setSubSet(d)
    }
    ;
    e.prototype.V24x = function(b, d) {
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.V24w("Sorting ... ", null, 2E4);
        for (var c = [], f = 0; f < this.V24s(); f++) {
            var g = this.V24q ? this.V24q[f] : f + 1;
            this.V25c(g);
            c[f] = this.headers[g]
        }
        (function(h, k, l) {
            h = h.sort(function(m, n) {
                return l ? m[k] > n[k] ? 1 : m[k] < n[k] ? -1 : 0 : n[k] > m[k] ? 1 : n[k] < m[k] ? -1 : 0
            })
        }
        )(c, b, d);
        b = [];
        for (f = 0; f < c.length; f++)
            b.push(c[f].nGame);
        this.setSubSet(b);
        V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.Vch()
    }
    ;
    return e
}();
"use strict";
CB.V25d = function() {
    var e = function(b, d, c) {
        this.cloudId = b;
        this.V24d = this.V25e = c;
        this.nGames = d;
        this.V25f();
        this.idHeaderListener = this.V25e.addOnHeadersChangedListener(this.V25g.bind(this));
        this.V25h = this.V25e.addOnGameChangedListener(this.V25i.bind(this));
        this.V25j = this.V25e.addOnGamesChangedByGameNoListener(this.V25k.bind(this));
        this.V25l = this.V25e.addOnHeadersChangedByGameNoListener(this.V25k.bind(this));
        this.V25m = this.V25e.addOnGameAppendedListener(this.V25n.bind(this));
        this.V25o = this.V25e.addOnChangeLoginListener(this.Vb9.bind(this));
        this.V25p = this.V25e.addOnReorganizedListener(this.V25q.bind(this));
        this.V25r = this.V25e.addOnDeletedListener(this.V25s.bind(this));
        this.V25t = this.V25e.V25u(this.cloudId)
    };
    CB.inherit(e, CB.V245);
    e.prototype.destroy = function() {
        this.V25e.removeOnHeadersChangedListener(this.idHeaderListener);
        this.V25e.removeOnGameChangedListener(this.V25h);
        this.V25e.removeOnGamesChangedByGameNoListener(this.V25j);
        this.V25e.removeOnHeadersChangedByGameNoListener(this.V25l);
        this.V25e.removeOnGameAppendedListener(this.V25m);
        this.V25e.removeOnChangeLoginListener(this.V25o);
        this.V25e.removeOnReorganizedListener(this.V25p);
        this.V25e.removeOnDeletedListener(this.V25r);
        this.V25v = []
    }
    ;
    e.prototype.toString = function() {
        return this.V25t.title + "/" + this.cloudId
    }
    ;
    e.prototype.V24g = function() {
        return !1
    }
    ;
    e.prototype.V24h = function() {
        return !0
    }
    ;
    e.prototype.V24i = function() {
        return this.V25t && this.V25t.type == CB.V25w.V25x
    }
    ;
    e.prototype.V24a = function(b) {
        void 0 === b.idHeaderListener && (b.idHeaderListener = this.addOnGameHeadersChangedListener(b.onGameHeadersChanged.bind(b)));
        void 0 === b.idDBLengthListener && (b.idDBLengthListener = this.addOnDBLengthListener(b.onDBLengthListener.bind(b)));
        void 0 === b.idDBDeletedListener && (b.idDBDeletedListener = this.addOnDBDeletedListener(b.onDBDeletedListener.bind(b)));
        b.removeListeners = function() {
            this.removeOnGameHeadersChangedListener(b.idHeaderListener);
            this.removeOnDBLengthListener(b.idDBLengthListener);
            this.removeOnDBDeletedListener(b.idDBDeletedListener);
            delete b.idHeaderListener;
            delete b.idDBLengthListener;
            delete b.idDBDeletedListener
        }
        .bind(this)
    }
    ;
    e.prototype.V25f = function() {
        this.headers = [];
        this.V25v = [];
        this.V25y = [];
        this.V25z = []
    }
    ;
    e.prototype.getGameCount = function() {
        return this.nGames
    }
    ;
    e.prototype.setSubSet = function(b) {
        this.superClass.setSubSet.call(this, b);
        this.fireOnDBLength(this.V24s())
    }
    ;
    e.prototype.V24r = function() {
        this.superClass.V24r.call(this, arguments);
        this.fireOnDBLength(this.getGameCount())
    }
    ;
    e.prototype.V24b = function() {
        return this.cloudId
    }
    ;
    e.prototype.V24j = function() {
        return "Cloud: " + CB.V1b.V1d(this.V25t.owner + " - " + this.V25t.title)
    }
    ;
    e.prototype.V24l = function(b) {
        if (1 > b || b > this.nGames)
            ASSERT(0);
        else {
            if (void 0 === this.headers[b]) {
                this.V25v[b] || (this.V25v[b] = 1,
                this.V25e.V260(this.cloudId, b));
                var d = new CB.V1a9;
                this.fillPlaceHolderHeader(d, b);
                d.nGame = b;
                this.headers[b] = d;
                void 0 === this.headers[b].loadCnt ? this.headers[b].loadCnt = 0 : this.headers[b].loadCnt++
            } else
                d = this.headers[b];
            return d.toJson()
        }
    }
    ;
    e.prototype.V24m = function(b, d, c) {
        c > this.V24s() && (c = this.V24s());
        if (!this.V261(d, c)) {
            var f = this;
            b = {
                first: d,
                last: c,
                jsons: [],
                callback: b,
                count: 0,
                calls: 1,
                complete: function() {
                    return this.count == this.last - this.first + 1
                },
                addHeader: function(h) {
                    var k = f.getSetInxOfGameNo(h.nGame);
                    k >= this.first && k <= this.last && !this.jsons[k - this.first] && (this.jsons[k - this.first] = h.toJson(),
                    this.count++)
                },
                timeOut: function() {
                    for (var h = 0; h < this.last - this.first + 1; h++)
                        if (!this.jsons[h]) {
                            var k = new CB.V1a9;
                            f.fillPlaceHolderHeader(k, f.getGameNoInSet(h + 1));
                            this.jsons[h] = k.toJson()
                        }
                    try {
                        for (h = 0; h < this.calls; h++)
                            this.callback(this.jsons)
                    } catch (l) {}
                    this.timeout = !0
                }
            };
            this.V25y.push(b);
            b.timer = new CB.Timer(b.timeOut.bind(b));
            for (c < d ? b.timer.runOnce(100) : b.timer.runOnce(1E4); d <= c && d <= this.V24s(); d++)
                if (b = this.getGameNoInSet(d)) {
                    if (!this.V25v[b] && (this.V25v[b] = 1,
                    this.V25e.V260(this.cloudId, b),
                    void 0 === this.headers[b])) {
                        var g = new CB.V1a9;
                        this.fillPlaceHolderHeader(g);
                        g.nGame = b;
                        this.headers[b] = g
                    }
                    this.headers[b].loadCnt = 0
                }
        }
    }
    ;
    e.prototype.V261 = function(b, d) {
        for (var c = 0; c < this.V25y.length; c++) {
            var f = this.V25y[c];
            if (f && f.first <= b && f.last >= d && !f.timeout)
                return this.V25y[c].calls++,
                !0
        }
        return !1
    }
    ;
    e.prototype.V25g = function(b) {
        for (var d = 0; d < b.length; d++)
            b[d].header.loadCnt = void 0 !== this.headers[b[d].nGame] ? ++this.headers[b[d].nGame].loadCnt : 0,
            this.headers[b[d].nGame] = b[d].header,
            this.V25v[b[d].nGame] = 0;
        for (var c = 0; c < this.V25y.length; c++)
            if (this.V25y[c])
                for (d = 0; d < b.length; d++)
                    this.V25y[c].addHeader(b[d].header);
        for (c = 0; c < this.V25y.length; c++)
            if (this.V25y[c] && this.V25y[c].complete()) {
                d = this.V25y[c];
                this.V25y[c].timer.stop();
                try {
                    for (var f = 0; f < d.calls; f++)
                        this.V25y[c].callback(this.V25y[c].jsons)
                } catch (g) {}
                delete this.V25y[c]
            }
        d = !1;
        for (c = 0; d && c < this.V25y.length; c++)
            this.V25y[c] && this.V25y[c].timeout && (d = !1);
        d && (this.V25y = []);
        this.fireOnGameHeadersChanged(b)
    }
    ;
    e.prototype.fillPlaceHolderHeader = function(b, d) {
        b.white = new CB.PlayerData("Waiting for Server...");
        b.loadCnt = 0;
        b.nGame = d
    }
    ;
    e.prototype.getGame = function(b) {
        return new CB.Game
    }
    ;
    e.prototype.loadGameAsync = function(b, d) {
        if (!(d > this.getGameCount())) {
            var c = this;
            b = {
                gameNo: d,
                game: new CB.Game,
                callback: b,
                loaded: !1,
                setGame: function(f) {
                    f.getGameNo() == d && (this.game = f,
                    this.loaded = !0)
                },
                timeOut: function() {
                    for (var f = 0; f < this.last - this.first + 1; f++)
                        if (!this.jsons[f]) {
                            var g = new CB.V1a9;
                            c.fillPlaceHolderHeader(g);
                            this.game.setHeader(g);
                            this.loaded = !0
                        }
                    this.callback(this.game);
                    this.timeout = !0
                }
            };
            b.timer = new CB.Timer(b.timeOut.bind(b));
            b.timer.runOnce(1E4);
            this.V25z.push(b);
            this.V25e.loadGame(this.cloudId, d)
        }
    }
    ;
    e.prototype.V25i = function(b) {
        if (b.cloudId == this.cloudId) {
            for (var d = 0; d < this.V25z.length; d++)
                this.V25z[d] && this.V25z[d].setGame(b.game);
            for (d = 0; d < this.V25z.length; d++)
                this.V25z[d] && this.V25z[d].loaded && (this.V25z[d].timer.stop(),
                this.V25z[d].callback(this.V25z[d].game),
                delete this.V25z[d]);
            this.V154(this.V25z)
        }
    }
    ;
    e.prototype.V25k = function(b) {
        if (b.cloudId == this.cloudId) {
            for (var d = this.nGames, c = 0; c < b.gameNos.length; c++)
                b.gameNos[c] > this.nGames && (this.nGames = b.gameNos[c]);
            this.nGames > d && this.V24r();
            for (c = 0; c < b.gameNos.length; c++)
                b.gameNos[c] <= this.nGames && this.V25e.V260(this.cloudId, b.gameNos[c])
        }
    }
    ;
    e.prototype.V25n = function(b) {
        b.cloudId == this.cloudId && (this.nGames++,
        this.V25v = [],
        this.V24r())
    }
    ;
    e.prototype.Vb9 = function() {
        this.fireOnDBDeleted()
    }
    ;
    e.prototype.V25q = function(b) {
        b.cloudId == this.cloudId && (this.nGames = b.nNewLen,
        this.V25v = [],
        0 < this.V249.length && this.V24t(this.V249),
        this.fireOnDBLength(this.nGames))
    }
    ;
    e.prototype.V25s = function(b) {
        b.cloudId == this.cloudId && this.fireOnDBDeleted()
    }
    ;
    e.prototype.V24n = function(b) {
        if (this.headers[b]) {
            var d = !this.headers[b].deleted;
            this.headers[b].setDeleted(d);
            void 0 === this.headers[b].loadCnt ? this.headers[b].loadCnt = 0 : this.headers[b].loadCnt++;
            var c = new CB.Server.V262(this.cloudId,b,0,this.headers[b]);
            this.fireOnGameHeadersChanged([c]);
            this.V25e.V263(this.cloudId, [b], [d])
        }
    }
    ;
    e.prototype.V24o = function(b) {
        for (var d = [], c = [], f = 0; f < b.length; f++) {
            var g = b[f];
            if (this.headers[g]) {
                var h = !this.headers[g].deleted;
                this.headers[g].setDeleted(h);
                void 0 === this.headers[g].loadCnt ? this.headers[g].loadCnt = 0 : this.headers[g].loadCnt++;
                var k = new CB.Server.V262(this.cloudId,g,0,this.headers[g]);
                this.fireOnGameHeadersChanged([k]);
                d.push(g);
                c.push(h)
            }
        }
        this.V25e.V263(this.cloudId, d, c)
    }
    ;
    e.prototype.V24p = function() {
        this.V25f();
        this.V25e.V264(this.cloudId)
    }
    ;
    e.prototype.V154 = function(b) {
        for (var d = !0, c = 0; d && c < b.length; c++)
            b[c] && b[c].timeout && (d = !1)
    }
    ;
    e.prototype.V24f = function(b, d) {
        "number" == typeof b ? this.V25e.V265(b, this.cloudId, d) : "function" == typeof b && (b = b(d),
        this.V25e.V266(this.cloudId, b))
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "GameHeadersChanged");
    V3i1.addEvent(e, "DBLength");
    V3i1.addEvent(e, "DBDeleted");
    return e
}();
CB.V267 = function() {
    var e = function() {};
    e.prototype.V268 = [1, 6, 6, 5, 5, 5, 3, 1, 1, 6, 6, 5, 5, 5, 3, 1];
    e.prototype.V269 = [0, 32, 34, 18, 20, 22, 6, 0, 0, 33, 35, 19, 21, 23, 7, 0];
    e.prototype.V26a = [0, 255, 255, 255, 255, 255, 6, 14, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 3, 11, 4, 12, 5, 13, 255, 255, 255, 255, 255, 255, 255, 255, 1, 9, 2, 10, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255];
    e.prototype.V26b = 128;
    e.prototype.V26c = 64;
    e.prototype.V26d = 32;
    e.prototype.V26e = function(b, d, c) {
        var f, g = 0;
        d[g] = 0;
        g++;
        d[g] = 0;
        b.getBTM() && (d[g] = 128);
        var h = 0;
        var k = 1;
        for (f = 2; 64 > h; h++) {
            var l = b.board[h] & 15;
            k += this.V268[l];
            if (8 < k) {
                d[g] |= this.V269[l] >> k - 8;
                if (++f > c)
                    return 1;
                g++;
                d[g] = 0;
                k -= 8
            }
            d[g] |= this.V269[l] << 8 - k;
            if (8 <= k) {
                k = 0;
                if (++f > c)
                    return 1;
                g++;
                d[g] = 0
            }
        }
        l = h = 0;
        0 < b.getCastleRights() && (l |= this.V26c,
        h += 4);
        0 < b.getCPPEPFile() && (l |= this.V26d,
        h += 3);
        if (0 < h) {
            if (8 < k + h) {
                if (++f > c)
                    return 1;
                g++;
                d[g] = 0
            }
            0 < b.getCastleRights() ? (d[g] |= b.getCastleRights() & 15,
            0 < b.getCPPEPFile() && (d[g] |= (b.getCPPEPFile() - 1 & 7) << 4)) : 0 < b.getCPPEPFile() && (d[g] |= b.getCPPEPFile() - 1 & 7)
        } else
            0 == k && --f;
        d[0] = f | l;
        for (b = 0; b <= g; b++)
            d[b] &= 255;
        return 0
    }
    ;
    e.prototype.V26f = function(b, d, c) {
        var f, g = 0, h;
        b.ep = CB.Position.NOEP;
        for (f = 0; 64 > f; f++)
            b.board[f] = 0;
        f = d[g] & (this.V26b | this.V26c | this.V26d);
        var k = d[g] & 31;
        if (8 < k && k < c) {
            0 < (f & this.V26c) ? (b.setCastleRights(d[k - 1] & 15),
            b.ep = 0 < (f & this.V26d) ? d[k - 1] >> 4 & 7 : CB.Position.NOEP) : (b.setCastleRights(CB.V15t.NONE),
            b.ep = 0 < (f & this.V26d) ? d[k - 1] & 7 : CB.Position.NOEP);
            g++;
            0 < (d[g] & 128) ? b.setBTM(!0) : b.setBTM(!1);
            f = 0;
            c = 1;
            for (h = 64; 64 > f && c < k; f++) {
                var l = 0
                  , m = 0;
                do
                    l <<= 1,
                    0 < (d[g] & h) && (l |= 1),
                    m++,
                    h >>= 1,
                    0 == h && (h = 128,
                    g++,
                    c++);
                while (255 == this.V26a[l] && 6 > m);
                if (255 == this.V26a[l])
                    break;
                b.board[f] = this.V26a[l]
            }
            if (64 > f)
                return b.initStartPos(),
                1
        } else
            return b.initStartPos(),
            1;
        return 0
    }
    ;
    return e
}();
"use strict";
CB.V25w = {
    NONE: 0,
    V26g: 1,
    V26h: 2,
    V26i: 3,
    V26j: 4,
    V26k: 5,
    V26l: 6,
    V26m: 7,
    V26n: 8,
    V25x: 9
};
CB.V26o = function() {
    var e = function() {
        this.V26p.V26q = this.V26p.CLOUDDBITEM_MAY_VIEW | this.V26p.CLOUDDBITEM_MAY_LOAD | this.V26p.CLOUDDBITEM_MAY_SAVE | this.V26p.CLOUDDBITEM_MAY_ADMIN | this.V26p.CLOUDDBITEM_OWNER
    };
    e.prototype.V26p = {
        CLOUDDBITEM_SHARED: 1,
        CLOUDDBITEM_MAY_VIEW: 131072,
        CLOUDDBITEM_MAY_LOAD: 262144,
        CLOUDDBITEM_MAY_SAVE: 524288,
        CLOUDDBITEM_MAY_ADMIN: 1048576,
        CLOUDDBITEM_OWNER: 2097152
    };
    e.prototype.fromDataBuf = function(b) {
        b.beginSizedRead();
        this.name = b.V3ht(100);
        this.title = b.V3ht(200);
        this.owner = b.V3ht(100);
        this.nGames = b.V3im();
        this.V26r = b.V3ie();
        this.V26s = b.V3im();
        this.cloudId = b.readUint64();
        this.V26t = b.V3ik();
        this.V26u = b.V3ie();
        this.flags = b.V3im();
        this.type = b.V3im();
        b.endSizedRead()
    }
    ;
    e.prototype.toString = function() {
        return this.name + ", " + this.title + ", " + this.owner + ", nGames=" + this.nGames + ", type=" + this.type
    }
    ;
    e.V26v = -1;
    e.V26w = -2;
    e.V26x = -3;
    e.V26y = 0;
    e.V26z = 8;
    return e
}();
CB.V270 = function() {
    var e = function() {
        this.items = []
    };
    e.prototype.size = function() {
        return this.items.length
    }
    ;
    e.prototype.fromDataBuf = function(b) {
        this.items = [];
        for (var d = b.V3ii(), c = 0; c < d && 200 > c; c++) {
            var f = new CB.V26o;
            f.fromDataBuf(b);
            this.items.push(f)
        }
    }
    ;
    e.prototype.getById = function(b) {
        for (var d = 0; d < this.items.length; d++)
            if (this.items[d].cloudId == b)
                return this.items[d]
    }
    ;
    e.prototype.V271 = function(b) {
        for (var d = 0; d < this.items.length; d++)
            if (this.items[d].type == b)
                return this.items[d].cloudId;
        return 0
    }
    ;
    e.prototype.V10c = function(b) {
        for (var d = 0; d < this.items.length; d++)
            if (this.items[d].cloudId == b) {
                this.items.splice(d, 1);
                break
            }
    }
    ;
    e.prototype.V272 = function(b) {
        for (var d = 0; d < this.items.length; d++)
            if (this.items[d].name.toLowerCase() == b.toLowerCase())
                return !0;
        return !1
    }
    ;
    return e
}();
CB.V273 = function() {
    var e = function(b) {
        this.game = b;
        this.time = new DateAndTime(0)
    };
    e.prototype.V3il = function(b) {
        this.game.hdr.compactToDataBuf(b);
        b.V3ij(0);
        this.game.writeGameOnly2(b);
        this.time.V3il(b)
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.Server.V274");
CB.Server.V274 = function() {
    var e = function(b, d, c) {
        this.cloudId = b;
        this.nGame = d;
        this.dateAndTime = c
    };
    e.prototype.fromDataBuf = function(b) {
        b.beginSizedRead();
        this.cloudId = b.V3ii();
        b.V3ii();
        this.nGame = b.V3im();
        this.dateAndTime = new DateAndTime;
        this.dateAndTime.fromDataBuf(b);
        b.endSizedRead()
    }
    ;
    e.prototype.V3il = function(b) {
        b.beginSizedWrite();
        b.V3i3(this.cloudId);
        b.V3i3(0);
        b.V3ij(this.nGame);
        void 0 === this.dateAndTime && (this.dateAndTime = new DateAndTime(0));
        this.dateAndTime.V3il(b);
        b.endSizedWrite()
    }
    ;
    e.prototype.setEquals = function(b) {
        return this.cloudId == b.cloudId && this.nGame == b.nGame && this.dateAndTime == b.dateAndTime
    }
    ;
    e.prototype.setGreater = function(b) {
        return this.cloudId == b.cloudId ? this.nGame == b.nGame ? this.dateAndTime > b.dateAndTime : this.nGame > b.nGame : this.cloudId > b.cloudId
    }
    ;
    return e
}();
CB.Server.V275 = {
    V276: 0,
    V277: 1,
    V278: 2,
    V279: 3
};
CB.Server.V262 = function() {
    var e = function(b, d, c, f) {
        this.cloudId = b;
        this.nGame = d;
        this.eType = c;
        this.header = f
    };
    e.prototype.fromDataBuf = function(b) {
        b.beginSizedRead();
        this.cloudId = b.V3im();
        this.nGame = b.V3im();
        this.eType = b.V3im();
        switch (this.eType) {
        case CB.Server.V275.V276:
            this.header = new CB.V1a9,
            this.header.V1aq(b),
            (new DateAndTime).fromDataBuf(b)
        }
        b.endSizedRead()
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.Server.CloudManager");
CB.V27a = {
    NONE: 0,
    V27b: 1600,
    V27c: 1601,
    V27d: 1602,
    V27e: 1603,
    V27f: 1604,
    V27g: 1605,
    V27h: 1606,
    V27i: 1607,
    V27j: 1608,
    V27k: 1609,
    V27l: 1610,
    V27m: 1611,
    V27n: 1612,
    V27o: 1613,
    V27p: 1614,
    V27q: 1615,
    V27r: 1616,
    V27s: 1617,
    V27t: 1618,
    V27u: 1619,
    V27v: 1620,
    V27w: 1621,
    V27x: 1622,
    V27y: 1623,
    V27z: 1624,
    V280: 1625,
    V281: 1626,
    V282: 1627,
    V283: 1628,
    V284: 1629,
    V285: 1630,
    V286: 1631,
    V287: 1632,
    V288: 1633,
    V289: 1634,
    V28a: 1635,
    V28b: 1636,
    V28c: 1637,
    V28d: 1638,
    V28e: 1639,
    UPLOAD_GAME: 1640,
    V28f: 1641,
    V28g: 1642,
    V28h: 1643,
    V28i: 1644,
    V28j: 1645,
    V28k: 1647,
    V28l: 1648,
    Vgp: 1649,
    V28m: 1650,
    V28n: 1656,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return b;
        return "Unknown CloudUserMsgId: " + e
    },
    toNumString: function(e) {
        return "CloudId=" + e
    }
};
CB.V28o = {
    V28p: 1,
    V28q: 2,
    V28r: 4,
    V28s: 8,
    V28t: 16,
    V28u: 32,
    V28v: 64,
    V28w: 128,
    V28x: 256,
    WHITE: 6,
    BLACK: 9,
    MOVE: 12,
    V1vp: 3
};
CB.Server.CloudManager = function() {
    var e = function() {
        this.V28y = new CB.Set;
        this.V28z = new CB.Timer;
        this.V290 = 0;
        this.V291 = {};
        this.V292 = new CB.V1x(function(d) {
            this.send(d)
        }
        .bind(this));
        this.V293 = new CB.V1x(function(d) {
            this.send(d)
        }
        .bind(this));
        this.V294 = !1;
        this.V296 = this.myMovesLoadMode = CB.V295.NONE;
        this.name = "cloud"
    };
    CB.inherit(e, CB.Server.Vam);
    e.prototype.createLobby = function(d, c, f, g, h) {
        this.create(d, c, f, g, h)
    }
    ;
    e.prototype.getName = function() {
        return "CloudMgr"
    }
    ;
    e.prototype.Vb9 = function() {
        this.fireOnChangeLogin();
        this.V297();
        V3ir.setLoggedIn(this.isLoggedIn())
    }
    ;
    e.prototype.Vcf = function() {
        this.Vbd("Connected to CloudServer", "", "conn");
        this.Vb3 = !0;
        V3ir.shouldRequestCloudDBsOnLogin() ? this.requestDatabases() : CB.Vcg && CB.Vcg.Vch();
        this.loginMode != CB.LoginMode.GUEST && (V3ir.setLoggedIn(!0),
        V3ir.config.silentCloud || V3ir.panelMgr.showMessage(String.formatEx(lm.LOGIN_WELCOME, this.user), 2E3));
        V3ir.showAccountType(this.V3i7);
        V3ir.panelMgr.study && 0 == V3ir.panelMgr.savedStudyToCloud && (V3ir.panelMgr.gameKernel.V3i6.saveToCloud(V3ir.panelMgr.study),
        V3ir.panelMgr.savedStudyToCloud = !0)
    }
    ;
    e.prototype.Vc4 = function() {
        !V3ir.config.silentCloud && CB.Vcg && CB.Vcg.V24w("Requesting databases ... ", null, 5E3)
    }
    ;
    e.prototype.onLogOff = function() {
        this.superClass.onLogOff.apply(this, arguments)
    }
    ;
    e.prototype.Vbd = function(d, c, f) {
        5
    }
    ;
    e.prototype.V298 = function(d) {}
    ;
    e.prototype.test = function() {}
    ;
    e.prototype.V8o = function(d) {
        if (!this.Vc5(d))
            try {
                switch (d.getType()) {
                default:
                    TRACE("Unhandled: " + d.toString());
                    break;
                case CB.V3b.V4g:
                    this.Vbd("Connected to CloudServer");
                    this.Vb3 = !0;
                    alert("Default Groups not expected...");
                    break;
                case CB.V3b.V5s:
                    this.V299(d);
                    break;
                case CB.V3b.V3p:
                    this.clearLoginCookies()
                }
            } catch (c) {
                d = CB.V3b.toNumString(d.getType()),
                CB.V3(d, c)
            }
    }
    ;
    e.prototype.V29a = function(d) {
        V3ir.panelMgr.chatOut(chat.toString())
    }
    ;
    e.prototype.isLoggedIn = function() {
        return this.Vb3 && this.isConnected()
    }
    ;
    e.prototype.V299 = function(d) {
        try {
            switch (d.getUserType()) {
            default:
                TRACE("Unhandled Cloud Msg: " + d.toString());
                break;
            case CB.V27a.V27c:
                this.V29b(d);
                break;
            case CB.V27a.V27e:
                this.V29c(d);
                break;
            case CB.V27a.V27g:
                this.V29d(d);
                break;
            case CB.V27a.V27j:
                this.V29e(d);
                break;
            case CB.V27a.V27i:
                this.V29f(d);
                break;
            case CB.V27a.V27k:
            case CB.V27a.V27z:
                this.V29g(d);
                break;
            case CB.V27a.V280:
                this.V29h(d);
                break;
            case CB.V27a.V27l:
                this.V29i(d);
                break;
            case CB.V27a.V27m:
                this.V29j(d);
                break;
            case CB.V27a.V27o:
                break;
            case CB.V27a.V284:
                this.V29k(d);
                break;
            case CB.V27a.V27p:
                this.V29l(d);
                break;
            case CB.V27a.V27s:
                this.V29m(d);
                break;
            case CB.V27a.V27u:
                this.V29n(d);
                break;
            case CB.V27a.V27x:
                this.V29o(d);
                break;
            case CB.V27a.V282:
                this.V29p(d);
                break;
            case CB.V27a.V287:
                this.V29q(d);
                break;
            case CB.V27a.V28a:
                this.V29r(d);
                break;
            case CB.V27a.V28c:
                this.V29s(d);
                break;
            case CB.V27a.V28j:
                this.V29t(d);
                break;
            case CB.V27a.V28k:
                this.V29u(d);
                break;
            case CB.V27a.V28l:
                this.notifyMyMovesChanged(d);
            case CB.V27a.V28n:
            }
        } catch (c) {
            d = CB.V27a.toNumString(d.getUserType()),
            CB.V3(d, c)
        }
    }
    ;
    e.prototype.V29v = function(d) {}
    ;
    e.prototype.requestDatabases = function() {
        var d = new CB.WebSockMessage(CB.V3b.V5s);
        d.setUserType(CB.V27a.V27b);
        var c = this.user;
        this.loginMode == CB.LoginMode.GUEST && (c = "Guest");
        d.getBuf().V3hs(c);
        d.getBuf().V3ij(CB.Vq.V6u());
        this.send(d)
    }
    ;
    e.prototype.V29b = function(d) {
        CB.Vcg && CB.Vcg.Vch();
        this.cloudDBItemList = new CB.V270;
        this.cloudDBItemList.fromDataBuf(d.getBuf());
        var c = d.getBuf().V3ii()
          , f = d.getBuf().V3ii()
          , g = d.getBuf().V3ii()
          , h = d.getBuf().V3ii();
        d.getBuf().V3ii();
        this.Vbd("Received Databases... qKB=" + c + ", siz= " + f + ", maxDB=" + g + ", lastDBId=" + h);
        V3ir.config.silentCloud || (0 != h && this.V294 ? this.V29w(h, !0) : V3ir.panelMgr.openDatabasePanel && V3ir.panelMgr.selectCloudDatabase(this.user, this.cloudDBItemList, this.V29w.bind(this)));
        this.V294 = !1
    }
    ;
    e.prototype.V25u = function(d) {
        return this.cloudDBItemList.getById(d)
    }
    ;
    e.prototype.V29w = function(d, c) {
        if (0 <= d) {
            this.V290 && this.V24e(this.V290);
            var f = this.cloudDBItemList.getById(d);
            if (f) {
                var g = this.openCloudDatabase(f);
                V3ir.panelMgr.showDatabase(g);
                if (c && ("Clipboard" == f.name || "CloudClip" == f.name) && V3ir.panelMgr.gameKernel)
                    V3ir.panelMgr.gameKernel.onDBGameClicked(g, g.nGames);
                this.V29x && ((new CB.Timer(this.V29x)).runOnce(100),
                this.V29x = null)
            }
            this.V290 = d;
            this.V29y(d)
        } else
            this.V290 = 0
    }
    ;
    e.prototype.setCallAfterDBSelected = function(d) {
        this.V29x = d
    }
    ;
    e.prototype.V29z = function(d) {
        if (d = this.cloudDBItemList.getById(d))
            return this.openCloudDatabase(d)
    }
    ;
    e.prototype.openCloudDatabase = function(d) {
        if (void 0 !== this.V291[d.cloudId])
            return this.V24c(this.V291[d.cloudId]),
            this.V291[d.cloudId];
        d = new CB.V25d(d.cloudId,d.nGames,this);
        this.V24c(d);
        return d
    }
    ;
    e.prototype.V24c = function(d) {
        void 0 == this.V291[d.cloudId] && (this.V291[d.cloudId] = d);
        this.V291[d.cloudId].incUsers()
    }
    ;
    e.prototype.V24e = function(d) {
        "object" === typeof d ? d = d.cloudId : ASSERT("number" === typeof d);
        void 0 !== this.V291[d] && (this.V291[d].decUsers(),
        0 >= this.V291[d].getNUsers() && (this.V291[d].destroy(),
        delete this.V291[d]))
    }
    ;
    e.prototype.V297 = function() {
        for (var d in this.V291)
            this.V291.hasOwnProperty(d) && (this.V291[d].destroy(),
            delete this.V291[d])
    }
    ;
    e.prototype.V29y = function(d) {
        var c = new CB.WebSockMessage(CB.V3b.V5s);
        c.setUserType(CB.V27a.V27n);
        c.getBuf().V3i3(d);
        c.getBuf().V3i3(0);
        this.send(c)
    }
    ;
    e.prototype.createDatabase = function(d) {
        if (this.cloudDBItemList.V272(d))
            alert(d + " exists.");
        else if (!this.isGuest()) {
            var c = new CB.WebSockMessage(CB.V3b.V5s);
            c.setUserType(CB.V27a.V27r);
            c.getBuf().V3hs(d);
            c.getBuf().V3ij(CB.Vq.V6u());
            V3ir.V3i2.guid.V3il(c.getBuf());
            this.send(c)
        }
    }
    ;
    e.prototype.V29m = function(d) {
        var c = d.getBuf().V3im();
        d.getBuf().V3ii();
        d.getBuf().V3ii();
        d.getBuf().V3ht(100);
        switch (c) {
        case CB.V26o.V26v:
            alert("Name Exists");
            break;
        case CB.V26o.V26w:
            alert("Disk Space insufficient");
            break;
        case CB.V26o.V26x:
            alert("Too many databases ");
            break;
        case CB.V26o.V26y:
            this.requestDatabases()
        }
    }
    ;
    e.prototype.deleteDatabase = function() {
        V3ir.panelMgr.selectCloudDatabase(this.user, this.cloudDBItemList, this.V2a0.bind(this))
    }
    ;
    e.prototype.V2a0 = function(d) {
        if (d && CB.V1hl) {
            var c = this.V25u(d);
            if (c) {
                var f = "<strong>" + CB.V1b.V1d(c.title) + "</strong>";
                f += "</br></br>" + c.nGames + " games";
                f += "</br></br> Owner=" + CB.V1b.V1d(c.owner);
                CB.V1hl.V2a1("Please confirm deletion of this database:", f, function(g) {
                    if ("yes" == g || "ok" == g)
                        g = new CB.WebSockMessage(CB.V3b.V5s),
                        g.setUserType(CB.V27a.V27t),
                        g.getBuf().V3i3(d),
                        g.getBuf().V3i3(0),
                        this.send(g),
                        this.V2a2 = !1,
                        this.fireOnDeleted({
                            cloudId: d
                        }),
                        this.V24e(d),
                        this.V290 == d && (this.V290 = 0)
                }
                .bind(this))
            }
        }
    }
    ;
    e.prototype.V29n = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        d.getBuf().V3ht(100);
        this.cloudDBItemList.V10c(c)
    }
    ;
    e.prototype.V29c = function(d) {
        d = this.V292.V21(d, CB.V3b.V5s, CB.V27a.V27q, function(h) {
            var k = new CB.Server.V262;
            k.fromDataBuf(h);
            return k
        });
        d.overhead.V3iq();
        this.Vbd("Received Multiple Headers: " + d.vec.length);
        for (var c = [], f = 0; f < d.vec.length && 1E3 > f; f++) {
            var g = d.vec[f];
            switch (g.eType) {
            default:
                throw "URTyp";
            case CB.Server.V275.V276:
                c.push(g);
            case CB.Server.V275.V278:
            case CB.Server.V275.V277:
            case CB.Server.V2a3:
            }
        }
        c.length && this.fireOnHeadersChanged(c)
    }
    ;
    e.prototype.V260 = function(d, c, f) {
        void 0 == c && alert("nGame");
        this.V28y.insert(new CB.Server.V274(d,c,f));
        40 < this.V28y.size() ? this.V2a4() : this.V28z.runOnce(500, this.V2a4.bind(this))
    }
    ;
    e.prototype.V2a4 = function() {
        var d = new CB.WebSockMessage(CB.V3b.V5s);
        d.setUserType(CB.V27a.V27d);
        d.getBuf().V3ij(this.V28y.size());
        for (var c = 0; c < this.V28y.size() && 100 > c; c++)
            this.V28y.V1u()[c].V3il(d.getBuf());
        this.send(d);
        this.V28y.clear()
    }
    ;
    e.prototype.loadGame = function(d, c, f) {
        f = new CB.WebSockMessage(CB.V3b.V5s);
        f.setUserType(CB.V27a.V27f);
        f.getBuf().V3i3(d);
        f.getBuf().V3i3(0);
        f.getBuf().V3ij(c);
        (new DateAndTime(0)).V3il(f.getBuf());
        this.send(f)
    }
    ;
    e.prototype.V29d = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        var f = d.getBuf().V3im();
        d = this.V2a5(d.getBuf());
        d.replaceDBId = c;
        d.replaceGameNo = f;
        this.fireOnGameChanged({
            cloudId: c,
            game: d
        })
    }
    ;
    e.prototype.V29e = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        for (var f = d.getBuf().V3im(), g = [], h = 0; h < f && 1E3 > h; h++) {
            var k = d.getBuf().V3im();
            g.push(k)
        }
        this.fireOnGamesChangedByGameNo({
            cloudId: c,
            gameNos: g
        })
    }
    ;
    e.prototype.V29f = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        for (var f = [], g = d.getBuf().V3im(), h = 0; h < g && 100 > h; h++)
            f.push(d.getBuf().V3im());
        this.fireOnHeadersChangedByGameNo({
            cloudId: c,
            gameNos: f
        })
    }
    ;
    e.prototype.V29g = function(d) {
        CB.Vcg && CB.Vcg.Vch();
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        if (d.getBuf().V3im()) {
            d = d.getBuf().V3im();
            var f = this.cloudDBItemList.getById(c);
            f && (f.nGames = d);
            this.fireOnReorganized({
                cloudId: c,
                nNewLen: d
            })
        }
    }
    ;
    e.prototype.V29h = function(d) {
        CB.Vcg && CB.Vcg.Vch();
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        d.getBuf().V3ht(100);
        d = d.getBuf().V3im();
        this.V29x = null;
        var f = this.cloudDBItemList.getById(c);
        f && (f.nGames = d);
        this.fireOnReorganized({
            cloudId: c,
            nNewLen: d
        })
    }
    ;
    e.prototype.V29i = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        this.fireOnDeleted({
            cloudId: c
        });
        this.V24e(c)
    }
    ;
    e.prototype.V263 = function(d, c, f) {
        var g = new CB.WebSockMessage(CB.V3b.V5s);
        g.setUserType(CB.V27a.V27v);
        g.getBuf().V3i3(d);
        g.getBuf().V3i3(0);
        g.getBuf().V3ij(c.length);
        for (d = 0; d < c.length; d++)
            g.getBuf().V3ij(c[d]),
            g.getBuf().V3ip(f[d]);
        V3ir.V3i2.guid.V3il(g.getBuf());
        (new DateAndTime(0)).V3il(g.getBuf());
        this.send(g)
    }
    ;
    e.prototype.V264 = function(d) {
        if (!this.isGuest()) {
            var c = new CB.WebSockMessage(CB.V3b.V5s);
            c.setUserType(CB.V27a.V27w);
            c.getBuf().V3i3(d);
            c.getBuf().V3i3(0);
            V3ir.V3i2.guid.V3il(c.getBuf());
            this.send(c);
            (d = this.cloudDBItemList.getById(d)) && CB.Vcg && CB.Vcg.V24w("Cleaning Up " + d.name, null, 2E4)
        }
    }
    ;
    e.prototype.V29o = function(d) {
        CB.Vcg && CB.Vcg.Vch();
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        d.getBuf().V3ht(100);
        d = d.getBuf().V3im();
        this.V29x = null;
        var f = this.cloudDBItemList.getById(c);
        f && (f.nGames = d);
        this.fireOnReorganized({
            cloudId: c,
            nNewLen: d
        })
    }
    ;
    e.prototype.V265 = function(d, c, f) {
        var g = new CB.WebSockMessage(CB.V3b.V5s);
        g.setUserType(CB.V27a.V27y);
        g.getBuf().V3i3(d);
        g.getBuf().V3i3(0);
        g.getBuf().V3i3(c);
        g.getBuf().V3i3(0);
        V3ir.V3i2.guid.V3il(g.getBuf());
        g.getBuf().V3ij(f.length);
        for (d = 0; d < f.length; d++)
            g.getBuf().V3ij(f[d]);
        this.send(g);
        CB.Vcg && CB.Vcg.V24w("Copying games ... ", null, 2E4)
    }
    ;
    e.prototype.V24v = function(d, c) {
        var f = new CB.WebSockMessage(CB.V3b.V5s);
        f.setUserType(CB.V27a.V281);
        f.getBuf().V3i3(d);
        f.getBuf().V3i3(0);
        f.getBuf().V3i9(c);
        V3ir.V3i2.guid.V3il(f.getBuf());
        this.send(f);
        CB.Vcg && CB.Vcg.V24w("Searching on Server ... ", null, 2E4)
    }
    ;
    e.prototype.V29p = function(d) {
        CB.Vcg && CB.Vcg.Vch();
        var c = d.getBuf().V3ii();
        d.getBuf().V3ii();
        for (var f = d.getBuf().V3im(), g = [], h = 0; h < f && 1E4 > h; h++) {
            var k = d.getBuf().V3im();
            g.push(k)
        }
        (d = this.cloudDBItemList.getById(c)) && this.openCloudDatabase(d).setSubSet(g)
    }
    ;
    e.prototype.V29j = function(d) {
        d.getBuf().V3ii();
        d.getBuf().V3ii()
    }
    ;
    e.prototype.V29l = function(d) {
        d.getBuf().V3ii();
        d.getBuf().V3ii();
        this.requestDatabases()
    }
    ;
    e.prototype.V2a5 = function(d) {
        var c = new CB.Game
          , f = new CB.V1a9;
        f.V1aq(d);
        d.V3im();
        c.readGameOnly2(d);
        c.setHeader(f);
        return c
    }
    ;
    e.prototype.V2a6 = function(d, c) {
        c.hdr.compactToDataBuf(d);
        d.V3ij(0);
        c.writeGameOnly2(d);
        return c
    }
    ;
    e.prototype.saveGame = function(d, c) {
        if (this.V290) {
            var f = new CB.WebSockMessage(CB.V3b.V5s);
            f.setUserType(CB.V27a.V27h);
            f.getBuf().V3i3(this.V290);
            f.getBuf().V3i3(0);
            void 0 !== c ? f.getBuf().V3ij(c) : f.getBuf().V3ij(0);
            V3ir.V3i2.guid.V3il(f.getBuf());
            (new DateAndTime(0)).V3il(f.getBuf());
            this.V2a6(f.getBuf(), d);
            if (void 0 === c) {
                var g = this.V29z(this.V290);
                g && (d.replaceDBId = this.V290,
                d.replaceGameNo = g.getGameCount() + 1)
            }
            this.send(f);
            void 0 !== c ? this.fireOnGamesChangedByGameNo({
                cloudId: this.V290,
                gameNos: [c]
            }) : this.fireOnGameAppended({
                cloudId: this.V290
            })
        }
    }
    ;
    e.prototype.replaceGame = function(d) {
        this.canReplaceGame(d) ? this.saveGame(d, d.replaceGameNo) : this.saveGame(d)
    }
    ;
    e.prototype.canReplaceGame = function(d) {
        return d.replaceDBId && d.replaceDBId == this.V290 && 0 < d.replaceGameNo
    }
    ;
    e.prototype.V266 = function(d, c) {
        for (var f = [], g = 0; g < c.length; g++)
            f.push(new CB.V273(c[g]));
        g = new CB.V11;
        g.writeFakeInt64(d);
        V3ir.V3i2.guid.V3il(g);
        c.length && (CB.Vcg && CB.Vcg.V24w("Saving Games ... ", null, 1E3),
        this.V293.V22(this.Vbz(), CB.V6z.V70, f, 2E4, CB.V3b.V5s, CB.V27a.V283, g, function(h, k) {
            k.V3il(h)
        }))
    }
    ;
    var b = new CB.V3id;
    e.prototype.V29k = function(d) {
        d = this.V293.V26(d);
        var c = this.cloudDBItemList.getById(this.V290);
        c && (c.nGames += d,
        b.exec(function() {
            CB.Vcg && CB.Vcg.Vch();
            this.fireOnReorganized({
                cloudId: this.V290,
                nNewLen: c.nGames
            })
        }
        .bind(this), 2E3))
    }
    ;
    e.prototype.storePosAndMoves = function(d, c) {
        var f = this.V2a7(CB.V27a.V285);
        this.V2a6(f.getBuf(), d);
        f.getBuf().V3ij(c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.storeEval = function(d, c) {
        var f = this.V2a7(CB.V27a.V28e);
        this.V2a6(f.getBuf(), d);
        f.getBuf().V3ij(c);
        d = CB.V28o.V28r;
        this.isMovesLoadedFor(!0) && (d = CB.V28o.V28s);
        f.getBuf().V3ij(d);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.storeText = function(d, c) {
        var f = this.V2a7(CB.V27a.V28f);
        this.V2a6(f.getBuf(), d);
        f.getBuf().V3hs(CB.V1b.V1c(c));
        d = CB.V28o.V28r;
        this.isMovesLoadedFor(!0) && (d = CB.V28o.V28s);
        f.getBuf().V3ij(d);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.V2a8 = function(d, c, f) {
        var g = this.V2a7(CB.V27a.V28g);
        d.write(g.getBuf());
        c.write2(g.getBuf());
        g.getBuf().V3ip(f);
        g.getBuf().V3ij(CB.Vq.V6u());
        this.send(g)
    }
    ;
    e.prototype.uploadToMyMoves = function(d) {
        var c = this.V2a7(CB.V27a.UPLOAD_GAME);
        this.V2a6(c.getBuf(), d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.makeMainMoveOrder = function(d) {
        var c = this.V2a7(CB.V27a.V28d);
        this.V2a6(c.getBuf(), d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.removeFromMyMoves = function(d, c) {
        var f = this.V2a7(CB.V27a.V288);
        d.write(f.getBuf());
        delete c.annos;
        (new CB.V17g(c.from,c.to,c.prom)).write2(f.getBuf());
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.removeWholeTree = function(d, c, f) {
        var g = this.V2a7(CB.V27a.V28b);
        d.write(g.getBuf());
        c.write2(g.getBuf());
        g.getBuf().V3ij(f);
        g.getBuf().V3ij(CB.Vq.V6u());
        this.send(g)
    }
    ;
    e.prototype.V29s = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3im();
        this.reloadMyMoves();
        V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2aa);
        1 < c && V3ir.panelMgr.showMessage(c + " " + lm.MOVES_UNMARKED, 4E3)
    }
    ;
    e.prototype.V29t = function(d) {
        var c = d.getBuf().V3ii();
        d.getBuf().V3im();
        V3ir.panelMgr.showMessage(c + " " + lm.MOVES_UNLEARNED, 4E3)
    }
    ;
    e.prototype.unlearnWholeTree = function(d, c, f) {
        var g = this.V2a7(CB.V27a.V28i);
        d.write(g.getBuf());
        c.write2(g.getBuf());
        g.getBuf().V3ij(f);
        g.getBuf().V3ij(CB.Vq.V6u());
        this.send(g)
    }
    ;
    e.prototype.V29u = function(d) {}
    ;
    e.prototype.checkPosAndMoves = function(d, c, f) {
        var g = this.V2a7(CB.V27a.V286);
        d.write(g.getBuf());
        g.getBuf().V3ip(c ? !0 : !1);
        g.getBuf().writeInt(f || 0);
        g.getBuf().V3ij(CB.Vq.V6u());
        this.send(g, !0)
    }
    ;
    e.prototype.V29q = function(d) {
        var c = new CB.Position;
        c.read(d.getBuf());
        for (var f = d.getBuf().V3im(), g = [], h = [], k = 0; k < f && 200 > k; k++) {
            var l = new CB.V17g;
            l.read2(d.getBuf());
            h = d.getBuf().V3ii();
            var m = d.getBuf().V3im()
              , n = d.getBuf().readUint8()
              , p = d.getBuf().V3ht(300)
              , q = d.getBuf().readUint8()
              , t = d.getBuf().V3ig()
              , v = d.getBuf().readUint8();
            g.push({
                move: l,
                visits: h,
                flags: m,
                eval: n,
                correct: q,
                txt: p,
                date: t,
                learnPercent: v
            })
        }
        f = {
            count: 0,
            total: 0,
            drilled: 0,
            learned: 0,
            quote: 0,
            toString: function() {
                return "Stats: cnt=" + this.count + ", total=" + this.total + ", drilled=" + this.drilled + ", learned=" + this.learned
            },
            getPercent: function() {
                return this.total ? Math.round(100 * this.quote / this.total) : 0
            }
        };
        f.count = d.getBuf().V3ii();
        f.total = d.getBuf().V3ii();
        f.drilled = d.getBuf().V3ii();
        f.learned = d.getBuf().V3ii();
        f.quote = d.getBuf().readFloat64();
        this.fireOnMyMoves({
            position: c,
            moves: g,
            stats: f
        })
    }
    ;
    e.prototype.loadMyMoves = function(d, c) {
        this.V2ab = c;
        V3ir.panelMgr.blockLiveBookUpdates && V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ac);
        var f = this.V2a7(CB.V27a.V289);
        f.getBuf().V3ij(d);
        this.V2a6(f.getBuf(), c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.reloadMyMoves = function() {
        this.V2ab || (this.V2ab = new CB.Game);
        this.loadMyMoves(this.V296, this.V2ab)
    }
    ;
    e.prototype.V29r = function(d) {
        var c = this.V2a5(d.getBuf())
          , f = d.getBuf().V3ii();
        d = d.getBuf().V3im();
        switch (d) {
        case CB.V295.V160:
            var g = "Both Colors";
            break;
        case CB.V295.WHITE:
            g = "White";
            break;
        case CB.V295.BLACK:
            g = "Black"
        }
        c.hdr.white = new CB.PlayerData("","My Moves");
        c.hdr.black = new CB.PlayerData("",g);
        0 == f ? (c = "No Marked Moves Found.",
        d != CB.V295.V160 && (c = g + " - " + c),
        V3ir.panelMgr.showMessage(c, 5E3),
        V3ir.panelMgr.shakeMarkButton(),
        c = new CB.Game) : V3ir.panelMgr.stopShakeMarkButton();
        V3ir.panelMgr.loadGame(c);
        V3ir.panelMgr.setLayoutMyMoves(!0, d == CB.V295.BLACK);
        this.V296 = this.myMovesLoadMode = d;
        V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ad)
    }
    ;
    e.prototype.notifyMyMovesChanged = function(d) {
        V3ir.notifyMyMovesChanged()
    }
    ;
    e.prototype.V2ae = function(d, c) {
        var f = this.V2a7(CB.V27a.V28h);
        d.write(f.getBuf());
        f.getBuf().V3ij(c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.V2af = function() {
        var d = this.V2a7(CB.V27a.Vgp);
        d.getBuf().V3ij(CB.Vq.V6u());
        this.send(d)
    }
    ;
    e.prototype.saveGameToClipboard = function(d) {
        if (!(3 > d.getMainLine().length && d.isNormalInit())) {
            var c = this.V2a7(CB.V27a.V28m);
            this.V2a6(c.getBuf(), d);
            c.getBuf().V3ij(CB.Vq.V6u());
            this.send(c)
        }
    }
    ;
    e.prototype.V2a7 = function(d) {
        var c = new CB.WebSockMessage(CB.V3b.V5s);
        c.setUserType(d);
        d = this.user;
        this.loginMode == CB.LoginMode.GUEST && (d = "Guest");
        c.getBuf().V3hs(CB.V1b.V1c(d));
        return c
    }
    ;
    e.prototype.onResetGame = function() {
        this.myMovesLoadMode = -1
    }
    ;
    e.prototype.isMovesLoadedForAny = function() {
        return 0 <= this.myMovesLoadMode
    }
    ;
    e.prototype.isMovesLoadedFor = function(d) {
        switch (this.myMovesLoadMode) {
        default:
            return !1;
        case CB.V295.V160:
            return !0;
        case CB.V295.BLACK:
            return d;
        case CB.V295.WHITE:
            return !d
        }
    }
    ;
    e.prototype.Vbw = function(d) {
        var c = V3ir.panelMgr.getKernel();
        c && c.boardWin && !V3ir.config.silentCloud && c.boardWin.addMessage("Server logged you off: " + d, !0)
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "HeadersChanged");
    V3i1.addEvent(e, "HeadersChangedByGameNo");
    V3i1.addEvent(e, "GameChanged");
    V3i1.addEvent(e, "GamesChangedByGameNo");
    V3i1.addEvent(e, "GameAppended");
    V3i1.addEvent(e, "ChangeLogin");
    V3i1.addEvent(e, "Reorganized");
    V3i1.addEvent(e, "Deleted");
    V3i1.addEvent(e, "MyMoves");
    return e
}();
"use strict";
CB.namespace("CB.Server.MyMovesManager");
CB.V27a = {
    NONE: 0,
    V27b: 1600,
    V27c: 1601,
    V27d: 1602,
    V27e: 1603,
    V27f: 1604,
    V27g: 1605,
    V27h: 1606,
    V27i: 1607,
    V27j: 1608,
    V27k: 1609,
    V27l: 1610,
    V27m: 1611,
    V27n: 1612,
    V27o: 1613,
    V27p: 1614,
    V27q: 1615,
    V27r: 1616,
    V27s: 1617,
    V27t: 1618,
    V27u: 1619,
    V27v: 1620,
    V27w: 1621,
    V27x: 1622,
    V27y: 1623,
    V27z: 1624,
    V280: 1625,
    V281: 1626,
    V282: 1627,
    V283: 1628,
    V284: 1629,
    V285: 1630,
    V286: 1631,
    V287: 1632,
    V288: 1633,
    V289: 1634,
    V28a: 1635,
    V28b: 1636,
    V28c: 1637,
    V28d: 1638,
    V28e: 1639,
    UPLOAD_GAME: 1640,
    V28f: 1641,
    V28g: 1642,
    V28h: 1643,
    V28i: 1644,
    V28j: 1645,
    V28k: 1647,
    V28l: 1648,
    Vgp: 1649,
    V28m: 1650,
    V2ag: 1651,
    V2ah: 1652,
    V2ai: 1653,
    V2aj: 1654,
    V2ak: 1655,
    V28n: 1656,
    V2al: 1657,
    V2am: 1658,
    V2an: 1659,
    V2ao: 1660,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return b;
        return "Unknown CloudUserMsgId: " + e
    },
    toNumString: function(e) {
        return "MyMovesId=" + e
    }
};
CB.V28o = {
    V28p: 1,
    V28q: 2,
    V28r: 4,
    V28s: 8,
    V28t: 16,
    V28u: 32,
    V28v: 64,
    V28w: 128,
    V28x: 256,
    WHITE: 6,
    BLACK: 9,
    MOVE: 12,
    V1vp: 3
};
CB.Server.MyMovesManager = function() {
    var e = function() {
        this.V28y = new CB.Set;
        this.V28z = new CB.Timer;
        this.V2ap = 0;
        this.V291 = {};
        this.V292 = new CB.V1x(function(b) {
            this.send(b)
        }
        .bind(this));
        this.V293 = new CB.V1x(function(b) {
            this.send(b)
        }
        .bind(this));
        this.V294 = !1;
        this.V296 = this.myMovesLoadMode = CB.V295.NONE;
        this.name = "MyMoves";
        this.myMoves = []
    };
    CB.inherit(e, CB.Server.Vam);
    e.prototype.createLobby = function(b, d, c, f, g) {
        this.create(b, d, c, f, g)
    }
    ;
    e.prototype.getName = function() {
        return "MyMovesMgr"
    }
    ;
    e.prototype.Vb9 = function() {
        V3ir.setLoggedIn(this.isLoggedIn())
    }
    ;
    e.prototype.Vcf = function() {
        this.Vbd("Connected to MyMovesServer", "", "conn");
        this.Vb3 = !0;
        this.loginMode !== CB.LoginMode.GUEST && (V3ir.setLoggedIn(!0),
        V3ir.panelMgr.getKernel() && this.checkPosAndMoves(V3ir.panelMgr.getKernel().getCurPos()));
        V3ir.showAccountType(this.V3i7)
    }
    ;
    e.prototype.Vc4 = function(b) {
        b.isFromBridge() || (this.Vb3 = !0,
        this.loginMode !== CB.LoginMode.GUEST ? b.strUserId && (V3ir.V3i2.userName = CB.V1b.V1d(b.strUserId),
        this.user = CB.V1b.V1d(b.strUserId),
        this.Vay = b.strUserId,
        b.strToken && (V3ir.V3i2.loginToken = b.strToken,
        CB.DOM.V9w("AccountMode", CB.LoginMode.NORMAL),
        V3ir.V3i2.rememberLoginToken(),
        this.V3i7 = b.V3i7,
        V3ir.setLoggedIn(!0),
        V3ir.showAccountType(this.V3i7),
        this.V2aq() || V3ir.panelMgr.getKernel() && this.checkPosAndMoves(V3ir.panelMgr.getKernel().getCurPos())),
        this.V2ar && this.V2ar()) : (this.user = "Guest" + this.Vbz(),
        this.Vay = "Guest" + this.Vbz()))
    }
    ;
    e.prototype.V6x = function() {
        return !0
    }
    ;
    e.prototype.V6y = function() {
        return !0
    }
    ;
    e.prototype.V2aq = function() {
        if (!this.V2as && V3ir.urlParams && V3ir.urlParams.repName && V3ir.urlParams.repPath) {
            this.V2as = !0;
            var b = new CB.V2at;
            b.name = V3ir.urlParams.repName;
            b.path = V3ir.urlParams.repPath;
            b.global = !0;
            b.eMode = parseInt(V3ir.urlParams.repMode);
            b.eLevel = 0;
            (new CB.Timer).runOnce(10, function() {
                this.V2au(b, new CB.Game)
            }
            .bind(this));
            return !0
        }
    }
    ;
    e.prototype.onLogOff = function() {
        this.superClass.onLogOff.apply(this, arguments)
    }
    ;
    e.prototype.Vbd = function(b, d, c) {
        5
    }
    ;
    e.prototype.V298 = function(b) {}
    ;
    e.prototype.test = function() {}
    ;
    e.prototype.V8o = function(b) {
        if (!this.Vc5(b))
            try {
                switch (b.getType()) {
                default:
                    TRACE("Unhandled: " + b.toString());
                    break;
                case CB.V3b.V4g:
                    this.Vbd("Connected to MyMovesServer");
                    this.Vb3 = !0;
                    alert("Default Groups not expected...");
                    break;
                case CB.V3b.V5s:
                    this.V2av(b);
                    break;
                case CB.V3b.V3p:
                    this.clearLoginCookies()
                }
            } catch (d) {
                b = CB.V3b.toNumString(b.getType()),
                CB.V3(b, d)
            }
    }
    ;
    e.prototype.V29a = function(b) {
        V3ir.panelMgr.chatOut(chat.toString())
    }
    ;
    e.prototype.isLoggedIn = function() {
        return this.Vb3 && this.isConnected()
    }
    ;
    e.prototype.V2av = function(b) {
        try {
            switch (b.getUserType()) {
            default:
                TRACE("Unhandled MyMoves Msg: " + b.toString());
                break;
            case CB.V27a.V27m:
                this.V29j(b);
                break;
            case CB.V27a.V287:
                this.V29q(b);
                break;
            case CB.V27a.V28a:
                this.V29r(b);
                break;
            case CB.V27a.V28c:
                this.V29s(b);
                break;
            case CB.V27a.V28j:
                this.V29t(b);
                break;
            case CB.V27a.V28k:
                break;
            case CB.V27a.V28l:
                this.notifyMyMovesChanged(b);
                break;
            case CB.V27a.V2al:
                break;
            case CB.V27a.V2ak:
                this.V2aw(b);
                break;
            case CB.V27a.V27j:
                break;
            case CB.V27a.V2an:
                this.V2ax(b);
                break;
            case CB.V27a.V2ao:
                this.V2ay(b)
            }
        } catch (d) {
            b = CB.V27a.toNumString(b.getUserType()),
            CB.V3(b, d)
        }
    }
    ;
    e.prototype.V29v = function(b) {}
    ;
    e.prototype.V29j = function(b) {
        b.getBuf().V3ii();
        b.getBuf().V3ii()
    }
    ;
    e.prototype.V2a5 = function(b) {
        var d = new CB.Game
          , c = new CB.V1a9;
        c.V1aq(b);
        b.V3im();
        d.readGameOnly2(b);
        d.setHeader(c);
        return d
    }
    ;
    e.prototype.V2a6 = function(b, d) {
        d.hdr.compactToDataBuf(b);
        b.V3ij(0);
        d.writeGameOnly2(b);
        return d
    }
    ;
    e.prototype.storePosAndMoves = function(b, d) {
        var c = this.V2a7(CB.V27a.V285);
        this.V2a6(c.getBuf(), b);
        c.getBuf().V3ij(d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.storeEval = function(b, d) {
        var c = this.V2a7(CB.V27a.V28e);
        this.V2a6(c.getBuf(), b);
        c.getBuf().V3ij(d);
        b = CB.V28o.V28r;
        this.isMovesLoadedFor(!0) && (b = CB.V28o.V28s);
        c.getBuf().V3ij(b);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.storeText = function(b, d) {
        var c = this.V2a7(CB.V27a.V28f);
        this.V2a6(c.getBuf(), b);
        c.getBuf().V3hs(CB.V1b.V1c(d));
        b = CB.V28o.V28r;
        this.isMovesLoadedFor(!0) && (b = CB.V28o.V28s);
        c.getBuf().V3ij(b);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.V2a8 = function(b, d, c) {
        var f = this.V2a7(CB.V27a.V28g);
        b.write(f.getBuf());
        d.write2(f.getBuf());
        f.getBuf().V3ip(c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.uploadToMyMoves = function(b) {
        var d = this.V2a7(CB.V27a.UPLOAD_GAME);
        this.V2a6(d.getBuf(), b);
        d.getBuf().V3ij(CB.Vq.V6u());
        this.send(d)
    }
    ;
    e.prototype.makeMainMoveOrder = function(b) {
        var d = this.V2a7(CB.V27a.V28d);
        this.V2a6(d.getBuf(), b);
        d.getBuf().V3ij(CB.Vq.V6u());
        this.send(d)
    }
    ;
    e.prototype.removeFromMyMoves = function(b, d) {
        if (d && this.isMovesLoadedForAny()) {
            var c = this.V2a7(CB.V27a.V288);
            b.write(c.getBuf());
            delete d.annos;
            (new CB.V17g(d.from,d.to,d.prom)).write2(c.getBuf());
            c.getBuf().V3ij(CB.Vq.V6u());
            this.send(c)
        }
    }
    ;
    e.prototype.removeWholeTree = function(b, d, c) {
        var f = this.V2a7(CB.V27a.V28b);
        b.write(f.getBuf());
        d.write2(f.getBuf());
        f.getBuf().V3ij(c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.V29s = function(b) {
        var d = b.getBuf().V3ii();
        b.getBuf().V3im();
        this.reloadMyMoves();
        V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2aa);
        1 < d && V3ir.panelMgr.showMessage(d + " " + lm.MOVES_UNMARKED, 4E3)
    }
    ;
    e.prototype.V29t = function(b) {
        var d = b.getBuf().V3ii();
        b.getBuf().V3im();
        V3ir.panelMgr.showMessage(d + " " + lm.MOVES_UNLEARNED, 4E3)
    }
    ;
    e.prototype.unlearnWholeTree = function(b, d, c) {
        var f = this.V2a7(CB.V27a.V28i);
        b.write(f.getBuf());
        d.write2(f.getBuf());
        f.getBuf().V3ij(c);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f)
    }
    ;
    e.prototype.V29u = function(b) {}
    ;
    e.prototype.checkPosAndMoves = function(b, d, c) {
        var f = this.V2a7(CB.V27a.V286);
        b.write(f.getBuf());
        f.getBuf().V3ip(d ? !0 : !1);
        f.getBuf().writeInt(c || 0);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f, !0)
    }
    ;
    e.prototype.checkPosAndMovesEx = function(b, d, c) {
        if (!this.V2az)
            return this.checkPosAndMoves(b, d, c);
        var f = this.V2a7(CB.V27a.V2ai);
        this.V2b0(this.V2az, f.getBuf());
        b.write(f.getBuf());
        f.getBuf().V3ip(d ? !0 : !1);
        f.getBuf().writeInt(c || 0);
        f.getBuf().V3ij(CB.Vq.V6u());
        this.send(f, !0)
    }
    ;
    e.prototype.V29q = function(b) {
        var d = new CB.Position;
        d.read(b.getBuf());
        for (var c = b.getBuf().V3im(), f = [], g = 0; g < c && 200 > g; g++) {
            var h = new CB.V17g;
            h.read2(b.getBuf());
            var k = b.getBuf().V3ii()
              , l = b.getBuf().V3im()
              , m = b.getBuf().readUint8()
              , n = b.getBuf().V3ht(300)
              , p = b.getBuf().readUint8()
              , q = b.getBuf().V3ig()
              , t = b.getBuf().readUint8();
            f.push({
                move: h,
                visits: k,
                flags: l,
                eval: m,
                correct: p,
                txt: n,
                date: q,
                learnPercent: t
            })
        }
        c = {
            count: 0,
            total: 0,
            drilled: 0,
            learned: 0,
            quote: 0,
            toString: function() {
                return "Stats: cnt=" + this.count + ", total=" + this.total + ", drilled=" + this.drilled + ", learned=" + this.learned
            },
            getPercent: function() {
                return this.total ? Math.round(100 * this.quote / this.total) : 0
            }
        };
        c.count = b.getBuf().V3ii();
        c.total = b.getBuf().V3ii();
        c.drilled = b.getBuf().V3ii();
        c.learned = b.getBuf().V3ii();
        c.quote = b.getBuf().readFloat64();
        this.fireOnMyMoves({
            position: d,
            moves: f,
            stats: c
        })
    }
    ;
    e.prototype.V2au = function(b, d) {
        this.myMovesLoadMode < CB.V295.V2b1 && (d = new CB.Game);
        this.V2az = b;
        this.myMovesLoadMode = 0 === b.eMode ? CB.V295.V2b1 : CB.V295.V2b2;
        V3ir.panelMgr.blockLiveBookUpdates && V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ac);
        var c = this.V2a7(CB.V27a.V2ag);
        this.V2b0(b, c.getBuf());
        c.getBuf().V3ij(this.myMovesLoadMode);
        this.V2a6(c.getBuf(), d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.V2b3 = function(b, d, c) {
        if (this.V2az && this.V2az.path && this.V2az.name) {
            var f = this.V2az.path.split("\\")[0];
            this.V2az.path = this.V2b4(f, b, d, this.V2az.eMode);
            this.V2au(this.V2az, c)
        }
    }
    ;
    e.prototype.V2b4 = function(b, d, c, f) {
        switch (d) {
        case CB.V2b5.V2b6:
            b += "\\Easy";
            break;
        case CB.V2b5.V2b7:
            b += "\\Club";
            break;
        case CB.V2b5.Vdl:
            b += "\\Tourn";
            break;
        case CB.V2b5.MASTER:
            b += "\\Profi"
        }
        switch (c) {
        case CB.V2b8.V2ba:
            b += "-Fashion";
            break;
        case CB.V2b8.V2bb:
            b += "-SideLines"
        }
        1 === f ? b = b += "-Black" : 0 === f && (b = b += "-White");
        return b
    }
    ;
    e.prototype.V2b0 = function(b, d) {
        d.V3hs(b.name);
        d.V3hs(b.path);
        d.V3ip(b.global)
    }
    ;
    e.prototype.loadCurrentMyMoves = function(b, d) {
        this.V2az && b >= CB.V295.V2b1 ? this.V2au(this.V2az, d) : this.loadMyMoves(b, d)
    }
    ;
    e.prototype.loadMyMoves = function(b, d, c) {
        this.V2az = null;
        this.V2bc = c;
        this.V2bd(b, new CB.Game)
    }
    ;
    e.prototype.V2bd = function(b, d) {
        this.V2ab = d;
        V3ir.panelMgr.blockLiveBookUpdates && V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ac);
        var c = this.V2a7(CB.V27a.V289);
        c.getBuf().V3ij(b);
        this.V2a6(c.getBuf(), d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c)
    }
    ;
    e.prototype.V2be = function(b) {
        var d = -1
          , c = -1;
        this.myMoves[1] && (d = b.findInTree(this.myMoves[1]));
        this.myMoves[2] && (c = b.findInTree(this.myMoves[2]));
        var f = function(g, h, k) {
            3 < h && (g.gotoIndex(h),
            g = g.getOrCreateCurrAnno(),
            k ? g.addPostText("My Moves - Black") : g.addPostText("My Moves - White"))
        };
        f(b, d, !1);
        f(b, c, !0);
        return Math.max(d, c)
    }
    ;
    e.prototype.V1gv = function() {
        var b = V3ir.panelMgr.getKernel();
        b && b.game.assign(new CB.Game);
        this.V2ab = new CB.Game
    }
    ;
    e.prototype.reloadMyMoves = function() {
        this.V2ab || (this.V2ab = new CB.Game);
        this.loadMyMoves(this.V296, this.V2ab)
    }
    ;
    e.prototype.V29r = function(b) {
        var d = this.V2a5(b.getBuf())
          , c = b.getBuf().V3ii();
        b = b.getBuf().V3im();
        switch (b) {
        case CB.V295.V160:
            var f = "Both Colors";
            break;
        case CB.V295.WHITE:
            f = "White";
            break;
        case CB.V295.BLACK:
            f = "Black"
        }
        d.hdr.white = new CB.PlayerData("","My Moves");
        d.hdr.black = new CB.PlayerData("",f);
        0 == c ? (d = "No Marked Moves Found.",
        b != CB.V295.V160 && b < CB.V295.V2b1 && (d = f + " - " + d),
        V3ir.panelMgr.showMessage(d, 5E3),
        V3ir.panelMgr.shakeMarkButton && V3ir.panelMgr.shakeMarkButton(),
        d = new CB.Game) : V3ir.panelMgr.stopShakeMarkButton && V3ir.panelMgr.stopShakeMarkButton();
        b >= CB.V295.V2b1 && this.V2bf(d);
        V3ir.panelMgr.loadGame(d);
        this.myMovesLoadMode = b;
        var g;
        this.V2az && (g = this.V2az.V2bg());
        V3ir.panelMgr.setLayoutMyMoves && V3ir.panelMgr.setLayoutMyMoves(!0, b, g);
        this.V296 = b;
        V3ir.panelMgr.blockLiveBookUpdates && V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ad);
        this.V2bc && (this.V2bc(),
        delete this.V2bc);
        this.myMoves[b] = d
    }
    ;
    e.prototype.V2bf = function(b) {
        b.forAllMoves(function(d) {
            (d = d.getAnno()) && (d = d.getSymbol()) && d.removeMyMoveMark()
        })
    }
    ;
    e.prototype.notifyMyMovesChanged = function(b) {
        V3ir.notifyMyMovesChanged()
    }
    ;
    e.prototype.V2ae = function(b, d) {
        var c = this.V2a7(CB.V27a.V28h);
        b.write(c.getBuf());
        c.getBuf().V3ij(d);
        c.getBuf().V3ij(CB.Vq.V6u());
        this.send(c);
        this.V2bh = {
            V2bi: 0,
            V2bj: 0,
            V2bk: 0,
            getPercent: function() {
                return this.V2bi ? Math.round(100 * this.V2bk / this.V2bi) : 0
            },
            getVisitedPercent: function() {
                return this.V2bi ? Math.round(100 * this.V2bj / this.V2bi) : 0
            }
        };
        this.V2bl(b, d === CB.V295.BLACK)
    }
    ;
    e.prototype.V2af = function() {
        var b = this.V2a7(CB.V27a.Vgp);
        b.getBuf().V3ij(CB.Vq.V6u());
        this.send(b)
    }
    ;
    e.prototype.V2bm = function(b) {
        var d = this.V2a7(CB.V27a.V2aj);
        this.V2b0({
            name: "",
            path: "",
            global: !0
        }, d.getBuf());
        d.getBuf().V3ij(b ? 1 : 0);
        this.send(d)
    }
    ;
    e.prototype.V2aw = function(b) {
        var d = new CB.V2bn;
        d.fromDataBuf(b.getBuf());
        b = b.getBuf().V3iq();
        this.fireOnRepertoires({
            list: d,
            black: b
        })
    }
    ;
    e.prototype.V2bl = function(b, d) {
        d = d ? CB.V295.BLACK : CB.V295.WHITE;
        var c = this.V2a7(CB.V27a.V2am);
        b.write(c.getBuf());
        c.getBuf().writeInt(d);
        this.send(c)
    }
    ;
    e.prototype.V2ax = function(b) {
        b = b.getBuf();
        b.beginSizedRead();
        this.V2bh.V2bi = b.V3ii();
        this.V2bh.V2bj = b.V3ii();
        this.V2bh.V2bk = b.readFloat64();
        b.endSizedRead();
        V3ir.panelMgr.scorePanel.showDrillStats(this.V2bh)
    }
    ;
    e.prototype.V2ay = function(b) {
        if (this.V2bh) {
            b = b.getBuf();
            b.beginSizedRead();
            var d = b.readFloat64()
              , c = b.V3ii();
            this.V2bh.V2bj += c;
            this.V2bh.V2bk += d;
            b.endSizedRead();
            V3ir.panelMgr.scorePanel.showDrillStats(this.V2bh)
        }
    }
    ;
    e.prototype.V2a7 = function(b) {
        var d = new CB.WebSockMessage(CB.V3b.V5s);
        d.setUserType(b);
        b = this.user;
        this.loginMode == CB.LoginMode.GUEST && (b = "Guest");
        d.getBuf().V3hs(CB.V1b.V1c(b));
        return d
    }
    ;
    e.prototype.onResetGame = function() {
        this.myMovesLoadMode = CB.V295.NONE
    }
    ;
    e.prototype.isMovesLoadedForAny = function() {
        return this.myMovesLoadMode >= CB.V295.V160 && this.myMovesLoadMode < CB.V295.V2b1
    }
    ;
    e.prototype.V2bo = function() {
        switch (this.V296) {
        default:
            return CB.V15e.NONE;
        case CB.V295.V160:
        case CB.V295.WHITE:
        case CB.V295.V2b1:
            return CB.V15e.WHITE;
        case CB.V295.BLACK:
        case CB.V295.V2b2:
            return CB.V15e.BLACK
        }
    }
    ;
    e.prototype.isMovesLoadedFor = function(b) {
        switch (this.myMovesLoadMode) {
        default:
            return !1;
        case CB.V295.V160:
            return !0;
        case CB.V295.BLACK:
            return b;
        case CB.V295.WHITE:
            return !b
        }
    }
    ;
    e.prototype.Vbw = function(b) {
        var d = V3ir.panelMgr.getKernel();
        d && d.boardWin && d.boardWin.addMessage("Server logged you off: " + b, !0)
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "MyMoves");
    V3i1.addEvent(e, "Repertoires");
    return e
}();
"use strict";
CB.V2bp = function() {
    var e = function() {
        this.V2bt = this.V2bs = this.V2br = this.V2bq = 0
    };
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        b.V3i3(this.V2bu);
        b.V3i3(this.V2br);
        b.V3i3(this.V2bs);
        b.V3i3(this.V2bt);
        b.endSizedWrite();
        return !0
    }
    ;
    return e
}();
"use strict";
CB.HashPosition = function() {
    var e = function(b) {
        this.m_cPos = [];
        for (var d = 0; 24 > d; d++)
            this.m_cPos.push(0);
        b && (new CB.V267).V26e(b, this.m_cPos, this.m_cPos.length)
    };
    e.prototype.V2bv = function() {
        return this.m_cPos[0] & 31
    }
    ;
    e.prototype.V2bw = function() {
        return 0 != this.m_cPos[0]
    }
    ;
    e.prototype.V2bx = function() {
        for (var b = 0; b < m_cPos.Length; b++)
            this.m_cPos[b] = 0
    }
    ;
    e.prototype.V2by = function() {
        return 0 != (this.m_cPos[1] & 128)
    }
    ;
    e.prototype.HashPosition = function(b, d) {}
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        b.writeByteArray(this.m_cPos, this.m_cPos.length);
        b.endSizedWrite();
        return !0
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        for (var d = 0; d < this.m_cPos.length; d++)
            this.m_cPos[d] = b.readByte();
        b.endSizedRead();
        return !1
    }
    ;
    e.prototype.getPosition = function() {
        var b = new CB.V267
          , d = new CB.Position;
        b.V26f(d, this.m_cPos, this.m_cPos.length);
        return d
    }
    ;
    e.prototype.V2bz = function(b) {}
    ;
    e.prototype.V2c0 = function(b) {}
    ;
    e.prototype.V2c1 = function(b) {}
    ;
    e.prototype.V2c2 = function(b) {}
    ;
    e.prototype.V2c3 = function() {
        return !1
    }
    ;
    e.prototype.V2c4 = function() {
        return !1
    }
    ;
    e.prototype.V2c5 = function() {
        return m_sStartPosition
    }
    ;
    return e
}();
"use strict";
CB.V2c6 = function() {
    var e = function() {
        this.m_nIdDiscoverer = 0;
        this.pos = new CB.HashPosition;
        this.move = []
    };
    e.V2c7 = function() {
        for (var b = new CB.V2c6, d = 0; d < CB.TBRAIN.HASH_LINE_CNT; d++)
            b.move.push(new CB.V2c8);
        return b
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        pos.writeToDataBuffer(b);
        b.writeUShort(CB.TBRAIN.HASH_LINE_CNT);
        for (var d = 0; d < CB.TBRAIN.HASH_LINE_CNT; ++d)
            m_aMove[d].writeToDataBuffer(b);
        b.V3if(m_nPopularity);
        b.writeUnsigned(m_nIdDiscoverer);
        b.writeInt(m_nFlags);
        b.writeUnsigned(TBrainConstants.CALCTIME_REASONABLE_THRESH);
        b.writeUnsigned(TBrainConstants.CALCTIME_DISCOVERY);
        b.writeUnsigned(TBrainConstants.CALCTIME_DONATION);
        b.writeUnsigned(TBrainConstants.CALCTIME_DEEP);
        b.writeUnsigned(m_nGames);
        b.wndSizedWrite();
        return !0
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        this.pos.V3hq(b);
        for (var d = b.V3ig(), c = 0; c < CB.V2c9.prototype.HASH_LINE_CNT && c < d; ++c)
            null == this.move[c] && (this.move[c] = new CB.V2c8),
            this.move[c].V3hq(b);
        this.m_nPopularity = b.readUint64();
        this.m_nIdDiscoverer = b.V3ii();
        this.m_nFlags = b.V3ii();
        this.V2ca = b.V3ii();
        this.V2cb = b.V3ii();
        this.V2cc = b.V3ii();
        this.V2cd = b.V3ii();
        0 == this.V2cd && (this.V2cd = V2c9.prototype.CALCTIME_DEEP);
        this.m_nGames = b.V3ig();
        b.endSizedRead();
        return !0
    }
    ;
    e.prototype.clear = function() {
        for (var b = 0; b < TBRAIN.HASH_LINE_CNT; ++b)
            m_aMove[b].clear();
        pos.V2bx();
        m_nGames = m_nPopularity = m_nFlags = m_nIdDiscoverer = 0
    }
    ;
    e.generateLine = function(b, d, c, f) {
        f = f || 3;
        var g = ""
          , h = [];
        if (d && d.m_aLine) {
            h = this.V2ce(ObjUtil.clone(b), d.m_aLine);
            b = new CB.V1cw(CB.V3ho);
            d = c.game.getStartPos().getBTM();
            for (var k = 0; k < h.length && k < f; k++)
                if (h[k].from != h[k].to) {
                    var l = b.getMoveNota(h[k])
                      , m = b.getStrMoveNumInLine(k, c.getCurPos().getPlyNum(), d);
                    g += m + l;
                    k < h.length - 1 && (g += " ")
                }
        }
        return {
            line: h,
            lineNota: g
        }
    }
    ;
    e.V2ce = function(b, d) {
        for (var c = [], f = 0; f < d.length; f++) {
            var g = new CB.V17g(d[f] & 63,d[f] >> 6 & 63,d[f] >> 12 & 7);
            b.isLegalMove(g) && (b.preCalcCtx(g),
            b.makeMove(g),
            b.postCalcCtx(g, !0),
            c.push(g))
        }
        return c
    }
    ;
    e.prototype.V2cf = function() {}
    ;
    e.prototype.Count = function() {
        return TBRAIN.HASH_LINE_CNT
    }
    ;
    e.prototype.Empty = function() {
        return m_aMove[0].Empty()
    }
    ;
    e.prototype.V2bz = function(b) {
        pos.V2bz(b)
    }
    ;
    e.prototype.V2cg = function() {
        return pos
    }
    ;
    e.prototype.GetMove = function(b) {
        CBDebug.assert(b < TBRAIN.HASH_LINE_CNT);
        return b < TBRAIN.HASH_LINE_CNT ? m_aMove[b] : m_aMove[0]
    }
    ;
    e.prototype.V2ch = function(b, d) {
        CBDebug.assert(d < TBRAIN.HASH_LINE_CNT);
        d < TBRAIN.HASH_LINE_CNT && (m_aMove[d] = b)
    }
    ;
    e.prototype.V2ci = function() {
        return m_nPopularity
    }
    ;
    e.prototype.V2cj = function(b) {
        m_nPopularity = b
    }
    ;
    e.prototype.V2ck = function() {
        return m_nGames
    }
    ;
    e.prototype.V2cl = function() {
        return m_nIdDiscoverer
    }
    ;
    e.prototype.V2cm = function(b) {
        m_nIdDiscoverer = b
    }
    ;
    e.prototype.V2cn = function() {
        return V2co(1)
    }
    ;
    e.prototype.V2cp = function(b) {
        V2cq(1, b)
    }
    ;
    e.prototype.V2cr = function() {
        return V2ca
    }
    ;
    e.prototype.V2cs = function() {
        return V2cb
    }
    ;
    e.prototype.V2ct = function() {
        return V2cc
    }
    ;
    e.prototype.V2cu = function() {
        return V2cd
    }
    ;
    return e
}();
"use strict";
CB.V2cv = function() {
    var e = function() {
        this.V2cw = new CB.V2bp;
        this.m_nFlags = this.m_nSpeed = 0
    };
    e.prototype.read = function(b) {}
    ;
    e.prototype.V2cx = function() {
        return this.V2cw
    }
    ;
    e.prototype.V2cy = function() {
        return 0 < this.m_nSpeed
    }
    ;
    e.prototype.V2cz = function() {
        return m_nSpeed
    }
    ;
    e.prototype.V2d0 = function(b) {
        m_nSpeed = b
    }
    ;
    e.prototype.V2d1 = function() {
        return V2co(1)
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        this.V2cw.writeToDataBuffer(b);
        b.V3i3(this.m_nSpeed);
        b.V3i3(this.m_nFlags);
        b.endSizedWrite();
        return !0
    }
    ;
    e.prototype.ReadFromDataBuffer = function(b) {
        return !0
    }
    ;
    e.prototype.V2d2 = function() {
        var b = new CBGuid;
        b.CreateFromHardware();
        return b
    }
    ;
    return e
}();
"use strict";
CB.ClientMachineInfo = function() {
    var e = function() {};
    CB.inherit(e, CB.V2cv);
    e.prototype.read = function(b) {
        this.V2d3 = b.V3ic(100);
        this.V2d4 = b.V3ic(100);
        this.V2d5 = b.V3ii();
        this.V2d6 = b.V3ii()
    }
    ;
    e.prototype.Init = function() {
        m_nSpeed = s_nSpeed;
        s_bInited = !0
    }
    ;
    e.prototype.V2cz = function() {
        s_bInited && 0 != s_nSpeed || (Init(),
        0 == s_nSpeed && (s_nSpeed = 1E5));
        return s_nSpeed
    }
    ;
    return e
}();
"use strict";
CB.GamePerformanceStats = function() {
    var e = function() {};
    e.prototype.V18k = function() {
        this.V2d4 = this.V2d3 = "";
        this.m_nResultSum = this.m_nResultCount = this.m_nEloSum = this.m_nEloCount = this.V2d6 = this.V2d5 = 0
    }
    ;
    e.prototype.read = function(b) {
        this.V2d3 = b.V3ic(100);
        this.V2d4 = b.V3ic(100);
        this.V2d5 = b.V3ii();
        this.V2d6 = b.V3ii()
    }
    ;
    e.prototype.V2d7 = function(b, d) {
        b = new e(b);
        b.m_nEloCount += d.m_nEloCount;
        var c = b.m_nEloSum + d.m_nEloSum;
        c > uint.MaxValue - 1E4 ? (b.m_nEloSum = uint(c / 2),
        b.m_nEloCount /= 2) : b.m_nEloSum = c;
        c = b.m_nResultSum + d.m_nResultSum;
        d = b.m_nResultCount + d.m_nResultCount;
        c > uint.MaxValue - 1E4 || d > uint.MaxValue - 1E4 ? (b.m_nResultSum = c / 2,
        b.m_nResultCount = d / 2) : (b.m_nResultSum = c,
        b.m_nResultCount = d);
        return b
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.WriteUnsigned(m_nEloSum);
        b.WriteUnsigned(m_nEloCount);
        b.WriteUnsigned(m_nResultSum);
        b.WriteUnsigned(m_nResultCount)
    }
    ;
    e.prototype.V3hq = function(b) {
        this.m_nEloSum = b.V3ii();
        this.m_nEloCount = b.V3ii();
        this.m_nResultSum = b.V3ii();
        this.m_nResultCount = b.V3ii();
        return !0
    }
    ;
    e.prototype.V2d8 = function() {
        return 0 != m_nResultCount ? 500 * m_nResultSum / m_nResultCount : 0
    }
    ;
    e.prototype.getSortEloAv = function() {
        return 0 != this.m_nEloCount ? this.m_nEloSum / this.m_nEloCount : 0
    }
    ;
    e.prototype.getFPercent = function(b) {
        return 0 != this.m_nResultCount ? b ? 100 - 50 * this.m_nResultSum / this.m_nResultCount : 50 * this.m_nResultSum / this.m_nResultCount : 0
    }
    ;
    e.prototype.getNGames = function() {
        return Math.max(this.m_nEloCount, this.m_nResultCount)
    }
    ;
    return e
}();
"use strict";
CB.V2c8 = function() {
    var e = function() {
        this.m_aLine = [0]
    };
    e.prototype.read = function(b) {}
    ;
    e.prototype.WriteToDataBuffer = function(b) {
        return !0
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        this.m_nConfidence = b.V3ii();
        this.m_nEval = b.V3in();
        this.m_nDepth = b.readByte();
        this.m_nFlags = b.readByte();
        for (var d = b.V3ig(), c = 0; c < CB.V2c9.prototype.HASH_LINE_LEN && c < d; ++c)
            this.m_aLine[c] = b.V3ig();
        this.m_nEngineId = b.V3ii();
        this.m_nUserId = b.V3ii();
        this.m_nTimeStamp = b.V3ig();
        this.V2d9 = b.V3ig();
        this.m_bReasonableDepth = b.V3iq();
        this.m_nRankingListWeight = b.V3ii();
        b.endSizedRead();
        return !0
    }
    ;
    e.prototype.Empty = function() {
        return !0
    }
    ;
    e.prototype.V2da = function(b) {
        return !1
    }
    ;
    e.prototype.V2db = function() {
        for (var b = 0; b < HASH_LINE_LEN; ++b)
            ;
        return "??"
    }
    ;
    e.prototype.V2dc = function(b) {
        m_nTimeStamp = TBrainTimeStamp.DateToUShort(b)
    }
    ;
    e.prototype.V2dd = function() {
        return TBrainTimeStamp.UShortToDate(m_nTimeStamp)
    }
    ;
    e.prototype.V2de = function(b, d) {
        return !1
    }
    ;
    e.prototype.V2df = function(b, d) {
        return !1
    }
    ;
    e.prototype.V2dg = function(b, d) {
        return !0
    }
    ;
    e.prototype.V2ch = function(b, d) {
        return !1
    }
    ;
    e.prototype.V2dh = function(b, d) {
        return !1
    }
    ;
    e.prototype.V2di = function() {
        return 29E3 < Math.Abs(m_nEval)
    }
    ;
    e.prototype.V2dj = function(b) {
        return 0 != V2dk() ? 100 * b / V2dk() + .5 : 0
    }
    ;
    e.prototype.Count = function() {
        return TBRAIN.HASH_LINE_LEN
    }
    ;
    e.prototype.V2bx = function() {}
    ;
    e.prototype.GetNEval = function() {
        return 0
    }
    ;
    e.prototype.V2dl = function(b) {
        m_nEval = b;
        V2cq(TBRAIN.EVAL_MOVE_NO, !1)
    }
    ;
    e.prototype.GetNMoveNo = function() {
        return 0
    }
    ;
    e.prototype.V2dm = function(b) {
        m_nEval = b;
        V2cq(TBRAIN.EVAL_MOVE_NO, !0)
    }
    ;
    e.prototype.GetNDepth = function() {
        return m_nDepth
    }
    ;
    e.prototype.V2dn = function(b) {
        m_nDepth = b
    }
    ;
    e.prototype.V2do = function() {
        return m_nConfidence
    }
    ;
    e.prototype.V2dp = function(b) {
        m_nConfidence = b
    }
    ;
    e.prototype.GetMove = function(b) {
        return 0
    }
    ;
    e.prototype.V2ch = function(b, d) {}
    ;
    e.prototype.IsEval = function() {
        return !V2co(TBRAIN.EVAL_MOVE_NO)
    }
    ;
    e.prototype.IsMoveNo = function() {
        return V2co(TBRAIN.EVAL_MOVE_NO)
    }
    ;
    e.prototype.V2dq = function() {
        return m_nEngineId
    }
    ;
    e.prototype.V2dr = function(b) {
        m_nEngineId = b
    }
    ;
    e.prototype.V2ds = function() {
        return m_nUserId
    }
    ;
    e.prototype.V2dt = function(b) {
        m_nUserId = b
    }
    ;
    e.prototype.V2du = function() {
        return V2co(TBRAIN.USER_IS_LOGIN)
    }
    ;
    e.prototype.V2dv = function(b) {
        V2cq(TBRAIN.USER_IS_LOGIN, b)
    }
    ;
    e.prototype.V2dw = function(b) {
        m_nTimeStamp = b
    }
    ;
    e.prototype.V2dk = function() {
        return V2d9
    }
    ;
    e.prototype.V2dx = function() {
        return m_bReasonableDepth
    }
    ;
    e.prototype.V2dy = function(b) {
        m_bReasonableDepth = b
    }
    ;
    e.prototype.V2dz = function() {
        return V2d9 >= TBrainConstants.CALCTIME_DISCOVERY
    }
    ;
    e.prototype.V2e0 = function() {
        return V2d9 >= TBrainConstants.CALCTIME_DEEP
    }
    ;
    e.prototype.V2e1 = function() {
        return m_nRankingListWeight
    }
    ;
    e.prototype.V2e2 = function(b) {
        m_nRankingListWeight = b
    }
    ;
    return e
}();
"use strict";
CB.V2e3 = function() {
    var e = function() {
        this.m_aMachineGuid = new CBGuid;
        this.m_nCpus = this.m_nSecs = this.m_nFlags = 0;
        this.m_nVariations = 1;
        this.m_nNodes = this.m_nMoveNo = this.m_nHashSize = 0;
        this.m_fMachineFact = this.m_fEngineFact = 1
    };
    e.prototype.V2e4 = function() {
        return 0
    }
    ;
    e.prototype.GetFCalcDepth = function(b) {
        return 0
    }
    ;
    e.prototype.V2e5 = function() {
        return TBServerBinder(GetFCalcDepth(uint(m_nSecs + 1)) * m_fEngineFact * m_fMachineFact)
    }
    ;
    e.prototype.GetNTodaysTimeStamp = function() {
        return TBrainTimeStamp.GetNTodaysTimeStamp()
    }
    ;
    e.prototype.WriteToDataBuffer = function(b) {
        b.BeginSizedWrite();
        m_aMachine.WriteToDataBuffer(b);
        b.WriteString(m_strEngine);
        b.WriteUnsigned(m_nFlags);
        pos.WriteToDataBuffer(b);
        m_aMove.WriteToDataBuffer(b);
        b.WriteUnsigned(m_nSecs);
        b.WriteUnsigned(m_nCpus);
        b.WriteUnsigned(m_nVariations);
        m_aMachineGuid.WriteToDataBuffer(b);
        b.WriteUnsigned(m_nHashSize);
        b.WriteData(m_cCheckSum, m_cCheckSum.Length);
        b.WriteInt(m_nMoveNo);
        b.WriteInt64(m_nNodes);
        b.EndSizedWrite();
        return !0
    }
    ;
    e.prototype.V3hq = function(b) {
        b.BeginSizedRead();
        m_aMachine.ReadFromDataBuffer(b);
        m_strEngine = b.ReadString();
        m_nFlags = b.ReadUnsigned();
        pos.ReadFromDataBuffer(b);
        m_aMove.ReadFromDataBuffer(b);
        m_nSecs = b.ReadUnsigned();
        m_nCpus = b.ReadUnsigned();
        16 < m_nCpus && (m_nCpus = 16);
        m_nVariations = Math.Min(64, Math.Max(1, b.ReadUnsigned()));
        1 > m_nVariations && (m_nVariations = 1);
        m_aMachineGuid.ReadFromDataBuffer(b);
        m_nHashSize = b.ReadUnsigned();
        m_nMoveNo = b.ReadInt();
        m_nNodes = b.ReadInt64();
        b.EndSizedRead();
        return !0
    }
    ;
    e.prototype.V2e6 = function() {
        return new CBGame
    }
    ;
    e.prototype.V2e7 = function() {
        return m_aMachine
    }
    ;
    e.prototype.V2e8 = function(b) {
        m_aMachine = b
    }
    ;
    e.prototype.V2e9 = function() {
        return m_strEngine
    }
    ;
    e.prototype.V2ea = function(b) {
        m_strEngine = b
    }
    ;
    e.prototype.V2eb = function() {
        return m_aMachineGuid
    }
    ;
    e.prototype.V2ec = function(b) {
        m_aMachineGuid = b
    }
    ;
    e.prototype.V2ed = function(b) {
        m_nSecs = b
    }
    ;
    e.prototype.V2ee = function() {
        return m_nSecs
    }
    ;
    e.prototype.V2ef = function() {
        return pos
    }
    ;
    e.prototype.V2eg = function() {
        return new V2eh(pos,GetNMoveNo())
    }
    ;
    e.prototype.V2ei = function(b) {
        pos.V2bz(b);
        b.SetMoveNo(GetNMoveNo())
    }
    ;
    e.prototype.V2ej = function(b) {
        pos = new HashPosition(b);
        m_nMoveNo = b.GetMoveNo()
    }
    ;
    e.prototype.GetMove = function(b) {
        return TBServerBinderm_aMove.GetMove(b)
    }
    ;
    e.prototype.GetNEval = function() {
        return m_aMove.GetNEval()
    }
    ;
    e.prototype.GetNMoveNo = function() {
        return m_nMoveNo
    }
    ;
    e.prototype.V2dm = function(b) {
        m_nMoveNo = b
    }
    ;
    e.prototype.GetNDepth = function() {
        return m_aMove.GetNDepth()
    }
    ;
    e.prototype.IsEval = function() {
        return m_aMove.IsEval()
    }
    ;
    e.prototype.IsMoveNo = function() {
        return m_aMove.IsMoveNo()
    }
    ;
    e.prototype.V2ek = function() {
        return m_nCpus
    }
    ;
    e.prototype.V2el = function(b) {
        m_nCpus = TBServerBinderr
    }
    ;
    e.prototype.V2em = function() {
        return m_nVariations
    }
    ;
    e.prototype.V2en = function(b) {
        m_nVariations = TBServerBinderr
    }
    ;
    e.prototype.V2eo = function(b) {
        m_fEngineFact = b
    }
    ;
    e.prototype.V2ep = function(b) {
        m_fMachineFact = b
    }
    ;
    e.prototype.V2eq = function(b) {
        V2cq(1, b)
    }
    ;
    e.prototype.V2er = function() {
        return V2co(1)
    }
    ;
    e.prototype.V2es = function(b) {
        V2cq(2, b)
    }
    ;
    e.prototype.V2et = function() {
        return V2co(2)
    }
    ;
    e.prototype.V2eu = function(b) {
        V2cq(65536, b)
    }
    ;
    e.prototype.V2ev = function() {
        return V2co(TBServerBinderHTR.HTR_UCI_ENGINE)
    }
    ;
    e.prototype.V2ew = function(b) {
        V2cq(256, b)
    }
    ;
    e.prototype.V2ex = function() {
        return V2co(TBServerBinderHTR.HTR_UNRELIABLE_DATA)
    }
    ;
    e.prototype.V2ey = function() {
        return V2co(TBServerBinderHTR.HTR_EVAL_NORMED)
    }
    ;
    e.prototype.V2ez = function(b) {
        V2cq(TBServerBinderHTR.HTR_EVAL_NORMED, b)
    }
    ;
    e.prototype.V2f0 = function(b) {}
    ;
    return e
}();
"use strict";
CB.V2f1 = function() {
    return function(e, b) {
        this.aBoard = e;
        this.sMove = b
    }
}();
"use strict";
CB.V2eh = function() {
    var e = function(b, d, c) {
        this.pos = new CB.HashPosition(b);
        this.m_nMoveNo = d;
        this.V2f4 = this.V2f3 = this.V2f2 = 0;
        this.m_strTag = c
    };
    e.prototype.V2bw = function() {
        return pos.V2bw()
    }
    ;
    e.prototype.V2c3 = function() {
        return pos.V2c3()
    }
    ;
    e.prototype.V2c4 = function() {
        return pos.V2c4()
    }
    ;
    e.prototype.V2f5 = function() {
        return m_strTag
    }
    ;
    e.prototype.V2f6 = function(b) {
        m_strTag = b
    }
    ;
    e.prototype.WriteToDataBuffer = function(b) {
        pos.WriteToDataBuffer(b);
        b.BeginSizedWrite();
        b.WriteInt(m_nMoveNo);
        b.WriteString(m_strTag);
        b.EndSizedWrite()
    }
    ;
    e.prototype.ReadFromDataBuffer = function(b) {
        if (!pos.ReadFromDataBuffer(b))
            return !1;
        b.BeginSizedRead();
        m_nMoveNo = b.ReadInt();
        m_strTag = b.ReadString();
        var d = 0 <= m_nMoveNo;
        b.EndSizedRead();
        return d
    }
    ;
    e.prototype.V2f7 = function() {
        var b = pos.V2f7();
        b.SetMoveNo(m_nMoveNo);
        return b
    }
    ;
    return e
}();
"use strict";
CB.TBRAIN = {
    HASH_LINE_LEN: 3,
    HASH_LINE_CNT: 3,
    V2f8: 63,
    EVAL_MOVE_NO: 1,
    USER_IS_LOGIN: 2,
    V2f9: 4,
    V2fa: 8,
    V2fb: 16
};
CB.V2c9 = function() {
    var e = function() {
        this.move = new CB.V17g;
        this.m_performanceStats = new CB.GamePerformanceStats;
        this.m_nFlags = 0
    };
    e.prototype.HASH_LINE_LEN = 3;
    e.prototype.HASH_LINE_CNT = 3;
    e.prototype.CALCTIME_DEEP = 370;
    e.prototype.getMoveRecord = function() {
        return this.move
    }
    ;
    e.prototype.getLine = function(b) {
        CBDebug.assert(b < CB.TBRAIN.HASH_LINE_LEN);
        return b < CB.TBRAIN.HASH_LINE_LEN ? m_aLine[b] : 0
    }
    ;
    e.prototype.getLine = function(b, d) {
        CBDebug.assert(d < CB.TBRAIN.HASH_LINE_LEN);
        m_aLine[d] = b
    }
    ;
    e.prototype.getNEval = function() {
        return this.m_nEval
    }
    ;
    e.prototype.V2fc = function() {
        return this.m_nTimeStamp
    }
    ;
    e.prototype.V2fd = function(b) {
        m_nTimeStamp = b
    }
    ;
    e.prototype.hasEval = function() {
        return CB.V7r(this.m_nFlags, 1) || 0 != this.m_nEval
    }
    ;
    e.prototype.V2fe = function(b) {
        this.m_nFlags = b ? this.m_nFlags | 1 : this.m_nFlags & -2
    }
    ;
    e.prototype.V2ff = function() {}
    ;
    e.prototype.V2fg = function(b) {}
    ;
    e.prototype.V2fh = function() {
        return m_performanceStats
    }
    ;
    e.prototype.getNGames = function() {
        return this.m_performanceStats.getNGames()
    }
    ;
    e.prototype.getEloAv = function() {
        return this.m_performanceStats.getSortEloAv()
    }
    ;
    e.prototype.V2fi = function(b) {
        this.move = b;
        this.m_nFlags = this.m_nTimeStamp = this.m_nEval = 0;
        this.m_aLine = [];
        this.m_performanceStats.V18k()
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.BeginSizedWrite();
        b.WriteInt64(m_nVisits);
        b.WriteBYTE(this.move.V185);
        b.WriteBYTE(this.move.V186);
        b.WriteBYTE(this.move.V2fj);
        b.WriteBYTE(this.move.V2fk);
        b.WriteShort(this.m_nEval);
        b.WriteUShort(this.m_nTimeStamp);
        b.WriteShort(this.m_nFlags);
        this.m_performanceStats.WriteToDataBuffer(b);
        b.EndSizedWrite()
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        this.m_nVisits = b.V3ik();
        this.move.from = b.readUint8();
        this.move.to = b.readUint8();
        this.move.V2fj = b.readUint8();
        this.move.prom = b.readUint8();
        this.m_nEval = b.V3in();
        this.m_nTimeStamp = b.V3ig();
        this.m_nFlags = b.V3in();
        this.m_performanceStats.V3hq(b);
        this.m_aLine = [];
        for (var d = 0; d < CB.V2c9.prototype.HASH_LINE_LEN; ++d) {
            var c = b.V3ig();
            this.m_aLine.push(c)
        }
        b.endSizedRead();
        return !0
    }
    ;
    e.prototype.V2fl = function() {
        return TBrainTimeStamp.UShortToDate(m_nTimeStamp)
    }
    ;
    e.prototype.getNVisits = function() {
        return this.m_nVisits
    }
    ;
    e.V2fm = function() {
        var b = new CB.Date;
        b.V10e();
        b.setYear(b.getYear() - 1945);
        return b.V10f()
    }
    ;
    e.prototype.toString = function() {
        return this.move.toString() + ", N=" + this.getNGames() + ",ev=" + this.m_nEval
    }
    ;
    return e
}();
"use strict";
CB.V1tt = function() {
    var e = function() {
        this.moves = []
    };
    e.prototype.writeToDataBuffer = function(b) {
        b.BeginSizedWrite();
        b.WriteInt(GetNFormat());
        b.WriteUnsigned(Count);
        for (var d = 0; d < Count; d++)
            this[d].WriteToDataBuffer(b);
        b.EndSizedWrite()
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        b.readInt();
        this.clear();
        for (var d = b.readInt(), c = 0; c < d; c++) {
            var f = new CB.V2c9;
            f.V3hq(b);
            this.add(f)
        }
        b.endSizedRead();
        return !0
    }
    ;
    e.prototype.clear = function() {
        this.moves = []
    }
    ;
    e.prototype.count = function() {
        return this.moves.length
    }
    ;
    e.prototype.add = function(b) {
        this.moves.push(b)
    }
    ;
    e.prototype.get = function(b) {
        return this.moves[b]
    }
    ;
    e.prototype.V2fn = function() {
        return 2
    }
    ;
    e.prototype.getMaxGames = function() {
        for (var b = 0, d = 0; d < this.moves.length; d++)
            this.moves[d].getNGames() > b && (b = this.moves[d].getNGames());
        return b
    }
    ;
    e.V1tu = function(b, d) {
        b.sort(function(c, f) {
            return d ? c.m_nEval - f.m_nEval : f.m_nEval - c.m_nEval
        })
    }
    ;
    e.prototype.V1tv = function(b) {
        if (0 == this.moves.length)
            return b;
        for (var d = this.moves[0].m_nEval, c = 0; c < this.moves.length; c++)
            if (50 > Math.abs(this.moves[c].m_nEval - d)) {
                if (this.moves[c].move.equals(b))
                    return b
            } else
                break;
        return this.moves[0].move
    }
    ;
    return e
}();
"use strict";
CB.V2fo = function() {
    var e = function() {};
    e.prototype.V2fp = function() {
        return m_strName
    }
    ;
    e.prototype.V2fq = function() {
        return m_aRank
    }
    ;
    e.prototype.V2fr = function(b) {
        m_aRank = b
    }
    ;
    e.prototype.V2fs = function() {
        return m_nAccountAgeDays
    }
    ;
    e.prototype.V2ft = function(b) {
        m_nAccountAgeDays = b
    }
    ;
    e.prototype.V2fu = function() {
        return V2co(1)
    }
    ;
    e.prototype.V2fv = function() {
        return V2co(2)
    }
    ;
    e.prototype.V2fw = function() {
        return V2co(4)
    }
    ;
    e.prototype.V2fx = function() {
        return m_aGeoCoords
    }
    ;
    e.prototype.V2fy = function() {
        return m_nFlags
    }
    ;
    e.prototype.V2fz = function() {
        return m_nUFDFlags
    }
    ;
    return e
}();
"use strict";
CB.V2g0 = function() {
    var e = function() {
        this.pos = new CB.HashPosition;
        this.moveList = new CB.V1tt
    };
    e.prototype.read = function() {}
    ;
    e.prototype.V2g1 = function(b) {
        b = b.GetPDataBuf();
        b.Rewind();
        ReadFromDataBuffer(b)
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        pos.writeToDataBuffer(b);
        b.V3if(m_nVisits);
        moveList.writeToDataBuffer(b);
        b.wndSizedWrite()
    }
    ;
    e.prototype.V3hq = function(b) {
        b.beginSizedRead();
        this.pos.V3hq(b);
        this.m_nVisits = b.V3ik();
        this.moveList.V3hq(b);
        b.endSizedRead();
        return !0
    }
    ;
    e.prototype.toString = function() {
        return ""
    }
    ;
    e.prototype.V2g2 = function() {
        var b = new TeraBrainMessage(SocketsMessageType.TERABRAIN_BOOKINFO);
        WriteToDataBuffer(b.GetPDataBuf());
        return b
    }
    ;
    e.prototype.getNVisits = function() {
        return m_nVisits
    }
    ;
    e.prototype.V2g3 = function() {
        return this.moveList
    }
    ;
    e.prototype.V2g4 = function(b) {
        moveList = b
    }
    ;
    e.prototype.V2g5 = function() {
        return pos
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.Server.TeraBrainLobby");
CB.Server.TeraBrainLobby = function() {
    var e = function() {
        this.V2g7 = this.V2g6 = 0;
        this.V2g8 = !1;
        this.V2g9 = 0;
        this.V2gb = this.V2ga = !1;
        this.V2gc = 0;
        this.V2gf = this.V2ge = this.V2gd = !1;
        this.V2gg = 1;
        this.V2gh = !1;
        this.m_nEngineId = this.V2gi = 0;
        this.V2gj = [];
        this.V2gk = {};
        this.V2gl = new CB.Timer(function() {
            this.V2gm()
        }
        .bind(this),2E3);
        this.name = "TBrain";
        this.V2gn = new CB.V1k5
    };
    CB.inherit(e, CB.Server.Vam);
    e.prototype.execCommand = function(b) {
        if (!this.hasIdReceived)
            return !1;
        switch (b) {
        case CB.V2go.V2gp:
            this.V8s(!0)
        }
    }
    ;
    e.prototype.Vby = function() {}
    ;
    e.prototype.Vbg = function(b) {
        b.documentUrl = document.URL;
        V3ir.isAnyPlugin || (b.documentUrl += " (off)")
    }
    ;
    e.prototype.Vc4 = function(b) {
        this.V2ar && this.V2ar()
    }
    ;
    e.prototype.Vbw = function(b) {
        console.log("TBrain: " + (lm.SERVER_LOGGED_YOU_OFF + " " + b))
    }
    ;
    e.prototype.request = function(b, d, c, f, g, h, k) {
        this.V2gd || (this.V2gr = new CB.ClientMachineInfo,
        d = new CB.V2gs(d,c,this.V2gr),
        d.setIsNormedEval(!0),
        d.setCountVisit(!f),
        d.setConfirmRequested(g),
        d.setIsHumanServerGame(h),
        d.setIsMultiRequest(k),
        f = d.V2g2(),
        f.setVal(b),
        this.send(f))
    }
    ;
    e.prototype.requestPosInfo = function(b) {
        this.hasIdReceived && (this.request(1, b, 3, !0, !1, !0),
        this.V2gl.runOnce(2E3))
    }
    ;
    e.prototype.V2gt = function(b, d, c) {
        this.hasIdReceived && (this.V2gk[b] = c,
        this.request(b, d, 3, !0, !1, !0))
    }
    ;
    e.prototype.requestAllMoves = function(b, d, c, f, g) {
        if (this.hasIdReceived) {
            var h = this.V2gn.track(b);
            this.request(f || 1, b, 2, h, c, d, g)
        }
    }
    ;
    e.requestHotPosition = function() {
        var b = new CB.TeraBrainMessage(SocketsMessageType.TERABRAIN_USER);
        b.setUserType(TeraBrainUserMsgType.TBUSER_REQ_HOTPOSITION);
        this.send(b)
    }
    ;
    e.prototype.V2gu = function(b) {
        var d = new CB.WebSockMessage(CB.V3b.TERABRAIN_USER);
        d.setUserType(CB.TeraBrainUserMsgType.V2gv);
        d.buf.V3i3(b.length);
        for (var c = 0; c < b.length; c++)
            d.buf.V3i3(b[c]);
        this.send(d)
    }
    ;
    e.prototype.V8o = function(b) {
        if (!this.Vc5(b))
            switch (b.getType()) {
            default:
                TRACE("Unhandled: " + b.toString());
                break;
            case CB.V3b.V4g:
                this.V2gw();
                break;
            case CB.V3b.V3w:
                break;
            case CB.V3b.TERABRAIN_BOOKINFO:
                this.V2gx(b);
                break;
            case CB.V3b.V5q:
                this.V2gy(b);
                break;
            case CB.V3b.TERABRAIN_USER:
                this.V2gz(b)
            }
    }
    ;
    e.prototype.V2gz = function(b) {
        switch (b.getUserType()) {
        case CB.TeraBrainUserMsgType.V2h0:
            this.V2h1(b);
            break;
        case CB.TeraBrainUserMsgType.V2h4:
            this.V2h5(b)
        }
    }
    ;
    e.prototype.V2gx = function(b) {
        this.V2hk = new CB.V2g0;
        this.V2hk.V3hq(b.getBuf());
        b = {
            position: this.V2hk.pos.getPosition(),
            moves: this.V2hk.moveList.moves,
            ticket: b.getVal(),
            tbInfo: this.V2hk
        };
        this.fireOnLiveBook(b)
    }
    ;
    e.prototype.V2h5 = function(b) {
        this.fireOnLiveBook({
            moves: [],
            ticket: b.getVal()
        })
    }
    ;
    e.prototype.V2gw = function() {
        this.Vb3 = !0;
        this.V2hl ? (this.V2hl(),
        this.V2hl = null) : this.requestPosInfo(new CB.Position)
    }
    ;
    e.prototype.V2gy = function(b) {
        this.V2gl.stop();
        this.V2hm = new CB.V2c6;
        this.V2hm.V3hq(b.getBuf());
        for (var d = [], c = 0; c < CB.V2c9.prototype.HASH_LINE_CNT; ++c)
            null == this.V2gj[this.V2hm.move[c].m_nEngineId] ? d.push(this.V2hm.move[c].m_nEngineId) : this.V2hm.move[c].EngineName = this.V2gj[this.V2hm.move[c].m_nEngineId];
        0 < d.length ? this.V2gu(d) : (d = this.V2hm.pos.getPosition(),
        V3ir.panelMgr.tbPanel && V3ir.panelMgr.tbPanel.update(d, this.V2hm),
        this.V2gk[b.getVal()] && (this.V2gk[b.getVal()](b.getVal(), this.V2hm),
        delete this.V2gk[b.getVal()]),
        this.fireOnTBData({
            position: d,
            table: this.V2hm
        }))
    }
    ;
    e.prototype.V2gm = function() {
        this.V2hm || (this.V2hm = new CB.V2c6);
        var b = CB.V2c6.V2c7();
        V3ir.panelMgr.tbPanel && V3ir.panelMgr.tbPanel.update(this.V2hm.pos.getPosition(), b)
    }
    ;
    e.prototype.V2h1 = function(b) {
        for (var d = b.getBuf().V3ii(), c = 0; c < d; c++) {
            b.getBuf().beginSizedRead();
            var f = b.getBuf().V3ht(255)
              , g = b.getBuf().V3ii();
            this.V2gj[g] = f;
            b.getBuf().readFloat64();
            b.getBuf().endSizedRead()
        }
        if (this.V2hm) {
            for (b = 0; b < CB.V2c9.prototype.HASH_LINE_CNT; ++b)
                this.V2hm.move && this.V2hm.move[b] && (this.V2hm.move[b].EngineName = this.V2gj[this.V2hm.move[b].m_nEngineId]);
            b = this.V2hm.pos.getPosition();
            V3ir.panelMgr.tbPanel && (V3ir.panelMgr.tbPanel.update(b, this.V2hm),
            this.V2gl.stop(),
            this.fireOnTBData({
                position: b,
                table: this.V2hm
            }))
        }
    }
    ;
    e.prototype.V2hn = function() {
        var b = new TeraBrainMessage(SocketsMessageType.TERABRAIN_USER);
        b.SetUserType(TeraBrainUserMsgType.TBUSER_CHESSSERVER_LOGIN);
        var d = b.GetPDataBuf();
        d.WriteString(m_strUsername);
        d.WriteString(m_strPassword);
        V2ho();
        m_sMachineGuid.IsZero() ? CBDebug.assert(!1) : (this.m_sMachineGuid.WriteToDataBuffer(d),
        this.send(b))
    }
    ;
    e.prototype.V2hp = function(b) {
        b = new TeraBrainMessage(SocketsMessageType.TERABRAIN_USER);
        b.SetUserType(TeraBrainUserMsgType.TBUSER_CHESSSERVER_LOGOUT);
        var d = b.GetPDataBuf();
        this.V2ho();
        m_sMachineGuid.IsZero() ? CBDebug.assert(!1) : (this.m_sMachineGuid.WriteToDataBuffer(d),
        Send(b));
        this.V2g8 = !1;
        V2hq()
    }
    ;
    e.prototype.V2hq = function() {
        this.V2g9 = 0;
        this.V2ga = !1;
        this.m_nUserId = 0
    }
    ;
    e.prototype.V2ho = function() {
        m_sMachineGuid.IsZero();
        return m_sMachineGuid
    }
    ;
    e.prototype.V2ds = function() {
        return m_nUserId
    }
    ;
    e.prototype.V2hr = function() {
        return m_nEngineId
    }
    ;
    e.prototype.V2hs = function() {
        return !0
    }
    ;
    e.prototype.V2ht = function() {
        return !1
    }
    ;
    e.prototype.V2hu = function() {
        return 30
    }
    ;
    e.prototype.V6x = function() {
        return !0
    }
    ;
    e.prototype.V6y = function() {
        return !0
    }
    ;
    e.prototype.V29a = function(b) {
        var d = new CB.ChatData;
        d.fromSocketsMsg(b);
        d.V7q() ? (b = this.V2hv.V2hw(d.V7w()),
        b.length && (d.strMsg = "(" + b + "): " + d.strMsg),
        V3ir.panelMgr.chatOut(d.toString(), "LogKibitzChat")) : V3ir.panelMgr.chatOut(d.toString())
    }
    ;
    V3i1.initForListeners(e);
    e.prototype.V2hx = function() {
        for (var b = 0; 10 > b; b++)
            ;
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "LiveBook");
    V3i1.addEvent(e, "TBData");
    V3i1.addEvent(e, "LiveBookDisplay");
    return e
}();
CB.TeraBrainUserMsgType = {
    V2gv: 1400,
    V2h0: 1401,
    V2hy: 1402,
    V2h2: 1403,
    V2hz: 1404,
    V2i0: 1420,
    TBUSER_CHESSSERVER_LOGIN: 1421,
    TBUSER_CHESSSERVER_LOGOUT: 1422,
    V2ha: 1423,
    V2h3: 1424,
    TBUSER_REQ_HOTPOSITION: 1425,
    V2h4: 1426,
    V2i1: 1427,
    V2hc: 1428,
    V2i2: 1429,
    V2i3: 1430,
    V2hd: 1431,
    V2i4: 1432,
    V2he: 1433,
    V2i5: 1434,
    V2hf: 1435,
    V2i6: 1436,
    V2hg: 1437,
    V2i7: 1438,
    V2hh: 1439,
    V2h7: 1440,
    V2i8: 1441,
    V2h8: 1442,
    V2i9: 1443,
    V2h9: 1444,
    V2h6: 1445,
    V2ia: 1460,
    V2hb: 1461,
    V2ib: 1462,
    V2ic: 1463,
    V2id: 1464,
    V2ie: 1465,
    V2if: 1466,
    V2hi: 1467,
    V2ig: 1468,
    V2hj: 1469,
    V2ih: 1480,
    V2ii: 1481,
    V2ij: 1481,
    V2ik: 1482,
    toString: function(e) {
        for (var b in this)
            if (this[b] == e)
                return b;
        return "Unknown TBUserMsgId: " + e
    }
};
"use strict";
CB.V2gs = function() {
    var e = function(b, d, c) {
        this.V2il = d;
        this.V2im = new CB.HashPosition(b);
        this.V2in = c;
        this.m_nMoveNo = b.getMoveNum();
        this.V2io = !0;
        this.V2iq = this.V2ip = !1;
        this.m_nFlags = 0
    };
    e.V2ir = function() {
        return this.V2il == TeraBrainRequestType.TBREQUEST_LB_POSINFO
    }
    ;
    e.prototype.V2is = function() {
        return this.V2il == TeraBrainRequestType.TBREQUEST_LB_ALLMOVES
    }
    ;
    e.prototype.V2it = function() {
        return this.V2il == TeraBrainRequestType.TBREQUEST_SEARCH_INFO
    }
    ;
    e.prototype.V2iu = function() {
        return this.V2il == TeraBrainRequestType.TBREQUEST_LB_UPLOADONLY
    }
    ;
    e.prototype.V2iv = function() {
        return this.V2im
    }
    ;
    e.prototype.getMoveNo = function() {
        return this.m_nMoveNo
    }
    ;
    e.prototype.V2iw = function(b) {
        this.m_nMoveNo = b
    }
    ;
    e.prototype.V2ix = function() {
        return new CB.V2eh(GetHashPos(),GetMoveNo())
    }
    ;
    e.prototype.V2iy = function() {
        return this.V2io
    }
    ;
    e.prototype.setCountVisit = function(b) {
        this.V2io = b || !1
    }
    ;
    e.prototype.V2iz = function() {
        return this.V2ip
    }
    ;
    e.prototype.setConfirmRequested = function(b) {
        this.V2ip = b || !1
    }
    ;
    e.prototype.V2j0 = function() {
        return this.V2iq
    }
    ;
    e.prototype.setIsHumanServerGame = function(b) {
        this.V2iq = b || !1
    }
    ;
    e.prototype.V2j1 = function() {
        return this.V2co(1)
    }
    ;
    e.prototype.setIsNormedEval = function(b) {
        this.V2cq(1, b)
    }
    ;
    e.prototype.setIsMultiRequest = function(b) {
        this.V2cq(2, b)
    }
    ;
    e.prototype.V2cq = function(b, d) {
        this.m_nFlags = d ? this.m_nFlags | b : this.m_nFlags & ~b
    }
    ;
    e.prototype.V2co = function(b) {
        return 0 != (this.m_nFlags & b)
    }
    ;
    e.prototype.V2g1 = function(b) {
        b = b.getPDataBuf();
        b.rewind();
        this.V3hq(b)
    }
    ;
    e.prototype.V2g2 = function() {
        var b = new CB.WebSockMessage(CB.V3b.V5o);
        this.writeToDataBuffer(b.buf);
        return b
    }
    ;
    e.prototype.writeToDataBuffer = function(b) {
        b.beginSizedWrite();
        b.V3i3(this.V2il);
        this.V2im.writeToDataBuffer(b);
        this.V2in.writeToDataBuffer(b);
        b.V3i3(this.m_nMoveNo);
        b.V3ip(this.V2io);
        b.V3ip(this.V2ip);
        b.V3ip(this.V2iq);
        b.V3i3(this.m_nFlags);
        b.endSizedWrite()
    }
    ;
    e.prototype.V3hq = function(b) {
        b.BeginSizedRead();
        this.V2il = TeraBrainRequestType(b.ReadInt());
        this.V2im.ReadFromDataBuffer(b);
        this.V2in.ReadFromDataBuffer(b);
        this.m_nMoveNo = b.ReadUint32();
        this.V2io = b.ReadBool();
        this.V2ip = b.ReadBool();
        this.V2iq = b.ReadBool();
        this.m_nFlags = b.ReadUint32();
        b.EndSizedRead();
        return !0
    }
    ;
    return e
}();
"use strict";
CB.TBrainTimeStamp = function() {
    var e = function() {};
    e.prototype.UShortToDate = function(b) {
        var d = b & 31
          , c = b >> 5 & 15;
        b = 1945 + (b >> 9 & 127);
        return new CBDate(Math.Min(CBDate.Today().GetDate(), (new CBDate(b,c,d)).GetDate()))
    }
    ;
    e.prototype.DateToUShort = function(b) {
        var d = Math.Max(1945, b.GetYear());
        return ushort(b.GetDay() | b.GetMonth() << 5 | d - 1945 << 9)
    }
    ;
    e.prototype.GetNTodaysTimeStamp = function() {
        return DateToUShort(CBDate.Today())
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.V2j2");
CB.V2j2 = function() {
    var e, b = function(g, h, k, l, m, n) {
        this.V2j3 = localforage.createInstance({
            name: "Textures"
        });
        this.V2j4 = this.V2j5(g);
        this.V2j6 = this.V2j5(h);
        this.margin = this.V2j5(k);
        this.background = this.V2j5(l);
        this.callOnSquaresLoaded = function() {}
        ;
        this.callOnBackgroundLoaded = function() {}
        ;
        this.V2j6.V13y = this.V2j7.bind(this);
        this.V2j4.V13y = this.V2j7.bind(this);
        this.margin.V13y = this.V2j7.bind(this);
        this.background.V13y = this.V2j8.bind(this);
        this.V2j9 = 0;
        this.V2ja = Array(64);
        this.V2jb = Array(64);
        this.clrCoordinates = m;
        this.clrMarginSepLine = n
    };
    b.prototype.destroy = function() {
        this.callOnSquaresLoaded = this.callOnBackgroundLoaded = null;
        this.removeAllListeners();
        this.V2jc();
        b.clearCache()
    }
    ;
    b.clearCache = function() {
        c = e = 0;
        f = {}
    }
    ;
    b.prototype.isBoardValid = function() {
        return this.V2j6.loaded && this.V2j4.loaded && this.margin.loaded
    }
    ;
    b.prototype.getSquare = function(g, h) {
        try {
            var k = CB.Square.V170(g);
            if (!(0 > g || 63 < g))
                return h == this.V2j9 ? k ? void 0 === this.V2ja[g] && (this.V2ja[g] = this.V2jd(g, h, k)) : void 0 === this.V2jb[g] && (this.V2jb[g] = this.V2jd(g, h, k)) : (this.V2j9 = h,
                this.V2ja = Array(64),
                this.V2jb = Array(64),
                k ? this.V2ja[g] = this.V2jd(g, h, k) : this.V2jb[g] = this.V2jd(g, h, k)),
                k ? this.V2ja[g] : this.V2jb[g]
        } catch (l) {
            CB.V3("Tex:getSquare", l)
        }
    }
    ;
    b.prototype.drawSquare = function(g, h, k, l) {
        (h = this.getSquare(h, k)) && h.draw(g, l.x, l.y)
    }
    ;
    b.prototype.V2je = function(g, h) {
        var k = document.createElement("canvas");
        k.width = k.height = h;
        k = k.getContext("2d");
        this.getSquare(g, h).draw(k, 0, 0);
        k.lineWidth = Math.max(1, h / 16);
        k.strokeStyle = this.V2jf();
        g = h - k.lineWidth;
        CB.V13l.V13q(k, k.lineWidth / 2, k.lineWidth / 2, g, g, Math.max(1, g / 4));
        g = new CB.V13x;
        g.V143(k, 0, 0, h, h);
        return g
    }
    ;
    b.prototype.V2jf = function() {
        return "hsla( 0, 10%, 10%, 0.4 )"
    }
    ;
    var d = {};
    CB.V158 && (d = new CB.V158);
    var c = e = 0;
    var f = {};
    b.prototype.createBackground = function(g, h, k) {
        V3ir.panelMgr.useBackgroundFilter() && d && 600 < h && 500 < k && this.background.loaded && (this.background.drawTiled(g, 0, 0, h, k),
        g = g.getImageData(0, 0, h, k),
        d.V15c(g, function(l) {
            e = l.width;
            c = l.height;
            f = l;
            this.fireOnBGReady()
        }
        .bind(this)))
    }
    ;
    b.prototype.V2jc = function() {
        d && d.isRunning && d.abort()
    }
    ;
    b.prototype.drawBackground = function(g, h, k) {
        this.background.loaded && (e == h && c == k ? g.putImageData(f, 0, 0) : this.background.drawTiled(g, 0, 0, h, k))
    }
    ;
    b.prototype.V2jg = function(g) {
        switch (g) {
        default:
            return CB.V1ge.V2ji;
        case CB.V1ge.V2jj:
            return CB.V1ge.V2jk;
        case CB.V1ge.V2jl:
            return CB.V1ge.V2jm;
        case CB.V1ge.V2jn:
            return CB.V1ge.V2jo;
        case CB.V1ge.V2jp:
            return CB.V1ge.V2jq;
        case CB.V1ge.V2jr:
            return CB.V1ge.V2js;
        case CB.V1ge.V2jt:
            return CB.V1ge.V2ju;
        case CB.V1ge.V2jv:
            return CB.V1ge.V2jw;
        case CB.V1ge.V2jx:
            return CB.V1ge.V2jy
        }
    }
    ;
    b.prototype.V2j5 = function(g) {
        return CB.V13x.V142(this.V2j3, g)
    }
    ;
    b.prototype.V2jz = function(g) {
        if (!g.url || 0 != g.url.search("blob:")) {
            var h = CB.V13l.V13s(g.image, g.width, g.height);
            if (h)
                try {
                    this.V2j3.setItem(g.url, h)
                } catch (k) {
                    CB.V3("Tex::_storeInLocalDB", k)
                }
        }
    }
    ;
    b.prototype.V2jd = function(g, h, k) {
        try {
            var l = Math.min(this.V2j6.width, this.V2j6.height)
              , m = h
              , n = 55;
            CB.Vq.V37() && (n = 10);
            h < n ? m = 2 * h : 128 < h && (m = .5 * h);
            if (this.V2j6 && this.V2j6.isValid()) {
                var p = Math.floor((l - m) / 7)
                  , q = 83 * CB.Square.V16x(g) % 7 * p
                  , t = 41 * CB.Square.V16w(g) % 7 * p;
                0 > q && (q = 0);
                0 > t && (t = 0);
                var v = k ? this.V2k0 : 0
                  , z = new CB.V13x;
                this.ctx && (h == m ? z.V143(this.ctx, q, t + v, h, h) : z.V144(this.ctx, q, t + v, h, h, m, m));
                return z
            }
        } catch (E) {
            CB.V3("Tex:cutSquare", E)
        }
    }
    ;
    b.prototype.V2j7 = function() {
        this.V2j4.loaded && this.V2j6.loaded && this.margin.loaded && (this.canvas = document.createElement("canvas"),
        this.canvas.width = Math.max(this.V2j4.width, this.V2j6.width),
        this.canvas.height = this.V2j4.height + this.V2j6.height,
        this.ctx = this.canvas.getContext("2d"),
        this.V2j4.draw(this.ctx, 0, 0),
        this.V2k0 = this.V2j4.height,
        this.V2j6.draw(this.ctx, 0, this.V2k0),
        this.callOnSquaresLoaded && this.callOnSquaresLoaded(),
        this.V2jz(this.V2j4),
        this.V2jz(this.V2j6),
        this.V2jz(this.margin))
    }
    ;
    b.prototype.V2j8 = function() {
        this.callOnBackgroundLoaded && this.callOnBackgroundLoaded();
        this.V2jz(this.background)
    }
    ;
    V3i1.initForListeners(b);
    V3i1.addEvent(b, "BGReady");
    return b
}();
"use strict";
CB.V2k1 = function() {
    var e, b = 0, d = function(f, g, h) {
        this.id = ++b;
        this.V2j3 = localforage.createInstance({
            name: "Pieces"
        });
        f || (f = "DiagramTTFritz");
        this.loaded = !1;
        this.sqSidePix = h;
        this.V2k2 = new CB.V13x;
        this.V2k3 = new CB.V4(this);
        this.V2k2 = CB.V13x.V142(this.V2j3, V3ir.mediaPathChess + "Pieces/" + f + g + ".png");
        this.V2k2.V13y = this.V2k4.bind(this);
        this.V2k5 = Array(6);
        this.V2k6 = Array(6);
        this.name = f
    }, c = [];
    d.getCachedFactory = function(f, g) {
        var h = c[g];
        h ? h.nCacheUse++ : (h = new CB.V2k1(f,g,g),
        h.nCacheUse = 0,
        c[g] = h,
        d.checkCache(g));
        return h
    }
    ;
    d.checkCache = function(f) {
        var g = 0;
        c.forEach(function() {
            g++
        });
        if (6 < g) {
            for (var h = 1E5, k = -1, l = 0; l < c.length; l++)
                c[l] && c[l].nCacheUse < h && l != f && (h = c[l].nCacheUse,
                k = l);
            0 <= k && delete c[k]
        }
    }
    ;
    d.resetCache = function() {
        c = []
    }
    ;
    d.prototype.isValid = function() {
        return void 0 !== this.V2k5[0]
    }
    ;
    d.prototype.addOnLoadedHandler = function(f) {
        return this.V2k3.add(f)
    }
    ;
    d.prototype.removeOnLoadedHandler = function(f) {
        this.V2k3.remove(f)
    }
    ;
    d.prototype.createSprite = function(f) {
        if (CB.Piece.side(f) == CB.V15e.BLACK) {
            var g = new CB.V147;
            g.V13z(this.V2k6[CB.Piece.V15k(f) - 1]);
            g.piece = f;
            return g
        }
        g = new CB.V147;
        g.V13z(this.V2k5[CB.Piece.V15k(f) - 1]);
        g.piece = f;
        return g
    }
    ;
    d.prototype.V2k7 = function() {
        this.ctx.clearRect(0, 0, this.sqSidePix, this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vcz - 1) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, 0, 0, this.sqSidePix, this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.W_KNIGHT - 1) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, 0, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vd3 - 1) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vd1 - 1) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, .6 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k8 = new CB.V147(this.ctx);
        this.V2k8.V13z(this.canvas.toDataURL());
        this.ctx.clearRect(0, 0, this.sqSidePix, this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vd0 - 3) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, 0, 0, this.sqSidePix, this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.B_KNIGHT - 3) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, 0, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vd4 - 3) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k2.draw(this.ctx, (CB.Piece.Vd2 - 3) * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, .7 * this.sqSidePix, .6 * this.sqSidePix, .3 * this.sqSidePix, .3 * this.sqSidePix);
        this.V2k9 = new CB.V147(this.ctx);
        this.V2k9.V13z(this.canvas.toDataURL())
    }
    ;
    d.prototype.getPromoSprite = function(f) {
        return f == CB.V15e.BLACK ? this.V2k9 : this.V2k8
    }
    ;
    d.prototype.V2k4 = function() {
        void 0 === e && (e = document.createElement("canvas"));
        this.canvas = e;
        this.canvas.width = this.sqSidePix;
        this.canvas.height = this.sqSidePix;
        this.ctx = this.canvas.getContext("2d");
        for (var f = 0; 6 > f; f++)
            this.ctx.clearRect(0, 0, this.sqSidePix, this.sqSidePix),
            this.V2k2.draw(this.ctx, f * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, 0, 0, this.sqSidePix, this.sqSidePix),
            this.V2k5[f] = this.canvas.toDataURL();
        for (f = 6; 12 > f; f++)
            this.ctx.clearRect(0, 0, this.sqSidePix, this.sqSidePix),
            this.V2k2.draw(this.ctx, f * this.sqSidePix, 0, this.sqSidePix, this.sqSidePix, 0, 0, this.sqSidePix, this.sqSidePix),
            this.V2k6[f - 6] = this.canvas.toDataURL();
        this.loaded = !0;
        this.V2k7();
        this.V2k3.V5();
        this.V2jz(this.V2k2)
    }
    ;
    d.prototype.V2jz = function(f) {
        if (!f.url || 0 != f.url.search("blob:")) {
            var g = CB.V13l.V13s(f.image, f.width, f.height);
            if (g)
                try {
                    this.V2j3.setItem(f.url, g)
                } catch (h) {
                    CB.V3("PieceFact::_storeInLocalDB", h)
                }
        }
    }
    ;
    return d
}();
"use strict";
var spriteCache = [];
CB.V2ka = function() {
    var e = function() {
        this.V2kb = [];
        this.V2kc = [];
        this.V2kd = []
    };
    e.clearCache = function() {
        spriteCache = []
    }
    ;
    e.prototype.V2ke = function(b) {
        var d = [0, 1, 2, 3, 3, 3, 10, 0, 0, 1, 2, 3, 3, 3, 10, 0, 0];
        this.V2kf = d.reduce(function(g, h) {
            return g + h
        });
        for (var c = CB.Piece.Vcx; c <= CB.Piece.Vd6; c++) {
            void 0 == this.V2kc[c] && (this.V2kc[c] = []);
            for (var f = 0; f < d[c]; f++)
                this.V2kc[c].push(b.createSprite(c))
        }
        this.V2k8 = b.getPromoSprite(CB.V15e.WHITE);
        this.V2k9 = b.getPromoSprite(CB.V15e.BLACK);
        this.sqSidePix = b.sqSidePix;
        this.name = b.name
    }
    ;
    e.prototype.create = function(b) {
        this.V2ke(b)
    }
    ;
    e.prototype.copy = function(b) {
        for (var d in b)
            b.hasOwnProperty(d) && (this[d] = b[d])
    }
    ;
    e.prototype.setup = function(b, d, c) {
        if (void 0 !== b) {
            if (this.V2kb.length)
                for (var f = 0; 64 > f; f++)
                    void 0 !== this.V2kb[f] && f !== c && (this.V2kc[this.V2kb[f].piece] && (this.V2kb[f].lastSq = f,
                    this.V2kc[this.V2kb[f].piece].push(this.V2kb[f])),
                    delete this.V2kb[f]);
            for (f = 0; 64 > f; f++) {
                var g = d[f];
                g && f !== c && (this.V2kb[f] = this.createSprite(b, g, f),
                this.V2kb[f].deleteBackground())
            }
        }
    }
    ;
    e.prototype.V2kg = function() {}
    ;
    e.prototype.V2kh = function(b) {}
    ;
    e.prototype.V2ki = function(b, d, c) {
        if (void 0 !== b && 0 != this.V2kc.length) {
            for (var f = [], g = [], h = 0; 64 > h; h += 1)
                0 == d[h] || d[h] != c[h] || void 0 !== this.V2kb[h] && this.V2kb[h].piece === d[h] || (void 0 !== this.V2kb[h] && this.V2kj(this.V2kb[h]),
                this.V2kb[h] = this.createSprite(b, d[h], h));
            for (h = 0; 64 > h; h += 1)
                if (0 !== d[h] && d[h] != c[h]) {
                    var k = this.V2kb[h];
                    k || (k = this.createSprite(b, d[h], h));
                    g.push({
                        square: h,
                        piece: d[h],
                        sprite: k
                    });
                    delete this.V2kb[h]
                }
            h = [];
            for (k = 1; 2 >= k; k++)
                for (var l = 0; 64 > l; l += 1)
                    if (0 != c[l] && d[l] != c[l] && !h[l]) {
                        for (var m = !1, n = -1, p = 99999, q = 0; q < g.length && !m; q++)
                            if (void 0 != g[q] && g[q].piece == c[l] && (2 == k || CB.Square.V16x(g[q].square) == CB.Square.V16x(l))) {
                                var t = CB.Square.V131(g[q], l);
                                t < p && (p = t,
                                n = q)
                            }
                        0 <= n && (this.V2kb[l] = g[n].sprite,
                        f.push(new CB.V2kk(c[l],this.V2kb[l],g[n].square,l,V3ir.V3hy.getSquare(g[n].square, b.sqSidePix))),
                        delete g[n],
                        m = !0,
                        h[l] = !0);
                        m || 2 != k || (this.V2kb[l] = this.createSprite(b, c[l], l),
                        f.push(new CB.V2kk(c[l],this.V2kb[l],-1,l,V3ir.V3hy.getSquare(l, b.sqSidePix))))
                    }
            for (q = 0; q < g.length; q++)
                void 0 != g[q] && (f.push(new CB.V2kk(g[q].piece,g[q].sprite,g[q].square,-1,V3ir.V3hy.getSquare(g[q].square, b.sqSidePix))),
                this.V2kj(g[q].sprite),
                delete g[q]);
            return f
        }
    }
    ;
    e.prototype.set = function(b, d) {
        this.V2kb[d] && this.V2kj(this.V2kb[d]);
        b ? this.V2kb[d] = b : delete this.V2kb[d]
    }
    ;
    e.prototype.V2kl = function(b) {
        this.V2kj(b)
    }
    ;
    e.prototype.createSprite = function(b, d, c) {
        if (this.V2kc[d] && 0 < this.V2kc[d].length) {
            for (var f, g = !1, h = 0; h < this.V2kc[d].length && !g; h++)
                c == this.V2kc[d][h].lastSq && ((f = this.V2kc[d][h]) && (g = !0),
                this.V2kc[d].splice(h, 1));
            g || ((f = this.V2kc[d][0]) || (f = b.createSprite(d)),
            this.V2kc[d].shift());
            f.piece = d;
            f.sq = c;
            return f
        }
        b = b.createSprite(d);
        b.sq = c;
        return b
    }
    ;
    e.prototype.getPromoSprite = function(b) {
        return b == CB.V15e.BLACK ? this.V2k9 : this.V2k8
    }
    ;
    e.prototype.getBlindSprite = function(b, d) {
        this.V2kd[d] || (this.V2kd[d] = b.createSprite(d));
        return this.V2kd[d]
    }
    ;
    e.prototype.V2km = function() {
        for (var b = 0; 64 > b; b++)
            if (void 0 !== this.V2kb[b] && !this.V2kb[b].loaded)
                return !1;
        if (0 == this.V2kc.length)
            return !1;
        for (b = CB.Piece.Vcx; b <= CB.Piece.Vd6; b++)
            for (var d = 0; d < this.V2kc[b].length; d++)
                if (!this.V2kc[b][d] || !this.V2kc[b][d].loaded)
                    return !1;
        return !0
    }
    ;
    e.prototype.change = function(b, d) {
        void 0 !== this.V2kb[d] && this.V2kj(this.V2kb[d]);
        this.V2kb[d] = this.V2kb[b];
        delete this.V2kb[b]
    }
    ;
    e.prototype.V179 = function(b, d, c, f) {
        void 0 !== this.V2kb[d] && this.V2kj(this.V2kb[d]);
        this.V2kb[d] = this.createSprite(f, c);
        this.V2kb[b].deleteBackground();
        this.V2kj(this.V2kb[b]);
        delete this.V2kb[b]
    }
    ;
    e.prototype.V17a = function(b, d, c) {
        this.V2kb[d] = this.V2kb[b];
        this.V2kj(this.V2kb[c]);
        delete this.V2kb[c];
        delete this.V2kb[b]
    }
    ;
    e.prototype.V2kn = function() {
        for (var b = 0; 64 > b; b++)
            void 0 !== this.V2kb[b] && this.V2kb[b].deleteBackground();
        this.V2k8 && this.V2k8.deleteBackground();
        this.V2k9 && this.V2k9.deleteBackground()
    }
    ;
    e.prototype.getPiece = function(b) {
        return this.V2kb[b]
    }
    ;
    e.prototype.V2kj = function(b) {
        this.V2kc[b.piece].push(b)
    }
    ;
    e.prototype.V2ko = function(b, d) {
        return new CB.V134(Math.floor(b.x - d / 2),Math.floor(b.y - d / 2),Math.floor(b.x + d / 2),Math.floor(b.y + d / 2))
    }
    ;
    return e
}();
CB.V2kk = function() {
    var e = function(b, d, c, f, g) {
        CBDebug.assert(void 0 !== d);
        this.piece = b;
        this.sprite = d;
        this.sqFrom = c;
        this.sqTo = f;
        this.V2kp = g;
        this.ptFrom = this.ptTo = new CB.Point(0,0)
    };
    e.prototype.V2kq = function() {
        return !1
    }
    ;
    e.prototype.isPieceAnim = !0;
    e.prototype.deleteBackground = function() {
        this.sprite.deleteBackground()
    }
    ;
    e.prototype.startAnimation = function(b, d) {
        this.debug = "started";
        this.sprite.hide(b);
        b = this.ptTo.subtract(this.ptFrom);
        var c = new CB.V13g(b.x,b.y);
        this.V2kr = Math.floor(c.V29() / this.sprite.w * d + .5);
        this.V2ks = !0;
        5 > this.V2kr && (this.V2kr = 5);
        this.V2kt = new CB.V13g(b.x / this.V2kr,b.y / this.V2kr);
        this.currPos = this.ptFrom;
        if (-1 == this.sqFrom || -1 == this.sqTo)
            this.V2kr = 0;
        -1 == this.sqTo && (this.V2ku = !0);
        this.V2kv = this.V2kr
    }
    ;
    e.prototype.loaded = function() {
        return this.sprite && this.sprite.loaded
    }
    ;
    e.prototype.hide = function(b) {
        if (this.sprite) {
            var d = !1
              , c = Math.floor(this.sprite.w / 2);
            this.V2ks && -1 != this.sqFrom ? void 0 !== this.V2kp && (this.V2kp.draw(b, this.ptFrom.x - c, this.ptFrom.y - c),
            this.sprite.saveBeforeMove(b, this.currPos),
            d = !0) : -2 == this.V2kr && -1 == this.sqFrom && void 0 !== this.V2kp && (this.V2kp.draw(b, this.ptTo.x - c, this.ptTo.y - c),
            this.sprite.saveBeforeMove(b, this.currPos),
            d = !0);
            d || this.sprite.hide(b)
        }
    }
    ;
    e.prototype.show = function(b) {
        this.sprite.show(b)
    }
    ;
    e.prototype.moveToNoSave = function(b, d) {
        this.sprite.moveToNoSave(b, d)
    }
    ;
    e.prototype.moveTo = function(b, d) {
        this.sprite.moveTo(b, d)
    }
    ;
    e.prototype.V2kw = function() {}
    ;
    e.prototype.V2kx = function() {}
    ;
    e.prototype.V2ky = function() {
        if (this.V2kv) {
            var b = Math.min(1, (this.V2kv - this.V2kr) / this.V2kv);
            return .5 > b ? 1 + 1 * b : 1 + (1 - b)
        }
        return 1
    }
    ;
    e.prototype.saveBeforeMove = function(b, d) {
        this.sprite.saveBeforeMove(b, d)
    }
    ;
    e.prototype.getMoveClipRect = function() {
        return this.sprite.getMoveClipRect()
    }
    ;
    e.prototype.deleteBackground = function() {
        this.sprite.deleteBackground()
    }
    ;
    e.prototype.displace = function(b) {
        b = this.V2kz(b);
        this.currPos.x += b * this.V2kt.x;
        this.currPos.y += b * this.V2kt.y
    }
    ;
    e.prototype.prepNextStep = function(b) {
        b = this.V2kz(b);
        this.V2kr -= b;
        this.V2ks = !1;
        return -2 > this.V2kr
    }
    ;
    e.prototype.canDelete = function() {
        return -2 > this.V2kr
    }
    ;
    e.prototype.V2kz = function(b) {
        1 >= this.V2kr ? b = 1 : b > this.V2kr && (b = this.V2kr);
        return b
    }
    ;
    e.prototype.V2l0 = function() {
        return -1 === this.sqTo
    }
    ;
    e.prototype.shouldHideInThisStep = function() {
        return -3 <= this.V2kr && void 0 !== this.sprite
    }
    ;
    e.prototype.hasReachedEndPos = function() {
        return 0 >= this.V2kr
    }
    ;
    e.prototype.isImmobileInThisStep = function() {
        return -1 >= this.V2kr
    }
    ;
    e.prototype.getsInvisibleAtEnd = function() {
        return -2 >= this.V2kr && this.V2l0()
    }
    ;
    e.prototype.isStillMoving = function() {
        return 0 <= this.V2kr
    }
    ;
    return e
}();
"use strict";
var attrId = 0;
CB.V1ea = function() {
    function e(c) {
        return 0 < c ? 1 : 0 > c ? -1 : 0
    }
    var b = function(c, f, g, h, k) {
        this.from = c;
        this.to = f;
        this.rgba = g;
        this.V2l1 = h;
        this.id = ++attrId;
        this.dash = k
    };
    b.prototype.draw = function(c) {
        if (this.boardControl) {
            c.save();
            var f = this.boardControl.getSquareCenterPos(this.from)
              , g = this.boardControl.getSquareCenterPos(this.to)
              , h = CB.Square.V16x(this.from)
              , k = CB.Square.V16w(this.from)
              , l = CB.Square.V16x(this.to)
              , m = CB.Square.V16w(this.to);
            k = e(m - k);
            h = e(l - h);
            this.boardControl.blackIsBottom ? (g.x += h * this.boardControl.nSqPix / 4,
            g.y -= k * this.boardControl.nSqPix / 4) : (g.x -= h * this.boardControl.nSqPix / 4,
            g.y += k * this.boardControl.nSqPix / 4);
            h = .5 * this.boardControl.nSqPix;
            this.V2l1 ? (c.lineWidth = Math.max(1, this.boardControl.nSqPix * this.V2l1 * .01),
            h = 5 * c.lineWidth) : c.lineWidth = Math.max(1, .09 * this.boardControl.nSqPix);
            c.lineCap = "round";
            this.rgba ? b.setStrokeFillStyles(c, this.rgba, f.x, f.y, g.x, g.y) : (l = b.getHslYellow(),
            c.strokeStyle = (new CB.HSLColor(l.h,l.s,l.l,.75)).toString(),
            c.fillStyle = (new CB.HSLColor(l.h,l.s,l.l,.9)).toString());
            b.drawArrow(c, f.x, f.y, g.x, g.y, 3, 1, Math.PI / 8, h, .8 * c.lineWidth, this.rgba, this.dash);
            c.restore();
            return this._getClipRect()
        }
    }
    ;
    b.setStrokeFillStyles = function(c, f, g, h, k, l) {
        if (f && (f.alpha || f.hue)) {
            g = c.createLinearGradient(g, h, k, l);
            var m = f.alpha;
            f.alpha = .15;
            g.addColorStop(0, f);
            f.alpha = .4;
            g.addColorStop(.4, f);
            f.alpha = .55;
            g.addColorStop(.6, f);
            f.alpha = m;
            g.addColorStop(1, f);
            c.strokeStyle = g;
            c.fillStyle = f
        } else
            f && 0 == f.search("hsla") ? (m = /hsla\(\s*(\d{1,3}),\s*(\d{1,3})%,\s*(\d{1,3})%,\s(.+)\)/g.exec(f),
            g = c.createLinearGradient(g, h, k, l),
            h = String.f("hsla( {0}, {1}%, {2}%, {3} )", m[1], m[2], m[3], "0.15"),
            k = String.f("hsla( {0}, {1}%, {2}%, {3} )", m[1], m[2], m[3], "0.4"),
            l = String.f("hsla( {0}, {1}%, {2}%, {3} )", m[1], m[2], m[3], .55 * m[4]),
            m = String.f("hsla( {0}, {1}%, {2}%, {3} )", m[1], m[2], m[3], m[4]),
            g.addColorStop(0, h),
            g.addColorStop(.4, k),
            g.addColorStop(.6, l),
            g.addColorStop(1, m),
            c.strokeStyle = g,
            c.fillStyle = f) : (c.fillStyle = f,
            c.strokeStyle = f)
    }
    ;
    b.prototype.undo = function(c) {
        if (this.boardControl) {
            for (var f = CB.Square.V16x(this.from), g = CB.Square.V16w(this.from), h = CB.Square.V16x(this.to), k = CB.Square.V16w(this.to), l = e(k - g), m = e(h - f), n = this.boardControl.hideCurrPiece(); f != h || g != k; ) {
                this.boardControl.restoreSquare(c, CB.Square.V16t(f, g));
                if (0 != m && 0 != l) {
                    var p = CB.Square.V16t(f + m, g)
                      , q = CB.Square.V16t(f, g + l);
                    0 <= p && 64 > p && this.boardControl.restoreSquare(c, p);
                    0 <= q && 64 > q && this.boardControl.restoreSquare(c, q)
                }
                f != h && (f += m);
                g != k && (g += l)
            }
            0 <= f && 0 <= g && this.boardControl.restoreSquare(c, CB.Square.V16t(f, g));
            n && this.boardControl.unHideCurrPiece()
        }
        return this._getClipRect()
    }
    ;
    b.prototype._getClipRect = function() {
        if (this.boardControl) {
            var c = this.boardControl.getSquareRect(this.from);
            c = c.getUnion(this.boardControl.getSquareRect(this.to));
            if (this.V2l1) {
                var f = this.boardControl.nSqPix * this.V2l1 * .01;
                c.expand(f, f)
            }
            return c
        }
        return new CB.V134(0,0,2E3,2E3)
    }
    ;
    b.prototype.toString = function() {
        return "Arrow: " + CB.Square.toString(this.from) + "-" + CB.Square.toString(this.to)
    }
    ;
    b.prototype.V2l2 = function() {
        return "arrow" + this.from + this.to
    }
    ;
    var d = function(c, f, g, h, k, l, m, n) {
        c.beginPath();
        c.moveTo(f, g);
        c.lineTo(h, k);
        c.lineTo(l, m);
        switch (n) {
        case 0:
            n = Math.sqrt((l - f) * (l - f) + (m - g) * (m - g));
            c.arcTo(h, k, f, g, .55 * n);
            c.fill();
            break;
        case 1:
            c.lineTo(f, g);
            c.fill();
            break;
        case 2:
            c.stroke();
            break;
        case 3:
            c.quadraticCurveTo((f + h + l) / 3, (g + k + m) / 3, f, g);
            c.fill();
            break;
        case 4:
            if (l == f)
                n = m - g,
                l = (h + f) / 2,
                h = (h + f) / 2,
                m = k + n / 5,
                n = k - n / 5;
            else {
                n = Math.sqrt((l - f) * (l - f) + (m - g) * (m - g));
                h = ((f + l) / 2 + h) / 2;
                k = ((g + m) / 2 + k) / 2;
                l = (m - g) / (l - f);
                n = n / (2 * Math.sqrt(l * l + 1)) / 5;
                var p = l * n;
                l = h - n;
                m = k - p;
                h += n;
                n = k + p
            }
            c.bezierCurveTo(l, m, h, n, f, g);
            c.fill()
        }
    };
    d = function(c, f, g, h, k, l, m, n) {
        c.beginPath();
        c.moveTo(f, g);
        c.lineTo(h, k);
        c.lineTo(l, m);
        switch (n) {
        case 0:
            n = Math.sqrt((l - f) * (l - f) + (m - g) * (m - g));
            c.arcTo(h, k, f, g, .55 * n);
            c.fill();
            break;
        case 1:
            c.lineTo(f, g);
            c.fill();
            break;
        case 2:
            c.stroke();
            break;
        case 3:
            c.quadraticCurveTo((f + h + l) / 3, (g + k + m) / 3, f, g);
            c.fill();
            break;
        case 4:
            if (l == f)
                n = m - g,
                l = (h + f) / 2,
                h = (h + f) / 2,
                m = k + n / 5,
                n = k - n / 5;
            else {
                n = Math.sqrt((l - f) * (l - f) + (m - g) * (m - g));
                h = ((f + l) / 2 + h) / 2;
                k = ((g + m) / 2 + k) / 2;
                l = (m - g) / (l - f);
                n = n / (2 * Math.sqrt(l * l + 1)) / 5;
                var p = l * n;
                l = h - n;
                m = k - p;
                h += n;
                n = k + p
            }
            c.bezierCurveTo(l, m, h, n, f, g);
            c.fill()
        }
    }
    ;
    b.drawFree = function(c, f, g, h, k, l, m, n) {
        c.save();
        c.lineWidth = l;
        c.lineCap = "round";
        CB.V1ea.drawArrow(c, f, g, h, k, 3, 1, Math.PI / 8, 6 * l, .8 * c.lineWidth, m, n);
        c.restore()
    }
    ;
    b.drawArrow = function(c, f, g, h, k, l, m, n, p, q, t, v) {
        l = "undefined" != typeof l ? l : 3;
        m = "undefined" != typeof m ? m : 1;
        n = "undefined" != typeof n ? n : Math.PI / 8;
        p = "undefined" != typeof p ? p : 10;
        q = q || 0;
        var z = "function" != typeof l ? d : l
          , E = h - f
          , C = k - g
          , F = Math.sqrt(E * E + C * C);
        if (0 != F) {
            var P = Math.atan2(k - g, h - f)
              , X = q * Math.cos(P);
            q *= Math.sin(P);
            F = (F - .76 * p) / F;
            m & 1 ? (E = f + E * F - X,
            C = g + C * F - q) : (E = h,
            C = k);
            m & 2 ? (X = f + (h - f) * (1 - F),
            F = g + (k - g) * (1 - F)) : (X = f,
            F = g);
            c.save();
            t ? b.setStrokeFillStyles(c, t, X, F, E, C) : (t = c.createLinearGradient(X, F, E, C),
            q = b.getHslYellow(),
            t.addColorStop(0, (new CB.HSLColor(q.h,q.s,q.l,.2)).toString()),
            t.addColorStop(.2, (new CB.HSLColor(q.h,q.s,q.l,.35)).toString()),
            t.addColorStop(.65, (new CB.HSLColor(q.h,q.s,q.l,.55)).toString()),
            t.addColorStop(1, (new CB.HSLColor(q.h,q.s,q.l,.9)).toString()),
            c.strokeStyle = t);
            c.beginPath();
            v && c.setLineDash(v);
            c.moveTo(X, F);
            c.lineTo(E, C);
            c.stroke();
            p = Math.abs(p / Math.cos(n));
            m & 1 && (t = P + Math.PI + n,
            v = h + Math.cos(t) * p,
            t = k + Math.sin(t) * p,
            C = P + Math.PI - n,
            E = h + Math.cos(C) * p,
            C = k + Math.sin(C) * p,
            z(c, v, t, h, k, E, C, l));
            m & 2 && (t = P + n,
            v = f + Math.cos(t) * p,
            t = g + Math.sin(t) * p,
            C = P - n,
            E = f + Math.cos(C) * p,
            C = g + Math.sin(C) * p,
            z(c, v, t, f, g, E, C, l));
            c.restore()
        }
    }
    ;
    b.getHslYellow = function() {
        return {
            h: 40,
            s: 90,
            l: 60
        }
    }
    ;
    return b
}();
CB.BoardColouredSquare = function() {
    var e = function(b, d, c) {
        this.sq = b;
        this.rgba = d;
        this.V2l3 = c;
        this.id = ++attrId
    };
    e.prototype.draw = function(b) {
        return this.V2l4(b)
    }
    ;
    e.prototype.V2l4 = function(b) {
        if (this.boardControl) {
            var d = this.boardControl.getSquareCenterPos(this.sq);
            b.strokeStyle = this.rgba ? b.fillStyle = this.rgba.toString() : b.fillStyle = "rgba( 255, 220, 10, 0.5 )";
            var c = 16;
            this.V2l3 && (c = 10);
            b.lineWidth = Math.max(1, this.boardControl.nSqPix / c);
            this.boardControl.drawSquare(b, this.sq);
            c = this.boardControl.nSqPix - b.lineWidth;
            var f = c - 0;
            CB.V13l.V13q(b, d.x - c / 2, d.y - c / 2, f, f, Math.max(1, f / 3.5));
            this.boardControl.V2l5(b, this.sq);
            return this._getClipRect()
        }
    }
    ;
    e.prototype.V2l6 = function(b) {
        if (this.boardControl) {
            var d = this.boardControl.getSquareCenterPos(this.sq);
            CB.Square.V16x(this.sq);
            CB.Square.V16w(this.sq);
            b.lineWidth = Math.max(1, .08 * this.boardControl.nSqPix);
            this.rgba ? b.strokeStyle = b.fillStyle = this.rgba : (b.strokeStyle = "rgba( 255, 220, 10, 0.6 )",
            b.fillStyle = "rgba( 255, 220, 10, 0.6 )");
            var c = .5 * this.boardControl.nSqPix;
            b.fillRect(d.x - c, d.y - c, 2 * c, 2 * c);
            return this._getClipRect()
        }
    }
    ;
    e.prototype.undo = function(b) {
        if (this.boardControl) {
            var d = CB.Square.V16x(this.sq)
              , c = CB.Square.V16w(this.sq)
              , f = this.boardControl.hideCurrPiece();
            this.boardControl && this.boardControl.restoreSquare(b, CB.Square.V16t(d, c));
            f && this.boardControl.unHideCurrPiece()
        }
        return this._getClipRect()
    }
    ;
    e.prototype._getClipRect = function() {
        return this.boardControl ? this.boardControl.getSquareRect(this.sq) : new CB.V134(0,0,2500,2500)
    }
    ;
    e.prototype.toString = function() {
        return "Sq=" + CB.Square.toString(this.sq) + ", Clr=" + this.rgba
    }
    ;
    e.fromJson = function(b) {
        this.sq = b.sq
    }
    ;
    e.prototype.V2l2 = function() {
        return "square" + this.sq
    }
    ;
    return e
}();
CB.V2l7 = function() {
    var e = function(b, d, c) {
        this.sq = b;
        this.V2l8 = d;
        this.V2l9 = c
    };
    e.stringToPoints = function(b) {
        var d = [];
        if (b = b.match(/[a-h][1-8][t,b][l,r]/ig))
            for (var c = 0; c < b.length; c++) {
                var f = CB.Square.fromString(b[c].substr(0, 2));
                d.push(new CB.V2l7(f,b[c].substr(2, 2)))
            }
        return d
    }
    ;
    e.prototype.getXY = function(b, d) {
        this.V2l9 && (d = 0);
        var c = b.getPixPos(this.sq);
        b = b.nSqPix;
        switch (this.V2l8) {
        case "tl":
            c.x -= d / 2;
            c.y -= d / 2;
            break;
        case "tr":
            c.x += b + d / 2;
            c.y -= d / 2;
            break;
        case "bl":
            c.x -= d / 2;
            c.y += b + d / 2;
            break;
        case "br":
            c.x += b + d / 2;
            c.y += b + d / 2;
            break;
        case "ct":
            c.x += b / 2;
            c.y += b / 2;
            break;
        case "bm":
            c.x += b / 2 + d / 2;
            c.y += b + d / 2;
            break;
        case "tm":
            c.x += b / 2 + d / 2;
            c.y -= d / 2;
            break;
        case "lm":
            c.x -= d / 2;
            c.y += b / 2 + d / 2;
            break;
        case "rm":
            c.x += b + d / 2,
            c.y += b / 2 + d / 2
        }
        return c
    }
    ;
    e.prototype.getClipRect = function(b, d) {
        var c = b.getPixPos(this.sq);
        b = b.nSqPix;
        b += 2 * d;
        c.x -= d;
        c.y -= d;
        d = new CB.V134;
        d.V138(c.x, c.y, c.x + b, c.y + b);
        return d
    }
    ;
    e.prototype.toString = function() {
        return "Point: Sq=" + CB.Square.toString(this.sq) + ", Corner=" + this.V2l8
    }
    ;
    e.prototype.V2l2 = function() {
        return "point" + this.sq + this.V2l8
    }
    ;
    return e
}();
CB.V2la = function() {
    var e = function(b, d, c, f) {
        this.points = b || [];
        this.V2lc = d || 10;
        this.clr = c;
        this.dash = f;
        this.id = ++attrId
    };
    e.prototype.draw = function(b) {
        b.save();
        b.strokeStyle = this.clr ? b.fillStyle = this.clr : b.fillStyle = "hsla( 0, 50%, 70%, 0.6 )";
        b.lineCap = "round";
        b.lineWidth = this.V2ld();
        if (this.points.length) {
            b.beginPath();
            this.dash && this.dash.length && b.setLineDash(this.dash);
            var d = this.points[0].getXY(this.boardControl, b.lineWidth);
            b.moveTo(d.x, d.y);
            for (var c = 1; c < this.points.length; c++)
                d = this.points[c].getXY(this.boardControl, b.lineWidth),
                b.lineTo(d.x, d.y);
            b.stroke()
        }
        b.restore();
        return this._getClipRect()
    }
    ;
    e.prototype.undo = function(b) {
        return this._getClipRect()
    }
    ;
    e.prototype.V2ld = function() {
        return Math.max(1, this.boardControl.nSqPix * this.V2lc / 100)
    }
    ;
    e.prototype._getClipRect = function() {
        for (var b = null, d = 0; d < this.points.length; d++)
            b = null == b ? this.points[d].getClipRect(this.boardControl, this.V2ld()) : b.getUnion(this.points[d].getClipRect(this.boardControl, this.V2ld()));
        return b ? b : new CB.V134(0,0,2500,2500)
    }
    ;
    e.prototype.toString = function() {
        return "Line: " + this.clr.toString() + "/" + this.V2lc
    }
    ;
    e.prototype.V2l2 = function() {
        return "line" + this.points.join(",")
    }
    ;
    return e
}();
CB.V2le = function() {
    var e = function(d, c, f, g, h, k, l) {
        this.from = d;
        this.to = c;
        this.V2lb = f;
        this.clr = g;
        this.dash = h;
        this.boardControl = k;
        this.V2l9 = l;
        this.init()
    };
    e.prototype.init = function() {
        this.edges = this.V2lf(this.from, this.to);
        this.id = this.V2l2();
        this.V2lg()
    }
    ;
    e.prototype.V2lf = function(d, c) {
        d = [d, c, 8 * Math.floor(d / 8) + c % 8, 8 * Math.floor(c / 8) + d % 8];
        b(d);
        return d
    }
    ;
    var b = function(d) {
        d.sort(function(c, f) {
            var g = Math.floor(c / 8)
              , h = Math.floor(f / 8);
            return g != h ? g - h : c % 8 - f % 8
        });
        d[2] = [d[3], d[3] = d[2]][0];
        d[2] == d[3] && 8 > d[2] - d[1] && (d[1] = [d[3], d[3] = d[1]][0])
    };
    e.prototype.V2lg = function() {
        var d = ["bl", "tl", "tr", "br"];
        this.boardControl.blackIsBottom && (d = ["tr", "br", "bl", "tl"]);
        d = d.map(function(c, f) {
            return new CB.V2l7(this.edges[f],c,this.V2l9)
        }
        .bind(this));
        d.push(new CB.V2l7(this.edges[0],this.boardControl.blackIsBottom ? "tr" : "bl",this.V2l9));
        d = new CB.V2la(d,this.V2lb,this.clr,this.dash);
        d.boardControl = this.boardControl;
        this.line = d
    }
    ;
    e.prototype.draw = function(d) {
        return this.line.draw(d)
    }
    ;
    e.prototype.undo = function(d, c) {
        return this.line.undo(d, c)
    }
    ;
    e.prototype.toString = function() {
        return "Zone: " + this.edges.join(",")
    }
    ;
    e.prototype.V2l2 = function() {
        return "zone" + this.edges.join(",")
    }
    ;
    e.fromLiteral = function(d, c) {
        Object.setPrototypeOf(d, e.prototype);
        d.boardControl = c;
        d.init();
        return d
    }
    ;
    return e
}();
var BoardCircle = function(e, b) {
    this.square = e;
    this.color = b;
    this.id = "circle " + e
};
BoardCircle.prototype.draw = function(e) {
    if (this.boardControl) {
        var b = this.boardControl.getSquareCenterPos(this.square)
          , d = this.boardControl.nSqPix / 4.8;
        e.beginPath();
        e.arc(b.x, b.y, d, 0, 2 * Math.PI);
        e.fillStyle = this.color;
        e.fill();
        return this._getClipRect()
    }
}
;
BoardCircle.prototype.undo = function(e) {
    if (!this.boardControl)
        return new CB.V134(0,0,2500,2500);
    this.boardControl.restoreSquare(e, this.square);
    return this.boardControl.getSquareRect(this.square)
}
;
BoardCircle.prototype._getClipRect = function() {
    return this.boardControl ? this.boardControl.getSquareRect(this.sq) : new CB.V134(0,0,2500,2500)
}
;
"use strict";
CB.V1f9 = function() {
    function e(d, c, f, g) {
        var h = !1
          , k = f.event;
        void 0 === k && (k = f);
        for (f = 0; f < d.length; f++)
            d[f] && d[f].isInMyArea(g.x, g.y) && (c.call(d[f], k, g),
            h = !0);
        return h
    }
    var b = function(d, c, f, g) {
        this.cbcanvas = d;
        this.width = c;
        this.height = f;
        this.options = g;
        this.boards = [];
        this.V2lh = [];
        d = CB.Vq.V125() || CB.Vq.V124() || CB.Vq.V8x();
        if (!d && !this.V2li()) {
            for (c = 0; 4 > c; c++)
                this.V2lh[c] = new CB.V2lj(this.cbcanvas.canvas.parentElement,"BAreaShadow" + c),
                this.V2lh[c].setVisible(!d && 0 == c && !V3ir.isBoardOnlyApp());
            this.V2lh[0].setCssClass("BoardAreaShadowT");
            this.V2lh[1].setCssClass("BoardAreaShadowR");
            this.V2lh[2].setCssClass("BoardAreaShadowB");
            this.V2lh[3].setCssClass("BoardAreaShadowL")
        }
        g && g.suppressCalcGeometry || this.V1gq();
        this.V2lk = glSettings.addOnBoardStyleListener(function() {
            (new CB.Timer(function() {
                this.V1gq()
            }
            .bind(this))).runOnce(300)
        }
        .bind(this));
        V3ir.V3hy.callOnBackgroundLoaded = this.V2ll.bind(this)
    };
    b.prototype.V1fb = function(d) {
        d && (this.boards.push(d),
        d.idBoardAreaHandler = d.onReadyHandlers.add(this.onBoardReady.bind(this)))
    }
    ;
    b.prototype.V2lm = function(d) {
        d = this.V2ln(d);
        void 0 !== d && (d = this.boards.splice(d, 1),
        d[0] && d[0].destroy(),
        this.drawBackground(this.cbcanvas.bufferCtx),
        this.cbcanvas.V2lo())
    }
    ;
    b.prototype.V2lp = function() {
        return this.width / this.height
    }
    ;
    b.prototype.V2lq = function() {
        this.V2lr()
    }
    ;
    b.prototype.V2lr = function() {
        for (var d = 0; d < this.boards.length; d++)
            this.boards[d] && this.boards[d].destroy();
        this.boards = [];
        this.V1gq()
    }
    ;
    b.prototype.V1go = function(d) {
        this.boards = [];
        this.V1fb(d);
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.V1gq()
    }
    ;
    b.prototype.removePosInput = function(d) {
        this.boards = [];
        this.boards.push(d);
        this.V1gq();
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.V1gq();
        this.cbcanvas.V2lo()
    }
    ;
    b.prototype.V2ln = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            if (this.boards[c] && this.boards[c].uniqueId == d.uniqueId)
                return c
    }
    ;
    b.prototype.draw = function(d) {
        try {
            this.V2ls(d),
            this.V2lt = !1
        } catch (c) {
            CB.V3("AreaDraw", c)
        }
    }
    ;
    b.prototype.V2lu = function() {
        this.cbcanvas.canvas.style.backgroundImage = "url( '" + V3ir.V3hy.background.url + "' )"
    }
    ;
    b.prototype.drawWood = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            this.boards[c] && this.boards[c].drawWood(d, this.V2lv())
    }
    ;
    b.prototype.V2ls = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            this.boards[c] && this.boards[c].draw(d, this.V2lv())
    }
    ;
    b.prototype.drawBackground = function(d) {
        this.V2li() ? this.V2lt = !0 : void 0 !== d && V3ir.V3hy.background && V3ir.V3hy.background.loaded && (V3ir.V3hy.drawBackground(d, this.width, this.height),
        this.V2lt = !0)
    }
    ;
    b.prototype.beforeResize = function() {
        for (var d = 0; d < this.boards.length; d++)
            this.boards[d] && this.boards[d].beforeResize()
    }
    ;
    b.prototype.resize = function(d, c) {
        this.width = d;
        this.height = c;
        this.V1gq()
    }
    ;
    b.prototype.V1fo = function() {
        this.resize(this.width, this.height)
    }
    ;
    b.prototype.V2lw = function() {
        if (!this.V2lx) {
            var d = $("<div class='cbBoardAreaInfo'><div id='idBoardAreaInfo'></div></div>");
            d.hide();
            $(this.cbcanvas.canvas.parentElement).parent().append(d);
            this.V2lx = d[0]
        }
        return this.V2lx
    }
    ;
    b.prototype.V2ly = function() {
        this.V2lx && $(this.V2lx).remove();
        delete this.V2lx
    }
    ;
    b.prototype.V1gq = function() {
        this.V2lx && $(this.V2lx).hide();
        this.cbcanvas && (this.V2lz && V3ir.V3hy.removeOnBGReadyListener(this.V2lz),
        this.V2lz = V3ir.V3hy.addOnBGReadyListener(this.V2m0.bind(this)),
        V3ir.V3hy.createBackground(this.cbcanvas.ctx, this.width, this.height));
        this.boards.forEach(function(h) {
            h.setTitleVisible(!1)
        });
        this.V2m1 = this.boards.length;
        this.V2m2();
        this.cbcanvas.block(!1);
        0 === this.boards.length && void 0 !== this.cbcanvas.control && this.cbcanvas.V2lo();
        var d = this.cbcanvas.pixToZoom(this.width)
          , c = this.cbcanvas.pixToZoom(this.height)
          , f = Math.min(c / 50, 10)
          , g = Math.min(d / 50, 10);
        this.V2lh && 4 == this.V2lh.length && (this.V2lh[0].setPosSize(0, 0, d, g),
        this.V2lh[1].setPosSize(d - g, f, f, c - 2 * f),
        this.V2lh[2].setPosSize(0, c - f, d, f),
        this.V2lh[3].setPosSize(0, f, g, c - 2 * f));
        this.V2lx && ($(this.V2lx).css("width", d / 2),
        d = this.height / 10,
        $(this.V2lx).css("height", d),
        $(this.V2lx).css("position", "absolute"),
        $(this.V2lx).css("top", this.height / 60),
        $(this.V2lx).css("left", this.width / 4))
    }
    ;
    b.prototype.onMouseDown = function(d, c) {
        this.boards.length && e(this.boards, this.boards[0].onMouseDown, d, c)
    }
    ;
    b.prototype.onContextMenu = function(d, c) {
        this.boards.length && e(this.boards, this.boards[0].onContextMenu, d, c)
    }
    ;
    b.prototype.onMouseUp = function(d, c) {
        if (this.boards.length && !e(this.boards, this.boards[0].onMouseUp, d, c) && 1 == this.boards.length)
            this.boards[0].onMouseUp(d, c)
    }
    ;
    b.prototype.onMouseWheel = function(d, c) {
        this.boards.length && e(this.boards, this.boards[0].onMouseWheel, d, c)
    }
    ;
    b.prototype.onMouseMove = function(d, c) {
        if (this.boards.length)
            if (1 == this.boards.length)
                this.boards[0].onMouseMove(d, c);
            else
                e(this.boards, this.boards[0].onMouseMove, d, c)
    }
    ;
    b.prototype.onMouseEnter = function(d, c) {
        this.boards.length && e(this.boards, this.boards[0].onMouseEnter, d, c)
    }
    ;
    b.prototype.onMouseLeave = function(d, c) {
        this.boards.length && e(this.boards, this.boards[0].onMouseLeave, d, c)
    }
    ;
    b.prototype.onDoubleClick = function(d, c) {}
    ;
    b.prototype.V2ll = function() {
        this.width && this.cbcanvas && V3ir.V3hy.createBackground(this.cbcanvas.ctx, this.width, this.height);
        this.cbcanvas.V2m3();
        void 0 !== this.V2m4 && this.V2m4()
    }
    ;
    b.prototype.getClickPos = function(d) {
        var c = this.cbcanvas.canvas.getBoundingClientRect();
        return new CB.Point(d.getX() - c.left,d.getY() - c.top)
    }
    ;
    b.prototype.V2m5 = function(d, c, f) {
        var g = {
            w: 10,
            nX: d,
            nY: 1
        };
        if (0 == d)
            return g;
        var h = Math.max(c, f);
        g.w = Math.round(Math.min(Math.min(c, f) - 0, Math.floor(h / d)));
        if (0 == g.w)
            return g;
        h == c ? (g.nX = d,
        g.nY = 1) : (g.nX = 1,
        g.nY = d);
        h = d;
        for (var k = 1; k <= d; ) {
            var l = Math.floor(Math.min(c / h, f / k));
            g.w < l && (g.w = l,
            g.nX = h,
            g.nY = k);
            k++;
            h = Math.floor(d / k);
            d != h * k && h++
        }
        1 == h && 1 < k && 1 == d ? (g.h = f,
        g.w = c) : g.h = g.w;
        return g
    }
    ;
    b.prototype.V2m2 = function() {
        if (0 != this.boards.length) {
            var d = this.width
              , c = this.height
              , f = 0
              , g = 0;
            this.V2lx && (c -= this.height / 8,
            g += this.height / 8);
            var h = 0;
            if (1 < this.boards.length && this.options.splitLayout) {
                var k = this.width - this.height;
                if (Math.abs(k) > .2 * Math.max(this.width, this.height) && 0 < k) {
                    f = this.width - k;
                    var l = Math.min(f, this.height);
                    d = k;
                    g = 6;
                    c = l - 2 * g;
                    h = 1
                }
            }
            k = this.V2m5(this.boards.length - h, d, c);
            if (0 != k.w) {
                d = Math.floor((d - k.nX * k.w) / (k.nX + 1));
                c = Math.floor((c - k.nY * k.h) / (k.nY + 1));
                var m = new CB.Size(k.w,k.h);
                if (1 == this.boards.length)
                    this.boards[0].setLeftSpace(d),
                    this.boards[0].setPosSize(new CB.Point(d,0), m);
                else
                    for (0 < h && (this.boards[0].setLeftSpace(d),
                    this.boards[0].setTitleVisible(!0),
                    this.boards[0].setPosSize(new CB.Point(0,0), new CB.Size(l,l))),
                    l = 0; l < k.nX; l++)
                        for (var n = f + d + l * (d + k.w), p = 0; p < k.nY; p++) {
                            var q = g + c + p * (c + k.w);
                            h < this.boards.length && (q = new CB.Point(n,q),
                            this.boards[h].setLeftSpace(d),
                            this.boards[h].setTitleVisible(!0),
                            this.boards[h].setPosSize(q, m),
                            h++)
                        }
            }
        }
    }
    ;
    b.prototype.V2m6 = function() {
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.cbcanvas.V2lo()
    }
    ;
    b.prototype.onBoardReady = function(d) {
        --this.V2m1;
        0 >= this.V2m1 && (this.drawBackground(this.cbcanvas.bufferCtx),
        this.cbcanvas.V2lo(),
        this.boards.forEach(function(c) {
            c.setTitleVisible(!0);
            void 0 !== c.rightWin && c.rightWin.setVisible(!0)
        }),
        this.V2m1 = this.boards.length);
        this.V2lx && $(this.V2lx).show()
    }
    ;
    b.prototype.V2m0 = function() {
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.cbcanvas.V2lo()
    }
    ;
    b.prototype.V2li = function() {
        return this.options ? this.options.transparent : !1
    }
    ;
    b.prototype.V2lv = function() {
        return this.options ? this.options.boardShadow && this.V2lt : this.V2lt
    }
    ;
    return b
}();
"use strict";
CB.V2m7 = function() {
    var e = function(b, d) {
        this.V2m8 = V3ir.config.clrActiveClock;
        this.V2m9 = new CB.Color(220,250,190);
        this.V2ma = new CB.Color(50,110,0);
        this.V2mb = new CB.Color(140,140,100);
        this.V2mc = this.V2m8;
        this.background = new CB.V2lj(b,"clockBG");
        this.V2md = new CB.V2lj(this.background,"clockW");
        this.V2me = new CB.V2lj(this.background,"clockB");
        this.config = d ? d : {
            border: 1,
            borderClr: "black"
        };
        this.V2mf(this.V2md);
        this.V2mf(this.V2me);
        this.V2mg = !1;
        this.V1q8 = !0;
        this.V2md.setText("0:00:00");
        this.V2me.setText("0:00:00");
        this.V2mh = new CB.Timer(this.V2mi.bind(this));
        this.V2mj = 0
    };
    e.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    e.prototype.V1q7 = function(b) {
        this.V2mg = b
    }
    ;
    e.prototype.V1pq = function(b) {
        this.V1q8 = b
    }
    ;
    e.prototype.setText = function(b, d) {
        d ? this.V2me.setText(b) : this.V2md.setText(b)
    }
    ;
    e.prototype.V2mk = function(b) {
        this.V2md.setText(b)
    }
    ;
    e.prototype.V2ml = function(b) {
        this.V2me.setText(b)
    }
    ;
    e.prototype.setVisible = function(b) {
        this.background.setVisible(b)
    }
    ;
    e.prototype.V2mf = function(b) {
        b.setBackgroundColor(new CB.Color(0,0,0,.5));
        b.setColor(new CB.Color(255,255,255,.9));
        b.setBorder(this.config.border, this.config.borderClr);
        b.setTextAlign("center");
        b.setFontFamily(V3ir.config.defaultFont);
        b.elDOM.addEventListener("mousedown", function(d) {
            d.preventDefault()
        })
    }
    ;
    e.prototype.setPosSize = function(b, d, c, f) {
        var g = new CB.V134(0,0,Math.round(c / 2),f - 1)
          , h = new CB.V134(Math.round(c / 2),0,c,f - 1);
        this.background.setPos(b, d);
        this.background.setSize(c, f);
        this.V2md.setPos(g.left, g.top);
        this.V2md.setSize(g.getSize().w, g.getSize().h);
        this.V2me.setPos(h.left, h.top);
        this.V2me.setSize(h.getSize().w, h.getSize().h);
        b = Math.round(.7 * f);
        do
            this.V2md.V2mm(b),
            this.V2me.V2mm(b),
            --b,
            this.V2md.V2mn((g.h - b) / 2 + 2),
            this.V2me.V2mn((g.h - b) / 2 + 1);
        while (3 < b && (this.V2md.V2mo() > g.w - 5 || this.V2md.V2mp() > g.h - 2));
        c = Math.max(1, Math.min(4, Math.round(Math.sqrt(c / 100))));
        this.background.V2mq(c, 5 * c, "rgba( 60, 30, 20, 0.6 )")
    }
    ;
    e.prototype.V1bj = function(b) {
        this.V2md.setText(lm.RESULT + ":");
        b == CB.GameResultEnum.UNDEFINED_RESULT ? this.V2me.setText(lm.ABORTED) : this.V2me.setText(CB.GameResultEnum.toString(b));
        this.V2md.setColor(this.V2mc);
        this.V2me.setColor(this.V2mc)
    }
    ;
    e.prototype.V1oh = function(b) {
        this.V2md.setText("TIME")
    }
    ;
    e.prototype.V1oj = function(b) {
        b ? (this.V2md.setColor(this.V2mb),
        this.V2me.setColor(this.V2m8)) : (this.V2md.setColor(this.V2m8),
        this.V2me.setColor(this.V2mb))
    }
    ;
    e.prototype.V1pp = function(b, d) {
        b = this.V1q5(b);
        d ? this.V2me.setText(b) : this.V2md.setText(b)
    }
    ;
    e.prototype.V1q0 = function(b, d) {}
    ;
    e.prototype.V1pt = function(b) {
        this.V1pe = b
    }
    ;
    e.prototype.V2mr = function(b) {
        this.V2mh.runOnce(b || 8E3);
        this.V2md.setBackgroundColor(this.V2ma);
        this.V2me.setBackgroundColor(this.V2ma)
    }
    ;
    e.prototype.V2mi = function() {
        this.V2md.setBackgroundColor(new CB.Color(0,0,0,.5));
        this.V2me.setBackgroundColor(new CB.Color(0,0,0,.5))
    }
    ;
    e.prototype.V1q5 = function(b) {
        0 > b && (b = new Date(0));
        var d = "";
        this.V1q8 && (d = b.getUTCHours() + ":");
        if (4E3 > b.valueOf() && !this.V1pe) {
            var c = b.getUTCSeconds();
            b = Math.floor(b.getUTCMilliseconds() / 100);
            1 < b.toString().length && (b = "0");
            d = c + "." + b
        } else
            c = b.getUTCMinutes(),
            1 == c.toString().length && (c = "0" + c),
            d += c,
            c = Math.round(b.getUTCSeconds()),
            1 == c.toString().length && (c = "0" + c),
            d += ":" + c;
        return d
    }
    ;
    return e
}();
"use strict";
CB.V2ms = function() {
    var e = 1
      , b = function() {
        this.options = {};
        this.V2mt = [];
        this.V2mu = new CB.Point(0,0);
        this.clickPos = new CB.Point(0,0)
    };
    b.prototype.init = function(f, g, h, k) {
        this.cbcanvas || (this.cbcanvas = f,
        this.V2mv = {
            x: 0,
            y: 0
        },
        this.y = 0,
        this.width = this.nBoardOuterW = g,
        this.height = this.V2mw = h,
        this.debugName = k,
        this.blackIsBottom = !1,
        this.allowInput = !0,
        this.V2mx = !1,
        this.evaluation = 0,
        this.V2my = !0,
        this.V1gq(),
        this.board = new CB.Board,
        this.moveEntry = new CB.V1e2(this),
        this.V2mz = {},
        this.pieceFontName = "DiagramTTFritz",
        this.boardSprites = new CB.V2ka,
        this.animation = new CB.Animation(this.cbcanvas),
        this.V2n0 = [],
        this.onReadyHandlers = new CB.V4(this),
        this.V2n1 = null,
        this.V2n2 = 1,
        V3ir.V3hy.callOnSquaresLoaded = this.V2n3.bind(this),
        this.uniqueId = e++,
        this.animSteps = {
            forMove: .6,
            forPosition: 1
        },
        this.V2n4 = new CB.Timer(this.V2n5.bind(this)),
        this.animation.V155 = function() {
            this.currPiece && this.buttonDown && (this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.currPiece.pos),
            this.cbcanvas.joinClipRect(this.currPiece.getMoveClipRect()));
            this.V2n6(!0);
            this.V155 && this.V155(this)
        }
        .bind(this),
        this.animation.V150 = function() {
            this.currPiece && this.buttonDown && this.currPiece.hide(this.cbcanvas.bufferCtx) && (this.currPiece.deleteBackground(),
            this.cbcanvas.joinClipRect(this.currPiece.getMoveClipRect()))
        }
        .bind(this),
        this.animation.V152 = function() {
            this.currPiece && this.buttonDown && (this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.currPiece.pos),
            this.cbcanvas.joinClipRect(this.currPiece.getMoveClipRect()))
        }
        .bind(this))
    }
    ;
    b.prototype.destroy = function() {
        this.destroyTitle();
        this.destroyMessage();
        this.V2n7();
        this.V2n8();
        this.V2n9();
        this.V2na();
        this.onReadyHandlers.remove(this.idBoardAreaHandler);
        this.onReadyHandlers.empty();
        this.V2lk && glSettings.removeOnBoardStyleListener(this.V2lk);
        this.setGame(null);
        this.V2mx = !1;
        this.shouldAnimatePosChange = this.V2nb = this.fnSquareRelease = this.fnSquareChangeInMouseMove = this.fnMarkSquaresOnButtonDown = this.fnSquareClick = null;
        this.pieceSpriteFactory && null != this.V2n1 && this.pieceSpriteFactory.removeOnLoadedHandler(this.V2n1);
        this.V2n1 = null
    }
    ;
    b.prototype.V2nc = function() {}
    ;
    b.prototype.V1fd = function() {
        this.V2lk = glSettings.addOnBoardStyleListener(this.V2nd.bind(this))
    }
    ;
    b.prototype.V2nd = function(f, g) {
        V3ir.setBoardTextures(CB.V2j2.prototype.V2jg(f));
        this.changeBoardStyle(f, g)
    }
    ;
    b.prototype.changeBoardStyle = function(f, g) {
        CB.V2k1.resetCache();
        this.pieceFontName = g;
        this.nSqPix = 0
    }
    ;
    b.prototype.setPosSize = function(f, g) {
        this.V2ne = f;
        var h = new CB.Size(0,0)
          , k = new CB.Size(0,0);
        void 0 !== this.V2nf && (k.h = this.cbcanvas.pixToZoom(7));
        this.V2mv = new CB.Point(Math.round(f.x + h.w),Math.round(f.y + h.h));
        this.width = Math.round(g.w - h.w);
        this.height = Math.round(g.h - h.h - k.h);
        this.resize(this.width, this.height)
    }
    ;
    b.prototype.getPos = function() {
        return this.V2ne ? this.V2ne : this.V2mv
    }
    ;
    b.prototype.beforeResize = function() {
        this.titleWin && this.titleWin.setVisible(!1)
    }
    ;
    b.prototype.resize = function(f, g) {
        this.V2ng();
        this.width = f;
        this.height = g;
        f && g ? this.V2n4.runOnce(10) : this.V2n4.stop();
        this.currPiece && this.currPiece.deleteBackground()
    }
    ;
    b.prototype.V2n5 = function() {
        this.V2n4.stop();
        this.V2ng();
        this.V2nh = [];
        var f = this.nSqPix;
        this.V1gq();
        f != this.nSqPix || void 0 === this.pieceSpriteFactory || this.rightWin ? (this.boardSprites = new CB.V2ka,
        this.pieceSpriteFactory = this.V2ni()) : this.boardSprites.V2km() && (this.boardSprites.V2kn(),
        this.onReadyHandlers.count() ? this.onReadyHandlers.V5() : this.cbcanvas.V2lo());
        this.V2nj();
        if (void 0 !== this.messageWin)
            this.messageWin.onResize(this);
        if (void 0 !== this.V2nk)
            this.V2nk.onResize(this);
        if (void 0 !== this.rightWin)
            this.rightWin.onResize(this);
        void 0 !== this.bottomWin && (this.bottomWin.V2nl(this.height, this.cbcanvas) ? (this.bottomWin.setVisible(!0),
        this.bottomWin.onResize(this)) : this.bottomWin.setVisible(!1));
        this.V2nf && (this.V2nf.onResize(this),
        this.V2nf.setVisible(!0))
    }
    ;
    b.prototype.onRedraw = function() {}
    ;
    b.prototype.V2nj = function() {
        this.V2nm() ? (this.titleWin.onResize(this),
        this.titleWin.setVisible(!0)) : this.titleWin && this.titleWin.setVisible(!1)
    }
    ;
    b.prototype.V2ni = function() {
        var f = CB.V2k1.getCachedFactory(this.pieceFontName, this.nSqPix);
        f.loaded ? (this.V2n1 = null,
        (new CB.Timer(function() {
            this.V2nn()
        }
        .bind(this))).runOnce(10)) : this.V2n1 = f.addOnLoadedHandler(this.V2nn.bind(this));
        return f
    }
    ;
    b.prototype.V1gq = function() {
        var f = this.height
          , g = this.V2no();
        if (this.options) {
            var h = this.options.topDist || 0;
            var k = this.options.bottomDist || 0;
            h || (h = f / g);
            !k && g && (k = f / g)
        } else
            h = V3ir.config.board2DTopOffset,
            k = V3ir.config.board2DBottomOffset;
        f -= h + k;
        h = 0;
        this.V2nm() && (h = this.titleWin.V2np(this.height, this.cbcanvas),
        this.titleWin.V2nq && (h += this.titleWin.V2nq(this.height, this.cbcanvas)));
        f -= h;
        k = 0;
        void 0 !== this.bottomWin && this.bottomWin.V2nl(this.height, this.cbcanvas) && (k = this.bottomWin.V2np(this.height, this.cbcanvas),
        this.bottomWin.V2nr(k, this.cbcanvas),
        k += this.bottomWin.V2nq(this.height, this.cbcanvas),
        f -= k);
        f = Math.round(f);
        var l = this.width
          , m = 0;
        void 0 !== this.rightWin && (m = this.rightWin.V2ns(this.width, this.height, this.cbcanvas));
        l -= m;
        l -= .056 / window.devicePixelRatio * l;
        this.nBoardOuterW = Math.min(l, f);
        this.nBoardOuterW -= Math.floor(this.nBoardOuterW / g);
        this.V2my = 480 <= this.nBoardOuterW;
        this.options && this.options.minWForCoordinates && (this.V2my = this.nBoardOuterW >= this.options.minWForCoordinates);
        this.V2n2 = this.V2nt();
        this.V2nu = this.nBoardOuterW - 2 * this.V2n2;
        this.V2nv = this.nSqPix = Math.floor(this.V2nu / 8);
        this.nSqPix = CB.V2ms.V2nw(this.V2nv);
        1 > this.nSqPix && (this.nSqPix = 1);
        this.V2nu = 8 * this.nSqPix;
        this.nBoardOuterW = this.V2nu + 2 * this.V2n2;
        this.V2nx = 0;
        this.x0 = Math.floor(this.V2mv.x + (this.width - this.nBoardOuterW - m) / 2 + .5);
        this.y0 = Math.floor(this.V2mv.y + h + Math.min((this.height - h - k - this.nBoardOuterW) / 2, 100));
        this.options && this.options.shiftXPercent && (this.x0 = Math.floor(this.x0 + this.nBoardOuterW * this.options.shiftXPercent / 100))
    }
    ;
    b.V2ny = function() {
        return 350
    }
    ;
    b.V2nw = function(f) {
        var g = [450, 400, 350, 300, 256, 220, 200, 180, 170, 160, 152, 144, 138, 132, 126, 120, 114, 110, 106, 102, 98, 94, 90, 88, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 12, 10, 8], h;
        for (h = 0; h < g.length; h++)
            if (f >= g[h]) {
                f = g[h];
                break
            }
        "DiagramTTFF" == this.pieceFontName && 160 < f && (f = 160);
        h >= g.length && (f = 8);
        return f
    }
    ;
    b.prototype.V2no = function() {
        var f = 60;
        this.options && this.options.marginDistDivisor && (f = this.options.marginDistDivisor / window.devicePixelRatio);
        return f
    }
    ;
    b.prototype.V2nt = function() {
        return this.V2my ? this.options && this.options.V2nz ? Math.max(12, Math.round(Math.min(24 * window.devicePixelRatio, this.nBoardOuterW / 25))) : Math.max(6, Math.round(Math.min(20, this.nBoardOuterW / this.V2no()))) : Math.round(Math.min(12, this.nBoardOuterW / this.V2no()))
    }
    ;
    b.prototype.V2o0 = function(f) {
        this.titleWin && this.titleWin.setText(f);
        this.debugName = f
    }
    ;
    b.prototype.addTitle = function(f, g, h) {
        void 0 === this.titleWin && (this.titleWin = new CB.V2o1(this,f,function(k) {
            this.V2nb(this.uniqueId);
            k.preventDefault()
        }
        .bind(this),"",g,function(k) {
            h(k)
        }
        ,this.options.V2o2));
        return this.titleWin
    }
    ;
    b.prototype.addLogo = function(f) {
        void 0 === this.titleWin && (this.titleWin = new CB.V2o3(this,f));
        return this.titleWin
    }
    ;
    b.prototype.V2o4 = function(f) {
        this.destroyTitle();
        this.titleWin = f;
        this.V2n5()
    }
    ;
    b.prototype.V2o5 = function(f, g) {
        this.destroyTitle();
        this.V2n9();
        this.titleWin = f;
        this.bottomWin = g
    }
    ;
    b.prototype.V2nm = function() {
        return window.V3ir && V3ir.isBoardOnlyApp() ? this.titleWin && 210 < Math.min(this.height, this.width) : this.titleWin && 100 < Math.min(this.height, this.width)
    }
    ;
    b.prototype.setTitleVisible = function(f) {
        this.V2nm() && this.titleWin.setVisible(f)
    }
    ;
    b.prototype.V2o6 = function() {
        this.V2nf || (this.V2nf = new CB.V2o7(this),
        this.V2n4.runOnce(10));
        return this.V2nf
    }
    ;
    b.prototype.setLeftSpace = function(f) {
        this.nLeftSpace = f
    }
    ;
    b.prototype.V2o8 = function(f) {
        return this.V2oa = this.titleWin = new CB.V2o9(this,this.getOuterRect().h / 16,f)
    }
    ;
    b.prototype.removePlayingClock = function() {
        this.V2oa && (this.V2oa.destroy(),
        this.V2oa = null,
        this.destroyTitle(),
        this.titleWin = null)
    }
    ;
    b.prototype.destroyTitle = function() {
        this.titleWin && this.titleWin.destroy();
        delete this.titleWin
    }
    ;
    b.prototype.V2na = function() {
        this.V2nf && (this.V2nf.destroy(),
        delete this.V2nf)
    }
    ;
    b.prototype.destroyMessage = function() {
        this.messageWin && this.messageWin.destroy();
        delete this.messageWin
    }
    ;
    b.prototype.V2n7 = function() {
        this.V2nk && this.V2nk.destroy();
        delete this.V2nk
    }
    ;
    b.prototype.V2n8 = function() {
        this.rightWin && this.rightWin.destroy();
        delete this.rightWin
    }
    ;
    b.prototype.V2n9 = function() {
        this.bottomWin && this.bottomWin.destroy();
        delete this.bottomWin
    }
    ;
    b.prototype.V1r1 = function() {
        return this.titleWin && this.titleWin.V2ob()
    }
    ;
    b.prototype.V1qz = function() {
        if (this.titleWin)
            return this.titleWin.V2ob()
    }
    ;
    b.prototype.V2oc = function(f) {
        this.destroyMessage();
        return this.addMessage(f, !0, !0)
    }
    ;
    b.prototype.addMessage = function(f, g, h) {
        if (this.messageWin || g)
            this.messageWin ? this.messageWin.setText(f) : (this.messageWin = new CB.V2od(this,f,h),
            this.messageWin.setVisible(!0)),
            this.messageWin.onResize(this)
    }
    ;
    b.prototype.V2oe = function(f) {
        this.V2nk && this.V2nk.destroy();
        this.V2nk = new CB.V2of(f,{
            btnW: 260,
            btnH: 36
        });
        this.V2nk.onResize(this)
    }
    ;
    b.prototype.addBubble = function(f, g, h, k) {
        this.messageWin && (this.messageWin.destroy(),
        delete this.messageWin);
        this.messageWin = new CB.V2og(f,g,h,k);
        this.messageWin.setVisible(!0);
        this.messageWin.onResize(this)
    }
    ;
    b.prototype.V2oh = function(f) {
        this.rightWin = f;
        this.rightWin.onResize(this)
    }
    ;
    b.prototype.V2oi = function(f) {
        this.rightWin || (this.rightWin = new CB.V2oj(this,f),
        this.rightWin.V2ns(this.width, this.height, this.cbcanvas),
        this.rightWin.onResize(this))
    }
    ;
    b.prototype.V2ok = function() {
        this.rightWin && this.rightWin.destroy();
        delete this.rightWin
    }
    ;
    b.prototype.V2ol = function(f) {
        if (this.bottomWin = f)
            this.bottomWin.onResize(this)
    }
    ;
    b.prototype.V2om = function(f) {
        V3ir.isBoardOnlyApp() || this.titleWin && this.titleWin.V2om(f)
    }
    ;
    b.prototype.onMouseEnter = function(f, g) {}
    ;
    b.prototype.onContextMenu = function(f, g) {}
    ;
    b.prototype.onMouseLeave = function(f, g) {
        this.getClickPos(g)
    }
    ;
    var d = new CB.V3id
      , c = new CB.V3id;
    b.prototype.onMouseMove = function(f, g) {
        g = this.getClickPos(g);
        if (this.V2mx && this.evaluation)
            if (this.V2on && this.V2on.isInside(g.x, g.y)) {
                var h = this.evaluation.V2oo + "<br/><em>" + this.evaluation.strLine + "</em>";
                d.exec(function() {
                    this.V2op(new CB.Point(f.clientX,f.clientY), h)
                }
                .bind(this), 200)
            } else
                this.V2oq();
        this.V2or && this.V2or.isInside(g.x, g.y) && this._game ? (h = this._game.getCurPos().getBTM() ? lm.BLACKS_MOVE : lm.WHITES_MOVE,
        h += ", " + lm.CLICK_TO_FLIP_BOARD,
        c.exec(function() {
            this.V2os(new CB.Point(f.clientX,f.clientY), h)
        }
        .bind(this), 200)) : this.V2ot()
    }
    ;
    b.prototype.onMouseUp = function(f, g) {
        f = this.getClickPos(g);
        this.V2or && this.V2or.isInside(f.x, f.y) && this.flipBoard()
    }
    ;
    b.prototype.V2op = function(f, g) {
        this.V2ou("Eval", f, g, new CB.Size(190,40), c)
    }
    ;
    b.prototype.V2oq = function() {
        this.hideToolTip("Eval", d)
    }
    ;
    b.prototype.V2os = function(f, g) {
        this.V2ou("ToMove", f, g, new CB.Size(140,35), c, 2500)
    }
    ;
    b.prototype.V2ou = function(f, g, h, k, l, m) {
        var n = this;
        !n[f] && h && (V3ir.isBoardOnlyApp() && (g.x = g.x - k.w - 5),
        n[f] = new CB.V2ov,
        n[f].setText(h),
        n[f].setPosSize(g, k),
        n[f].setVisible(!0),
        (new CB.Timer(function() {
            n.hideToolTip(f, l)
        }
        .bind(n))).runOnce(m || 6E3))
    }
    ;
    b.prototype.V2ot = function() {
        this.hideToolTip("ToMove", c)
    }
    ;
    b.prototype.hideToolTip = function(f, g) {
        g.stop();
        this[f] && (this[f].destroy(),
        delete this[f])
    }
    ;
    b.prototype.movePieceToSq = function(f, g) {
        f && (this.moveSprite(f, this.getSquareCenterPos(g)),
        f.lastSq = g)
    }
    ;
    b.prototype.moveSprite = function(f, g) {
        f && (f.moveTo(this.cbcanvas.bufferCtx, g),
        this.cbcanvas.requestAnimation(f.getMoveClipRect()))
    }
    ;
    b.prototype.hideSprite = function(f) {
        f && (f.hide(this.cbcanvas.bufferCtx),
        this.cbcanvas.requestAnimation(f.getMoveClipRect()))
    }
    ;
    b.prototype.V2ow = function(f, g) {
        f = this.getPixPos(f);
        return g.x < f.x + .7 * this.nSqPix ? CB.Piece.QUEEN : g.y < f.y + .3 * this.nSqPix ? CB.Piece.KNIGHT : g.y < f.y + .6 * this.nSqPix ? CB.Piece.BISHOP : CB.Piece.ROOK
    }
    ;
    b.prototype.V2ox = function(f, g) {
        for (var h = 0; h < f.length; h++)
            ;
        h = this.V2oy(f);
        f.length && g && this.cbcanvas.requestAnimation(h)
    }
    ;
    b.prototype.V2oz = function(f) {
        if (this.V2nh && f)
            for (var g = 0; g < f.length; g++)
                -1 == this.V2nh.indexOf(f[g]) && this.V2nh.push(f[g]);
        else
            this.V2nh = f
    }
    ;
    b.prototype.addAttributes = function(f, g) {
        var h = !1;
        this.currPiece && (h = this.currPiece.hide(this.cbcanvas.bufferCtx)) && console.log("currHiden on addAttr");
        this.queueBoardAttributes(f, {
            eraseQueue: !0,
            renderNow: !0,
            requestAnimInRender: !0,
            permanent: g
        });
        h && (this.currPiece.saveBackground(this.cbcanvas.bufferCtx),
        this.currPiece.show(this.cbcanvas.bufferCtx),
        console.log("currUnHiden on addAttr"))
    }
    ;
    b.prototype.V2oy = function(f, g) {
        this.V2oz(f);
        for (var h = null, k = 0; k < f.length; k++) {
            f[k].boardControl = this;
            var l = f[k].draw(g || this.cbcanvas.bufferCtx);
            h = h ? h.getUnion(l) : l
        }
        return h
    }
    ;
    b.prototype.undoAttributes = function(f) {
        if (void 0 !== this.V2nh && this.V2nh.length) {
            for (var g = null, h = 0; h < this.V2nh.length; h++) {
                for (var k = !1, l = 0; !k && l < this.V2mt.length; l++)
                    k = this.V2nh[h].id == this.V2mt[l].id || this.V2nh[h].sq == this.V2mt[l].sq && "undefined" != typeof this.V2nh[h].sq;
                if (!k && f && this._game) {
                    var m = this._game.V1cm();
                    if (m && m.attributes)
                        for (l = 0; !k && l < m.attributes.length; l++)
                            k = this.V2nh[h].id == m.attributes[l].id || this.V2nh[h].sq == m.attributes[l].sq && "undefined" != typeof this.V2nh[h].sq
                }
                k || (this.V2nh[h].boardControl = this,
                k = this.V2nh[h].undo(this.cbcanvas.bufferCtx, function(n) {
                    return this.getPixPos(n)
                }
                .bind(this)),
                g = g ? g.getUnion(k) : k)
            }
            this.cbcanvas.requestAnimation(g);
            this.V2nh = [].concat(this.V2mt)
        }
    }
    ;
    b.prototype.queueBoardAttributes = function(f, g) {
        if (g.permanent)
            if (2 == g.permanent)
                for (var h = 0; h < f.length; h++) {
                    for (var k = !1, l = 0; !k && l < this.V2mt.length; l++)
                        k = f[h].id == this.V2mt[l].id;
                    k || this.V2mt.push(f[h])
                }
            else
                1 == g.permanent && this._game && (h = this._game.V1cm() || {},
                h.attributes = (h.attributes || []).concat(f),
                this._game.V1cn(h));
        else
            this.V2p0 = !this.V2p0 || g && g.eraseQueue ? f : this.V2p0.concat(f);
        g.renderNow && !this.V2p1() && this.V2n6(g.requestAnimInRender, g.ctx)
    }
    ;
    b.prototype.V2p2 = function(f) {
        for (var g = 0; g < this.V2mt.length; g++)
            this.V2mt[g].id == f && this.V2mt.splice(g, 1);
        this.redraw()
    }
    ;
    b.prototype.removeAttributes = function(f) {
        var g = this
          , h = new CB.V134(0,0,0,0);
        h = f.reduce(function(l, m) {
            return l.getUnion(m.undo(g.cbcanvas.bufferCtx, function(n) {
                return g.getPixPos(n)
            }))
        }, h);
        var k = f.map(function(l) {
            return l.id
        });
        this.V2mt = this.V2mt.filter(function(l) {
            return !k.contains(l.id)
        });
        this.cbcanvas.requestAnimation(h)
    }
    ;
    b.prototype.V2p3 = function() {
        this._game.V1cn(null)
    }
    ;
    b.prototype.V2p4 = function() {
        this.V2mt = []
    }
    ;
    b.prototype.V1gu = function() {
        this.V2p0 = []
    }
    ;
    b.prototype.V2n6 = function(f, g) {
        if (this.V2mt) {
            this.V2p0 = this.V2p0 || [];
            for (var h = 0; h < this.V2mt.length; h++)
                -1 == this.V2p0.indexOf(this.V2mt[h]) && this.V2p0.push(this.V2mt[h])
        }
        this.V2p0 && this.V2p0.length && (g = this.V2oy(this.V2p0, g),
        f && this.cbcanvas.requestAnimation(g),
        this.V2p0 = [])
    }
    ;
    b.prototype.clearAll = function() {
        this.V1gu();
        this.destroyMessage();
        this.V2n7();
        this.redraw()
    }
    ;
    b.prototype.V2p1 = function() {
        return this.V2n0.length || this.animation.jobs.length || this.animation.V14s
    }
    ;
    b.prototype.V2p5 = function(f) {
        this.V2n0 = (this.V2n0 || []).concat(f);
        this.V2p6();
        this.V2p7 = (this.V2p7 || []).concat(f)
    }
    ;
    b.prototype.V2p8 = function() {
        this.V2p7 && this.V2p7.forEach(function(f) {
            f.hide(this.cbcanvas.bufferCtx)
        }
        .bind(this));
        this.V2p7 = []
    }
    ;
    b.prototype.animateCapture = function(f) {
        this.hideSprite(this.currPiece);
        0 <= f && (this.drawSquare(this.cbcanvas.bufferCtx, f),
        this.currPiece.saveBackground(this.cbcanvas.bufferCtx),
        this.moveSprite(this.currPiece, this.getSquareCenterPos(f)))
    }
    ;
    b.prototype.animateFromTo = function(f, g, h, k) {
        if (void 0 !== f) {
            var l = h.subtract(g);
            this.V2p9 = k;
            this.V2pa = h;
            this.V2pb = new CB.V13g(l.x / this.V2p9,l.y / this.V2p9);
            this.V2pc = f;
            this.V2pd = g;
            f = new CB.V134;
            f.V138(g.x, g.y, h.x, h.y);
            this.cbcanvas.joinClipRect(f);
            this.V2pe = window.requestAnimationFrame(this.V2pf.bind(this))
        }
    }
    ;
    b.prototype.V2pf = function() {
        this.V2pc.moveTo(this.cbcanvas.bufferCtx, this.V2pd);
        this.V2pd = 0 === this.V2p9 ? this.V2pa : this.V2pd.add(this.V2pb);
        this.cbcanvas.joinClipRect(this.V2pc.getMoveClipRect());
        this.cbcanvas.V153();
        0 < this.V2p9 && (this.V2pe = window.requestAnimationFrame(this.V2pf.bind(this)));
        this.V2p9--
    }
    ;
    b.prototype.V2pg = function() {
        return void 0 !== this.pieceSpriteFactory && this.pieceSpriteFactory.loaded && this.boardSprites.V2km() && V3ir.V3hy.isBoardValid() ? !0 : !1
    }
    ;
    b.prototype.V2ph = function() {
        this.board = new CB.Board
    }
    ;
    b.prototype.V2pi = function(f, g) {
        if (this.blindMoves)
            this.blindSqs = f;
        else if (this.undoAttributes(),
        this.V2p8(),
        !ObjUtil.equals(f, this.board.sqs) && 1 < this.nSqPix)
            if (this.V2pg()) {
                var h = !1;
                if (g && this.V2pj()) {
                    var k = this.boardSprites.V2ki(this.pieceSpriteFactory, this.board.sqs, f);
                    k && k.length ? (this.board.copyFrom(f),
                    this.V2n0 = k,
                    this.V2p6(),
                    this.V2pk(),
                    h = this.V2pl = !0) : this.V2pm = f
                }
                h || (g && this.animation.currFPS && this.animation.currFPS++,
                this.board.copyFrom(f),
                this.V2p0 = [],
                this.redraw(),
                this.V2pl = !1);
                this.V2pn(this.cbcanvas.bufferCtx, !1)
            } else
                this.board.copyFrom(f)
    }
    ;
    b.prototype.V1gt = function() {
        delete this.currPiece;
        this.buttonDown = !1;
        this.V2ng();
        this.cbcanvas.V2po()
    }
    ;
    b.prototype.redraw = function(f, g) {
        if (this.isReady())
            try {
                if (!(1 >= this.nSqPix)) {
                    var h = -1;
                    this.currPiece && this.buttonDown && -1 != this.fromSq && (h = this.fromSq);
                    this.boardSprites.setup(this.pieceSpriteFactory, this.board.sqs, h);
                    this.V2ng();
                    this.V2n0 = [];
                    this.currPiece && this.buttonDown && this.currPiece.isVisible && this.currPiece.deleteBackground();
                    delete this.V2pp;
                    if (!this.draw(this.cbcanvas.bufferCtx))
                        return !1;
                    this.currPiece && this.buttonDown && -1 != this.fromSq && "undefined" != typeof this.fromSq && this.drawSquare(this.cbcanvas.bufferCtx, this.fromSq);
                    this.V2pq(!0);
                    g || this.V2n6(!1);
                    if (!f) {
                        var k = this.getOuterRect();
                        this.currPiece && (k = k.getUnion(this.currPiece.getMoveClipRect()));
                        this.cbcanvas.requestAnimation(k)
                    }
                    this.V2pm = null;
                    return !0
                }
            } catch (l) {
                CB.V3("BoardRedraw", l)
            }
    }
    ;
    b.prototype.V2pk = function() {
        this.currPiece && -1 != this.fromSq && this.board.sqs[this.fromSq] != this.currPiece.piece && (delete this.currPiece,
        this.fromSq = -1)
    }
    ;
    b.prototype.V2pj = function() {
        return !this.animation.currFPS || this.animation.currFPS > V3ir.minFPS
    }
    ;
    b.prototype.V2ng = function() {
        this.animation.V14q();
        this.V2pe && (window.cancelAnimationFrame(this.V2pe),
        this.V2pe = 0)
    }
    ;
    b.prototype.quickFinishAnimations = function() {
        this.animation.V156();
        this.V2pe && (window.cancelAnimationFrame(this.V2pe),
        this.V2pe = 0)
    }
    ;
    b.prototype.V2p6 = function() {
        function f(l, m, n) {
            return 40 > l.currFPS ? 30 > l.currFPS ? 20 > l.currFPS ? .25 : .5 : Math.min(1, m.forMove) : 3 > n ? m.forMove : m.forPosition
        }
        for (var g = !0, h = 0; h < this.V2n0.length; h++)
            this.V2n0[h].loaded() || (this.V2n0[h].tryLoadCnt = (this.V2n0[h].tryLoadCnt || 0) + 1,
            g = 20 < this.V2n0[h].tryLoadCnt);
        if (g) {
            for (h = 0; h < this.V2n0.length; h++)
                if (this.V2n0[h].isPieceAnim) {
                    g = -1 == this.V2n0[h].sqFrom ? this.V2pr(this.V2n0[h].piece) : this.getSquareCenterPos(this.V2n0[h].sqFrom);
                    var k = -1 == this.V2n0[h].sqTo ? this.V2pr(this.V2n0[h].piece) : this.getSquareCenterPos(this.V2n0[h].sqTo);
                    this.V2n0[h].ptFrom = g;
                    this.V2n0[h].ptTo = k
                }
            h = this.V2n0;
            h.length && this.animation.V14t(h, f(this.animation, this.animSteps, h.length), this.getOuterRect());
            this.V2n0 = []
        } else
            setTimeout(function() {
                this.V2p6()
            }
            .bind(this), 100)
    }
    ;
    b.prototype.draw = function(f, g) {
        if (!isNaN(this.x0) && 1 < this.nSqPix && 1 < this.V2nv) {
            if (this.V2ls(f, g))
                this.V2pq(!1, this.cbcanvas.bufferCtx);
            else
                return !1;
            void 0 !== this.V2ps && this.V2ps(this.getOuterRect())
        }
        return !0
    }
    ;
    b.prototype.drawWood = function(f, g) {
        return this.V2pt(f, g) ? this.V2pu(f) : !1
    }
    ;
    b.prototype.V2ls = function(f, g) {
        return this.drawWood(f, g) && this.pieceSpriteFactory && this.pieceSpriteFactory.loaded ? (this.V2pv(f),
        !0) : !1
    }
    ;
    b.prototype.getInnerRect = function() {
        return new CB.V134(this.x0 + this.V2n2,this.y0 + this.V2n2,this.x0 + this.V2n2 + this.V2nu,this.y0 + this.V2n2 + this.V2nu)
    }
    ;
    b.prototype.getOuterRect = function() {
        return new CB.V134(this.x0,this.y0,this.x0 + this.nBoardOuterW,this.y0 + this.nBoardOuterW)
    }
    ;
    b.prototype.V2pt = function(f, g) {
        if (4 > this.nBoardOuterW)
            return !0;
        try {
            return this.V2pg() ? (f.save(),
            g && this.V2pw(f, .6),
            V3ir.V3hy.margin.drawTiled(f, this.x0, this.y0, this.nBoardOuterW, this.nBoardOuterW),
            V3ir.V3hy.clrMarginSepLine && (f.lineWidth = 1,
            CB.V13l.V13o(f, this.getInnerRect(), V3ir.V3hy.clrMarginSepLine)),
            f.restore(),
            this.V2mx && this.V2px(f, g, this.evaluation),
            this.V2my && this.V2py(f),
            this.V2pn(f),
            !0) : !1
        } catch (h) {
            CB.V3("RawB:DrawMargin", h)
        }
    }
    ;
    b.prototype.V2py = function(f) {
        f.save();
        var g = Math.round(.8 * this.V2n2);
        f.font = g + "px " + V3ir.config.defaultFont;
        var h = null;
        V3ir.V3hy && (h = V3ir.V3hy.clrCoordinates);
        f.fillStyle = h || "yellow";
        h = f.measureText("A").width;
        var k = this.x0 + (this.V2n2 - h) / 2
          , l = this.y0 + this.nSqPix / 2 + g / 2 + this.V2n2 - .2 * g;
        V3ir.panelMgr && V3ir.panelMgr.viewport && V3ir.panelMgr.viewport.rtl && (k += 8 * this.nSqPix + this.V2n2);
        for (var m = 0; 8 > m; m++)
            this.blackIsBottom ? f.fillText(m + 1, k, l + m * this.nSqPix) : f.fillText(8 - m, k, l + m * this.nSqPix);
        k = this.x0 + (this.nSqPix - h) / 2 + this.V2n2 + .1 * h;
        l = this.y0 + this.V2nu + this.V2n2 + (this.V2n2 - g) / 2 + g - .2 * g;
        for (m = 0; 8 > m; m++)
            this.blackIsBottom ? f.fillText(String.fromCharCode(104 - m), k + m * this.nSqPix, l) : f.fillText(String.fromCharCode(97 + m), k + m * this.nSqPix, l);
        f.restore()
    }
    ;
    b.prototype.V2pn = function(f) {
        if (this._game) {
            this.V2pz(f);
            f.save();
            var g = .34 * this.V2q0(this.getOuterRect().w)
              , h = this.x0 + 2 * this.V2n2 + this.V2nu + .9 * g
              , k = this.y0 + this.V2nu + 2 * this.V2n2 - g - .02 * this.V2nu;
            f.beginPath();
            f.arc(h, k, g, 0, 2 * Math.PI, !1);
            var l = f.createRadialGradient(h - .3 * g, k - .2 * g, .1 * g, h - .2 * g, k - .2 * g, g);
            this._game.getCurPos().getBTM() ? (l.addColorStop(0, "rgba( 150, 150, 160, 1.0 )"),
            l.addColorStop(1, "rgba( 60, 30, 30, 1.0 )")) : (l.addColorStop(0, "rgba( 250, 250, 255, 1.0 )"),
            l.addColorStop(1, "rgba( 220, 220, 225, 1.0 )"));
            f.fillStyle = l;
            f.lineWidth = 0;
            this.V2pw(f, .8, 2, 3);
            f.fill();
            f.restore();
            this.V2or = new CB.V134(h - g,k - g,h + 2 * g,k + 2 * g);
            this.cbcanvas.requestAnimation(this.V2or)
        }
    }
    ;
    b.prototype.V2q0 = function(f) {
        return Math.min(Math.max(.054 * f, 5), 30)
    }
    ;
    b.prototype.V2pz = function(f) {
        var g = this.getOuterRect()
          , h = .09 * g.h
          , k = this.V2q0(g.w)
          , l = .4 * h
          , m = new CB.V13e
          , n = g.bottom - h
          , p = g.bottom;
        g = g.right;
        this.V2q1 = new CB.V134(g,n,g + k,n - h);
        m.push(new CB.Point(g,n));
        m.push(new CB.Point(k / 8 + g,l / 4 + n));
        m.push(new CB.Point(k / 2 + g,l / 2 + n));
        m.push(new CB.Point(3 * k / 4 + g,3 * l / 4 + n));
        m.push(new CB.Point(k + g,l + n));
        m.push(new CB.Point(k + g,p));
        m.push(new CB.Point(g,p));
        f.save();
        m.V13j(f);
        h = V3ir.V3hy.margin.getPattern(f);
        f.fillStyle = h || "brown";
        f.fill();
        f.restore()
    }
    ;
    b.prototype.V2pw = function(f, g, h, k) {
        h = h || Math.max(1, Math.min(4, Math.round(Math.sqrt(this.nBoardOuterW / 60))));
        f.shadowOffsetX = h;
        f.shadowOffsetY = h;
        f.shadowBlur = k || 3 * h;
        f.shadowColor = "rgba( 60, 30, 15, " + g + " )";
        return h
    }
    ;
    b.prototype.V2q2 = function(f, g) {
        var h = f != this.V2mx;
        this.V2mx = f;
        this.evaluation = g;
        f && h ? (new CB.Timer(function() {
            this.V2n5();
            delete this.V2pp;
            this.V1hn(!0)
        }
        .bind(this))).runOnce(500) : f && (this.V2px(this.cbcanvas.bufferCtx, !1, this.evaluation),
        delete this.V2pp,
        this.cbcanvas.requestAnimation())
    }
    ;
    b.prototype.V2q3 = function() {
        this.V2mx && this.evaluation && (this.evaluation.isInvalid = !0,
        (new CB.Timer(function() {
            this.V2n5();
            delete this.V2pp;
            this.V1hn(!0)
        }
        .bind(this))).runOnce(200))
    }
    ;
    b.prototype.V2q4 = function(f) {
        this.V2my = f
    }
    ;
    b.prototype.V2px = function(f, g, h) {
        var k = this.getOuterRect();
        if (!(50 > k.width)) {
            this.evaluation = h;
            var l = .5 * k.h
              , m = this.V2q0(k.w)
              , n = .15 * l
              , p = new CB.V13e
              , q = k.top + (k.h - l) / 2;
            k = k.right;
            this.V2on = new CB.V134(k,q,k + m,q + l);
            p.push(new CB.Point(k,q));
            p.push(new CB.Point(m / 8 + k,n / 4 + q));
            p.push(new CB.Point(m / 2 + k,n / 2 + q));
            p.push(new CB.Point(7 * m / 8 + k,3 * n / 4 + q));
            p.push(new CB.Point(m + k,n + q));
            var t = q + (l - n);
            p.push(new CB.Point(m + k,t));
            p.push(new CB.Point(7 * m / 8 + k,n / 4 + t));
            p.push(new CB.Point(m / 2 + k,n / 2 + t));
            p.push(new CB.Point(m / 8 + k,3 * n / 4 + t));
            p.push(new CB.Point(k,t + n));
            f.save();
            p.V13j(f);
            p = V3ir.V3hy.margin.getPattern(f);
            f.fillStyle = p || "brown";
            g && this.V2pw(f, 1);
            this.V2q5 = new CB.V134(k,q,k + m,q + l - 2 * n);
            f.fill();
            g = q + n + 2;
            q = .35 * m;
            k += (m - q) / 5;
            l = new CB.V134(k,g,k + q,g + (l - 2 * n - 4));
            n = f.createLinearGradient(l.left, l.top, l.right, l.top);
            this.V2q6(h.value, .3, 143);
            k = new CB.Color(216.75,216.75,216.75,1);
            g = new CB.Color(255,255,255,1);
            q = new CB.Color(191.25,191.25,191.25,1);
            n.addColorStop(0, k.toString());
            n.addColorStop(.3, g.toString());
            n.addColorStop(1, q.toString());
            f.lineWidth = l.w;
            f.strokeStyle = n;
            f.lineCap = "round";
            this.V2pw(f, 1, 2, 3);
            CB.V13l.V13p(f, l.left + l.w / 2, l.top, l.left + l.w / 2, l.bottom);
            f.shadowColor = "black";
            this.V2pw(f, 0, 0, 0);
            this.V2q7(f, 0, "black", l);
            h.isInvalid || (h = -this.V2q6(h.value, .7, 333) * l.h / 2 + l.h / 2 + l.top,
            n = f.createLinearGradient(l.left + l.w / 2, h - 2, l.left + l.w / 2, h + 2),
            n.addColorStop(0, "rgba( 0, 220, 0, 1.0 )"),
            n.addColorStop(.4, "rgba( 0, 235, 0, 1.0 )"),
            n.addColorStop(1, "rgba( 0, 200, 0, 1.0 )"),
            f.strokeStyle = n,
            f.lineCap = "round",
            f.lineWidth = Math.min(Math.max(2, m / 2), 7),
            this.V2pw(f, .6, 1, 2),
            CB.V13l.V13p(f, l.left + 1, h, l.right + 1, h));
            f.restore()
        }
    }
    ;
    b.prototype.V2q7 = function(f, g, h, k) {
        g = -this.V2q6(100 * g, .7, 333) * k.h / 2 + k.h / 2 + k.top;
        f.strokeStyle = h;
        f.lineWidth = 1;
        f.lineCap = "";
        CB.V13l.V13p(f, k.left, g, k.right + 1, g)
    }
    ;
    b.prototype.V2q6 = function(f, g, h) {
        g = (Math.pow(g, .01 * Math.abs(f)) - 1) / (g - 1) * 100;
        g > h && (g = h);
        0 > f && (g = -g);
        return g / h
    }
    ;
    b.prototype.V2pu = function(f) {
        if (V3ir.V3hy.isBoardValid()) {
            for (var g = 0; 64 > g; g++)
                V3ir.V3hy.drawSquare(f, g, this.nSqPix, this.getPixPos(g));
            return !0
        }
        return !1
    }
    ;
    b.prototype.V2pv = function(f) {
        for (var g = 0; 64 > g; g++) {
            var h = this.boardSprites.getPiece(g);
            !h && 0 < this.board.sqs[g] && this.pieceSpriteFactory && (h = this.boardSprites.createSprite(this.pieceSpriteFactory, this.board.sqs[g], g));
            if (h) {
                var k = this.getSquareCenterPos(g);
                h.moveToNoSave(f, k)
            }
        }
    }
    ;
    b.prototype.V2l5 = function(f, g) {
        var h = this.boardSprites.getPiece(g);
        h && (g = this.getSquareCenterPos(g),
        h.moveToNoSave(f, g))
    }
    ;
    b.prototype.restoreSquare = function(f, g) {
        if (this.board.sqs[g]) {
            var h = this.boardSprites.getPiece(g);
            if (h && (V3ir.V3hy.drawSquare(f, g, this.nSqPix, this.getPixPos(g)),
            h.isVisible)) {
                var k = h.pos.cloneIntPoint();
                h.hide(f);
                h.moveToNoSave(f, this.getSquareCenterPos(g));
                h.setBackground(V3ir.V3hy.getSquare(g, this.nSqPix));
                k !== h.pos && h.moveTo(f, k)
            }
        } else
            V3ir.V3hy.drawSquare(f, g, this.nSqPix, this.getPixPos(g))
    }
    ;
    b.prototype.drawSquare = function(f, g) {
        V3ir.V3hy.drawSquare(f, g, this.nSqPix, this.getPixPos(g))
    }
    ;
    b.prototype.V2n3 = function() {}
    ;
    b.prototype.V2nn = function() {
        void 0 !== this.pieceSpriteFactory && this.pieceSpriteFactory.isValid() && this.boardSprites.sqSidePix !== this.nSqPix && (this.boardSprites.create(this.pieceSpriteFactory),
        this.boardSprites.setup(this.pieceSpriteFactory, this.board.sqs, this.getPixPos.bind(this)),
        setTimeout(this.V2q8.bind(this), 300))
    }
    ;
    b.prototype.V2q8 = function() {
        V3ir.V3hy.isBoardValid() && this.boardSprites.V2km() ? (this.V2pm && this.V2pi(this.V2pm, !1),
        this.onReadyHandlers.count() && this.onReadyHandlers.V5(),
        this.onRedraw(),
        this.cbcanvas.V2lo()) : setTimeout(this.V2q8.bind(this), 500)
    }
    ;
    b.prototype.isReady = function() {
        return V3ir.V3hy.isBoardValid() && this.boardSprites && this.boardSprites.V2km()
    }
    ;
    b.prototype.getPixPos = function(f) {
        var g = Math.floor(f / 8);
        f %= 8;
        this.blackIsBottom ? (g = Math.floor(this.x0 + this.V2n2 + this.V2nx + (7 - g) * this.nSqPix),
        f = Math.floor(this.y0 + this.V2n2 + this.V2nx + f * this.nSqPix)) : (g = Math.floor(this.x0 + this.V2n2 + this.V2nx + g * this.nSqPix),
        f = Math.floor(this.y0 + this.V2n2 + this.V2nx + (7 - f) * this.nSqPix));
        return new CB.Point(g,f)
    }
    ;
    b.prototype.getSquareRect = function(f) {
        f = this.getPixPos(f);
        return new CB.V134(f.x,f.y,f.x + this.nSqPix,f.y + this.nSqPix)
    }
    ;
    b.prototype.getSquareCenterPos = function(f) {
        return this.getPixPos(f).add(this.V2q9())
    }
    ;
    b.prototype.isInMyArea = function(f, g) {
        var h = new CB.V134
          , k = this.V2or ? this.V2or.w : 0;
        h.V136(new CB.Point(this.x0,this.y0), new CB.Size(this.width + k,this.height));
        return f >= h.left && f <= h.right && g >= h.top && g <= h.bottom
    }
    ;
    b.prototype.getClickPos = function(f) {
        ASSERT(void 0 !== f.x);
        return new CB.Point(f.x,f.y)
    }
    ;
    b.prototype.getClickedSquare = function(f) {
        var g = f.x - this.V2n2 - this.V2nx - this.x0;
        f = f.y - this.V2n2 - this.V2nx - this.y0;
        this.blackIsBottom ? (g = 7 - Math.floor(g / this.nSqPix),
        f = Math.floor(f / this.nSqPix)) : (g = Math.floor(g / this.nSqPix),
        f = 7 - Math.floor(f / this.nSqPix));
        return 0 <= g && 8 > g && 0 <= f && 8 > f ? 8 * g + f : -1
    }
    ;
    b.prototype.getGenerousClipRect = function(f, g) {
        var h = CB.Square.V16x(f);
        f = CB.Square.V16w(f);
        var k = CB.Square.V16x(g)
          , l = CB.Square.V16w(g);
        g = Math.max(h, k);
        var m = Math.min(f, l);
        h = CB.Square.V16o(Math.min(h, k), Math.max(f, l));
        f = CB.Square.V16o(g, m);
        h = this.getPixPos(h);
        f = this.getPixPos(f);
        f.add(new CB.Point(this.nSqPix,this.nSqPix));
        k = new CB.V134;
        k.V138(h.x, h.y, f.x, f.y);
        k.expand(this.nSqPix, this.nSqPix);
        return k
    }
    ;
    b.prototype.V2q9 = function() {
        return new CB.Point(Math.floor(this.nSqPix / 2),Math.floor(this.nSqPix / 2))
    }
    ;
    b.prototype.V2qa = function(f) {
        return this.getPixPos(this.getClickedSquare(f)).add(this.V2q9()).subtract(f)
    }
    ;
    b.prototype.V2pr = function(f) {
        return new CB.Point(-500,-500)
    }
    ;
    b.prototype.V2qb = function(f, g) {
        this.redrawBlindBoard()
    }
    ;
    b.prototype.redrawBlindBoard = function() {
        this.blindMoves && (this.V2qc = this.board.sqs.slice(),
        this.board.copyFrom(this.blindSqs),
        this.redraw(!1),
        this.board.copyFrom(this.V2qc))
    }
    ;
    b.prototype.V2qd = function(f, g) {
        this.redraw(!1)
    }
    ;
    b.prototype.flipBoard = function() {
        this.setBlackIsBottom(!this.blackIsBottom, !0)
    }
    ;
    b.prototype.setBlackIsBottom = function(f, g) {
        f != this.blackIsBottom && (this.blackIsBottom = f,
        this.V2ng(),
        this.boardSprites.V2kn(),
        g && (this.destroyMessage(),
        this.V2n7(),
        this.V1gt(),
        this.redraw(!0)),
        this.cbcanvas.V2lo(),
        this.titleWin && this.titleWin.V2qe && this.titleWin.V2qe(this),
        this.bottomWin && this.bottomWin.V2qe && this.bottomWin.V2qe(this))
    }
    ;
    b.prototype.V1u1 = function() {
        return this.blackIsBottom ? CB.V15e.BLACK : CB.V15e.WHITE
    }
    ;
    b.prototype.V2qf = function(f) {
        f !== this.V1u1() && this.flipBoard()
    }
    ;
    b.prototype.V2qg = function(f) {
        this.V2mz = f
    }
    ;
    b.prototype._game = null;
    b.prototype.setGame = function(f) {
        this.V2mt = [];
        this.blindMoves || this.V2ph();
        this._game && (this._game.removeOnCurPosChangedListener(this.V1h3),
        this._game.removeOnChangedListener(this.V1h0),
        this._game.removeOnNavigateListener(this.V2qh),
        this._game.removeOnMoveListener(this.V2qi),
        this._game.removeOnHeaderChangedListener(this.V2qj));
        if (this._game = f) {
            f = this.V1h4.bind(this);
            var g = this.V2qk.bind(this)
              , h = this.V1h2.bind(this)
              , k = this.V2ql.bind(this)
              , l = this.V2qm.bind(this);
            this.V1h3 = this._game.addOnCurPosChangedListener(f);
            this.V1h0 = this._game.addOnChangedListener(g);
            this.V2qh = this._game.addOnNavigateListener(k);
            this.V2qi = this._game.addOnMoveListener(l);
            this.V2qj = this._game.addOnHeaderChangedListener(h);
            this.V2qn = this._game.addOnResetGameListener(this.V1h6.bind(this));
            this.V1h4(this._game, this._game.getCurPos(), !1);
            this.V1h2()
        }
    }
    ;
    b.prototype.getGame = function() {
        return this._game
    }
    ;
    b.prototype.V1h4 = function(f, g, h) {
        "undefined" == typeof h && this.shouldAnimatePosChange && (h = this.shouldAnimatePosChange());
        this.V1i6 && (this.V1i6 = h = !1);
        f = !1;
        this.V2p1() ? (this._game && this.V2pi(this._game.getCurPos().board, !1),
        f = !0) : this._game && this.V2pi(this._game.getCurPos().board, h);
        this.V2pq();
        f && this.V1hn(!1);
        this.moveEntry.renderPreMoves()
    }
    ;
    b.prototype.shouldAnimatePosChange = function() {
        return !0
    }
    ;
    b.prototype.V2qk = function() {
        this.V2pq()
    }
    ;
    b.prototype.V1h6 = function() {
        this.moveEntry.clearPreMoves()
    }
    ;
    b.prototype.V1h2 = function() {
        this.titleWin && this.titleWin.V2qo && this.V2o0(this._game.hdr.getStrPlayers(this.nSqPix > this.cbcanvas.V12j(42)))
    }
    ;
    b.prototype.V2qm = function(f, g) {
        if (this.moveEntry)
            this.moveEntry.onMove()
    }
    ;
    b.prototype.V2ql = function() {
        this.V1hn(!1)
    }
    ;
    b.prototype.V2pq = function(f, g) {
        var h = [].concat(this.V2mt);
        if (this._game) {
            var k = this._game.getAnno(CB.AnnoType.SQUARE_LIST);
            if (k)
                for (var l = 0; l < k.length; l++) {
                    var m = new CB.BoardColouredSquare(k[l].field,k[l].getColour());
                    m.fromAnno = !0;
                    h.push(m)
                }
            if (k = this._game.getAnno(CB.AnnoType.ARROW_LIST))
                for (l = 0; l < k.length; l++)
                    m = new CB.V1ea(k[l].from,k[l].to,k[l].getColour()),
                    m.fromAnno = !0,
                    h.push(m)
        }
        this._game && (l = this._game.V1cm()) && l.attributes && (h = h.concat(l.attributes));
        0 < h.length && (l = !1,
        f || (l = !0,
        this.shouldAnimatePosChange && (l = !this.shouldAnimatePosChange())),
        g && (l = !0),
        this.V2qp(),
        this.pieceSpriteFactory && this.pieceSpriteFactory.loaded || (l = !1,
        g = null),
        this.queueBoardAttributes(h, {
            eraseQueue: !1,
            renderNow: l,
            requestAnimInRender: l,
            ctx: g
        }))
    }
    ;
    b.prototype.V1hn = function(f, g) {
        if (this._game && this._game.mainLine.length) {
            var h = this._game.getLastMove();
            h && (h != this.V2pp || g) && (this.V2pp = h,
            g = new CB.V1ea(h.from,h.to),
            g.lastMove = !0,
            this.V2qq(),
            this.queueBoardAttributes([g], {
                eraseQueue: !1,
                renderNow: f || !this.V2pj(),
                requestAnimInRender: !0
            }))
        }
    }
    ;
    b.prototype.V2qq = function() {
        if (this.V2p0) {
            var f = this.V2p0.find(function(g) {
                return g.lastMove
            });
            f = this.V2p0.indexOf(f);
            0 <= f && this.V2p0.splice(f, 1)
        }
    }
    ;
    b.prototype.V2qp = function() {
        if (this.V2p0) {
            do {
                var f = this.V2p0.find(function(h) {
                    return h.fromAnno
                });
                var g = this.V2p0.indexOf(f);
                0 <= g && this.V2p0.splice(g, 1)
            } while (f)
        }
    }
    ;
    b.prototype.markSquare = function(f, g, h, k, l) {
        this.queueBoardAttributes([new CB.BoardColouredSquare(f,g,h)], {
            eraseQueue: !1,
            renderNow: !l,
            requestAnimInRender: !0,
            permanent: k
        })
    }
    ;
    b.prototype.drawArrow = function(f, g, h, k, l, m) {
        "undefined" !== typeof f && this.queueBoardAttributes([new CB.V1ea(f,g,h,k,m)], {
            eraseQueue: !0,
            renderNow: !0,
            requestAnimInRender: !0,
            permanent: l
        })
    }
    ;
    b.prototype.V13p = function(f) {
        this.queueBoardAttributes([f], {
            eraseQueue: !0,
            renderNow: !0,
            requestAnimInRender: !0,
            permanent: !0
        })
    }
    ;
    b.prototype.V1sk = function(f) {
        this.currPiece && (this.currPiece.hide(this.cbcanvas.bufferCtx),
        this.currPiece.deleteBackground());
        for (var g = 0; g < f.length; g++)
            this.queueBoardAttributes([new CB.BoardColouredSquare(f[g].sq,f[g].clr)], {
                eraseQueue: !1,
                renderNow: g == f.length - 1,
                requestAnimInRender: g == f.length - 1
            });
        this.currPiece && this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.currPiece.pos)
    }
    ;
    b.prototype.V2qr = function(f) {
        f.forEach(function(g) {
            this.restoreSquare(this.cbcanvas.bufferCtx, g.sq);
            this.restoreSquare(this.cbcanvas.ctx, g.sq)
        }
        .bind(this))
    }
    ;
    b.prototype.hideCurrPiece = function() {
        var f = this.currPiece;
        if (f && f.hide(this.cbcanvas.bufferCtx))
            return !0
    }
    ;
    b.prototype.unHideCurrPiece = function() {
        var f = this.currPiece;
        f && (f.deleteBackground(),
        this.moveSprite(f, f.pos),
        this.cbcanvas.joinClipRect(f.getMoveClipRect()))
    }
    ;
    b.prototype.isWhitePromoPawn = function(f) {
        return (this.board.get(f) == CB.Piece.Vd5 || this.blindMoves && this.blindSqs && this.blindSqs[f] == CB.Piece.Vd5) && 6 == CB.Square.V16w(f)
    }
    ;
    b.prototype.isBlackPromoPawn = function(f) {
        return (this.board.get(f) == CB.Piece.Vd6 || this.blindMoves && this.blindSqs && this.blindSqs[f] == CB.Piece.Vd6) && 1 == CB.Square.V16w(f)
    }
    ;
    return b
}();
var HandlerBoardControl = function(e, b, d, c, f, g) {
    g = void 0 === g ? {} : g;
    var h = CB.V2ms.call(this) || this;
    h.options = g;
    h.init(e, b, d, c);
    h.blockedForHandler = null;
    h.fnMakeMove = f;
    h.fnMakeMove || (h.fnMakeMove = function(k) {
        this.moveEntry.boardWinMoveEntered(k.from, k.to, k.prom)
    }
    .bind(h));
    h.isHandlerBoard = !0;
    h.options.pieceFontName && (h.pieceFontName = h.options.pieceFontName);
    h.promoZone = [];
    h.promSquare = -1;
    return h
};
$jscomp.inherits(HandlerBoardControl, CB.V2ms);
HandlerBoardControl.prototype.getHandlers = function() {
    throw Error("override");
}
;
HandlerBoardControl.prototype.callHandlers = function(e, b) {
    for (var d = [], c = 1; c < arguments.length; ++c)
        d[c - 1] = arguments[c];
    this.beginEvent();
    var f = this.buildHandlerContext.apply(this, $jscomp.arrayFromIterable(d));
    null != this.blockedForHandler ? this.blockedForHandler[e].apply(this.blockedForHandler, [].concat($jscomp.arrayFromIterable(d), [f])) && this.endBlockHandlers() : this.handlers.forEach(function(g) {
        ("mousedown" != f.evt.type || g.shouldRun(f)) && g[e].apply(g, [].concat($jscomp.arrayFromIterable(d), [f]))
    });
    this.endEvent()
}
;
HandlerBoardControl.prototype.blockHandlersFor = function(e) {
    this.blockedForHandler = e
}
;
HandlerBoardControl.prototype.endBlockHandlers = function() {
    this.blockedForHandler = null
}
;
HandlerBoardControl.prototype.addHandler = function(e) {
    this.handlers.push(e)
}
;
HandlerBoardControl.prototype.buildHandlerContext = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    d = new CB.Position;
    this.getGame() && d.copy(this.getGame().getCurPos());
    return {
        position: d,
        board: this.board.getCopy(),
        evt: b[0],
        ptScaled: b[1]
    }
}
;
HandlerBoardControl.prototype.beginEvent = function() {
    this.moved = !1
}
;
HandlerBoardControl.prototype.endEvent = function() {}
;
HandlerBoardControl.prototype.makeMove = function(e, b) {
    if (!this.moved) {
        var d = new CB.V17g(e,b);
        if (!d.isNullMove()) {
            var c = this.boardSprites.getPiece(e)
              , f = this.isLegal(e, b)
              , g = 0 != this.board.get(b)
              , h = this.isProm(e, b);
            f ? (this.moved = !0,
            this.boardSprites.change(e, b),
            g && f && (this.drawSquare(this.cbcanvas.bufferCtx, b),
            c && c.saveBackground(this.cbcanvas.bufferCtx)),
            this.board.change(e, b),
            this.movePieceToSq(c, b),
            this.drawSquare(this.cbcanvas.bufferCtx, e)) : c && this.movePieceToSq(c, e);
            f && !h && this.fnMakeMove(d);
            h && (this.promSquare = b,
            this.prommove = d,
            this.drawPromChoices(b),
            this.blockHandlersFor(new PromotionClickHandler(this,b)))
        }
    }
}
;
HandlerBoardControl.gameMakeMove = function(e) {
    this.getGame().makeMove(e, CB.V1c6.V1cc)
}
;
HandlerBoardControl.prototype.isProm = function(e, b) {
    if (this.getGame())
        return this.getGame().getCurPos().isProm(e, b)
}
;
HandlerBoardControl.prototype.isLegal = function(e, b) {
    if (this.getGame())
        return this.getGame().getCurPos().isLegalFromTo(e, b)
}
;
HandlerBoardControl.prototype.drawPromChoices = function(e) {
    var b = this
      , d = 7 == CB.Square.V16w(e) ? CB.Piece.WHITE : CB.Piece.BLACK
      , c = [CB.Piece.QUEEN, CB.Piece.KNIGHT, CB.Piece.ROOK, CB.Piece.BISHOP].map(function(g) {
        return g | d
    })
      , f = [e];
    f.push(f[0] + 2 * d / 8 - 1);
    f.push(f[1] + 2 * d / 8 - 1);
    f.push(f[2] + 2 * d / 8 - 1);
    f.map(function(g, h) {
        b.board.set(g, c[h])
    });
    this.redraw();
    (new CB.Timer(function() {
        this.promoZone = [new CB.V2le(e + 6 * d / 8 - 3,e,9,"hsla( 100, 80%, 40%, 0.7 )",[15, 10],this,!1)];
        this.addAttributes(this.promoZone, 0)
    }
    .bind(this))).runOnce(100)
}
;
HandlerBoardControl.prototype.onPromoClick = function(e) {
    var b = this.prommove;
    b.prom = e;
    this.fnMakeMove(b);
    this.promSquare = -1;
    this.prommove = null;
    this.endBlockHandlers();
    this.removeAttributes(this.promoZone);
    this.promoZone = [];
    this.redraw()
}
;
HandlerBoardControl.prototype.animateMove = function(e, b) {
    var d = this.boardSprites.getPiece(e);
    e = this.getSquareCenterPos(e);
    b = this.getSquareCenterPos(b);
    this.animateFromTo(d, e, b, 2)
}
;
HandlerBoardControl.prototype.onMouseDown = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseDown"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onMouseUp = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseUp"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onMouseMove = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseMove"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onMouseEnter = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseEnter"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onMouseLeave = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseLeave"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onContextMenu = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onContextMenu"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onMouseWheel = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onMouseWheel"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onDoubleClick = function(e) {
    for (var b = [], d = 0; d < arguments.length; ++d)
        b[d - 0] = arguments[d];
    return this.callHandlers.apply(this, ["onDoubleClick"].concat($jscomp.arrayFromIterable(b)))
}
;
HandlerBoardControl.prototype.onRedraw = function() {
    -1 != this.promSquare && this.drawPromChoices(this.promSquare)
}
;
function makeBoardControlEvent(e) {
    return function(b) {
        for (var d = [], c = 0; c < arguments.length; ++c)
            d[c - 0] = arguments[c];
        this.callHandlers.apply(this, [e].concat($jscomp.arrayFromIterable(d)))
    }
}
var PlayHandlerBoardControl = function(e, b, d, c, f) {
    return HandlerBoardControl.call(this, e, b, d, c, null, f) || this
};
$jscomp.inherits(PlayHandlerBoardControl, HandlerBoardControl);
PlayHandlerBoardControl.prototype.onAfterPremove = function() {
    var e = this.currPiece;
    if (e && !isNaN(e.fromSq)) {
        var b = e.pos;
        (new CB.Timer(function() {
            var d = this.cbcanvas.bufferCtx;
            e.hide(d);
            this.redraw(!0, !0);
            this.drawSquare(d, e.fromSq);
            e.saveBackground(d);
            this.moveSprite(e, b)
        }
        .bind(this))).runOnce(10)
    }
}
;
var FritzHandlerBoardControl = function(e, b, d, c, f, g) {
    e = PlayHandlerBoardControl.call(this, e, b, d, c, f) || this;
    e.fnGetPlayingMode = g;
    e.handlers = e.getHandlers();
    return e
};
$jscomp.inherits(FritzHandlerBoardControl, PlayHandlerBoardControl);
FritzHandlerBoardControl.prototype.getHandlers = function() {
    return [new MoveSpriteHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MakeMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new TwoClickMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MousePointerHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new ShowLegalMovesBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },this.options.legalSqColor,!0), new PremoveHandler(this,{
        fnShouldRun: BoardHandler.isClick
    }), new ShowHintsBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },this.fnGetPlayingMode,900), new ShowCounterMovesBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },this.fnGetPlayingMode)]
}
;
FritzHandlerBoardControl.prototype.getBlindHandlers = function(e) {
    return [new BlindMakeMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new BlindShowBoardHandler(this,{
        fnShouldRun: BoardHandler.isRightMouse
    }), new MousePointerHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new ShowHintsBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },e,400)]
}
;
FritzHandlerBoardControl.prototype.setBlind = function(e, b) {
    (this.blindMoves = e) ? (this.nonBlindHandlers = this.handlers,
    this.handlers = this.getBlindHandlers(b)) : this.nonBlindHandlers && (this.handlers = this.nonBlindHandlers)
}
;
FritzHandlerBoardControl.prototype.makeBlindMove = function(e, b) {
    if (!this.moved) {
        var d = new CB.V17g(e,b);
        if (!d.isNullMove()) {
            var c = this.isLegal(e, b);
            e = this.isProm(e, b);
            c && !e && this.fnMakeMove(d);
            e && (this.promSquare = b,
            this.prommove = d,
            this.drawPromChoices(b),
            this.blockHandlersFor(new PromotionClickHandler(this,b)))
        }
    }
}
;
FritzHandlerBoardControl.prototype.flashBlindPiece = function(e) {
    var b = this.blindSqs ? this.blindSqs[e] : this.getBoard().sqs[e];
    this.blindPiece = this.boardSprites.getBlindSprite(this.pieceSpriteFactory, b);
    var d = this.getSquareCenterPos(e);
    this.blindPiece.moveTo(this.cbcanvas.bufferCtx, d);
    this.cbcanvas.requestAnimation(this.getSquareRect(e));
    (new CB.Timer(function() {
        d.x += 2;
        d.y += 2;
        this.blindPiece.moveTo(this.cbcanvas.bufferCtx, d);
        this.cbcanvas.requestAnimation(this.getSquareRect(e));
        this.hideSprite(this.blindPiece);
        this.blindPiece = null
    }
    .bind(this))).runOnce(100)
}
;
var PlaychessBoardControl = function(e, b, d, c, f, g) {
    e = PlayHandlerBoardControl.call(this, e, b, d, c, f) || this;
    e.fnGetPlayingMode = g;
    e.handlers = e.getHandlers();
    return e
};
$jscomp.inherits(PlaychessBoardControl, PlayHandlerBoardControl);
PlaychessBoardControl.prototype.getHandlers = function() {
    return [new MoveSpriteHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MakeMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new TwoClickMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MousePointerHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new ShowLegalMovesBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new AttributeBoardHandler(this,{
        fnShouldRun: BoardHandler.isRightMouse
    }), new PremoveHandler(this,{
        fnShouldRun: BoardHandler.isClick
    })]
}
;
var BeginnerBoardControl = function(e, b, d, c, f, g) {
    e = PlayHandlerBoardControl.call(this, e, b, d, c, f) || this;
    e.fnGetPlayingMode = g;
    e.handlers = e.getHandlers();
    return e
};
$jscomp.inherits(BeginnerBoardControl, PlayHandlerBoardControl);
BeginnerBoardControl.prototype.getHandlers = function() {
    return [new MoveSpriteHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MakeMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new TwoClickMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MousePointerHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new ShowLegalMovesBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new PremoveHandler(this,{
        fnShouldRun: BoardHandler.isClick
    }), new ShowHintsBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },this.fnGetPlayingMode,10), new ShowCounterMovesBoardHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    },this.fnGetPlayingMode)]
}
;
var TacticsBoardControl = function(e, b, d, c, f) {
    e = PlayHandlerBoardControl.call(this, e, b, d, c, f) || this;
    e.handlers = e.getHandlers();
    return e
};
$jscomp.inherits(TacticsBoardControl, PlayHandlerBoardControl);
TacticsBoardControl.prototype.getHandlers = function() {
    return [new MoveSpriteHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MakeMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new TwoClickMoveHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new MousePointerHandler(this,{
        fnShouldRun: BoardHandler.isLeftMouse
    }), new PremoveHandler(this,{
        fnShouldRun: BoardHandler.isClick
    })]
}
;
var BoardHandler = function(e, b) {
    this.control = e;
    this.options = b || {}
};
BoardHandler.prototype.getBoardControl = function() {
    return this.control
}
;
BoardHandler.prototype.getMoveEntry = function() {
    return this.getBoardControl().moveEntry
}
;
BoardHandler.prototype.getBoard = function() {
    return this.getBoardControl().board
}
;
BoardHandler.prototype.getCurrPiece = function() {
    return this.getBoardControl().currPiece
}
;
BoardHandler.prototype.setCurrPiece = function(e) {
    this.getBoardControl().currPiece = e
}
;
BoardHandler.prototype.deleteCurrPiece = function() {
    delete this.getBoardControl().currPiece;
    this.getBoardControl().currPiece = null
}
;
BoardHandler.prototype.setFromSq = function(e) {
    this.fromSq = e;
    this.getBoardControl().fromSq = e
}
;
BoardHandler.prototype.setButtonDown = function(e) {
    this.getBoardControl().buttonDown = e
}
;
BoardHandler.prototype.getCanvas = function() {
    return this.getBoardControl().cbcanvas
}
;
BoardHandler.prototype.getBufferCtx = function() {
    return this.getBoardControl().cbcanvas.bufferCtx
}
;
BoardHandler.prototype.getGame = function() {
    return this.getBoardControl().getGame()
}
;
BoardHandler.prototype.getSquareCenterPos = function(e) {
    return this.getBoardControl().getSquareCenterPos(e)
}
;
BoardHandler.prototype.getBoardSprites = function() {
    return this.getBoardControl().boardSprites
}
;
BoardHandler.prototype.getPieceSpriteFactory = function() {
    return this.getBoardControl().pieceSpriteFactory
}
;
BoardHandler.prototype.getNSqPix = function() {
    return this.getBoardControl().nSqPix
}
;
BoardHandler.prototype.getPixPos = function(e) {
    return this.getBoardControl().getPixPos(e)
}
;
BoardHandler.prototype.animateFromTo = function(e, b, d, c) {
    return this.getBoardControl().animateFromTo(e, b, d, c)
}
;
BoardHandler.prototype.shouldRun = function(e) {
    return this.options.fnShouldRun ? this.options.fnShouldRun(e) : !0
}
;
BoardHandler.prototype.onMouseDown = function(e, b) {}
;
BoardHandler.prototype.onMouseUp = function(e, b) {}
;
BoardHandler.prototype.onMouseEnter = function(e, b) {}
;
BoardHandler.prototype.onMouseLeave = function(e, b) {}
;
BoardHandler.prototype.onMouseMove = function(e, b) {}
;
BoardHandler.prototype.onContextMenu = function(e, b) {}
;
BoardHandler.prototype.onMouseWheel = function(e, b) {}
;
BoardHandler.prototype.onDoubleClick = function(e, b) {}
;
BoardHandler.prototype.getClickPos = function(e) {
    return this.getBoardControl().getClickPos(e)
}
;
BoardHandler.prototype.getSquare = function(e) {
    e = this.getBoardControl().getClickPos(e);
    return this.getBoardControl().getClickedSquare(e)
}
;
BoardHandler.prototype.isValidSquare = function(e) {
    return 0 <= e && 63 >= e
}
;
BoardHandler.prototype.isProm = function(e, b) {
    return this.getGame().getCurPos().isProm(e, b)
}
;
BoardHandler.prototype.grabPiece = function(e, b) {
    var d = this.getBoardControl().boardSprites.getPiece(e);
    d && (d.pieceName = CB.Piece.toString(this.getBoardControl().board.get(e)),
    d.hide(this.getBufferCtx()),
    d.fromSq = e,
    d.setPos(this.getBoardControl().getSquareCenterPos(e)),
    d.setBackground(V3ir.V3hy.getSquare(e, this.getBoardControl().nSqPix)),
    d.moveTo(this.getBoardControl().cbcanvas.bufferCtx, d.pos),
    this.moveSprite(d, b));
    return d
}
;
BoardHandler.prototype.moveSprite = function(e, b) {
    e.moveTo(this.getBoardControl().cbcanvas.bufferCtx, b);
    this.getBoardControl().cbcanvas.requestAnimation(e.getMoveClipRect())
}
;
BoardHandler.prototype.movePieceToSq = function(e, b) {
    this.moveSprite(e, this.getSquareCenterPos(b));
    e.lastSq = b
}
;
BoardHandler.prototype.hideCurrPiece = function() {
    var e = this.getCurrPiece();
    if (e && e.hide(this.getBufferCtx()))
        return !0
}
;
BoardHandler.prototype.unHideCurrPiece = function() {
    var e = this.getCurrPiece();
    e && (e.deleteBackground(),
    this.getBoardControl().moveSprite(e, e.pos),
    this.getCanvas().joinClipRect(e.getMoveClipRect()))
}
;
BoardHandler.prototype.animateCapture = function(e) {
    if (0 <= e) {
        var b = this.hideCurrPiece();
        this.drawSquare(this.getCanvas().bufferCtx, e);
        b && this.unHideCurrPiece()
    }
}
;
BoardHandler.prototype.drawSquare = function(e, b) {
    V3ir.V3hy.drawSquare(e, b, this.getNSqPix(), this.getPixPos(b))
}
;
BoardHandler.prototype.hideSprite = function(e) {
    e && (e.hide(this.getCanvas().bufferCtx),
    this.getCanvas().requestAnimation(e.getMoveClipRect()));
    return e
}
;
BoardHandler.isLeftMouse = function(e) {
    return 0 === e.evt.button
}
;
BoardHandler.isRightMouse = function(e) {
    return 2 === e.evt.button
}
;
BoardHandler.isShiftDown = function(e) {
    return e.evt.shiftKey
}
;
BoardHandler.isAltDown = function(e) {
    return e.evt.altKey
}
;
BoardHandler.isClick = function(e) {
    return BoardHandler.isLeftMouse(e) || BoardHandler.isRightMouse(e)
}
;
var SquareMovedBoardHandler = function() {
    BoardHandler.apply(this, arguments)
};
$jscomp.inherits(SquareMovedBoardHandler, BoardHandler);
SquareMovedBoardHandler.prototype.onMouseDown = function(e, b, d) {
    this.from = this.getSquare(b);
    return !1
}
;
SquareMovedBoardHandler.prototype.onMouseUp = function(e, b, d) {
    e = !1;
    b = this.getSquare(b);
    this.from !== b && this.isValidSquare(this.from) && this.isValidSquare(b) && (e = this.onSquareMove(this.from, b, d));
    delete this.from;
    return e
}
;
SquareMovedBoardHandler.prototype.onSquareMove = function(e, b) {}
;
var SquareClickedBoardHandler = function() {
    BoardHandler.apply(this, arguments)
};
$jscomp.inherits(SquareClickedBoardHandler, BoardHandler);
SquareClickedBoardHandler.prototype.onMouseDown = function(e, b, d) {
    this.from = this.getSquare(b);
    return !1
}
;
SquareClickedBoardHandler.prototype.onMouseUp = function(e, b, d) {
    e = !1;
    b = this.getSquare(b);
    this.from == b && this.isValidSquare(this.from) && (e = this.onSquareClick(this.from, d));
    delete this.from;
    return e
}
;
SquareClickedBoardHandler.prototype.onSquareClick = function(e) {}
;
var MoveSpriteHandler = function(e, b) {
    BoardHandler.call(this, e, b)
};
$jscomp.inherits(MoveSpriteHandler, BoardHandler);
MoveSpriteHandler.prototype.onMouseDown = function(e, b) {
    e = this.getSquare(b);
    if (this.isValidSquare(e)) {
        var d = this.hideCurrPiece();
        this.getBoardControl().quickFinishAnimations();
        d && this.unHideCurrPiece();
        b = this.getClickPos(b);
        this.getBoardControl().clickPos = b;
        this.setCurrPiece(this.grabPiece(e, b));
        this.setFromSq(e);
        this.setButtonDown(!0)
    }
}
;
MoveSpriteHandler.prototype.onMouseUp = function(e, b) {
    e = this.getClickPos(b);
    b = this.getSquare(b);
    -1 === b ? (this.getCurrPiece() && (this.animateFromTo(this.getCurrPiece(), e, this.getSquareCenterPos(this.fromSq), 2),
    this.deleteCurrPiece()),
    this.setButtonDown(!1),
    this.setFromSq(-1)) : (e = new CB.V17g(this.fromSq,b),
    this.getMoveEntry().isLegal(this.getBoard(), this.fromSq, b) && !e.isNullMove() ? this.getCurrPiece() && this.movePieceToSq(this.getCurrPiece(), b) : this.getCurrPiece() && this.movePieceToSq(this.getCurrPiece(), this.fromSq),
    this.setFromSq(null),
    this.setCurrPiece(null),
    this.setButtonDown(!1),
    this.getBoardControl().redraw())
}
;
MoveSpriteHandler.prototype.onMouseMove = function(e, b) {
    this.getCurrPiece() && (b = this.getClickPos(b),
    this.getBoardControl().animation.hideAll(),
    this.moveSprite(this.getCurrPiece(), b),
    this.getBoardControl().animation.showAll(),
    e.preventDefault())
}
;
MoveSpriteHandler.prototype.drawPromChoices = function(e) {
    var b = this
      , d = 7 == CB.Square.V16w(e) ? CB.Piece.WHITE : CB.Piece.BLACK
      , c = [CB.Piece.QUEEN, CB.Piece.KNIGHT, CB.Piece.ROOK, CB.Piece.BISHOP].map(function(g) {
        return g | d
    })
      , f = [e];
    f.push(f[0] + 2 * d / 8 - 1);
    f.push(f[1] + 2 * d / 8 - 1);
    f.push(f[2] + 2 * d / 8 - 1);
    f.map(function(g, h) {
        b.getBoard().set(g, c[h])
    });
    this.getBoardControl().redraw();
    e = [new CB.V2le(e + d - 4,e,3,"blue")];
    this.getBoardControl().addAttributes(e, 0)
}
;
MoveSpriteHandler.prototype.hidePieces = function(e) {
    var b = this;
    return e.map(function(d) {
        d = b.getBoardSprites().getPiece(d);
        d.hide(b.getCanvas().bufferCtx);
        return d
    })
}
;
var MakeMoveHandler = function(e, b) {
    BoardHandler.call(this, e, b);
    this.promSquare = -1
};
$jscomp.inherits(MakeMoveHandler, BoardHandler);
MakeMoveHandler.prototype.onMouseDown = function(e, b) {
    this.from = this.getSquare(b)
}
;
MakeMoveHandler.prototype.onMouseUp = function(e, b) {
    if (0 <= this.from && (e = this.getSquare(b),
    this.from != e))
        this.onSquareMove(this.from, e)
}
;
MakeMoveHandler.prototype.onSquareMove = function(e, b) {
    this.getMoveEntry().colorOk(this.getBoard().sqs[e], e) && this.getBoardControl().makeMove(e, b)
}
;
MakeMoveHandler.prototype.handlePromClick = function(e) {
    if (!(0 > this.promSquare || 63 < this.promSquare)) {
        var b = this.prommove;
        e = this.promSquare - e;
        0 == CB.Square.V16w(this.promSquare) && (e = -e);
        0 > e || 4 <= e || (b.prom = [CB.Piece.QUEEN, CB.Piece.KNIGHT, CB.Piece.ROOK, CB.Piece.BISHOP][e],
        this.getGame().makeMove(b, CB.V1c6.V1cc),
        this.promSquare = -1,
        this.prommove = null)
    }
}
;
var RetractMoveHandler = function(e, b) {
    SquareMovedBoardHandler.call(this, e, b)
};
$jscomp.inherits(RetractMoveHandler, SquareMovedBoardHandler);
RetractMoveHandler.prototype.onSquareMove = function(e, b) {
    var d = this.getGame().getLastMove();
    d && d.from == b && d.to == e && this.getGame().isLineEnd() && (this.getGame().gotoPrev(),
    this.getGame().deleteRemaining(!1))
}
;
var SingleClickMoveBoardHandler = function(e, b) {
    SquareClickedBoardHandler.call(this, e, b)
};
$jscomp.inherits(SingleClickMoveBoardHandler, SquareClickedBoardHandler);
SingleClickMoveBoardHandler.prototype.onSquareClick = function(e) {
    var b = this.getGame().getCurPos().V3hu().filter(function(d) {
        return d.to == e && !d.isNullMove()
    });
    1 === b.length && (b = b[0].from,
    this.getBoardControl().makeMove(b, e))
}
;
var TwoClickMoveHandler = function(e, b) {
    SquareClickedBoardHandler.call(this, e, b);
    this.squareAttri = this.fromSq = null
};
$jscomp.inherits(TwoClickMoveHandler, SquareClickedBoardHandler);
TwoClickMoveHandler.prototype.onMouseDown = function(e, b, d) {
    var c = this.getSquare(b);
    this.from != c && this.isValidSquare(c) && this.removeColoredSquare();
    SquareClickedBoardHandler.prototype.onMouseDown.call(this, e, b, d)
}
;
TwoClickMoveHandler.prototype.onSquareClick = function(e, b) {
    null == this.fromSq ? this.firstClick(e, b) : this.secondClick(e, b)
}
;
TwoClickMoveHandler.prototype.firstClick = function(e, b) {
    this.getBoard().get(e) && this.hasMovesFrom(e, b) && (b = this.hideCurrPiece(),
    this.squareAttri = new CB.BoardColouredSquare(e,"rgba( 0, 92, 6, 0.5 )",!1),
    this.getBoardControl().addAttributes([this.squareAttri], 0),
    this.setFromSq(e),
    b && this.unHideCurrPiece())
}
;
TwoClickMoveHandler.prototype.secondClick = function(e, b) {
    this.removeColoredSquare();
    this.squareAttri = null;
    this.getBoardControl().isLegal(this.fromSq, e) ? this.getBoardControl().makeMove(this.fromSq, e) : this.hasMovesFrom(e, b) ? this.setFromSquare(e) : this.setFromSquare(null)
}
;
TwoClickMoveHandler.prototype.colorSquare = function(e) {
    e = new CB.BoardColouredSquare(e,"rgba(0, 92, 6, 0.4)",!1);
    this.getBoardControl().addAttributes([e], 0);
    return e
}
;
TwoClickMoveHandler.prototype.setFromSquare = function(e) {
    null != e && (null != this.squareAttri && this.removeColoredSquare(),
    this.squareAttri = this.colorSquare(e));
    this.setFromSq(e)
}
;
TwoClickMoveHandler.prototype.removeColoredSquare = function() {
    var e = this.hideCurrPiece();
    null != this.squareAttri && this.getBoardControl().removeAttributes([this.squareAttri]);
    this.squareAttri = null;
    e && this.unHideCurrPiece()
}
;
TwoClickMoveHandler.prototype.hasMovesFrom = function(e, b) {
    return b.position.V3hu().some(function(d) {
        return d.from == e
    })
}
;
var ShowLegalMovesBoardHandler = function(e, b, d, c) {
    BoardHandler.call(this, e, b);
    this.squareFrom = this.sqClicked = null;
    this.attributes = [];
    this.color = d || "rgba( 16, 19, 188, 0.3 )";
    this.clearOnMouseDown = c
};
$jscomp.inherits(ShowLegalMovesBoardHandler, BoardHandler);
ShowLegalMovesBoardHandler.prototype.onMouseDown = function(e, b) {
    this.clearOnMouseDown && (e = this.hideCurrPiece(),
    this.getBoardControl().clearAll(),
    e && this.unHideCurrPiece());
    this.squareFrom = b = this.getSquare(b);
    this.sqClicked != b && (this.remove(),
    this.add(b))
}
;
ShowLegalMovesBoardHandler.prototype.onMouseUp = function(e, b, d) {
    e = this.getSquare(b);
    if (this.squareFrom == e)
        this.onSquareClick(e);
    else
        this.onSquareMove(this.squareFrom, e);
    this.squareFrom = null
}
;
ShowLegalMovesBoardHandler.prototype.onSquareClick = function(e) {
    this.remove();
    this.sqClicked != e && this.add(e)
}
;
ShowLegalMovesBoardHandler.prototype.onSquareMove = function(e, b) {}
;
ShowLegalMovesBoardHandler.prototype.remove = function() {
    this.getBoardControl().removeAttributes(this.attributes);
    this.attributes = []
}
;
ShowLegalMovesBoardHandler.prototype.add = function(e) {
    var b = this;
    if (this.getBoard().get(e)) {
        var d = this.hideCurrPiece();
        this.square = e;
        var c = this.getGame().getCurPos().V3hu().filter(function(f) {
            return f.from == e
        }).map(function(f) {
            return f.to
        }).map(function(f) {
            return new BoardCircle(f,b.getColor())
        });
        this.getBoardControl().addAttributes(c, 0);
        this.attributes = c;
        d && this.unHideCurrPiece()
    }
}
;
ShowLegalMovesBoardHandler.prototype.getColor = function() {
    return this.color
}
;
var PromotionClickHandler = function(e, b) {
    SquareClickedBoardHandler.call(this, e);
    this.promSq = b
};
$jscomp.inherits(PromotionClickHandler, SquareClickedBoardHandler);
PromotionClickHandler.prototype.onSquareClick = function(e) {
    if (-1 == this.promSq)
        return !0;
    e = this.promSq - e;
    0 == CB.Square.V16w(this.promSq) && (e = -e);
    if (0 > e || 4 <= e)
        return !1;
    e = [CB.Piece.QUEEN, CB.Piece.KNIGHT, CB.Piece.ROOK, CB.Piece.BISHOP][e];
    this.getBoardControl().onPromoClick(e);
    return !0
}
;
var PremoveHandler = function(e, b) {
    SquareMovedBoardHandler.call(this, e, b)
};
$jscomp.inherits(PremoveHandler, SquareMovedBoardHandler);
PremoveHandler.prototype.onMouseDown = function(e, b) {
    SquareMovedBoardHandler.prototype.onMouseDown.call(this, e, b);
    2 === e.button && this.clear()
}
;
PremoveHandler.prototype.onMouseUp = function(e, b) {
    var d = this.getSquare(b);
    this.from === d && this.isValidSquare(d) && this.clear();
    SquareMovedBoardHandler.prototype.onMouseUp.call(this, e, b)
}
;
PremoveHandler.prototype.clear = function() {
    this.getMoveEntry().clearPreMoves() && this.getBoardControl().undoAttributes()
}
;
PremoveHandler.prototype.onSquareMove = function(e, b) {
    if (this.getMoveEntry().isPremove(this.getBoard(), e, b)) {
        var d = this.getMoveEntry().getFirstSquareOfPremoveFrom(e);
        d = this.getBoard().get(d);
        var c = CB.Piece.NONE;
        (d & CB.Piece.V15j) != CB.Piece.PAWN || 0 != CB.Square.V16u(b) && 7 != CB.Square.V16u(b) || (c = CB.Piece.QUEEN);
        this.getMoveEntry().boardWinMoveEntered(e, b, c) || (this.getCanvas().requestAnimation(this.getBoardControl().getGenerousClipRect(e, b), !0),
        this.getMoveEntry().renderPreMoves())
    }
}
;
var AttributeBoardHandler = function(e, b) {
    BoardHandler.call(this, e, b);
    this.from = null
};
$jscomp.inherits(AttributeBoardHandler, BoardHandler);
AttributeBoardHandler.prototype.onMouseDown = function(e, b) {
    this.from = this.getSquare(b)
}
;
AttributeBoardHandler.prototype.onMouseUp = function(e, b) {
    if (null !== this.from) {
        b = this.getSquare(b);
        if (-1 === this.from && -1 === b)
            this.onRemoveAll();
        if (-1 !== this.from && -1 !== b) {
            if (this.from === b)
                this.onSquare(b, e);
            else
                this.onArrow(this.from, b, e);
            this.from = null
        }
    }
}
;
AttributeBoardHandler.prototype.onRemoveAll = function() {
    this.getGame().setAnno(CB.AnnoType.ARROW_LIST, new CB.ColArrowAnno);
    this.getBoardControl().redraw();
    this.getGame().setAnno(CB.AnnoType.SQUARE_LIST, new CB.ColSqAnno);
    this.getBoardControl().redraw()
}
;
AttributeBoardHandler.prototype.onArrow = function(e, b, d) {
    e = new CB.ColArrow(e,b,this.getColor(d));
    this.hasArrow(e) ? this.removeArrow(e) : this.addArrow(e);
    this.getBoardControl().redraw()
}
;
AttributeBoardHandler.prototype.addArrow = function(e) {
    var b = this.getGame().getAnno(CB.AnnoType.ARROW_LIST) || new CB.ColArrowAnno;
    b.push(e);
    this.getGame().setAnno(CB.AnnoType.ARROW_LIST, b)
}
;
AttributeBoardHandler.prototype.removeArrow = function(e) {
    var b = this
      , d = this.getGame().getAnno(CB.AnnoType.ARROW_LIST) || new CB.ColArrowAnno;
    d.removeIf(function(c) {
        return b.isSameArrow(c, e)
    });
    this.getGame().setAnno(CB.AnnoType.ARROW_LIST, d)
}
;
AttributeBoardHandler.prototype.hasArrow = function(e) {
    var b = this;
    return (this.getGame().getAnno(CB.AnnoType.ARROW_LIST) || new CB.ColArrowAnno).some(function(d) {
        return b.isSameArrow(e, d)
    })
}
;
AttributeBoardHandler.prototype.isSameArrow = function(e, b) {
    return e.from == b.from && e.to == b.to
}
;
AttributeBoardHandler.prototype.onSquare = function(e, b) {
    e = new CB.ColSq(e,this.getColor(b));
    this.hasSquare(e) ? this.removeSquareMarker(e) : this.addSquareMarker(e);
    this.getBoardControl().redraw()
}
;
AttributeBoardHandler.prototype.addSquareMarker = function(e) {
    var b = this.getGame().getAnno(CB.AnnoType.SQUARE_LIST) || new CB.ColSqAnno;
    b.push(e);
    this.getGame().setAnno(CB.AnnoType.SQUARE_LIST, b)
}
;
AttributeBoardHandler.prototype.removeSquareMarker = function(e) {
    var b = this
      , d = this.getGame().getAnno(CB.AnnoType.SQUARE_LIST) || new CB.ColSqAnno;
    d.removeIf(function(c) {
        return b.isSameSquare(c, e)
    });
    this.getGame().setAnno(CB.AnnoType.SQUARE_LIST, d)
}
;
AttributeBoardHandler.prototype.hasSquare = function(e) {
    var b = this;
    return (this.getGame().getAnno(CB.AnnoType.SQUARE_LIST) || new CB.ColSqAnno).some(function(d) {
        return b.isSameSquare(d, e)
    })
}
;
AttributeBoardHandler.prototype.isSameSquare = function(e, b) {
    return e.field == b.field
}
;
AttributeBoardHandler.prototype.getColor = function(e) {
    return e.altKey && !e.shiftKey ? e.ctrlKey ? CB.V1ws.YELLOW : CB.V1ws.GREEN : CB.V1ws.RED
}
;
var ShowHintsBoardHandler = function(e, b, d, c) {
    BoardHandler.call(this, e, b);
    this.squareFrom = this.sqClicked = null;
    this.attributes = [];
    this.fnGetPlayingMode = d;
    this.clickHintTimer = new CB.Timer;
    this.timeout = c || 1E3;
    V3ir.analysisEngine && V3ir.analysisEngine.addOnLineListener(this.onLineListener.bind(this))
};
$jscomp.inherits(ShowHintsBoardHandler, BoardHandler);
ShowHintsBoardHandler.prototype.onLineListener = function(e, b, d) {
    this.buttonDown && null != this.squareFrom && this.squareFrom == this.moveSq && this.fired && (e = this.hideCurrPiece(),
    this.markedSqsOnButtonDown && this.markedSqsOnButtonDown.length && this.remove(),
    this.markedSqsOnButtonDown = this.fnGetPlayingMode().getMarkedSquaresOnButtonDown(this.moveSq, !0)) && (b = this.markedSqsOnButtonDown.map(function(c) {
        return new CB.BoardColouredSquare(c.sq,c.clr)
    }),
    this.getBoardControl().addAttributes(b, 0),
    this.attributes = b,
    e && this.unHideCurrPiece())
}
;
ShowHintsBoardHandler.prototype.onMouseDown = function(e, b) {
    this.buttonDown = !0;
    this.squareFrom = this.getSquare(b);
    this.startClickHintTimer(this.squareFrom, this.timeout)
}
;
ShowHintsBoardHandler.prototype.onMouseUp = function(e, b, d) {
    this.buttonDown = !1;
    this.stopClickHintTimer();
    this.remove();
    delete this.squareFrom;
    this.fired = !1
}
;
ShowHintsBoardHandler.prototype.onMouseMove = function(e, b, d) {
    this.moveSq = this.getSquare(b);
    this.getBoardControl().currPiece && this.moveSq != this.squareFrom && this.stopClickHintTimer()
}
;
ShowHintsBoardHandler.prototype.remove = function() {
    this.getBoardControl().removeAttributes(this.attributes);
    this.attributes = []
}
;
ShowHintsBoardHandler.prototype.startClickHintTimer = function(e, b) {
    this.clickHintTimer.runOnce(b || 1E3, function() {
        this.fired = !0;
        var d = this.markedSqsOnButtonDown = this.fnGetPlayingMode().getMarkedSquaresOnButtonDown(e, !0);
        if (d && d.length) {
            var c = this.hideCurrPiece();
            d = d.map(function(f) {
                return new CB.BoardColouredSquare(f.sq,f.clr)
            });
            this.getBoardControl().addAttributes(d, 0);
            this.attributes = d;
            this.fnGetPlayingMode().notifyHinted && this.fnGetPlayingMode().notifyHinted();
            c && this.unHideCurrPiece()
        }
    }
    .bind(this))
}
;
ShowHintsBoardHandler.prototype.stopClickHintTimer = function() {
    this.clickHintTimer.stop()
}
;
var ShowCounterMovesBoardHandler = function(e, b, d) {
    BoardHandler.call(this, e, b);
    this.squareFrom = this.sqClicked = null;
    this.attributes = [];
    this.fnGetPlayingMode = d;
    this.lastMouseMoveSq = null
};
$jscomp.inherits(ShowCounterMovesBoardHandler, BoardHandler);
ShowCounterMovesBoardHandler.prototype.onMouseDown = function(e, b) {
    this.buttonDown = !0;
    this.squareFrom = this.getSquare(b)
}
;
ShowCounterMovesBoardHandler.prototype.onMouseUp = function(e, b, d) {
    this.buttonDown = !1;
    this.getSquare(b);
    this.remove();
    delete this.squareFrom;
    this.lastMouseMoveSq = -1
}
;
ShowCounterMovesBoardHandler.prototype.onMouseMove = function(e, b, d) {
    this.moveSq = this.getSquare(b);
    this.getBoardControl().currPiece && (this.moveSq != this.squareFrom ? this.moveSq != this.lastMouseMoveSq && (this.remove(),
    this.lastMouseMoveSq = this.moveSq,
    b = this.getBoardControl(),
    e = this.hideCurrPiece(),
    V3ir.analysisEngine && (b = this.fnGetPlayingMode().getCounterMoveTo(b.fromSq, this.moveSq)) && (b = new CB.V1ea(b.from,b.to,b.clr,12,[5, 10]),
    this.getBoardControl().addAttributes([b], 0),
    this.attributes = [b]),
    e && this.unHideCurrPiece()) : (this.remove(),
    this.lastMouseMoveSq = -1))
}
;
ShowCounterMovesBoardHandler.prototype.remove = function() {
    this.getBoardControl().removeAttributes(this.attributes);
    this.attributes = []
}
;
var BlindMakeMoveHandler = function(e, b) {
    BoardHandler.call(this, e, b);
    this.promSquare = -1
};
$jscomp.inherits(BlindMakeMoveHandler, BoardHandler);
BlindMakeMoveHandler.prototype.onMouseDown = function(e, b) {
    this.from = this.getSquare(b);
    this.isValidSquare(this.from) && this.getBoardControl().flashBlindPiece(this.from)
}
;
BlindMakeMoveHandler.prototype.onMouseUp = function(e, b) {
    if (0 <= this.from && (e = this.getSquare(b),
    this.from != e))
        this.onSquareMove(this.from, e)
}
;
BlindMakeMoveHandler.prototype.onSquareMove = function(e, b) {
    this.getBoardControl().makeBlindMove(e, b)
}
;
BlindMakeMoveHandler.prototype.handlePromClick = function(e) {
    if (!(0 > this.promSquare || 63 < this.promSquare)) {
        var b = this.prommove;
        e = this.promSquare - e;
        0 == CB.Square.V16w(this.promSquare) && (e = -e);
        0 > e || 4 <= e || (b.prom = [CB.Piece.QUEEN, CB.Piece.KNIGHT, CB.Piece.ROOK, CB.Piece.BISHOP][e],
        this.getGame().makeMove(b, CB.V1c6.V1cc),
        this.promSquare = -1,
        this.prommove = null)
    }
}
;
var BlindShowBoardHandler = function(e, b) {
    BoardHandler.call(this, e, b)
};
$jscomp.inherits(BlindShowBoardHandler, BoardHandler);
BlindShowBoardHandler.prototype.onMouseDown = function(e, b) {
    this.getBoardControl().redrawBlindBoard()
}
;
BlindShowBoardHandler.prototype.onMouseUp = function(e, b) {
    this.getBoardControl().redraw(!1)
}
;
var MousePointerHandler = function(e, b) {
    BoardHandler.call(this, e, b)
};
$jscomp.inherits(MousePointerHandler, BoardHandler);
MousePointerHandler.prototype.onMouseMove = function(e, b) {
    var d = this.getSquare(b);
    b = !1;
    0 <= d && (d = this.getBoard().get(d),
    d === CB.Piece.NONE || !this.getMoveEntry() || this.getMoveEntry().getMySide() != CB.Piece.side(d) && null !== this.getMoveEntry().getMySide() || (e.target.style.cursor = this.busy ? "wait" : "pointer",
    b = !0));
    b || (e.target.style.cursor = this.busy ? "wait" : "default")
}
;
"use strict";
CB.PosInputControl = function() {
    var e = function(b, d, c, f, g, h, k) {
        this.init(b, d, c, f);
        this.V2qs = g;
        this.V2qt = h;
        this.options = k
    };
    CB.inherit(e, CB.V2ms);
    e.prototype.V1gp = function() {
        var b = new CB.PosInputButtons(this.cbcanvas.canvas.parentElement,{
            V2qu: this.V2qv.bind(this),
            V2qw: this.V2qx.bind(this),
            V2qy: this.V2qz.bind(this),
            V2r0: this.V2r1.bind(this),
            onSquare: this.V2r2.bind(this),
            onDone: this.V2r3.bind(this),
            V2r4: this.V2r5.bind(this)
        });
        this.V2oh(b);
        this.buttons = this.rightWin;
        this.addOnBoardChangedListener(this.V2r6.bind(this));
        this.buttons.addOnBoardChangedListener(this.V2r6.bind(this));
        this.onReadyHandlers.add(function() {
            this.buttons.setVisible(!0)
        }
        .bind(this))
    }
    ;
    e.prototype.getBTM = function() {
        return this.buttons.getBTM()
    }
    ;
    e.prototype.setPosition = function(b) {
        this.V2pi(b.board);
        this.buttons.setBTM(b.isBTM());
        this.buttons.setCastleRights(b.getCastleRights())
    }
    ;
    e.prototype.V1gr = function() {
        var b = new CB.Position;
        this.board.copyTo(b.board);
        b.setBTM(this.getBTM());
        b.cr = this.buttons.getCastleRights();
        b.ep = this.buttons.V2r7();
        return b
    }
    ;
    e.prototype.V2qz = function(b, d) {
        this.V2r8(b)
    }
    ;
    e.prototype.V2r1 = function(b, d) {
        this.V2r8(b + CB.V15e.V15g)
    }
    ;
    e.prototype.V2r2 = function() {
        this.V2r9 = !1;
        this.V2ra = !0;
        this.currPiece && (this.hideSprite(this.currPiece),
        this.boardSprites.V2kl(this.currPiece),
        delete this.currPiece)
    }
    ;
    e.prototype.V2r3 = function() {
        this.V2qs()
    }
    ;
    e.prototype.V2r5 = function() {
        this.V2qs(!0)
    }
    ;
    e.prototype.V2qv = function() {
        for (var b = [], d = 0; 64 > d; d++)
            b.push(0);
        this.V2pi(b, !1);
        this.V2r6();
        this.V2r8(CB.Piece.Vcx)
    }
    ;
    e.prototype.V2qx = function() {
        var b = new CB.Position;
        this.setPosition(b);
        this.V2r6()
    }
    ;
    e.prototype.V2r8 = function(b) {
        this.V2r9 = !0;
        this.V2ra = !1;
        this.buttonDown = !0;
        this.currPiece && (this.hideSprite(this.currPiece),
        this.boardSprites.V2kl(this.currPiece));
        this.currPiece = this.boardSprites.createSprite(this.pieceSpriteFactory, b);
        this.V2mu = new CB.Point(0,0)
    }
    ;
    e.prototype.onMouseDown = function(b) {
        b.preventDefault()
    }
    ;
    e.prototype.onMouseWheel = function(b, d) {
        if (this.currPiece && this.V2r9) {
            var c = this.currPiece.piece & CB.Piece.V15j;
            0 < b.wheelDelta ? (c++,
            c > CB.Piece.PAWN && (c = CB.Piece.KING)) : (c--,
            0 >= c && (c = CB.Piece.PAWN));
            this.hideSprite(this.currPiece);
            this.boardSprites.V2kl(this.currPiece);
            this.currPiece = this.boardSprites.createSprite(this.pieceSpriteFactory, c | this.currPiece.piece & CB.Piece.V15h);
            this.clickPos = this.getClickPos(d);
            this.V2mu = new CB.Point(0,0);
            this.redraw();
            this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.clickPos.add(this.V2mu))
        }
    }
    ;
    e.prototype.onMouseUp = function(b, d) {
        this.getClickPos(d);
        this.buttonDown = !1;
        if (this.allowInput)
            if (2 == b.button && this.V2r9 && this.currPiece) {
                var c = this.currPiece.piece;
                c ^= CB.Piece.V15h;
                this.hideSprite(this.currPiece);
                this.boardSprites.V2kl(this.currPiece);
                this.currPiece = this.boardSprites.createSprite(this.pieceSpriteFactory, c);
                this.clickPos = this.getClickPos(d);
                this.redraw();
                this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.clickPos.add(this.V2mu))
            } else
                new CB.Tick,
                c = this.clickPos = this.getClickPos(d),
                d = this.getClickedSquare(c),
                void 0 !== this.currPiece && -1 != d ? (d !== this.fromSq ? (this.V186 = d,
                this.board.get(d) && this.animateCapture(d),
                this.V2r9 ? this.board.sqs[d] != this.currPiece.piece ? (c = this.currPiece.piece,
                this.boardSprites.set(this.currPiece, d),
                this.board.set(d, c)) : this.V2rb(d) : (this.boardSprites.change(this.fromSq, d),
                this.board.change(this.fromSq, d)),
                this.board.sqs[d] && this.moveSprite(this.currPiece, this.getSquareCenterPos(d)),
                delete this.fromSq) : this.currPiece && this.moveSprite(this.currPiece, this.getSquareCenterPos(d)),
                c = !1,
                this.V2r9 && (this.currPiece = this.boardSprites.createSprite(this.pieceSpriteFactory, this.currPiece.piece),
                c = this.buttonDown = !0),
                c || (this.currPiece && (this.currPiece.lastSq = d),
                delete this.currPiece),
                b.preventDefault()) : this.V2ra && -1 != d && this.V2rb(d),
                this.redraw(),
                this.fireOnBoardChanged(this);
        this.fromSq = -1
    }
    ;
    e.prototype.onContextMenu = function(b, d) {
        this.getClickPos(d)
    }
    ;
    e.prototype.V2rb = function(b) {
        this.boardSprites.set(null, b);
        this.board.set(b, 0);
        this.drawSquare(this.cbcanvas.bufferCtx, b);
        this.cbcanvas.V2lo()
    }
    ;
    e.prototype.onMouseMove = function(b, d) {
        this.allowInput && (this.clickPos = this.getClickPos(d),
        this.getInnerRect().isInside(this.clickPos.x, this.clickPos.y) ? (this.getClickedSquare(this.clickPos),
        void 0 !== this.currPiece && (new CB.Tick,
        this.moveSprite(this.currPiece, this.clickPos.add(this.V2mu)),
        b.preventDefault())) : this.hideSprite(this.currPiece),
        b.target.style.cursor = this.V2ra ? "crosshair" : "default")
    }
    ;
    e.prototype.V2r6 = function(b) {
        b = this.V1gr();
        this.buttons.V2rc(b.V197());
        var d = b.V198().map(CB.Square.V16p);
        d.unshift("-");
        this.buttons.V2rd(d);
        b = this.V2qt ? this.V2qt(b) : b.isLegal() && !b.V191();
        this.buttons.V2re(b)
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "BoardChanged");
    return e
}();
"use strict";
CB.PosInputButtons = function() {
    var e = function(b, d) {
        this.background = new CB.V2lj(b,"posInputBtnsBG");
        this.background.style["font-size"] = 1 / CB.Vq.V12g() + "em";
        this.V2rf = 40;
        this.btnTotSide = 44;
        this.btnHDist = 5;
        this.handlers = d
    };
    e.prototype.V1gp = function() {
        this.V2rg = [];
        this.V2rh = [];
        for (var b = "KQNBRP".split(""), d = 0; 6 > d; d++)
            this.V2rg.push(this.V2ri("w" + b[d])),
            this.V2rg[d].setHandler(function(c) {
                return function(f) {
                    this.handlers.V2qy(c, f)
                }
                .bind(this)
            }
            .call(this, d + 1)),
            this.V2rh.push(this.V2ri("b" + b[d])),
            this.V2rh[d].setHandler(function(c) {
                return function(f) {
                    this.handlers.V2r0(c, f)
                }
                .bind(this)
            }
            .call(this, d + 1));
        this.V2rj = this.V2rk(this.handlers.onSquare);
        this.V2rl = this.V2rm(this.handlers.V2qu);
        this.V2rn = this.V2ro(this.handlers.V2qw);
        this.V2rp = this.V2rq("Black's Move");
        this.V2rr = this.V2rq("w 0-0");
        this.V2rs = this.V2rq("b 0-0");
        this.V2rt = this.V2rq("w 0-0-0");
        this.V2ru = this.V2rq("b 0-0-0");
        this.V2rv = this.V2rw("EP");
        this.V2rx = this.V2ry(this.handlers.onDone);
        this.V2rz = this.V2s0(this.handlers.V2r4)
    }
    ;
    e.prototype.V2s1 = function() {
        this.background.V2s2()
    }
    ;
    e.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    e.prototype.V2s3 = function() {
        this.V2rx.style.display = "none";
        this.V2rz.style.display = "none"
    }
    ;
    e.prototype.V2nw = function(b) {
        var d = [48, 44, 40, 36, 32], c;
        for (c = 0; c < d.length; c++)
            if (b >= d[c]) {
                b = d[c];
                break
            }
        c >= d.length && (b = 8);
        return b
    }
    ;
    e.prototype.V2ns = function(b, d) {
        this.btnHDist = CB.Vq.pixToZoom(Math.max(1, Math.min(6, d / 96)));
        this.V2rf = this.V2nw(Math.round(.9 * Math.max(16, Math.min(56, b / 8 - this.btnHDist))));
        this.btnTotSide = Math.round(this.V2rf / .9);
        return CB.Vq.V11o() ? this.V2s4() : .95 * this.V2s4()
    }
    ;
    e.prototype.V2s4 = function() {
        return 2 * this.btnTotSide + this.V2s5(this.btnTotSide) + 2 * this.btnHDist
    }
    ;
    e.prototype.setVisible = function(b) {
        this.background.setVisible(b)
    }
    ;
    e.prototype.getBTM = function() {
        return this.V2rp.V2s6()
    }
    ;
    e.prototype.setBTM = function(b) {
        this.V2rp.V2s7(b)
    }
    ;
    e.prototype.setCastleRights = function(b) {
        this.V2rr.V2s7(!!(b & CB.V15t.V15v));
        this.V2rs.V2s7(!!(b & CB.V15t.V15x));
        this.V2rt.V2s7(!!(b & CB.V15t.V15u));
        this.V2ru.V2s7(!!(b & CB.V15t.V15w))
    }
    ;
    e.prototype.V2rc = function(b) {
        var d = this.getCastleRights();
        this.setCastleRights(d & b);
        this.V2rr.V2s8(!!(b & CB.V15t.V15v));
        this.V2rs.V2s8(!!(b & CB.V15t.V15x));
        this.V2rt.V2s8(!!(b & CB.V15t.V15u));
        this.V2ru.V2s8(!!(b & CB.V15t.V15w))
    }
    ;
    e.prototype.getCastleRights = function() {
        var b = CB.V15t.NONE;
        this.V2rr.V2s6() && (b |= CB.V15t.V15v);
        this.V2rs.V2s6() && (b |= CB.V15t.V15x);
        this.V2rt.V2s6() && (b |= CB.V15t.V15u);
        this.V2ru.V2s6() && (b |= CB.V15t.V15w);
        return b
    }
    ;
    e.prototype.onResize = function(b) {
        var d = b.cbcanvas.pixToZoomRect(b.getOuterRect());
        b.cbcanvas.pixToZoomRect(b.getOuterRect());
        b = d.right;
        d = d.top;
        this.V2s1();
        this.V1gp();
        this.setPosSize(b, d, this.V2s4(), 8 * this.btnTotSide + 7 * this.btnHDist)
    }
    ;
    e.prototype.setPosSize = function(b, d, c, f) {
        this.x0 = b;
        this.y0 = d;
        this.w = c;
        this.h = f;
        this.V1gq()
    }
    ;
    e.prototype.V1gq = function() {
        for (var b = this.btnTotSide, d = this.btnTotSide, c = this.btnHDist, f = this.btnHDist, g = this.x0 + f, h = this.y0, k = 0; 6 > k; k++)
            this.V2rg[k].setPosSize(g, h, b, d),
            this.V2rh[k].setPosSize(g + b + f, h, b, d),
            h += c + d;
        g = this.x0 + 2 * b + 3 * f;
        h = this.y0;
        this.V2rj.setPosSize(g, h, b, d);
        h += c + d;
        d = this.V2s5(b);
        k = this.btnTotSide / 2;
        var l = Math.max(8, Math.min(24, Math.round(this.btnTotSide / 2.5)));
        this.V2rl.setPosSize(g, h, d, k);
        h += f + k;
        this.V2rn.setPosSize(g, h, d, k);
        h += 2 * f + k;
        this.V2rp.setPosSize(g, h, d, l);
        h += f + l;
        this.V2rr.setPosSize(g, h, d, l);
        h += 1 + l;
        this.V2rs.setPosSize(g, h, d, l);
        h += 1 + l;
        this.V2rt.setPosSize(g, h, d, l);
        h += 1 + l;
        this.V2ru.setPosSize(g, h, d, l);
        h += f + l;
        this.V2rv.setPosSize(g, h, b, k);
        h += f + k;
        b = 1.4 * k;
        this.V2rz.setPosSize(g, h, d, k);
        this.V2rx.setPosSize(g, h + (c + k), d, b)
    }
    ;
    e.prototype.V2s5 = function(b) {
        return Math.round(2.1 * b + this.btnHDist)
    }
    ;
    e.prototype.V2ri = function(b) {
        var d = new CB.Button(this.background,"PieceBtn-" + b,"cb-button");
        d.setImage("/Common/Media/Buttons/" + b + "-" + this.V2rf + "px.png");
        return d
    }
    ;
    e.prototype.V2rk = function(b) {
        var d = new CB.Button(this.background,"SqBtn");
        d.setImage("/Common/Media/Buttons/sqL-" + this.V2rf + "px.png");
        d.setHandler(b);
        return d
    }
    ;
    e.prototype.V2rm = function(b) {
        return this.V2s9("Clear", b)
    }
    ;
    e.prototype.V2ro = function(b) {
        return this.V2s9("Init", b)
    }
    ;
    e.prototype.V2ry = function(b) {
        return this.V2s9("Done", b)
    }
    ;
    e.prototype.V2s0 = function(b) {
        return this.V2s9("Cancel", b)
    }
    ;
    e.prototype.V2s9 = function(b, d) {
        var c = new CB.Button(this.background);
        c.setText(b);
        c.setHandler(d);
        return c
    }
    ;
    e.prototype.V2re = function(b) {
        this.V2rx.V2s8(b)
    }
    ;
    e.prototype.V2rq = function(b) {
        var d = new CB.CheckBox(this.background);
        d.setText(b);
        d.setHandler("change", this.fireOnBoardChanged.bind(this));
        return d
    }
    ;
    e.prototype.V2rd = function(b) {
        var d = this.V2rv.value;
        this.V2rv.setOptions(b);
        0 <= b.indexOf(d) && (this.V2rv.value = d);
        this.V2rv.V2s8(1 < b.length)
    }
    ;
    e.prototype.V2r7 = function() {
        var b = this.V2rv.V2sa();
        switch (b) {
        case "-":
            return CB.Position.NOEP;
        default:
            return b && b.length ? b.charCodeAt(0) - 97 : CB.Position.NOEP
        }
    }
    ;
    e.prototype.V2rw = function(b) {
        b = new CB.Select(this.background);
        b.setHandler(function() {
            this.fireOnBoardChanged()
        }
        .bind(this));
        return b
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "BoardChanged");
    return e
}();
"use strict";
CB.V2o9 = function() {
    new CB.Color(0,0,0,.3);
    new CB.Color(210,255,170,.75);
    new CB.Color(255,255,220,.9);
    var e = 1
      , b = function(d, c, f) {
        this.uniqueId = e++;
        this.background = new CB.V2lj(document.body,"bClockBG" + this.uniqueId);
        this.V1qs = new CB.V2m7(this.background,{
            border: d.cbcanvas.pixToZoom(2),
            borderClr: "rgba( 255, 255, 255, 0.4 )"
        });
        d.titleWin = this;
        this.h = c;
        f && (this.V2sb = new CB.CloseButton(this.background,"bCloseBtn" + this.uniqueId,f),
        this.V2sb.V2mq(1, 3, "rgba( 60, 30, 20, 0.9 )"))
    };
    b.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    b.prototype.setText = function(d, c) {
        c ? this.V1qs.V2ml(d) : this.V1qs.V2mk(d)
    }
    ;
    b.prototype.setVisible = function(d) {
        this.background.setVisible(d)
    }
    ;
    b.prototype.V2np = function(d, c) {
        return Math.floor(d / 14) + d / 80
    }
    ;
    b.prototype.V2om = function(d) {}
    ;
    b.prototype.V2ob = function() {
        return this.V1qs
    }
    ;
    b.prototype.onResize = function(d) {
        var c = new CB.V134;
        c.V137(d.cbcanvas.canvas.getBoundingClientRect());
        var f = d.cbcanvas.pixToZoomRect(d.getOuterRect())
          , g = new CB.V134(f.left,f.top,f.right,f.bottom)
          , h = d.cbcanvas.pixToZoom(d.height / 80)
          , k = d.cbcanvas.pixToZoom(1 * d.height / 14) - h
          , l = 10 * k;
        g.h = k;
        g.w = d.cbcanvas.pixToZoom(d.getOuterRect().w);
        g.topLeft = f.topLeft.add(c.topLeft);
        g.move(0, -(k + h));
        this.background.V2sd(g);
        d = (g.w - l) / 2;
        this.V1qs.setPosSize(d, 0, l, k);
        this.V2sb && (c = Math.round(.95 * k),
        5 > c && (btW = 5),
        c + l + 4 > g.w && (c = g.w - l - 4),
        d + l < g.w - c ? (this.V2sb.setPos(g.w - c, k - c),
        this.V2sb.setSize(c, c),
        this.V2sb.setVisible(!0)) : this.V2sb.setVisible(!1))
    }
    ;
    return b
}();
"use strict";
function LineStackItemHash(e) {
    var b = e.getLine();
    e = e.getMovesToGo() | b.length << 8;
    0 < b.length && b[0] && (e |= b[0].from << 16 | b[0].to << 24);
    return e
}
function LineStackItemEq(e, b) {
    return e.getLine() === b.getLine() && e.getMovesToGo() === b.getMovesToGo()
}
CB.cbNotationDefaults = {
    game: null,
    useMatBalance: !0,
    useDiagrams: !0,
    V2se: !0,
    useResult: !0,
    V2sf: !0,
    useHeader: !0,
    V2sg: "",
    V2sh: "",
    V2si: "",
    V2sj: "",
    V2sk: "",
    V2sl: "",
    isActive: !0,
    notationLocalization: null,
    V2sm: !0
};
CB.NotaElement = function() {
    function e(f, g, h) {
        g.append("<span class='");
        g.append(h);
        g.append("'>");
        g.append(f);
        g.append("</span>")
    }
    var b = function(f, g, h) {
        this.notaHeaderElement = new CB.V2sn(g);
        this.V2so = new CB.NotaFooterElement(g,h);
        this.V2sp = 0;
        this.panel = f;
        this.gateUpdate = new CB.V3id;
        this.V2sq = [];
        this.nInPage = g;
        this.V2sr = [];
        this.V2ss = [];
        this.V2st = []
    };
    b.prototype.panel = null;
    b.prototype.V2su = null;
    b.prototype.m_selElem = null;
    b.prototype.V2sv = !0;
    b.prototype.notaHeaderElement = null;
    b.prototype.V2sw = function(f, g) {
        this.V2sp = f = "string" == typeof f ? f : f.id;
        f = CB.$("#" + f);
        if (this.elem = f.single()) {
            f.parent();
            f.addClass("cbnota-container");
            this.V2sx();
            this.V2sy(g);
            this.V2sz = CB.$(".nota-game", this.elem).single();
            f.on("dragover", this.V2t0.bind(this)).on("dragenter", this.V2t1.bind(this)).on("drop", this.V2t2.bind(this)).on("mousewheel", this.onMouseWheel.bind(this)).on("DOMMouseScroll", this.onMouseWheel.bind(this));
            CB.V2t3.V2t4("touchstart") && (f.on("touchstart", this.V2t5.bind(this)).on("touchend", this.V2t6.bind(this)).on("touchmove", this.onMouseMove.bind(this)).on("touchleave touchcancel", this.onMouseLeave.bind(this)),
            this.V2t7 = !0);
            if (CB.V2t3.V2t4("mousedown"))
                f.on("mousedown", this.V2t5.bind(this)).on("mouseup", this.V2t6.bind(this)).on("mousemove", this.onMouseMove.bind(this)).on("mouseleave", this.onMouseLeave.bind(this)).on("dblclick", this.onDoubleClick.bind(this));
            CB.Vq.V124() && $(".nota-game").css("padding-right", "50px");
            f = CB.$("#nota-head-" + this.nInPage).single();
            this.header = new CB.V2lj(f,this.V2t8(),{
                append: !1
            });
            this.header.setVisible(this.V2t9);
            this.V2t9 || $(f).hide();
            this.notaHeaderElement.V2sw(this.V2t8(), g, null, this.nInPage);
            g.useMatBalance && this.createMatBalance()
        }
    }
    ;
    b.prototype.destroy = function() {
        alert("NOTIMPL NotaEl")
    }
    ;
    b.prototype.createMatBalance = function() {
        if (null === CB.$.get(this.V2ta())) {
            var f = CB.$.get(this.V2sp);
            if (f) {
                var g = CB.$("#nota-foot-" + this.nInPage).single();
                this.footer = new CB.V2lj(g,this.V2ta());
                this.footer.setVisible(!0);
                this.V2so.V2sw(this.V2ta())
            }
        }
        g = CB.$("#" + this.V2sp);
        f && g.removeClass("nomat")
    }
    ;
    b.prototype.V2t8 = function() {
        return "theheader-" + this.nInPage
    }
    ;
    b.prototype.V2ta = function() {
        return "thefooter-" + this.nInPage
    }
    ;
    b.prototype.destroyMatBalance = function() {
        var f = CB.$("#" + this.V2ta()).single();
        f && 0 < f.childNodes.length && (f.removeChild(f.childNodes[0]),
        this.footer = null,
        CB.$("#" + this.V2sp).addClass("nomat"))
    }
    ;
    b.prototype.V2tb = function(f) {
        (this.useMatBalance = f) ? CB.$("#" + this.V2ta()).show() : CB.$("#" + this.V2ta()).hide()
    }
    ;
    b.prototype.V2sy = function(f) {
        f.notationLocalization = f.notationLocalization || lm.NOTA_LOCALIZATION;
        this.V2su = new CB.V1cw(f.notationLocalization);
        this.V2tc = f.useDiagrams;
        void 0 !== f.diagramOptions && (this.V2td = f.diagramOptions);
        this.V2t9 = f.useHeader;
        void 0 !== f.useMatBalance && (this.useMatBalance = f.useMatBalance);
        void 0 !== f.useResult && (this.V2te = f.useResult);
        this.V2sv = f.isActive;
        this.V2tf = f;
        f.game && this.setGame(f.game)
    }
    ;
    b.prototype.setOptions = function(f) {
        this.V2sy(f)
    }
    ;
    b.prototype.m_game = null;
    b.prototype.setGame = function(f) {
        this.notaHeaderElement.setGame(f);
        this.m_game && (this.m_game.removeOnMoveListener(this.V2tg),
        this.m_game.removeOnNavigateListener(this.V2th),
        this.m_game.removeOnChangedListener(this.V2ti),
        this.m_game.removeOnHeaderChangedListener(this.V2tj),
        this.m_game.removeOnAnnoChangedListener(this.V2tk),
        this.m_game.removeOnEvalListener(this.V2tl));
        this.m_game = f;
        this.V2tg = this.m_game.addOnMoveListener(this.onMove.bind(this));
        this.V2th = this.m_game.addOnNavigateListener(this.V2tm.bind(this));
        this.V2ti = this.m_game.addOnChangedListener(this.V2r6.bind(this));
        this.V2tj = this.m_game.addOnHeaderChangedListener(this.V2tn.bind(this));
        this.V2tk = this.m_game.addOnAnnoChangedListener(this.V2r6.bind(this));
        this.V2tl = this.m_game.addOnEvalListener(this.onEval.bind(this));
        this.V2to();
        this.useMatBalance && this.V2so.setGame(f);
        this.notaHeaderElement.setGame(f);
        this.evProfileControl && this.evProfileControl.setEvalArr(f.getEvaluationProfile())
    }
    ;
    b.prototype.setSize = function(f, g) {
        this.notaHeaderElement.onResize(f, g);
        this.V2tp();
        this.V2tq(f);
        this.V2tm(!0)
    }
    ;
    b.prototype.getGame = function() {
        return this.m_game
    }
    ;
    b.prototype.onMove = function() {
        this.V2to();
        this.V2tr()
    }
    ;
    b.prototype.V2tn = function() {}
    ;
    b.prototype.V2r6 = function() {
        this.V2to();
        this.V2tr()
    }
    ;
    b.prototype.onEval = function(f, g, h) {
        var k;
        CB.Evaluation && (k = CB.Evaluation.V1o1(g));
        this.evProfileControl || this.V2so.setText(k + ".")
    }
    ;
    b.prototype.V2tm = function(f) {
        f = f || !1;
        var g = this.V2ts();
        this.V2tt(g, f);
        this.V2tr();
        this.V2tu(this);
        this.evProfileControl && this.m_game.isOnMainLine() && this.evProfileControl.V2tv(this.m_game.getPlyNum())
    }
    ;
    b.prototype.V2tw = function(f) {
        return CB.GameResultEnum.toString(f)
    }
    ;
    b.prototype.V2tx = function(f, g) {
        (f = b.prototype.V2tw(f)) && e(f, g, "cbgame-result")
    }
    ;
    b.prototype.V2tu = function(f) {
        this.gateUpdate.exec(function() {
            f.matcontrol && (f.matcontrol.setPos(f.m_game.getCurPos()),
            f.matcontrol.render())
        }
        .bind(this), 200)
    }
    ;
    b.prototype.V2ty = function() {
        return String.formatEx("<div class='nota-container'><div class='nota-head-container'><div class='nota-head' id='nota-head-{0}'></div></div><div class='nota-game-container'><div class='nota-ogame'><div class='nota-igame'><div class='nota-game' data-inx-game='{0}'></div></div></div></div><div class='nota-foot-container'><div class='nota-foot' id='nota-foot-{0}'></div></div></div>", this.nInPage)
    }
    ;
    b.prototype.V2sx = function() {
        CB.$(this.elem).html(this.V2ty());
        var f = CB.V10z() + "Media/Chess/WhiteMarbleBack.jpg";
        $(".nota-ogame").css("background-image", f);
        $(".nota-game").css("background-image", f);
        $(".cbline").css("background-image", f)
    }
    ;
    b.prototype.V2to = function() {
        this.V2sr && this.V2sr.forEach && this.V2sr.forEach(function(m) {
            m.boardArea.changeParentElDOM(null)
        });
        this.V2ss = this.V2ss.concat(this.V2sr);
        this.V2sr = [];
        "undefined" == typeof this.m_game && (this.m_game = new CB.Game);
        var f = new StringBuilder
          , g = this.m_game.getHeader()
          , h = this.m_game.getMainLine()
          , k = this.m_game.getStartPos().getMoveNum()
          , l = {
            lineCnt: 0,
            nodeCnt: 0,
            breakForTraining: !1,
            foldCnt: 0
        };
        if (this.V2tz)
            l = new CB.V1cw,
            f = this.m_game.getCurPos().getMoveNum(),
            (g = this.m_game.getLastMove()) ? (l = l.getMoveNota(g, f),
            CB.$(".nota-game", this.elem).html(l)) : CB.$(".nota-game", this.elem).html("Notation is hidden intentionally");
        else {
            b.V1cg(this, h, 0, 0, k, 0, f, l, 0, 0, 0);
            this.V2te && !l.breakForTraining && this.V2tx(g.getResult(), f);
            CB.$(".nota-game", this.elem).html(f.toString());
            for (f = 1; f <= l.foldCnt; f++)
                g = $("#fold" + f + this.nInPage),
                g.click(function(m) {
                    this.V2u0(m, function(n) {
                        n.toggle()
                    })
                }
                .bind(this)),
                g.on("touchstart", function(m) {
                    this.V2u0(m, function(n) {
                        n.toggle()
                    })
                }
                .bind(this)),
                g.on("fold", function(m) {
                    this.V2u0(m, function(n) {
                        n.hide()
                    })
                }
                .bind(this)),
                g.on("unfold", function(m) {
                    this.V2u0(m, function(n) {
                        n.show()
                    })
                }
                .bind(this));
            this.V2u1();
            (new CB.Timer(function() {
                this.V2sq && 0 < this.V2sq.length || this.V2u2()
            }
            .bind(this))).runOnce(30);
            this.V2tm(!0)
        }
    }
    ;
    b.prototype.V2u0 = function(f, g) {
        var h = f.currentTarget.dataset.line
          , k = $(String.f(".cbmove[data-linecnt='{0}']:not([data-inx-mv='0'])", h));
        g(k);
        var l = $(String.f(".cbcomment[data-linecnt='{0}']", h));
        g(l);
        h = $(String.f("[data-linecnt-this='{0}']", h));
        g(h);
        k.length && (l = $(k[0]).parent().find(".cbcol-marker"),
        g(l));
        k.is(":visible") || h.is(":visible") ? ($(f.currentTarget).addClass("cbFoldBtn"),
        $(f.currentTarget).removeClass("cbUnFoldBtn"),
        $(f.currentTarget).parent().find(".cbUnFoldBtn").trigger("unfold")) : ($(f.currentTarget).addClass("cbUnFoldBtn"),
        $(f.currentTarget).removeClass("cbFoldBtn"))
    }
    ;
    b.V1cg = function(f, g, h, k, l, m, n, p, q, t, v) {
        var z = ++p.lineCnt
          , E = 0;
        m || !g.isAnnotated() && !g.hasAnno() || (E = 1);
        0 === m && (f.useMatBalance ? f.createMatBalance() : f.destroyMatBalance());
        var C = 0
          , F = 0
          , P = 0;
        g.hasAnno() && g.getAnno()[CB.AnnoType.V19u] && "[" != g.getAnno()[CB.AnnoType.V19u].toString()[0] && (P += g.getAnno()[CB.AnnoType.V19u].toString().length);
        if (g.hasAnno() && g.getAnno()[CB.AnnoType.V1v1]) {
            var X = g.getAnno()[CB.AnnoType.V1v1].getArray().filter(function(V) {
                return "goal" === V.type
            }).sum(function(V) {
                return V.feedback.length
            });
            P += X
        }
        g.forEach(function(V) {
            V.forAllMoves(function(ca) {
                C++;
                (ca = ca.getAnno()) && ca[CB.AnnoType.V19w] && (P += ca[CB.AnnoType.V19w].toString().length)
            });
            V.hasLines() && F++
        });
        X = 6 >= m && (10 < C + P / 8 || 1 < v) && V3ir.config.hasFolding;
        if (1 <= m && X) {
            X = (++p.foldCnt).toString() + f.nInPage.toString();
            var W = String.f("<span class='cbNodeBtn cbFoldBtn' data-line='{0}' data-level={2} id='{1}'></span>", z, "fold" + X, m)
        }
        n.appendFormat("<span class='cbline' data-inx-line='{0}' data-inx-mv-parent = '{1}' data-level='{2}' data-commented='{3}' data-linecnt-this='{4}' data-nodecnt-this='{5}' lastLine='{6}'>{7}", h, k, m, E, q, t, h === v - 1 ? "1" : "0", W);
        0 === m && f.createMovelessAnnoElement(g, n);
        h = !1;
        0 < g.length && (h = g[0].getSide() === CB.V15e.WHITE);
        k = !0;
        q = 0;
        for (X = g.length; q < X; ++q) {
            v = g[q];
            f.CreateMoveElements(v, q, g, l, h || k, m, n, p, z, t);
            if (p.breakForTraining)
                break;
            (h = !h) && ++l;
            k = v.hasLines()
        }
        n.append("</span>")
    }
    ;
    b.prototype.V2u3 = function() {
        this.V2tz = !0;
        this.V2u4()
    }
    ;
    b.prototype.createMovelessAnnoElement = function(f, g) {
        if ((f = f.getAnno()) && (f[CB.AnnoType.V19w] || f[CB.AnnoType.V19u])) {
            if (f[CB.AnnoType.V19w]) {
                var h = f[CB.AnnoType.V19w].getString();
                this.V2u5(h, 0, 0, g, 0)
            }
            f[CB.AnnoType.V19u] && (h = f[CB.AnnoType.V19u].getString(),
            this.V2u5(h, 0, 0, g, 0))
        }
    }
    ;
    b.V19q = "[#]";
    b.prototype.V2u6 = function(f, g, h, k, l, m, n) {
        if (f) {
            if (0 > f.indexOf(b.V19q))
                return this.V2u5(f, g, h, m, n);
            for (var p = 0, q = f.indexOf(b.V19q); 0 <= q; q = f.indexOf(b.V19q, p))
                0 < q - p && (p = f.substring(p, q),
                this.V2u5(p, g, h, m, n)),
                this.V2u7 = this.V2u8("", g, h, k, l, m, n),
                p = q + b.V19q.length;
            p < f.length && (p = f.substring(p),
            this.V2u5(p, g, h, m, n))
        }
    }
    ;
    b.prototype.V2u9 = function(f, g, h, k, l) {
        f && (k.appendFormat("<span class='cbcomment cbmedal medal-{2}' data-inx-mv='{0}' data-linecnt='{1}'>", g, l, f),
        k.append("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp</span>"),
        k.append(" "))
    }
    ;
    b.prototype.V2u5 = function(f, g, h, k, l) {
        k.appendFormat("<span class='cbcomment' data-inx-mv='{0}' data-linecnt='{1}'>", g, l);
        k.append(CB.V1b.V104(f));
        k.append("</span>");
        k.append(" ")
    }
    ;
    b.prototype.V2ua = function(f, g, h, k, l, m) {
        h = CB.V6r.V12p();
        k.appendFormat("<span class='cbcomment cbtraining' data-inx-mv='{0}' data-linecnt='{1}'>", g, l);
        k.append(CB.V1b.V104(f.getQuestion(h) || lm.TRAINING_QUESTION));
        f.solved || (k.append('<div class="cbTrainingLinks">'),
        k.append(String.f('<span class="cbTrainingLink cbTrainingSolution" data-inx-mv="{0}" data-linecnt="{1}">{2}</span>', g, l, lm.TRAINING_SOLUTION)),
        1 <= f.nHelpClicked ? (k.appendFormat("<span class='cbcomment cbtraining cbtraininghelptext' data-inx-mv='{0}' data-linecnt='{1}'>", g, l),
        k.append(CB.V1b.V104(f.getHelp(h) || "No help available")),
        k.append("</span>")) : f.getHelp(h) && k.append(String.f('<span class="cbTrainingLink cbTrainingHelp" data-inx-mv="{0}" data-linecnt="{1}">{2}</span>', g, l, lm.TRAINING_HELP)),
        k.append("</div>"));
        k.append("</span>");
        k.append(" ");
        return !f.solved
    }
    ;
    b.V2ub = function(f, g, h) {
        if (f.length) {
            for (var k = !0, l = 0, m = f.length; l < m; ++l)
                if (57344 <= f.charCodeAt(l)) {
                    k = !1;
                    break
                }
            if (k)
                g.append(f);
            else {
                k = !1;
                var n = "";
                l = 0;
                for (m = f.length; l < m; ++l) {
                    var p = f[l]
                      , q = "\ue000" <= p;
                    q === k ? n += p : (k ? e(n, g, h) : g.append(n),
                    n = p,
                    k = q)
                }
                n && (k ? e(n, g, h) : g.append(n))
            }
        }
    }
    ;
    b.prototype.V2uc = function(f, g) {
        g = document.createElement("span");
        b.V2ub(f, g, "cbspec-glyph");
        return g
    }
    ;
    b.prototype.CreateMoveElements = function(f, g, h, k, l, m, n, p, q, t) {
        var v = f.getAnno();
        v && v[CB.AnnoType.V19u] && this.V2u6(v[CB.AnnoType.V19u].getString(), g, h, v, !1, n, q);
        var z = k;
        l || this.V2u7 || (z = null);
        this.V2u7 = !1;
        l = this.V2su.getMoveNota(f, z);
        z = "cbmove " + this.V2ud(f);
        if (v && v[CB.AnnoType.V1a1]) {
            for (var E = v[CB.AnnoType.V1a1], C = 0; C < E.length; C++)
                ;
            l = V3ib.addTexts(l, E)
        }
        0 == g ? n.appendFormat("<span class='" + z + "' data-inx-mv = '{0}' data-linecnt = '{1}' data-nodecnt = '{2}'>", g, q, t) : n.appendFormat("<span class='" + z + "' data-inx-mv = '{0}' data-linecnt = '{1}'>", g, q);
        b.V2ub(l, n, "cbspec-glyph");
        n.append("</span>");
        n.append(" ");
        v && (v[CB.AnnoType.SQUARE_LIST] || v[CB.AnnoType.ARROW_LIST] ? n.appendFormat("<span class='cbcol-marker' data-inx-mv='{0}'> </span>", g) : v[CB.AnnoType.V1vi] && n.appendFormat("<span class='cbmedal-marker' data-inx-mv='{0}'> </span>", g));
        n.append(" ");
        v && v[CB.AnnoType.TIME] && this.V2u6(v[CB.AnnoType.TIME].getString(), g, h, v, !0, n, q);
        v && v[CB.AnnoType.V1vi] && this.V2u9(v[CB.AnnoType.V1vi].getOneMedal(), g, h, n, q);
        v && v[CB.AnnoType.V19w] && this.V2u6(v[CB.AnnoType.V19w].getString(), g, h, v, !0, n, q);
        v && v[CB.AnnoType.V1v1] && (t = v[CB.AnnoType.V1v1].getArray().filter(function(F) {
            return "goal" === F.type
        }),
        t.length && this.V2u5(t[0].feedback, g, h, n, q));
        if (f.hasLines())
            for (f = f.getSubLines(),
            t = ++p.nodeCnt,
            l = 0,
            z = f.length; l < z; ++l)
                b.V1cg(this, f[l], l, g, k, m + 1, n, p, q, t, z);
        v && v[CB.AnnoType.V18c] && (this.V2u8("Find the next move", g, h, v, !0, n, q),
        p.breakForTraining = this.V2ua(v[CB.AnnoType.V18c], g, h, n, q, p));
        v && v[CB.AnnoType.V1uz] && (k = v[CB.AnnoType.V1uz].getString(),
        this.V2u8(k, g, h, v, !0, n, q))
    }
    ;
    b.prototype.V2ud = function(f) {
        return this.V2st.map(function(g) {
            return g(f)
        }).filter(IDENTITY).reduce(function(g, h) {
            return g + " " + h
        }, "")
    }
    ;
    b.prototype.V2u8 = function(f, g, h, k, l, m, n) {
        if (this.V2tc)
            return l || --g,
            h = this.m_game.V1cj(h, g + 1),
            this.V2tf.V2sm || (k = null),
            k = b.V2ue(h, k),
            m.appendFormat("<span class='cbdia' data-fen='{0}' data-legend='{1}' data-inx-mv='{2}' data-linecnt='{3}'>", k, f, g, n),
            m.append("</span>"),
            !0
    }
    ;
    b.V2ue = function(f, g) {
        f = f.toFEN();
        g && g[CB.AnnoType.ARROW_LIST] && (f = f + ";" + g[CB.AnnoType.ARROW_LIST].toString(";"));
        g && g[CB.AnnoType.SQUARE_LIST] && (f = f + ";" + g[CB.AnnoType.SQUARE_LIST].toString(";"));
        return f
    }
    ;
    b.V2uf = function(f) {
        f = f.split(";");
        for (var g = new Position(f[0]), h = new Annotation, k = new ColSqAnno, l = new ColArrowAnno, m = 1, n = f.length; m < n; ++m) {
            var p = f[m];
            if (p.length == ColSq.STRING_LEN) {
                var q = new ColSq;
                q.init(p);
                k.push(q)
            } else
                p.length == ColArrow.STRING_LEN && (q = new ColArrow,
                q.init(p),
                l.push(q))
        }
        0 < k.length && h.setItem(AnnoType.SQUARE_LIST, k);
        0 < l.length && h.setItem(AnnoType.ARROW_LIST, l);
        return {
            anno: h,
            position: g
        }
    }
    ;
    b.prototype.removeClass = function(f) {
        for (var g = Array.prototype.slice.call(document.getElementsByClassName(f)), h = 0, k = g.length; h < k; h++) {
            var l = g[h];
            l.className = l.className.replace(new RegExp("(^|\\s+)" + f + "(\\s+|$)","g"), "$1")
        }
    }
    ;
    b.prototype.V2tt = function(f, g) {
        if (null !== f) {
            this.m_selElem && (CB.$(this.m_selElem).removeClass("cbcur-move"),
            this.m_selElem = null);
            var h = CB.$(this.elem);
            g || f ? (this.m_selElem = f,
            CB.$(this.m_selElem).addClass("cbcur-move"),
            !d && this.m_selElem && ($(this.m_selElem).is(":visible") || $(this.m_selElem).parents().children(".cbNodeBtn").trigger("unfold"),
            this.IsInPageVisible(this.m_selElem) || this.scrollIntoView(this.m_selElem)),
            d = !1) : "scroll" !== h.css("overflow-y") && window.scrollTo(notaElm.getX(), notaElm.getY())
        }
    }
    ;
    b.prototype.V2ug = function() {
        if (this.m_selElem)
            return this.scrollIntoView(this.m_selElem)
    }
    ;
    b.prototype.V2uh = function() {
        this.V2ui(this.m_selElem, "blinkShort")
    }
    ;
    b.prototype.V2uj = function() {
        this.V2ui(this.m_selElem, "blinkMedium")
    }
    ;
    b.prototype.V2ui = function(f, g) {
        f && ($(f).addClass(g),
        (new CB.Timer(function() {
            $(g).removeClass(g)
        }
        .bind(this))).runOnce(600))
    }
    ;
    b.prototype.V2uk = function() {
        this.V2ug();
        this.V2ui(this.m_selElem, "blinkAnimation")
    }
    ;
    b.prototype.scrollIntoView = function(f) {
        var g = f.offsetTop;
        f = g + f.offsetHeight;
        var h = this.V2sz.scrollTop
          , k = this.V2sz.clientHeight
          , l = h + k
          , m = this.V2sz.scrollTop;
        g < h ? this.V2sz.scrollTop = Math.max(0, g - 30) : f > l && (this.V2sz.scrollTop = f - k);
        g = Math.abs(this.V2sz.scrollTop - m);
        300 < g && this.V2uh();
        return 0 < g
    }
    ;
    b.prototype.IsInPageVisible = function(f) {
        var g = f.offsetTop;
        f = g + f.offsetHeight;
        var h = this.V2sz.scrollTop
          , k = h + this.V2sz.clientHeight;
        return g >= h && f <= k
    }
    ;
    b.prototype.V2ul = function() {
        var f = this.V2um(this.m_selElem, !1);
        f && (this.V2tt(f),
        this.V2un(f))
    }
    ;
    b.prototype.V2uo = function() {
        var f = this.V2um(this.m_selElem, !0);
        f && (this.V2tt(f),
        this.V2un(f))
    }
    ;
    b.prototype.V2um = function(f, g) {
        if ("undefined" != typeof $ && f) {
            f = $(f);
            var h = f.data("linecnt")
              , k = f.data("inx-mv");
            h = f.parent().find(String.f('[data-linecnt-this="{0}"][data-inx-mv-parent="{1}"]', h, k));
            if (h.length && !g && (k = $(h[0]).data("nodecnt-this"),
            h = $(h[0]).find(String.f('[data-nodecnt="{0}"][data-inx-mv="0"]', k)),
            h.length))
                return h[0];
            var l = f.offset().top
              , m = []
              , n = 1E7;
            h = function(p, q) {
                p = $(q).offset().top - l;
                (g ? 0 > p : 0 < p) && Math.abs(p) <= n && (n = Math.abs(p),
                m.push(q))
            }
            ;
            g ? $($(this.elem).find(".cbmove").get().reverse()).each(h) : $(this.elem).find(".cbmove, .cbtraininghelptext").each(h);
            m.sort(function(p, q) {
                return Math.abs($(p).offset().top - l) - Math.abs($(q).offset().top - l)
            });
            for (h = 1; h < m.length; h++)
                if (g) {
                    if ($(m[h]).offset().top < $(m[0]).offset().top) {
                        m.length = h;
                        break
                    }
                } else if ($(m[h]).offset().top > $(m[0]).offset().top) {
                    m.length = h;
                    break
                }
            f.offset();
            f.width();
            m.sort(function(p, q) {
                return $(p).offset().left - $(q).offset().left
            });
            return m[0]
        }
    }
    ;
    b.prototype.V2up = function(f, g) {
        if ("undefined" != typeof $ && f) {
            var h = null
              , k = 1E7
              , l = 0
              , m = $(f);
            $(f).prevAll().find(".cbmove").each(function(n, p) {
                n = $(p).offset().top - m.offset().top;
                if (0 > n) {
                    var q = Math.abs($(p).offset().left - m.offset().left);
                    q < k && (n == l || !h) && (k = q,
                    h = p,
                    l = n)
                }
            }
            .bind(this));
            return h
        }
    }
    ;
    b.prototype.V2uq = null;
    b.prototype.onMouseWheel = function(f) {
        if (this.m_game && this.V2sv) {
            var g = "undefined" != typeof f.wheelDelta ? -f.wheelDelta : f.detail;
            "undefined" == typeof $ && (0 > g ? this.m_game.gotoPrev() : this.m_game.gotoNext(),
            f.preventDefault())
        }
    }
    ;
    b.prototype.V2t5 = function(f) {
        this.V2ur = this.V2us = new CB.Point(f);
        this.buttonDown = !0;
        this.V2ut = "touchstart" == f.type
    }
    ;
    var d;
    b.prototype.V2t6 = function(f) {
        this.buttonDown = !1;
        this.V2us && 2 != f.button && 10 > this.V2us.V131(this.V2ur) && (d = !0,
        this.focus(),
        this.V2uu(f) && this.fireOnMoveTouched())
    }
    ;
    b.prototype.onDoubleClick = function(f) {
        this.m_game.fireOnNotaDoubleClick()
    }
    ;
    b.prototype.onContextMenu = function(f) {
        this.V2uu(f);
        V3ir.panelMgr.execNotaContextMenu && (V3ir.panelMgr.execNotaContextMenu(f),
        f.preventDefault())
    }
    ;
    b.prototype.focus = function() {
        V3ir.panelMgr && V3ir.panelMgr.notaPanel && V3ir.panelMgr.notaPanel.focus();
        var f = this.V2sz;
        f ? f.focus() : alert("no parent for focus")
    }
    ;
    b.prototype.sign = function(f) {
        return f ? 0 > f ? -1 : 1 : 0
    }
    ;
    var c = 0 < CB.Vq.V11u() && !CB.Vq.V37();
    b.prototype.onMouseMove = function(f) {
        if (this.buttonDown && !c) {
            var g = (new CB.Point(f)).subtract(this.V2us);
            g.y /= Math.min(2, window.devicePixelRatio);
            this.V2sz.scrollTop -= this.sign(g.y) * Math.pow(Math.abs(g.y), 1.7) * .7;
            this.V2us = new CB.Point(f);
            if (0 < g.y && 0 == this.V2sz.scrollTop || 0 > g.y && this.V2sz.scrollTop + this.V2sz.clientHeight >= this.V2sz.scrollHeight)
                return
        }
        f.preventDefault()
    }
    ;
    b.prototype.onMouseLeave = function(f) {
        this.buttonDown = !1
    }
    ;
    b.prototype.V2uu = function(f) {
        if (!this.V2sv || !this.m_game)
            return !1;
        var g = this.V2un(f.target);
        f.preventDefault();
        return g
    }
    ;
    b.prototype.V2un = function(f) {
        var g = f;
        if (!$(g).is("[data-inx-mv]") && ((g = $(g).parents("[data-inx-mv]")) && (g = g[0]),
        !g))
            return;
        this.V2uq = g;
        var h = $(g).data("inx-mv")
          , k = 0;
        ++h;
        var l = []
          , m = !0
          , n = g.parentNode
          , p = f = !1;
        $(n).is(".cbLine ") || (n = $(g).parents(".cbline")[0]);
        $(g).is(".cbTrainingLink") && (f = $(g).is(".cbTrainingSolution"),
        p = $(g).is(".cbTrainingHelp"));
        for (g = n; m; g = g.parentNode)
            k = Number(k),
            h = Number(h),
            l.push({
                inxLine: k,
                mvsToGo: h
            }),
            g && g.getAttribute && (m = CB.$(g),
            k = m.data("inx-line"),
            h = m.data("inx-mv-parent"),
            m = 0 != m.data("level"));
        h = [];
        for (k = l.length - 1; 0 <= k; --k)
            h.push(l[k]);
        this.m_game.gotoSimplePath(h);
        this.m_game.triggerOnClickInNotation();
        if (f || p)
            if (l = this.m_game.getAnno(CB.AnnoType.V18c)) {
                f && (l.solved = !0,
                CB.V1uu("Solution: " + this.m_game.hdr.getStrPlayers(!1, 0)));
                p && l.nHelpClicked++;
                this.V2r6();
                f && this.m_game.gotoNext();
                if (p)
                    for (f = 0; 3 > f; f++)
                        this.V2ul();
                this.V2sz.scrollTop += 60
            }
        return !0
    }
    ;
    b.prototype.V2tr = function() {
        var f = this.m_selElem;
        if (f) {
            var g = CB.$(f);
            if (!CB.$.is(f, "[data-inx-mv]")) {
                f = g.parent("[data-inx-mv]");
                if (!f)
                    return;
                g = CB.$(f)
            }
            var h = $("#" + this.V2sp);
            this.V2uv(h);
            g = g.data("linecnt");
            1 < g && (h = h.find(String.formatEx('[data-linecnt="{0}"]', g)),
            h.addClass("cbcurline"),
            this.V2uw(h, 0));
            this.V2ux($(f))
        }
    }
    ;
    b.prototype.V2uv = function(f) {
        f.find(".cbcurAlternative").removeClass("cbcurAlternative");
        f.find(".cbcurline").removeClass("cbcurline");
        f.find(".cbcurlineparent").removeClass("cbcurlineparent");
        for (var g = 1; 6 >= g; g++)
            f.find(".cbcurnode" + g).removeClass("cbcurnode" + g)
    }
    ;
    b.prototype.V2uw = function(f, g) {
        if (f.length && (f = $(f[0]).parent("[data-inx-mv-parent]"))) {
            var h = parseInt($(f).data("inx-mv-parent"))
              , k = $(f).data("linecnt-this")
              , l = $(f).data("nodecnt-this")
              , m = $(f).data("level");
            if (0 < k) {
                var n = $("#" + this.V2sp);
                l = n.find(String.formatEx('[data-nodecnt="{0}"]', l));
                1 <= l.length && (6 > m ? l.addClass("cbcurnode" + m) : l.addClass("cbcurnode6"));
                k = String.formatEx('[data-linecnt="{0}"]', k);
                n = n.find(k);
                for (k = 0; k < n.length; k++) {
                    l = $(n[k]);
                    var p = parseInt(l.data("inx-mv"));
                    p <= h && 1 < m && (p <= h - 1 ? l.addClass("cbcurlineparent") : l.addClass("cbcurnode" + m))
                }
                this.V2uw($(f), ++g)
            }
        }
    }
    ;
    b.prototype.V2ux = function(f) {
        var g = f.data("linecnt")
          , h = f.data("inx-mv");
        f.parent().find(String.f('[data-linecnt-this="{0}"][data-inx-mv-parent="{1}"]', g, h)).each(function(k, l) {
            k = $(l).data("nodecnt-this");
            $(l).find(String.f('[data-nodecnt="{0}"][data-inx-mv="0"]', k)).addClass("cbcurAlternative")
        })
    }
    ;
    b.prototype.V2ts = function(f) {
        if (this.m_game) {
            try {
                var g = this.m_game.V18e();
                f = "";
                for (var h = 0, k = 0, l = g.length; k < l; ++k) {
                    f && (f += ">");
                    var m = g[k]
                      , n = m.mvsToGo;
                    f += String.formatEx("span.cbline[data-level='{2}'][data-inx-line='{0}'][data-inx-mv-parent='{1}']", m.inxLine, h, k);
                    k === l - 1 && (f += String.formatEx(">span.cbmove[data-inx-mv ='{0}']", n - 1));
                    h = n
                }
                var p = 0 == f.length;
                f = String.f("div.nota-game[data-inx-game='{0}']>", this.nInPage) + f;
                if (this.V2uq && CB.$.is(this.V2uq, f))
                    return this.V2uq;
                if (!p) {
                    var q = CB.$(f);
                    if (q && 1 == q.length)
                        return q[0]
                }
            } catch (t) {
                console.log("Nota: " + t)
            }
            return null
        }
    }
    ;
    b.prototype.V2u1 = function() {
        if ("undefined" != typeof $ && V3ir.panelMgr.createDiagramPlayingMode) {
            var f = 180;
            V3ir.panelMgr.getDiagHeight && (f = V3ir.panelMgr.getDiagHeight($(this.elem).width()));
            var g = 0;
            $("#" + this.V2sp).find(".cbdia").each(function(h, k) {
                if (0 == $(k).find("div").length) {
                    $(k).width(1.1 * f);
                    $(k).height(f);
                    var l = this.V2ss.pop();
                    this.gameKernel = new CB.V1ew(V3ir.panelMgr);
                    var m = {
                        kernel: this.gameKernel,
                        diagramDiv: k
                    };
                    m.kernel.setPlayingMode(V3ir.panelMgr.createDiagramPlayingMode(m.kernel));
                    m.kernel.fnInitGame = function() {
                        return function(p, q) {
                            q.boardWin && (q.boardWin.allowInput = !1);
                            p.reset();
                            k && (q = k.dataset.fen) && (q = new CB.Position(q),
                            p.assign(new CB.Game(q)))
                        }
                    }();
                    var n = this.createDiv("diagarea", g);
                    $(n).width(f);
                    $(n).height(f);
                    k.appendChild(n);
                    l ? (m.boardArea = l.boardArea,
                    m.boardArea.changeParentElDOM(n),
                    m.kernel.setBoardWin(m.boardArea.canvas.control.boards[0]),
                    m.kernel.initGame()) : (m.boardArea = new CB.V2uy(n),
                    m.boardArea.createCanvas(m.kernel, {
                        topDist: 0,
                        bottomDist: 0,
                        marginDistDivisor: 26,
                        shiftXPercent: -1.65,
                        minWForCoordinates: 220,
                        transparent: !0,
                        boardShadow: !1
                    }),
                    m.kernel.releaseCommandHandlers());
                    m.boardArea.setSize(n.offsetWidth, n.offsetHeight);
                    m.boardArea.setVisible(!0);
                    this.V2sr.push(m);
                    this.V2uz(k, h);
                    g++
                }
            }
            .bind(this))
        }
    }
    ;
    b.prototype.V2tp = function() {
        "undefined" != typeof $ && $("#" + this.V2sp).find(".cbdia").each(function(f, g) {
            this.V2uz(g, f)
        }
        .bind(this))
    }
    ;
    b.prototype.V2uz = function(f, g) {
        if (f && "undefined" != typeof $) {
            var h = $(f).find("#diagarea" + g);
            f = h[0];
            var k = h.width();
            h = h.height();
            f && this.V2sr[g] && this.V2sr[g].boardArea && this.V2sr[g].boardArea.setSize(k - 1, h)
        }
    }
    ;
    b.prototype.V2u2 = function() {
        if (CB.V2v0) {
            var f = $("#" + this.V2sp)
              , g = $("#idEvCanvas-" + this.nInPage)
              , h = this.m_game.getEvaluationProfile();
            if (h && h.isValid())
                if (g.length)
                    this.evProfileControl && this.evProfileControl.setEvalArr(h);
                else {
                    g = f.find(".nota-game");
                    var k = g.height();
                    0 == k && (k = f.height());
                    f.find(".nota-foot-container");
                    var l = document.createElement("div");
                    l.id = "idEvCanvas-" + this.nInPage;
                    l.className = "cbevprofile";
                    450 < CB.Vq.V12j(k) || CB.Vq.V37() && CB.Vq.V11o() || 900 < window.innerHeight ? ($(l).insertBefore(f.find(".nota-foot-container")),
                    l.style.margin = "0",
                    l.style.boxShadow = "") : g.append(l);
                    if (0 != $(l).length && (f = new CB.V2uy(l),
                    null != f.canvasEl && null != f.canvasEl.elDOM && null != document.getElementById(f.canvasEl.elDOM.id))) {
                        this.V2v1 = f;
                        f.setVisible(!0);
                        var m = this;
                        f.createCanvas({
                            createControl: function(n, p, q, t) {
                                m.evProfileControl = new CB.V2v0(n,p,q,"EvlProfile",t,function(v) {
                                    m.m_game.gotoIndex(Math.min(v, m.m_game.mainLine.length));
                                    m.IsInPageVisible(m.m_selElem) || m.scrollIntoView(m.m_selElem)
                                }
                                );
                                m.evProfileControl.setEvalArr(h);
                                return m.evProfileControl
                            }
                        }, {});
                        this.evProfileControl && this.V2v1 && this.V2v1.setSize(this.V2v2, this.V2v3())
                    }
                }
            else
                this.evProfileControl && this.evProfileControl.reset()
        }
    }
    ;
    b.prototype.V2u4 = function() {
        var f = $("#idEvCanvas-" + this.nInPage);
        f && f.remove();
        delete this.evProfileControl
    }
    ;
    b.prototype.V2v3 = function() {
        var f = 66;
        1150 < window.innerHeight ? f = 80 : 800 > window.innerHeight && (f = 600 > window.innerHeight ? 45 : 55);
        return f
    }
    ;
    b.prototype.V2tq = function(f) {
        this.V2v2 = f - 26;
        f = $("#idEvCanvas-" + this.nInPage).width();
        this.V2v1 && (this.V2v1.setSize(f, this.V2v3()),
        this.V2v2 = f)
    }
    ;
    b.prototype.createDiv = function(f, g) {
        var h = document.createElement("div");
        h.id = f + g;
        h.className = f;
        return h
    }
    ;
    b.prototype.isActive = function() {
        return this.V2sv
    }
    ;
    b.prototype.V2v4 = function(f) {
        this.V2sv = f
    }
    ;
    b.prototype.V2t0 = function(f) {
        f.preventDefault()
    }
    ;
    b.prototype.V2t1 = function(f) {
        f.preventDefault()
    }
    ;
    b.prototype.V2t2 = function(f) {
        if (this.V2sv) {
            f.preventDefault();
            f = f.dataTransfer;
            var g = f.files;
            g.length ? this.V2v5(g[0]) : (f = f.getData("text")) && this.V2v6(f)
        }
    }
    ;
    b.prototype.refoldToCurrentLine = function() {
        0 == $(this.elem).find(".cbNodeBtn").length && (this.V2to(),
        this.V2tr());
        if (this.m_selElem) {
            var f = $(this.m_selElem).parents().children(".cbNodeBtn");
            $(this.elem).find(".cbNodeBtn").not(f).each(function(g, h) {
                $(h).trigger("fold")
            })
        }
        this.V2ug()
    }
    ;
    b.prototype.V2v7 = function() {
        V3ir.config.hasFolding = !0;
        var f = $(this.elem).find(".cbNodeBtn");
        0 == f.length ? (this.V2to(),
        this.V2tr(),
        f = $(this.elem).find(".cbNodeBtn"),
        f.each(function(g, h) {
            $(h).trigger("fold")
        })) : $(".cbmove:hidden")[0] ? f.length && f.each(function(g, h) {
            $(h).trigger("unfold")
        }) : $(".cbNodeBtn").remove();
        this.V2ug()
    }
    ;
    b.prototype.V2v5 = function(f) {
        if ("function" == typeof FileReader) {
            var g = new FileReader;
            g.onloadend = function() {
                this.V2v8(g)
            }
            .bind(this);
            g.readAsText(f)
        }
    }
    ;
    b.prototype.V2v8 = function(f) {
        this.V2v6(f.result)
    }
    ;
    b.prototype.V2v6 = function(f) {
        this.m_game.merge && this.m_game.merge(PGN.V1f3(f))
    }
    ;
    V3i1.initForListeners(b);
    V3i1.addEvent(b, "MoveTouched");
    return b
}();
CB.NotaElement.factory = function(e, b, d, c, f) {
    b = new CB.NotaElement(b,c || 0,f);
    null == d && (d = CB.cbNotationDefaults,
    d.useMatBalance = V3ir.panelMgr.useMatBalanceDefault());
    b.V2sw(e, d);
    V3ir.panelMgr && (V3ir.panelMgr.notaElement = b);
    return b
}
;
"use strict";
CB.V2sn = function() {
    var e = {}
      , b = function(c) {
        this.w = 500;
        this.h = 400;
        this.V2v9(300, 200);
        this.V2sp = 0;
        this.gateUpdate = new CB.V3id;
        this.V2va = V3ir.mediaPath + "Buttons/Person.jpg";
        this.V2vb = V3ir.mediaPathFlags + "Flags16/United nations.png";
        this.V2vd = this.V2vc = "";
        this.nInPage = c;
        this.V2ve = "";
        this.V2vf = "<a href='http://pbserver.chessbase.com/Player?name={4},{5}&year={6}&ref=JSReader' target='_blank'><img class = 'cbplayerimage' src='{0}' alt='{4}' height='{2}' width='{3}'  playid='{1}' ></a>";
        V3ir.config.playerPicLink && (this.V2vf = "<a href='http://play.chessbase.com/user/{4}' target='_blank'><img class = 'cbplayerimage' src='{0}'height='{2}' width='{3}' playid='{1}' ></a>")
    };
    b.prototype.V2vg = null;
    b.prototype.panel = null;
    b.prototype.V2su = null;
    b.prototype.m_selElem = null;
    b.prototype.V2sv = !0;
    b.prototype.V2vh = [null, null];
    b.prototype.V2vi = [null, null];
    b.prototype.V2vj = function(c, f) {
        return 380 > c || 240 > f
    }
    ;
    b.prototype.V2vk = function(c, f) {
        return 300 > c || 150 > f && 500 > c
    }
    ;
    b.prototype.V2vl = function(c, f) {
        return 290 > c || 130 > f && 360 > c || 80 > f
    }
    ;
    b.prototype.V2vm = function(c, f) {
        return 220 > c || 90 > f && 300 > c || 70 > f
    }
    ;
    b.prototype.V2vn = function(c, f) {
        return 140 > c || 70 > f
    }
    ;
    b.prototype.V2vo = function() {
        return !this.V2vl(this.w, this.h)
    }
    ;
    b.prototype.V2vp = function() {}
    ;
    b.prototype.V2v9 = function(c, f) {
        this.w = c;
        this.h = f;
        if (this.V2ve)
            if (c = [].concat(this.V2ve),
            this.V2vq) {
                f = String.formatEx(d, this.V2vq);
                var g = '<div class="cbgame-header" id="ourheaderinside" ><table class="scroll notaTable" id="ourheader"><tr><td width="0%"><span class="cbplayerportrait">' + f + '</span></td><td width="0%"><span class="cbnota-title">' + c[0] + '</span></td><td width="0%"><span class="cbplayerportrait">' + f + "</span></td></tr>";
                for (f = 1; f < c.length; f++)
                    g += '<tr><td width="100%" colspan="3"><span class="cbnota-subtitle">' + c[f] + "</span></td></tr>";
                g += "</table></div>"
            } else
                g = '<div class="cbgame-header" id="ourheaderinside" ><span class="cbnota-title">' + this.V2ve + "</span></div>";
        else
            g = this.V2vn(c, f) ? '<div class="cbgame-header-tiny" id="ourheaderinside"  style="visibility:hidden;display:none;" ></div>' : this.V2vm(c, f) ? '<div class="cbgame-header-tiny" id="ourheaderinside" ><table class="notaTable" id="ourheader"><tr><span class="cbmain-header-verycompact"><td width="45%" class="cbplayerwhite"><span class="cbplayertiny">{white.list}</span></td><tpl if="{black}"><td width="10%" class="cbresult"><span >{resultStr}</span></td><td width="45%" class="cbplayerblack"><span class="cbplayertiny">{black.list}</span></td></tpl></tr></table></div>' : this.V2vl(c, f) ? '<div class="cbgame-header-verycompact" id="ourheaderinside" ><table class="notaTable" id="ourheader"><tr><span class="cbmain-header-verycompact"><td width="45%" class="cbplayerwhite"><span class="cbplayer">{white.list}</span><tpl if="{eloWhStr}"><span class="cbelocompact">{eloWhStr}</span></tpl></td><tpl if="{black}"><td width="10%" class="cbresult"><span >{resultStr}</span></td><td width="45%" class="cbplayerblack"><span class="cbplayer">{black.list}</span><tpl if="{eloBlStr}"><span class="cbelocompact">{eloBlStr}</span></tpl></td></tpl></tr></table></div>' : this.V2vk(c, f) ? '<div class="cbgame-header-morecompact" id="ourheaderinside" ><table class="scroll notaTable" style="table-layout:fixed" id="ourheader"><tr><span class="cbmain-header"><td colspan="2"class="cbflagwhite-morecompact"><span class="cbplayernation">{country[0]}</span></td><td colspan="9" class="cbplayerwhite"><span class="cbplayer" >{white.list}</span><tpl if="{eloWhStr}"><span class="cbelocompact">{eloWhStr}</span></tpl></td><tpl if="{black}"><td colspan="2" class="cbresult"><span >{resultStr}</span></td><td colspan="9"  class="cbplayerblack"><span class="cbplayer">{black.list}</span><tpl if="{eloBlStr}"><span class="cbelocompact">{eloBlStr}</span></tpl></td></tpl><td colspan="2" class="cbflagblack-morecompact"><span class="cbplayernation">{country[1]}</span></td></tr></table></div>' : this.V2vj(c, f) ? '<div class="cbgame-header-compact" id="ourheaderinside" ><table class="scroll notaTable" style="table-layout:fixed" id="ourheader"><tr><span class="cbmain-header"><td colspan="9"class="cbplayerwhite"><span class="cbplayer" >{white.list}</span><tpl if="{eloWhStr}"><span class="cbelocompact">{eloWhStr}</span></tpl></td><tpl if="{black}"><td colspan="2" class="cbresult"><span >{resultStr}</span></td><td colspan="9"  class="cbplayerblack"><span class="cbplayer">{black.list}</span><tpl if="{eloBlStr}"><span class="cbelocompact">{eloBlStr}</span></tpl></td></tpl></tr><tr><td colspan="2" class="cbflagwhite"><span class="cbplayernation">{country[0]}</span></td><td colspan="1" class="cbfide cbfidecompact"><span>{titleWhStr}</span></td><td colspan="14" style="text-align:center"><tpl if="{event.event}"><span class="cbevent">{event.event}</span></tpl></td><td colspan="1" class="cbfide cbfidecompact"><span>{titleBlStr}</span></td><td colspan="2" class="cbflagblack"><span class="cbplayernation">{country[1]}</span></td></tr></table></div>' : '<div class="cbgame-header" id="ourheaderinside" ><table class="scroll notaTable" id="ourheader" style="table-layout:fixed" ><tr><span class="cbmain-header"><td  class="cbplayerportrait" colspan="3" rowspan="2"><span >{portrait[0]}</span></td><td class="cbplayerwhite" colspan="8"><span class="cbplayer">{white.full}</span><tpl if="{eloWhStr}"><span class="cbelo">{eloWhStr}</span></tpl></td><tpl if="{black}"><td colspan="2" class="cbresult"><span >{resultStr}</span></td><td class="cbplayerblack" colspan="8"><span class="cbplayer">{black.full}</span><tpl if="{eloBlStr}"><span class="cbelo">{eloBlStr}</span></tpl></td><td class="cbplayerportrait" colspan="3" rowspan="2"><span>{portrait[1]}</span></td></tpl></tr><tr><td colspan="2" class="cbflagwhite" ><span class="cbplayernation">{country[0]}</span></td><td colspan="1" class="cbfide"><span>{titleWhStr}</span></td><td colspan="12" class="cbtourndata"><tpl if="{event.event}"><span class="cbevent">{event.event}</span></tpl><tpl if="{uniquePlace}"><br/><span class="cbsite">{uniquePlace}</span></tpl><tpl if="{event.dt}"><span class="cbeventdate">{dateStr}</span></tpl><tpl if="{annotator}"><span class="cbannotator">{annotatorStr}</span></tpl></td><td colspan="1" class="cbfide"><span>{titleBlStr}</span></td><td colspan="2" class="cbflagblack"<span class="cbplayernation">{country[1]}</span></td></tr></table></div>';
        this.headerTemplate = function() {
            return String.formatEx(g, this)
        }
    }
    ;
    var d = "<img src='{0}' alt='' height='24' width='24'>";
    b.prototype.V2vr = function(c) {
        c = c || new CB.V1a9;
        this.V2vs = ObjUtil.clone(c);
        this.V2vs.resultStr = b.V2tw(this.V2vs.getResult());
        this.V2vs.portrait = [null, null];
        this.V2vs.country = [null, null];
        this.V2vs.V2vt = [0, 0];
        this.V2vs.title = [null, null];
        c.nationWhite && (this.V2vs.V2vt[0] = c.nationWhite);
        c.nationBlack && (this.V2vs.V2vt[1] = c.nationBlack);
        return this.headerTemplate && this.headerTemplate.apply ? this.headerTemplate.apply(this.V2vs) : " --- "
    }
    ;
    b.prototype.V2vu = function(c, f) {
        this.V2vv("");
        try {
            -1 == this.V2vs.event.event.search(this.V2vs.event.site) && (this.V2vs.uniquePlace = this.V2vs.event.site)
        } catch (g) {}
        -1 !== this.V2vs.annotator.search("Robot") && (this.V2vs.annotator = "");
        this.V2vo() && c && (this.V2vv(c.eco),
        this.V2vs.eloWhStr = 0 < c.eloWh ? c.eloWh : "",
        this.V2vs.eloBlStr = 0 < c.eloWh ? c.eloBl : "",
        this.V2vs.annotatorStr = c.annotator ? "[" + c.annotator + "]" : "",
        "[ChessBase]" == this.V2vs.annotatorStr && (this.V2vs.annotatorStr = ""),
        this.V2vs.annotatorStr || (this.V2vs.dateStr = c.date.toLocaleString()),
        this.V2vw(this.V2vs),
        this.V2vx(),
        this.V2vs.titleWhStr = this.V2vy(this.V2vs, 0),
        this.V2vs.titleBlStr = this.V2vy(this.V2vs, 1),
        this.V2vz = !1);
        if (f) {
            if (this.headerTemplate && this.headerTemplate.apply)
                return this.headerTemplate.apply(this.V2vs)
        } else if (this.V2w0.apply)
            return this.V2w0.apply(this.V2vs);
        return c ? c.toString() : null
    }
    ;
    b.prototype.V2vy = function(c, f) {
        if (c.title && CB.V2w1)
            return CB.V2w1.V16m(c.title[f])
    }
    ;
    b.prototype.V2vx = function() {
        if (CB.LoginMode) {
            var c = !1
              , f = this.V2vs.getBlackKey();
            f = [this.V2vs.getWhiteKey(), f];
            for (var g = CB.V15e.WHITE; g <= CB.V15e.BLACK; ++g) {
                var h = e[f[g]];
                h && h.answered ? (this.V2vs.country[g] = h["country" + this.V2w2()],
                this.V2vs.title[g] = h.title,
                g == CB.V15e.WHITE ? this.V2vc = this.V2vs.white : this.V2vd = this.V2vs.black) : (this.V2vs.V2vt[g] ? (c = new CB.V10y(this.V2vs.V2vt[g]),
                this.V2w3(f[g], c, g)) : this.V2vs.country[g] = String.formatEx("<img src='{0}' alt='' height='16' width='16'>", this.V2vb),
                c = this.V2vz && (!h || !h.requested));
                h && h.answered ? (this.V2vs.portrait[g] = h["portrait" + this.V2w4()],
                !this.V2vs.portrait[g] && h.portrait32 && (this.V2vs.portrait[g] = h.portrait32)) : this.V2vs.portrait[g] = String.formatEx("<img src='{0}' alt='' height='24' width='24' style='display:none'>", this.V2va)
            }
            c && this.gateUpdate.exec(function() {
                this.V2w5()
            }
            .bind(this), 500)
        }
    }
    ;
    b.prototype.V2vw = function(c) {
        c.white.last = c.white.last.replace("-", " ");
        c.black.last = c.black.last.replace("-", " ");
        var f = c.white.first.search(/\./);
        0 < f && c.white.first && (c.white.first = c.white.first.slice(0, f));
        f = c.black.first.search(/\./);
        0 < f && c.black.first && (c.black.first = c.black.first.slice(0, f));
        c.getWhiteKey = function() {
            var g = this.white.last;
            this.white.first && (g += this.white.first.slice(0, 2));
            return g
        }
        ;
        c.getBlackKey = function() {
            var g = this.black.last;
            this.black.first && (g += this.black.first.slice(0, 2));
            return g
        }
    }
    ;
    b.prototype.V2w5 = function() {
        var c = this.m_game.getHeader();
        this.V2vw(c);
        var f = function() {
            if (V3ir.playerLobby) {
                this.V2vc = c.getWhite();
                this.V2vd = c.getBlack();
                var g = c.date.getYear();
                g || (g = CB.Date.getThisYear());
                c.white.last && (V3ir.playerLobby.getPlayer(c.white.first, c.white.last, c.eloWh, g, this.V2qy.bind(this)),
                e[c.getWhiteKey()] || (e[c.getWhiteKey()] = {}),
                e[c.getWhiteKey()].requested = !0);
                c.black.last && (V3ir.playerLobby.getPlayer(c.black.first, c.black.last, c.eloBl, g, this.V2r0.bind(this)),
                e[c.getBlackKey()] || (e[c.getBlackKey()] = {}),
                e[c.getBlackKey()].requested = !0)
            } else
                console.log("NoPB: " + c.white.last + "-" + c.black.last)
        }
        .bind(this);
        V3ir.playerLobby ? f() : (new CB.Timer(f)).runOnce(4E3)
    }
    ;
    b.prototype.V2w6 = function(c, f) {
        if (c && c.player) {
            var g = c.player.getFirstName()
              , h = c.player.getLastName()
              , k = this.V2w7(h, g);
            e[k] || (e[k] = {});
            e[k].answered = !0;
            var l = c.player
              , m = new CB.V10y(0);
            this.V2vh[f] = l;
            l.m_NewCBPlayer && (m = l.m_NewCBPlayer.m_HighData.m_aNation,
            m = new CB.V10y(m),
            l = l.m_NewCBPlayer.m_HighData.m_aTitle,
            this.V2vs.title[f] = l,
            e[k].title = l,
            this.V2vs.V2vt[f] || this.V2w3(k, m, f));
            (c = c.pic) && c.length ? (this.V2vi[f] = "string" === typeof c ? c : b.V2w8(c),
            [34, 40, 48, 64, 80, 100, 120].forEach(function(n) {
                var p = this.V2vs.date.year;
                p || (p = CB.Date.getThisYear());
                p = String.formatEx(this.V2vf, this.V2vi[f], f, n * Math.SQRT2, n, h, g, p);
                n == this.V2w4() && (this.V2vs.portrait[f] = p);
                e[k]["portrait" + n] = p
            }
            .bind(this))) : this.V2vj(this.w, this.h) || this.V2vk(this.w, this.h) || (c = this.V2w4(),
            34 == c || 40 == c ? c = 32 : 64 < c && (c = 64),
            m = V3ir.mediaPathFlags + String.formatEx("Flags{0}/{1}.png", c, m.getStrFlag()),
            m = String.formatEx("<img src='{1}' alt='' height='{0}' width='{0}' style='vertical-align: {2};border:none;box-shadow:none' >", c, m, "top"),
            this.V2vs.portrait[f] = e[k]["portrait" + c] = m,
            this.V2vs.country[f] = "",
            this.V2w9().forEach(function(n) {
                this.V2vs.country[f] = " ";
                e[k]["country" + n] = " "
            }
            .bind(this)))
        }
    }
    ;
    b.prototype.V2w7 = function(c, f) {
        if (f) {
            var g = f.charAt(f.length - 1);
            "0" <= g && "9" >= g && (f = f.slice(0, f.length - 1));
            c += f.slice(0, 2)
        }
        return c
    }
    ;
    b.prototype.V2w3 = function(c, f, g) {
        if (f && c && (0 == g || 1 == g) && f.getStrFlag) {
            var h = this.V2w9();
            e[c] || (e[c] = {});
            h.forEach(function(k) {
                var l = V3ir.mediaPathFlags + String.formatEx("Flags{0}/{1}.png", k, f.getStrFlag());
                l = String.formatEx("<img src='{1}' alt='' height='{0}' width='{0}' style='vertical-align: {2};border:none;box-shadow:none' >", k, l, "middle");
                k == this.V2w2() && (this.V2vb = V3ir.mediaPathFlags + String.formatEx("Flags{0}/United nations.png", k),
                this.V2vs.country[g] = l);
                e[c]["country" + k] = l
            }
            .bind(this))
        }
    }
    ;
    b.prototype.V2w2 = function() {
        return 500 > this.w || 400 > this.h ? 400 > this.w || 300 > this.h ? 16 : 24 : 750 < this.w && 560 < this.h ? 48 : 32
    }
    ;
    b.prototype.V2w9 = function() {
        return [16, 24, 32, 48, 64]
    }
    ;
    b.prototype.V2w4 = function() {
        return 380 < this.w && 260 < this.h ? 450 < this.w && 360 < this.h ? 550 < this.w && 450 < this.h ? 650 < this.w && 520 < this.h ? 900 < this.w ? 1E3 < this.w ? 120 : 100 : 80 : 64 : 48 : 40 : 34
    }
    ;
    b.prototype.V2qy = function(c) {
        this.V2w6(c, CB.V15e.WHITE);
        this.V2tu(100)
    }
    ;
    b.prototype.V2r0 = function(c) {
        this.V2w6(c, CB.V15e.BLACK);
        this.V2tu(100)
    }
    ;
    b.V2w8 = function(c) {
        return CB.V1k.V2c(c, "image/jpeg")
    }
    ;
    b.prototype.V2sw = function(c, f) {
        this.V2sp = c;
        this.V2sy(f);
        c = CB.$("#" + c);
        if (CB.V2t3.V2t4("touchstart"))
            c.on("touchend", this.V2t6.bind(this));
        if (CB.V2t3.V2t4("mousedown"))
            c.on("mouseup", this.V2t6.bind(this));
        this.V2to()
    }
    ;
    b.prototype.V2sy = function(c) {
        c.notationLocalization || (c.notationLocalization = CB.V3ho);
        this.V2su = new CB.V1cw(c.notationLocalization);
        this.V2t9 = c.useHeader;
        this.V2te = c.useResult;
        this.V2sv = c.isActive;
        this.V2tf = c;
        c.game && this.setGame(c.game)
    }
    ;
    b.prototype.setOptions = function(c) {
        this.V2sy(c)
    }
    ;
    b.prototype.m_game = null;
    b.prototype.setGame = function(c) {
        this.m_game && (this.m_game.removeOnMoveListener(this.V2tg),
        this.m_game.removeOnNavigateListener(this.V2th),
        this.m_game.removeOnChangedListener(this.V2ti),
        this.m_game.removeOnHeaderChangedListener(this.V2tj));
        if (this.m_game = c)
            this.V2tg = this.m_game.addOnMoveListener(this.onMove.bind(this)),
            this.V2th = this.m_game.addOnNavigateListener(this.V2wa.bind(this)),
            this.V2ti = this.m_game.addOnChangedListener(this.V2wb.bind(this)),
            this.V2tj = this.m_game.addOnHeaderChangedListener(this.V2tn.bind(this)),
            this.V2vz = !0;
        this.V2to()
    }
    ;
    b.prototype.getGame = function() {
        return this.m_game
    }
    ;
    b.prototype.onMove = function() {}
    ;
    b.prototype.V2wb = function() {}
    ;
    b.prototype.V2tn = function(c) {
        var f = null;
        this.m_game && (f = this.m_game.getHeader());
        if (this.V2vc !== f.getWhite() || this.V2vd !== f.getBlack())
            this.V2vz = !0;
        c && c.recalc && (c = $("#notaEl").width(),
        f = $("#notaEl").height(),
        null == c && (c = $("#notaEl" + this.nInPage).width(),
        f = $("#notaEl" + this.nInPage).height()),
        this.V2v9(c, f));
        this.V2to()
    }
    ;
    b.prototype.V2wa = function(c) {}
    ;
    b.V2tw = function(c) {
        return c == CB.GameResultEnum.UNDEFINED_RESULT ? "-" : CB.GameResultEnum.toString(c)
    }
    ;
    b.prototype.V2vv = function(c) {
        3 == c.length && (this.V2vs.eco = lm[c + "_ECO"])
    }
    ;
    b.prototype.V2tu = function(c) {
        this.gateUpdate.exec(function() {
            this.V2wc();
            delete this.V2vz
        }
        .bind(this), c)
    }
    ;
    b.prototype.V2to = function() {
        function c(g) {
            return g.first ? "<a href='https://players.chessbase.com/en/player/" + g.last + "_" + g.first + "' target='_blank'>" + String.formatEx("{last}, {first}", g) + "</a>" : "<a href='https://play.chessbase.com/user/" + g.last + "' target='_blank'>" + g.getListStr() + "</a>"
        }
        var f = null;
        this.m_game && (f = this.m_game.getHeader(),
        f.white.list = f.white.getListStr(1),
        f.black.list = f.black.getListStr(1),
        f.white.full = c(f.white),
        f.black.full = c(f.black));
        this.V2vr(f, !0);
        f = this.V2vu(f, !0);
        CB.$("#theheader-" + this.nInPage).html(f)
    }
    ;
    b.prototype.V2wc = function() {
        var c = null;
        this.m_game && (c = this.m_game.getHeader());
        c = this.V2vu(c, !0);
        CB.$("#theheader-" + this.nInPage).html(c)
    }
    ;
    b.prototype.focus = function() {}
    ;
    b.prototype.onMouseMove = function(c) {
        c.preventDefault()
    }
    ;
    b.prototype.V2wd = function(c, f, g) {
        "undefined" !== typeof Ext && c && !glSettings.inDialog() && CB.V1hl && CB.V1hl.V2we(c, f, g)
    }
    ;
    b.prototype.V2t6 = function(c) {}
    ;
    b.prototype.V2uu = function(c) {
        if (!(!this.V2sv || 600 > window.innerHeight || 700 > window.innerWidth)) {
            var f = c.target;
            CB.$.is(f, "[playid]") && (f = CB.$(f).attr("playid"),
            this.V2wd(this.V2vh[f], 0, this.V2vi[f]));
            c.preventDefault()
        }
    }
    ;
    b.prototype.isActive = function() {
        return this.V2sv
    }
    ;
    b.prototype.V2v4 = function(c) {
        this.V2sv = c
    }
    ;
    b.prototype.V2t0 = function(c) {
        c.preventDefault()
    }
    ;
    b.prototype.V2t1 = function(c) {
        c.preventDefault()
    }
    ;
    b.prototype.resize = function(c, f) {
        CB.DOM.resize(this.V2sp, c, f)
    }
    ;
    b.prototype.V2wf = function(c, f) {
        this.V2ve = c;
        this.V2vq = f;
        this.V2v9(this.w, this.h);
        this.V2wc()
    }
    ;
    b.prototype.onResize = function(c, f) {
        this.w = c;
        this.h = f;
        this.V2v9(c, f);
        this.V2vz = !0;
        this.V2wc()
    }
    ;
    return b
}();
CB.V2sn.factory = function(e, b) {
    b = new CB.V2sn(b);
    b.V2sw(e, CB.cbNotationDefaults);
    return V3ir.panelMgr.notaHeaderElement = b
}
;
"use strict";
CB.NotaFooterElement = function() {
    var e = function(b, d) {
        this.V2sp = 0;
        this.gateUpdate = new CB.V3id;
        this.V2wg = [];
        this.nInPage = b;
        this.ticket = d
    };
    e.prototype.panel = null;
    e.prototype.V2wh = function(b) {
        return this.V2wi(b)
    }
    ;
    e.prototype.getPiece = function(b) {
        return (CB.V15e.toString(CB.Piece.side(b)) + CB.Piece.toString(b)).toLowerCase()
    }
    ;
    e.V2wj = '<span class="piece-{0}"></span>';
    e.V2wk = "</div>";
    e.prototype.V2wl = function() {
        var b = '<a href="' + (V3ir ? V3ir.getAppUrl(V3ir.V3ia.SWITCHAPP_DATABASE) : "https://database.chessbase.com") + '" class="footer-book" id="footer-book{0}" target="_blank"></a><div class="footer-eval" id="footer-eval{0}"></div>';
        return b + '<div class="mat-balance">'
    }
    ;
    e.prototype.V2wi = function(b) {
        V3ir && V3ir.config.externalCommonPath && (e.V2wj = '<span style="background-image: url( {1}Media/Buttons/{0}-16px.png );"></span>');
        for (b = 0; 6 > b; b++)
            ;
        var d = String.formatEx(this.V2wl(), this.nInPage);
        for (b = 0; 6 > b; b++)
            if (0 < this.V2wg[b + 1])
                for (var c = 0; c < this.V2wg[b + 1]; c++)
                    d += String.formatEx(e.V2wj, this.getPiece(b + 1), CB.V10z());
        for (b = 0; 6 > b; b++)
            if (0 > this.V2wg[b + 1])
                for (c = 0; c < Math.abs(this.V2wg[b + 1]); c++)
                    d += String.formatEx(e.V2wj, this.getPiece(b + 9), CB.V10z());
        return d += e.V2wk
    }
    ;
    e.prototype.V2wm = function() {
        CB.$("#thefooter-" + this.nInPage).addClass("notafooter-container")
    }
    ;
    e.prototype.V2wn = function() {
        CB.$("#thefooter-" + this.nInPage).addClass("notafooter-container")
    }
    ;
    e.prototype.V2sw = function(b) {
        this.V2wm();
        this.V2sp = b;
        this.update()
    }
    ;
    e.prototype.V2sy = function(b) {
        this.V2tf = b;
        b.game && this.setGame(b.game)
    }
    ;
    e.prototype.setOptions = function(b) {
        this.V2sy(b)
    }
    ;
    e.prototype.m_game = null;
    e.prototype.setText = function(b) {
        CB.$("#footer-eval" + this.nInPage).text(b)
    }
    ;
    e.prototype.setGame = function(b) {
        this.m_game && (this.m_game.removeOnMoveListener(this.V2tg),
        this.m_game.removeOnNavigateListener(this.V2th),
        this.m_game.removeOnChangedListener(this.V2ti));
        if (this.m_game = b)
            this.V2tg = this.m_game.addOnMoveListener(this.onMove.bind(this)),
            this.V2th = this.m_game.addOnNavigateListener(this.V2wa.bind(this)),
            this.V2ti = this.m_game.addOnChangedListener(this.V2wb.bind(this))
    }
    ;
    e.prototype.getGame = function() {
        return this.m_game
    }
    ;
    e.prototype.onMove = function() {
        this.update()
    }
    ;
    e.prototype.V2wb = function() {
        this.update()
    }
    ;
    e.prototype.V2wa = function(b) {
        !this.V2wo && V3ir.aTBLobby && (this.V2wo = V3ir.aTBLobby.addOnLiveBookDisplayListener(this.liveBookListener.bind(this)));
        this.update()
    }
    ;
    e.prototype.update = function() {
        for (var b = [], d = 0; 16 > d; d++)
            b[d] = 0;
        if (null !== this.getGame()) {
            d = this.getGame().getCurPos();
            for (var c = 0; 64 > c; c++)
                b[d.board[c]]++
        }
        for (d = 1; 7 > d; d++)
            this.V2wg[d] = b[d] - b[d + 8];
        this.V2to()
    }
    ;
    e.prototype.V2tu = function() {
        this.gateUpdate.exec(function() {
            this.V2to()
        }
        .bind(this), 200)
    }
    ;
    e.prototype.V2to = function() {
        var b = new StringBuilder;
        this.V2wp() && CB.$(".footer-eval").text("");
        var d = this.V2wh(!1);
        d.length && b.append(d);
        CB.$("#thefooter-" + this.nInPage).html(b.toString());
        b = (b = CB.$("#notaparent" + this.nInPage)) && b.single() && 360 < b.single().clientHeight;
        this.V2wp() || b ? CB.$("#thefooter-" + this.nInPage).show() : CB.$("#thefooter-" + this.nInPage).hide()
    }
    ;
    e.prototype.V2wp = function() {
        for (var b = 0; 6 > b; b++)
            if (0 != this.V2wg[b + 1])
                return !0;
        return !1
    }
    ;
    e.prototype.focus = function() {}
    ;
    e.prototype.V2t0 = function(b) {
        b.preventDefault()
    }
    ;
    e.prototype.V2t1 = function(b) {
        b.preventDefault()
    }
    ;
    e.prototype.resize = function(b, d) {
        CB.DOM.resize(this.V2sp, b, d)
    }
    ;
    e.prototype.liveBookListener = function(b) {
        if (!CB.Vq.Vr() && b && (!this.ticket || this.ticket == b.ticket)) {
            for (var d = 0, c = 0; c < b.moves.length; c++)
                d += b.moves[c].getNGames();
            d ? CB.$("#footer-book" + this.nInPage).text(lm.LIVE_BOOK + ": " + d + " " + lm.GAMES) : CB.$("#footer-book" + this.nInPage).text("")
        }
    }
    ;
    return e
}();
CB.NotaFooterElement.factory = function(e, b) {
    b = new CB.NotaFooterElement(b);
    b.V2sw(e, CB.cbNotationDefaults);
    return V3ir.panelMgr.NotaFooterElement = b
}
;
"use strict";
CB.V2od = function() {
    var e = new CB.Color(0,0,0,.25)
      , b = new CB.Color(255,255,250,.95)
      , d = 1
      , c = function(f, g, h) {
        h = h || !1;
        this.uniqueId = d++;
        this.background = new CB.V2lj(document.body,"bMessageBG" + this.uniqueId);
        this.background.V2wq(99999);
        this.V2wr = new CB.V2lj(this.background,"bMessageText" + this.uniqueId);
        CB.$(this.background.elDOM).addClass("board-msg");
        h && CB.$(this.background.elDOM).addClass("modal");
        f.messageWin = this;
        this.V2wr.setText(g || "Empty Board Message");
        this.background.elDOM.addEventListener("mousedown", function(k) {
            h || (f.destroyMessage(),
            k.preventDefault())
        });
        this.V2wr.elDOM.addEventListener("mousemove", function(k) {
            k.preventDefault()
        })
    };
    c.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    c.prototype.setText = function(f) {
        this.V2wr.setText(f)
    }
    ;
    c.prototype.setVisible = function(f) {
        this.background.setVisible(f)
    }
    ;
    c.prototype.onResize = function(f) {
        var g = f.cbcanvas.getBoundingClientRect()
          , h = new CB.V134(g.left,g.top,g.left + g.width,g.top + g.height);
        f.cbcanvas.pixToZoomRect && (h = f.cbcanvas.pixToZoomRect(f.getOuterRect()));
        var k = 2;
        f.nSqPix && (k = f.nSqPix);
        var l = Math.round(.7 * h.w)
          , m = Math.round(l / 11)
          , n = 1;
        50 < this.V2wr.getText().length && (m *= 2.1,
        n = 2);
        this.background.setPos((h.w - l) / 2 + h.left + g.left, (h.h - m) / 2 + h.top + g.top - m / 2 - (k - m) / 2 + window.pageYOffset);
        this.background.setSize(l, m);
        this.V2wr.setPos(0, 0);
        this.V2wr.setSize(l, m);
        f.cbcanvas.pixToZoom && this.V2wr.setBorder(f.cbcanvas.pixToZoom(2), new CB.Color(0,0,0,.7));
        this.V2wr.setBackgroundColor(e);
        this.V2wr.setColor(b);
        400 < l ? this.V2wr.setFontFamily("Roboto, Merriweather, Helvetica, sans-serif; font-stretch: expanded") : 250 > l && this.V2wr.setFontFamily("Roboto, Merriweather, Helvetica, sans-serif; font-stretch: condensed");
        f = Math.max(5, .9 * m / n);
        do
            this.V2wr.V2mm(f),
            --f;
        while (5 < f && this.V2wr.V2mo() > .95 * l && this.V2wr.V2mp() > .95 * m);
        this.V2wr.V2ws()
    }
    ;
    return c
}();
CB.V2og = function() {
    var e = 1
      , b = function(d, c, f, g, h) {
        this.uniqueId = e++;
        this.square = c;
        if ("undefined" == typeof this.square || null == this.square)
            this.square = -1;
        this.width = f || 300;
        this.background = new CB.V2lj(document.body,"bBubbleBG" + this.uniqueId);
        $(this.background.elDOM).addClass("cbBoardBubble");
        this.setText(d, g);
        this.direction = h
    };
    b.V2wt = 0;
    b.V2wu = 1;
    b.V2wv = 2;
    b.V2ww = 3;
    b.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    b.prototype.setText = function(d, c) {
        c ? $(this.background.elDOM).html(String.f("{0}<img src='{1}' class='cbBoardBubbleIcon'>", d, c)) : $(this.background.elDOM).text(d)
    }
    ;
    b.prototype.setVisible = function(d) {
        this.background.setVisible(d)
    }
    ;
    b.prototype.onResize = function(d) {
        var c = this.direction || this.V2wx(d, this.square)
          , f = d.cbcanvas.getBoundingClientRect();
        new CB.V134(f.left,f.top,f.left + f.width,f.top + f.height);
        if (d.cbcanvas.pixToZoomRect && d.cbcanvas.pixToZoom) {
            var g = d.cbcanvas.pixToZoomRect(d.getOuterRect());
            var h = 2;
            d.nSqPix && (h = d.nSqPix);
            $(this.background.elDOM).css("max-width", this.width);
            var k = $(this.background.elDOM).outerWidth()
              , l = $(this.background.elDOM).outerHeight()
              , m = (g.w - k) / 2 + g.left + f.left;
            g = (g.h - l) / 2 + g.top + f.top - l / 2 - (2.5 * h - l) / 2 + window.pageYOffset;
            if (-1 != this.square) {
                g = d.cbcanvas.pixToZoomRect(d.getInnerRect());
                m = g.left + f.left;
                g = g.top + f.top + window.pageYOffset;
                f = this.square >> 3;
                var n = 7 - (this.square & 7);
                d.blackIsBottom && (f = 7 - f,
                n = 7 - n);
                var p = d.cbcanvas.pixToZoom(8)
                  , q = d.cbcanvas.pixToZoom(40);
                switch (c) {
                default:
                case b.V2wt:
                    m += d.cbcanvas.pixToZoom((f + 1) * h);
                    m -= p;
                    g += d.cbcanvas.pixToZoom(n * h) - l;
                    g -= q;
                    break;
                case b.V2wu:
                    m += d.cbcanvas.pixToZoom((f + 1) * h);
                    m -= p;
                    g += d.cbcanvas.pixToZoom((n + 1) * h);
                    g += q;
                    break;
                case b.V2wv:
                    m += d.cbcanvas.pixToZoom(f * h) - k;
                    m += p;
                    g += d.cbcanvas.pixToZoom((n + 1) * h);
                    g += q;
                    break;
                case b.V2ww:
                    m += d.cbcanvas.pixToZoom(f * h) - k,
                    m += p,
                    g += d.cbcanvas.pixToZoom(n * h) - l,
                    g -= q
                }
            } else
                $(this.background.elDOM).removeClass("cbBoardBubbleTR cbBoardBubbleBR cbBoardBubbleTL cbBoardBubbleBL");
            if (m + k < window.innerWidth && 5 < m && -1 != this.square)
                switch (c) {
                default:
                case b.V2wt:
                    $(this.background.elDOM).addClass("cbBoardBubbleTR");
                    break;
                case b.V2ww:
                    $(this.background.elDOM).addClass("cbBoardBubbleTL");
                    break;
                case b.V2wu:
                    $(this.background.elDOM).addClass("cbBoardBubbleBR");
                    break;
                case b.V2wv:
                    $(this.background.elDOM).addClass("cbBoardBubbleBL")
                }
            else
                $(this.background.elDOM).removeClass("cbBoardBubbleTR cbBoardBubbleBR cbBoardBubbleTL cbBoardBubbleBL"),
                5 > m && (m = 5),
                m + k > window.innerWidth && (m = window.innerWidth - k);
            $(this.background.elDOM).css({
                position: "absolute",
                left: m + "px",
                top: g + "px"
            })
        }
    }
    ;
    b.prototype.V2wx = function(d, c) {
        var f = this.V2wy(d, c, b.V2wt)
          , g = this.V2wy(d, c, b.V2wu)
          , h = this.V2wy(d, c, b.V2wv);
        d = this.V2wy(d, c, b.V2ww);
        f = [f, g, h, d];
        g = -1;
        h = 64;
        for (d = 0; 4 > d; d++)
            f[d] < h && (h = f[d],
            g = d);
        return g
    }
    ;
    b.prototype.V2wy = function(d, c, f) {
        c = 0;
        var g = this.square >> 3
          , h = this.square & 7;
        d.blackIsBottom && (g = 7 - g,
        h = 7 - h);
        switch (f) {
        default:
        case b.V2wt:
            for (f = g + 1; f < g + 5 && 8 > f; f++)
                for (var k = h + 1; k < h + 3 && 8 > k; k++)
                    0 != d.board.sqs[8 * f + k] && (c += 1,
                    console.log(c));
            break;
        case b.V2wu:
            for (f = g + 1; f < g + 5 && 8 > f; f++)
                for (k = h - 1; k > h - 3 && 0 < k; k--)
                    0 != d.board.sqs[8 * f + k] && c++;
            break;
        case b.V2wv:
            for (f = g - 1; f > g - 5 && 0 < f; f--)
                for (k = h - 1; k > h - 3 && 0 < k; k--)
                    0 != d.board.sqs[8 * f + k] && c++;
            break;
        case b.V2ww:
            for (f = g - 1; f > g - 5 && 0 < f; f--)
                for (k = h + 1; k < h + 3 && 8 > k; k++)
                    0 != d.board.sqs[8 * f + k] && c++
        }
        return c
    }
    ;
    return b
}();
"use strict";
CB.ChessAudio = function() {
    var e = function(b, d) {
        this.V2x0 = d;
        this.V2wz = b;
        this.queue = new CB.V2x1;
        this.V2x2 = [];
        this.loaded = !1;
        this.newGame = this.V2x3("Board/newgame");
        this.V2x4 = [];
        this.V2x5 = [];
        this.V2x6 = [];
        this.V2x7 = [];
        this.V2x7.push(this.V2x3("Board/CaptStrong"));
        this.castle = this.V2x3("Board/castle");
        this.V2x8 = [];
        this.V2x9 = this.V2x3("Server/clapping");
        this.V2xa = this.V2x3("Server/draw");
        this.V2xb = this.V2x3("Server/remis");
        this.V2xc = this.V2x3("Server/ping2");
        this.V2xd = this.V2x3("Server/ringbellonce");
        this.V2xe = this.V2x3("Server/ChallengeBell");
        this.V2xf = this.V2x3("Server/Feedback/faster");
        this.V2xg = [];
        this.V2xh = [];
        this.V2xi = [];
        this.V2xj = [];
        this.V2xk = [];
        this.punishCap = [];
        this.punishNoCap = [];
        this.bestCap = [];
        this.bestNoCap = [];
        this.V2xl = [];
        this.wellDone = [];
        this.V2xm = this.V2x3("Server/Aooga")
    };
    e.prototype.V1ro = function() {
        this.queue.V1ro()
    }
    ;
    e.prototype.V2xn = function() {
        return this.queue.V2xn()
    }
    ;
    e.prototype.enable = function(b) {
        return this.queue.enable(b)
    }
    ;
    e.prototype.loadAll = function() {
        new CB.Tick;
        this.V2xo = this.V2x3("Server/IndividualApplause");
        for (var b = 1; 11 >= b; b++)
            this.V2x4.push(this.V2x3("Board/move" + b));
        for (b = 1; 15 >= b; b++)
            this.V2x6.push(this.V2x3("Board/capture" + b));
        for (b = 1; 5 >= b; b++)
            this.V2x8.push(this.V2x3("Server/winapplause" + b));
        this.V2x8.push(this.V2x3("Server/cheer1"));
        this.V2x8.push(this.V2x3("Server/cheer2"));
        this.V2x8.push(this.V2x3("Server/cheer3"));
        this.V2x8.push(this.V2x3("Server/cheer5"));
        if (this.V2x0) {
            for (b = 1; 16 >= b; b++)
                this.V2xg.push(this.V2x3("Server/punch" + b));
            for (b = 1; 8 >= b; b++)
                this.V2xh.push(this.V2x3("Server/grunt" + b));
            for (b = 1; 9 >= b; b++)
                this.V2xi.push(this.V2x3("Server/MyError" + b));
            for (b = 1; 5 >= b; b++)
                this.V2xk.push(this.V2x3("Server/Cheer" + b))
        }
        if (V3ir.config.useAnalysisEngines || this.V2x0)
            for (b = 1; 5 >= b; b++)
                this.V2xj.push(this.V2x3("Server/OppError" + b));
        if (V3ir.config.useAnalysisEngines) {
            var d = ["Plop", "CluckCluck", "FistInHand", "Snap"]
              , c = ["Marseillaise", "Yes", "SoftClapClap"]
              , f = ["Cluck", "DoubleSnap", "Drawlips"]
              , g = ["CuckooWhistle", "Moan", "Moan2"]
              , h = ["Exhale", "sharpinhale", "sssinhale"]
              , k = ["WellDone"];
            for (b = 0; b < d.length; b++)
                this.punishCap.push(this.V2x3("Server/Feedback/" + d[b]));
            for (b = 0; b < c.length; b++)
                this.punishNoCap.push(this.V2x3("Server/Feedback/" + c[b]));
            for (b = 0; b < f.length; b++)
                this.bestCap.push(this.V2x3("Server/Feedback/" + f[b]));
            for (b = 0; b < g.length; b++)
                this.bestNoCap.push(this.V2x3("Server/Feedback/" + g[b]));
            for (b = 0; b < h.length; b++)
                this.V2xl.push(this.V2x3("Server/Feedback/" + h[b]));
            for (b = 0; b < k.length; b++)
                this.wellDone.push(this.V2x3("Server/Feedback/" + k[b]));
            for (b = 1; 2 >= b; b++)
                this.V2x5.push(this.V2x3("Board/moveStrong" + b))
        }
        (new CB.Timer(function() {
            new CB.Tick;
            this.V2x2.forEach(function(l) {
                l.load()
            });
            this.V2x2 = [];
            this.loaded = !0
        }
        .bind(this))).runOnce(1E3)
    }
    ;
    e.prototype.onMove = function(b, d) {
        this.queue.V1ro();
        b.isTake() ? b.isStrong ? this.V2xp() : this.V2xq() : b.isCastling() ? this.V2xr() : b.isStrong ? this.V2xs() : this.V2xt()
    }
    ;
    e.prototype.V2xt = function() {
        this.queue.push(this.V2x4[Math.floor(Math.random() * this.V2x4.length)])
    }
    ;
    e.prototype.V2xs = function() {
        this.queue.push(this.V2x5[Math.floor(Math.random() * this.V2x5.length)])
    }
    ;
    e.prototype.V2xq = function() {
        this.queue.push(this.V2x6[Math.floor(15 * Math.random())])
    }
    ;
    e.prototype.V2xp = function() {
        this.queue.push(this.V2x7[Math.floor(Math.random() * this.V2x7.length)])
    }
    ;
    e.prototype.V2xr = function() {
        this.queue.push(this.castle)
    }
    ;
    e.prototype.V2xu = function() {
        this.queue.push(this.V2x8[Math.floor(9 * Math.random())])
    }
    ;
    e.prototype.V2xv = function() {
        this.queue.push(this.V2x9)
    }
    ;
    e.prototype.onPing = function() {
        this.queue.push(this.V2xc)
    }
    ;
    e.prototype.V2xw = function() {
        this.V2xo && this.queue.push(this.V2xo)
    }
    ;
    e.prototype.V2xx = function() {
        this.queue.push(this.V2xe)
    }
    ;
    e.prototype.V2xy = function() {
        this.queue.push(this.V2xd)
    }
    ;
    e.prototype.V2xz = function() {
        this.queue.push(this.V2xg[Math.floor(14 * Math.random())])
    }
    ;
    e.prototype.V2y0 = function() {
        this.queue.push(this.V2xh[Math.floor(Math.random() * this.V2xh.length)])
    }
    ;
    e.prototype.V2y1 = function() {
        this.queue.push(this.V2xi[Math.floor(Math.random() * this.V2xi.length)])
    }
    ;
    e.prototype.onFightOppWrong = function() {
        this.queue.push(this.V2xj[Math.floor(Math.random() * this.V2xj.length)])
    }
    ;
    e.prototype.V2y2 = function() {
        this.queue.push(this.V2xk[Math.floor(Math.random() * this.V2xk.length)])
    }
    ;
    e.prototype.V2y3 = function() {
        this.queue.push(this.V2xf)
    }
    ;
    e.prototype.V2y4 = function() {
        this.queue.push(this.punishCap[Math.floor(Math.random() * this.punishCap.length)])
    }
    ;
    e.prototype.V2y5 = function() {
        this.queue.push(this.punishNoCap[Math.floor(Math.random() * this.punishNoCap.length)])
    }
    ;
    e.prototype.V2y6 = function() {
        this.queue.push(this.bestCap[Math.floor(Math.random() * this.bestCap.length)])
    }
    ;
    e.prototype.V2y7 = function() {
        this.queue.push(this.bestNoCap[Math.floor(Math.random() * this.bestNoCap.length)])
    }
    ;
    e.prototype.V2y8 = function() {
        this.queue.push(this.V2xl[Math.floor(Math.random() * this.V2xl.length)])
    }
    ;
    e.prototype.V2y9 = function() {
        this.queue.push(this.wellDone[Math.floor(Math.random() * this.wellDone.length)])
    }
    ;
    e.prototype.V2ya = function() {
        CB.V6r.V12q() == CB.V6r.DEU ? this.queue.push(this.V2xb) : this.queue.push(this.V2xa)
    }
    ;
    e.prototype.onNewGame = function() {
        this.queue.push(this.newGame)
    }
    ;
    e.prototype.V2yb = function() {
        this.queue.push(this.V2xm)
    }
    ;
    e.prototype.V2yc = function() {
        this.queue.push(this.V2xm)
    }
    ;
    e.prototype.V2yd = function() {
        this.queue.push(this.V2xe)
    }
    ;
    e.prototype.V2x3 = function(b) {
        b = new CB.V2ye(this.V2wz + b,null,!0);
        this.V2x2.push(b);
        return b
    }
    ;
    return e
}();
"use strict";
CB.V1f2 = function() {
    var e = function() {
        this.V1k7 = !0
    };
    e.prototype._game = null;
    e.prototype.setGame = function(b) {
        this._game && this._game.removeOnMoveListener(this.V2yf);
        (this._game = b) && !V3ir.config.isSilentBoard && (this.V2yf = this._game.addOnMoveListener(this.V2qm.bind(this)))
    }
    ;
    e.prototype.getGame = function() {
        return this._game
    }
    ;
    e.prototype.enable = function(b) {
        this.V1k7 = b
    }
    ;
    e.prototype.V2yg = {};
    e.prototype.V2yg[CB.V15e.WHITE] = !0;
    e.prototype.V2yg[CB.V15e.BLACK] = !0;
    e.prototype.V2yh = function(b, d) {
        this.V2yg[b] = d
    }
    ;
    e.prototype.V2qm = function() {
        var b = this._game.getCurPos()
          , d = this._game.getLastMove();
        if (d && this.V1k7 && V3ir && V3ir.chessAudio)
            V3ir.chessAudio.onMove(d, b)
    }
    ;
    return e
}();
"use strict";
CB.V2o1 = function() {
    var e = new CB.Color(0,0,0,.3)
      , b = new CB.Color(210,255,170,.75)
      , d = new CB.Color(255,255,220,.9)
      , c = 1
      , f = function(g, h, k, l, m, n, p) {
        this.board = g;
        this.uniqueId = c++;
        this.background = new CB.V2lj(g.cbcanvas.canvas.parentNode,"bTitleBG" + this.uniqueId);
        m || (this.V1qs = new CB.V2m7(this.background));
        this.V2wr = new CB.V2lj(this.background,"bTitleText" + this.uniqueId);
        CB.CloseButton && p && !V3ir.isBoardOnlyApp() && (this.V2sb = new CB.CloseButton(this.background,"bCloseBtn" + this.uniqueId,this.V2yi.bind(this)));
        g.titleWin = this;
        this.V2yj = h;
        this.V2wr.setText(l || "Waiting for game...");
        $(this.V2wr.elDOM).on("click", k);
        $(this.V2wr.elDOM).on("dblclick", n);
        this.V1qs && ($(this.V1qs.background.elDOM).on("click", k),
        $(this.V1qs.background.elDOM).on("dblclick", n));
        this.V2wr.setBackgroundColor(e);
        this.V2wr.setColor(d);
        this.V2wr.setFontFamily(V3ir.config.defaultCondensedFont);
        $(this.V2wr).css("cursor", "pointer");
        this.h = Math.round(g.cbcanvas.pixToZoom(this.V2yk(g.height)))
    };
    f.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    f.prototype.V2qo = !0;
    f.prototype.setText = function(g) {
        this.V2wr.setText(g);
        if (this.textW) {
            g = this.V2yl();
            do
                this.V2wr.V2mm(g),
                --g,
                this.V2wr.V2mo(),
                this.V2wr.V2mp();
            while (4 < g && (this.V2wr.V2mo() > this.textW - 4 || this.V2wr.V2mp() > this.h - 2))
        }
    }
    ;
    f.prototype.setVisible = function(g) {
        this.background.setVisible(g)
    }
    ;
    f.prototype.V2ym = !1;
    f.prototype.V2om = function(g) {
        this.V2ym != g && ((this.V2ym = g) ? (this.V2wr.setBackgroundColor(b),
        this.V2wr.setColor("black")) : (this.V2wr.setBackgroundColor(e),
        this.V2wr.setColor(d)))
    }
    ;
    f.prototype.V2ob = function() {
        return this.V1qs
    }
    ;
    f.prototype.V2yl = function() {
        if (this.board) {
            var g = Math.round(this.board.cbcanvas.pixToZoom(this.V2yk(this.board.height)));
            g = Math.round(.65 * g);
            8 > g && (g = 8);
            return g
        }
        return 16
    }
    ;
    f.prototype.V2np = function(g, h) {
        return this.V2yk(g)
    }
    ;
    f.prototype.V2yk = function(g) {
        var h = this.board ? this.board.cbcanvas.V12j(36) : 36;
        return Math.min(h, g / 16)
    }
    ;
    f.prototype.onResize = function(g) {
        this.board = g;
        var h = g.cbcanvas.pixToZoomRect(g.getOuterRect())
          , k = Math.round(g.cbcanvas.pixToZoom(this.V2yk(g.height)))
          , l = k + 1
          , m = this.V2yl();
        this.h = k;
        h.move(-1, -this.h);
        h.h = this.h;
        this.btnW = this.V2sb ? l : 0;
        CB.Vq.V37() && this.V2sb && this.btnW < CB.Vq.pixToZoom(26) && (this.btnW = CB.Vq.pixToZoom(26));
        this.V2sc = this.V1qs ? Math.min(260, .4 * h.w) : 0;
        h.w--;
        this.textW = h.w - this.V2sc - this.btnW;
        this.background.setPos(h.left, h.top);
        this.background.setSize(h.w, h.h);
        k = Math.max(1, Math.min(4, Math.round(Math.sqrt(h.w / 100))));
        this.background.V2mq(k, 8 * k, "rgba( 60, 30, 20, 0.5 )");
        this.V1qs && this.V1qs.setPosSize(0, 0, this.V2sc, this.h);
        this.V2wr.setPos(this.V2sc, 0);
        this.V2wr.setSize(this.textW, this.h);
        this.V2wr.setBorder(g.cbcanvas.pixToZoom(1), new CB.Color(0,0,0,1));
        this.V2om(this.V2ym);
        this.V2wr.V2ws();
        do
            this.V2wr.V2mm(m),
            --m,
            this.V2wr.V2mo(),
            this.V2wr.V2mp();
        while (4 < m && (this.V2wr.V2mo() > this.textW || this.V2wr.V2mp() > this.h - 2));
        this.V2wr.V2mn(!0);
        this.V2sb && (this.V2sb.setPos(h.w - this.btnW, this.h - this.btnW),
        this.V2sb.setSize(this.btnW, this.btnW))
    }
    ;
    f.prototype.V2yi = function(g) {
        void 0 !== this.V2yj && this.V2yj(g)
    }
    ;
    return f
}();
"use strict";
CB.V2o3 = function() {
    var e = function(b, d) {
        this.board = b;
        this.logoPath = d;
        this.background = new CB.V2lj(b.cbcanvas.canvas.parentNode,"bLogo");
        b.titleWin = this;
        this.V2yo()
    };
    e.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    e.prototype.setVisible = function(b) {
        this.background.setVisible(b)
    }
    ;
    e.prototype.V2np = function(b, d) {
        return this.V2yk()
    }
    ;
    e.prototype.V2yo = function() {
        this.V2yp() || (document.getElementById(this.background.elDOM.id).innerHTML = "<img id='imgLogo' src='" + this.logoPath + "'>")
    }
    ;
    e.prototype.V2yp = function() {
        return document.getElementById("imgLogo")
    }
    ;
    e.prototype.V2yk = function() {
        return this.logoPath == V3ir.panelMgr.logoPathSmallest ? 48 : 102
    }
    ;
    e.prototype.V2s4 = function() {
        return this.logoPath == V3ir.panelMgr.logoPathSmallest ? 143 : 298
    }
    ;
    e.prototype.onResize = function(b) {
        this.board = b;
        b = this.V2s4();
        var d = this.V2yk();
        this.background.setPos((window.innerWidth - b) / 2, this.logoPath == V3ir.panelMgr.logoPathSmallest ? -32 : -64);
        this.background.setSize(b, d);
        this.V2yo();
        $(".BoardAreaShadowT").hide()
    }
    ;
    return e
}();
"use strict";
CB.EngineLinesElement = function() {
    function e(c) {
        if (c.handicap) {
            var f = CB.V1kt.V1sp(c.handicap);
            return String.formatEx("{5}: {0}, {1} {2} {3}={4}s", f, lm.DEPTH, c.depth, lm.TIME, idiv(c.totalTime, 1E3), lm.LEVEL)
        }
        return String.formatEx(lm.ENG_SEARCH_INFO_FMT, c.depth, c.maxDepth, idiv(c.nps, 1E3), idiv(c.totalTime, 1E3))
    }
    function b(c) {
        var f = CB.$(c.target)
          , g = f.data("pv");
        g = g.trim();
        g = g.split(" ").map(CB.V17g.fromString);
        f = f.parent("[data-pos]");
        f = CB.$(f);
        f = new CB.Position(f.data("pos"));
        g = new CB.Game(f,g);
        g = CB.V241.V242(g);
        c.dataTransfer.setData("text", g)
    }
    var d = function(c, f) {
        this.nInPage = c || 0;
        this.V2yq = !!f;
        this.V2yr();
        this.hintMeter = new HintMeter;
        this.V2ys = new BlockGate;
        this.V2yt = !1;
        this.V2yu = 24;
        this.lastWidth = -1
    };
    d.defaultOptions = {
        scrollLines: !0,
        autoHints: !0,
        clickAssist: !0
    };
    d.prototype.V2yv = function() {
        return String.f("<div class='engOutContainer engOutContainerPlay' id='engOutContainer'><div class='engOutLeftCol'><div class='engOutLine engOutPane'><div class='engOutLineLeft'><div class='engOutVariation'></div><div class='engOutSearchInfo'></div></div><div class='engOutLineRight'><button class='engOutBtn' id='engOutBtnPlus'>+</button><button class='engOutBtn' id='engOutBtnMinus'>-</button></div></div><div class='engOutHintParent engOutPane'><div class='engOutHint'><div class='engOutHintInner'></div></div><button class='engOutHintCheck' id='engOutHintCheck'>{1}</button><button class='engOutAssistCheck' id='engOutAssistCheck'>{2}</button><div><button class='engOutNextHint' id = 'engOutNextHint'> {0}</button></div></div><div class='engOutFeedbackParent engOutPane'><div class='engOutFeedback'></div><div class='engOutHelpMeter'><div class='engOutHelpShareParent'><div class='engOutHelpShare'><div class='engOutHelpShareText'></div></div><div class='engOutUserShare'><div class='engOutUserShareText'></div></div></div><div class='engOutHintCnt'></div></div></div></div><div class='engOutRightCol'><div class='engOutEval'><div class='engOutEvalText engOutPane'></div><div class='engOutEvalImg engOutPane'></div></div><div class='engOutPosInfo' id='engOutPosInfo'>{3}</div></div></div><div class='engine-info-text' id='engine-info-text-0'></div>", lm.NEXT_HINT, lm.AUTOMATIC_HINTS, lm.CLICK_ASSIST, this.V2yw())
    }
    ;
    d.prototype.V2yx = function() {
        return String.f("<div class='engOutContainer' id='engOutContainer'><div class='engOutLine engOutPane'><div class='engOutLineLeft'><div class='engOutVariation'></div><div class='engOutSearchInfo'></div></div><div class='engOutLineRight'><button class='engOutBtn' id='engOutBtnPlus'>+</button><button class='engOutBtn' id='engOutBtnMinus'>-</button></div></div><div class='engOutEval'><div class='engOutEvalText engOutPane'></div></div><div class='engOutPosInfo' id='engOutPosInfoAnalysis'>{0}{1}</div></div><div class='engine-info-text' id='engine-info-text-0'></div>", this.V2yy(), this.V2yz())
    }
    ;
    d.prototype.V2yz = function() {
        this.V2z0();
        return ""
    }
    ;
    d.prototype.V2z0 = function() {
        return !1
    }
    ;
    d.prototype.V2z1 = function() {
        return "Kings Queens Rooks Bishops Knights Pawns Attacks".split(" ")
    }
    ;
    d.prototype.V2yy = function() {
        var c = this.V2yu
          , f = "<div class='engOutPieceEvalsHori'>";
        f += "<div style='display:flex;flex-direction:row'>";
        var g = this.V2z1();
        CB.Vq.V37() && g.pop();
        g.forEach(function(h) {
            f += this.V2z2(h, c)
        }
        .bind(this));
        f += "</div>";
        f += "<div style='display:flex;flex-direction:row'>";
        f += "<div class='engOutHoriActivity'>" + this.V2z3() + "</div>";
        f += "<div class='engOutHoriComplexity'>" + this.V2z4() + "</div>";
        f += "</div>";
        return f += "</div>"
    }
    ;
    d.prototype.V2yw = function() {
        var c = this.V2yu
          , f = "<div class='engOutPieceEvalsVerti'>"
          , g = this.V2z1();
        g.pop();
        g.forEach(function(h) {
            f += this.V2z5(h, c)
        }
        .bind(this));
        f += "<div class='engOutVertiActivity'>" + this.V2z3() + "</div>";
        f += "<div class='engOutVertiComplexity'>" + this.V2z4() + "</div>";
        return f += "</div>"
    }
    ;
    d.prototype.V2z6 = function(c) {
        return String.f("<div class='engOutPosInfoTitle' style='font-size:{0}px;margin-bottom:{1}px'>{2}", .7 * c, .15 * c, "Position:") + "</div>"
    }
    ;
    d.prototype.V2z2 = function(c, f) {
        var g = String.f("<div class='engOutPieceEvalLineHori' id='id{0}'>", c);
        g += this.V2z7("w" + c, f);
        g += this.V2z7("b" + c, f);
        return g + "</div>"
    }
    ;
    d.prototype.V2z5 = function(c, f) {
        var g = String.f("<div class='engOutPieceEvalLineVerti' id='id{0}'>", c);
        g += this.V2z7("w" + c, f);
        g += this.V2z7("b" + c, f);
        return g + "</div>"
    }
    ;
    d.prototype.V2z7 = function(c, f) {
        var g = String.f("<div class='engOutPieceEval' id='id{0}'>", c);
        g += this.V2z8(c, f);
        g += String.f("<div class='engOutEvalDiods' id='id{0}Diods'>", c);
        g = g + "</div>" + String.f("<div class='engOutEvalTexts' id='id{0}Text'>", c);
        return g + "</div></div>"
    }
    ;
    d.prototype.V2z9 = function(c) {
        return String.f("style='width:{0}px;height:{0}px'", c)
    }
    ;
    d.prototype.V2za = function(c, f, g) {
        var h = Math.round(c / 9);
        return String.f("style='height:{0}px;width:{0}px;margin:{1}px;border-radius:{2}px;{3}'", c - 2 * h, h, f ? Math.round(c / 8) : Math.round(c / 3), g)
    }
    ;
    d.prototype.V2zb = function() {
        var c = $("#engOutPosInfo")
          , f = c.width()
          , g = c.height()
          , h = !this.V2yt && 170 > f;
        h && 650 < $(this.el).width() && (h = !1);
        h ? c.hide() : c.show();
        return {
            w: f,
            h: g
        }
    }
    ;
    d.prototype.resize = function() {
        var c = $(".engOutPosInfo");
        c.show();
        c = c.width();
        if (c != this.lastWidth) {
            this.V2yu = 16;
            260 < c && !this.V2z0() && 300 < $(this.el).height() && (this.V2yu = 24,
            600 < c && !this.V2yt && (this.V2yu = 32));
            for (var f = {
                $jscomp$loop$prop$c$212: 0
            }; 2 > f.$jscomp$loop$prop$c$212; f = {
                $jscomp$loop$prop$c$212: f.$jscomp$loop$prop$c$212
            },
            f.$jscomp$loop$prop$c$212++)
                this.V2z1().forEach(function(m) {
                    return function(n) {
                        var p = ["w", "b"][m.$jscomp$loop$prop$c$212] + n;
                        n = $("#id" + p).find("img");
                        p = this.V2zc(p, this.V2yu);
                        n.attr("src", p)
                    }
                }(f).bind(this));
            f = $(".engOutEvalIcon");
            f.css("width", this.V2yu + "px");
            f.css("height", this.V2yu + "px");
            f = Math.round(this.V2yu / 9);
            var g = this.V2yu - 2 * f
              , h = Math.round(this.V2yu / 3)
              , k = $(".engOutEvalDiodInner");
            k.css("width", g + "px");
            k.css("height", g + "px");
            k.css("margin", f + "px");
            k.css("border-radius", h + "px");
            if (this.V2yt)
                [".engOutPieceEval", ".engOutActivitySteps"].forEach(function(m) {
                    $(m).css("margin-right", .5 * this.V2yu + "px");
                    $(m).css("min-width", "0")
                }
                .bind(this));
            else {
                var l = Math.max(3.3 * this.V2yu, .45 * c);
                [".engOutPieceEval", ".engOutActivitySteps"].forEach(function(m) {
                    $(m).css("min-width", l + "px");
                    $(m).css("margin-right", "3px")
                })
            }
            f = $("#idComplexityLine").find("img");
            g = this.V2zc("Complexity", 16);
            f.attr("src", g);
            f = $("#idActivityW").find("img");
            g = this.V2zc("wActivity", 16);
            f.attr("src", g);
            f = $("#idActivityB").find("img");
            g = this.V2zc("bActivity", 16);
            f.attr("src", g)
        }
        this.lastWidth = c;
        this.V2zb()
    }
    ;
    d.prototype.V2zc = function(c, f) {
        return CB.V10z() + "Media/Chess/Icons/" + c + f + ".png"
    }
    ;
    d.prototype.V2z8 = function(c, f) {
        return String.f("<div class='engOutEvalIcon' {0}><img src='{1}'/></div>", this.V2z9(f), this.V2zc(c, f))
    }
    ;
    d.prototype.V2zd = function(c, f, g, h, k, l) {
        l = l ? "engOutBlinkDiod" : "";
        c = String.f("<div class='engOutEvalDiod', id='{0}'>", c);
        c += String.f("<div class='engOutEvalDiodInner {0}' {1} title='{2}'></div>", l, this.V2za(f, k, g), h);
        return c + "</div>"
    }
    ;
    d.prototype.V2ze = function(c, f) {
        return String.f("<div class='engOutEvalButton'><button id='{0}'></button></div>", "id" + c)
    }
    ;
    d.prototype.V2z4 = function() {
        var c = String.f("<div class='engOutComplexity' id='idComplexityLine'>");
        c += String.f("<div class='engOutComplexitySteps' id='idComplexity'>");
        return c + "</div></div>"
    }
    ;
    d.prototype.V2zf = function(c) {
        return this.V2zg("Complexity", "Sharpness/Complexity", c)
    }
    ;
    d.prototype.V2z3 = function() {
        return "<div class='engOutActivity' id='idActivityLine'><div class='engOutActivitySteps' id='idActivityW'></div><div class='engOutActivitySteps' id='idActivityB'></div></div>"
    }
    ;
    d.prototype.V2zh = function(c, f) {
        return this.V2zg(f + "Activity", "Control/Activity", c)
    }
    ;
    d.prototype.V2zg = function(c, f, g) {
        c = CB.V10z() + String.f("Media/Chess/Icons/{0}", c) + g + ".png";
        return String.f("<div class='engOutEvalIcon' {0}><img src='{1}' style='width:100%;height:100%'/ title='{2}'></div>", this.V2z9(g), c, f)
    }
    ;
    d.prototype.V2zi = function(c) {
        return String.f("<div class='line'><div class='nota'><div class='pvnum'></div><div class='symbol'></div><div class='{0}'></div></div><div class='data'></div><div class='evStr'></div></div>", c || "pv")
    }
    ;
    d.prototype.V2sw = function(c, f) {
        this.options = ObjUtil.copyTo(d.defaultOptions, f || {}, !0);
        if (f = V3ir.V3i2.load("engOutOptions"))
            f = JSON.parse(f),
            ObjUtil.copyTo(f, this.options);
        this.el = c;
        this.V2zj(!0);
        this.V2zk()
    }
    ;
    d.prototype.V2zl = function(c) {
        var f = $(this.el);
        c = c();
        f.html(c);
        f = CB.$(".engOutVariation", this.el);
        this.V2zm = f.single();
        this.V2zn = CB.$(".engOutContainer", this.el).single();
        f.on("click", this.V2zo.bind(this));
        $("#engOutBtnPlus").click(this.V2zp.bind(this));
        $("#engOutBtnMinus").click(this.V2zq.bind(this));
        $("#engine-info-text-0").html(this.options.loadingTitle || "<br/>" + lm.LOADING_ENGINE);
        this.V2sz = this.V2zn;
        this.V2yq && $(".engOutFeedback").hide()
    }
    ;
    d.prototype.V2zr = function() {
        var c = 18;
        600 > window.innerHeight && (c = 16);
        var f = this.options.autoHints;
        V3ir.panelMgr.studyMode && (f = !1);
        $("#engOutHintCheck").jqxCheckBox({
            width: 150,
            height: c,
            checked: f,
            theme: V3ir.config.jqxTheme
        });
        $("#engOutHintCheck").on("change", this.V2zs.bind(this));
        $("#engOutAssistCheck").jqxCheckBox({
            width: 150,
            height: c,
            checked: this.options.clickAssist,
            theme: V3ir.config.jqxTheme
        });
        $("#engOutAssistCheck").on("change", this.V2zt.bind(this));
        c = V3ir.config.getRibbonPath() + "CoachHint24.png";
        $("#engOutNextHint").jqxButton({
            width: 150,
            height: 30,
            theme: V3ir.config.jqxTheme,
            textImageRelation: "imageBeforeText",
            imgPosition: "left",
            textPosition: "center",
            imgSrc: c
        });
        $("#engOutNextHint").on("click", this.V2zu.bind(this))
    }
    ;
    d.prototype.destroy = function() {
        var c = {
            autoHints: this.V2zv(),
            clickAssist: this.V2zw()
        };
        V3ir.V3i2.save("engOutOptions", JSON.stringify(c))
    }
    ;
    d.prototype.V2yr = function() {
        this.lastDepth = this.V14e = this.lastTime = this.V2zy = this.V2zx = null
    }
    ;
    d.prototype.setEngine = function(c) {
        if (this.engine) {
            var f = this.engine;
            f.engine && (f = f.engine);
            this.idOnLine && (f.removeOnLineListener(this.idOnLine),
            f.removeOnLosingLineListener(this.V2zz),
            f.removeOnInfoListener(this.V300),
            f.removeOnNewGameListener(this.V301),
            f.removeOnSearchStartListener(this.V302),
            f.removeOnExitListener(this.V303),
            f.removeOnStopListener(this.V304),
            f.removeOnThreatListener(this.V305),
            f.removeOnBeautyScoreListener(this.V306),
            f.removeOnBookMoveListener(this.V307),
            f.removeOnStrongMoveListener(this.V308),
            f.removeOnEvalListener(this.V309),
            f.removeOnHintsListener(this.V30a),
            f.removeOnBestMoveListener(this.idOnBestMove),
            f.removeOnMoveFeedbackListener(this.V30b),
            f.removeOnStaticEvalListener(this.V30c))
        }
        if (this.engine = c)
            c = this.engine,
            c.engine && !c.addOnLosingLineListener && (c = c.engine),
            c && c.addOnLineListener && (this.idOnLine = c.addOnLineListener(this.V30d.bind(this)),
            this.V2zz = c.addOnLosingLineListener(this.V30e.bind(this)),
            this.V300 = c.addOnInfoListener(this.V30f.bind(this)),
            this.V301 = c.addOnNewGameListener(this.onNewGame.bind(this)),
            this.V302 = c.addOnSearchStartListener(this.V30g.bind(this)),
            this.V303 = c.addOnExitListener(this.onExit.bind(this)),
            this.V304 = c.addOnStopListener(this.V30h.bind(this)),
            this.V305 = c.addOnThreatListener(this.V2yc.bind(this)),
            this.V306 = c.addOnBeautyScoreListener(this.V30i.bind(this)),
            this.V307 = c.addOnBookMoveListener(this.V30j.bind(this)),
            this.V308 = c.addOnStrongMoveListener(this.V30k.bind(this)),
            this.V309 = c.addOnEvalListener(this.onEval.bind(this)),
            this.V30a = c.addOnHintsListener(this.V30l.bind(this)),
            this.idOnBestMove = c.addOnBestMoveListener(this.V1rp.bind(this)),
            this.V30b = c.addOnMoveFeedbackListener(this.V30m.bind(this)),
            this.V30c = c.addOnStaticEvalListener(this.V30n.bind(this)));
        V3ir.analysisEngine && !this.V30o && (this.V30o = V3ir.analysisEngine.addOnStaticEvalListener(this.V30n.bind(this)))
    }
    ;
    d.prototype.V2zo = function(c) {
        c.preventDefault();
        var f = c.target;
        c = CB.$(f);
        CB.$.is(f, ".line") || (f = c.parent(".line"));
        f && (c = CB.$(f).data("mv"),
        CB.V17g.isValidString(c) && (c = CB.V17g.fromString(c),
        this.fireOnMoveEntered(c)))
    }
    ;
    d.prototype.V2zp = function(c) {
        c.preventDefault();
        V3ir.commands.commandHandler(CB.V1ge.ENGINE_PLUS_LINE)
    }
    ;
    d.prototype.V2zq = function(c) {
        c.preventDefault();
        V3ir.commands.commandHandler(CB.V1ge.ENGINE_MINUS_LINE)
    }
    ;
    d.prototype.V2zs = function(c) {
        c.preventDefault();
        this.V2zv() ? (this.V30p(),
        this.V30q && this.V30l(this.V30q),
        V3ir.updateRatedGame && V3ir.updateRatedGame(999)) : (this.V30r({}),
        this.V30s(lm.GIVE_HINT))
    }
    ;
    d.prototype.V2zv = function() {
        if ($("#engOutHintCheck").length)
            return $("#engOutHintCheck").jqxCheckBox("checked")
    }
    ;
    d.prototype.V2zt = function(c) {
        c.preventDefault();
        V3ir.panelMgr.fireOnClickAssist(this.V2zw())
    }
    ;
    d.prototype.V2zu = function(c) {
        c.preventDefault();
        V3ir.panelMgr.fireOnNextHint()
    }
    ;
    d.prototype.V2zw = function() {
        if ($("#engOutAssistCheck").length)
            return $("#engOutAssistCheck").jqxCheckBox("checked")
    }
    ;
    d.prototype.V30l = function(c) {
        if (c.hints.length) {
            var f = null;
            this.V30t || (V3ir.panelMgr.fireOnClickAssist(this.options.clickAssist),
            this.V30t = !0);
            this.V2zv() || (c.hints[c.index].equals(this.V30u) || this.V30v(lm.CLICK_HINT_BUTTON, "engOutHintStatus"),
            this.V30s(lm.GIVE_HINT));
            this.hintMeter = c.hintMeter;
            this.V30w();
            this.V2zv() || c.force ? (this.V30x() && (this.V30y(lm.CALCULATING_HINT),
            this.V30z(CB.Evaluation.V1oa())),
            this.V310(c),
            this.V30u = c.hints[c.index],
            V3ir.checkHintsLoginLimit() ? c.force || !this.V30u.isFullMove() ? (CB.Hints.V1ux(c.hintMove, c.pos, this.V30u, V3ir.panelMgr.getBoardUI(), function(g) {
                var h = "engOutOneHint";
                glSettings.isBlueBoard() && (h += " engHintBlue");
                this.V30v(g, h)
            }
            .bind(this)),
            f = {
                displayed: !0
            }) : f = {
                displayed: !1
            } : (c.force && V3ir.panelMgr.showHintsLimitExceeded(),
            V3ir.hintMeter && V3ir.hintMeter.showHintsLimit() && this.V30v(V3ir.getStrHintsLimitExceeded(), "engOutOneHint")),
            1 < c.hints.length ? this.V30s(lm.NEXT_HINT) : this.V311()) : this.V30u && this.V30u.type != c.hints[c.index].type && this.V312();
            this.V30q = c;
            return f
        }
    }
    ;
    d.prototype.V310 = function(c) {
        var f = this;
        this.strong && c.hints.forEach(function(g) {
            return g.strong = f.strong
        })
    }
    ;
    d.prototype.clear = function(c) {
        this.clearLines();
        this.strong = this.V30q = null;
        this.V30r(c)
    }
    ;
    d.prototype.clearLines = function() {
        $(this.V2zm).find(".line").remove();
        $(this.V2zm).find(".engOutVariation").empty();
        $(this.V2zm).find(".engOutSearchInfo").empty()
    }
    ;
    d.prototype.onNewGame = function(c) {
        this.V2ys.block(!1);
        this.clear({
            str: lm.NEW_GAME
        });
        this.hintMeter = new HintMeter;
        this.V30x();
        this.V313();
        this.V30y(lm.LEVEL + "=" + CB.V1kt.V1sp(c));
        this.V2zj();
        this.V30w()
    }
    ;
    d.prototype.V314 = function(c, f) {
        this.clear();
        this.V2zk();
        this.V315(c, f)
    }
    ;
    d.prototype.V30g = function(c) {
        this.clear(c);
        this.V30x();
        this.V316("---");
        !V3ir.panelMgr.studyMode && c && (c.analysis || c.infinite) ? (this.V317(),
        this.V30y(String.f("{1} ({0} {2}) ...", c.nMultiPV || 1, lm.START_ANALYSIS, lm.VARIATIONS), "pvHandicap"),
        this.V30n({})) : (c && null != c.strSide ? this.V30y(String.f(lm.CALCULATING_FOR, c.strSide), "pvHandicap") : this.V30y(lm.CALCULATING, "pvHandicap"),
        this.V2zj(),
        this.V30z(CB.Evaluation.V1o8()),
        this.V313());
        this.V30u = null
    }
    ;
    d.prototype.V1rp = function(c, f) {
        this.V30r({})
    }
    ;
    d.prototype.V30m = function(c) {
        var f = ""
          , g = "";
        c.str && (f = c.str,
        g = "engOutMoveOk",
        c.blunder() && (g = "engOutMoveBlunder"));
        f && this.V318(f, g, 500)
    }
    ;
    d.prototype.V30n = function(c) {
        this.resize();
        this.V319(c);
        this.V31a(c)
    }
    ;
    d.prototype.V319 = function(c) {
        this.V2z1().forEach(function(h) {
            var k = c[h];
            if (k) {
                for (var l = !0, m = 0; 2 > m; m++)
                    try {
                        var n = k;
                        k.length && (n = k[m]);
                        var p = this.V31b(n, h, m, this.V2yu)
                          , q = this.V31c(n, h, m, this.V2yu);
                        n = m ? "b" : "w";
                        n += h;
                        $(String.f("#id{0}Diods", n)).html(p);
                        this.V2z0() && $(String.f("#id{0}Text", n)).html(q);
                        if (!k.length)
                            break;
                        p.length && (l = !1)
                    } catch (t) {}
                $(String.f("#id{0}", h)).css("display", l ? "none" : "flex")
            }
        }
        .bind(this));
        if (c.Complexity) {
            var f = this.V31d(c.Complexity, 16);
            $("#idComplexity").html(f)
        }
        if (c.Activity) {
            var g = Math.min(16, this.V2yu);
            f = this.V31e(c.Activity[0], g, "w");
            g = this.V31e(c.Activity[1], g, "b");
            $("#idActivityW").html(f);
            $("#idActivityB").html(g)
        }
    }
    ;
    d.prototype.V31b = function(c, f, g, h) {
        for (var k = c.getNVals(), l = "", m = 0; m < k; m++) {
            var n = String.f("{0}{1}{2}", g ? "b" : "w", f, m)
              , p = c.getDiodGradient(m)
              , q = "";
            c.getDiodTip && (q = c.getDiodTip(m));
            l += this.V2zd(n, h, p, q, c.squareDiod, c.getDiodBlinks(m))
        }
        return l
    }
    ;
    d.prototype.V31d = function(c, f) {
        for (var g = c.getNIcons(), h = "", k = 0; k <= g; k++)
            h += this.V2zf(f);
        h += String.f("<div class='engOutComplexityText'>{0}</div>", c.text());
        this.V2z0() && (h += String.f("<div style='padding-left:5px'>{0}</div>", c.scalarVal));
        return h
    }
    ;
    d.prototype.V31e = function(c, f, g) {
        for (var h = c.getNIcons(), k = "", l = 0; l <= h; l++)
            k += this.V2zh(f, g);
        this.V2z0() && (k += String.f("<div style='padding-left:2px';font-size='7px'>{0}</div>", c.val));
        return k
    }
    ;
    d.prototype.V31c = function(c) {
        for (var f = c.getNVals(), g = "", h = 0; h < f; h++)
            g += String.f("<div>{0}{1}</div>", c.getDiodText(h), h < f - 1 ? ", " : "");
        return g
    }
    ;
    d.prototype.getDiodGradient = function(c) {
        return String.f("background-image: radial-gradient( hsl( {0}, 60%, 70% ), hsl( {0}, 60%, 50% ) )", c)
    }
    ;
    d.prototype.V31a = function(c) {
        "Kings Pawns Knights Bishops Rooks Queens Passed Attacks Complexity Activity".split(" ").forEach(function(f) {
            var g = "";
            if (c[f]) {
                g = c[f];
                for (var h = "", k = 0; 2 > k; k++)
                    try {
                        var l = g;
                        g.length ? (l = g[k],
                        h += String.f("<div style='width:50%'><span style='font-weight:bold'>{0}</span>&nbsp;<span style='font-style:italic'>{1}</span></div>", l.str(), l.dbg()),
                        h += "&nbsp;&nbsp;") : h += String.f("<div><span style='font-weight:bold'>{0}</span>&nbsp;<span style='font-style:italic'>{1}</span></div>", l.str(), l.dbg());
                        if (!g.length)
                            break
                    } catch (m) {}
                g = h
            }
            $(String.f("#engOut{0}", f)).html(g)
        });
        c.test && this.V31f(c.test);
        c.colors && this.V31g(c.colors)
    }
    ;
    d.prototype.V31f = function(c) {}
    ;
    d.prototype.V31g = function(c) {}
    ;
    d.prototype.V313 = function() {}
    ;
    d.prototype.V30w = function() {
        if (2 < this.hintMeter.getMoveCount()) {
            if (!V3ir.panelMgr.studyMode) {
                var c = V3ir.updateRatedGame(this.hintMeter) ? lm.THIS_RATED_GAME : lm.THIS_UNRATED_GAME;
                c = String.f(" {0} <div class='engOutHintShareTxt'>{1}</div>   ({2})", lm.HINT_SUPPORT, this.hintMeter.getSupportText(), c);
                this.V31h(c)
            }
            c = this.hintMeter.getHelpPercent();
            1 > c || 98 < c ? $(".engOutHelpMeter").hide() : $(".engOutHelpMeter").show();
            $(".engOutHelpShare").css("width", String.f("{0}%", c));
            $(".engOutUserShare").css("width", String.f("{0}%", 100 - c));
            40 < $(".engOutHelpShareText").width() ? $(".engOutHelpShareText").text(lm.HINTS) : $(".engOutHelpShareText").text("");
            40 < $(".engOutUserShareText").width() ? $(".engOutUserShareText").text(V3ir.V3i2.userName || lm.GUEST) : $(".engOutUserShareText").text("");
            300 < $("#engOutContainer").height() ? ($(".engOutHintCnt").show(),
            $(".engOutHintCnt").html(this.V31i())) : $(".engOutHintCnt").hide()
        } else
            this.V31h(""),
            $(".engOutHelpMeter").hide()
    }
    ;
    d.prototype.V31j = function() {
        return String.f(" {0} {1} ", lm.HINT_SUPPORT, this.hintMeter.getSupportText())
    }
    ;
    d.prototype.V31i = function() {
        return String.f("{0} = {1}. {2} = {3}.    ({4})", lm.HINTS, this.hintMeter.getTotalHints(), lm.LIMIT, V3ir.getHintsLimit(), V3ir.getHintLimitInfoHtml())
    }
    ;
    d.prototype.onExit = function(c) {
        this.clear();
        this.V30y(lm.ENGINE_STOPPED, "engineStopped")
    }
    ;
    d.prototype.V30h = function(c) {
        c && (this.clear(),
        this.V2zj(),
        this.V30y(lm.ANALYSIS_STOPPED),
        this.V30z(CB.Evaluation.V1o9()));
        this.V316("---")
    }
    ;
    d.prototype.V2yc = function(c) {
        c ? $(".engOutVariation").addClass("cbEngineThreat") : $(".engOutVariation").removeClass("cbEngineThreat")
    }
    ;
    d.prototype.V30i = function(c, f) {
        this.V1sy = c;
        f && V3ir.updateRatedGame(f);
        this.V313();
        this.V30w()
    }
    ;
    d.prototype.V30j = function(c, f, g) {
        this.V2zj();
        this.V30x();
        c = CB.V1kt.V1sp(f);
        f = String.f("{1} ({0})", c, lm.BOOK_MOVE);
        g && (f = String.f("{1} ({0})", c, lm.LIVEBOOK_MOVE));
        this.V30y(f);
        c = lm.THEORY;
        g && (c = String.f("LiveBook, N={0}", g));
        this.V316(c);
        this.V30z(CB.Evaluation.V1o7());
        this.V30r({})
    }
    ;
    d.prototype.V30k = function(c) {
        this.strong = c;
        c.sac ? (this.V30v(lm.YOU_HAVE_STRONG_MOVE, "engOutHintStrong"),
        this.V30z(CB.Evaluation.V1ob())) : c.precise ? (c.elseLoses ? this.V30v(lm.CAREFUL_ONLY_MOVE, "engOutHintPrecise") : c.trivial ? this.V30v(lm.YOU_HAVE_ONLY_MOVE, "engOutHintPrecise") : this.V30v(lm.YOU_HAVE_PRECISE_MOVE, "engOutHintPrecise"),
        this.V30z(CB.Evaluation.V1ob())) : c.cancel && (this.V30z(CB.Evaluation.V1o8()),
        this.V30p(),
        this.strong = null)
    }
    ;
    d.prototype.V30f = function(c, f, g, h, k, l) {
        this.V2zx = k || this.V2zx;
        this.V2zy = h || this.V2zy;
        this.lastTime = l || this.lastTime
    }
    ;
    d.prototype.V30d = function(c, f, g, h, k, l, m, n, p) {
        this.V30x();
        this.V31k();
        if (h === CB.V1l3.V1l4 || k) {
            h = c.getMultiPV();
            CB.$(this.V2zm).data("lines", h);
            h = 1 < h;
            c = c.getCurPos();
            var q = c.toFEN();
            $(this.V2zm).data("pos", q);
            (this.V14e && !c.equals(this.V14e) || this.lastDepth && this.lastDepth > f) && this.clearLines();
            h || this.options.scrollLines || this.clearLines();
            h && 1 == m && CB.$(".line", this.V2zm).addClass("outdated");
            this.V14e = c;
            this.lastDepth = f;
            CB.Game.V1cg(c, n);
            var t = new CB.V1cw(lm.NOTA_LOCALIZATION);
            p.analysis || (n = n.slice(0, 1));
            q = t.V1ds(c, n);
            var v = l;
            k ? (0 > v && (v = -v),
            v = t.V1dr().strMate + v) : (c.isWTM() || (v = -v),
            v = (v / 100).toFixed(2));
            q = p.analysis ? "(" + v + ") " + q : " " + q;
            g = {
                id: "pv",
                line: n,
                pv: n,
                eval: l,
                evalStr: CB.Evaluation && !k ? CB.Evaluation.V1o1(100 * v) + "." : "",
                nps: this.V2zx,
                depth: f,
                maxDepth: g,
                totalTime: this.lastTime,
                handicap: p.handicapStyle,
                analysis: p.analysis,
                num: m
            };
            g.pv.lineStr = q;
            k && (l = 0 > l ? -Number.MAX_VALUE : Number.MAX_VALUE);
            k = l;
            c.isBTM() && (k = -k);
            k = CB.V1mt.getGlyph(k);
            k = V3ib.getText(k);
            g.symbol = k;
            this.V31l(g);
            this.V31m(g, h, f);
            h || this.V31n();
            CB.Vq.Vr() && "undefined" !== typeof electronBridge && electronBridge.updateTouchBarInfo(g.evalStr)
        }
    }
    ;
    d.prototype.onEval = function(c, f) {}
    ;
    d.prototype.V30e = function(c, f) {
        this.V31o()
    }
    ;
    d.prototype.V31n = function() {
        this.V2sz && (this.V2sz.scrollTop = this.V2sz.scrollHeight)
    }
    ;
    d.prototype.V31p = function(c, f, g) {
        if (CB.$(".pv", c)) {
            c.on("dragstart", b);
            CB.$(".pv", c).text(f.pv.lineStr);
            CB.$(".pvnum", c).text(f.num);
            f.analysis || g || CB.Vq.V37() || CB.Vq.V8x() || this.V30z(CB.Evaluation.V1o4());
            f.evalStr && (this.V316(f.evalStr),
            g || CB.Vq.V8x() || !f.handicap || this.V30z(CB.Evaluation.V1o2(f.eval)));
            f.handicap || (g = new StringBuilder,
            CB.NotaElement.V2ub(f.symbol, g, "cbspec-glyph"),
            g = g.toString(),
            CB.$(".symbol", c).html(g));
            c.data("pvnum", f.num);
            c.data("depth", f.depth);
            c.data("mv", f.pv[0].toString());
            var h = new StringBuilder;
            f.handicap ? h.appendFormat(String.f(lm.CALCULATES_MOVE, f.pv[0])) : f.pv.forEach(function(k) {
                h.appendFormat("{0} ", k)
            });
            c.data("pv", h.toString());
            c.removeClass("outdated");
            this.V31k()
        }
    }
    ;
    d.prototype.V316 = function(c) {
        $(".engOutEvalText").text(c)
    }
    ;
    d.prototype.V31o = function() {
        $("#engine-info-text-" + this.nInPage).show()
    }
    ;
    d.prototype.V31k = function() {
        var c = $("#engine-info-text-" + this.nInPage).is(":visible");
        $("#engine-info-text-" + this.nInPage).hide();
        return c
    }
    ;
    d.prototype.V31q = function() {
        $(".engOutContainer").show();
        this.V2yt ? $(".engOutContainer").css("display", "block") : $(".engOutContainer").css("display", "flex")
    }
    ;
    d.prototype.V31r = function() {
        $(".engOutContainer").hide()
    }
    ;
    d.prototype.V30x = function() {
        var c = this.V31k();
        this.V31q();
        return c
    }
    ;
    d.prototype.V2zk = function() {
        this.V31o();
        this.V31r()
    }
    ;
    d.prototype.V317 = function() {
        this.V2yt || (this.V2zl(function() {
            return this.V2yx(this.nInPage)
        }
        .bind(this)),
        this.V31s(),
        this.V2yt = !0)
    }
    ;
    d.prototype.V2zj = function(c) {
        if (this.V2yt || c)
            this.V2zl(function() {
                return this.V2yv(this.nInPage)
            }
            .bind(this)),
            this.V31t(),
            this.V2yt = !1,
            this.V2zr()
    }
    ;
    d.prototype.V31s = function() {
        $(".engOutLineRight").show()
    }
    ;
    d.prototype.V31t = function() {
        $(".engOutLineRight").hide()
    }
    ;
    d.prototype.V311 = function() {
        $(".engOutNextHint").hide()
    }
    ;
    d.prototype.V30s = function(c) {
        300 < $("#engOutContainer").height() && !CB.Vq.V11o() && ($(".engOutNextHint").removeClass("engOutShaker"),
        $(".engOutNextHint").show())
    }
    ;
    d.prototype.V312 = function() {
        $(".engOutNextHint").removeClass("engOutShaker");
        $(".engOutNextHint").addClass("engOutShaker")
    }
    ;
    d.prototype.V315 = function(c, f) {
        CB.$("#engine-info-text-" + this.nInPage).text(c);
        CB.$("#engine-info-text-" + this.nInPage).removeClass("findStrong");
        f && CB.$("#engine-info-text-" + this.nInPage).addClass(f);
        CB.Vq.Vr() && "undefined" !== typeof electronBridge && electronBridge.updateTouchBarInfo(c)
    }
    ;
    d.prototype.V30y = function(c, f) {
        var g = "engOutVariationText";
        f && (g += " " + f);
        $(".engOutVariation").html(String.f("<div class='{1}'>{0}</div>", c, g))
    }
    ;
    d.prototype.V31h = function(c, f) {
        var g = "engOutVariationText";
        f && (g += " " + f);
        $(".engOutFeedback").html(String.f("<div class='{1}'>{0}</div>", c, g))
    }
    ;
    d.prototype.setHint = function(c, f) {
        this.V30x();
        this.V30v(c, f)
    }
    ;
    d.prototype.V30v = function(c, f) {
        var g = "engOutHintText";
        f && (g += " " + f);
        this.V2ys.exec(function() {
            $(".engOutHintInner").html(String.f("<div class='{1}'>{0}</div>", c, g))
        })
    }
    ;
    d.prototype.V318 = function(c, f, g) {
        this.V30v(c, f);
        this.V2ys.block(!0, g)
    }
    ;
    d.prototype.V30p = function() {
        $(".engOutHintInner").html("");
        this.V30r({})
    }
    ;
    d.prototype.V30r = function(c) {
        var f = 3;
        c && (c.infinite ? f = 2 : c.engineToMove && (f = 1));
        c && c.str ? (this.V30v(c.str, "engOutHintStatus"),
        this.V311()) : 1 == f ? (this.V30v(lm.FRITZ_TO_MOVE, "engOutHintStatus"),
        this.V311()) : 2 == f ? (this.V2ys.block(!1),
        this.V30v(lm.ANALYSIS, "engOutHintStatus")) : (this.V2ys.block(!1),
        this.V30v(lm.CALCULATING_HINT + "...", "engOutHintStatus"))
    }
    ;
    d.prototype.V31u = function(c, f) {
        $(".engOutHelpShare").css("width", String.f("{0}%", f))
    }
    ;
    d.prototype.V30z = function(c) {
        c = String.f("<img src='{0}'/>", c);
        $(".engOutEvalImg").html(c)
    }
    ;
    d.prototype.V31l = function(c) {
        $(".engOutSearchInfo").text(e(c))
    }
    ;
    d.prototype.V31m = function(c, f) {
        f ? (f = String.formatEx(".line[data-pvnum='{0}']", c.num),
        f = CB.$(f),
        0 == f.length && (1 == c.num && $(".engOutVariation").empty(),
        f = CB.$(this.V2zi("pv")),
        $(".engOutVariation").append(f)),
        this.V31p(f, c, !0)) : (f = "pv",
        c.handicap && (f += " pvHandicap"),
        f = CB.$(this.V2zi(f), this.V2zm),
        this.V31p(f, c, !1),
        $(".engOutVariation").empty(),
        $(".engOutVariation").append(f))
    }
    ;
    V3i1.initForListeners(d);
    V3i1.addEvent(d, "MoveEntered");
    return d
}();
"use strict";
CB.V31v = CB.V31v || {};
CB.V31v.V31w = function(e, b, d) {
    var c = null;
    e = null;
    e = $("<div id='engineDiv'></div>");
    $(d).append(e);
    e.clear = function() {
        c.clear()
    }
    ;
    e.engine = null;
    e.onPlus = function() {
        V3ir.commands.commandHandler(CB.V1ge.ENGINE_PLUS_LINE)
    }
    ;
    e.onMinus = function() {
        V3ir.commands.commandHandler(CB.V1ge.ENGINE_MINUS_LINE)
    }
    ;
    e.onUCIInfo = function(f) {
        700 > window.innerHeight || !this.header || (f = f.getName(),
        "Fritz 14" == f ? this.header.setTitle("Fritz Engine") : this.header.setTitle(f))
    }
    ;
    e._analysis = !0;
    e.isAnalysis = function() {
        return this._analysis
    }
    ;
    e.setAnalysis = function(f) {
        f != this._analysis && ((this._analysis = f) ? $("#EngineToolBar").show() : $("#EngineToolBar").hide())
    }
    ;
    e.setEngine = function(f) {
        this.engine = f;
        c && c.setEngine(f)
    }
    ;
    e.stopEngine = function() {
        this.engine && this.engine.stop()
    }
    ;
    e.onMoveEntered = function(f) {
        this.fireOnMoveEntered(f)
    }
    ;
    c = new CB.EngineLinesElement;
    c.V2sw($(e)[0], b);
    V3i1.initInstForListeners(e);
    V3i1.addInstEvent(e, "MoveEntered");
    e.engLinesEl = c;
    return e
}
;
"use strict";
CB.V31x = function() {
    var e = function() {};
    e.prototype.V31y = function() {}
    ;
    e.prototype.V31z = function(b, d) {}
    ;
    return e
}();
"use strict";
CB.V320 = function() {
    var e = function(b) {
        glCubeMap = this;
        glCubeMap.threeCmp = b
    };
    e.prototype.destroy = function() {}
    ;
    e.prototype.V321 = function(b) {
        glCubeMap.callbackFn = b;
        b = glSettings.pieceFontName3D;
        void 0 === b && (b = "Fritz");
        b = [V3ir.mediaPath + "3d/" + b + "/nx.jpg", V3ir.mediaPath + "3d/" + b + "/ny.jpg", V3ir.mediaPath + "3d/" + b + "/nz.jpg", V3ir.mediaPath + "3d/" + b + "/pz.jpg", V3ir.mediaPath + "3d/" + b + "/py.jpg", V3ir.mediaPath + "3d/" + b + "/pz.jpg"];
        this.cubemap = (new THREE.CubeTextureLoader).load(b);
        glCubeMap.cubemap.format = THREE.RGBFormat;
        b = THREE.ShaderLib.cube;
        b.uniforms.tCube.value = glCubeMap.cubemap;
        this.V322 = new THREE.ShaderMaterial({
            fragmentShader: b.fragmentShader,
            vertexShader: b.vertexShader,
            uniforms: b.uniforms,
            depthWrite: !1,
            side: THREE.BackSide
        });
        this.geo = new THREE.CubeGeometry(5E3,5E3,5E3);
        this.V323 = new THREE.Mesh(this.geo,this.V322);
        glCubeMap.threeCmp.removeThreeObject("sky");
        glCubeMap.callbackFn.addCubeMap(glCubeMap.callbackFn, glCubeMap, glCubeMap.cubemap)
    }
    ;
    e.prototype.dispose = function() {
        glCubeMap.threeCmp.removeThreeObject("sky", this.V323);
        this.geo.dispose();
        this.V322.dispose();
        this.cubemap.dispose()
    }
    ;
    e.prototype.update = function(b, d) {}
    ;
    return e
}();
var glCubeMap;
CB.Piece3D = function() {
    var e = function(c) {
        this.V324 = c
    };
    CB.inherit(e, CB.V31x);
    var b = function(c, f, g) {
        if (0 < c.children.length)
            for (var h = 0; h < c.children.length; h++)
                b(c.children[h], f, g + 1);
        else
            f = 0 == g % 2 ? new THREE.MeshPhongMaterial({
                specular: "#a9fcff",
                color: 11184810,
                emissive: "#006063",
                shininess: 100,
                reflectivity: 5,
                vertexColors: THREE.VertexColors
            }) : new THREE.MeshPhongMaterial({
                specular: "#101010",
                color: f,
                emissive: "#202023",
                shininess: 1,
                reflectivity: .15,
                vertexColors: THREE.VertexColors
            }),
            c.material = f
    }
      , d = function(c, f) {
        if (0 < c.children.length)
            for (var g = 0; g < c.children.length; g++)
                d(c.children[g], f);
        else
            f = 1 == f ? new THREE.MeshPhongMaterial({
                specular: "#ffffff",
                color: "#a0a0a0",
                emissive: "#777777",
                shininess: 20,
                reflectivity: 10,
                vertexColors: THREE.VertexColors
            }) : new THREE.MeshPhongMaterial({
                specular: "#ffffff",
                color: "#000000",
                emissive: "#000000",
                shininess: 20,
                reflectivity: 100,
                vertexColors: THREE.VertexColors
            }),
            c.material = f
    };
    e.prototype.create = function(c, f) {
        var g = new THREE.AssimpJSONLoader
          , h = "wpawn";
        switch (this.V324) {
        case 1:
            h = "wking";
            break;
        case 2:
            h = "wqueen";
            break;
        case 3:
            h = "wknight";
            break;
        case 4:
            h = "wbishop";
            break;
        case 5:
            h = "wrook";
            break;
        case 6:
            h = "wpawn";
            break;
        case 9:
            h = "bking";
            break;
        case 10:
            h = "bqueen";
            break;
        case 11:
            h = "bknight";
            break;
        case 12:
            h = "bbishop";
            break;
        case 13:
            h = "brook";
            break;
        case 14:
            h = "bpawn";
            break;
        default:
            h = ""
        }
        var k = glSettings.pieceFontName3D;
        void 0 === k && (k = "Fritz");
        g.load(V3ir.mediaPath + "3d/" + k + "/" + h + ".json", function(l) {
            "BlackWhite" == k ? ("w" == h[0] ? d(l, 1) : d(l, 0),
            l.position.y += 200,
            l.updateMatrix()) : "Future" == k ? "w" == h[0] ? b(l, 13421772, 0) : b(l, 32, 0) : "Metal" == k ? l.rotation.y = -Math.PI / 2 : "Balloon" == k ? ("bknight" == h ? l.rotation.y = 1.6 * Math.PI : "wknight" == h && (l.rotation.y = 1.3 * -Math.PI),
            l.updateMatrix()) : "Future" == k ? l.rotation.y = Math.PI : "Modern" == k ? l.rotation.y = Math.PI / 2 : "Fritz" == k ? l.rotation.y = -Math.PI : "Room" == k ? l.rotation.y = -Math.PI : "Character" == k && (l.rotation.y = Math.PI / 2,
            "bknight" == h && (l.rotation.y = Math.PI / 2 + Math.PI));
            l.key = f;
            l.name = "test" + f;
            c.addPiece(l)
        })
    }
    ;
    return e
}();
"use strict";
CB.Object3D = function() {
    var e = function(b) {
        this.strName = b
    };
    CB.inherit(e, CB.V31x);
    e.prototype.create = function(b, d) {
        (new THREE.AssimpJSONLoader).load(V3ir.mediaPath + "3d/" + glSettings.pieceFontName3D + "/" + this.strName + ".json", function(c) {
            c.key = d;
            c.name = "object" + d;
            b.addObject(c)
        })
    }
    ;
    return e
}();
"use strict";
CB.ClockObject3D = function() {
    var e = function(b) {
        this.strName = b
    };
    CB.inherit(e, CB.V31x);
    e.prototype.create = function(b, d) {
        (new THREE.AssimpJSONLoader).load(V3ir.mediaPath + "3d/clock/" + this.strName + ".json", function(c) {
            if ("body" == d)
                c.rotation.y = Math.PI / 2,
                c.position.x = -16.6,
                c.position.y = 4.5,
                c.position.z = 0;
            else if ("glass" == d) {
                c.rotation.y = Math.PI / 2;
                c.position.x = -15.5;
                c.position.y = 2.3;
                c.position.z = 2.5;
                for (var f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05
            }
            if ("ring" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -15.6,
                c.position.y = 2.3,
                f = c.position.z = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("button1" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -12.2,
                c.position.y = 4.3,
                c.position.z = 3.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("button2" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -12.2,
                c.position.y = 4.5,
                c.position.z = -5.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("hour1" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -15.4,
                c.position.y = 2.4,
                c.position.z = 2.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("hour2" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -15.4,
                c.position.y = 2.4,
                c.position.z = -2.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("minute1" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -15.4,
                c.position.y = 2.4,
                c.position.z = 2.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("minute2" == d)
                for (c.rotation.y = Math.PI / 2,
                c.position.x = -15.4,
                c.position.y = 2.4,
                c.position.z = -2.5,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("flag1" == d)
                for (c.rotation.y = Math.PI / 2,
                c.rotation.z = Math.PI,
                c.position.x = -15.4,
                c.position.y = 2.8,
                c.position.z = 3.2,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            if ("flag2" == d)
                for (c.rotation.y = Math.PI / 2,
                c.rotation.z = Math.PI,
                c.position.x = -15.4,
                c.position.y = 2.8,
                c.position.z = -1.8,
                f = 0; f < c.children.length; f++)
                    c.children[f].transparent = !0,
                    c.children[f].opacity = .05;
            c.key = d;
            c.name = "object" + d;
            b.addClockObject(c)
        })
    }
    ;
    return e
}();
"use strict";
CB.Board3D = function() {
    var e = function() {};
    CB.inherit(e, CB.V31x);
    e.prototype.create = function(b, d, c) {
        var f = glSettings.pieceFontName3D;
        void 0 === f && (f = "Fritz");
        var g = new THREE.TextureLoader
          , h = g.load(V3ir.mediaPath + "3d/" + f + "/board.jpg");
        h.wrapS = h.wrapT = THREE.RepeatWrapping;
        h.anisotropy = 16;
        f = g.load(V3ir.mediaPath + "3d/" + f + "/board.jpg");
        this.materials = new THREE.MeshLambertMaterial({
            map: f
        });
        this.geometry = new THREE.CubeGeometry(b,d,c);
        this.obj = new THREE.Mesh(this.geometry,this.materials);
        this.obj.position.set(0, 0, 0);
        for (b = 0; b < this.obj.geometry.faceVertexUvs[0].length; b++)
            if (4 > b || 5 < b)
                for (d = 0; 3 > d; d++)
                    0 == this.obj.geometry.faceVertexUvs[0][b][d].x && (this.obj.geometry.faceVertexUvs[0][b][d].x = .97),
                    0 == this.obj.geometry.faceVertexUvs[0][b][d].y && (this.obj.geometry.faceVertexUvs[0][b][d].y = .97);
        return this.obj
    }
    ;
    return e
}();
"use strict";
CB.BoardArea3D = function() {
    function e(d, c, f) {
        for (var g = !1, h = 0; h < d.length; h++)
            f.getX ? d[h].isInMyArea(f.getX(), f.getY()) && (c.call(d[h], f),
            g = !0) : f.event.layerX && d[h].isInMyArea(f.event.layerX, f.event.layerY) && (c.call(d[h], f),
            g = !0);
        return g
    }
    var b = function(d, c, f) {
        this.cbcanvas = d;
        this.width = c;
        this.height = f;
        this.ctx = d.ctx;
        this.boards = [];
        this.V1gq();
        V3ir.V3hy.callOnBackgroundLoaded = this.V2ll.bind(this)
    };
    b.prototype.onThreeRender = function(d, c) {
        for (var f = 0; f < this.boards.length; f++)
            this.boards[f].onThreeRender(d, c)
    }
    ;
    b.prototype.dispose = function() {
        for (var d = 0; d < this.boards.length; d++)
            this.boards[d].dispose()
    }
    ;
    b.prototype.V31z = function(d, c) {}
    ;
    b.prototype.V1fb = function(d) {
        null != d.meshes && (this.boards.push(d),
        d.idBoardAreaHandler = d.onReadyHandlers.add(this.onBoardReady.bind(this)))
    }
    ;
    b.prototype.V2lm = function(d) {
        d = this.V2ln(d);
        void 0 !== d && (this.boards.splice(d, 1)[0].destroy(),
        this.drawBackground(this.cbcanvas.bufferCtx),
        this.cbcanvas.V2lo())
    }
    ;
    b.prototype.V2lq = function() {
        this.V2lr()
    }
    ;
    b.prototype.V2lr = function() {
        for (var d = 0; d < this.boards.length; d++)
            this.boards[d].destroy();
        this.boards = [];
        this.V1gq()
    }
    ;
    b.prototype.V1go = function(d) {
        this.boards = [];
        this.V1fb(d);
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.V1gq()
    }
    ;
    b.prototype.removePosInput = function(d) {
        this.boards = [];
        this.boards.push(d);
        this.V1gq();
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.V1gq();
        this.cbcanvas.V2lo()
    }
    ;
    b.prototype.V2ln = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            if (this.boards[c].uniqueId == d.uniqueId)
                return c
    }
    ;
    b.prototype.draw = function(d) {}
    ;
    b.prototype.V2lu = function() {
        this.cbcanvas.canvas.style.backgroundImage = "url( '" + V3ir.V3hy.background.url + "' )"
    }
    ;
    b.prototype.drawWood = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            this.boards[c].drawWood(d)
    }
    ;
    b.prototype.V2ls = function(d) {
        for (var c = 0; c < this.boards.length; c++)
            this.boards[c].draw(d)
    }
    ;
    b.prototype.drawBackground = function(d) {
        void 0 !== d && V3ir.V3hy.background.loaded && V3ir.V3hy.drawBackground(d, this.width, this.height)
    }
    ;
    b.prototype.resize = function(d, c) {
        this.width = d;
        this.height = c;
        for (var f = 0; f < this.boards.length; f++)
            this.boards[f].resize(d, c)
    }
    ;
    b.prototype.V1gq = function() {}
    ;
    b.prototype.onMouseDown = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onMouseDown(d)
    }
    ;
    b.prototype.onMouseUp = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onMouseUp(d)
    }
    ;
    b.prototype.onMouseMove = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onMouseMove(d)
    }
    ;
    b.prototype.onMouseEnter = function(d) {
        this.boards.length && e(this.boards, this.boards[0].onMouseEnter, d)
    }
    ;
    b.prototype.onMouseLeave = function(d) {
        this.boards.length && e(this.boards, this.boards[0].onMouseLeave, d)
    }
    ;
    b.prototype.onTouchStart = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onTouchStart(d)
    }
    ;
    b.prototype.onTouchEnd = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onTouchEnd(d)
    }
    ;
    b.prototype.onTouchMove = function(d) {
        if (this.boards.length && 1 == this.boards.length)
            this.boards[0].onTouchMove(d)
    }
    ;
    b.prototype.V325 = function(d) {}
    ;
    b.prototype.V326 = function(d) {}
    ;
    b.prototype.onDoubleClick = function(d) {}
    ;
    b.prototype.V2ll = function() {
        void 0 !== this.cbcanvas.V2m3 && this.cbcanvas.V2m3();
        void 0 !== this.V2m4 && this.V2m4()
    }
    ;
    b.prototype.getClickPos = function(d) {
        var c = this.cbcanvas.canvas.getBoundingClientRect();
        return new CB.Point(d.getX() - c.left,d.getY() - c.top)
    }
    ;
    b.prototype.V2m5 = function(d) {
        var c = {
            w: 10,
            nX: d,
            nY: 1
        };
        if (0 == d)
            return c;
        var f = Math.max(this.width, this.height);
        c.w = Math.min(Math.min(this.width, this.height) - 3, Math.floor(f / d - 3));
        if (0 == c.w)
            return c;
        f == this.width ? (c.nX = d,
        c.nY = 1) : (c.nX = 1,
        c.nY = d);
        f = d;
        for (var g = 1; g <= d; ) {
            var h = Math.floor(Math.min(this.width / f - 3, this.height / g - 3));
            c.w < h && (c.w = h,
            c.nX = f,
            c.nY = g);
            g++;
            f = Math.floor(d / g);
            d != f * g && f++
        }
        return c
    }
    ;
    b.prototype.V2m2 = function() {
        if (0 != this.boards.length) {
            var d = this.V2m5(this.boards.length);
            if (0 != d.w) {
                var c = Math.floor((this.width - d.nX * d.w) / (d.nX + 1))
                  , f = Math.floor((this.height - d.nY * d.w) / (d.nY + 1))
                  , g = new CB.Size(d.w,d.w);
                if (1 == this.boards.length)
                    this.boards[0].setLeftSpace(c),
                    this.boards[0].setPosSize(new CB.Point(c,0), g);
                else
                    for (var h = 0, k = 0; k < d.nX; k++)
                        for (var l = c + k * (c + d.w), m = 0; m < d.nY; m++) {
                            var n = f + m * (f + d.w);
                            h < this.boards.length && (n = new CB.Point(l,n),
                            this.boards[h].setLeftSpace(c),
                            this.boards[h].setPosSize(n, g),
                            h++)
                        }
            }
        }
    }
    ;
    b.prototype.V2m6 = function() {
        this.drawBackground(this.cbcanvas.bufferCtx);
        this.cbcanvas.V2lo()
    }
    ;
    b.prototype.onBoardReady = function(d) {
        --this.V2m1;
        0 >= this.V2m1 && (this.drawBackground(this.cbcanvas.bufferCtx),
        this.cbcanvas.V2lo(),
        this.boards.forEach(function(c) {
            c.setTitleVisible(!0);
            void 0 !== c.rightWin && c.rightWin.setVisible(!0)
        }),
        this.V2m1 = this.boards.length)
    }
    ;
    b.prototype.V1fo = function() {
        this.resize(this.width, this.height)
    }
    ;
    return b
}();
"use strict";
CB.V327 = function() {
    var e = function() {};
    e.prototype.add = function(b) {
        if ("BlackWhite" === glSettings.pieceFontName3D) {
            var d = new THREE.PointLight(16777215);
            d.position.set(100, 100, 250);
            b.addThreeLight("Point", d);
            d = new THREE.AmbientLight(131586);
            b.addThreeLight("Ambient", d);
            d = new THREE.DirectionalLight(4210752);
            d.position.set(10, 15, 10);
            d.castShadow = !0;
            d.shadow.camera.fov = 105;
            d.shadow.camera.right = 35;
            d.shadow.camera.left = -35;
            d.shadow.camera.top = 35;
            d.shadow.camera.bottom = -35;
            d.shadow.camera.near = 2;
            d.shadow.camera.far = 100;
            d.shadow.bias = .001;
            d.shadow.darkness = .5
        } else
            d = new THREE.AmbientLight(10658466),
            b.addThreeLight("Ambient", d),
            d = new THREE.DirectionalLight(10526880),
            d.position.set(-10, 15, 0),
            d.castShadow = !0,
            d.shadow.cameraFov = 105,
            d.shadow.camera.right = 35,
            d.shadow.camera.left = -35,
            d.shadow.camera.top = 35,
            d.shadow.camera.bottom = -35,
            d.shadow.camera.near = 2,
            d.shadow.camera.far = 100,
            d.shadow.bias = .001;
        d.shadow.mapSize.width = 1024;
        d.shadow.mapSize.height = 1024;
        b.addThreeLight("Direct", d)
    }
    ;
    return e
}();
"use strict";
CB.RawBoardControl3D = function() {
    var e = function() {};
    e.prototype.init = function(b, d, c, f, g, h) {
        this.V328 = h;
        this.V329 = g;
        this.cbcanvas = b.canvas;
        this.threeCmp = b;
        this.width = d;
        this.height = c;
        this.debugName = f;
        this.blackIsBottom = !1;
        this.allowInput = !0;
        this.pieces = [];
        this.meshes = [];
        this.V32a = [];
        this.attributes = [];
        this.board = new CB.Board;
        this.moveEntry = {};
        this.V2mz = {};
        this.V32b = 1.4 * 1.5;
        this.V2n4 = new CB.Timer(this.V2n5.bind(this));
        this.onReadyHandlers = new CB.V4(this);
        this.moveEntry = new CB.V1e2(this);
        this.V32c = new THREE.Vector3;
        this.V32d = new CB.Board3D;
        this.V32f = this.V32e = -1;
        this.V32l = this.V32k = this.V32j = this.V32i = this.V32h = this.V32g = 0;
        this.V32m = !1;
        b.addThreeObject("Board", this.V32d.create(18 * 1.3, .1, 18 * 1.3));
        (new CB.V327).add(this.threeCmp);
        d = glSettings.pieceFontName3D;
        void 0 === d && (d = "Fritz");
        this.V32n() && (new CB.V320(this.threeCmp)).V321(this);
        "Character" == d && (new CB.V32p).create(this);
        "Modern" == d ? (b = new CB.Object3D("environmentsphere"),
        b.create(this, "env")) : "BlackWhite" == d ? (b = new CB.Object3D("environmentsphere"),
        b.create(this, "env"),
        this.threeCmp.scene.fog = new THREE.FogExp2(16777215,.015)) : "Balloon" == d ? (b = new CB.Object3D("environmentsphere"),
        b.create(this, "env"),
        this.threeCmp.scene.fog = new THREE.FogExp2(16777215,.015)) : "Room" == d && ((new CB.Object3D("schreibtisch")).create(this, "tisch"),
        (new CB.Object3D("room")).create(this, "room"),
        (new CB.Object3D("stuhle")).create(this, "stuhle"),
        (new CB.Object3D("stuhle2")).create(this, "stuhle2"),
        c = new THREE.TextureLoader,
        f = c.load(V3ir.mediaPath + "3d/" + d + "/fill.jpg"),
        f.wrapS = f.wrapT = THREE.RepeatWrapping,
        f.anisotropy = 16,
        d = c.load(V3ir.mediaPath + "3d/" + d + "/fill.jpg"),
        d = new THREE.MeshBasicMaterial({
            map: d
        }),
        c = new THREE.CubeGeometry(18 * 1.3,.05,18 * 1.3),
        d = new THREE.Mesh(c,d),
        d.position.set(0, 0, 0),
        b.addThreeObject("test", d),
        (new CB.ClockObject3D("body")).create(this, "body"),
        (new CB.ClockObject3D("ring")).create(this, "ring"),
        this.V32q = new CB.ClockObject3D("button"),
        this.V32q.create(this, "button1"),
        this.V32r = new CB.ClockObject3D("button"),
        this.V32r.create(this, "button2"),
        this.V32s = new CB.ClockObject3D("flag"),
        this.V32s.create(this, "flag1"),
        this.V32t = new CB.ClockObject3D("flag"),
        this.V32t.create(this, "flag2"),
        this.V32u = new CB.ClockObject3D("hour"),
        this.V32u.create(this, "hour1"),
        this.V32v = new CB.ClockObject3D("hour"),
        this.V32v.create(this, "hour2"),
        this.V32w = new CB.ClockObject3D("minute"),
        this.V32w.create(this, "minute1"),
        this.V32x = new CB.ClockObject3D("minute"),
        this.V32x.create(this, "minute2"));
        this.V32y(1);
        this.arrows = [];
        this.V32z = [];
        for (b = 0; 64 > b; b++)
            this.V32z.push("")
    }
    ;
    e.prototype.dispose = function() {
        for (; 0 < this.threeCmp.scene.children.length; ) {
            var b = this.threeCmp.scene.children[0];
            this.threeCmp.scene.remove(b);
            this.V330(b)
        }
        this.V32n() && this.cubeMap && this.cubeMap.dispose();
        this._game.removeOnCurPosChangedListener(this.V1h3);
        this._game.removeOnChangedListener(this.V1h0);
        this._game.removeOnNavigateListener(this.V2qh);
        this._game.removeOnMoveListener(this.V2qi)
    }
    ;
    e.prototype.V331 = function() {
        var b = new THREE.FontLoader;
        b.me = this;
        b.load(V3ir.mediaPath + "3d/fonts/helvetiker_regular.typeface.js", function(d) {
            for (var c = new THREE.MeshLambertMaterial({
                color: 13938487,
                transparent: !0,
                opacity: .6
            }), f = 0; 8 > f; f++) {
                var g = new THREE.TextGeometry("ABCDEFGH12345678"[f + 8],{
                    font: d,
                    size: .3,
                    height: .05,
                    curveSegments: 12,
                    bevelThickness: .015,
                    bevelSize: .03,
                    bevelEnabled: !0
                });
                g = new THREE.Mesh(g,c);
                g.rotateX(1.57);
                g.rotateY(3.14);
                var h = b.me.getPositionX(f)
                  , k = b.me.getPositionZ(f);
                g.position.set(h + 1.9, .03, k - .2);
                b.me.threeCmp.addThreeObject("coordinates", g)
            }
            for (f = 0; 8 > f; f++)
                g = new THREE.TextGeometry("ABCDEFGH12345678"[f],{
                    font: d,
                    size: .3,
                    height: .05,
                    curveSegments: 12,
                    bevelThickness: .015,
                    bevelSize: .03,
                    bevelEnabled: !0
                }),
                g = new THREE.Mesh(g,c),
                g.rotateX(1.57),
                g.rotateY(3.14),
                h = b.me.getPositionX(8 * f),
                k = b.me.getPositionZ(8 * f),
                g.position.set(h, .03, k - 1.85),
                b.me.threeCmp.addThreeObject("coordinates", g)
        })
    }
    ;
    e.prototype.V32n = function() {
        var b = glSettings.pieceFontName3D;
        return "Balloon" != b && "BlackWhite" != b
    }
    ;
    e.prototype.V330 = function(b) {
        for (var d = 0; d < b.children.length; d++)
            b.children[d].geometry ? b.children[d].geometry.dispose() : this.V330(b.children[d])
    }
    ;
    e.prototype.touches = function(b, d) {
        for (var c = 0; c < d.children.length; c++)
            if (b == d.children[c].id || this.touches(b, d.children[c]))
                return !0;
        return !1
    }
    ;
    e.prototype.onMouseDown = function(b) {
        if (this.width) {
            this.destroyMessage();
            b = this.getClickPos(b);
            this.V32c.x = b.x / this.width * 2 - 1;
            this.V32c.y = 1 - b.y / this.height * 2;
            b = new THREE.Vector3;
            var d = new THREE.Raycaster
              , c = new THREE.Vector3;
            this.threeCmp.camera instanceof THREE.OrthographicCamera ? (b.set(this.V32c.x, this.V32c.y, -1),
            b.unproject(this.threeCmp.camera),
            c.set(0, 0, -1).transformDirection(this.threeCmp.camera.V332),
            d.set(b, c)) : this.threeCmp.camera instanceof THREE.PerspectiveCamera && (b.set(this.V32c.x, this.V32c.y, .5),
            b.unproject(this.threeCmp.camera),
            d.set(this.threeCmp.camera.position, b.sub(this.threeCmp.camera.position).normalize()));
            b = d.intersectObjects(this.meshes, !0);
            this.threeCmp.control.V333 = !0;
            if (0 < b.length) {
                b[0].object.id == this.V32d.obj.id && (this.threeCmp.control.V333 = !0);
                if (this.blindMoves)
                    for (d = 0; d < b.length; d++)
                        if (b[d].object.id == this.V32d.obj.id && (this.threeCmp.control.V333 = !1,
                        c = this.getSquare(b[d].point.x, b[d].point.z),
                        0 < c && 64 > c)) {
                            this.moveEntry.V1e8(c);
                            this.markedSqsOnButtonDown = [];
                            this.fnMarkSquaresOnButtonDown && (this.markedSqsOnButtonDown = this.markedSqsOnButtonDown.concat(this.fnMarkSquaresOnButtonDown(c)));
                            this.V1sk(this.markedSqsOnButtonDown);
                            this.V32e = c;
                            this.fnSquareClick && this.fnSquareClick(c);
                            return
                        }
                if (1 < b.length)
                    for (d = 0; d < b.length; d++)
                        for (c = 0; c < this.pieces.length; c++)
                            if (this.touches(b[d].object.id, this.pieces[c]) && (this.V32e = this.pieces[c].key,
                            this.V32g = b[0].point.x,
                            this.V32h = b[0].point.y,
                            this.V32i = b[0].point.z,
                            this.threeCmp.control.V333 = !1,
                            this.V32f = c,
                            this.allowInput)) {
                                c = this.V32e;
                                this.moveEntry.V1ee(c);
                                -1 != c && (this.blindMoves || this.moveEntry.V1e8(c),
                                this.fromSq = c,
                                this.markedSqsOnButtonDown = [],
                                this.fnMarkSquaresOnButtonDown && (this.markedSqsOnButtonDown = this.markedSqsOnButtonDown.concat(this.fnMarkSquaresOnButtonDown(c))),
                                this.V1sk(this.markedSqsOnButtonDown),
                                this.fnSquareClick && this.fnSquareClick(c));
                                break
                            }
            }
        }
    }
    ;
    e.prototype.onTouchStart = function(b) {
        this.onMouseDown(b)
    }
    ;
    e.prototype.onTouchEnd = function(b) {
        this.onMouseUp(b)
    }
    ;
    e.prototype.onTouchMove = function(b) {
        this.onMouseMove(b)
    }
    ;
    e.prototype.V325 = function(b) {}
    ;
    e.prototype.V326 = function(b) {}
    ;
    e.prototype.onMouseMove = function(b) {
        this.onThreeRender(this.threeCmp.scene, this.threeCmp.renderer);
        if (-1 != this.V32e) {
            b = this.getClickPos(b);
            this.V32c.x = b.x / this.width * 2 - 1;
            this.V32c.y = 1 - b.y / this.height * 2;
            b = new THREE.Vector3;
            var d = new THREE.Raycaster
              , c = new THREE.Vector3;
            this.threeCmp.camera instanceof THREE.OrthographicCamera ? (b.set(this.V32c.x, this.V32c.y, -1),
            b.unproject(this.threeCmp.camera),
            c.set(0, 0, -1).transformDirection(this.threeCmp.camera.V332),
            d.set(b, c)) : this.threeCmp.camera instanceof THREE.PerspectiveCamera && (b.set(this.V32c.x, this.V32c.y, .5),
            b.unproject(this.threeCmp.camera),
            d.set(this.threeCmp.camera.position, b.sub(this.threeCmp.camera.position).normalize()));
            b = d.intersectObjects(this.meshes, !0);
            this.threeCmp.control.V333 = !1;
            if (0 < b.length)
                for (d = 0; d < b.length; d++)
                    if (b[d].object.id == this.V32d.obj.id) {
                        this.V32j = b[d].point.x + this.V334(this.board.get(this.V32e));
                        this.V32k = this.V335(this.board.get(this.V32e)) + b[d].point.y;
                        this.V32l = b[d].point.z + this.V336(this.board.get(this.V32e));
                        if (this.blindMoves)
                            break;
                        this.pieces[this.V32f].position.set(this.V32j, this.V32k, this.V32l)
                    }
        }
    }
    ;
    e.prototype.onMouseUp = function(b) {
        if (this.blindMoves) {
            if (-1 != this.V32e) {
                var d = this.getSquare(this.V32j - this.V334(this.board.get(this.V32e)), this.V32l - this.V336(this.board.get(this.V32e)));
                d != this.V32e && (this.V186 = d,
                this.prom = 0,
                this.moveEntry.boardWinMoveEntered(this.V32e, d, this.prom))
            }
        } else if (-1 != this.V32f) {
            var c = !1;
            d = this.getSquare(this.V32j - this.V334(this.board.get(this.V32e)), this.V32l - this.V336(this.board.get(this.V32e)));
            b = this.clickPos = this.getClickPos(b);
            this.allowInput && (d !== this.V32e ? this.moveEntry.V1eh(this.board, this.V32e, d) ? (this.moveEntry.colorOk(this.board.get(this.V32e)) && (this.board.get(d),
            this.V337(this.V32e, d, b, !1) || this.currPiece && this.movePieceToSq(this.currPiece, d)),
            this.moveEntry.boardWinMoveEntered(this.V32e, d, this.prom) || (c = !0)) : c = !0 : c = !0);
            c && -1 != this.V32e && this.pieces[this.V32f].position.set(this.getPositionX(this.V32e) + this.V334(this.board.get(this.V32e)), this.V335(this.board.get(this.V32e)), this.getPositionZ(this.V32e) + this.V334(this.board.get(this.V32e)))
        }
        this.markedSqsOnButtonDown && this.markedSqsOnButtonDown.length && (this.V2qr(this.markedSqsOnButtonDown),
        this.markedSqsOnButtonDown = []);
        this.V32e = -1
    }
    ;
    e.prototype.destroy = function() {
        this.V32o.destroy();
        this.destroyTitle();
        this.destroyMessage();
        this.V2n8();
        this.V2n9();
        this.onReadyHandlers.remove(this.idBoardAreaHandler);
        this.onReadyHandlers.empty();
        this.V2lk && glSettings.removeOnBoardStyleListener(this.V2lk);
        this.boardSprites.destroy();
        this.pieceSpriteFactory && this.pieceSpriteFactory.destroy()
    }
    ;
    e.prototype.V338 = function() {
        for (var b = 0; b < this.pieces.length; b++)
            this.threeCmp.removeThreeObject("Piece" + this.pieces[b].key, this.pieces[b]);
        this.meshes = [];
        this.pieces = [];
        this.V32d.obj.receiveShadow = !0;
        this.meshes.push(this.V32d.obj);
        for (b = 0; 64 > b; b++)
            if (this.board.sqs[b]) {
                var d = this.getPositionX(b)
                  , c = this.getPositionZ(b);
                this.V339(this.board.sqs[b], b, d + this.V334(this.board.sqs[b]), this.V335(this.board.sqs[b]), c + this.V336(this.board.sqs[b]))
            }
    }
    ;
    e.prototype.V334 = function(b) {
        var d = 0;
        if ("BlackWhite" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = -5.4;
                break;
            case 2:
                d = -5.4;
                break;
            case 3:
                d = 9.8;
                break;
            case 4:
                d = -2.9;
                break;
            case 5:
                d = -2.9;
                break;
            case 6:
                d = -5.86;
                break;
            case 9:
                d = -5.4;
                break;
            case 10:
                d = -5.4;
                break;
            case 11:
                d = 9.8;
                break;
            case 12:
                d = -2.9;
                break;
            case 13:
                d = -2.9;
                break;
            case 14:
                d = -5.8
            }
        return d
    }
    ;
    e.prototype.V336 = function(b) {
        var d = 0;
        if ("BlackWhite" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = -5.3;
                break;
            case 2:
                d = -5.3;
                break;
            case 3:
                d = 8.9;
                break;
            case 4:
                d = -3.2;
                break;
            case 5:
                d = -2.7;
                break;
            case 6:
                d = -5.65;
                break;
            case 9:
                d = -5.1;
                break;
            case 10:
                d = -5.1;
                break;
            case 11:
                d = 8.9;
                break;
            case 12:
                d = -3.2;
                break;
            case 13:
                d = -2.7;
                break;
            case 14:
                d = -5.65
            }
        return d
    }
    ;
    e.prototype.V335 = function(b) {
        var d = 0;
        if ("BlackWhite" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = 12;
                break;
            case 2:
                d = 12.2;
                break;
            case 3:
                d = -14.5;
                break;
            case 4:
                d = 7.9;
                break;
            case 5:
                d = 6.6;
                break;
            case 6:
                d = 12.4;
                break;
            case 9:
                d = 12;
                break;
            case 10:
                d = 12.2;
                break;
            case 11:
                d = -14.5;
                break;
            case 12:
                d = 7.9;
                break;
            case 13:
                d = 6.6;
                break;
            case 14:
                d = 12.4
            }
        else if ("Balloon" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = 1.8;
                break;
            case 2:
                d = 1.5;
                break;
            case 3:
                d = 2.2;
                break;
            case 4:
                d = 2;
                break;
            case 5:
                d = .5;
                break;
            case 6:
                d = 1;
                break;
            case 9:
                d = 2.2;
                break;
            case 10:
                d = 1.5;
                break;
            case 11:
                d = 2.2;
                break;
            case 12:
                d = 1.2;
                break;
            case 13:
                d = 2;
                break;
            case 14:
                d = 3
            }
        else if ("Metal" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = -5.4;
                break;
            case 2:
                d = 2;
                break;
            case 3:
                d = 0;
                break;
            case 4:
                d = 1.5;
                break;
            case 5:
                d = 10;
                break;
            case 6:
                d = 2.1;
                break;
            case 9:
                d = -5.3;
                break;
            case 10:
                d = 2;
                break;
            case 11:
                d = 0;
                break;
            case 12:
                d = 1.5;
                break;
            case 13:
                d = 1.1;
                break;
            case 14:
                d = 2.1
            }
        if ("Future" == glSettings.pieceFontName3D)
            switch (b) {
            case 1:
                d = 2.9;
                break;
            case 2:
                d = 2.8;
                break;
            case 3:
                d = 1.56;
                break;
            case 4:
                d = 2.25;
                break;
            case 5:
                d = 1.57;
                break;
            case 6:
                d = 1.15;
                break;
            case 9:
                d = 2.9;
                break;
            case 10:
                d = 2.8;
                break;
            case 11:
                d = 1.56;
                break;
            case 12:
                d = 2.25;
                break;
            case 13:
                d = 1.57;
                break;
            case 14:
                d = 1.15
            }
        return d
    }
    ;
    e.prototype.V33a = function(b, d) {
        for (var c = 0; c < b.children.length; c++)
            b.children[c].key = d,
            b.children[c].castShadow = !0,
            b.children[c].receiveShadow = !0,
            this.V33a(b.children[c], d)
    }
    ;
    e.prototype.V339 = function(b, d, c, f, g) {
        for (var h = 0; h < this.V32a.length; h++)
            if (this.V32a[h].key == b) {
                b = this.V32a[h].clone(!0);
                this.V33a(b);
                b.key = d;
                b.position.set(c, f, g);
                b.castShadow = !0;
                b.receiveShadow = !0;
                this.threeCmp.addThreeObject("Piece", b);
                this.meshes.push(b);
                this.pieces.push(b);
                break
            }
    }
    ;
    e.prototype.addPiece = function(b) {
        if (this.V32n())
            for (var d = 0; d < b.children.length; d++)
                b.children[d].material && (b.children[d].material.envMap = this.cubeMapMaterial,
                b.children[d].material.reflectivity = .2);
        this.V32a.push(b);
        6 == this.V32a.length ? this.V33b() : 12 == this.V32a.length && (this.V331(),
        this.V338(),
        this.V329(this.V328))
    }
    ;
    e.prototype.V32y = function(b) {
        for (b = 1; 7 > b; b++)
            (new CB.Piece3D(b)).create(this, b)
    }
    ;
    e.prototype.V33b = function(b) {
        for (b = 1; 7 > b; b++)
            (new CB.Piece3D(8 + b)).create(this, 8 + b)
    }
    ;
    e.prototype.V33c = function(b) {
        this.character = b;
        this.character.V33d = this.V33e.bind(this);
        this.character.V33f = this.V33g.bind(this);
        this.character.V33h = this.V33i.bind(this);
        this.threeCmp.addThreeObject("Char", b.CharAnimation.aMesh);
        b.CharAnimation.aMesh.castShadow = !0;
        var d = new CB.V33j(CB.V33k.V33l,.5,new THREE.Vector3(-.6,0,0));
        b.addCommand(d, 100)
    }
    ;
    e.prototype.V33e = function(b, d) {
        d.rewind();
        this.V33m = d.readFloat32();
        this.V33n = d.readFloat32();
        this.V33o = d.readFloat32();
        this.V33p = d.readFloat32();
        this.V33q = d.readFloat32();
        this.V33r = d.readFloat32();
        this.V33s = d.readInt();
        this.V33t = d.readInt();
        this.V33u = -1;
        for (b = 0; b < this.pieces.length; b++)
            if (this.pieces[b].key == this.V33s) {
                this.V33u = b;
                break
            }
    }
    ;
    e.prototype.V33g = function(b) {
        this.pieces[this.V33u].position.set(this.V33m + (this.V33p - this.V33m) * b, 0, this.V33o + (this.V33r - this.V33o) * b)
    }
    ;
    e.prototype.V33i = function(b) {
        this.V32m = !1;
        this.V2pi(this.V33v, !0);
        this.V2pq()
    }
    ;
    e.prototype.addObject = function(b) {
        if (this.V32n())
            for (var d = 0; d < b.children.length; d++)
                b.children[d].material && (b.children[d].material.envMap = this.cubeMapMaterial);
        this.threeCmp.addThreeObject("Object", b)
    }
    ;
    e.prototype.addClockObject = function(b) {
        this.threeCmp.addThreeObject("ClockObject", b)
    }
    ;
    e.prototype.getPositionX = function(b) {
        return (7 - parseInt(b / 8)) * this.V32b * 1.3 - 4.55 * this.V32b
    }
    ;
    e.prototype.getPositionZ = function(b) {
        return parseInt(b % 8, 10) * this.V32b * 1.3 - 4.55 * this.V32b
    }
    ;
    e.prototype.getSquare = function(b, d) {
        for (var c = 0; 64 > c; c++) {
            var f = this.getPositionX(c) - 1.3 * this.V32b / 2
              , g = this.getPositionZ(c) - 1.3 * this.V32b / 2;
            if (b > f && b < f + 1.3 * this.V32b && d > g && d < g + 1.3 * this.V32b)
                return c
        }
        return -1
    }
    ;
    e.prototype.V31z = function(b, d) {}
    ;
    e.prototype.V2nc = function() {}
    ;
    e.prototype.V1fd = function() {
        this.V2lk = glSettings.addOnBoardStyleListener(this.V2nd.bind(this))
    }
    ;
    e.prototype.V2nd = function(b, d) {
        V3ir.setBoardTextures(CB.V2j2.prototype.V2jg(b));
        this.changeBoardStyle(b, d)
    }
    ;
    e.prototype.changeBoardStyle = function(b, d) {
        this.pieceFontName = d;
        this.V33w = 0;
        this.resize(this.width, this.height)
    }
    ;
    e.prototype.setPosSize = function(b, d) {}
    ;
    e.prototype.resize = function(b, d) {
        this.width = b;
        this.height = d
    }
    ;
    e.prototype.V2n5 = function() {
        this.V338()
    }
    ;
    e.prototype.V1gq = function() {}
    ;
    e.prototype.V2o0 = function(b) {
        this.threeCmp.V33x(b)
    }
    ;
    e.prototype.addTitle = function(b) {}
    ;
    e.prototype.V2nm = function() {}
    ;
    e.prototype.setTitleVisible = function(b) {}
    ;
    e.prototype.setLeftSpace = function(b) {}
    ;
    e.prototype.V2o8 = function(b) {}
    ;
    e.prototype.removePlayingClock = function() {}
    ;
    e.prototype.destroyTitle = function() {}
    ;
    e.prototype.destroyMessage = function() {
        this.messageWin && this.messageWin.destroy();
        delete this.messageWin
    }
    ;
    e.prototype.V2n8 = function() {}
    ;
    e.prototype.V2n9 = function() {}
    ;
    e.prototype.V1r1 = function() {}
    ;
    e.prototype.V1qz = function() {}
    ;
    e.prototype.addMessage = function(b, d, c) {
        if (this.messageWin || d)
            this.messageWin ? this.messageWin.setText(b) : (this.messageWin = new CB.V2od(this,b,c),
            this.messageWin.setVisible(!0)),
            this.messageWin.onResize(this)
    }
    ;
    e.prototype.V2oh = function(b) {}
    ;
    e.prototype.V2om = function(b) {}
    ;
    e.prototype.onMouseEnter = function(b) {
        this.getClickPos(b)
    }
    ;
    e.prototype.onMouseLeave = function(b) {
        this.getClickPos(b)
    }
    ;
    1;
    e.prototype.movePieceToSq = function(b, d) {
        this.moveSprite(b, this.getSquareCenterPos(d));
        b.lastSq = d
    }
    ;
    e.prototype.moveSprite = function(b, d) {
        b.moveTo(this.cbcanvas.bufferCtx, d);
        this.cbcanvas.requestAnimation(b.getMoveClipRect())
    }
    ;
    e.prototype.hideSprite = function(b) {}
    ;
    e.prototype.V2ow = function(b, d) {}
    ;
    e.prototype.V2ox = function(b, d) {
        for (var c = 0; c < b.length; c++)
            ;
        c = this.V2oy(b);
        b.length && d && this.cbcanvas.requestAnimation(c)
    }
    ;
    e.prototype.V2oy = function(b) {
        this.attributes = this.attributes ? this.attributes.concat(b) : b;
        for (var d, c = 0; c < b.length; c++) {
            b[c].boardControl = this;
            var f = b[c].draw(this.cbcanvas.bufferCtx);
            d = void 0 === d ? f : d.getUnion(f)
        }
        return d
    }
    ;
    e.prototype.undoAttributes = function() {
        if (void 0 !== this.attributes && this.attributes.length) {
            for (var b = 0; b < this.attributes.length; b++)
                this.threeCmp.removeThreeObject("Attr", this.attributes[b]);
            this.attributes = []
        }
    }
    ;
    e.prototype.queueBoardAttributes = function(b, d) {
        d.eraseQueue && this.undoAttributes();
        this.V2p0 = !this.V2p0 || d && d.eraseQueue ? b : this.V2p0.concat(b);
        this.V2n6(d.requestAnimInRender)
    }
    ;
    e.prototype.V2n6 = function() {
        if (this.V2p0) {
            for (var b = 0; b < this.V2p0.length; b++)
                this.V2p0[b]instanceof CB.V1ea && this.addArrow(this.V2p0[b].from, this.V2p0[b].to),
                this.V2p0[b]instanceof CB.BoardColouredSquare && this.V33y(this.V2p0[b].sq, this.V2p0[b].rgba);
            this.V2p0 = []
        }
    }
    ;
    e.prototype.addArrow = function(b, d) {
        var c = new THREE.Geometry
          , f = this.getPositionX(b)
          , g = this.getPositionZ(b)
          , h = this.getPositionX(d)
          , k = this.getPositionZ(d)
          , l = h - f
          , m = k - g;
        .01 < l || -.01 > l ? (m = Math.atan(m / l),
        0 > l && (m += Math.PI)) : m = 0 < m ? +Math.PI / 2 : -Math.PI / 2;
        var n = m + 1.5 * Math.PI + Math.PI / 4
          , p = m + 1.5 * Math.PI - Math.PI / 4;
        l = .3 * Math.sin(n);
        n = .3 * -Math.cos(n);
        var q = .3 * Math.sin(p)
          , t = .3 * -Math.cos(p)
          , v = Math.sin(m + Math.PI / 2 + Math.PI)
          , z = -Math.cos(m + Math.PI / 2 + Math.PI);
        p = new THREE.Vector3(h + l + v + Math.sin(m - Math.PI / 2) / 2,.1,k + n + z - Math.cos(m - Math.PI / 2) / 2);
        var E = new THREE.Vector3(f + l,.1,g + n);
        f = new THREE.Vector3(f + q,.1,g + t);
        g = new THREE.Vector3(h + q + v + Math.sin(m - Math.PI / 2) / 2,.1,k + t + z - Math.cos(m - Math.PI / 2) / 2);
        q = new THREE.Vector3(h + 3.2 * q + v,.1,k + 3.2 * t + z);
        m = new THREE.Vector3(h + Math.sin(m - Math.PI / 2) / 2,.1,k - Math.cos(m - Math.PI / 2) / 2);
        h = new THREE.Vector3(h + 3.2 * l + v,.1,k + 3.2 * n + z);
        c.vertices.push(p);
        c.vertices.push(E);
        c.vertices.push(f);
        c.vertices.push(g);
        c.vertices.push(q);
        c.vertices.push(m);
        c.vertices.push(h);
        c.faces.push(new THREE.Face3(0,1,2));
        c.faces.push(new THREE.Face3(0,2,3));
        c.faces.push(new THREE.Face3(6,4,5));
        c.computeFaceNormals();
        h = new THREE.MeshLambertMaterial({
            color: 13938487,
            transparent: !0,
            opacity: .5
        });
        c = new THREE.Mesh(c,h);
        b = "Arrow" + b + d;
        this.threeCmp.addThreeObject(b, c);
        this.arrows.push(b)
    }
    ;
    e.prototype.V33y = function(b, d) {
        var c = new THREE.TorusGeometry(this.V32b / 2,.1)
          , f = new THREE.Color;
        f.setHSL(d.hue / 360, d.saturation / 100, d.lightness / 100);
        d = new THREE.MeshBasicMaterial({
            color: f,
            transparent: !0,
            opacity: d.alpha
        });
        c = new THREE.Mesh(c.clone(),d);
        c.rotateX(1.57);
        d = this.getPositionX(b);
        f = this.getPositionZ(b);
        c.position.set(d, 0, f);
        d = "Square" + b;
        this.threeCmp.V33z(d);
        this.threeCmp.addThreeObject(d, c);
        this.V32z[b] = d
    }
    ;
    e.prototype.V2p1 = function() {
        return this.V2n0.length || this.animation.jobs.length
    }
    ;
    e.prototype.animateCapture = function(b) {}
    ;
    e.prototype.animateFromTo = function(b, d, c, f) {
        if (void 0 !== b) {
            var g = c.subtract(d);
            this.V2p9 = f;
            this.V2pa = c;
            this.V2pb = new CB.V13g(g.x / this.V2p9,g.y / this.V2p9);
            this.V2pc = b;
            this.V2pd = d;
            b = new CB.V134;
            b.V138(d.x, d.y, c.x, c.y);
            this.cbcanvas.joinClipRect(b);
            window.requestAnimationFrame(this.V2pf.bind(this))
        }
    }
    ;
    e.prototype.V2pf = function() {
        this.V2pc.moveTo(this.cbcanvas.bufferCtx, this.V2pd);
        this.V2pd = 0 === this.V2p9 ? this.V2pa : this.V2pd.add(this.V2pb);
        this.cbcanvas.joinClipRect(this.V2pc.getMoveClipRect());
        this.cbcanvas.V153();
        0 < this.V2p9 && window.requestAnimationFrame(this.V2pf.bind(this));
        this.V2p9--
    }
    ;
    e.prototype.V2pi = function(b, d) {
        this.blindMoves || ObjUtil.equals(b, this.board.sqs) || (this.board.copyFrom(b),
        this.V338())
    }
    ;
    e.prototype.redraw = function() {}
    ;
    e.prototype.V2pk = function() {
        this.currPiece && -1 != this.fromSq && this.board.sqs[this.fromSq] != this.currPiece.piece && (delete this.currPiece,
        this.fromSq = -1)
    }
    ;
    e.prototype.V2pj = function() {
        return !0
    }
    ;
    e.prototype.V2p6 = function() {}
    ;
    e.prototype.draw = function(b) {
        isNaN(this.x0) || (this.V2ls(b),
        void 0 !== this.V2ps && this.V2ps(this.getOuterRect()))
    }
    ;
    e.prototype.drawWood = function(b) {
        this.V2pt(b);
        this.V2pu(b)
    }
    ;
    e.prototype.V2ls = function(b) {
        this.drawWood(b);
        this.V2pv(b)
    }
    ;
    e.prototype.getInnerRect = function() {
        return new CB.V134(this.x0 + this.V2n2,this.y0 + this.V2n2,this.x0 + this.V2n2 + this.V2nu,this.y0 + this.V2n2 + this.V2nu)
    }
    ;
    e.prototype.getOuterRect = function() {
        return new CB.V134(this.x0,this.y0,this.x0 + this.nBoardOuterW,this.y0 + this.nBoardOuterW)
    }
    ;
    e.prototype.V2pt = function(b) {
        V3ir.V3hy.margin.loaded && V3ir.V3hy.isBoardValid() && (b.save(),
        CB.V13l.V13m(b, this.getOuterRect(), this.getInnerRect()),
        V3ir.V3hy.margin.drawTiled(b, this.x0, this.y0, this.nBoardOuterW, this.nBoardOuterW),
        b.restore())
    }
    ;
    e.prototype.V2pu = function(b) {
        if (V3ir.V3hy.isBoardValid())
            for (var d = 0; 64 > d; d++)
                V3ir.V3hy.drawSquare(b, d, this.nSqPix, this.getPixPos(d))
    }
    ;
    e.prototype.V2pv = function(b) {
        for (var d = 0; 64 > d; d++) {
            var c = this.boardSprites.getPiece(d);
            if (void 0 !== c) {
                var f = this.getSquareCenterPos(d);
                c.moveToNoSave(b, f)
            }
        }
    }
    ;
    e.prototype.restoreSquare = function(b, d) {
        if (this.board.sqs[d]) {
            var c = this.boardSprites.getPiece(d);
            void 0 !== c && (c.setBackground(V3ir.V3hy.getSquare(d, this.V33w)),
            c.moveTo(b, this.getSquareCenterPos(d)))
        } else
            V3ir.V3hy.drawSquare(b, d, this.nSqPix, this.getPixPos(d))
    }
    ;
    e.prototype.drawSquare = function(b, d) {
        V3ir.V3hy.drawSquare(b, d, this.nSqPix, this.getPixPos(d))
    }
    ;
    e.prototype.V2nn = function() {
        void 0 !== this.pieceSpriteFactory && this.pieceSpriteFactory.isValid() && this.boardSprites.sqSidePix !== this.V33w && (this.boardSprites.destroy(),
        this.boardSprites.create(this.pieceSpriteFactory),
        this.boardSprites.setup(this.pieceSpriteFactory, this.board.sqs, this.getPixPos.bind(this)),
        setTimeout(this.V2q8.bind(this), 300))
    }
    ;
    e.prototype.V2q8 = function() {
        V3ir.V3hy.isBoardValid() && this.boardSprites.V2km() ? (this.V2pm && this.V2pi(this.V2pm, !1),
        this.onReadyHandlers.count() ? this.onReadyHandlers.V5() : this.cbcanvas.V2lo()) : setTimeout(this.V2q8.bind(this), 500)
    }
    ;
    e.prototype.getPixPos = function(b) {
        var d = Math.floor(b / 8);
        b %= 8;
        this.blackIsBottom ? (d = Math.floor(this.x0 + this.V2n2 + this.V2nx + (7 - d) * this.nSqPix + .5),
        b = Math.floor(this.y0 + this.V2n2 + this.V2nx + b * this.nSqPix + .5)) : (d = Math.floor(this.x0 + this.V2n2 + this.V2nx + d * this.nSqPix + .5),
        b = Math.floor(this.y0 + this.V2n2 + this.V2nx + (7 - b) * this.nSqPix + .5));
        return new CB.Point(d,b)
    }
    ;
    e.prototype.getSquareRect = function(b) {
        b = this.getPixPos(b);
        return new CB.V134(b.x,b.y,b.x + this.nSqPix,b.y + this.nSqPix)
    }
    ;
    e.prototype.getSquareCenterPos = function(b) {
        return this.getPixPos(b).add(this.V2q9())
    }
    ;
    e.prototype.isInMyArea = function(b, d) {
        var c = new CB.V134
          , f = this.cbcanvas.canvas.getBoundingClientRect();
        c.V136(new CB.Point(f.left + this.x0,f.top + this.y0), new CB.Size(this.width,this.height));
        return b >= c.left && b <= c.right && d >= c.top && d <= c.bottom
    }
    ;
    e.prototype.getClickPos = function(b) {
        var d = 0
          , c = 0
          , f = this.threeCmp.canvas;
        do
            d += f.offsetLeft - f.scrollLeft,
            c += f.offsetTop - f.scrollTop;
        while (f = f.offsetParent);
        return new CB.Point(b.pageX - d,b.pageY - c)
    }
    ;
    e.prototype.getClickedSquare = function(b) {
        var d = b.x - this.V2n2 - this.V2nx - this.x0;
        b = b.y - this.V2n2 - this.V2nx - this.y0;
        this.blackIsBottom ? (d = 7 - Math.floor(d / this.nSqPix),
        b = Math.floor(b / this.nSqPix)) : (d = Math.floor(d / this.nSqPix),
        b = 7 - Math.floor(b / this.nSqPix));
        return 0 <= d && 8 > d && 0 <= b && 8 > b ? 8 * d + b : -1
    }
    ;
    e.prototype.getGenerousClipRect = function(b, d) {
        var c = CB.Square.V16x(b);
        b = CB.Square.V16w(b);
        var f = CB.Square.V16x(d)
          , g = CB.Square.V16w(d);
        d = Math.max(c, f);
        var h = Math.min(b, g);
        c = CB.Square.V16o(Math.min(c, f), Math.max(b, g));
        b = CB.Square.V16o(d, h);
        c = this.getPixPos(c);
        b = this.getPixPos(b);
        b.add(new CB.Point(this.nSqPix,this.nSqPix));
        f = new CB.V134;
        f.V138(c.x, c.y, b.x, b.y);
        f.expand(this.nSqPix, this.nSqPix);
        return f
    }
    ;
    e.prototype.V2q9 = function() {
        return new CB.Point(Math.floor(this.nSqPix / 2),Math.floor(this.nSqPix / 2))
    }
    ;
    e.prototype.V2qa = function(b) {
        return this.getPixPos(this.getClickedSquare(b)).add(this.V2q9()).subtract(b)
    }
    ;
    e.prototype.V2pr = function(b) {
        return new CB.Point(-500,-500)
    }
    ;
    e.prototype.isReady = function() {
        return !0
    }
    ;
    e.prototype.flipBoard = function() {
        this.setBlackIsBottom(!this.blackIsBottom)
    }
    ;
    e.prototype.setBlackIsBottom = function(b) {
        this.threeCmp.camera && this.threeCmp.control.V340 && this.threeCmp.control.V340(!0)
    }
    ;
    e.prototype.addCubeMap = function(b, d, c) {
        b.cubeMap = d;
        b.cubeMapMaterial = c
    }
    ;
    e.prototype.onThreeRender = function(b, d) {
        this.character && this.character.V341();
        this.V32n() && this.cubeMap && this.cubeMap.update(b, d);
        this.V342 && this.V342.render()
    }
    ;
    e.prototype._game = null;
    e.prototype.setGame = function(b) {
        this._game && (this._game.removeOnCurPosChangedListener(this.V1h3),
        this._game.removeOnChangedListener(this.V1h0),
        this._game.removeOnNavigateListener(this.V2qh),
        this._game.removeOnMoveListener(this.V2qi));
        if (this._game = b) {
            b = this.V1h4.bind(this);
            var d = this.V2qk.bind(this)
              , c = this.V2ql.bind(this)
              , f = this.V2qm.bind(this);
            this.V1h3 = this._game.addOnCurPosChangedListener(b);
            this.V1h0 = this._game.addOnChangedListener(d);
            this.V2qh = this._game.addOnNavigateListener(c);
            this.V2qi = this._game.addOnMoveListener(f);
            this.V1h4()
        }
    }
    ;
    e.prototype.getGame = function() {
        return this._game
    }
    ;
    e.prototype.V1h4 = function() {
        this.V32m ? this.V33v = this._game.getCurPos().board : (this.V2pi(this._game.getCurPos().board, !0),
        this.V2pq())
    }
    ;
    e.prototype.V2qk = function() {
        this.moveEntry.clearPreMoves()
    }
    ;
    e.prototype.V2qm = function(b, d) {
        if (this.character) {
            if (b = this.moveEntry.getMySide(),
            b == this._game.getCurPos().sd) {
                this.V32m = !0;
                b = d.from;
                d = d.to;
                var c = new THREE.Vector3(this.getPositionX(b) + this.V334(this.board.get(b)),this.V335(this.board.get(b)) + 2,this.getPositionZ(b) + this.V334(this.board.get(this.nFrom)))
                  , f = new THREE.Vector3(this.getPositionX(d) + this.V334(this.board.get(d)),this.V335(this.board.get(d)) + 2,this.getPositionZ(d) + this.V334(this.board.get(this.nTo)))
                  , g = new CB.V11;
                g.writeFloat32(c.x);
                g.writeFloat32(c.y);
                g.writeFloat32(c.z);
                g.writeFloat32(f.x);
                g.writeFloat32(f.y);
                g.writeFloat32(f.z);
                g.writeInt(b);
                g.writeInt(d);
                this.character.animateMove(c, f, g)
            }
        } else
            this.moveEntry.onMove(),
            b = this.moveEntry.getMySide(),
            null !== b && b != this._game.getCurPos().sd || this.V1hn(!1)
    }
    ;
    e.prototype.V2ql = function() {
        this.V1hn(!1)
    }
    ;
    e.prototype.V2pq = function() {
        var b = []
          , d = this._game.getAnno(CB.AnnoType.SQUARE_LIST);
        if (d)
            for (var c = 0; c < d.length; c++)
                b.push(new CB.BoardColouredSquare(d[c].field,d[c].getColour()));
        if (d = this._game.getAnno(CB.AnnoType.ARROW_LIST))
            for (c = 0; c < d.length; c++)
                b.push(new CB.V1ea(d[c].from,d[c].to,d[c].getColour()))
    }
    ;
    e.prototype.undoAttributes = function() {
        if (void 0 !== this.V343 && this.V343.length)
            for (var b = 0; b < this.V343.length; b++)
                this.threeCmp.V33z(this.V343[b]),
                this.V343[b] = "";
        if (void 0 !== this.arrows && this.arrows.length) {
            for (b = 0; b < this.arrows.length; b++)
                this.threeCmp.V33z(this.arrows[b]);
            this.arrows = []
        }
    }
    ;
    e.prototype.V1hn = function(b, d) {
        if (this._game && this._game.mainLine.length) {
            var c = this._game.getLastMove();
            c && (c != this.V2pp || d) && (this.V2pp = c,
            this.queueBoardAttributes([new CB.V1ea(c.from,c.to)], {
                eraseQueue: !0,
                renderNow: b || !this.V2pj(),
                requestAnimInRender: !0
            }))
        }
    }
    ;
    e.prototype.V2oc = function(b) {}
    ;
    e.prototype.V1gt = function(b) {}
    ;
    e.prototype.V1gu = function(b) {}
    ;
    e.prototype.V1u1 = function() {
        return this.blackIsBottom ? CB.V15e.BLACK : CB.V15e.WHITE
    }
    ;
    e.prototype.V2qf = function(b) {
        b !== this.V1u1() && this.flipBoard()
    }
    ;
    e.prototype.markSquare = function(b, d) {
        this.queueBoardAttributes([new CB.BoardColouredSquare(b,d)], {
            eraseQueue: !1,
            renderNow: !0,
            requestAnimInRender: !0
        })
    }
    ;
    e.prototype.V1sk = function(b) {
        this.currPiece && (this.currPiece.hide(this.cbcanvas.bufferCtx),
        this.currPiece.deleteBackground());
        for (var d = 0; d < b.length; d++)
            this.queueBoardAttributes([new CB.BoardColouredSquare(b[d].sq,b[d].clr)], {
                eraseQueue: !1,
                renderNow: d == b.length - 1,
                requestAnimInRender: d == b.length - 1
            });
        this.currPiece && this.currPiece.moveTo(this.cbcanvas.bufferCtx, this.currPiece.pos)
    }
    ;
    e.prototype.V2qr = function(b) {
        if (void 0 !== this.V32z && this.V32z.length)
            for (b = 0; b < this.V32z.length; b++)
                this.V32z[b] && (this.threeCmp.V33z("Square" + b),
                this.V32z[b] = "")
    }
    ;
    e.prototype.restoreSquare = function(b) {}
    ;
    return e
}();
"use strict";
CB.BoardControl3D = function() {
    var e = function(b, d, c, f, g, h) {
        this.init(b, d, c, f, g, h)
    };
    CB.inherit(e, CB.RawBoardControl3D);
    e.prototype.V31z = function(b, d) {}
    ;
    e.prototype.V337 = function(b, d, c, f) {
        this.board.get(b) == CB.Piece.Vd5 && 6 == CB.Square.V16w(b) ? this.prom = CB.Piece.QUEEN : this.board.get(b) == CB.Piece.Vd6 && 1 == CB.Square.V16w(b) && (this.prom = CB.Piece.QUEEN + CB.V15e.V15g);
        return this.prom ? (this.board.V179(this.fromSq, this.V186, this.prom),
        !0) : !1
    }
    ;
    e.prototype.V344 = function(b) {
        void 0 === this.V345 && (this.V345 = this.boardSprites.getPromoSprite(CB.Piece.side(this.currPiece.piece)));
        this.movePieceToSq(this.V345, b)
    }
    ;
    e.prototype.V346 = function(b, d, c) {
        var f;
        this.board.get(b) == CB.Piece.Vd5 && 4 == CB.Square.V16w(b) && this.moveEntry.V1eu(b, d) ? f = CB.Square.V16o(CB.Square.V16x(d), 4) : this.board.get(b) == CB.Piece.Vd6 && 3 == CB.Square.V16w(b) && this.moveEntry.V1eu(b, d) && (f = CB.Square.V16o(CB.Square.V16x(d), 3));
        return void 0 !== f ? (c || (this.boardSprites.V17a(b, d, f),
        this.board.V17a(b, d, f),
        this.movePieceToSq(this.currPiece, this.V186),
        this.drawSquare(this.cbcanvas.bufferCtx, f),
        this.cbcanvas.requestAnimation(this.getSquareRect(f))),
        !0) : !1
    }
    ;
    e.prototype.V347 = function(b, d) {
        this.queueBoardAttributes([new CB.V1ea(b,d,this.moveEntry.V1e9())], {
            eraseQueue: !0,
            renderNow: !0,
            requestAnimInRender: !1
        })
    }
    ;
    e.prototype.grabPiece = function(b, d) {
        var c = this.boardSprites.getPiece(b);
        c && (c.fromSq = b);
        void 0 === c && b !== this.moveEntry.V1e7() || !c || (c.pieceName = CB.Piece.toString(this.board.get(b)),
        c.hasBackground() ? this.moveSprite(c, this.clickPos.add(this.V2mu)) : (c.pos = d,
        c.setBackground(V3ir.V3hy.getSquare(b, this.V33w))));
        return c
    }
    ;
    e.prototype.refreshMarkedSquares = function() {}
    ;
    return e
}();
"use strict";
function isMobile() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|bada|Opera Mini/i.test(navigator.userAgent)
}
function isTouchDevice() {
    return "ontouchstart"in window || 0 < navigator.MaxTouchPoints || 0 < navigator.msMaxTouchPoints
}
function isHighRes() {
    return 1280 <= screen.width && 800 <= screen.height
}
(function() {}
)();
"use strict";
CB.$ = function() {
    function e(q) {
        var t = document.createElement("div");
        t.innerHTML = q;
        return t.childNodes
    }
    function b(q) {
        l.prototype[q] = function() {
            return this.arr[q].apply(this, arguments)
        }
    }
    function d(q) {
        l.prototype[q] = function(t) {
            this.on(q, t)
        }
    }
    var c = /^#(\w|-)+$/
      , f = /^.(\w|-)+$/
      , g = /^\w+$/
      , h = /^\[(\w|-)+\]$/
      , k = /^<.*>$/
      , l = function(q, t) {
        var v = [];
        if (null != q && "" != q)
            if ("string" === typeof q) {
                t = t || document;
                var z = (new l(t)).single();
                q = q.trim();
                q.startsWith(">") ? (v = q.replace(">", "").trim(),
                v = (new l(v,z)).arr.filter(function(E) {
                    return E.parentNode == z
                })) : c.test(q) ? (q = q.substring(1),
                v = (v = document.getElementById(q)) ? [v] : []) : g.test(q) ? v = z.getElementsByTagName(q) : k.test(q) ? v = e(q) : z && (v = z.querySelectorAll(q, z))
            } else
                "object" === typeof q && (v = q.proloJQ ? q.arr : [q]);
        this.length = v.length;
        this.arr = [];
        for (q = 0; q < v.length; ++q)
            this[q] = v[q],
            this.arr.push(v[q]);
        this.proloJQ = !0
    };
    b("indexOf");
    b("find");
    b("findIndex");
    b("find");
    b("some");
    b("every");
    b("map");
    b("filter");
    b("reduce");
    b("forEach");
    l.prototype.single = function() {
        return 1 === this.arr.length ? this.arr[0] : null
    }
    ;
    l.prototype.first = function() {
        return this.arr[0]
    }
    ;
    l.prototype.last = function() {
        return this.arr[this.arr.length - 1]
    }
    ;
    l.prototype.addClass = function(q) {
        this.forEach(function(t) {
            t.classList && t.classList.add(q)
        });
        return this
    }
    ;
    l.prototype.removeClass = function(q) {
        q ? this.forEach(function(t) {
            t.classList && t.classList.remove(q)
        }) : this.forEach(function(t) {
            t.className = ""
        });
        return this
    }
    ;
    l.prototype.toggleClass = function(q) {
        this.forEach(function(t) {
            t.classList && t.classList.toggle(q)
        });
        return this
    }
    ;
    l.prototype.hide = function() {
        this.forEach(function(q) {
            if ("none" !== q.style.display) {
                var t = q.style.display;
                q.oldDisplay = "none" != t ? t : "block";
                q.style.display = "none"
            }
        })
    }
    ;
    l.prototype.show = function() {
        this.forEach(function(q) {
            q.style.display && "none" !== q.style.display || (q.style.display = q.oldDisplay || "block",
            delete q.oldDisplay)
        })
    }
    ;
    l.prototype.V348 = function(q) {
        this.forEach(function(t) {
            t.style.display = q
        })
    }
    ;
    l.prototype.toggle = function(q) {
        q ? this.show() : this.hide()
    }
    ;
    l.prototype.parent = function(q) {
        for (var t = this.single().parentNode; null != t; t = t.parentNode)
            if (p.is(t, q))
                return t;
        return null
    }
    ;
    l.prototype.on = function(q, t) {
        this.forEach(function(v) {
            v.addEventListener(q, t)
        });
        return this
    }
    ;
    l.prototype.off = function(q, t) {
        this.forEach(function(v) {
            v.removeEventListener(q, t)
        });
        return this
    }
    ;
    d("mousemove");
    d("mousedown");
    d("mouseup");
    d("click");
    l.prototype.html = function(q) {
        if (void 0 === q)
            return this.single().innerHTML;
        this.forEach(function(t) {
            t.innerHTML = q
        });
        return this
    }
    ;
    l.prototype.text = function(q) {
        if (void 0 === q)
            return this.single().textContent ? this.single().textContent : this.single().innerHTML;
        this.forEach(function(t) {
            t.textContent ? t.textContent = q : t.innerText = q
        });
        return this
    }
    ;
    l.prototype.prependTo = function(q) {
        var t = (new l(q)).single();
        this.forEach(function(v) {
            t.insertBefore(v, t.firstChild)
        })
    }
    ;
    l.prototype.prepend = function(q) {
        var t = new l(q);
        this.forEach(function(v) {
            t.prependTo(v)
        })
    }
    ;
    l.prototype.appendTo = function(q) {
        var t = (new l(q)).single();
        this.forEach(function(v) {
            t.appendChild(v)
        });
        return this
    }
    ;
    l.prototype.append = function(q) {
        var t = new l(q);
        this.forEach(function(v) {
            t.appendTo(v)
        });
        return this
    }
    ;
    l.prototype.insertBefore = function(q) {
        var t = new l(q);
        this.forEach(function(v) {
            t.forEach(function(z) {
                z.parentNode && z.parentNode.insertBefore(v, z)
            })
        });
        return this
    }
    ;
    l.prototype.empty = function() {
        this.html("");
        return this
    }
    ;
    l.prototype.remove = function() {
        this.forEach(function(q) {
            q.parentNode && q.parentNode.removeChild(q)
        });
        return this
    }
    ;
    l.prototype.attr = function(q, t) {
        if (void 0 === t) {
            var v = this.single().attributes[q];
            return v ? v.value : null
        }
        this.forEach(function(z) {
            z.setAttribute(q, t)
        });
        return this
    }
    ;
    l.prototype.data = function(q, t) {
        return this.attr("data-" + q, t)
    }
    ;
    var m = /^[+-]?(([0-9]*\.[0-9]+)|[0-9]+)/
      , n = "marginTop marginBottom marginLeft marginRight paddingTop paddingBottom paddingLeft paddingRight height width minHeight minWidth maxHeight maxWidth borderWidth left top bottom right".split(" ");
    l.prototype.css = function(q, t) {
        if (q && "object" == typeof q && !t) {
            for (var v in q)
                q.hasOwnProperty(v) && this.css(v, q[v]);
            return this
        }
        var z = minusToCamel(q);
        if (void 0 === t)
            return this.arr.length ? getComputedStyle(this.arr[0])[z] : null;
        this.forEach(function(E) {
            var C = t;
            null == C && (C = "");
            C = C.toString();
            var F = C;
            var P = m.exec(F);
            P ? (P = P[0],
            F = F.substring(P.length),
            F = {
                val: parseFloat(P),
                unit: F
            }) : F = null;
            F && !F.unit && (C += 0 <= n.indexOf(z) ? "px" : "");
            E.style[z] = C
        });
        return this
    }
    ;
    l.prototype.position = function() {
        return {
            top: parseFloat(this.css("top")),
            left: parseFloat(this.css("left"))
        }
    }
    ;
    var p = function(q, t) {
        return ObjUtil.isFunction(q) && !t ? (p.addOnReadyListener(q),
        null) : new l(q,t)
    };
    V3i1.initInstForListeners(p);
    V3i1.addInstEvent(p, "Ready");
    (new l(document)).on("DOMContentLoaded", function(q) {
        p.fireOnReady()
    });
    p.is = function(q, t, v) {
        return q ? t ? f.test(t) ? (t = t.replace(".", ""),
        q.classList && q.classList.contains(t)) : c.test(t) ? (t = t.replace("#", ""),
        q.id === t) : g.test(t) ? q.tagName == t : h.test(t) ? (t = t.replace("[", ""),
        t = t.replace("]", ""),
        q.attributes && q.hasAttribute(t)) : 0 <= p(t, v).indexOf(q) : !0 : !1
    }
    ;
    p.get = function(q) {
        return p("#" + q).single()
    }
    ;
    p.set = function(q, t) {
        p("#" + q).single().innerHTML = t
    }
    ;
    p.fn = l.prototype;
    return p
}();
"use strict";
CB.namespace("CB.DOM");
CB.DOM.get = function(e) {
    return document.getElementById(e)
}
;
CB.DOM.V349 = function(e, b) {
    e = document.createTextNode(e);
    var d = document.createElement("div");
    void 0 !== b && (d.className = b);
    document.body.appendChild(d);
    d.appendChild(e);
    void 0 !== CB.input ? document.body.insertBefore(d, CB.input) : document.body.appendChild(d)
}
;
CB.DOM.add = function(e, b, d) {
    var c = document.createElement("div");
    b && b.length ? (b = document.createElement(b),
    b.innerText = e) : b = document.createTextNode(e);
    void 0 !== d && (c.className = d);
    c.appendChild(b);
    document.body.appendChild(c)
}
;
CB.DOM.V34a = function(e, b, d) {
    var c = document.createElement("div")
      , f = document.createElement("a");
    f.href = e;
    f.target = "_blank";
    b && b.length && (f.textContent = b);
    void 0 !== d && (c.className = d);
    c.appendChild(f);
    document.body.appendChild(c)
}
;
CB.DOM.V34b = function() {
    var e = document.createElement("br");
    document.body.appendChild(e)
}
;
CB.DOM.insertBefore = function(e, b, d) {
    e = document.createTextNode(e);
    var c = document.createElement("div");
    c.className = void 0 !== d ? d : "Text";
    document.body.appendChild(c);
    c.appendChild(e);
    void 0 !== document.getElementById(b) ? document.body.insertBefore(c, document.getElementById(b)) : document.body.appendChild(c)
}
;
CB.DOM.V34c = function(e) {
    for (var b = document.cookie.split(";"), d = 0; d < b.length; d++) {
        var c = b[d].split("=")
          , f = c[0].trim();
        c = 1 < c.length ? c[1] : "";
        if (f == e)
            return decodeURIComponent(c)
    }
    return ""
}
;
CB.DOM.codeAccountName = function(e) {
    return CB.V1b.base64.V2a(CB.V1b.V105(e))
}
;
CB.DOM.Va0 = function(e) {
    "guest" != e && this.setCodedCookie("AccountName64", e)
}
;
CB.DOM.V34d = function(e) {
    return this.getCodedCookie("AccountName64", e)
}
;
CB.DOM.setCodedCookie = function(e, b) {
    CB.DOM.V9w(e, this.codeAccountName(b))
}
;
CB.DOM.getCodedCookie = function(e, b) {
    e = CB.DOM.V34c(e);
    e = CB.V1b.base64.decode(e);
    b && (e = CB.V1b.V106(e),
    e = e.replace("%25", "%"),
    e = e.replace("%20", " "));
    return e
}
;
CB.DOM.V9w = function(e, b) {
    var d = new Date;
    if (b) {
        d.setYear(d.getFullYear() + 1);
        var c = d.toGMTString()
    } else
        c = "Thu, 01 Jan 1970 00:00:01 GMT";
    d = ".chessbase.com";
    -1 != document.URL.search(/localhost/i) && (d = "localhost");
    e = e + "=" + encodeURIComponent(b) + ";expires=" + c + ";path=/;";
    d.length && (e += "domain=" + d + ";");
    document.cookie = e + "SameSite=Lax;"
}
;
CB.DOM.V9v = function(e) {
    CB.DOM.V9w(e, "")
}
;
CB.DOM.V34e = function(e, b) {
    void 0 !== e && (e.className = 0 < e.className.length ? e.className + (" " + b) : b)
}
;
CB.DOM.V34f = function(e, b) {
    void 0 !== e && (e.className = e.className.replace(new RegExp("\b" + b + "\b"), ""))
}
;
CB.DOM.resize = function(e, b, d) {
    if ("string" === typeof e || "number" === typeof e)
        e = document.getElementById(e);
    void 0 !== e && (e.style.width = b,
    e.style.height = d)
}
;
CB.DOM.setText = function(e, b) {
    e && ("undefined" == typeof e.textContent ? e.innerText = b : e.textContent = b)
}
;
function textOut(e, b) {
    CB.V34g || (CB.DOM.add(e, "", b),
    void 0 !== CB.input && CB.input.scrollIntoView())
}
function TRACE(e) {
    V3ir.config.debug && textOut(e, "LogTrace")
}
function EXCEPTION(e, b) {
    void 0 !== b && (e += " (" + b + ")");
    textOut(e, "LogException")
}
function CHAT(e) {
    textOut(e, "LogChat")
}
CB.V110 = function() {
    var e = {}, b;
    e.V34h = function() {
        if (void 0 === b) {
            var c = document.createElement("style");
            c.setAttribute("media", "screen");
            c.appendChild(document.createTextNode(""));
            document.head.appendChild(c);
            b = c.sheet
        }
        return b
    }
    ;
    e.V34i = function(c) {
        var f = document.createElement("style");
        f.id = c;
        f.setAttribute("media", "screen");
        f.appendChild(document.createTextNode(""));
        document.head.appendChild(f);
        return f.sheet
    }
    ;
    e.V111 = function(c, f) {
        try {
            void 0 !== e.V34h().addRule ? e.V34h().addRule(c, f) : e.V34h().insertRule(c + " { " + f + " }", e.V34h().cssRules.length)
        } catch (g) {
            CB.V3("CSS:addRules", g)
        }
    }
    ;
    e.V34j = function(c, f) {
        return "background-image:linear-gradient( to right," + c + "," + f + ")"
    }
    ;
    e.V34k = function() {
        return "display:block;margin-left:auto;margin-right:auto;text-align:center"
    }
    ;
    e.getHeader = function(c, f, g) {
        return g ? "<" + c + ' style="' + g + '">' + f + "</" + c + ">" : "<" + c + ">" + f + "</" + c + ">"
    }
    ;
    e.V34l = function(c) {
        for (var f = e.V34h(), g = 0; g < f.cssRules.length; ++g)
            if (f.cssRules[g].type == window.CSSRule.KEYFRAMES_RULE && f.cssRules[g].name == c)
                return f.cssRules[g];
        g = CB.Vq.V123() ? "-webkit-" : "";
        void 0 === f.insertRule ? f.addRule("@" + g + "keyframes " + c + "{ 0% { top: 10px } 100% { top: 30px } }") : f.insertRule("@" + g + "keyframes " + c + "{ 0% { top: 10px } 100% { top: 30px } }", f.cssRules.length);
        for (g = 0; g < f.cssRules.length; ++g)
            if (f.cssRules[g].type == window.CSSRule.KEYFRAMES_RULE && f.cssRules[g].name == c)
                return f.cssRules[g];
        return null
    }
    ;
    var d = {};
    e.V34m = function(c) {
        c = [].concat(c);
        for (var f = 0; f < c.length; f++)
            1 < c[f].length && void 0 == d[c[f]] && (CB.V110.V34h().insertRule("." + c[f] + "{ background-image: url( " + V3ir.config.getRibbonPath() + c[f] + ".png ) !important; }", 0),
            d[c[f]] = 1)
    }
    ;
    return e
}();
"use strict";
CB.V2t3 = function() {
    var e = 0
      , b = {
        append: !0
    }
      , d = function(f, g, h, k) {
        f && (void 0 === this.elDOM && (this.elDOM = document.createElement(f)),
        f = k || {},
        f = ObjUtil.copyTo(b, f, !0),
        this.uniqueId || (this.uniqueId = ++e),
        this.V34n = [],
        this.V34o = !1,
        void 0 !== g ? g instanceof CB.V2t3 ? (this.V34p = g.elDOM,
        g.addChild(this),
        this.V34o = !0) : this.V34p = g : this.V34p = document.body,
        this.elDOM.id = h ? h : "CBEl" + this.uniqueId,
        this.debug = this.elDOM.id,
        g = f.append,
        this.V34p && (g ? this.V34p.appendChild(this.elDOM) : this.V34p.insertBefore(this.elDOM, this.V34p.firstChild)),
        this.style = this.elDOM.style,
        this.setVisible(!1))
    };
    d.prototype.destroy = function() {
        this.V34q || (this.V34n.forEach(function(f, g) {
            this.V34n[g] && this.V34n[g].destroy()
        }
        .bind(this)),
        void 0 !== this.V34r && this.elDOM.removeChild(this.V34r.V34s().dom),
        this.V34p.removeChild(this.elDOM),
        this.V34q = !0)
    }
    ;
    d.prototype.changeParentElDOM = function(f) {
        if (this.V34o)
            throw "!Change parent ElDom on Child El ";
        this.V34p && this.V34p.contains(this.elDOM) && this.V34p.removeChild(this.elDOM);
        (this.V34p = f) && this.V34p.appendChild(this.elDOM)
    }
    ;
    d.prototype.addChild = function(f) {
        this.V34n[f.uniqueId] = f
    }
    ;
    d.prototype.removeChild = function(f) {
        delete this.V34n[f.uniqueId]
    }
    ;
    d.prototype.V2s2 = function() {
        this.V34n.forEach(function(f, g) {
            this.V34n[g] && this.V34n[g].destroy()
        }
        .bind(this));
        this.V34n = []
    }
    ;
    d.prototype.setVisible = function(f) {
        this.style.visibility = f ? "visible" : "hidden";
        this.V34n.forEach(function(g, h) {
            this.V34n[h] && this.V34n[h].setVisible(f)
        }
        .bind(this));
        void 0 !== this.V34r && (f ? this.V34r.show() : this.V34r.hide())
    }
    ;
    d.prototype.isVisible = function() {
        return "visible" == this.style.visibility
    }
    ;
    d.prototype.V2sd = function(f) {
        this.setPos(f.topLeft.x, f.topLeft.y);
        this.setSize(f.w, f.h)
    }
    ;
    d.prototype.V34t = function() {
        this.style.position = "relative"
    }
    ;
    d.prototype.setPos = function(f, g) {
        f = Math.floor(f);
        g = Math.floor(g);
        this.x = f;
        this.y = g;
        this.style.position = "absolute";
        this.style.left = Math.round(f) + "px";
        this.style.top = Math.round(g) + "px"
    }
    ;
    d.prototype.getSize = function() {
        return {
            w: this.elDOM.width,
            h: this.elDOM.height
        }
    }
    ;
    d.prototype.setSize = function(f, g) {
        f = Math.floor(f);
        g = Math.floor(g);
        this.w = f;
        this.h = g;
        this.elDOM.width = f;
        this.elDOM.height = g;
        this.style.width = f + "px";
        this.style.height = g + "px";
        void 0 !== this.V34r && (this.V34r.V34u(f),
        this.V34r.V34v(g));
        this.V34w && (this.style.lineHeight = g + "px");
        this.onResize()
    }
    ;
    d.prototype.onResize = function() {}
    ;
    d.prototype.V34v = function(f) {
        this.h = f = Math.floor(f);
        this.style.height = f + "px";
        void 0 !== this.V34r && this.V34r.V34v(f)
    }
    ;
    d.prototype.setPosSize = function(f, g, h, k) {
        this.setPos(f, g);
        this.setSize(h, k)
    }
    ;
    d.prototype.V2wq = function(f) {
        this.style.zIndex = f
    }
    ;
    d.prototype.setBorder = function(f, g, h) {
        f = Math.floor(f);
        this.style.borderWidth = f + "px";
        void 0 !== g && (this.style.borderColor = g);
        this.style.borderStyle = void 0 !== h ? h : "solid"
    }
    ;
    d.prototype.setCssClass = function(f) {
        this.elDOM.className = f
    }
    ;
    d.prototype.V2mq = function(f, g, h) {
        this.style.boxShadow = f + "px " + f + "px " + g + "px 0px " + h
    }
    ;
    d.prototype.V34x = function(f) {
        f = Math.floor(f);
        this.style.borderRadius = f + "px"
    }
    ;
    d.prototype.setBackgroundColor = function(f) {
        this.backgroundColor = f.toString();
        this.style.backgroundColor = f.toString()
    }
    ;
    d.prototype.setColor = function(f) {
        this.style.color = f.toString()
    }
    ;
    d.prototype.V34y = function(f) {
        this.style.margin = f + "px"
    }
    ;
    d.prototype.V34z = function(f) {
        this.style.padding = f + "px"
    }
    ;
    d.prototype.V2wq = function(f) {
        this.style.zIndex = f
    }
    ;
    d.prototype.V350 = function(f) {
        this.V34r = f
    }
    ;
    d.V351 = function(f, g) {
        f.style.pointerEvents = g ? "all" : "none"
    }
    ;
    d.prototype.V352 = function(f) {
        this.elDOM.addEventListener("click", f)
    }
    ;
    d.prototype.setHandler = function(f, g) {
        this.elDOM.addEventListener(f, g)
    }
    ;
    d.prototype.V353 = function() {
        return this.elDOM
    }
    ;
    d.addClass = function(f, g) {
        if (!f.className || 0 > f.className.indexOf(g))
            f.className += " " + g
    }
    ;
    d.removeClass = function(f, g) {
        f.className = f.className.replace(g, "");
        f.className = f.className.replace(/\s+/g, " ")
    }
    ;
    var c = {
        select: "input",
        change: "input",
        submit: "form",
        reset: "form",
        error: "img",
        load: "img",
        abort: "img"
    };
    d.V2t4 = function(f) {
        var g = document.createElement(c[f] || "div");
        f = "on" + f;
        var h = f in g;
        h || (g.setAttribute(f, "return;"),
        h = "function" == typeof g[f]);
        return h
    }
    ;
    d.prototype.V354 = function() {
        this.elDOM.style.background = "#101010";
        this.elDOM.style.backgroundImage = "url( " + CB.V10z() + "Media/Chess/OrangeBrighterSoft.jpg )";
        this.elDOM.style.backgroundSize = "100% 100%";
        this.elDOM.style.backgroundRepeat = "no-repeat";
        this.elDOM.style.backgroundPosition = "bottom left"
    }
    ;
    return d
}();
"use strict";
CB.V2lj = function() {
    var e = function(b, d, c) {
        CB.V2lj.superClass.call(this, "div", b, d, c)
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.setImage = function(b, d, c) {
        void 0 === this.V355 ? (this.V355 = document.createElement("img"),
        this.V355.setAttribute("src", b),
        this.V355.setAttribute("flag", "alternate text"),
        this.V355.setAttribute("height", c + "px"),
        this.V355.setAttribute("width", d + "px"),
        this.elDOM.appendChild(this.V355)) : this.V355.setAttribute("src", b)
    }
    ;
    e.prototype.setCssClass = function(b) {
        this.elDOM.className = b
    }
    ;
    e.prototype.setText = function(b) {
        "undefined" != typeof b && (void 0 === this.V356 && (this.V356 = document.createElement("span"),
        this.V356.style.display = "inline-block",
        this.elDOM.appendChild(this.V356),
        this.V356.style.cursor = "pointer"),
        b = b.toString(),
        b.replace(/</g, "("),
        b.replace(/>/g, ")"),
        this.V356.textContent ? this.V356.textContent = b : this.V356.innerText ? this.V356.innerText = b : this.V356.innerHTML = b)
    }
    ;
    e.prototype.setTextAlign = function(b) {
        this.style.textAlign = b;
        this.V356 && (this.V356.textAlign = b)
    }
    ;
    e.prototype.getText = function() {
        if (this.V356) {
            if (this.V356.textContent)
                return this.V356.textContent;
            if (this.V356.innerText)
                return this.V356.innerText
        }
        return ""
    }
    ;
    e.prototype.V2wq = function(b) {
        this.style.zIndex = b
    }
    ;
    e.prototype.V2mm = function(b) {
        if (b)
            void 0 !== this.V357 ? this.V357.style.fontSize = Math.round(b) + "px" : (this.V356 && (this.V356.style.fontSize = Math.round(b) + "px"),
            this.style.fontSize = Math.round(b) + "px",
            this.V2yn = Math.round(b),
            this.V358 && this.V2ws());
        else
            throw Error("FontSize = 0");
    }
    ;
    e.prototype.setFontFamily = function(b) {
        this.style.fontFamily = b;
        this.V356 && (this.V356.style.fontFamily = b)
    }
    ;
    e.prototype.V359 = function(b) {
        this.style.fontWeight = b
    }
    ;
    e.prototype.V2mn = function(b) {
        void 0 === this.V356 && this.setText(" ");
        void 0 !== this.V356 && (this.V356.style.verticalAlign = b,
        this.V356.style.display = "inline-block",
        this.V356.style.lineHeight = "normal",
        void 0 !== this.h && (this.style.lineHeight = this.h + "px"))
    }
    ;
    e.prototype.V2ws = function() {
        this.setTextAlign("center");
        this.V2mn("middle");
        this.V358 = !0;
        this.style.display = "block";
        this.V34w = !0
    }
    ;
    e.prototype.V35a = function() {
        this.V35b("right")
    }
    ;
    e.prototype.V35c = function() {
        this.V35b("left")
    }
    ;
    e.prototype.V35b = function(b) {
        this.setTextAlign(b);
        this.V2mn("middle");
        this.V358 = !1;
        this.style.display = "block"
    }
    ;
    e.prototype.V2mo = function() {
        return void 0 !== this.V356 ? this.V356.clientWidth : 0
    }
    ;
    e.prototype.V2mp = function() {
        return void 0 !== this.V356 ? this.V356.clientHeight : 0
    }
    ;
    e.prototype.V35d = function() {
        $(this.elDOM).hover(function() {
            $(this).css("filter", "brightness(108%)")
        }, function() {
            $(this).css("filter", "brightness(100%)")
        })
    }
    ;
    e.prototype.V35e = function(b, d, c, f) {
        void 0 === this.V357 && (this.V357 = document.createElement("a"),
        this.elDOM.appendChild(this.V357));
        this.V357.href = b;
        this.V357.target = "_blank";
        d && d.length && (this.V357.textContent ? this.V357.textContent = d : this.V357.innerText = d);
        c && c.length && (this.V357.className = c);
        f && this.V357.setAttribute("onclick", "if ( typeof ( ga ) !== 'undefined' && CB.Vq.runsOnChessBaseDomain() ) ga( 'send', 'event', 'link', \"" + (d + '");'))
    }
    ;
    return e
}();
"use strict";
CB.CanvasElement = function() {
    var e = function(b, d) {
        CB.CanvasElement.superClass.call(this, "canvas", b, d);
        this._uniqueId = d
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.setCssClass = function(b) {
        this.elDOM.className = b
    }
    ;
    e.prototype.V35f = function(b, d) {
        this.elDOM.width = b;
        this.elDOM.height = d
    }
    ;
    e.prototype.render = function() {}
    ;
    e.prototype.V354 = function() {
        this.elDOM.style.background = "#101010";
        this.elDOM.style.backgroundImage = "url( " + CB.V10z() + "Media/Chess/OrangeBrighterSoft.jpg )";
        this.elDOM.style.backgroundSize = "100% 100%";
        this.elDOM.style.backgroundRepeat = "no-repeat";
        this.elDOM.style.backgroundPosition = "bottom left"
    }
    ;
    return e
}();
"use strict";
CB.V2uy = function() {
    var e = (new Date).getTime() + Math.floor(Math.random() + 1E5)
      , b = function(d) {
        this.uniqueId = e++;
        this.background = new CB.V2lj(d,"aCanvParentBG" + this.uniqueId);
        this.background.V34t();
        this.canvasEl = new CB.CanvasElement(this.background,"aCanvParentCanvas" + this.uniqueId)
    };
    b.prototype.createCanvas = function(d, c) {
        return this.canvas = new CB.V35g(this.canvasEl.elDOM.id,d,c)
    }
    ;
    b.prototype.changeParent = function(d) {
        this.background.elDOM.parentElement.removeChild(this.background.elDOM);
        d && d.appendChild(this.background.elDOM)
    }
    ;
    b.prototype.V35h = function() {
        return this.background.elDOM
    }
    ;
    b.prototype.changeParentElDOM = function(d) {
        this.background.changeParentElDOM(d)
    }
    ;
    b.prototype.setVisible = function(d) {
        this.background.setVisible(d)
    }
    ;
    b.prototype.setPosSize = function(d, c, f, g) {
        this.background.setPosSize(d, c, f, g);
        this.canvasEl.setPosSize(0, 0, f, g);
        this.canvas && this.canvas.resize(f, g)
    }
    ;
    b.prototype.setSize = function(d, c) {
        this.background.setSize(d, c);
        this.canvasEl.setSize(d, c);
        this.canvas && this.canvas.resize(d, c)
    }
    ;
    b.prototype.getSize = function() {
        return this.canvasEl.getSize()
    }
    ;
    b.prototype.Vu = function(d, c, f) {
        var g = this.canvas.bufferCtx;
        g.font = c;
        g.shadowBlur = 4;
        g.shadowColor = "hsla(0,0%,0%, 0.35)";
        g.fillStyle = f;
        g.fillText(d, 60, 100);
        this.canvas.requestAnimation()
    }
    ;
    b.prototype.V354 = function() {
        this.background.V354()
    }
    ;
    return b
}();
"use strict";
CB.namespace("CB.UIElement");
CB.UIElement = function() {
    var e = function(b, d, c) {
        CB.UIElement.superClass.call(this, b, d, c);
        this.elDOM && (this.elDOM.className = "cb-button",
        this.elDOM.addEventListener("mousedown", this.onMouseDown.bind(this)),
        this.elDOM.addEventListener("mouseup", this.onMouseUp.bind(this)),
        this.elDOM.addEventListener("mouseover", this.V35i.bind(this)),
        this.elDOM.addEventListener("mouseleave", this.onMouseLeave.bind(this)))
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.setText = function(b) {
        b.replace(/</g, "(");
        b.replace(/>/g, ")");
        this.elDOM.innerHTML = b
    }
    ;
    e.prototype.V2s8 = function(b) {
        this.elDOM.disabled = !b
    }
    ;
    e.prototype.V35j = function() {
        return !this.elDOM.disabled
    }
    ;
    e.prototype.setHandler = function(b) {
        this.elDOM.addEventListener("click", function(d) {
            b(d)
        })
    }
    ;
    e.prototype.setBackgroundColor = function(b) {
        this.backgroundColor = b.toString();
        this.style.backgroundColor = b.toString()
    }
    ;
    e.prototype.V35k = function(b) {
        this.V35l = b.toString()
    }
    ;
    e.prototype.V35m = function(b) {
        this.V35n = b.toString()
    }
    ;
    e.prototype.onMouseDown = function() {
        this.V35n && (this.style.backgroundColor = this.V35n)
    }
    ;
    e.prototype.onMouseUp = function() {
        this.V35l ? this.style.backgroundColor = this.V35l : this.backgroundColor && (this.style.backgroundColor = this.backgroundColor)
    }
    ;
    e.prototype.V35i = function() {
        this.V35l && (this.style.backgroundColor = this.V35l)
    }
    ;
    e.prototype.onMouseLeave = function() {
        this.backgroundColor && (this.style.backgroundColor = this.backgroundColor)
    }
    ;
    e.prototype.setColor = function(b) {
        this.style.color = b.toString()
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.Button");
CB.Button = function() {
    var e = function(b, d, c) {
        b && (CB.Button.superClass.call(this, "button", b, d),
        this.elDOM.className = c || "cb-button")
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.setImage = function(b) {
        this.style.backgroundImage = "url( " + b + ")";
        this.style.backgroundRepeat = "no-repeat";
        this.style.backgroundPosition = "center"
    }
    ;
    e.prototype.setHandler = function(b) {
        this.elDOM.addEventListener("click", b)
    }
    ;
    e.prototype.setText = function(b) {
        var d = this.elDOM;
        d && ("undefined" == typeof d.textContent ? d.innerText = b : d.textContent = b)
    }
    ;
    e.prototype.V2s8 = function(b) {
        this.elDOM.disabled = !b
    }
    ;
    return e
}();
CB.CloseButton = function() {
    var e = function(b, d, c) {
        CB.CloseButton.superClass.call(this, b, d, "cb-CloseButton");
        this.V356 = document.createElement("span");
        this.V356.style.display = "inline-block";
        "undefined" != typeof this.V356.textContent ? this.V356.textContent = "X" : this.V356.innerText = "X";
        this.V356.style.textAlign = "centered";
        this.V356.style.verticalAlign = "middle";
        this.V356.style.cursor = "default";
        this.V356.style.fontFamily = "Roboto, Helvetica, sans-serif";
        this.elDOM.appendChild(this.V356);
        c && this.setHandler(c)
    };
    CB.inherit(e, CB.Button);
    e.prototype.onResize = function() {
        var b = Math.round(.8 * this.h);
        this.style.fontSize = b + "px";
        this.V356.style.fontSize = b + "px";
        this.V356.style.lineHeight = this.h + "px"
    }
    ;
    return e
}();
CB.namespace("CB.Input");
CB.Input = function() {
    var e = function(b, d, c) {
        b && (CB.Input.superClass.call(this, "input", b, d),
        this.elDOM.className = c || "cb-input")
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.setImage = function(b) {
        this.style.backgroundImage = "url( " + b + ")";
        this.style.backgroundRepeat = "no-repeat";
        this.style.backgroundPosition = "center"
    }
    ;
    e.prototype.V35o = function(b) {
        this.elDOM.addEventListener("change", b)
    }
    ;
    e.prototype.setText = function(b) {
        var d = this.elDOM;
        d && ("undefined" == typeof d.textContent ? d.innerText = b : d.textContent = b)
    }
    ;
    e.prototype.V2s8 = function(b) {
        this.elDOM.disabled = !b
    }
    ;
    return e
}();
"use strict";
CB.namespace("CB.Select");
CB.Select = function() {
    var e = function(b, d) {
        CB.Select.superClass.call(this, "select", b, d);
        this.elDOM.className = "cb-select";
        Object.defineProperty(this, "value", {
            get: this.V2sa,
            set: this.V35p
        });
        Object.defineProperty(this, "enabled", {
            get: this.V35j,
            set: this.V2s8
        })
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.V35p = function(b) {
        this.elDOM.value = b
    }
    ;
    e.prototype.V2sa = function() {
        return this.elDOM.value
    }
    ;
    e.prototype.V2s8 = function(b) {
        this.elDOM.disabled = !b
    }
    ;
    e.prototype.V35j = function() {
        return !this.elDOM.disabled
    }
    ;
    e.prototype.setOptions = function(b) {
        this.V35q();
        b.forEach(function(d) {
            d = d || "";
            var c = document.createElement("option");
            "object" === typeof d ? (c.text = d.text,
            c.value = d.value) : (c.text = d,
            c.value = d);
            this.elDOM.add(c)
        }
        .bind(this))
    }
    ;
    e.prototype.setHandler = function(b) {
        this.elDOM.addEventListener("change", function(d) {
            b(d)
        })
    }
    ;
    e.prototype.V35q = function() {
        for (; this.elDOM.firstChild; )
            this.elDOM.removeChild(this.elDOM.firstChild)
    }
    ;
    return e
}();
"use strict";
CB.V2ov = function() {
    var e = new CB.Color(255,255,248,.95)
      , b = new CB.Color(0,0,0,.9)
      , d = 1
      , c = function() {
        this.uniqueId = d++;
        this.background = new CB.V2lj(document.body,"bTTipBG" + this.uniqueId);
        this.V2wr = new CB.V2lj(this.background,"bSTTipText" + this.uniqueId);
        this.background.elDOM.style.zIndex = 99999;
        this.V2wr.setBackgroundColor(e);
        this.V2wr.setColor(b);
        this.V2wr.setFontFamily("Roboto, Helvetica, sans-serif")
    };
    c.prototype.destroy = function() {
        this.background.destroy()
    }
    ;
    c.prototype.setText = function(f) {
        this.V2wr.setText(f)
    }
    ;
    c.prototype.setVisible = function(f) {
        this.background.setVisible(f)
    }
    ;
    c.prototype.setPosSize = function(f, g) {
        var h = Math.max(8, Math.round(.4 * g.h))
          , k = new CB.V134(f.x,f.y,f.x + g.w,f.y + g.h)
          , l = g.w
          , m = (k.w - l) / 2;
        k.w = l;
        k.move(m, 0);
        this.background.setPos(f.x, f.y);
        this.background.setSize(g.w, g.h);
        f = Math.max(1, Math.min(4, Math.round(Math.sqrt(g.w / 100))));
        this.background.V2mq(f, 8 * f, "rgba( 60, 30, 20, 0.3 )");
        this.V2wr.setPos(0, 0);
        this.V2wr.setSize(g.w, g.h);
        this.V2wr.setBorder(1, new CB.Color(0,0,0,.5));
        this.V2wr.V34x(4);
        this.V2wr.V2ws();
        do
            this.V2wr.V2mm(h),
            --h;
        while (4 < h && (this.V2wr.V2mo() > l || this.V2wr.V2mp() > g.h - 3))
    }
    ;
    return c
}();
"use strict";
CB.namespace("CB.CheckBox");
CB.CheckBox = function() {
    var e = function(b, d) {
        CB.CheckBox.superClass.call(this, "form", b, d);
        this.V35r = this.elDOM.id + "-chk";
        this.V35s = '<input type="checkbox" id=' + this.V35r + " />";
        this.elDOM && (this.elDOM.innerHTML = this.V35s)
    };
    CB.inherit(e, CB.V2t3);
    e.prototype.V2s7 = function(b) {
        var d = document.getElementById(this.V35r);
        d.checked = d.defaultChecked = b
    }
    ;
    e.prototype.V2s6 = function() {
        return document.getElementById(this.V35r).checked
    }
    ;
    e.prototype.V2s8 = function(b) {
        document.getElementById(this.V35r).disabled = !b
    }
    ;
    e.prototype.V35j = function() {
        return !document.getElementById(this.V35r).disabled
    }
    ;
    e.prototype.setText = function(b) {
        b.replace(/</g, "(");
        b.replace(/>/g, ")");
        this.elDOM && (this.elDOM.innerHTML = this.V35s + b)
    }
    ;
    return e
}();
"use strict";
CB.V35g = function() {
    var e = function(b, d, c) {
        this.canvas = document.getElementById(b);
        if (null === this.canvas)
            throw Error("ID " + b + " not found.");
        this.ctx = this.canvas.getContext("2d");
        this.V35t(b);
        this.V35u(b);
        this.idDOM = b;
        this.V35v = this.V35w();
        this.control = d.createControl(this, this.canvas.width, this.canvas.height, c);
        this.V35x = this.canvas.width;
        this.V35y = this.canvas.height;
        if (d.onControlReady)
            d.onControlReady(this.control);
        this.V2n4 = new CB.Timer(this.V2n5.bind(this))
    };
    e.prototype.V35z = function() {
        this.V2n4.stop();
        this.el && null != this.el.destroy && this.el.destroy();
        this.control.V2lq()
    }
    ;
    e.prototype.V13p = function(b, d) {
        this.ctx.beginPath();
        this.ctx.moveTo(b.x, b.y);
        this.ctx.lineTo(d.x, d.y);
        this.ctx.stroke()
    }
    ;
    e.prototype.V360 = function(b, d, c, f) {
        void 0 !== f && (this.ctx.fillStyle = f);
        void 0 !== c && (this.ctx.font = c + "px sans serif");
        this.ctx.fillText(d, b.x, b.y)
    }
    ;
    e.drawEllipse = function(b, d, c, f, g) {
        b.save();
        b.beginPath();
        b.translate(d - f, c - g);
        b.scale(f, g);
        b.arc(1, 1, 1, 0, 2 * Math.PI, !1);
        b.restore();
        b.lineWidth = 5;
        b.stroke()
    }
    ;
    e.prototype.resize = function(b, d) {
        5 > b && (b = 5);
        5 > d && (d = 5);
        this.V361 || (this.control && this.control.beforeResize && this.control.beforeResize(),
        this.V2n4.runOnce(10, function() {
            this.V2n5(b, d)
        }
        .bind(this)));
        this.V35x = b;
        this.V35y = d
    }
    ;
    e.prototype.V362 = function() {
        this.V35x && this.V35y && this.resize(this.V35x, this.V35y)
    }
    ;
    e.prototype.V363 = function(b) {
        this.V361 = b
    }
    ;
    e.prototype.onMouseDown = function(b) {
        var d = this.V364(b);
        (new CB.V134).V135(this.canvas.getBoundingClientRect());
        this.control.onMouseDown(b, d);
        return !1
    }
    ;
    e.prototype.onContextMenu = function(b) {
        var d = this.V364(b);
        (new CB.V134).V135(this.canvas.getBoundingClientRect());
        if (this.control.onContextMenu)
            this.control.onContextMenu(b, d);
        b.preventDefault();
        return !1
    }
    ;
    e.prototype.onMouseUp = function(b) {
        var d = this.V364(b);
        this.control.onMouseUp(b, d);
        return !1
    }
    ;
    e.prototype.onMouseMove = function(b) {
        var d = this.V364(b);
        this.control.onMouseMove(b, d);
        return !1
    }
    ;
    e.prototype.onMouseWheel = function(b) {
        var d = this.V364(b);
        this.control.onMouseWheel(b, d)
    }
    ;
    e.prototype.onDoubleClick = function(b) {
        var d = this.V364(b);
        this.getClickPos(d);
        this.control.onDoubleClick(b, d)
    }
    ;
    e.prototype.onMouseEnter = function(b) {
        var d = this.V364(b);
        this.control.onMouseEnter(b, d)
    }
    ;
    e.prototype.onMouseLeave = function(b) {
        var d = this.V364(b);
        this.control.onMouseLeave(b, d)
    }
    ;
    e.prototype.onTouchStart = function(b) {
        if (!this.isDefaultPrevented(b)) {
            b.touches && (this.V365 = b.touches[0].clientX,
            this.V366 = b.touches[0].clientY);
            var d = this.V364(b);
            this.control.onMouseDown(b, d)
        }
    }
    ;
    e.prototype.onTouchEnd = function(b) {
        if (!this.isDefaultPrevented(b)) {
            delete this.V365;
            var d = this.V364(b);
            this.control.onMouseUp(b, d)
        }
    }
    ;
    e.prototype.onTouchMove = function(b) {
        if (!this.isDefaultPrevented(b)) {
            var d = this.V364(b);
            this.control.onMouseMove(b, d);
            delete this.V365
        }
    }
    ;
    e.prototype.isDefaultPrevented = function(b) {
        return void 0 !== b.parentEvent && void 0 !== b.parentEvent.browserEvent ? b.parentEvent.browserEvent.defaultPrevented : b.defaultPrevented
    }
    ;
    e.prototype.V326 = function(b) {
        delete this.V365
    }
    ;
    e.prototype.V325 = function(b) {
        delete this.V365
    }
    ;
    e.prototype.onKeyDown = function(b) {}
    ;
    e.prototype.V368 = function(b) {}
    ;
    e.prototype.V369 = function(b) {}
    ;
    e.prototype.V364 = function(b) {
        return b.touches && b.touches.length ? new CB.Point(this.V36a(b.touches[0].pageX),this.V36b(b.touches[0].pageY)) : b.changedTouches && b.changedTouches.length ? new CB.Point(this.V36a(b.changedTouches[0].pageX),this.V36b(b.changedTouches[0].pageY)) : new CB.Point(this.V36a(b.pageX),this.V36b(b.pageY))
    }
    ;
    e.prototype.V36a = function(b) {
        return (b - this.canvas.getBoundingClientRect().left - window.pageXOffset) * this.V35v
    }
    ;
    e.prototype.V36b = function(b) {
        return (b - this.canvas.getBoundingClientRect().top - window.pageYOffset) * this.V35v
    }
    ;
    e.prototype.V36c = function(b) {
        return this.canvas.getBoundingClientRect().left - window.pageXOffset + b / this.V35v
    }
    ;
    e.prototype.V36d = function(b) {
        return this.canvas.getBoundingClientRect().top - window.pageYOffset + x / this.V35v
    }
    ;
    e.prototype.V12j = function(b) {
        return this.V35v ? b / this.V35v : b
    }
    ;
    e.prototype.pixToZoom = function(b) {
        return this.V35v ? b / this.V35v : b
    }
    ;
    e.prototype.V12j = function(b) {
        return this.V35v ? b * this.V35v : b
    }
    ;
    e.prototype.V36e = function(b) {
        var d = this.V12j(b.left)
          , c = this.V12j(b.top);
        return new CB.V134(d,c,d + b.w * this.V35v,c + b.h * this.V35v)
    }
    ;
    e.prototype.pixToZoomRect = function(b) {
        var d = this.pixToZoom(b.left)
          , c = this.pixToZoom(b.top);
        return new CB.V134(d,c,d + b.w / this.V35v,c + b.h / this.V35v)
    }
    ;
    e.prototype.getClickPos = function(b) {
        var d = this.canvas.getBoundingClientRect();
        return new CB.Point(b.getX() - d.left,b.getY() - d.top)
    }
    ;
    e.prototype.getBoundingClientRect = function() {
        var b = this.canvas.getBoundingClientRect();
        return new CB.V134(b.left,b.top,b.right,b.bottom)
    }
    ;
    e.prototype.V36f = function(b) {}
    ;
    e.prototype.V35u = function(b) {
        b = CB.$.get(b);
        b = CB.$(b);
        CB.V2t3.V2t4("touchstart") && (b.on("touchstart", this.onTouchStart.bind(this)),
        b.on("touchend", this.onTouchEnd.bind(this)),
        b.on("touchmove", this.onTouchMove.bind(this)),
        b.on("touchcancel", this.V325.bind(this)),
        b.on("touchleave", this.V326.bind(this)));
        CB.V2t3.V2t4("mousedown") && (b.on("mousedown", this.onMouseDown.bind(this)),
        b.on("mouseup", this.onMouseUp.bind(this)),
        b.on("mousemove", this.onMouseMove.bind(this)),
        b.on("mousewheel", this.onMouseWheel.bind(this)),
        b.on("mouseenter", this.onMouseEnter.bind(this)),
        b.on("mouseleave", this.onMouseLeave.bind(this)),
        b.on("dblclick", this.onDoubleClick.bind(this)));
        if (CB.V2t3.V2t4("contextmenu"))
            b.on("contextmenu", this.onContextMenu.bind(this));
        b.on("keydown", this.onKeyDown.bind(this));
        b.on("keyup", this.V368.bind(this));
        b.on("keypress", this.V369.bind(this))
    }
    ;
    e.prototype.V35t = function(b) {
        this.buffer = document.createElement("canvas");
        this.buffer.width = this.canvas.width;
        this.buffer.height = this.canvas.height;
        this.bufferCtx = this.buffer.getContext("2d")
    }
    ;
    e.prototype.V151 = function(b) {
        this.clipRect = this.clipRect ? this.clipRect.V13d(b) : b
    }
    ;
    e.prototype.V153 = function() {
        this.ctx.save();
        this.clipRect ? CB.V13l.clipRect(this.ctx, this.clipRect) : CB.V13l.clipRect(this.ctx, new CB.V134(1,1,this.canvas.width - 1,this.canvas.height - 1));
        this.ctx.globalCompositeOperation = "copy";
        try {
            this.ctx.drawImage(this.buffer, 0, 0)
        } catch (b) {}
        this.ctx.restore();
        delete this.clipRect;
        this.V36g = !1;
        this.V36h = null
    }
    ;
    e.prototype.V36i = function() {
        var b = this.ctx.globalCompositeOperation;
        this.ctx.globalCompositeOperation = "copy";
        this.ctx.drawImage(this.buffer, 0, 0);
        this.ctx.globalCompositeOperation = b;
        this.V36g = !1;
        delete this.clipRect;
        this.V36j = null
    }
    ;
    e.prototype.joinClipRect = function(b) {
        this.clipRect = this.clipRect ? this.clipRect.getUnion(b) : b
    }
    ;
    e.prototype.V2po = function() {
        this.V36h && window.cancelAnimationFrame(this.V36h);
        this.V36j && window.cancelAnimationFrame(this.V36j)
    }
    ;
    e.prototype.block = function(b) {
        this.blocked = b
    }
    ;
    e.prototype.requestAnimation = function(b) {
        this.blocked || 1 > this.canvas.width || 1 > this.canvas.height || (b ? (this.joinClipRect(b),
        this.V36g = !0,
        this.V36h && window.cancelAnimationFrame(this.V36h),
        this.V36h = window.requestAnimationFrame(this.V153.bind(this))) : (this.V36g = !0,
        this.V36j && window.cancelAnimationFrame(this.V36j),
        this.V36h && window.cancelAnimationFrame(this.V36h),
        this.clipRect = new CB.V134(1,1,this.canvas.width,this.canvas.height),
        this.V36j = window.requestAnimationFrame(this.V153.bind(this))))
    }
    ;
    e.prototype.V36k = function() {
        this.control.V2ls(this.bufferCtx)
    }
    ;
    e.prototype.V2m3 = function() {
        this.control && this.control.drawWood && this.control.drawWood(this.bufferCtx)
    }
    ;
    e.prototype.V2n5 = function(b, d) {
        b = Math.floor(b);
        d = Math.floor(d);
        this.V36l(b, d) || (this.clipRect = this.V36m = new CB.V134(0,b,0,d),
        this.V35v = 1,
        this.V36n(this.canvas, b, d),
        this.V36n(this.buffer, b, d),
        this.control && this.control.resize(b, d));
        this.V36o && this.V36o()
    }
    ;
    e.prototype.V36n = function(b, d, c) {
        b.width = d;
        b.height = c;
        b.style.width = d + "px";
        b.style.height = c + "px"
    }
    ;
    e.prototype.V36l = function(b, d) {
        return 1 != this.V35w() ? (this.clipRect = this.V36m = new CB.V134(0,b,0,d),
        this.V35v = this.V35w(),
        this.V36p(this.canvas, this.ctx, b, d, this.V35v),
        this.V36p(this.buffer, this.bufferCtx, b, d, this.V35v),
        this.control.resize(b * this.V35v, d * this.V35v),
        !0) : !1
    }
    ;
    e.prototype.V35w = function() {
        var b = window.devicePixelRatio;
        b = Math.min(3, b);
        CB.Vq.V12h(b);
        return b
    }
    ;
    e.prototype.V36p = function(b, d, c, f, g) {
        b.width = Math.round(c * g);
        b.height = Math.round(f * g);
        b.style.width = c + "px";
        b.style.height = f + "px"
    }
    ;
    e.prototype.V36q = function() {
        return this.ctx.webkitBackingStorePixelRatio || this.ctx.mozBackingStorePixelRatio || this.ctx.msBackingStorePixelRatio || this.ctx.oBackingStorePixelRatio || this.ctx.backingStorePixelRatio || 1
    }
    ;
    e.prototype.V12g = function() {
        alert(0);
        return window.devicePixelRatio
    }
    ;
    e.prototype.hide = function() {
        this.canvas.style.visibility = "hidden"
    }
    ;
    e.prototype.show = function() {
        this.canvas.style.visibility = "visible"
    }
    ;
    e.prototype.V2lo = function() {
        this.blocked || (delete this.clipRect,
        this.control && this.control.draw(this.bufferCtx),
        this.requestAnimation(new CB.V134(1,1,this.canvas.width - 1,this.canvas.height - 1), !0))
    }
    ;
    return e
}();
(function() {
    for (var e = 0, b = ["ms", "moz", "webkit", "o"], d = 0; d < b.length && !window.requestAnimationFrame; ++d)
        window.requestAnimationFrame = window[b[d] + "RequestAnimationFrame"],
        window.cancelAnimationFrame = window[b[d] + "CancelAnimationFrame"] || window[b[d] + "CancelRequestAnimationFrame"];
    for (d = 0; d < b.length && !window.cancelAnimationFrame; ++d)
        window.cancelAnimationFrame = window[b[d] + "CancelAnimationFrame"] || window[b[d] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(c, f) {
        var g = (new Date).getTime()
          , h = Math.max(0, 16 - (g - e));
        f = window.setTimeout(function() {
            c(g + h)
        }, h);
        e = g + h;
        return f
    }
    );
    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(c) {
        clearTimeout(c)
    }
    )
}
)();
"use strict";
CB.V36r = function() {
    var e = function(b, d) {
        this.control = d.createControl3D(b, 0, 0);
        if (d.onControlReady)
            d.onControlReady(this.control);
        this.V35u(b);
        this.V2n4 = new CB.Timer(this.V2n5.bind(this))
    };
    e.prototype.onThreeRender = function(b, d) {
        this.control.onThreeRender(b, d)
    }
    ;
    e.prototype.dispose = function() {
        this.control.dispose()
    }
    ;
    e.prototype.V13p = function(b, d) {}
    ;
    e.prototype.V360 = function(b, d, c, f) {}
    ;
    e.prototype.resize = function(b, d) {
        this.width = b;
        this.height = d;
        this.V361 || this.V2n4.runOnce(100, function() {
            this.V2n5(b, d)
        }
        .bind(this))
    }
    ;
    e.prototype.V31z = function() {}
    ;
    e.prototype.V2n5 = function(b, d) {
        b = Math.floor(b);
        d = Math.floor(d);
        this.control.resize(b, d)
    }
    ;
    e.prototype.block = function(b) {
        this.blocked = b
    }
    ;
    e.prototype.V363 = function(b) {
        this.V361 = b
    }
    ;
    e.prototype.onTouchStart = function(b) {
        this.control.onTouchStart(b)
    }
    ;
    e.prototype.onTouchEnd = function(b) {
        this.control.onTouchEnd(b)
    }
    ;
    e.prototype.onTouchMove = function(b) {
        this.control.onTouchMove(b)
    }
    ;
    e.prototype.V325 = function(b) {
        this.control.V325(b)
    }
    ;
    e.prototype.V326 = function(b) {
        this.control.V326(b)
    }
    ;
    e.prototype.onMouseDown = function(b) {
        this.control.onMouseDown(b)
    }
    ;
    e.prototype.onMouseUp = function(b) {
        this.control.onMouseUp(b)
    }
    ;
    e.prototype.onMouseMove = function(b) {
        this.control.onMouseMove(b)
    }
    ;
    e.prototype.onMouseWheel = function(b) {}
    ;
    e.prototype.onDoubleClick = function(b) {
        this.getClickPos(b);
        this.control.onDoubleClick(b)
    }
    ;
    e.prototype.onMouseEnter = function(b) {
        this.control.onMouseEnter(b)
    }
    ;
    e.prototype.onMouseLeave = function(b) {
        this.control.onMouseLeave(b)
    }
    ;
    e.prototype.onKeyDown = function(b) {}
    ;
    e.prototype.V368 = function(b) {}
    ;
    e.prototype.V369 = function(b) {}
    ;
    e.prototype.getClickPos = function(b) {
        var d = this.canvas.getBoundingClientRect();
        return new CB.Point(b.getX() - d.left,b.getY() - d.top)
    }
    ;
    e.prototype.getBoundingClientRect = function() {
        var b = this.canvas.getBoundingClientRect();
        return new CB.V134(b.left,b.top,b.right,b.bottom)
    }
    ;
    e.prototype.V36f = function(b) {}
    ;
    e.prototype.V35u = function(b) {
        CB.V2t3.V2t4("touchstart") && (b.canvas.addEventListener("touchstart", this.onTouchStart.bind(this), !1),
        b.canvas.addEventListener("touchend", this.onTouchEnd.bind(this), !1),
        b.canvas.addEventListener("touchmove", this.onTouchMove.bind(this), !1),
        b.canvas.addEventListener("touchcancel", this.V325.bind(this), !1),
        b.canvas.addEventListener("touchleave", this.V326.bind(this), !1));
        b.canvas.addEventListener("mousedown", this.onMouseDown.bind(this), !1);
        b.canvas.addEventListener("mousemove", this.onMouseMove.bind(this), !1);
        b.canvas.addEventListener("mouseup", this.onMouseUp.bind(this), !1)
    }
    ;
    e.prototype.V151 = function(b) {
        this.clipRect = this.clipRect ? this.clipRect.V13d(b) : b
    }
    ;
    e.prototype.joinClipRect = function(b) {
        this.clipRect = this.clipRect ? this.clipRect.getUnion(b) : b
    }
    ;
    e.prototype.requestAnimation = function(b, d) {}
    ;
    e.prototype.V36k = function() {
        this.control.V2ls(this.ctx);
        this.control.V2ls(this.bufferCtx)
    }
    ;
    e.prototype.V2m3 = function() {
        this.control.draw(this.ctx);
        this.control.draw(this.bufferCtx)
    }
    ;
    e.prototype.V2lo = function() {
        this.V31z()
    }
    ;
    e.prototype.pixToZoom = function(b) {
        return this.V35v ? b / this.V35v : b
    }
    ;
    e.prototype.V12j = function(b) {
        return this.V35v ? b * this.V35v : b
    }
    ;
    e.prototype.V36e = function(b) {
        var d = this.V12j(b.left)
          , c = this.V12j(b.top);
        return new CB.V134(d,c,d + b.w * this.V35v,c + b.h * this.V35v)
    }
    ;
    e.prototype.pixToZoomRect = function(b) {
        var d = this.pixToZoom(b.left)
          , c = this.pixToZoom(b.top);
        return new CB.V134(d,c,d + b.w / this.V35v,c + b.h / this.V35v)
    }
    ;
    return e
}();
(function() {
    for (var e = 0, b = ["ms", "moz", "webkit", "o"], d = 0; d < b.length && !window.requestAnimationFrame; ++d)
        window.requestAnimationFrame = window[b[d] + "RequestAnimationFrame"],
        window.cancelAnimationFrame = window[b[d] + "CancelAnimationFrame"] || window[b[d] + "CancelRequestAnimationFrame"];
    for (d = 0; d < b.length && !window.cancelAnimationFrame; ++d)
        window.cancelAnimationFrame = window[b[d] + "CancelAnimationFrame"] || window[b[d] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(c, f) {
        var g = (new Date).getTime()
          , h = Math.max(0, 16 - (g - e));
        f = window.setTimeout(function() {
            c(g + h)
        }, h);
        e = g + h;
        return f
    }
    );
    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(c) {
        clearTimeout(c)
    }
    )
}
)();
"use strict";
CB.V1v = function() {
    var e = function() {
        window.localStorage ? this.V8w = window.localStorage : window.sessionStorage && (this.V8w = window.sessionStorage)
    };
    e.prototype.save = function(b, d) {
        d && void 0 !== this.V8w && (this.V8w[b] = JSON.stringify(d))
    }
    ;
    e.prototype.load = function(b) {
        if (void 0 !== this.V8w && this.V8w[b] && "undefined" !== this.V8w[b])
            return JSON.parse(this.V8w[b])
    }
    ;
    return e
}();
"use strict";
CB.V2ye = function() {
    var e = 1
      , b = function(d, c, f) {
        this.audio = document.createElement("audio");
        var g = this.V36t();
        this.ok = !1;
        g ? (this.url = d + g,
        this.audio.addEventListener("canplay", this.V36u.bind(this), !1),
        this.audio.addEventListener("canplaythrough", this.V36v.bind(this), !1),
        this.audio.addEventListener("ended", this.V36w.bind(this), !1),
        this.audio.addEventListener("error", this.V141.bind(this), !1),
        this.audio.addEventListener("abort", this.V141.bind(this), !1),
        this.audio.src = d + g,
        this.V36s = c,
        this.V36x = this.V1bi = !1,
        this.uniqueId = e++,
        f ? this.audio.preload = "none" : (this.audio.preload = "metadata",
        this.audio.load(),
        this.ok = !0)) : this.url = "!format!"
    };
    b.prototype.load = function() {
        this.audio && this.audio.load();
        this.ok = !0
    }
    ;
    b.prototype.toString = function() {
        return this.url
    }
    ;
    b.prototype.play = function() {
        try {
            this.audio.play()
        } catch (d) {}
    }
    ;
    b.prototype.pause = function() {
        try {
            this.audio.pause()
        } catch (d) {
            console.log("Pause Audio: " + d)
        }
    }
    ;
    b.prototype.V36u = function() {}
    ;
    b.prototype.V36v = function() {}
    ;
    b.prototype.V36w = function() {
        this.V36s && this.V36s(this.uniqueId)
    }
    ;
    b.prototype.V141 = function() {}
    ;
    b.prototype.V36t = function() {
        if (this.audio.canPlayType) {
            var d = this.audio.canPlayType("audio/mpeg");
            if ("" != d)
                return ".mp3";
            d = this.audio.canPlayType("audio/ogg");
            if ("" != d)
                return ".ogg"
        }
        return ""
    }
    ;
    return b
}();
CB.V2x1 = function() {
    var e = function() {
        this.queue = [];
        this.V1od = 0;
        this.V1k7 = !0
    };
    e.prototype.push = function(b) {
        if (this.V1k7 && b) {
            var d = b;
            "string" == typeof b && (d = new CB.V2ye(b));
            d.V36s = this.V36y.bind(this);
            d.ok && this.queue.push(d);
            if (1 == this.queue.length)
                try {
                    d.play()
                } catch (c) {
                    console.log("Audio: " + c)
                }
        }
    }
    ;
    e.prototype.enable = function(b) {
        (this.V1k7 = b) || this.V1ro()
    }
    ;
    e.prototype.V2xn = function() {
        return this.V1k7
    }
    ;
    e.prototype.V1ro = function() {
        this.V36z && this.V36z.pause();
        for (var b = 0; b < this.queue.length; b++)
            this.queue[b] && this.queue[b].pause();
        this.queue = [];
        delete this.V36z
    }
    ;
    Object.defineProperty(e.prototype, "length", {
        get: function() {
            return this.queue.length
        },
        set: function(b) {
            this.queue.length > b && this.queue.splice(0, this.queue.length - b)
        },
        enumerable: !0
    });
    e.prototype.V36y = function(b) {
        for (var d = 0; d < this.queue.length; d++)
            if (this.queue[d] && this.queue[d].uniqueId == b) {
                d < this.queue.length - 1 && this.queue[d + 1].play();
                this.queue.splice(d, 1);
                break
            }
    }
    ;
    return e
}();
"use strict";
CB.HintTypes = {
    NONE: 0,
    FROM: 1,
    TO: 2,
    CAPTURE: 3,
    CHECK: 4,
    PIECE: 5,
    MATE_THREAT: 9,
    PIN: 11,
    GARDEZ_QUEEN: 16,
    GARDEZ_ROOK: 17,
    GARDEZ_MINOR_PIECE: 18,
    EVADES_ATTACK: 19,
    COVERS_PIECE: 20,
    SACRIFICE: 21,
    RECAPTURE: 40,
    GARDEZ_QUEEN_ME: 41,
    GARDEZ_ROOK_ME: 42,
    GARDEZ_MINOR_PIECE_ME: 43,
    GARDEZ_PAWN_ME: 44,
    MATE_THREAT_MYKING: 50,
    MATE: 51,
    BOOK: 52,
    EXCHANGE: 53,
    OFFER_EXCHANGE: 54,
    PASSED_PAWN: 55,
    PROMOTE: 56,
    THREAT: 57,
    THREAT_AGAINST_ME: 58,
    THREAT_MOVE: 59,
    GARDEZ_PAWN: 60,
    BLOCK_ATTACK: 61,
    BLOCK_CHECK: 62,
    EVADE_CHECK: 63,
    DOUBLE_ATTACK: 64,
    EVADES_EXCHANGE: 65,
    ONLY_MOVE: 66,
    WIN_MATERIAL: 67,
    FULL_MOVE: 98,
    TEXT: 99,
    V10x: 100,
    toString: function(e) {
        if ("string" == typeof e)
            return e;
        var b = CB.HintTypes;
        switch (e) {
        case b.NONE:
            return "---";
        case b.FROM:
            return "From";
        case b.TO:
            return "To";
        case b.PIN:
            return lm.PIN_IMP;
        case b.CAPTURE:
            return lm.CAPTURE_SOMETHING;
        case b.CHECK:
            return lm.GIVE_CHECK;
        case b.PIECE:
            return "Piece";
        case b.MATE_THREAT:
            return lm.THREATEN_MATE;
        case b.MATE_THREAT_MYKING:
            return lm.OPP_THREATENS_MATE;
        case b.GARDEZ_QUEEN:
            return lm.ATTACK_THE_QUEEN;
        case b.GARDEZ_ROOK:
            return lm.ATTACK_A_ROOK;
        case b.GARDEZ_MINOR_PIECE:
            return lm.ATTACK_A_MINOR_PIECE;
        case b.GARDEZ_PAWN:
            return lm.ATTACK_A_PAWN;
        case b.GARDEZ_QUEEN_ME:
            return lm.OPP_THREATENS_QUEEN;
        case b.GARDEZ_ROOK_ME:
            return lm.OPP_THREATENS_ROOK;
        case b.GARDEZ_MINOR_PIECE_ME:
            return lm.OPP_THREATENS_MINOR;
        case b.GARDEZ_PAWN_ME:
            return lm.OPP_THREATENS_PAWN;
        case b.RECAPTURE:
            return lm.RECAPTURE_MATERIAL;
        case b.MATE:
            return lm.MATE_IMP;
        case b.BOOK:
            return lm.STILL_IN_BOOK;
        case b.EXCHANGE:
            return lm.EXCHANGE_IMP;
        case b.OFFER_EXCHANGE:
            return lm.OFFER_EXCHANGE_IMP;
        case b.PASSED_PAWN:
            return lm.CREATE_PASSED_PAWN;
        case b.PROMOTE:
            return lm.PROMOTE_IMP;
        case b.THREAT:
            return lm.THREATEN_IMP;
        case b.THREAT_AGAINST_ME:
            return lm.WATCH_OUT;
        case b.THREAT_MOVE:
            return "threat is";
        case b.COVERS_PIECE:
            return lm.COVER_SOMETHING;
        case b.BLOCK_ATTACK:
            return lm.BLOCK_ATTACK;
        case b.EVADES_ATTACK:
            return lm.EVADE_ATTACK_IMP;
        case b.EVADES_EXCHANGE:
            return lm.EVADE_EXCHANGE_IMP;
        case b.EVADE_CHECK:
            return lm.EVADE_CHECK;
        case b.BLOCK_CHECK:
            return lm.BLOCK_CHECK;
        case b.DOUBLE_ATTACK:
            return lm.DOUBLE_ATTACK_IMP;
        case b.SACRIFICE:
            return lm.SACRIFICE_SOMETHING;
        case b.ONLY_MOVE:
            return lm.ONLY_MOVE;
        case b.WIN_MATERIAL:
            return lm.WIN_MATERIAL
        }
        for (var d in this)
            if (this[d] == e)
                return d;
        return "Unknown HintType: " + e
    }
};
var Hint = function(e, b, d) {
    this.type = e || CB.HintTypes.NONE;
    "" == this.text;
    this.sq = b || -1;
    this.move = d;
    this.piece = this.n = 0
};
Hint.prototype.equals = function(e) {
    if (e)
        return this.type == e.type && this.sq == e.sq && this.text == e.text
}
;
Hint.makeTextHint = function(e, b) {
    var d = new Hint;
    d.text = e;
    d.sq = b || -1;
    d.type = CB.HintTypes.TEXT;
    return d
}
;
Hint.makeHint = function(e, b) {
    var d = new Hint;
    d.type = e;
    d.sq = b || -1;
    return d
}
;
Hint.prototype.display = function(e, b) {
    this.type == CB.HintTypes.THREAT_MOVE ? (b && b.drawArrow(this.move.from, this.move.to, "hsla( 0, 50%, 50%, 0.9 )"),
    e(lm.RED_ARROW_THREAT)) : e(this.toString())
}
;
Hint.prototype.getText = function() {
    return this.text + this.getDecorateText()
}
;
Hint.prototype.getDecorateText = function() {
    var e = "";
    this.book && this.type != CB.HintTypes.BOOK ? e += " (" + lm.THEORY + ")" : this.strong && (e = this.strong.precise ? e + (" (" + lm.PRECISE_MOVE + ")") : e + (" (" + lm.BRILLIANT_MOVE + ")"));
    return e
}
;
Hint.prototype.toString = function() {
    return this.toStringSimple() + this.getDecorateText()
}
;
Hint.prototype.toStringSimple = function(e) {
    var b = "";
    this.type != CB.HintTypes.FULL_MOVE && this.type != CB.HintTypes.FROM && (b = this.text || CB.HintTypes.toString(this.type));
    3 < b.length && e && (e = b.charAt(b.length - 1),
    b = "." == e || "!" == e ? b.substring(0, b.length - 1) + ":" : b + ":");
    return b
}
;
Hint.prototype.isRedundantToCapture = function() {
    var e = CB.HintTypes;
    return this.type == e.RECAPTURE || this.type == e.EXCHANGE
}
;
Hint.prototype.isFullMove = function() {
    return this.type == CB.HintTypes.FULL_MOVE
}
;
Hint.prototype.isOpeningHint = function() {
    return this.type == CB.HintTypes.BOOK || this.book
}
;
Hint.prototype.sortVal = function() {
    if (this.nSort)
        return this.nSort;
    var e = CB.HintTypes;
    switch (this.type) {
    default:
    case e.NONE:
        throw "Hint.sortVal";
    case e.FULL_MOVE:
        return 0;
    case e.FROM:
        return 1;
    case e.TO:
        return 2;
    case e.PIECE:
        return 3;
    case e.CHECK:
        return 8;
    case e.CAPTURE:
        return 3 < this.n ? 21 : 9;
    case e.TEXT:
        return 20;
    case e.PIN:
        return 23;
    case e.BOOK:
        return 25;
    case e.EXCHANGE:
        return 30;
    case e.GARDEZ_PAWN:
        return 32;
    case e.GARDEZ_MINOR_PIECE:
        return 33;
    case e.GARDEZ_ROOK:
        return 34;
    case e.GARDEZ_QUEEN:
        return 35;
    case e.OFFER_EXCHANGE:
        return this.piece == CB.Piece.PAWN ? 31 : 36;
    case e.GARDEZ_PAWN_ME:
        return 41;
    case e.GARDEZ_MINOR_PIECE_ME:
        return 42;
    case e.GARDEZ_ROOK_ME:
        return 43;
    case e.GARDEZ_QUEEN_ME:
        return 45;
    case e.COVERS_PIECE:
        return 46;
    case e.BLOCK_ATTACK:
    case e.BLOCK_CHECK:
        return 47;
    case e.EVADES_ATTACK:
    case e.EVADES_EXCHANGE:
    case e.EVADE_CHECK:
        return 48;
    case e.THREAT_MOVE:
        return 55;
    case e.THREAT:
        return 56;
    case e.THREAT_AGAINST_ME:
        return 57;
    case e.RECAPTURE:
        return 65;
    case e.PASSED_PAWN:
        return 60;
    case e.PROMOTE:
        return 61;
    case e.DOUBLE_ATTACK:
        return 62;
    case e.SACRIFICE:
        return 70;
    case e.WIN_MATERIAL:
        return 71;
    case e.MATE_THREAT:
        return 80;
    case e.MATE:
        return 82;
    case e.MATE_THREAT_MYKING:
        return 85;
    case e.ONLY_MOVE:
        return 90
    }
}
;
CB.Hints = function() {
    var e = function() {};
    e.V1qx = "/Common/Chess/Engine/Engine.js";
    e.engine = new CB.V1ke(0,e.V1qx,null,e);
    CB.Vq.Vr() || e.engine.load();
    e.V370 = 0;
    e.V1uo = function(b, d, c, f, g, h, k) {
        var l = []
          , m = b.getCurPos()
          , n = ObjUtil.clone(m);
        n.makeMove(d);
        var p = !1;
        n.canMakeNullMove() && (n.makeNullMove(),
        p = !0);
        n.isLegal() ? (e.V371 = function(q, t) {
            l = [];
            m.getSideToMove() === CB.V15e.BLACK && (f = -f,
            q = -q);
            e.V372 = q;
            e.V370 = f;
            g && (l = [new Hint(CB.HintTypes.ONLY_MOVE)].concat(l));
            2E4 < f && (l = [new Hint(CB.HintTypes.MATE)].concat(l));
            p && 2E4 < q && (l = [new Hint(CB.HintTypes.MATE_THREAT)].concat(l));
            m.isCheck() && (l = this.V373(m, b.getLastMove(), d, l));
            e.isRecapture(m, b, d) ? l = [new Hint(CB.HintTypes.RECAPTURE)].concat(l) : e.isExchange(m, d, c) && (l = [new Hint(CB.HintTypes.EXCHANGE)].concat(l));
            l = this.V374(m, d, l);
            l = this.V375(m, d, c, l);
            l = this.V376(m, d, l);
            l = this.V377(m, n, d, l);
            l = this.V378(m, d, c, l);
            var v = new CB.V17g;
            t.moves[0] && p && (v.V17u(t.moves[0]),
            l = this.V379(n, m, d, v, CB.Piece.QUEEN, q, 400, CB.HintTypes.GARDEZ_QUEEN, l),
            l = this.V379(n, m, d, v, CB.Piece.ROOK, q, 250, CB.HintTypes.GARDEZ_ROOK, l),
            l = this.V379(n, m, d, v, CB.Piece.KNIGHT, q, 200, CB.HintTypes.GARDEZ_MINOR_PIECE, l),
            l = this.V379(n, m, d, v, CB.Piece.BISHOP, q, 200, CB.HintTypes.GARDEZ_MINOR_PIECE, l),
            l = this.V379(n, m, d, v, CB.Piece.PAWN, q, 40, CB.HintTypes.GARDEZ_PAWN, l),
            m.getSideToMove() === CB.V15e.WHITE ? e.V372 > e.V370 : e.V372 < e.V370) && (l = this.V37a(m, d, v, e.V372, e.V370, l));
            q = m.V3hu();
            q = this.V37b(b, d, q);
            t = e.V37c(m, c, d, !1);
            t.hint && l.push(t.hint);
            t.strHint && (v = Hint.makeTextHint(t.strHint),
            t.nSort && (v.nSort = t.nSort),
            l.push(v),
            l = l.concat(q.filter(function(z) {
                return z.type != CB.HintTypes.PIECE && z.type != CB.HintTypes.FROM
            })));
            t.strHint || t.hint || (l = l.concat(q));
            l = e.V37d(l);
            l.push(new Hint(CB.HintTypes.FULL_MOVE));
            this.V37e(b, d, c, l, h, k)
        }
        ,
        e.engine.V1ki(n),
        e.engine.search(k || 1500, 15)) : h(l, d)
    }
    ;
    e.V37e = function(b, d, c, f, g, h) {
        var k = b.getCurPos()
          , l = ObjUtil.clone(k)
          , m = !1;
        l.canMakeNullMove() && (l.makeNullMove(),
        m = !0);
        l.isLegal() ? (e.V371 = null,
        e.V37f = function(n, p) {
            var q = ObjUtil.clone(f);
            if (m) {
                var t = n;
                l.getSideToMove() === CB.V15e.BLACK && (t = -n);
                2E4 < n && (q = [new Hint(CB.HintTypes.MATE_THREAT_MYKING)].concat(q));
                var v = new CB.V17g;
                if (p.moves[0]) {
                    v.V17u(p.moves[0]);
                    q = this.V37g(l, k, d, v, CB.Piece.QUEEN, n, 400, CB.HintTypes.GARDEZ_QUEEN_ME, q);
                    q = this.V37g(l, k, d, v, CB.Piece.ROOK, n, 170, CB.HintTypes.GARDEZ_ROOK_ME, q);
                    q = this.V37g(l, k, d, v, CB.Piece.KNIGHT, n, 150, CB.HintTypes.GARDEZ_MINOR_PIECE_ME, q);
                    q = this.V37g(l, k, d, v, CB.Piece.BISHOP, n, 150, CB.HintTypes.GARDEZ_MINOR_PIECE_ME, q);
                    q = this.V37g(l, k, d, v, CB.Piece.PAWN, n, 80, CB.HintTypes.GARDEZ_PAWN_ME, q);
                    if (k.getSideToMove() === CB.V15e.WHITE ? t < e.V370 : t > e.V370)
                        q = this.V37h(k, d, v, e.V370, t, q);
                    q = this.V37i(l, k, d, v, q);
                    q = this.V37j(b, c, q)
                }
            }
            q && (q.sort(function(z, E) {
                return E.sortVal() - z.sortVal()
            }),
            g(q, d))
        }
        ,
        e.engine.V1ki(l),
        e.engine.search(h || 1500, 15)) : g(f, move)
    }
    ;
    e.V377 = function(b, d, c, f) {
        if (c.vct)
            return f;
        var g = new Att;
        b = g.evaluatePins(b);
        g = g.evaluatePins(d);
        if (!d.getBTM() && g.valW)
            for (d = 0; d < g.pinsW.length; d++) {
                if (g.pinsW[d].pinnerSq == c.to && !b.hasPinnedW(g.pinsW[d].pinnedSq)) {
                    f = [new Hint(CB.HintTypes.PIN)].concat(f);
                    break
                }
            }
        else if (!d.getBTM() && g.valB)
            for (d = 0; d < g.pinsB.length; d++)
                if (g.pinsB[d].pinnerSq == c.to && !b.hasPinnedB(g.pinsB[d].pinnedSq)) {
                    f = [new Hint(CB.HintTypes.PIN)].concat(f);
                    break
                }
        return f
    }
    ;
    e.V376 = function(b, d, c) {
        b = (new Att).checkDoubleAttack(b, d);
        if (b.length) {
            var f = "";
            b.forEach(function(g) {
                f += CB.Square.toString(g) + ","
            });
            c.push(new Hint(CB.HintTypes.DOUBLE_ATTACK,d.to))
        }
        return c
    }
    ;
    e.V375 = function(b, d, c, f) {
        if ((b.board[d.from] & CB.Piece.V15j) == CB.Piece.PAWN) {
            var g = b.board[d.from] & CB.Piece.V15h;
            if (!ChessKnowledge.isPassedPawn(b, d.from, g) && c.length && c[0].equals(d)) {
                b = ObjUtil.clone(b);
                b.makeMove(c[0]);
                for (var h = 1; h < c.length && 0 != c[h].vct; h++)
                    b.makeMove(c[h]);
                ChessKnowledge.isPassedPawn(b, d.to, g) && (f = [new Hint(CB.HintTypes.PASSED_PAWN,d.to)].concat(f))
            }
        }
        return f
    }
    ;
    e.V373 = function(b, d, c, f) {
        d && c.to != d.to && (CB.Piece.V15k(b.board[c.from]) == CB.Piece.KING ? f.push(new Hint(CB.HintTypes.EVADE_CHECK,c.to)) : f.push(new Hint(CB.HintTypes.BLOCK_CHECK,c.to)));
        return f
    }
    ;
    e.V374 = function(b, d, c) {
        (b.board[d.from] & CB.Piece.V15j) == CB.Piece.PAWN && (b = CB.Square.V16w(d.to),
        7 == b || 0 == b) && (c = [new Hint(CB.HintTypes.PROMOTE,d.to)].concat(c));
        return c
    }
    ;
    e.V378 = function(b, d, c, f) {
        var g = !1;
        if (g = 2 <= c.length && c[1].to == d.to && CB.Piece.V15l(b.board[d.from], b.board[c[1].from])) {
            var h = ObjUtil.clone(b);
            h.makeMove(c[0]);
            0 < (new Att).calc(h, c[1].from, c[1].to) && (g = !1)
        }
        g || (g = 3 <= c.length && c[2].from == d.to && 0 != c[2].vct && CB.Piece.V15l(b.board[d.from], b.board[c[2].to]));
        if (!g) {
            var k = ObjUtil.clone(b);
            k.makeMove(d);
            var l = !1;
            k.V3hu().forEach(function(m) {
                m.to == d.to && CB.Piece.V15l(k.board[m.from], b.board[d.from]) && 0 == (new Att).calc(k, m.from, m.to) && (l = !0)
            });
            g = l
        }
        g && 0 == b.board[d.to] && (c = new Hint(CB.HintTypes.OFFER_EXCHANGE),
        c.piece = CB.Piece.V15k(b.board[d.from]),
        f = [c].concat(f));
        return f
    }
    ;
    e.V379 = function(b, d, c, f, g, h, k, l, m) {
        h = d.getBTM() ? h < -k : h > k;
        (b.board[f.to] & CB.Piece.V15j) == g && h && !c.vct && (c = new Att,
        0 < c.calc(b, f.from, f.to) && (c.hasSafeCapture(d, f.to, k) || (m = [new Hint(l,f.to)].concat(m))));
        return m
    }
    ;
    e.V37g = function(b, d, c, f, g, h, k, l, m) {
        d.getBTM() && (g |= CB.Piece.V15h);
        b.board[f.to] == g && h > k && (h = c.from == f.to || c.to == f.from,
        h || (h = new Att,
        d = ObjUtil.clone(d),
        d.makeMove(c),
        b = h.hasSafeCapture(b, f.to),
        c = h.hasSafeCapture(d, f.to),
        h = b && !c),
        h && (m = m.concat([new Hint(l,f.to)])));
        return m
    }
    ;
    e.V37a = function(b, d, c, f, g, h) {
        f = Math.abs(f - g);
        (b.getBTM() ? g < 1.2 * f : g > 1.2 * -f) && f > Math.abs(g / 2) && 200 < f && 2E4 > f && !d.vct && !b.board[c.to] && (h = h.concat([new Hint(CB.HintTypes.THREAT,c.to)]));
        return h
    }
    ;
    e.V37h = function(b, d, c, f, g, h) {
        var k = Math.abs(g - f);
        (b.getBTM() ? 150 < g : -150 > g) && k > Math.abs(f / 2) && 200 < k && 2E4 > k && !d.vct && !b.board[c.to] && (h = h.concat([new Hint(CB.HintTypes.THREAT_AGAINST_ME,c.to)]),
        h = h.concat([new Hint(CB.HintTypes.THREAT_MOVE,-1,c)]));
        return h
    }
    ;
    e.V37i = function(b, d, c, f, g) {
        var h = new Att;
        0 < h.calc(b, f.from, f.to) && ((b = ObjUtil.clone(d),
        c.from != f.to || d.board[c.to]) ? c.from != f.to && c.to != f.from && (b.makeMove(c),
        0 >= h.calc(b, f.from, f.to) && 0 == c.vct && (h.coversFromTo(b, d.getSideToMove(), c.to, f.to) ? g.push(new Hint(CB.HintTypes.COVERS_PIECE,f.to)) : h.coversFromTo(b, d.getSideToMove(), f.from, c.to) && g.push(new Hint(CB.HintTypes.BLOCK_ATTACK,f.to)))) : CB.Piece.V15l(d.board[f.from], d.board[c.from]) ? g.push(new Hint(CB.HintTypes.EVADES_EXCHANGE,f.to)) : g.push(new Hint(CB.HintTypes.EVADES_ATTACK,f.to)));
        return g
    }
    ;
    e.V37j = function(b, d, c) {
        for (var f = [], g = ObjUtil.clone(b.getStartPos()), h = new Att, k = b.getMoveNo(), l = 0; l < k; l++) {
            var m = b.getMoves()[l];
            if (!m)
                return c;
            f.push({
                capt: 0 != g.board[m.to],
                diff: h.materialDiff(g)
            });
            g.makeMove(m)
        }
        for (l = 0; l < d.length; l++)
            m = d[l],
            f.push({
                capt: 0 != g.board[m.to],
                diff: h.materialDiff(g)
            }),
            g.makeMove(m);
        d = 0;
        g = null;
        for (h = k - 1; 0 < h && null == g; h--)
            0 == f[h].capt ? (d++,
            4 <= d && (g = f[h].diff)) : d = 0;
        d = 0;
        if (null != g) {
            h = null;
            for (l = !1; k < f.length && null == h; k++)
                if (0 == f[k].capt)
                    if (d++,
                    2 <= d && l)
                        h = f[k].diff;
                    else {
                        if (4 <= d && !l)
                            break
                    }
                else
                    l = !0,
                    d = 0;
            null != h && (b.getCurPos().getBTM() ? h < g : h > g) && c.push(new Hint(CB.HintTypes.WIN_MATERIAL))
        }
        return c
    }
    ;
    e.V37b = function(b, d, c) {
        for (var f = [], g = [], h = 0; h < CB.HintTypes.V10x; h++)
            g[h] = 0;
        b = b.getCurPos();
        var k = !1;
        for (h = 0; h < c.length; h++) {
            var l = c[h];
            b.preSetMinCtx(l);
            d.from == l.from && g[CB.HintTypes.FROM]++;
            d.from == l.from && g[CB.HintTypes.TO]++;
            d.mvd == l.mvd && d.from != l.from && g[CB.HintTypes.PIECE]++;
            l.vct && g[CB.HintTypes.CAPTURE]++;
            var m = new CB.Position;
            m.copy(b);
            m.makeMove(l);
            m.isCheck() && (g[CB.HintTypes.CHECK]++,
            l.equals(d) && (k = !0))
        }
        2 <= g[CB.HintTypes.CHECK] && k && f.push(new Hint(CB.HintTypes.CHECK));
        2 <= g[CB.HintTypes.CAPTURE] && d.vct && !g[CB.HintTypes.RECAPTURE] && (c = new Hint(CB.HintTypes.CAPTURE),
        c.n = g[CB.HintTypes.CAPTURE],
        f.push(c));
        3 <= g[CB.HintTypes.PIECE] ? f.push(new Hint(CB.HintTypes.PIECE)) : 2 <= g[CB.HintTypes.FROM] && (d.piece & CB.Piece.V15j) != CB.Piece.PAWN && f.push(new Hint(CB.HintTypes.FROM,d.from));
        2 <= g[CB.HintTypes.V37k] && f.push(new Hint(CB.HintTypes.V37k,d.to));
        return f
    }
    ;
    e.V37d = function(b) {
        b.find(function(d) {
            return d.isRedundantToCapture()
        }) && (b = b.filter(function(d) {
            return d.type != CB.HintTypes.CAPTURE
        }));
        return b
    }
    ;
    e.V1kn = function(b, d) {
        e.V371 ? e.V371(d.eval, d.pv) : e.V37f && e.V37f(d.eval, d.pv)
    }
    ;
    e.V1ko = function(b, d) {}
    ;
    e.V37l = function(b, d) {
        return lm.MOVE_IMP + " " + e.V37m(b, d)
    }
    ;
    e.V37m = function(b, d) {
        var c = b &= CB.Piece.V15j;
        d.getBTM() && (c |= CB.Piece.V15h);
        d = 1 == d.countPieces(c);
        switch (b) {
        case CB.Piece.KING:
            return lm.YOUR_KING_ACC;
        case CB.Piece.QUEEN:
            return d ? lm.YOUR_QUEEN_ACC : lm.A_QUEEN_ACC;
        case CB.Piece.ROOK:
            return d ? lm.YOUR_ROOK_ACC : lm.A_ROOK_ACC;
        case CB.Piece.KNIGHT:
            return d ? lm.YOUR_KNIGHT_ACC : lm.A_KNIGHT_ACC;
        case CB.Piece.BISHOP:
            return d ? lm.YOUR_BISHOP_ACC : lm.A_BISHOP_ACC;
        case CB.Piece.PAWN:
            return d ? lm.YOUR_PAWN_ACC : lm.A_PAWN_ACC
        }
    }
    ;
    e.V37n = function(b, d, c) {
        return this.V37l(b, c) + " " + CB.Square.toString(d)
    }
    ;
    e.V1ux = function(b, d, c, f, g) {
        b && (c.text ? g(c.getText()) : c.type == CB.HintTypes.FROM ? this.V37o(d, c.sq, g, f) : c.type == CB.HintTypes.TO ? f && f.markSquare(c.sq) : c.type == CB.HintTypes.PIECE ? this.V37p(d.board[b.from], d, g) : c.type == CB.HintTypes.FULL_MOVE ? (f && f.drawArrow(b.from, b.to, "hsla( 90, 50%, 50%, 0.9 )", 12, [10, 6]),
        g(lm.GREEN_ARROW_MOVE)) : c.display(g, f))
    }
    ;
    e.V37o = function(b, d, c, f) {
        c(CB.Hints.V37n(b.board[d], d, b) + ".")
    }
    ;
    e.V37p = function(b, d, c) {
        c(CB.Hints.V37l(b, d) + ".")
    }
    ;
    e.V37c = function(b, d, c, f) {
        var g = {
            strHint: ""
        }
          , h = b.getBTM()
          , k = b.board[c.from]
          , l = CB.Square.V16u(c.from)
          , m = CB.Square.V16u(c.to);
        if ((h ? m >= CB.Square.V16j && l < CB.Square.V16h : m <= CB.Square.V16e && l > CB.Square.V16g) && !c.vct)
            return {
                strHint: lm.RETREAT_A_PIECE
            };
        if (c.isCastling())
            return {
                strHint: lm.CASTLE_IMP
            };
        switch (k & CB.Piece.V15j) {
        case CB.Piece.KING:
            g = e.V37q(b, d, k, c, f);
            break;
        case CB.Piece.PAWN:
            g = e.V37r(b, d, k, c, f);
            break;
        case CB.Piece.BISHOP:
            g = e.V37s(b, d, k, c, f);
            break;
        case CB.Piece.KNIGHT:
            g = e.V37t(b, d, k, c, f);
            break;
        case CB.Piece.ROOK:
            g = e.V37u(b, d, k, c, f);
            break;
        case CB.Piece.QUEEN:
            g = e.V37v(b, d, k, c)
        }
        return g
    }
    ;
    e.V37v = function(b, d, c, f) {
        d = {
            strHint: ""
        };
        c = e.V37m(c, b);
        d.strHint = lm.MOVE_IMP + " " + c + ".";
        -300 > (new Att).calc(b, f.from, f.to) ? (d.hint = new Hint(CB.HintTypes.SACRIFICE,f.to),
        d.strHint = lm.SAC_IMP + " " + c + ".",
        d.nSort = 50) : !f.vct && 4 < e.V37w(b, CB.Piece.QUEEN) && (.5 > Math.random() && !e.V37x(f) ? CB.Square.V171(f.to) ? d.strHint = lm.MOVE_IMP + " " + c + " " + lm.TO_A_LIGHT_SQUARE + "." : d.strHint = lm.MOVE_IMP + " " + c + " " + lm.TO_A_DARK_SQUARE + "." : (b = e.V37y(f, b.getBTM()),
        2 <= Math.abs(b) ? 0 < b ? d.strHint = String.f(lm.ADVANCE_FORMAT, c) : 0 > b && (d.strHint = String.f(lm.RETREAT_FORMAT, c)) : CB.Square.F(f.from) == CB.Square.F(f.to) ? d.strHint = lm.MOVE_IMP + " " + c + " " + lm.VERTICALLY + "." : CB.Square.V16u(f.from) == CB.Square.V16u(f.to) ? d.strHint = lm.MOVE_IMP + " " + c + " " + lm.HORIZONTALLY + "." : d.strHint = lm.MOVE_IMP + " " + c + " " + lm.DIAGONALLY + "."));
        return d
    }
    ;
    e.V37q = function(b, d, c, f) {
        d = {
            strHint: ""
        };
        if (3 <= e.V37w(b, CB.Piece.KING)) {
            var g = e.V37y(f, b.getBTM())
              , h = e.V37z(f, b.getBTM())
              , k = CB.Square.F(f.from);
            f = CB.Square.F(f.to);
            0 != g && (0 == h || .5 > Math.random()) ? 0 < g ? d.strHint = String.f(lm.ADVANCE_FORMAT, e.V37m(c, b)) : 0 > g && (d.strHint = String.f(lm.RETREAT_FORMAT, e.V37m(c, b))) : 0 != h && CB.Square.V172(f) && !CB.Square.V172(k) ? d.strHint = lm.CENTRALIZE + " " + e.V37m(c, b) + "." : 0 != h && 0 == g && (d.strHint = 2 == Math.abs(h) ? lm.CASTLE_IMP : lm.MOVE_KING_SIDEWAYS)
        }
        return d
    }
    ;
    e.V37r = function(b, d, c, f) {
        c = {
            strHint: ""
        };
        12 >= b.getMoveNum() ? c.strHint = String.f(lm.MOVE_YOUR_FILE_PAWN, CB.Square.V16p(CB.Square.F(f.from))) : 2 == e.V37y(f, b.getBTM()) ? c.strHint = lm.MAKE_PAWN_DOUBLE_STEP : e.V380(b, f, d) ? e.V381(b, CB.Square.F(f.from)) && (c.strHint = lm.OPEN_ATTACK_FILE,
        c.nSort = 40) : 3 < e.V37w(b, CB.Piece.PAWN) && (CB.Square.V172(f.from) ? c.strHint = lm.MOVE_CENTER_PAWN : CB.Square.F(f.from) < CB.Square.V169 ? c.strHint = lm.MOVE_QSIDE_PAWN : c.strHint = lm.MOVE_KSIDE_PAWN);
        return c
    }
    ;
    e.V37s = function(b, d, c, f) {
        var g = {
            strHint: ""
        }
          , h = new Att;
        c = e.V37m(c, b);
        -100 > h.calc(b, f.from, f.to) ? (g.hint = new Hint(CB.HintTypes.SACRIFICE,f.to),
        g.strHint = lm.SAC_IMP + " " + c + ".",
        g.nSort = 50) : f.vct || (h = b.getBTM(),
        2 == b.countPieces(CB.Piece.BISHOP | (h ? CB.Piece.V15h : 0)) ? (CB.Square.V171(f.from) ? g.strHint = lm.MOVE_LIGHT_BISHOP : g.strHint = lm.MOVE_DARK_BISHOP,
        24 >= b.getMoveNum() && (h && CB.Square.V16u(f.from) == CB.Square.V16k || !h && CB.Square.V16u(f.from) == CB.Square.V16d) && (b = e.V382(b, d, f),
        b.strHint && (g = b))) : 0 > e.V37y(f, b.getBTM()) ? g.strHint = lm.RETREAT_BISHOP : g.strHint = lm.ADVANCE_BISHOP);
        return g
    }
    ;
    e.V382 = function(b, d, c) {
        var f = {
            strHint: ""
        };
        if (b.getBTM()) {
            var g = CB.Square.F8;
            var h = CB.Square.C8;
            var k = CB.Square.G8;
            var l = CB.Square.B8;
            var m = CB.Piece.B_KNIGHT
        } else
            g = CB.Square.F1,
            h = CB.Square.C1,
            k = CB.Square.G1,
            l = CB.Square.B1,
            m = CB.Piece.W_KNIGHT;
        if (c.from == g)
            if (b.board[k] == m)
                f.strHint = lm.DEVELOP_KSIDE;
            else {
                if (e.V383(d[2], CB.Square.V16b) || e.V383(d[4], CB.Square.V16b))
                    f.strHint = lm.PREPARE_CASTLING
            }
        else if (c.from == h)
            if (b.board[l] == m)
                f.strHint = lm.DEVELOP_QSIDE;
            else if (e.V383(d[2], CB.Square.V167) || e.V383(d[4], CB.Square.V167))
                f.strHint = lm.PREPARE_CASTLING;
        return f
    }
    ;
    e.V37t = function(b, d, c, f) {
        d = {
            strHint: ""
        };
        c = e.V37m(c, b);
        d.strHint = lm.MOVE_IMP + " " + c + ".";
        if (-100 > (new Att).calc(b, f.from, f.to))
            d.hint = new Hint(CB.HintTypes.SACRIFICE,f.to),
            d.strHint = lm.SAC_IMP + " " + c + ".",
            d.nSort = 50;
        else if (!f.vct) {
            var g = (c = b.getBTM()) ? 7 : 0;
            12 >= b.getMoveNum() && CB.Square.F(f.from) == g && (CB.Square.V16v(f.from) == CB.Square.V166 ? d.strHint = lm.DEVELOP_QN : CB.Square.V16v(f.from) == CB.Square.V16b && (d.strHint = lm.DEVELOP_KN));
            d.strHint || (CB.Square.V174(f.to) ? d.strHint = lm.CENTRALIZE_KNIGHT : (b = e.V37y(f, c),
            d.strHint = 2 == b ? lm.ADVANCE_KNIGHT : -2 == b ? lm.RETREAT_KNIGHT : lm.MOVE_KNIGHT_SIDEWAYS))
        }
        return d
    }
    ;
    e.V37u = function(b, d, c, f) {
        var g = {
            strHint: ""
        };
        c = e.V37m(c, b);
        g.strHint = lm.MOVE_IMP + " " + c + ".";
        if (-150 > (new Att).calc(b, f.from, f.to))
            g.hint = new Hint(CB.HintTypes.SACRIFICE,f.to),
            g.strHint = lm.SAC_IMP + " " + c + ".",
            g.nSort = 50;
        else if (!f.vct && 3 < e.V37w(b, CB.Piece.ROOK) && (c = b.getBTM(),
        g = e.V384(b, d, f),
        g.strHint || (g = e.V385(b, d, f)),
        !g.strHint)) {
            d = b.countPieces(CB.Piece.Vd5) + b.countPieces(CB.Piece.Vd6);
            var h = e.V37y(f, c)
              , k = e.V37z(f, c)
              , l = CB.Square.F(f.from);
            f = CB.Square.F(f.to);
            6 <= d && (!e.V386(b, l) && e.V386(b, f) ? g.strHint = lm.ROOK_TO_OPEN_FILE : !e.V387(b, l, c) && e.V387(b, f, c) ? g.strHint = lm.ROOK_TO_HALFOPEN_FILE : 0 == k ? g.strHint = 3 <= h ? lm.ADVANCE_ROOK : -3 >= h ? lm.RETREAT_ROOK : lm.MOVE_ROOK_VERTICALLY : 0 == h && (CB.Square.V172(f) && !CB.Square.V172(l) ? g.strHint = lm.CENTRALIZE_ROOK : g.strHint = lm.MOVE_ROOK_HORIZONTALLY))
        }
        return g
    }
    ;
    e.V386 = function(b, d) {
        for (var c = 0; 8 > c; c++)
            if ((b.board[8 * d + c] & CB.Piece.V15j) == CB.Piece.PAWN)
                return !1;
        return !0
    }
    ;
    e.V387 = function(b, d, c) {
        b = b.board;
        var f = !1;
        if (c)
            for (c = 6; 1 < c; c--) {
                var g = 8 * d + c;
                if (b[g] == CB.Piece.PAWN && 4 >= c)
                    f = !0;
                else if (b[g] == (CB.Piece.PAWN | CB.Piece.V15h))
                    return !1
            }
        else
            for (c = 1; 6 >= c; c++)
                if (g = 8 * d + c,
                b[g] == (CB.Piece.PAWN | CB.Piece.V15h) && 2 < c)
                    f = !0;
                else if (b[g] == CB.Piece.PAWN)
                    return !1;
        return f
    }
    ;
    e.V388 = function(b, d, c) {
        for (var f = 0; 8 > f; f++)
            if (b.board[8 * d + f] == (CB.Piece.PAWN | (c ? CB.Piece.BLACK : 0)))
                return !0;
        return !1
    }
    ;
    e.V389 = function(b, d, c) {
        return !1
    }
    ;
    e.V380 = function(b, d, c) {
        var f = b.getBTM();
        if (CB.Square.V16u(d.to) == (f ? 3 : 4) && CB.Square.F(d.from) == CB.Square.F(d.to) && 4 <= c.length)
            for (b = ObjUtil.clone(b),
            b.makeMove(c[0]),
            b.makeMove(c[1]),
            f = 2; f < c.length; f++)
                if (b.makeMove(c[f]),
                c[f].from == d.to && CB.Piece.V15k(b.board[c[f].to]) == CB.Piece.PAWN)
                    return e.V386(b, CB.Square.F(d.to)),
                    !0
    }
    ;
    e.V381 = function(b, d) {
        var c = b.V19b(CB.V15e.other(b.getSideToMove()));
        c = CB.Square.F(c);
        if (b.getBTM() ? (0 == d || 1 == d) && 2 >= c : (6 == d || 7 == d) && 5 <= c)
            return b.getBTM() ? 2 <= b.countPieces(CB.Piece.Vd2) + b.countPieces(CB.Piece.Vd0) : 2 <= b.countPieces(CB.Piece.Vd1) + b.countPieces(CB.Piece.Vcz)
    }
    ;
    e.V38a = function(b, d, c) {
        for (var f = 0, g = CB.Square.F(d.to), h = b.getBTM(), k = 0; 8 > k; k++)
            if (h && 0 < k || !h && 7 > k) {
                var l = 8 * g + k;
                b.board[l] == CB.Piece.ROOK | (c ? CB.Piece.BLACK : 0) && l != d.from && l != d.to && f++
            }
        return f
    }
    ;
    e.V38b = function(b, d, c) {
        for (var f = 0, g = CB.Square.V16u(d.to), h = 0; 8 > h; h++) {
            var k = 8 * h + g;
            b.board[k] == CB.Piece.ROOK | (c ? CB.Piece.BLACK : 0) && k != d.from && k != d.to && f++
        }
        return f
    }
    ;
    e.V384 = function(b, d, c) {
        var f = {
            strHint: ""
        };
        if (e.V386(b, CB.Square.F(c.to)) && 1 == e.V38a(b, c, b.getBTM()) && CB.Square.F(c.to) != CB.Square.F(c.from))
            f.strHint = lm.DOUBLE_ROOKS,
            f.nSort = 40;
        else {
            var g = CB.Square.F(c.to);
            if (CB.Square.F(c.from) == g && 2 == b.countPieces(b.board[c.from]))
                for (b = 2; b < d.length && 6 >= b; b += 2) {
                    var h = d[b];
                    h && (h.mvd & CB.Piece.V15j) == CB.Piece.ROOK && CB.Square.F(h.to) == g && CB.Square.F(h.from) != g && h.to == c.from && h.from != c.to && (f.strHint = lm.PREPARE_DOUBLE_ROOKS,
                    f.nSort = 40)
                }
        }
        return f
    }
    ;
    e.V385 = function(b, d, c) {
        d = {
            strHint: ""
        };
        e.V386(b, CB.Square.F(c.to)) && 1 == e.V38b(b, c, b.getBTM()) && CB.Square.F(c.to) == CB.Square.F(c.from) && (d.strHint = lm.DOUBLE_ROOKS_7TH,
        d.nSort = 40);
        return d
    }
    ;
    e.V383 = function(b, d) {
        if (b)
            return (b.mvd & CB.Piece.V15j) == CB.Piece.KING && CB.Square.F(b.to) == d && CB.Square.F(b.from) == CB.Square.V16b
    }
    ;
    e.V37w = function(b, d) {
        var c = 0;
        b.V3hu().forEach(function(f) {
            (b.board[f.from] & CB.Piece.V15j) == d && c++
        });
        return c
    }
    ;
    e.V37y = function(b, d) {
        return d ? CB.Square.V16u(b.from) - CB.Square.V16u(b.to) : CB.Square.V16u(b.to) - CB.Square.V16u(b.from)
    }
    ;
    e.V37z = function(b, d) {
        return d ? CB.Square.F(b.from) - CB.Square.F(b.to) : CB.Square.F(b.to) - CB.Square.F(b.from)
    }
    ;
    e.V38c = function(b) {
        return CB.Square.F(b.from) == CB.Square.F(b.to)
    }
    ;
    e.V38d = function(b) {
        return CB.Square.V16u(b.from) == CB.Square.V16u(b.to)
    }
    ;
    e.V37x = function(b) {
        return Math.abs(CB.Square.V16u(b.from) - CB.Square.V16u(b.to)) == Math.abs(CB.Square.F(b.from) - CB.Square.F(b.to))
    }
    ;
    e.isRecapture = function(b, d, c) {
        var f = d.getLastMove();
        if (f && 0 != f.vct && f.to == c.to && 2 < d.getMoveCount() && (d = d.getMoves()[d.getMoveCount() - 2],
        0 == d.vct || d.to != f.to))
            return 0 <= (new Att).calc(b, c.from, c.to)
    }
    ;
    e.isExchange = function(b, d, c) {
        return 1 < c.length && d.to == c[1].to && 0 != d.vct && (d.vct & CB.Piece.V15j) == (b.board[d.from] & CB.Piece.V15j)
    }
    ;
    return e
}();
"use strict";
CB.Commands = function() {
    var e = function() {
        this.V38f = this.V38e = 0;
        this.V38g = [];
        this.V38h = [];
        this.V38i = {};
        this.V38j = 0;
        this.V38k = {}
    };
    e.prototype.registerCommandHandler = function(b) {
        this.V38e += 1;
        this.V38g[this.V38e] = b;
        return this.V38e
    }
    ;
    e.prototype.unregisterCommandHandler = function(b) {
        delete this.V38g[b]
    }
    ;
    e.prototype.commandHandler = function(b, d) {
        try {
            for (var c = 0; c < this.V38g.length && (void 0 === this.V38g[c] || !this.V38g[c].execCommand(b, d)); c++)
                ;
        } catch (f) {
            b = V3ir.V3ia.toNumString(b),
            CB.V3(b, f)
        }
    }
    ;
    e.prototype.onFileSelect = function(b, d) {
        for (var c = 0; c < this.V38g.length; c++)
            if (void 0 !== this.V38g[c] && this.V38g[c].onFileSelect)
                this.V38g[c].onFileSelect(b, d)
    }
    ;
    e.prototype.onTextFieldChange = function(b, d) {
        for (var c = 0; c < this.V38g.length; c++)
            if (void 0 !== this.V38g[c] && this.V38g[c].onTextFieldChange)
                this.V38g[c].onTextFieldChange(b, d)
    }
    ;
    e.prototype.onRegisterField = function(b, d) {
        for (var c = 0; c < this.V38g.length; c++)
            if (void 0 !== this.V38g[c] && this.V38g[c].onRegisterField)
                this.V38g[c].onRegisterField(b, d)
    }
    ;
    e.prototype.V38l = function(b, d) {}
    ;
    e.prototype.V38m = function(b) {}
    ;
    e.prototype.registerkeyDownHandler = function(b) {
        this.V38f += 1;
        this.V38h[this.V38f] = b;
        return this.V38f
    }
    ;
    e.prototype.unregisterkeyDownHandler = function(b) {
        delete this.V38h[b]
    }
    ;
    e.prototype.handleKeyDown = function(b) {
        try {
            if (0 >= this.V38j)
                for (var d = 0; d < this.V38h.length; d++)
                    if (void 0 !== this.V38h[d] && this.V38h[d].onKeyDown(b)) {
                        b.stopEvent();
                        break
                    }
        } catch (c) {
            CB.V3("KeyDown=" + b.getKey(), c)
        }
        return !0
    }
    ;
    e.prototype.execCommandLine = function(b) {
        for (var d = 0; d < this.V38g.length && (void 0 === this.V38g[d] || !this.V38g[d].execCommandLine || !this.V38g[d].execCommandLine(b)); d++)
            ;
    }
    ;
    e.prototype.V38n = function() {
        --this.V38j;
        0 > this.V38j && CBDebug.assert("Shortcut counter")
    }
    ;
    e.prototype.V38o = function() {
        this.V38j += 1
    }
    ;
    e.prototype.V38p = function() {
        return this.V38k
    }
    ;
    e.prototype.fireChecked = function(b, d) {
        this.V38k = {
            id: b,
            state: d
        };
        this.fireOnChecked()
    }
    ;
    e.prototype.fireEnabledChanged = function(b, d) {
        this.V38k = {
            id: b,
            state: d
        };
        this.fireOnEnabledChanged()
    }
    ;
    e.prototype.V38q = function(b, d) {
        this.V38k = {
            id: b,
            state: d
        };
        this.fireOnVisibleChanged()
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "Checked", function() {
        return [this.V38p()]
    });
    V3i1.addEvent(e, "EnabledChanged", function() {
        return [this.V38p()]
    });
    V3i1.addEvent(e, "VisibleChanged", function() {
        return [this.V38p()]
    });
    return e
}();
CB.V1ge = {
    NONE: 0,
    FLIP_BOARD: 1,
    NEW_GAME: 2,
    TAKEBACK: 3,
    EXECMOVE: 4,
    TOGGLE_ANALYSIS_ENGINE: 5,
    SETUP_POSITION: 6,
    ENGINE_MOVE_NOW: 7,
    V38r: 8,
    ENGINE_HINT: 9,
    ADD_POST_TEXT: 10,
    ADD_PRE_TEXT: 11,
    PROMOTE_LINE: 12,
    DELETE_LINE: 13,
    CUT_LINE: 14,
    MARK_GOOD: 15,
    MARK_BAD: 16,
    MARK_VERYGOOD: 17,
    MARK_VERYBAD: 18,
    MARK_INTERESTING: 19,
    MARK_DUBIOUS: 20,
    WHITE_WINS: 30,
    WHITE_BETTER: 31,
    WHITE_SLIGHTLY: 32,
    EQUAL: 33,
    UNCLEAR: 34,
    BLACK_WINS: 36,
    BLACK_BETTER: 37,
    BLACK_SLIGHTLY: 38,
    COMPENSATION: 35,
    INSERT_DIAGRAM: 39,
    DELETE_PREVIOUS_MOVES: 40,
    V38s: 60,
    OPEN_CMS: 63,
    ENGINE_PLUS_LINE: 70,
    ENGINE_MINUS_LINE: 71,
    V38t: 75,
    START_LINE: 80,
    V38u: 100,
    V2jl: 101,
    V2jn: 115,
    V2jp: 102,
    V2jj: 103,
    V2jr: 104,
    V2jt: 105,
    V2jx: 106,
    V2jv: 107,
    V38v: 120,
    V38w: 121,
    V38x: 122,
    V38y: 123,
    V38z: 124,
    V390: 125,
    V391: 126,
    V392: 127,
    V393: 128,
    V394: 140,
    V2ji: 200,
    V2jm: 201,
    V2jo: 202,
    V2jq: 203,
    V2jk: 204,
    V2js: 205,
    V2jw: 206,
    V2ju: 207,
    V2jy: 208,
    V395: 210,
    V396: 211,
    CMS_SOLUTION: 212,
    CMS_TRYAGAIN: 213,
    CMS_PREVIOUS: 214,
    CMS_NEXT: 215,
    PLAYERDB_TEST: 231,
    Vej: 240,
    GAME_COPYTOCLIPBOARD: 250,
    GAME_PASTEFROMCLIPBOARD: 251,
    SWITCHAPP_PLAY: 260,
    SWITCHAPP_LIVE: 261,
    SWITCHAPP_DATABASE: 262,
    SWITCHAPP_MYGAMES: 263,
    SWITCHAPP_FRITZ: 264,
    SWITCHAPP_FF: 265,
    SWITCHAPP_TACTICS: 266,
    SWITCHAPP_OPENINGS: 267,
    SWITCHAPP_VIDEO: 268,
    SWITCHAPP_NEWS: 269,
    LOGIN: 300,
    LOGOUT: 301,
    CHANGE_PASSWORD: 302,
    V397: 303,
    Vfa: 304,
    INVITE_FRIEND: 305,
    Vfm: 306,
    V1t9: 400,
    V398: 400,
    V399: 401,
    V39a: 402,
    V39b: 403,
    V39c: 404,
    V39d: 405,
    V39e: 406,
    V39f: 407,
    V39g: 408,
    V39h: 409,
    V39i: 410,
    V39j: 411,
    V39k: 412,
    V39l: 413,
    V39m: 414,
    V39n: 415,
    V39o: 416,
    V39p: 417,
    V39q: 418,
    V39r: 419,
    V39s: 420,
    V39t: 421,
    V39u: 422,
    V39v: 423,
    V39w: 424,
    V39x: 425,
    V39y: 426,
    V39z: 500,
    V44: 9999,
    toNumString: function(e) {
        return "CommandId=" + e
    }
};
CB.V10z = function() {
    return CB.Vq.Vr() ? "Common/" : "/Common/"
}
;
CB.V3a0 = {
    externalCommonPath: !1,
    iconPath: "play",
    getEngineUrl: function() {
        return V3ir.canRunWebAssembly() ? (CB.EngineInstance.V1na = !0,
        ["/Common/Chess/Engine/webasm/fritzajax3.js"]) : ["/Common/Chess/Engine/df14/df14.js"]
    },
    getExternalCommonPath: function() {
        return CB.Vq.Vr() ? "file://Common/" : "/Common/"
    },
    getRibbonPath: function() {
        return CB.V10z() + "Media/Ribbons/"
    },
    getPlaychessUris: function() {
        return ["ws://playserver.chessbase.com:7000"]
    },
    getLiveUris: function() {
        return https ? ["wss://liveserver.chessbase.com:6008"] : ["ws://liveserver.chessbase.com:7001"]
    },
    getLiveResult: function() {
        var e = CB.Vq.V11z();
        return [(e ? "https" : "http") + "://liveserver.chessbase.com:" + (e ? 6009 : 80)]
    },
    getDBBridgeUris: function() {
        return CB.Vq.V11z() ? ["wss://dbserver.chessbase.com:443"] : ["ws://dbserver.chessbase.com:7000"]
    },
    getCloudServerUris: function() {
        return CB.Vq.V11z() ? ["wss://cloudserver.chessbase.com:6008"] : ["ws://cloudserver.chessbase.com:7000"]
    },
    getMyMovesServerUris: function() {
        return ["wss://mymovesserver.chessbase.com:443"]
    },
    getTrainingUris: function() {
        return CB.Vq.V11z() ? ["wss://trainingserver.chessbase.com:443"] : ["ws://trainingserver.chessbase.com:7000", "wss://trainingserver.chessbase.com:6008"]
    },
    getPlBridgeUris: function() {
        return CB.Vq.V11z() ? ["wss://pbridge.chessbase.com:443"] : ["ws://pbridge.chessbase.com:7000"]
    },
    getTbBridgeUris: function() {
        return CB.Vq.V11z() ? ["wss://tbridge.chessbase.com:443", "wss://tbridge2.chessbase.com:443"] : ["ws://tbridge2.chessbase.com:7000", "ws://tbridge.chessbase.com:7000"]
    },
    getAccountUris: function() {
        return CB.Vq.V11z() ? ["https://users.chessbase.com", "https://usersback.chessbase.com"] : ["http://users.chessbase.com", "http://usersback.chessbase.com"]
    },
    V3a1: function() {
        return CB.Vq.V11z() ? ["https://videos.chessbase.com/"] : CB.Vq.runsOnChessBaseDomain() ? ["http://videos.chessbase.com/"] : ["http://localhost:49599/"]
    },
    V3a2: "https://studies.chessbase.com",
    loginWebUrl: "http://account.chessbase.com",
    createAccountWebUrl: "https://play.chessbase.com/createAccount",
    createAccountWebUrl2: "https://play.chessbase.com/createAccount",
    resetPasswordWebUrl: "http://account.chessbase.com/en/pwd-recovery",
    resetPasswordWebUrl2: "http://account.chessbase.com/{0}/pwd-recovery",
    V3a3: !1,
    editAccountUrl: "#",
    V3a4: "http://help.chessbase.com/Apps/{0}/index.html",
    getFlagPath: function(e) {
        return CB.V10z() + "Media/FlagsIso/" + e + "/"
    },
    has3DBoard: !1,
    board2DTopOffset: 0,
    board2DBottomOffset: 0,
    useAnalysisEngines: !0,
    debug: !0,
    jqxTheme: "chessbase",
    defaultFont: "Roboto, sans serif",
    defaultCondensedFont: "Roboto Condensed, Arial Narrow, sans serif",
    V3a5: CB.V10z() + "Media/Chess/OrangeBrighterSoftBacklightLessSatur.jpg",
    V3a6: "",
    clrActiveClock: new CB.Color(220,250,190),
    V3a7: "hsla( 240, 20%, 10%, 1.0 )"
};
CB.V3a8 = ObjUtil.copyTo(CB.V3a0, {
    release: !0,
    loginWebUrl: "http://account.chessbase.com",
    getEngineUrl: function() {
        return V3ir.canRunWebAssembly() ? (CB.EngineInstance.V1na = !0,
        ["/Common/Chess/Engine/webasm/fritzajax3.js"]) : ["/Common/Chess/Engine/df14/df14.js"]
    },
    getPlaychessUris: function() {
        return CB.Vq.V11z() ? ["wss://playserver.chessbase.com:443"] : ["ws://playserver.chessbase.com:7000"]
    },
    getMyMovesServerUris: function() {
        return CB.Vq.V11z() ? ["wss://127.0.0.1:443"] : ["ws://127.0.0.1:433"]
    },
    getTrainingUris: function() {
        return CB.Vq.V11z() ? ["wss://trainingserver2.chessbase.com:443", "wss://trainingserver.chessbase.com:6008"] : ["wss://trainingserver2.chessbase.com:443", "wss://trainingserver.chessbase.com:6008", "ws://trainingserver2.chessbase.com:7000"]
    },
    getDBBridgeUris: function() {
        return CB.Vq.V11z() ? ["wss://dbserver.chessbase.com:443"] : ["ws://dbserver.chessbase.com:7000"]
    },
    getCloudServerUris: function() {
        return CB.Vq.V11z() ? ["wss://cloudserver.chessbase.com:6008"] : ["ws://cloudserver.chessbase.com:7000"]
    },
    getAccountUris: function() {
        return CB.Vq.V11z() ? ["https://127.0.0.1/users/"] : ["http://127.0.0.1/users/"]
    },
    getLiveUris: function() {
        return ["wss://liveserver.chessbase.com:6008"]
    },
    getLiveResult: function() {
        var e = CB.Vq.V11z();
        return [(e ? "https" : "http") + "://liveserver.chessbase.com:" + (e ? 6009 : 80)]
    },
    createAccountWebUrl: "https://account.chessbase.com/en/create-account",
    createAccountWebUrl2: "https://account.chessbase.com/{0}/create-account",
    resetPasswordWebUrl: "http://account.chessbase.com/en/pwd-recovery",
    resetPasswordWebUrl2: "http://account.chessbase.com/{0}/pwd-recovery",
    editAccountUrl: "#",
    debug: !1
}, !0);
CB.ChessApp = function() {
    var e = function() {
        void 0 === this.config && (this.config = CB.V3a8);
        this.mediaPath = CB.V10z() + "Media/";
        this.mediaPathChess = this.mediaPath + "Chess/";
        this.mediaPathFlags = "/Common/Media/Flags/";
        this.minFPS = 16;
        document.onmousemove = this.V3a9.bind(this);
        document.onkeypress = this.V3a9.bind(this);
        this.V3aa = new CB.Timer;
        this.V3ab = new CB.Tick;
        this.V3ac = !1;
        this.appName = this.appTitle = "ChessBase App";
        this.V3ad = {
            name: "Free",
            type: 0
        };
        window.localforage && localforage.config({
            driver: localforage.INDEXEDDB,
            name: "ChessBase",
            version: 1,
            storeName: "CBCache"
        })
    };
    e.prototype.initInstance = function() {
        this.commands = new CB.Commands;
        glSettings = new CB.GlobalSettings;
        this.V3ae();
        this.V3aa.V8m(6E4, this.V3af.bind(this));
        this.V3ag(CB.V1ge, this.V3ah());
        this.commandHandlerId = this.commands.registerCommandHandler(this);
        this.detLanguage();
        CB.Vq.V37() || V3ir.initToolTips();
        window.onerror = function(d, c, f, g, h) {
            var k = "Main";
            0 <= c.search("df14") && (k = "Engine");
            c = String.formatEx("line={0}, col={1}, typ={2}", f, g, k);
            h && h.stack && (c += "/" + h.stack);
            CB.V3(d, c);
            "Engine" == h && V3ir && V3ir.panelMgr && V3ir.panelMgr.showMessage("Sorry, cannot load the engine, please use the Chrome Browser or Firefox")
        }
        ;
        this.V3ai()
    }
    ;
    e.prototype.exitInstance = function() {
        glSettings.destroy()
    }
    ;
    e.prototype.detLanguage = function() {
        this.V3aj()
    }
    ;
    e.prototype.V3aj = function() {
        var d = CB.V1b.V100("lang");
        d && (d = CB.V6r.V12r(d),
        glSettings.languageCommandId = glSettings.getCommandIdOfLanguage(d));
        "undefined" != typeof glSettings.languageCommandId ? glSettings.changeLanguage(glSettings.languageCommandId) : this.changeLanguage(CB.V6r.V12q())
    }
    ;
    e.prototype.overrideLanguageFromPlugin = function(d) {
        if (d = this.V3ak(d)) {
            var c = CB.V6r.V12r(d);
            glSettings.languageCommandId = glSettings.getCommandIdOfLanguage(c);
            return d
        }
    }
    ;
    e.prototype.V3ak = function(d) {
        d = $(d);
        if (d.length)
            return d[0].dataset.language
    }
    ;
    e.prototype.V3ai = function() {
        "undefined" !== typeof ga && ga("set", "anonymizeIp", !0)
    }
    ;
    e.prototype.isBoardOnlyApp = function() {
        return !1
    }
    ;
    e.prototype.getLoginUrl = function() {
        return this.config.loginWebUrl
    }
    ;
    e.prototype.getManageAccountUrl = function() {
        return this.config.loginWebUrl + "en/me"
    }
    ;
    e.prototype.V3ae = function() {
        glSettings.boardTextureId || (glSettings.boardTextureId = this.V3al());
        var d = glSettings.boardTextureId;
        glSettings.boardTextureId = void 0;
        this.setBoardTextures(d);
        this.config.V3am || (this.chessAudio = new CB.ChessAudio(V3ir.config.getExternalCommonPath() + "Media/Sounds/",!0))
    }
    ;
    e.prototype.V3al = function() {
        return CB.V1ge.V2ji
    }
    ;
    e.prototype.setBoardTextures = function(d) {
        this.V3hy && this.V3hy.destroy();
        if (glSettings.boardTextureId != d)
            switch (d) {
            default:
                d = CB.V1ge.V2ji;
            case CB.V1ge.V2ji:
            case CB.V1ge.V2jo:
            case CB.V1ge.V2jq:
            case CB.V1ge.V2jk:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "LightSquaresCoolerBrighterSofter.jpg",this.mediaPathChess + "DarkSquaresLessSatur.png",this.mediaPathChess + "MarginBrighter.jpg",this.mediaPathChess + "OrangeBrighterSoftBacklightLessSatur.jpg","gold","black");
                break;
            case CB.V1ge.V2jm:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "WhiteMarbleCut.jpg",this.mediaPathChess + "GreyMarble.jpg",this.mediaPathChess + "DarkMarginCut.jpg",this.mediaPathChess + "WhiteMarbleBack.jpg");
                break;
            case CB.V1ge.V2js:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "LightSquaresCooler.png",this.mediaPathChess + "DarkSquaresOrange.png",this.mediaPathChess + "MarginBrighter.jpg",this.mediaPathChess + "OrangeBrighterSoftBacklight.jpg");
                break;
            case CB.V1ge.V2jw:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "LightSquaresFFTan.jpg",this.mediaPathChess + "DarkSquaresFFTan.jpg",this.mediaPathChess + "MarginFFTan2.jpg",this.mediaPathChess + "BackgroundFFBlue.jpg");
                break;
            case CB.V1ge.V2ju:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "WorldChessLightSquares.jpg",this.mediaPathChess + "WorldChessDarkSquares.jpg",this.mediaPathChess + "WorldChessDarkSquares.jpg",this.mediaPathChess + "WorldChessBackground.jpg","white","white");
                break;
            case CB.V1ge.V2jy:
                this.V3hy = new CB.V2j2(this.mediaPathChess + "BlueLightSquares.jpg",this.mediaPathChess + "BlueDarkSquares.jpg",this.mediaPathChess + "BlueDarkSquares.jpg",this.mediaPathChess + "BlueBackground.jpg","white","white")
            }
        glSettings.boardTextureId = d
    }
    ;
    e.prototype.V3an = function(d) {
        return V3ir.config.has3DBoard ? CB.Vcg.V3ao(d, lm.BOARDS, "Board2DSquares", [lm.BOARD_FRITZ, lm.BOARD_CRYSTALS, lm.BOARD_CRYSTALS + " (Wood)", lm.BOARD_USCF, lm.BOARD_OLDSTYLE, lm.BOARD_HABSBURG, "-", lm.BOARD3D_FRITZ, lm.BOARD3D_MODERN, lm.BOARD3D_ROOM, lm.BOARD3D_BALLOON, lm.BOARD3D_METAL, lm.BOARD3D_FUTURE, lm.BOARD3D_BLACKWHITE], "wQFritz16 wQCrystals16 wQCrystals16 wQUSCF16 wQOldstyle16 wQHabsburg16  Fritz16 Modern16 Room16 Balloon16 Metal16 Future16 BlackWhite16".split(" "), [CB.V1ge.V38u, CB.V1ge.V2jl, CB.V1ge.V2jn, CB.V1ge.V2jp, CB.V1ge.V2jj, CB.V1ge.V2jr, null, CB.V1ge.V38v, CB.V1ge.V38w, CB.V1ge.V38x, CB.V1ge.V38y, CB.V1ge.V38z, CB.V1ge.V390, CB.V1ge.V391], void 0, "", CB.V15d(8)) : CB.Vcg.V3ao(d, lm.BOARDS, "Board2DSquares", [lm.BOARD_FRITZ, lm.BOARD_CRYSTALS, lm.BOARD_CRYSTALS + "(Wood)", lm.BOARD_USCF, lm.BOARD_OLDSTYLE, lm.BOARD_HABSBURG], "wQFritz16 wQCrystals16 wQCrystals16 wQUSCF16 wQOldstyle16 wQHabsburg16".split(" "), [CB.V1ge.V38u, CB.V1ge.V2jl, CB.V1ge.V2jn, CB.V1ge.V2jp, CB.V1ge.V2jj, CB.V1ge.V2jr], void 0, "", CB.V15d(12))
    }
    ;
    e.prototype.V3ap = function(d) {
        return !CB.Vq.V37() || 1E3 < window.innerWidth || 1E3 < window.innerHeight ? CB.Vcg.V3ao(d, lm.OTHER_TOOLS, "SwitchApp", [lm.MENU_PLAYCHESS_TOOL, "Live Chess", lm.MENU_TACTICS_TOOL, lm.MENU_VIDEO_TOOL, lm.MENU_FRITZ_TOOL, lm.MENU_OPENINGS_TOOL, lm.MENU_DATABASE_TOOL, lm.MENU_MYGAMES_TOOL, lm.MENU_FRITZ_CHESSTER_TOOL, "News"], "WebAppPlay16 WebAppLive16 WebAppTactics16 WebAppVideos16 WebAppFritz16 WebAppOpenings16 WebAppDatabase16 WebAppMyGames16 WebAppFF16 WebAppNews16".split(" "), [CB.V1ge.SWITCHAPP_PLAY, CB.V1ge.SWITCHAPP_LIVE, CB.V1ge.SWITCHAPP_TACTICS, CB.V1ge.SWITCHAPP_VIDEO, CB.V1ge.SWITCHAPP_FRITZ, CB.V1ge.SWITCHAPP_OPENINGS, CB.V1ge.SWITCHAPP_DATABASE, CB.V1ge.SWITCHAPP_MYGAMES, CB.V1ge.SWITCHAPP_FF, CB.V1ge.SWITCHAPP_NEWS], void 0, "", CB.V15d(1)) : CB.Vcg.V3ao(d, lm.OTHER_TOOLS, "SwitchApp", [lm.MENU_PLAYCHESS_TOOL, lm.MENU_TACTICS_TOOL, lm.MENU_DATABASE_TOOL, lm.MENU_OPENINGS_TOOL, lm.MENU_VIDEO_TOOL, lm.MENU_FRITZ_TOOL], "WebAppPlay16 WebAppTactics16 WebAppDatabase16 WebAppOpenings16 WebAppVideos16 WebAppFritz16".split(" "), [CB.V1ge.SWITCHAPP_PLAY, CB.V1ge.SWITCHAPP_TACTICS, CB.V1ge.SWITCHAPP_DATABASE, CB.V1ge.SWITCHAPP_OPENINGS, CB.V1ge.SWITCHAPP_VIDEO, CB.V1ge.SWITCHAPP_FRITZ], void 0, "", CB.V15d(1))
    }
    ;
    e.prototype.loginMenuBtn = function(d) {
        return CB.Vcg.V3ao(d, lm.LOGIN, "Login", [lm.LOGIN, lm.LOGOUT, lm.CHANGE_PASSWORD, lm.ACCOUNT, lm.INVITE_FRIEND], ["Login16", "Logout16", "ChangePassword16", "Account16", "MailGames16"], [CB.V1ge.LOGIN, CB.V1ge.LOGOUT, CB.V1ge.CHANGE_PASSWORD, CB.V1ge.V397, CB.V1ge.INVITE_FRIEND], void 0, "", CB.V15d(16))
    }
    ;
    e.prototype.getAvailableLanguages = function() {
        return [CB.V6r.ENG, CB.V6r.DEU, CB.V6r.ESP, CB.V6r.NED, CB.V6r.ROM, CB.V6r.CHN, CB.V6r.FRA, CB.V6r.RUS, CB.V6r.NOR, CB.V6r.POL, CB.V6r.ITA, CB.V6r.HEB, CB.V6r.CAT, CB.V6r.TRK, CB.V6r.SLO, CB.V6r.GRK, CB.V6r.UKR, CB.V6r.VIE, CB.V6r.ARA, CB.V6r.SER, CB.V6r.LIT, CB.V6r.BRA, CB.V6r.FAR, CB.V6r.GAL, CB.V6r.CRO, CB.V6r.CZE, CB.V6r.HIN]
    }
    ;
    e.prototype.languageBtn = function(d) {
        var c = this.getAvailableLanguages()
          , f = CB.V6r.V12v(c);
        f.push("Your Language Here!");
        var g = CB.V6r.V12w(c);
        g.push(CB.V6r.getRibbonFlagName(CB.V6r.UN));
        c = glSettings.getLanguageCommandIds(c);
        c.push(CB.V1ge.V39z);
        d = CB.Vcg.V3ao(d, lm.LANGUAGE, "", f, g, c, void 0, "", CB.V15d(14), !0);
        glSettings.languageBtn = d;
        glSettings.languageCommandId ? glSettings.changeLangButtonFlag(glSettings.languageCommandId) : d.changeFlagIcon(CB.V6r.getRibbonFlagName(CB.V6r.V12q()));
        return d
    }
    ;
    e.prototype.V3aq = function(d) {
        var c = [];
        CB.Vd7.V3ar && CB.Vd7.V3ar[d] && c.push(CB.Vd7.V3ar[d]);
        CB.Vd7.Vd8[d] && c.push(CB.Vd7.Vd8[d]);
        return c
    }
    ;
    e.prototype.changeLanguage = function(d) {
        var c = this.V3aq("ENG");
        (d = this.V3aq(CB.V6r.V12u(d))) && (c = c.concat(d));
        glLoc = new CB.Vcw(c)
    }
    ;
    e.prototype.V3a9 = function() {
        this.V3ab.start()
    }
    ;
    e.prototype.V3as = function() {
        return 12E4 < this.V3ab.Va6()
    }
    ;
    e.prototype.allowMoveEntryDialog = function() {
        return !1
    }
    ;
    var b = !1;
    e.prototype.V3af = function() {
        this.V3as() ? (this.V3at && this.V3at(),
        b = !0) : (b && this.V3au && this.V3au(),
        b = !1)
    }
    ;
    e.prototype.initToolTips = function() {
        "undefined" !== typeof Ext && Ext.QuickTips.init()
    }
    ;
    e.prototype.V3av = function() {
        var d = 0;
        switch (V3ir.versionCode.nFamily) {
        case CB.V2d.V2e:
            d = V3ir.V3ia.SWITCHAPP_PLAY;
            break;
        case CB.V2d.V2t:
            d = V3ir.V3ia.SWITCHAPP_LIVE;
            break;
        case CB.V2d.V2g:
            d = V3ir.V3ia.SWITCHAPP_DATABASE;
            break;
        case CB.V2d.V2i:
            d = V3ir.V3ia.SWITCHAPP_PLAY;
            break;
        case CB.V2d.V2j:
            d = V3ir.V3ia.SWITCHAPP_FRITZ;
            break;
        case CB.V2d.V2l:
            d = V3ir.V3ia.SWITCHAPP_MYGAMES;
            break;
        case CB.V2d.V39:
            d = V3ir.V3ia.SWITCHAPP_TACTICS;
            break;
        case CB.V2d.V2h:
            d = V3ir.V3ia.SWITCHAPP_OPENINGS
        }
        return d
    }
    ;
    e.prototype.getAppUrl = function(d) {
        var c = "http://www.chessbase.com";
        switch (d) {
        case V3ir.V3ia.SWITCHAPP_PLAY:
            c = "http://play.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_LIVE:
            c = "http://live.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_TACTICS:
            c = "http://tactics.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_DATABASE:
            c = "https://database.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_MYGAMES:
            c = "http://mygames.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_OPENINGS:
            c = "http://mymoves.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_FRITZ:
            c = "http://fritz.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_VIDEO:
            c = "http://videos.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_FF:
            c = CB.V6r.V12q() == CB.V6r.DEU ? "http://fritzundfertig.chessbase.com" : "http://fritzandchesster.chessbase.com";
            break;
        case V3ir.V3ia.SWITCHAPP_NEWS:
            c = CB.V6r.V12q() == CB.V6r.DEU ? "http://de.chessbase.com" : "http://en.chessbase.com"
        }
        return c
    }
    ;
    e.prototype.execCommand = function(d) {
        try {
            var c = !0;
            switch (d) {
            default:
                c = !1;
                break;
            case void 0:
                break;
            case V3ir.V3ia.SWITCHAPP_PLAY:
            case V3ir.V3ia.SWITCHAPP_LIVE:
            case V3ir.V3ia.SWITCHAPP_DATABASE:
            case V3ir.V3ia.SWITCHAPP_MYGAMES:
            case V3ir.V3ia.SWITCHAPP_FRITZ:
            case V3ir.V3ia.SWITCHAPP_FF:
            case V3ir.V3ia.SWITCHAPP_TACTICS:
            case V3ir.V3ia.SWITCHAPP_OPENINGS:
            case V3ir.V3ia.SWITCHAPP_VIDEO:
            case V3ir.V3ia.SWITCHAPP_NEWS:
                var f = this.getAppUrl(d);
                break;
            case V3ir.V3ia.LOGOUT:
                this.setLoggedIn(!1);
                break;
            case CB.V1ge.CHANGE_PASSWORD:
                this.V3aw();
                break;
            case CB.V1ge.V397:
                f = String.formatEx(this.config.editAccountUrl, CB.V6r.V12s(glSettings.getLanguageId()));
                break;
            case CB.V1ge.Vfa:
                this.V3ax();
                break;
            case CB.V1ge.INVITE_FRIEND:
                this.V3ay();
                break;
            case CB.V1ge.Vfm:
                this.V3az()
            }
            f && (window.location = f + "?ref=" + this.appName + "&lang=" + CB.V6r.V12s(glSettings.getLanguageId()))
        } catch (g) {
            d = V3ir.V3ia.toNumString(d),
            CB.V3(d, g)
        }
        return c
    }
    ;
    e.prototype.V3ag = function(d, c) {
        if (c) {
            for (var f in d)
                d.hasOwnProperty(f) && void 0 === c[f] && (c[f] = d[f]);
            this.V3ia = c
        }
    }
    ;
    e.prototype.setLoggedIn = function(d) {
        this.V3ac = d;
        d || (V3ir.V3i2.loginToken = "",
        V3ir.V3i2.loginMode = CB.LoginMode.GUEST,
        CB.DOM.V9v("AccountToken"),
        CB.DOM.V9v("AccountMode"),
        V3ir.V3i2.clearCBCommonCookie());
        d || V3ir.showAccountType(0);
        this.fireOnLogin(d)
    }
    ;
    e.prototype.V3aw = function() {
        V3ir.V3i2.userName ? CB.V1hl.V3aw(V3ir.V3i2.userName, this.V3b0.bind(this), {}) : alert("Please Login First")
    }
    ;
    e.prototype.V3b0 = function(d, c) {
        (new CB.V9z(V3ir.shortAppName)).V3aw(V3ir.V3i2.userName, d, c, V3ir.V3i2.loginToken, this.V3b1)
    }
    ;
    e.prototype.V3b1 = function(d) {
        d && 1 == d.ResultType ? alert("Password changed.") : alert("Could not change password")
    }
    ;
    e.prototype.V3b2 = function() {
        var d = CB.DOM.V34d(!0) || V3ir.V3i2.userName;
        return 0 < d.length && "guest" != d
    }
    ;
    e.prototype.V3ax = function() {
        (new CB.V9z(V3ir.shortAppName)).getFriends(V3ir.V3i2.userName, V3ir.V3i2.loginToken, "0", this.V3b3)
    }
    ;
    e.prototype.V3b3 = function(d) {
        if (d && "OK" == d.Result) {
            for (var c = new CB.V9z(V3ir.shortAppName), f = [], g = 0; g < d.users.length; g++) {
                var h = new CB.V3b4(d.users[g]);
                f.push(h)
            }
            CB.V1hl.V3b5(c, "Friends", f, e.prototype.setFriends)
        }
    }
    ;
    e.prototype.setFriends = function(d, c) {
        d.setFriends(V3ir.V3i2.userName, V3ir.V3i2.loginToken, "0", c, e.prototype.V3b6)
    }
    ;
    e.prototype.V3b6 = function(d) {}
    ;
    e.prototype.V3ay = function() {
        var d = this.V3av(V3ir.versionCode.nFamily);
        d = e.prototype.getAppUrl(d);
        d = "mailto:%20&subject=" + escape(this.shortAppName) + "&body=" + escape("Join me using " + this.appName + " " + d);
        window.location.href = d
    }
    ;
    e.prototype.showAdvertising = function() {}
    ;
    e.prototype.V3az = function() {
        var d = String.formatEx(this.config.V3a4, CB.V6r.V12t(glSettings.getLanguageId()));
        window.open(d, "_blank")
    }
    ;
    e.prototype.V3b7 = function() {
        return this.V3ad && this.V3ad.type ? this.V3ad.type : 0
    }
    ;
    e.prototype.isPremium = function() {
        return 3 <= this.V3b7()
    }
    ;
    e.prototype.isLoggedIn = function() {
        return 2 <= this.V3b7()
    }
    ;
    e.prototype.animatedBoard = function() {
        return !0
    }
    ;
    e.prototype.isExtJS = function() {
        return "undefined" != typeof Ext
    }
    ;
    e.prototype.allowMoveEntryDialog = function() {
        return this.isExtJS()
    }
    ;
    e.prototype.forceGuestLogon = function() {
        return CB.Vq.V8x() || V3ir.V3i2.noRibbons()
    }
    ;
    e.prototype.showAccountType = function(d) {
        this.V3ad = {
            name: "Free",
            type: d
        };
        switch (d) {
        case 0:
        case 1:
            this.V3ad.name = "Free";
            break;
        case 2:
            this.V3ad.name = "Standard";
            break;
        case 3:
            this.V3ad.name = "Premium"
        }
        this.fireOnAccountType(this.V3ad)
    }
    ;
    e.prototype.passToFritzOnline = function(d) {
        V3ir.saveGameToLocalStorage();
        var c = ObjUtil.clone(d);
        c.deleteRemaining();
        c.unAnnotate();
        c = CB.V241.V244(c);
        d = 2E3 < c.length ? "?fen=" + d.getCurPos().toFEN() : "?pgn=" + c;
        window.location = "http://fritz.chessbase.com" + d + "&ref=pgn"
    }
    ;
    e.prototype.saveGameToLocalStorage = function(d) {
        if (this.panelMgr.getKernel && this.panelMgr.getKernel() && CB.V241) {
            var c = this.panelMgr.getKernel().game
              , f = CB.V241.V242(c)
              , g = encodeURI(f);
            if (3900 < g.length || d)
                d = ObjUtil.clone(c),
                d.unAnnotate(),
                f = CB.V241.V242(d);
            g = encodeURI(f);
            3900 > g.length && (CB.DOM.V9w("CBLastGame", f),
            CB.DOM.V9w("CBLastMoveIndex", c.getMoveIndex()),
            c.replaceGameNo && (CB.DOM.V9w("CBLastGameNo", c.replaceGameNo),
            CB.DOM.V9w("CBLastGameDBId", c.replaceDBId)));
            V3ir.V3i2.save("CBLastGame", f)
        }
    }
    ;
    e.prototype.loadGameFromLocalStorage = function() {
        if ((!V3ir.urlParams || !(V3ir.urlParams.pgn || V3ir.urlParams.buf64 || V3ir.urlParams.pos || V3ir.urlParams.fen)) && this.panelMgr.getKernel && this.panelMgr.getKernel() && PGN) {
            var d = CB.DOM.V34c("CBLastGame")
              , c = ""
              , f = "";
            d ? (c = CB.DOM.V34c("CBLastGameNo"),
            f = CB.DOM.V34c("CBLastGameDBId")) : d = V3ir.V3i2.load("CBLastGame");
            if (d)
                return d = PGN.V1f3(d),
                "My Moves" != d.hdr.white.last && (c && f && (d.replaceGameNo = parseInt(c),
                d.replaceDBId = parseInt(f)),
                d.getCurPos().isLegal() && (this.panelMgr.getKernel().game.assign(d),
                (c = CB.DOM.V34c("CBLastMoveIndex")) && this.panelMgr.getKernel().game.gotoIndex(parseInt(c)))),
                0 < d.getMoveCount()
        }
    }
    ;
    e.prototype.tryLogin = function(d) {
        V3ir.V3i2.userName = CB.DOM.V34d(!0) || V3ir.V3i2.userName;
        V3ir.V3i2.loginToken = CB.DOM.V34c("AccountToken");
        if (V3ir.V3i2.loginToken && V3ir.V3i2.userName && "guest" != V3ir.V3i2.userName)
            return (new CB.V9z(V3ir.shortAppName)).tokenLogin(V3ir.V3i2.userName, V3ir.V3i2.loginToken, d),
            !0;
        V3ir.V3i2.clearCBCommonCookie();
        5;
        return !1
    }
    ;
    e.prototype.V3b8 = function(d) {
        return V3ir.V3i2.hasUserAndPass() ? ((new CB.V9z(V3ir.shortAppName)).pwLogin(V3ir.V3i2.userName, V3ir.V3i2.password, d),
        !0) : !1
    }
    ;
    e.prototype.V3b9 = function() {
        5
    }
    ;
    e.prototype.V3ba = function(d) {
        V3ir.playerLobby = new CB.Server.PlayerLobby;
        V3ir.playerLobby.create(V3ir.config.getPlBridgeUris(), "Guest", "", CB.LoginMode.GUEST);
        d && V3ir.playerLobby.connect()
    }
    ;
    e.prototype.logOffPlayerLobby = function() {
        V3ir.playerLobby && V3ir.playerLobby.logOff()
    }
    ;
    e.prototype.V3bb = function() {
        V3ir.aTBLobby && V3ir.aTBLobby.isConnected() || (V3ir.aTBLobby = new CB.Server.TeraBrainLobby,
        V3ir.aTBLobby.create(V3ir.config.getTbBridgeUris(), "Guest", "", CB.LoginMode.GUEST),
        V3ir.aTBLobby.connect())
    }
    ;
    e.prototype.V3bc = function() {
        V3ir.aTBLobby && V3ir.aTBLobby.logOff()
    }
    ;
    e.prototype.V3bd = function(d) {
        V3ir.onlineLobby = new CB.Server.OnlineLobby;
        V3ir.onlineLobby.createLobby(V3ir.config.getDBBridgeUris(), "Guest", "", CB.LoginMode.GUEST);
        d && V3ir.onlineLobby.connect()
    }
    ;
    e.prototype.logOffOnlineLobby = function() {
        V3ir.onlineLobby && V3ir.onlineLobby.logOff()
    }
    ;
    e.prototype.V3be = function(d) {
        CB.V10z = function() {
            return CB.Vq.Vr() ? "Common/" : "/Common/"
        }
        ;
        this.config.externalCommonPath = !0;
        this.mediaPath = CB.V10z() + "Media/";
        this.mediaPathChess = this.mediaPath + "Chess/";
        d.engine && (d = CB.Vq.V11u(),
        CB.EngineInstance.V1na = 12 <= d || !d,
        this.config.getEngineUrl = function() {
            return CB.EngineInstance.V1na && !CB.Vq.Vr() ? CB.Vq.canRunWebAssembly() ? ["/Common/Chess/Engine/WebAsm/FritzAjax3.js"] : ["/Common/Chess/Engine/df14/df14ajaxdata.js"] : CB.Vq.canRunWebAssembly() ? ["/Common/Chess/Engine/WebAsm/Fritz.js"] : ["/Common/Chess/Engine/df14/df14.js"]
        }
        )
    }
    ;
    e.prototype.V3bf = function() {
        var d = CB.V1b.V100("user")
          , c = CB.V1b.V100("pass");
        return d.length && c.length ? (V3ir.V3i2.userCoded = d,
        d = CB.V1b.base64.decode(d),
        c = CB.V1b.base64.decode(c),
        d = CB.V1b.V106(d),
        V3ir.V3i2.userName = d,
        V3ir.V3i2.password = c,
        V3ir.V3i2.loginMode = CB.LoginMode.NORMAL,
        !0) : !1
    }
    ;
    e.prototype.isPlugin = function() {
        return !1
    }
    ;
    e.prototype.canRunWebAssembly = function() {
        return CB.Vq.canRunWebAssembly()
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "Login");
    V3i1.addEvent(e, "AccountType");
    return e
}();
CB.V3bg = {};
CB.V3bg[CB.V1ge.V38u] = "DiagramTTFritz";
CB.V3bg[CB.V1ge.V2jl] = "DiagramTTCrystals";
CB.V3bg[CB.V1ge.V2jn] = "DiagramTTCrystals";
CB.V3bg[CB.V1ge.V2jp] = "DiagramTTUSCF";
CB.V3bg[CB.V1ge.V2jj] = "DiagramTTOldstyle";
CB.V3bg[CB.V1ge.V2jr] = "DiagramTTHabsburg";
CB.V3bg[CB.V1ge.V2jt] = "DiagramTTWorldChess";
CB.V3bg[CB.V1ge.V2jx] = "DiagramTTFritz";
CB.V3bg[CB.V1ge.V2jv] = "DiagramTTFF";
CB.V3bg[CB.V1ge.V38v] = "Fritz";
CB.V3bg[CB.V1ge.V38w] = "Modern";
CB.V3bg[CB.V1ge.V38x] = "Room";
CB.V3bg[CB.V1ge.V38y] = "Balloon";
CB.V3bg[CB.V1ge.V38z] = "Metal";
CB.V3bg[CB.V1ge.V390] = "Future";
CB.V3bg[CB.V1ge.V391] = "BlackWhite";
CB.V3bg[CB.V1ge.V392] = "Character";
function buildOldBrowserLandingPage() {
    CB.V3bh("Old");
    CB.DOM.add("www.playchess.com", "h1", "NonMobiH1");
    CB.DOM.add("Play chess and kibitz grand master games", "h3", "NonMobiH3");
    CB.DOM.V34b();
    CB.DOM.add("We are sorry, your browser needs an update.", "", "NonMobiBody");
    CB.DOM.add("Please install the latest version.", "", "NonMobiBody");
    CB.DOM.V34b();
    CB.DOM.add("We recommend using Chrome or Firefox. Thank you!", "", "NonMobiBody");
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34a("http://www.playchess.com", "www.playchess.com", "NonMobiLink");
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    CB.DOM.V34b();
    navigator.userAgent && CB.DOM.add(navigator.userAgent, "", "NonMobiBody")
}
CB.V3 = function(e, b, d) {
    var c = b ? b.toString() : "---";
    if ("undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain()) {
        CB.Vq.V37() && (c += " (mob)",
        CB.Vq.V116() ? c += ", andr=" + CB.Vq.V116() : CB.Vq.V115() && (c += ", ios=" + CB.Vq.V115()));
        var f = "catch";
        V3ir && (c += ", ver=" + V3ir.versionCode.getStrVersion(),
        f += V3ir.versionCode.getStrVersion());
        var g = e + ", " + c;
        b && (b.lineNumber && (g += ", line=" + b.lineNumber),
        b.columnNumber && (g += ", col=" + b.columnNumber),
        b.stack && (d = b.stack));
        ga("send", "event", f, g, d)
    }
    console.log(e + ", " + c)
}
;
CB.V1uu = function(e) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", "Stats", e)
}
;
function padInt(e, b) {
    e = "000000000" + e;
    return e.substr(e.length - b)
}
CB.V3bi = function(e, b) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", "Replayed", e, "", padInt(b, 6))
}
;
CB.V3bj = function() {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", "NoContact", V3ir.versionCode.toString())
}
;
CB.V3bh = function(e) {
    5;
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", "Browser", e)
}
;
CB.LogConnection = function(e) {
    5;
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", "Connect", e)
}
;
CB.V3bk = function() {
    if ("undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && (ga("send", "event", "Version", V3ir.versionCode.toString()),
    glSettings && "undefined" != typeof glSettings.languageCommandId)) {
        var e = glSettings.getLanguageIdOfCommandId(glSettings.languageCommandId);
        ga("send", "event", "Lang", CB.V6r.V12s(e))
    }
}
;
CB.V3bl = function(e) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "pageview", "Goal/" + e)
}
;
CB.V3bm = function(e) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "pageview", e)
}
;
CB.V3bn = function(e, b, d) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", e, b, d)
}
;
CB.V3bn = function(e, b, d) {
    "undefined" !== typeof ga && CB.Vq.runsOnChessBaseDomain() && ga("send", "event", e, b, d)
}
;
CB.V3bo = function() {}
;
"use strict";
CB.V3bp = function() {
    var e = function() {
        $(window).unbind("resize");
        $(window).on("resize", this.resize.bind(this));
        this.V3bq = []
    };
    e.prototype.init = function() {
        this.V3br = !1;
        this.V3bs = [];
        this.V3bt = -1;
        this.V3bu = !1;
        this.V3bw = this.V3bv = !0;
        this.V3bx = window.innerWidth;
        this.V3by = window.innerHeight;
        this.V3bz = !0;
        this.V3c0 = "https://share.chessbase.com/SharedGames"
    }
    ;
    e.prototype.V3c1 = function() {
        this.V3c2 = 1.15 * window.innerWidth < window.innerHeight && 600 > window.innerWidth
    }
    ;
    e.prototype.V3c3 = function() {
        return 1.2 * window.innerWidth < window.innerHeight
    }
    ;
    e.prototype.createDiv = function(d, c) {
        var f = document.createElement("div");
        f.id = d;
        "undefined" != typeof c && (f.id += c);
        f.className = d;
        return f
    }
    ;
    e.prototype.Vj = function(d, c, f) {
        d = document.createElement(d);
        c && (d.id = c + (f || 0),
        d.className = c);
        return d
    }
    ;
    e.prototype.V3c4 = function(d, c, f) {
        var g = document.createElement("ul");
        d && (g.id = d + (c || 0),
        g.className = d);
        f.forEach(function(h) {
            var k = document.createElement("li");
            g.appendChild(k);
            $(k).text(h || 0)
        });
        return g
    }
    ;
    e.prototype.createJQMenu = function(d, c, f, g, h, k) {
        if (d) {
            var l = 0;
            f.forEach(function(v) {
                v.length > l && (l = v.length)
            });
            var m = this.createDiv(c, g)
              , n = this.Vj("ul", "ul" + c, g)
              , p = 9;
            CB.Vq.V37() && (p = 12);
            if (f.length) {
                for (var q = 0; q < f.length; q++) {
                    var t = this.Vj("li", c + "-item-" + q + "-", g);
                    f[q] ? $(t).html('<a href="#">' + f[q] + "</a>") : $(t).attr("type", "separator");
                    n.appendChild(t)
                }
                m.appendChild(n);
                $(d).append(m);
                q = $("#" + c + g);
                q.jqxMenu({
                    autoOpenPopup: !1,
                    mode: "popup",
                    width: 16 + l * p,
                    animationShowDuration: 0,
                    animationHideDuration: 0,
                    animationHideDelay: 0,
                    animationShowDelay: 0,
                    autoCloseInterval: 0
                });
                q.on("itemclick", function(v) {
                    v = v.args.id.match(/[-][0-9]*[-]/);
                    v = v[0].substring(1, v[0].length - 1);
                    h(v)
                });
                q.on("closed", function() {
                    k && k()
                })
            }
            q[0].dataset.itemcount = f.length;
            return q[0]
        }
    }
    ;
    e.prototype.V3c5 = function(d, c, f, g) {
        if (f)
            return $(d).jqxMenu("close"),
            !1;
        var h = d.dataset.itemcount;
        f = $(window).scrollTop();
        var k = $(window).scrollLeft()
          , l = c.clientX - 20;
        5 > l && (l = 5);
        var m = 0;
        CB.Vq.V37() && (m = 2);
        c = c.clientY - Math.max(60, 30 + (25 + m) * h) + (g || 0);
        $(d).jqxMenu("open", l + k, c + f);
        CB.Vq.V37() && $(".jqx-item").css("font-size", "18px");
        return !0
    }
    ;
    e.prototype.V3c6 = function(d) {
        var c = new CB.V2uy(d);
        c.setSize(d.offsetWidth, d.offsetHeight);
        c.setVisible(!0);
        return c
    }
    ;
    CB.Vcv = function(d, c, f) {}
    ;
    var b = new CB.V3id;
    e.prototype.resize = function(d, c) {
        this.V3bx || (this.V3bx = window.innerWidth);
        this.V3by || (this.V3by = window.innerHeight);
        ((10 < Math.abs(window.innerWidth - this.V3bx) || 150 < Math.abs(window.innerHeight - this.V3by) || !CB.Vq.V37()) && (window.innerWidth != this.V3bx || window.innerHeight - this.V3by) || c) && b.exec(function() {
            0 <= this.V3c7 && this.V3c8(this.V3c7);
            this.V3c9() || (this.V3ca(),
            this.V3bx = window.innerWidth,
            this.V3by = window.innerHeight)
        }
        .bind(this), 600)
    }
    ;
    e.prototype.V3ca = function() {
        var d = 0;
        $(this.V3cb).each(function(c, f) {
            this.V3cc($(f), d);
            d++
        }
        .bind(this))
    }
    ;
    e.prototype.V3cd = function(d, c, f, g) {
        this.V3bs[d] && this.V3bs[d].stop();
        this.V3bs[d] = new CB.Timer(function() {
            this.V3ce[d].boardArea && this.V3cf(d, c, f)
        }
        .bind(this));
        this.V3bs[d].runOnce(g)
    }
    ;
    e.prototype.V3cf = function(d, c, f) {
        this.V3bs[d] && this.V3bs[d].stop();
        this.V3ce[d].boardArea.setPosSize(0, 0, c, f);
        this.V3ce[d].multiBoardCanvas && this.V3ce[d].multiBoardCanvas.setPosSize(0, 0, c, f)
    }
    ;
    e.prototype.isMobileLayout = function() {
        return this.V3c3()
    }
    ;
    e.prototype.V3c9 = function() {
        this.V3cg !== this.isMobileLayout() && (this.recycled = [],
        this.V3ch(),
        $(this.V3cb).each(function(d, c) {
            this.recycled[d] = {};
            this.recycled[d].boardArea = this.V3ce[d].boardArea;
            this.recycled[d].boardWin = this.V3ce[d].boardArea.canvas.control.boards[0];
            this.recycled[d].kernel = this.V3ce[d].getKernel();
            $(c).empty()
        }
        .bind(this)),
        this.init(),
        this.V3ci(),
        this.V3cj())
    }
    ;
    e.prototype.V3cj = function() {}
    ;
    e.prototype.V3ck = function(d, c, f) {
        if (this.V3ce[f].boardAreaW == d && this.V3ce[f].boardAreaH == c)
            return !1;
        this.V3ce[f].boardAreaW = d;
        this.V3ce[f].boardAreaH = c;
        return !0
    }
    ;
    e.prototype.V3cl = function() {
        this.V3cc($($(this.V3cb)[this.V3bt]), this.V3bt)
    }
    ;
    e.prototype.V3cm = function() {
        return -1 != document.URL.search(/en.chessbase.com/i) || -1 != document.URL.search(/de.chessbase.com/i) || -1 != document.URL.search(/es.chessbase.com/i)
    }
    ;
    e.prototype.V3cn = function(d, c, f, g, h, k) {
        for (var l = "", m = 0; m < g.length; m++) {
            if (g[m].title) {
                var n = h;
                g[m].css && (n += " " + g[m].css);
                var p = "";
                g[m].subtxt ? p = String.f("<span class='btnSubText'>{0}</span>", g[m].subtxt) : g[m].txt && (p = g[m].txt);
                l += String.f('<{6} title="{0}" id="{4}-btn{1}-{2}" class="{3}">{5}</{6}>', g[m].title, g[m].id, k, n, f, p, d)
            } else
                l += '<span class="toolBarSep"/>';
            this.V3co[k] && (this.V3co[k][g[m].id] = g[m].id,
            g[m].pic && (this.V3co[k][g[m].id] = g[m].pic))
        }
        $(c).html(l);
        for (m = 0; m < g.length; m++)
            g[m].id && (d = $(String.f("#{2}-btn{0}-{1}", g[m].id, k, f)),
            c = function(q, t) {
                return function(v) {
                    this.V3bt = t;
                    g[q].handler(t, v);
                    v.preventDefault()
                }
            }
            .call(this, m, k),
            function(q, t) {
                return function(v) {
                    this.V3bt = t;
                    v.preventDefault()
                }
            }
            .call(this, m, k),
            d[0] && (d[0].onclick = c))
    }
    ;
    e.prototype.V3cp = function(d, c, f, g, h, k, l) {
        if (c)
            for (var m = 'url( "' + CB.V10z() + 'Media/Ribbons/{2}/{0}{1}.png" )', n = 0; n < c.length; n++)
                if (c[n].id && this.V3co[h]) {
                    var p = $(String.f("#{2}-btn{0}-{1}", c[n].id, h, d));
                    p.css("background-image", String.f(m, this.V3co[h][c[n].id], f, k));
                    l && p.css("background-position", l);
                    var q = g;
                    c[n].css && (q += " " + c[n].css);
                    p.attr("class", q)
                }
    }
    ;
    e.prototype.getKernel = function() {
        if ("undefined" != typeof this.V3bt) {
            if (this.V3ce[this.V3bt] && this.V3ce[this.V3bt].getKernel())
                return this.V3ce[this.V3bt].getKernel()
        } else if (this.V3ce[0])
            return this.V3ce[0].getKernel();
        return null
    }
    ;
    e.prototype.V3cq = function(d, c) {}
    ;
    e.prototype.showMessage = function(d) {
        this.showBoardMessage(d, 2E3)
    }
    ;
    e.prototype.showBoardMessage = function(d, c) {
        this.getKernel() && this.getKernel().boardWin && (this.getKernel().boardWin.addMessage(d, !0),
        c && (new CB.Timer(function() {
            this.getKernel().boardWin.destroyMessage()
        }
        .bind(this))).runOnce(c))
    }
    ;
    e.prototype.V3cr = function(d) {
        $("#boardArea" + d).empty();
        this.V3ce[d].boardArea = this.V3c6(this.V3ce[d].panels.boardParent);
        this.V3ce[d].boardArea.setVisible(!0);
        this.resize();
        this.V3ca()
    }
    ;
    e.prototype.V3cs = function(d) {
        $("#boardArea" + d).empty();
        this.V3ce[d].boardArea = this.V3ct(this.V3ce[d].panels.boardParent, d);
        this.V3ce[d].boardArea.setVisible(!0);
        this.resize();
        this.V3ca()
    }
    ;
    e.prototype.V3ct = function(d, c) {
        var f = new CB.V3cu(d,"3d");
        f = f.createCanvas(this.V1fe);
        this.board = new CB.BoardControl3D(f.canvas,100,100,"FritzBoard",this.V1fe.bind(this),c);
        this.V3ce[c].board3d = this.board;
        f.setPosSize(d.offsetLeft, d.offsetTop, d.offsetWidth, d.offsetHeight);
        f.setVisible(!0);
        return f
    }
    ;
    e.prototype.V1fe = function(d) {
        this.V3ce[d].getKernel().setBoardWin(this.V3ce[d].board3d)
    }
    ;
    e.prototype.onControlReady = function() {}
    ;
    e.prototype.V3cv = function() {
        return Math.min(30, window.innerHeight / 35)
    }
    ;
    e.prototype.V3cw = function(d) {
        CB.V1uu("Toggle3D");
        this.V3br ? this.V3cr(d) : this.V3cs(d);
        this.V3br = !this.V3br
    }
    ;
    e.prototype.V3cx = function() {
        return {
            topDist: 0,
            bottomDist: 0,
            marginDistDivisor: 80,
            shiftXPercent: -1.7,
            minWForCoordinates: 260,
            splitLayout: !0,
            suppressCalcGeometry: !0
        }
    }
    ;
    e.prototype.V3cy = function() {}
    ;
    e.prototype.V3cz = function() {
        return CB.Vq.V37() ? 8 : 1800 < screen.width ? 7 : 6
    }
    ;
    e.prototype.V3d0 = function(d, c) {
        try {
            var f = $("#" + d + c);
            if (f.length) {
                var g = $(f).jqxSplitter("panels");
                g && g[0] && V3ir.V3i2.save(d + "size", g[0].size)
            }
        } catch (h) {
            CB.V3("RWM:saveSplitSize", h)
        }
    }
    ;
    e.prototype.V3d1 = function(d, c) {
        d = V3ir.V3i2.load(d + "size");
        return {
            size: parseFloat(d),
            coll: !1
        }
    }
    ;
    e.prototype.V3d2 = function(d, c, f) {
        $("#" + d + c).jqxSplitter({
            width: "100%",
            height: "100%",
            panels: [{
                size: f + "%"
            }, {
                size: 100 - f + "%"
            }]
        })
    }
    ;
    e.prototype.createDiagramPlayingMode = function(d) {
        return new CB.V1qq
    }
    ;
    e.prototype.useBackgroundFilter = function() {
        return !1
    }
    ;
    e.prototype.useMatBalanceDefault = function() {
        return !0
    }
    ;
    e.prototype.pgnLinkClickHandler = function(d, c, f) {
        document.getElementById(c);
        V3ir.isPremium() || V3ir.forceGuestLogon() ? (f = f(),
        c = CB.V241.V242(f),
        f = (f.hdr.getStrPlayers(!1, 0) || "game") + ".pgn",
        window.Blob ? (console.log("Blob DL: " + f),
        c = new Blob([c],{
            type: "text/plain;charset=utf-8"
        }),
        window.saveAs(c, f),
        d.preventDefault()) : 0 < CB.Vq.V11u() && (window.clipboardData && clipboardData.setData && (alert("On Internet Explorer the game has been pasted to the clipboard ('Ctrl-V')"),
        clipboardData.setData("Text", c)),
        d.preventDefault()),
        CB.V1uu("PGN")) : (alert("You need a Premium Account to download PGN files."),
        d.preventDefault())
    }
    ;
    e.prototype.editGameHeader = function() {
        var d = V3ir.panelMgr.getKernel();
        d && CB.V1hl.editGameHeader(d.game.hdr, function(c) {
            d.game.hdr = c;
            d.game.fireOnHeaderChanged()
        })
    }
    ;
    e.prototype.onFormOpen = function() {
        this.V3bw = !1
    }
    ;
    e.prototype.onFormClose = function() {
        this.V3bw = !0
    }
    ;
    e.prototype.V3d3 = function() {
        return this.V3d4 && this.V3d4.is(":visible")
    }
    ;
    e.prototype.V1i9 = function() {
        this.V3d5()
    }
    ;
    e.prototype.V1ic = function() {
        this.V3d6()
    }
    ;
    e.prototype.V1ia = function() {
        return this.V3d3
    }
    ;
    e.prototype.V1i8 = function() {
        this.V3d3() ? this.V3d6() : this.V3d5()
    }
    ;
    e.prototype.V3d5 = function() {
        void 0 === this.V3d4 ? ($("#annoEdit")[0] && $("#annoEdit").remove(),
        this.V3d4 = CB.V3d7.V3d8("annoEdit", "", "Enter text annotation", function(d, c) {
            V3ir.gameKernel.onAnnoEnter(d, c)
        })) : this.V3d4.show();
        $(this.V3d4).insertBefore("#notaToolbar0");
        $(this.V3d4).focus()
    }
    ;
    e.prototype.V3d6 = function() {
        $(this.V3d4).blur();
        $(this.V3d4).hide();
        delete this.V3d4
    }
    ;
    e.prototype.V1id = function(d) {
        void 0 !== this.V3d4 && $(this.V3d4).val(d)
    }
    ;
    e.prototype.V3d9 = function(d, c) {
        var f = window.innerWidth
          , g = $("#" + d).outerWidth();
        d = $("#" + d)[0].getBoundingClientRect();
        return (d.x || d.left) + g + c < f
    }
    ;
    e.prototype.V3da = function(d, c) {
        if (0 != d.length) {
            CB.Vq.V8x() && ($("#idLoginStart").show(),
            $("#idAccount").show());
            d.forEach(function(h) {
                $("#" + h).closest("td").show()
            }
            .bind(this));
            for (var f = 0, g = $("td.ribbonTD").last().find('div[role="button"]'); !(!g.length || this.V3d9(g[0].id, c || 24) && 0 != g.width() || 0 < g.width() && ($("#" + d[f]).closest("td").hide(),
            f++,
            f == d.length)); )
                g = $("td.ribbonTD:visible").last().find('div[role="button"]:visible');
            0 < f && $(".ribbonSeparator").remove();
            CB.Vq.V8x() && (this.V3db() || $("#idLoginStart").hide(),
            $("#idAccount").hide());
            V3ir.showLoginButtonInRibbon(!V3ir.isLoggedIn())
        }
    }
    ;
    e.prototype.V3db = function() {
        return !1
    }
    ;
    e.prototype.V3dc = function(d, c) {
        if (!CB.Vq.V37() && !CB.Vq.V8x()) {
            this.V3dd && $("#" + this.V3dd.id).remove();
            if (c || V3ir.isLoggedIn() || V3ir.config.isMVCPlugin) {
                var f = 450 < window.innerHeight ? 28 : 20;
                c = this.getLoggedInHtml();
                var g = "CBInfoLoggedIn flex-fixed";
                var h = this.getLoginInfoGradient() + ";color:white;text-transform:uppercase;"
            } else
                c = this.getPleaseLoginHtml(),
                g = "CBInfoNotLoggedIn flex-fixed",
                h = "background-color:white;color:black;text-transform:none;";
            g = $("<div id='infoDiv' class='" + g + "'></div>");
            $(g).css({
                border: 1,
                overflow: "auto"
            });
            f && $(g).css("line-height", String(f) + "px");
            $(g).attr("style", $(g).attr("style") + h);
            $(g).html(c);
            $(d).prepend(g);
            this.V3dd = $(g)[0];
            this.V3dd.V3ac = V3ir.isLoggedIn();
            this.V3dd.V34v = function(k) {}
            ;
            return this.V3dd
        }
        return null
    }
    ;
    e.prototype.V3de = function(d) {
        V3ir.getAvailableLanguages() && (d = d.concat([{
            id: "idLanguageOptions",
            buttons: [{
                id: "idSelectLanguage",
                text: lm.LANGUAGE,
                icon: "Language"
            }]
        }]));
        return d
    }
    ;
    e.prototype.openLanguageMenu = function() {
        var d = $("#idSelectLanguage").position()
          , c = $("#idSelectLanguage").height()
          , f = d.left + 2;
        d = d.top + c + 14;
        c = this.V3df($("#idSelectLanguage")[0]);
        $(c).jqxMenu("open", f, d);
        $(c).jqxMenu({
            theme: "chessbase",
            width: 150
        })
    }
    ;
    e.prototype.V3df = function(d) {
        for (var c = V3ir.getAvailableLanguages(), f = CB.V6r.V12v(c), g = CB.V6r.V12w(c), h = [], k = 0; k < g.length; k++)
            h.push("<img style='float: left; margin-right: 5px;' src='" + this.V3dg(g[k], 16) + "' />" + f[k]);
        var l = [];
        for (k = 0; k < g.length; k++)
            f = {
                index: k,
                commandId: glSettings.getCommandIdOfLanguage(c[k])
            },
            l.push(f);
        return this.createJQMenu(d, "languagesMenu", h, 0, function(m) {
            var n = $.grep(l, function(p) {
                return p.index === parseInt(m)
            })[0].commandId;
            glSettings.changeLanguage(n)
        }, function() {})
    }
    ;
    e.prototype.openAccountMenu = function() {
        var d = $("#idAccount").position()
          , c = $("#idAccount").height()
          , f = d.left + 2;
        d = d.top + c + 14;
        c = this.V3dh($("#idAccount")[0]);
        $(c).jqxMenu("open", f, d);
        $(c).jqxMenu({
            theme: "chessbase",
            width: 150
        })
    }
    ;
    e.prototype.V3dh = function(d) {
        return this.createJQMenu(d, "accountMenu", [lm.ACCOUNT, lm.LOGOUT], 0, function(c) {
            switch (parseInt(c)) {
            case 0:
                V3ir.panelMgr.openAccountPage();
                break;
            case 1:
                V3ir.panelMgr.logOut()
            }
        }, function() {})
    }
    ;
    e.prototype.createAccountOptionsButton = function(d) {
        return d = d.concat([{
            id: "idAccountOptions",
            buttons: [{
                id: "idLoginStart",
                text: lm.LOGIN,
                icon: "Key"
            }, {
                id: "idAccount",
                text: lm.ACCOUNT,
                icon: "Account"
            }]
        }])
    }
    ;
    e.prototype.showAccountsForm = function(d, c, f) {
        d = CB.DOM.V34d(!0);
        (new CB.V3di).createLoginForm(lm.LOGIN, function(g) {
            V3ir.V3i2.userName = 'admin';
            V3ir.V3i2.password = 'admin';
            V3ir.V3i2.loginMode = CB.LoginMode.NORMAL;
            (new CB.V9z(V3ir.shortAppName)).pwLogin(V3ir.V3i2.userName, V3ir.V3i2.password, V3ir.receiveTokenHandler.bind(V3ir))
        }
        .bind(this), function(g) {
            f && f()
        }
        .bind(this), d)
    }
    ;
    e.prototype.V3dg = function(d, c) {
        return V3ir.config.getFlagPath(c) + d + ".png"
    }
    ;
    e.prototype.setAnnoEditCss = function() {
        var d = $("#notaToolbar0").position().top
          , c = $("#notaToolbar0 ").width();
        $("#annoEdit").css({
            top: String(d - 24) + "px",
            width: String(c - 10) + "px",
            height: "22px"
        })
    }
    ;
    e.prototype.V3dj = function(d, c) {
        var f = [{
            id: "downloadPgnId",
            title: "Download PGN",
            imgSrc: "../../Common/Media/Ribbons/MyGames/Download16.png",
            clickHandler: function(h) {
                V3ir.panelMgr.pgnLinkClickHandler(h, "downloadPgnId", function() {
                    return V3ir.panelMgr.getKernel().game
                })
            }
        }, {
            id: "btnFritzOnline",
            title: "Play out in Fritz Online",
            imgSrc: "../../Common/Media/Ribbons/MyGames/FritzOnline16.png",
            clickHandler: function() {
                V3ir.passToFritzOnline(V3ir.panelMgr.getKernel().game)
            }
        }, {
            id: "btnTextBefore",
            title: lm.TEXT_BEFORE_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/Pretext16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.ADD_PRE_TEXT);
                V3ir.panelMgr.setAnnoEditCss()
            }
        }, {
            id: "btnTextAfter",
            title: lm.TEXT_AFTER_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/Posttext16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.ADD_POST_TEXT);
                V3ir.panelMgr.setAnnoEditCss()
            }
        }, {
            id: "btnStartLine",
            title: lm.START_LINE_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/StartLine16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.START_LINE)
            }
        }, {
            id: "btnPromoteLine",
            title: lm.PROMOTE_LINE_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/PromoteLine16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.PROMOTE_LINE)
            }
        }, {
            id: "btnDeleteLine",
            title: lm.DELETE_LINE_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/DeleteLine16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.DELETE_LINE)
            }
        }, {
            id: "btnCutLine",
            title: lm.CUT_LINE_TIP,
            imgSrc: "../../DocuWeb/Images/Buttons/16/CutLine16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.CUT_LINE)
            }
        }, {
            id: "btnMarkGood",
            title: "Good move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Good16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_GOOD)
            }
        }, {
            id: "btnMarkBad",
            title: "Bad move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Bad16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_BAD)
            }
        }, {
            id: "btnMarkVeryGood",
            title: "Very good move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/VeryGood16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_VERYGOOD)
            }
        }, {
            id: "btnMarkVeryBad",
            title: "Very bad move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/VeryBad16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_VERYBAD)
            }
        }, {
            id: "btnMarkInteresting",
            title: "Interesting move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Interesting16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_INTERESTING)
            }
        }, {
            id: "btnMarkDubious",
            title: "Dubious move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Dubious16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.MARK_DUBIOUS)
            }
        }, {
            id: "btnMarkMyMove",
            title: "Mark as My Move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/MyMove16.png",
            clickHandler: function() {
                V3ir.markCurrentMove(V3ir.gameKernel, !1)
            }
        }, {
            id: "btnMarkImportantMove",
            title: "Mark as Important Move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/ImportantMove16.png",
            clickHandler: function() {
                V3ir.markCurrentMove(V3ir.gameKernel, !0)
            }
        }, {
            id: "btnUnmarkMove",
            title: "Unmark current move",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Erase16.png",
            clickHandler: function() {
                V3ir.unMarkCurrentMove(V3ir.gameKernel)
            }
        }, {
            id: "btnWhiteSlightly",
            title: "White has a slight advantage",
            imgSrc: "../../DocuWeb/Images/Buttons/16/WhiteSlightly16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.WHITE_SLIGHTLY)
            }
        }, {
            id: "btnEqual",
            title: "The position is equal",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Equal16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.EQUAL)
            }
        }, {
            id: "btnUnclear",
            title: "The position is unclear",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Unclear16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.UNCLEAR)
            }
        }, {
            id: "btnBlackSlightly",
            title: "Black has a slight advantage",
            imgSrc: "../../DocuWeb/Images/Buttons/16/BlackSlightly16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.BLACK_SLIGHTLY)
            }
        }, {
            id: "btnWhiteBetter",
            title: "White is better",
            imgSrc: "../../DocuWeb/Images/Buttons/16/WhiteBetter16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.WHITE_BETTER)
            }
        }, {
            id: "btnBlackBetter",
            title: "Black is better",
            imgSrc: "../../DocuWeb/Images/Buttons/16/BlackBetter16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.BLACK_BETTER)
            }
        }, {
            id: "btnWhiteWins",
            title: "White is winning",
            imgSrc: "../../DocuWeb/Images/Buttons/16/WhiteWins16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.WHITE_WINS)
            }
        }, {
            id: "btnBlackWins",
            title: "Black is winning",
            imgSrc: "../../DocuWeb/Images/Buttons/16/BlackWins16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.BLACK_WINS)
            }
        }, {
            id: "btnCompensation",
            title: "Material compensation",
            imgSrc: "../../DocuWeb/Images/Buttons/16/Compensation16.png",
            clickHandler: function() {
                V3ir.gameKernel.execCommand(d.COMPENSATION)
            }
        }];
        this.V3dk(f, "../../DocuWeb/Images/Buttons/16/");
        var g = $(c).width() - 60;
        this.V3dl(g, 26, f, $(c))
    }
    ;
    e.prototype.V3dk = function(d, c) {
        this.V3bz && (d.splice(0, 0, {
            id: "btnShareGame",
            title: "Share game",
            imgSrc: c + "Social16.png",
            clickHandler: function() {
                $("#btnShareGame").attr("disabled", !0);
                V3ir.panelMgr.shareGame(V3ir.gameKernel.game);
                $("#btnShareGame").removeAttr("disabled")
            }
        }),
        d.splice(0, 0, {
            id: "btnLikeGame",
            title: "Like game",
            imgSrc: c + "LikeNew16.png",
            clickHandler: function() {
                V3ir.isLoggedIn() ? ($("#btnLikeGame").attr("disabled", !0),
                V3ir.panelMgr.likeGame(V3ir.gameKernel.game),
                $("#btnLikeGame").removeAttr("disabled")) : V3ir.panelMgr.showAlert("You need to be logged in to like games.", 350, 130)
            }
        }))
    }
    ;
    e.prototype.shareGame = function(d) {
        var c = this.V3c0 + "/Share/"
          , f = CB.V241.V242(d);
        d = {
            gameText: encodeURIComponent(f),
            moveIndex: String(d.getMoveIndex())
        };
        $.ajax({
            url: c,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=UTF-8",
            data: JSON.stringify(d),
            success: function(g) {
                V3ir.panelMgr.showShareWindow(g.Url)
            },
            error: function(g, h, k) {
                alert(k)
            }
        })
    }
    ;
    e.prototype.showShareWindow = function(d) {
        var c = .9 * $(window).width()
          , f = .9 * $(window).height()
          , g = this.createDiv("divShareWindow", 0);
        $(g).css({
            position: "fixed",
            left: "50%",
            top: "50%"
        });
        d = "<div>   <div style='width: 100%; height: 100%;'>      <iframe style='border: 0;' width='100%' height='99%' src='" + (d + "'></iframe>   </div></div>");
        $(g).html(d);
        $(g).jqxWindow({
            title: "ChessBase - Share Game",
            width: c,
            height: f,
            resizable: !1,
            draggable: !1,
            isModal: !0,
            theme: V3ir.config.jqxTheme,
            modalOpacity: .3,
            showCloseButton: !0
        })
    }
    ;
    e.prototype.likeGame = function(d) {
        var c = this.V3c0 + "/Like/";
        d = {
            userName: encodeURIComponent(V3ir.V3i2.userName),
            gameText: encodeURIComponent(CB.V241.V242(d))
        };
        $.ajax({
            url: c,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=UTF-8",
            data: JSON.stringify(d),
            success: function(f) {
                V3ir.panelMgr.showAlert(f.Message, 600, 210)
            },
            error: function(f, g, h) {
                alert(h)
            }
        })
    }
    ;
    e.prototype.showAlert = function(d, c, f) {
        var g = this.createDiv("divAlert", 0);
        $(g).css({
            position: "fixed",
            left: "50%",
            top: "50%"
        });
        d = "<div style='text-align: center;'>   <div style='display: inline-block; word-break: break-word; padding: 10px;'>" + d + "      <br /><br /><button id='btnOK'>OK</button>   </div>";
        d += "</div>";
        $(g).html(d);
        $(g).jqxWindow({
            title: "Information",
            width: c,
            height: f,
            resizable: !1,
            draggable: !1,
            isModal: !0,
            modalOpacity: .3,
            showCloseButton: !1
        });
        $(g).find("#btnOK").jqxButton();
        $(g).find("#btnOK").click(function() {
            $(g).jqxWindow("close")
        })
    }
    ;
    e.prototype.V3dl = function(d, c, f, g) {
        var h = Math.floor(d / c);
        1 > h && (h = 1);
        h < f.length ? h-- : h > f.length && (h = f.length);
        d = "";
        for (c = 0; c < h; c++)
            d += "<button title='" + f[c].title + "' id='" + f[c].id + "'><img src='" + f[c].imgSrc + "' /></button>";
        h < f.length && (d += "<button title='More symbols' id='btnMore'><b>...</b></button>");
        $(g).html(d);
        for (c = 0; c < h; c++)
            $(g).find("#" + f[c].id)[0].addEventListener("click", f[c].clickHandler, !1);
        h < f.length && $(g).find("#btnMore").click(function() {
            var k = $(g).find("#btnMore")[0].getBoundingClientRect()
              , l = k.left - 280;
            k = k.top - 26 * (f.length - h) - 5;
            V3ir.panelMgr.showNotationToolbarItemsThatDoNotFit($(g).find("#btnMore"), l, k, f, h + 1)
        })
    }
    ;
    e.prototype.showNotationToolbarItemsThatDoNotFit = function(d, c, f, g, h) {
        var k = function() {
            $("#menuWrappernotationToolbarMenu0")[0] && $("#menuWrappernotationToolbarMenu0").remove();
            for (var l = [], m = h - 1; m < g.length; m++)
                l.push("<img style='float: left; margin-right: 5px;' src='" + g[m].imgSrc + "' />" + g[m].title);
            return V3ir.panelMgr.createJQMenu(d, "notationToolbarMenu", l, 0, function(n) {
                g[parseInt(n) + h - 1].clickHandler()
            }, function() {})
        }();
        $(k).jqxMenu("open", c, f);
        $(k).jqxMenu({
            theme: "chessbase",
            width: 300
        })
    }
    ;
    e.prototype.V2ou = function(d, c, f, g, h) {
        if (d && c) {
            var k = $("#" + d);
            k.length && (k.jqxTooltip({
                content: c,
                theme: V3ir.config.jqxTheme,
                position: g || "bottom",
                name: d
            }),
            f && (k.jqxTooltip("open"),
            k.jqxTooltip("close", f)),
            h && (new CB.Timer(function() {
                k.jqxTooltip("destroy")
            }
            )).runOnce(h))
        }
    }
    ;
    e.prototype.V3dm = function(d) {
        $("#" + d).length && $("#" + d).jqxTooltip("destroy")
    }
    ;
    e.prototype.V3dn = function(d, c) {
        var f = this.createDiv("switchBar", c);
        $(d).append(f);
        this.V3do(f, c)
    }
    ;
    e.prototype.V3do = function(d, c) {
        var f = $('<div class="cbSwitchToolBar" id="switch-tb"></div>');
        $(d).append(f);
        var g = this;
        f = [];
        this.V3dp = f = f.concat([{
            title: "Live Chess",
            id: "switch-Live",
            pic: "Live",
            subtxt: "Live Chess",
            handler: function() {
                g.redirectToLivePage()
            }
        }, {
            title: "Tactics",
            id: "switch-Tactics",
            pic: "Tactics",
            subtxt: "Tactics",
            handler: function() {
                g.redirectTo("tactics")
            }
        }, {
            title: "Videos",
            id: "switch-Videos",
            pic: "Videos",
            txt: "",
            subtxt: "Videos",
            handler: function() {
                g.redirectTo("videos")
            }
        }, {
            title: "Fritz",
            id: "switch-Fritz",
            pic: "Fritz",
            subtxt: "Fritz",
            handler: function() {
                g.redirectTo("fritz")
            }
        }, {
            title: "Database",
            id: "switch-Database",
            pic: "Database",
            subtxt: "Database",
            handler: function() {
                g.redirectTo("database")
            }
        }, {
            title: "Openings",
            id: "switch-Openings",
            pic: "Openings",
            subtxt: "Openings",
            handler: function() {
                g.redirectTo("mymoves")
            }
        }, {
            title: "My Own Games",
            id: "switch-Mygames",
            pic: "mygames",
            subtxt: "My Games",
            handler: function() {
                g.redirectTo("mygames")
            }
        }, {
            title: "Chess Quiz",
            id: "switch-quiz",
            pic: "quiz",
            subtxt: "Quiz",
            handler: function() {
                g.redirectTo("quiz")
            }
        }, {
            title: "Players",
            id: "switch-players",
            pic: "players",
            subtxt: "Players",
            handler: function() {
                g.redirectTo("players")
            }
        }, {
            title: "News",
            id: "switch-news",
            pic: "news",
            subtxt: "News",
            handler: function() {
                g.redirectTo("en")
            }
        }, {
            title: "Studies",
            id: "switch-studies",
            pic: "studies",
            subtxt: "Studies",
            handler: function() {
                g.redirectTo("studies")
            }
        }]);
        this.V3cn("button", d, "a", f, "switchAppBtn", 0);
        this.V3dq();
        this.V3cp("a", this.V3dp, 32, "switchAppBtn", c, "Switch", "center 3px")
    }
    ;
    e.prototype.V3dr = function(d, c) {
        var f = $(document.body).height()
          , g = $("#" + d).outerHeight();
        return $("#" + d).position().top - f + g + c < f
    }
    ;
    e.prototype.V3dq = function() {
        function d(k) {
            return k.id === f[g]
        }
        for (var c = ["a-btnswitch-quiz-0", "a-btnswitch-news-0"], f = ["switch-quiz", "switch-news"], g = 0, h = $(".switchAppBtn").last(); g < c.length && !this.V3dr(h[0].id, 24); )
            $("#" + c[g]).hide(),
            this.V3dp.splice(this.V3dp.findIndex(d), 1),
            g++,
            h = $(".switchAppBtn").last()
    }
    ;
    e.prototype.V3ds = function() {
        window.location = this.V3dt()
    }
    ;
    e.prototype.V3du = function(d) {
        this.V3dv = this.Vj("div", "logDiv");
        $(d).append(this.V3dv);
        $(this.V3dv).html("<h1>CB.LOG( x )</h1>");
        CB.Vcv = function(c, f, g) {
            "board" != g && (c = $(String.f("<div class='cbLogLine {0}'>{1}</div>", f, c)),
            $(this.V3dv).append(c),
            c[0].scrollIntoView())
        }
        .bind(this)
    }
    ;
    e.prototype.V3dt = function() {
        CB.Vq.V34() || CB.Vq.V37();
        return "https://play.chessbase.com/Logon?returnurl=" + encodeURIComponent(document.location)
    }
    ;
    e.prototype.V3dw = function() {
        CB.Vq.V34() || CB.Vq.V37();
        return "https://play.chessbase.com/createAccount?returnurl=" + encodeURIComponent(document.location)
    }
    ;
    e.prototype.redirectToLivePage = function() {
        CB.V1uu("Live");
        this.redirectTo("live")
    }
    ;
    e.prototype.openAccountPage = function() {
        var d = String.formatEx(V3ir.config.editAccountUrl, CB.V6r.V12s(glSettings.getLanguageId()));
        window.open(d)
    }
    ;
    e.prototype.openRegisterPage = function() {
        var d = this.V3dw();
        window.location.href = d
    }
    ;
    e.prototype.redirectTo = function(d, c) {
        d = String.f("https://{0}.chessbase.com", d);
        c ? window.open(d) : window.location = d
    }
    ;
    e.prototype.V3dx = function(d, c) {
        if (c) {
            var f = new CB.Game;
            f.assign(CB.PGN.V1f3(c));
            d.getKernel().playFromPgnGame = f
        }
    }
    ;
    e.prototype.V3dy = function(d, c, f) {
        this.V3dz(function(g) {
            var h = $(d).offset().left
              , k = $(d).offset().top
              , l = $(d).width();
            CB.V1ea.drawFree(g, h - 10, k + 120, h + .4 * l, k + 20, 9, "hsla( 130, 50%, 50%, 0.9 )");
            g.font = "bold 30px Roboto";
            g.fillStyle = "hsla( 120, 50%, 100%, 1.0 )";
            g.fillText(c, h + 10, k + 120)
        }
        .bind(this), f)
    }
    ;
    e.prototype.V3dz = function(d, c, f) {
        var g = $(String.f("<canvas width={0}, height={1}>", window.innerWidth - 10, window.innerHeight - 10));
        $(document.body).append(g);
        $(g).css("zIndex", 900);
        $(g).css("left", 4);
        $(g).css("top", 4);
        $(g).css("position", "fixed");
        $(g).click(function() {
            g.remove()
        });
        d(g[0].getContext("2d"));
        (new CB.Timer(function() {
            g.remove()
        }
        )).runOnce(c || 2E3)
    }
    ;
    e.prototype.getBoardUI = function() {
        if (this.getKernel() && this.getKernel().boardWin) {
            var d = this.getKernel().boardWin;
            return {
                markSquare: function(c, f, g) {
                    d.markSquare(c, f, g)
                },
                drawArrow: function(c, f, g, h, k) {
                    d.drawArrow(c, f, g, h, !1, k)
                }
            }
        }
    }
    ;
    e.prototype.log = function(d) {}
    ;
    e.prototype.Vbd = function(d, c) {
        6
    }
    ;
    e.prototype.chatOut = function() {}
    ;
    e.prototype.V3e0 = function(d) {
        if ("INPUT" == d.target.nodeName || "TEXTAREA" == d.target.nodeName)
            return !0;
        if (this.V3bu) {
            var c = !0
              , f = this.V3ce[0].getKernel();
            switch (d.which) {
            default:
                c = !1;
                break;
            case 37:
                f.V3i6.mayNavigate() && f.game.gotoPrev();
                break;
            case 39:
                f.V3i6.mayNavigate() && f.game.gotoNext();
                break;
            case 40:
                d.altKey && (this.newGame ? this.newGame() : V3ir.execCommand(CB.V1ge.NEW_GAME));
                break;
            case 66:
                d.ctrlKey && f.boardWin && f.boardWin.flipBoard();
                break;
            case 113:
                d.altKey && (this.V3e1 ? V3ir.panelMgr.studyMode && V3ir.panelMgr.studyMode != CB.V3e2.V3e3 || this.V3e1() : V3ir.execCommand(CB.V1ge.TOGGLE_ANALYSIS_ENGINE));
                break;
            case 187:
                this.V3e4 && !this.isMobileLayout() && this.V3e4(1);
                break;
            case 189:
                this.V3e4 && !this.isMobileLayout() && this.V3e4(-1)
            }
            c && d.preventDefault();
            return c
        }
    }
    ;
    return e
}();
"use strict";
"NOMINIFY=";
CB.V295 = {
    NONE: -1,
    V160: 0,
    WHITE: 1,
    BLACK: 2,
    V2b1: 3,
    V2b2: 4
};
CB.V2a9 = {
    V2ad: 0,
    V2ac: 1,
    V2aa: 2
};
CB.V3e5 = function() {
    function e(c, f) {
        c.push([CB.V1b.Vzw(f.title), f.nGames, f.cloudId, CB.V1b.Vzw(f.owner)])
    }
    var b = {
        openCloudDatabase: function() {
            V3ir.initCloudManager()
        },
        nMaxOnlineDBGames: 2,
        selectCloudDatabase: function(c, f, g) {
            if (!this.getIsFormOpen() && f) {
                for (var h = [], k = [], l = CB.V1b.V1c(c), m = 0; m < f.size(); m++)
                    f.items[m].owner.toLowerCase() == l.toLowerCase() ? e(h, f.items[m]) : e(k, f.items[m]);
                f = [{
                    name: "title",
                    type: "string"
                }, {
                    name: "games",
                    type: "int"
                }, {
                    name: "cloudId",
                    type: "int"
                }, {
                    name: "owner",
                    type: "string"
                }];
                l = [{
                    header: "Title",
                    dataIndex: "title",
                    flex: 2
                }, {
                    header: "Games",
                    dataIndex: "games",
                    flex: 1
                }, {
                    header: "Owner",
                    dataIndex: "owner",
                    flex: 2
                }];
                var n = -1;
                CB.V1hl && CB.V1hl.V3e6(c, h, k, f, l, function(p) {
                    p && (n = p.cloudId);
                    g(n)
                })
            }
        },
        blockLiveBookUpdates: function(c) {
            this.getKernel().V3i6.blockLiveBookUpdate(c)
        },
        loadGame: function(c) {
            V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny() || V3ir.pushGame(this.getKernel().game);
            this.getKernel().loadSearchResultGame(c)
        }
    }
      , d = new CB.V3id;
    b.refreshOnlineDBGames = function() {
        this.dbGames && this.dbGames.isVisible() && (this.dbGames.setEmptyText("Searching..."),
        d.exec(function() {
            this.getKernel().V3i6.searchOnlineDB()
        }
        .bind(this), 500))
    }
    ;
    b.useMatBalanceDefault = function() {
        return 800 < window.innerHeight
    }
    ;
    b.execCommand = function(c) {
        try {
            switch (c) {
            case V3ir.V3ia.ONLINEDB_SEARCH:
                this.getKernel().V3i6.search();
                break;
            case CB.V1ge.V38r:
                this.V3e7() && this.V3e8().setGame(this.getKernel().game);
                break;
            case V3ir.V3ia.OPEN_CLOUDDATABASE:
                this.openCloudDatabase();
                break;
            case V3ir.V3ia.LOGIN:
                V3ir.changeCloudLogin();
                break;
            case V3ir.V3ia.SAVE_CLOUDDB:
                V3ir.saveToCloud(this.getKernel().game, 0);
                break;
            case V3ir.V3ia.REPLACE_CLOUDDB:
                V3ir.replaceInCloud(this.getKernel().game, 0);
                break;
            case V3ir.V3ia.SAVE_WHITE_REPERTOIRE:
                V3ir.saveToWhiteRepertoire(this.getKernel().game);
                break;
            case V3ir.V3ia.SAVE_BLACK_REPERTOIRE:
                V3ir.saveToBlackRepertoire(this.getKernel().game);
                break;
            case V3ir.V3ia.CREATE_CLOUDDB:
                V3ir.createCloudDB();
                break;
            case V3ir.V3ia.DELETE_CLOUDDB:
                V3ir.deleteCloudDB();
                break;
            case V3ir.V3ia.EDIT_HEADER:
                V3ir.editHeader(this.getKernel().game);
                break;
            case V3ir.V3ia.LOAD_WHITE_MYMOVES:
                this.getKernel().boardWin.setBlackIsBottom(!1, !0);
                V3ir.loadMyMoves(CB.V295.WHITE, new CB.Game);
                break;
            case V3ir.V3ia.LOAD_BLACK_MYMOVES:
                this.getKernel().boardWin.setBlackIsBottom(!0, !0);
                V3ir.loadMyMoves(CB.V295.BLACK, new CB.Game);
                break;
            case V3ir.V3ia.MARK_CURRENT_MOVE:
                V3ir.markCurrentMove(this.getKernel(), !1);
                break;
            case V3ir.V3ia.IMPORTANT_CURRENT_MOVE:
                V3ir.markCurrentMove(this.getKernel(), !0);
                break;
            case V3ir.V3ia.UNMARK_CURRENT_MOVE:
                V3ir.unMarkCurrentMove(this.getKernel());
                break;
            case V3ir.V3ia.UPLOAD_TO_MYMOVES:
                V3ir.uploadToMyMoves(this.getKernel())
            }
        } catch (f) {
            c = V3ir.V3ia.toNumString(c),
            CB.V3(c, f)
        }
    }
    ;
    b.execNotaContextMenu = function(c) {
        if (Ext && Ext.create && V3ir.myMovesMgr) {
            CB.V110.V34m("MyMove16");
            CB.V110.V34m("ImportantMove16");
            var f = [{
                text: lm.MARK_MOVE,
                handler: function() {
                    V3ir.markCurrentMove(V3ir.panelMgr.getKernel(), !1)
                },
                iconCls: "MyMove16"
            }, {
                text: lm.MARK_IMPORTANT,
                iconCls: "ImportantMove16",
                handler: function() {
                    V3ir.markCurrentMove(V3ir.panelMgr.getKernel(), !0)
                }
            }];
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny())
                CB.V110.V34m("EraseMove16"),
                CB.V110.V34m("White16"),
                CB.V110.V34m("Black16"),
                CB.V110.V34m("Cutline16"),
                f = f.concat([{
                    text: lm.UNMARK_MOVE,
                    iconCls: "Erase16",
                    handler: function() {
                        V3ir.unMarkCurrentMove(V3ir.panelMgr.getKernel())
                    }
                }, "-", {
                    text: lm.REMOVE_TREE_FROM_HERE,
                    iconCls: "Cutline16",
                    handler: function() {
                        CB.V1hl.V2a1(lm.DELETE_VARIATION_TREE, lm.REMOVE_ALL_MY_MOVES, function(h) {
                            "yes" != h && "ok" != h || V3ir.removeWholeTreeFromCurrentMove(V3ir.panelMgr.getKernel())
                        })
                    }
                }]);
            else {
                var g = V3ir.V3ia;
                f = f.concat(this.getMarkEvalItems("Good16 Bad16 VeryGood16 VeryBad16 Interesting16 Dubious16 WhiteWins16 WhiteBetter16 WhiteSlightly16 Equal16 Unclear16 BlackSlightly16 BlackBetter16 BlackWins16 Compensation16".split(" "), [g.MARK_GOOD, g.MARK_BAD, g.MARK_VERYGOOD, g.MARK_VERYBAD, g.MARK_INTERESTING, g.MARK_DUBIOUS, g.WHITE_WINS, g.WHITE_BETTER, g.WHITE_SLIGHTLY, g.EQUAL, g.UNCLEAR, g.BLACK_SLIGHTLY, g.BLACK_BETTER, g.BLACK_WINS, g.COMPENSATION], "Strong Move;Bad Move;Brilliant Move;Blunder;Interesting Move;Dubious Move;White Is Winning;White Is Better;White: Slight Advantage;Equal;Unclear;Black: Slight Advantage;Black Is Better;Black Is Winning;Compensation".split(";")))
            }
            Ext.create("Ext.menu.Menu", {
                items: f
            }).showAt([c.clientX, c.clientY])
        }
    }
    ;
    b.getMarkEvalItems = function(c, f, g) {
        for (var h = [], k = 0; k < c.length; k++)
            h.push({
                text: g[k],
                iconCls: c[k],
                handler: function() {
                    var l = f[k];
                    return function() {
                        V3ir.commands.commandHandler(l)
                    }
                }()
            });
        return h
    }
    ;
    b.getNotaElement = function() {
        var c = Ext.ComponentManager.get("idNotaPanel");
        if (c)
            return c.nota
    }
    ;
    b.shakeMarkButton = function() {
        CB.$(".MyMove32").addClass("shakeAnimation");
        CB.$(".MyMove24").addClass("shakeAnimation");
        CB.$(".iconMarkHelp").addClass("shakeAnimation")
    }
    ;
    b.stopShakeMarkButton = function() {
        CB.$(".MyMove32").removeClass("shakeAnimation");
        CB.$(".MyMove24").removeClass("shakeAnimation");
        CB.$(".iconMarkHelp").removeClass("shakeAnimation")
    }
    ;
    b.showMessage = function(c, f) {
        this.getKernel() && this.getKernel().boardWin && (this.getKernel().boardWin.addMessage(c, !0),
        f && (new CB.Timer(function() {
            this.getKernel().boardWin.destroyMessage()
        }
        .bind(this))).runOnce(f))
    }
    ;
    b.setLayoutMyMoves = function(c, f, g) {
        if (this.notaElement) {
            if (c) {
                var h = f === CB.V295.BLACK || f === CB.V295.V2b2;
                f = h ? "/Common/Media/Ribbons/Black32.png" : "/Common/Media/Ribbons/White32.png";
                h = h ? lm.BLACK : lm.WHITE;
                var k = lm.MY_MOVES_FOR + "  " + h;
                g && (Array.isArray(g) && 1 < g.length ? (g[1] += " - " + h,
                k = g) : k = g + " - " + h);
                this.notaElement.notaHeaderElement.V2wf(k, f)
            } else
                this.notaElement.notaHeaderElement.V2wf("");
            V3ir.panelMgr.canAnnotate = !c
        }
    }
    ;
    b.getNotationToolBarItems = function(c) {
        return [CB.Vcg.V3e9("PGN", "Save16", "Download Game Notation", "downloadPgnId", function() {
            return V3ir.panelMgr.getKernel().game
        }), "-", CB.Vcg.V3ea(lm.TEXT_AFTER, "Posttext16", c.ADD_POST_TEXT, lm.TEXT_AFTER_TIP), "-", CB.Vcg.V3ea(lm.DELETE_LINE, "DeleteLine16", c.DELETE_LINE, lm.DELETE_LINE_TIP), CB.Vcg.V3ea(lm.CUT_LINE, "CutLine16", c.CUT_LINE, lm.CUT_LINE_TIP), "-", CB.Vcg.V3ea("", "MyMove16", c.MARK_CURRENT_MOVE, "Mark as 'My Move'"), CB.Vcg.V3ea("", "ImportantMove16", c.IMPORTANT_CURRENT_MOVE, "Mark as Important Move"), CB.Vcg.V3ea("", "Erase16", c.UNMARK_CURRENT_MOVE, "Unmark current move"), "-", CB.Vcg.V3ea("", "WhiteSlightly16", c.WHITE_SLIGHTLY, "White has a slight advantage"), CB.Vcg.V3ea("", "Equal16", c.EQUAL, "The position is equal"), CB.Vcg.V3ea("", "Unclear16", c.UNCLEAR, "The position ist unclear"), CB.Vcg.V3ea("", "BlackSlightly16", c.BLACK_SLIGHTLY, "Black has a slight advantage"), CB.Vcg.V3ea("", "WhiteBetter16", c.WHITE_BETTER, "White is better"), CB.Vcg.V3ea("", "BlackBetter16", c.BLACK_BETTER, "Black is better"), CB.Vcg.V3ea("", "WhiteWins16", c.WHITE_WINS, "White is winning"), CB.Vcg.V3ea("", "BlackWins16", c.BLACK_WINS, "Black is winning"), CB.Vcg.V3ea("", "Compensation16", c.COMPENSATION, "Material compensation"), "-", CB.Vcg.V3ea("", "InsertDiagram16", c.INSERT_DIAGRAM, lm.INSERT_DIAGRAM)]
    }
    ;
    return b
}();
CB.V3eb = function() {
    function e() {
        CB.V1hl.V3ee("Name", "New Database", function(g) {
            g && V3ir.cloudMgr && V3ir.cloudMgr.createDatabase(g)
        }
        .bind(this))
    }
    function b() {
        V3ir.cloudMgr && V3ir.cloudMgr.logOff();
        V3ir.myMovesMgr && V3ir.myMovesMgr.logOff();
        V3ir.aTBLobby && V3ir.aTBLobby.logOff();
        V3ir.logOffPlayerLobby();
        V3ir.logOffOnlineLobby();
        if (V3ir.panelMgr.getKernel())
            V3ir.panelMgr.getKernel().V3i6.onBeforeUnload();
        V3ir.exitInstance();
        V3ir.myMovesMgr && !V3ir.myMovesMgr.isMovesLoadedForAny() && V3ir.saveGameToLocalStorage()
    }
    function d() {
        V3ir.cloudMgr && V3ir.myMovesMgr && !CB.Vq.V8x() && (CB.Vq.V37() && (V3ir.panelMgr.stopEngines && V3ir.panelMgr.stopEngines(),
        V3ir.blurLogOffTimer && V3ir.stop && V3ir.stop(),
        V3ir.blurLogOffTimer = new CB.Timer(function() {
            V3ir.cloudMgr.logOff();
            V3ir.myMovesMgr.logOff()
        }
        ),
        V3ir.blurLogOffTimer.runOnce(6E4)),
        V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny() || V3ir.saveGameToLocalStorage())
    }
    function c() {
        V3ir.blurLogOffTimer && V3ir.blurLogOffTimer.stop()
    }
    function f() {
        document.hidden ? d() : c()
    }
    return {
        initCloudManager: function() {
            if (void 0 !== V3ir.cloudMgr)
                V3ir.cloudMgr.isLoggedIn() ? V3ir.cloudMgr.requestDatabases() : this.loginToCloud();
            else {
                var g = this.copyUserName();
                g && V3ir.V3i2.userName && "guest" !== V3ir.V3i2.userName ? (V3ir.V3i2.loginToken = g,
                this.createCloudManager(!0, null, g)) : V3ir.V3i2.hasUserAndPass() ? this.createCloudManager(!0) : CB.V1hl && CB.V1hl.V3ec("ChessBase Game Cloud", V3ir.V3i2, function(h) {
                    this.createCloudManager(h);
                    this.createMyMovesManager(h)
                }
                .bind(this), function() {
                    CB.Vcg.Vch()
                }, {})
            }
        },
        initMyMovesManager: function() {
            if (void 0 !== V3ir.myMovesMgr)
                V3ir.myMovesMgr.isLoggedIn() || this.loginToMyMoves();
            else {
                var g = this.copyUserName();
                g && V3ir.V3i2.userName && "guest" !== V3ir.V3i2.userName ? (V3ir.V3i2.loginToken = g,
                this.createMyMovesManager(!0, g)) : V3ir.V3i2.hasUserAndPass() && this.createMyMovesManager(!0)
            }
        },
        copyUserName: function() {
            V3ir.V3i2.userName || (V3ir.V3i2.userName = CB.DOM.V34d(!0));
            V3ir.V3i2.userName || (V3ir.V3i2.userName = CB.DOM.getCodedCookie("AccountBackName64", !0));
            V3ir.V3i2.loginMode = CB.LoginMode.NORMAL;
            return CB.DOM.V34c("AccountToken") || V3ir.V3i2.loginToken
        },
        createCloudManager: function(g, h, k) {
            CB.DOM.Va0(V3ir.V3i2.userName);
            V3ir.config.silentCloud || V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.V24w(lm.CONNECTING);
            V3ir.cloudMgr = new CB.Server.CloudManager;
            V3ir.cloudMgr.onServerDown = this.onCloudServerDown.bind(this);
            V3ir.cloudMgr.onInvalidPassword = this.changeCloudLogin.bind(this);
            var l = V3ir.V3i2.userName
              , m = CB.LoginMode.NORMAL;
            g || (l = "Guest",
            m = CB.LoginMode.GUEST);
            V3ir.cloudMgr.createLobby(this.config.getCloudServerUris(), l, V3ir.V3i2.password, m, k);
            this.V3ed || (this.V3ed = !0,
            window.addEventListener("beforeunload", b),
            V3ir.isExtJS || window.addEventListener("unload", b),
            window.addEventListener("blur", d),
            window.addEventListener("focus", c),
            window.addEventListener("visibilitychange", f));
            V3ir.cloudMgr.connect();
            V3ir.cloudMgr.setCallAfterDBSelected(h);
            V3ir.initCloudListeners(V3ir.cloudMgr);
            V3ir.panelMgr.getKernel() && V3ir.panelMgr.getKernel().game.addOnResetGameListener(function() {
                if (V3ir.cloudMgr)
                    V3ir.cloudMgr.onResetGame()
            })
        },
        createMyMovesManager: function(g, h) {
            if (V3ir.myMovesMgr)
                g = V3ir.V3i2.userName,
                k = CB.LoginMode.NORMAL,
                V3ir.myMovesMgr.createLobby(this.config.getMyMovesServerUris(), g, V3ir.V3i2.password, k, h);
            else {
                CB.DOM.Va0(V3ir.V3i2.userName);
                V3ir.myMovesMgr = new CB.Server.MyMovesManager;
                V3ir.myMovesMgr.onServerDown = this.onMyMovesServerDown.bind(this);
                g = V3ir.V3i2.userName;
                var k = CB.LoginMode.NORMAL;
                h ? (V3ir.myMovesMgr.isLoggedIn() && V3ir.myMovesMgr.logOff(),
                V3ir.myMovesMgr.createLobby(this.config.getMyMovesServerUris(), g, V3ir.V3i2.password, k, h)) : V3ir.myMovesMgr.createLobby(this.config.getMyMovesServerUris(), "guest", "", CB.LoginMode.GUEST, "");
                this.V3ed || (this.V3ed = !0,
                window.addEventListener("beforeunload", b),
                V3ir.isExtJS || window.addEventListener("unload", b),
                window.addEventListener("blur", d),
                window.addEventListener("focus", c),
                window.addEventListener("visibilitychange", f));
                V3ir.myMovesMgr.connect();
                V3ir.initMyMovesListeners(V3ir.myMovesMgr);
                V3ir.panelMgr.getKernel() && (V3ir.panelMgr.getKernel().game.addOnResetGameListener(function() {
                    if (V3ir.myMovesMgr)
                        V3ir.myMovesMgr.onResetGame()
                }),
                V3ir.panelMgr.getKernel().game.addOnNotaDoubleClickListener(function() {
                    V3ir.onNotaDoubleClick()
                }))
            }
        },
        connectCloudManager: function(g, h, k) {
            CB.DOM.Va0(V3ir.V3i2.userName);
            V3ir.config.silentCloud || V3ir.panelMgr.EXTIsNotSupported || CB.Vcg.V24w(lm.CONNECTING);
            var l = V3ir.V3i2.userName
              , m = CB.LoginMode.NORMAL;
            g || (l = "Guest",
            m = CB.LoginMode.GUEST);
            V3ir.cloudMgr.connectUser(l, V3ir.V3i2.password, m, k);
            V3ir.cloudMgr.setCallAfterDBSelected(h)
        },
        connectMyMovesManager: function(g, h) {
            CB.DOM.Va0(V3ir.V3i2.userName);
            V3ir.myMovesMgr.connectUser(V3ir.V3i2.userName, V3ir.V3i2.password, CB.LoginMode.NORMAL, h)
        },
        initCloudListeners: function(g) {},
        initMyMovesListeners: function(g) {
            V3ir.panelMgr.tbBook && V3ir.panelMgr.tbBook.initCloudListener(g);
            V3ir.panelMgr.getKernel() && V3ir.panelMgr.getKernel().V3i6.initMyMovesListener && V3ir.panelMgr.getKernel().V3i6.initMyMovesListener(g)
        },
        onCloudServerDown: function() {
            this.config.silentCloud || alert("Sorry, Cloud Server is currently in maintenance, please wait a few minutes.")
        },
        onMyMovesServerDown: function() {
            this.config.silentCloud || alert("Sorry, MyMoves Server is currently in maintenance, please wait a few minutes.")
        },
        onTokenLoginOk: function() {
            this.panelMgr.V3bv && (this.initCloudManager(),
            this.initMyMovesManager())
        },
        onInvalidPassword: function() {},
        shouldRequestCloudDBsOnLogin: function() {
            return !1
        },
        loginToCloud: function(g) {
            var h = CB.DOM.V34c("AccountToken");
            if (h) {
                var k = CB.DOM.V34d(!0);
                k && (V3ir.V3i2.userName = k);
                V3ir.V3i2.loginMode = CB.LoginMode.NORMAL;
                V3ir.V3i2.loginToken = h;
                void 0 === V3ir.cloudMgr ? this.createCloudManager(!0, g, h) : this.connectCloudManager(!0, g, h)
            } else
                this.changeCloudLogin(g)
        },
        loginToMyMoves: function() {
            var g = CB.DOM.V34c("AccountToken");
            if (g) {
                var h = CB.DOM.V34d(!0);
                h && (V3ir.V3i2.userName = h);
                V3ir.V3i2.loginMode = CB.LoginMode.NORMAL;
                V3ir.V3i2.loginToken = g;
                void 0 === V3ir.myMovesMgr ? this.createMyMovesManager(!0, g) : this.connectMyMovesManager(!0, g)
            }
        },
        changeCloudLogin: function(g) {
            if (CB.V1hl) {
                var h = CB.DOM.V34d(!0);
                h || (h = CB.DOM.getCodedCookie("AccountBackName64", !0));
                h && (V3ir.V3i2.userName = h);
                CB.V1hl.V3ec && CB.V1hl.V3ec("ChessBase Game Cloud", V3ir.V3i2, function(k) {
                    void 0 === V3ir.cloudMgr ? this.createCloudManager(k, g) : this.connectCloudManager(k, g)
                }
                .bind(this), function() {
                    CB.Vcg.Vch()
                }, {
                    guestBtn: !1,
                    createBtn: !0,
                    forgotBtn: !0
                })
            }
        },
        saveToCloud: function(g) {
            var h = function() {
                CB.V1hl.editGameHeader(g.hdr, function() {
                    g.fireOnHeaderChanged();
                    V3ir.cloudMgr.saveGame(g)
                }
                .bind(this))
            }
            .bind(this);
            void 0 === V3ir.cloudMgr || V3ir.cloudMgr.isGuest() ? V3ir.loginToCloud(h) : h()
        },
        replaceInCloud: function(g) {
            var h = function() {
                CB.V1hl.editGameHeader(g.hdr, function() {
                    g.fireOnHeaderChanged();
                    V3ir.cloudMgr.replaceGame(g)
                }
                .bind(this))
            }
            .bind(this);
            void 0 === V3ir.cloudMgr || V3ir.cloudMgr.isGuest() ? V3ir.loginToCloud(h) : h()
        },
        editHeader: function(g) {
            CB.V1hl.editGameHeader(g.hdr, function() {
                g.fireOnHeaderChanged();
                V3ir.cloudMgr.canReplaceGame(g) && V3ir.cloudMgr.replaceGame(g)
            })
        },
        saveToWhiteRepertoire: function(g) {
            alert("NOTIMPL")
        },
        saveToBlackRepertoire: function(g) {
            alert("NOTIMPL")
        },
        createCloudDB: function() {
            void 0 === V3ir.cloudMgr || V3ir.cloudMgr.isGuest() ? this.loginToCloud() : e.bind(this)()
        },
        deleteCloudDB: function() {
            void 0 === V3ir.cloudMgr || V3ir.cloudMgr.isGuest() ? this.loginToCloud() : V3ir.cloudMgr.deleteDatabase()
        },
        setLoggedIn: function(g) {
            g ? this.isPlugin() || (document.title = this.appTitle + " - " + V3ir.V3i2.userName) : (V3ir.cloudMgr && V3ir.cloudMgr.isLoggedIn() && (V3ir.cloudMgr.logOff(),
            delete V3ir.cloudMgr),
            V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn() && (V3ir.myMovesMgr.isMovesLoadedForAny() && V3ir.panelMgr.getKernel().newGame(),
            V3ir.myMovesMgr.logOff(),
            delete V3ir.myMovesMgr),
            this.panelMgr.showDatabase && this.panelMgr.showDatabase(null),
            this.isPlugin() || (document.title = this.appTitle + " - not logged in"),
            this.V3ef = !1);
            this.superClass.setLoggedIn.apply(this, arguments)
        },
        loadMyMoves: function(g, h) {
            V3ir.checkMyMovesLoggedIn() && V3ir.panelMgr.getKernel().V3i6.mayLoadGames() && (V3ir.myMovesMgr.isMovesLoadedForAny() || V3ir.pushGame(V3ir.panelMgr.getKernel().game),
            V3ir.panelMgr.getKernel().V3i6.shouldRefreshOnlineDB = !0,
            V3ir.myMovesMgr.loadCurrentMyMoves(g, h),
            V3ir.panelMgr.blockLiveBookUpdates(CB.V2a9.V2ad))
        },
        gameStack: [],
        pushGame: function(g) {
            var h = new CB.Game;
            h.assign(g);
            this.gameStack.push(h)
        },
        restorePrevGame: function() {
            if (this.gameStack.length) {
                var g = this.gameStack.pop();
                V3ir.panelMgr.getKernel().V3i6.getFnLoadSearchResult().call(V3ir.panelMgr.getKernel(), g)
            }
        },
        removeWholeTreeFromCurrentMove: function(g, h) {
            if (V3ir.checkMyMovesLoggedIn() && g.game.getMoveOffs() <= g.game.getCurLine().length) {
                var k = new CB.Game
                  , l = g.game.getMoveOffs();
                h && (l = g.game.getLineStartMoveNo());
                for (h = 0; h < l; h++)
                    k.makeMove(g.game.getCurLine()[h]);
                if (g = g.game.getCurLine()[h])
                    g = new CB.V17g(g.from,g.to,g.prom),
                    V3ir.myMovesMgr.removeWholeTree(k.getCurPos(), g, V3ir.myMovesMgr.myMovesLoadMode),
                    k.gotoPrev()
            }
        },
        markCurrentMove: function(g, h) {
            V3ir.panelMgr.stopShakeMarkButton();
            h = h || !1;
            if (V3ir.checkMyMovesLoggedIn() && g.game.getMoveOffs() <= g.game.getCurLine().length && this.checkMyMovesLoadedForOtherSide(!g.getCurPos().getBTM())) {
                g.game.deleteAnno(CB.AnnoType.V1a1);
                h ? g.addSymbol(CB.V1g4.V1vq) : g.addSymbol(CB.V1g4.V1vp);
                var k = this.cloneGameToCurPos(g.game);
                V3ir.myMovesMgr.storePosAndMoves(k, h ? 3 : 2);
                k = new CB.V1cw;
                var l = g.game.getLastMove();
                if (l) {
                    var m = g.getCurPos().getMoveNum();
                    k = k.getMoveNota(l, m);
                    l = k + " " + lm.MARKED;
                    h && (l = k + " " + lm.MARKED_IMPORANT);
                    g.boardWin.addMessage(l, !0);
                    (new CB.Timer(function() {
                        g.boardWin.destroyMessage()
                    }
                    )).runOnce(2E3);
                    V3ir.myMovesMgr.isMovesLoadedFor(!g.getCurPos().getBTM()) && (k = this.cloneGameToCurPos(g.game, 2),
                    V3ir.myMovesMgr.loadMyMoves(V3ir.myMovesMgr.myMovesLoadMode, k))
                }
            }
        },
        checkMyMovesLoadedForOtherSide: function(g) {
            if (0 === this.panelMgr.getKernel().game.getMoveNo())
                V3ir.panelMgr.showMessage(lm.ENTER_OR_CLICK_MOVE_AND_MARK, 5E3);
            else {
                switch (V3ir.myMovesMgr.myMovesLoadMode) {
                default:
                case CB.V295.V160:
                    g = !0;
                    break;
                case CB.V295.BLACK:
                    var h = lm.CAUTION_YOU_ARE_EDITING_MOVES_FOR + " " + lm.BLACK + ".";
                    break;
                case CB.V295.WHITE:
                    g = !g,
                    h = lm.CAUTION_YOU_ARE_EDITING_MOVES_FOR + " " + lm.WHITE + "."
                }
                g || V3ir.panelMgr.showMessage(h);
                return g
            }
        },
        makeMainMoveOrder: function(g) {
            if (V3ir.checkMyMovesLoggedIn() && g.game.getMoveOffs() <= g.game.getCurLine().length) {
                for (var h = new CB.Game, k = 0; k < g.game.getMoveOffs(); k++)
                    h.makeMove(g.game.getCurLine()[k]);
                V3ir.myMovesMgr.makeMainMoveOrder(h);
                h = new CB.V1cw;
                if (k = g.game.getLastMove()) {
                    var l = g.getCurPos().getMoveNum();
                    h = h.getMoveNota(k, l);
                    g.boardWin.addMessage(h + " is main move order.", !0);
                    (new CB.Timer(function() {
                        g.boardWin.destroyMessage()
                    }
                    )).runOnce(2E3);
                    V3ir.myMovesMgr.isMovesLoadedFor(!g.getCurPos().getBTM()) && V3ir.myMovesMgr.reloadMyMoves()
                }
            }
        },
        unMarkCurrentMove: function(g) {
            if (V3ir.checkMyMovesLoggedIn() && g.game.getMoveOffs() <= g.game.getCurLine().length && this.checkMyMovesLoadedForOtherSide(!g.getCurPos().getBTM())) {
                var h = g.game.getLastMove();
                if (h) {
                    g.game.deleteAnno(CB.AnnoType.V1a1);
                    var k = new CB.Position;
                    g.game.enableEvents(!1);
                    g.game.gotoPrev();
                    k.copy(g.game.getCurPos());
                    g.game.gotoNext();
                    V3ir.myMovesMgr.removeFromMyMoves(k, h);
                    g.game.enableEvents(!0);
                    k = new CB.V1cw;
                    var l = g.getCurPos().getMoveNum();
                    h = k.getMoveNota(h, l);
                    g.boardWin.addMessage(h + " cleared.", !0);
                    (new CB.Timer(function() {
                        g.boardWin.destroyMessage()
                    }
                    )).runOnce(2E3);
                    V3ir.myMovesMgr.isMovesLoadedFor(!g.getCurPos().getBTM()) && (h = this.cloneGameToCurPos(g.game, 2),
                    V3ir.myMovesMgr.loadMyMoves(V3ir.myMovesMgr.myMovesLoadMode, h))
                }
            }
        },
        uploadToMyMoves: function(g) {
            V3ir.checkMyMovesLoggedIn() && (g.boardWin.addMessage(lm.GAME_UPLOADED, !0),
            V3ir.myMovesMgr.uploadToMyMoves(g.game),
            (new CB.Timer(function() {
                g.boardWin.destroyMessage()
            }
            )).runOnce(2E3),
            V3ir.myMovesMgr.reloadMyMoves())
        },
        isCloudLoggedIn: function() {
            return V3ir.cloudMgr && V3ir.cloudMgr.isLoggedIn()
        },
        checkCloudLoggedIn: function() {
            if (V3ir.cloudMgr) {
                if (V3ir.cloudMgr.isLoggedIn())
                    return !0;
                if (V3ir.cloudMgr.wasLoggedIn() && !V3ir.cloudMgr.isConnected())
                    return V3ir.cloudMgr.reconnectUser(),
                    !0
            }
            V3ir.panelMgr.showMessage(lm.PLEASE_LOGIN_OPENINGS, 3E3);
            return !1
        },
        isMyMovesLoggedIn: function() {
            return V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn()
        },
        checkMyMovesLoggedIn: function() {
            if (V3ir.myMovesMgr) {
                if (V3ir.myMovesMgr.isLoggedIn() && !V3ir.myMovesMgr.isGuest())
                    return !0;
                if (V3ir.myMovesMgr.wasLoggedIn() && !V3ir.myMovesMgr.isConnected())
                    return V3ir.myMovesMgr.reconnectUser(),
                    !0
            }
            V3ir.panelMgr.showMessage(lm.PLEASE_LOGIN_OPENINGS, 3E3);
            return !1
        },
        cloneGameToCurPos: function(g, h) {
            for (var k = new CB.Game, l = 0; l < g.getMoveOffs() && l < (h || 999); l++) {
                var m = g.getCurLine()[l];
                if (m) {
                    k.makeMove(new CB.V17g(m.from,m.to,m.prom));
                    var n = k.getLastMove();
                    m.annos && m.annos[CB.AnnoType.V1a1] && (n.annos = new CB.Annotation,
                    n.annos[CB.AnnoType.V1a1] = m.annos[CB.AnnoType.V1a1])
                } else {
                    alert("game logic problem");
                    break
                }
            }
            return k
        },
        onNotaDoubleClick: function() {
            this.loadMyMoves(V3ir.myMovesMgr.myMovesLoadMode, new CB.Game);
            V3ir.panelMgr.refreshOnlineDBGames && V3ir.panelMgr.refreshOnlineDBGames()
        },
        notifyMyMovesChanged: function() {
            this.myMovesMgr.checkPosAndMoves(this.panelMgr.getKernel().game.getCurPos());
            this.myMovesMgr.isMovesLoadedFor(this.panelMgr.getKernel().getCurPos().getBTM()) && this.myMovesMgr.reloadMyMoves()
        }
    }
}();
CB.V1qp = function() {
    var e = {
        createGUIElements: function(d) {
            this.superClass.createGUIElements.call(this, d);
            d.shouldAnimatePosChange = this.shouldAnimatePosChange.bind(this);
            this.setDefaultAnimSteps(d)
        },
        setDefaultAnimSteps: function(d) {
            if (this.kernel)
                var c = d || this.kernel.boardWin;
            c && (CB.Vq.V37() ? c.animSteps = {
                forMove: .3,
                forPosition: .3
            } : c.animSteps = {
                forMove: .6,
                forPosition: .6
            })
        },
        shouldAnimatePosChange: function() {
            return this.V3eg
        },
        blockLiveBookUpdate: function(d) {
            if (this.V3eh != CB.V2a9.V2aa || d != CB.V2a9.V2ad)
                this.V3eh = d
        },
        onAnnotate: function() {
            return V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny() ? (V3ir.panelMgr.showMessage("Cannot annotate 'My Moves'", 3E3),
            !1) : this.canAnnotateLoadedGames()
        },
        onTextAnno: function(d, c) {
            if (c) {
                if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny())
                    return c = V3ir.cloneGameToCurPos(this.kernel.game),
                    V3ir.myMovesMgr.storeText(c, d),
                    !0
            } else
                V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny() && V3ir.panelMgr.showMessage("'My Moves' can only have text after a move.");
            if (this.canAnnotateLoadedGames())
                return !0;
            V3ir.panelMgr.showMessage("You can only annotate your own moves");
            return !1
        },
        onEval: function(d) {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny()) {
                var c = this.kernel.game.getAnno(CB.AnnoType.V1a1);
                c && c.hasExclusiveEval(d) && (d = 0);
                c = V3ir.cloneGameToCurPos(this.kernel.game);
                V3ir.myMovesMgr.storeEval(c, d);
                return !0
            }
            if (this.canAnnotateLoadedGames())
                return !0;
            V3ir.panelMgr.showMessage("You can only annotate your own moves");
            return !1
        },
        canAnnotateLoadedGames: function() {
            return !1
        },
        onPromoteLine: function() {
            return V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny() ? (V3ir.panelMgr.showMessage("Line ordering is automatic in 'My Moves'"),
            !1) : !0
        },
        onDeleteLine: function() {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny())
                return CB.V1hl.V2a1(lm.DELETE_VARIATION_TREE, lm.REMOVE_ALL_MY_MOVES, function(d) {
                    "yes" != d && "ok" != d || V3ir.removeWholeTreeFromCurrentMove(this.kernel, !0)
                }
                .bind(this)),
                !1;
            if (this.canAnnotateLoadedGames())
                return !0;
            V3ir.panelMgr.showMessage("You can only annotate your own moves");
            return !1
        },
        onCutLine: function() {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedForAny())
                return CB.V1hl.V2a1(lm.DELETE_VARIATION_TREE, lm.REMOVE_MOVES_FROM_HERE, function(d) {
                    "yes" != d && "ok" != d || V3ir.removeWholeTreeFromCurrentMove(this.kernel)
                }
                .bind(this)),
                !1;
            if (this.canAnnotateLoadedGames())
                return !0;
            V3ir.panelMgr.showMessage("You can only annotate your own moves");
            return !1
        },
        cloudOnEnteredMove: function(d) {
            try {
                var c = V3ir.panelMgr.getNotaElement();
                c && c.focus();
                if (V3ir.myMovesMgr && V3ir.myMovesMgr.isMovesLoadedFor(this.kernel.getCurPos().getBTM())) {
                    var f = V3ir.cloneGameToCurPos(this.kernel.game);
                    f.getCurPos().preCalcCtx(d);
                    f.makeMove(d);
                    V3ir.myMovesMgr.storePosAndMoves(f, d, 1)
                }
            } catch (g) {
                alert("CloudEnter: " + g)
            }
        },
        newGame: function() {
            delete this.kernel.game.replaceGameNo;
            delete this.kernel.game.replaceDBId;
            if (V3ir.myMovesMgr)
                V3ir.myMovesMgr.onResetGame();
            V3ir.panelMgr.setLayoutMyMoves(!1)
        },
        searchOnlineDB: function() {
            if (V3ir.panelMgr.dbGames || V3ir.panelMgr.usesOnlineDB && V3ir.panelMgr.usesOnlineDB()) {
                var d = new CB.V3ei;
                d.setSearchBoard(this.kernel.game.getCurPos().board, this.kernel.game.getCurPos().getSideToMove());
                d.setUseBoard(!0);
                null != V3ir.onlineLobby && V3ir.onlineLobby.search(d, this.getOnlineDBMaxGames(), this.kernel.game.getMoveNo())
            }
        },
        getOnlineDBMaxGames: function() {
            return this.nMaxOnlineDBGames
        },
        getFnLoadSearchResult: function() {
            return function(d) {
                this.V3i6.V1qc();
                this.V3i6.V3eg = !1;
                V3ir.panelMgr.setLayoutMyMoves.call(V3ir.panelMgr, !1);
                var c = ObjUtil.clone(this.game)
                  , f = c.getCurPos();
                void 0 !== this.boardWin.V1gt && this.boardWin.V1gt();
                this.game.assign(d, !0);
                d = 0;
                if (this.game.isNormalInit())
                    for (; 60 > ++d && !this.game.gotoPos(f, !0) && 0 < c.getMoveOffs(); )
                        c.gotoPrev(!0),
                        f = c.getCurPos();
                this.game.fireOnResetGame();
                this.game.fireOnChanged();
                this.game.fireOnCurPosChanged();
                this.game.fireOnHeaderChanged();
                this.game.isNormalInit() ? 60 > d && 0 < d && 5 < this.game.getMoveNo() && 1 < this.game.V1cl() && V3ir.panelMgr.refoldToCurrentLine && V3ir.panelMgr.refoldToCurrentLine() : this.game.gotoFirst();
                this.V3i6.V3eg = !0;
                this.V3i6.V1qe()
            }
        }
    }
      , b = new CB.V3id;
    e.forceUpdateCloudOnGamePos = function() {
        this.V3eh = CB.V2a9.V2aa;
        this.updateCloudOnGamePos()
    }
    ;
    e.updateCloudOnGamePos = function() {
        this.V3eh != CB.V2a9.V2ac && b.exec(function() {
            V3ir.panelMgr.tbBook && V3ir.aTBLobby && V3ir.aTBLobby.hasIdReceived && (this.V3ej || !this.V1sa || !this.V1sa.equals(this.kernel.game.getCurPos()) || this.V3eh == CB.V2a9.V2aa) && (this.V3eh = CB.V2a9.V2ad,
            this.V1sa = ObjUtil.clone(this.kernel.game.getCurPos()),
            V3ir.panelMgr.tbBook.clear(),
            (V3ir.panelMgr.tbBook.isVisible() || this.checkCloudWithHiddenBook()) && V3ir.aTBLobby.requestAllMoves(this.kernel.game.getCurPos()),
            V3ir.panelMgr.tbPanel && (V3ir.panelMgr.tbPanel.isVisible() || this.checkCloudWithHiddenBook()) && V3ir.aTBLobby.requestPosInfo(this.kernel.game.getCurPos()),
            this.lbInfo = null,
            this.myMoves = [],
            V3ir.myMovesMgr && (V3ir.panelMgr.tbBook && V3ir.panelMgr.tbBook.isVisible() || this.checkCloudWithHiddenBook()) && (this.myMoves = null,
            !V3ir.myMovesMgr.isLoggedIn() && V3ir.myMovesMgr.wasLoggedIn() ? V3ir.myMovesMgr.reconnectUser() : V3ir.myMovesMgr.isLoggedIn() && (this.V3ej ? V3ir.myMovesMgr.checkPosAndMovesEx(this.kernel.game.getCurPos(), this.V3ej, this.V3ek) : V3ir.myMovesMgr.checkPosAndMoves(this.kernel.game.getCurPos(), this.V3ej, this.V3ek))),
            this.setDefaultAnimSteps())
        }
        .bind(this), 100)
    }
    ;
    e.checkCloudWithHiddenBook = function() {
        return !1
    }
    ;
    e.initMyMovesListener = function(d) {
        d.addOnMyMovesListener(this.myMovesListener.bind(this));
        V3ir.addOnAccountTypeListener(this.V3i7Listener.bind(this))
    }
    ;
    e.myMovesListener = function(d) {
        this.myMoves = d.moves
    }
    ;
    e.V3i7Listener = function(d) {
        switch (d.type) {
        default:
        case 1:
            this.nMaxOnlineDBGames = 5;
            break;
        case 2:
            this.nMaxOnlineDBGames = 30;
            break;
        case 3:
            this.nMaxOnlineDBGames = 50
        }
    }
    ;
    return e
}();
CB.V3el = {
    V3em: function(e, b) {
        return CB.Vcg.V3ao(b, "Databases", "Cloud", ["Open Cloud Database", "Login", "Save Game"], ["Cloud16", "Login16", "Save16"], [e.OPEN_CLOUDDATABASE, e.LOGIN_CLOUDDB, e.SAVE_CLOUDDB], e.OPEN_CLOUDDATABASE, "Open database and save games")
    },
    V3en: function(e) {
        return CB.Vcg.V3ao(32, "Open", "Open", ["Open Cloud Database", "Open PGN File"], ["Cloud16", "Open16"], [e.OPEN_CLOUDDATABASE, e.V38s], e.OPEN_CLOUDDATABASE)
    },
    V3eo: function(e, b) {
        return CB.Vcg.V3ao(b, lm.DATABASES, "Cloud", [lm.OPEN_DATABASE, lm.CREATE_DATABASE, lm.DELETE_DATABASE], ["Cloud16", "CreateCloudDB16", "Delete16"], [e.OPEN_CLOUDDATABASE, e.CREATE_CLOUDDB, e.DELETE_CLOUDDB], void 0, lm.DATABASE_FUNCTIONS)
    },
    V3ep: function(e, b) {
        return CB.Vcg.V3eq(b, lm.MARK_MOVE, "MyMove", e.MARK_CURRENT_MOVE, "Mark the current move as 'my move' to create a repertoire that you can drill.")
    },
    V3er: function(e, b) {
        return CB.Vcg.V3eq(b, lm.LOAD_WHITE, "White", e.LOAD_WHITE_MYMOVES, "Load your White repertoire (marked moves) from the current position.")
    },
    V3es: function(e, b) {
        return CB.Vcg.V3eq(b, lm.LOAD_BLACK, "Black", e.LOAD_BLACK_MYMOVES, "Load your Black repertoire (marked moves) from the current position.")
    },
    V3et: function(e, b, d, c) {
        var f = [lm.MARK_MOVE, lm.MARK_IMPORTANT, lm.UNMARK_MOVE]
          , g = ["MyMove16", "ImportantMove16", "Erase16"]
          , h = [e.MARK_CURRENT_MOVE, e.IMPORTANT_CURRENT_MOVE, e.UNMARK_CURRENT_MOVE];
        d && (f = f.concat(["-", lm.LOAD_WHITE, lm.LOAD_BLACK]),
        g = g.concat(["", "White16", "Black16"]),
        h = h.concat([null, e.LOAD_WHITE_MYMOVES, e.LOAD_BLACK_MYMOVES]));
        c && (f.push(lm.UPLOAD_GAME),
        g.push("Upload16"),
        h.push(e.UPLOAD_TO_MYMOVES));
        return CB.Vcg.V3ao(b, lm.MY_MOVES, "MyMove", f, g, h, void 0, lm.MY_MOVE_MENU_TTIP)
    },
    V3eu: function(e, b) {
        return CB.Vcg.V3eq(b, "Cloud Databases", "Cloud", e.OPEN_CLOUDDATABASE, "Open the list of your databases (cloud)")
    },
    V3ev: function(e, b) {
        return CB.Vcg.V3eq(b, "Save", "Save", e.SAVE_CLOUDDB, "Append game to the current cloud database")
    },
    V3ew: function(e, b) {
        return CB.Vcg.V3ao(b, lm.SAVE, "Save", [lm.SAVE, lm.SAVE_AS_NEW, lm.EDIT_GAME], ["Replace16", "Save16", "Edit16"], [e.REPLACE_CLOUDDB, e.SAVE_CLOUDDB, e.EDIT_HEADER], void 0, lm.SAVE_AND_REPLACE_GAMES)
    },
    V3ex: function(e, b) {
        return V3ir.loginMenuBtn(b)
    }
};
CB.V3ey = function() {
    return {
        onLogin: function() {
            this.gameKernel && this.gameKernel.game.fireOnChanged({
                forceUpdate: !0
            });
            this.setLoginHtml(V3ir.isLoggedIn())
        },
        setLoginHtml: function(e) {
            if (this.V3dd) {
                if (e)
                    this.V3dd.V34v(450 < window.innerHeight ? 28 : 20),
                    Ext.apply(this.V3dd, {
                        overflowY: "auto"
                    }),
                    this.V3dd.update('<div class="CBInfoLoggedIn">' + this.getLoggedInHtml() + "</div>"),
                    this.V3dd.V3ez(this.getLoginInfoGradient() + ";color:white;text-transform:uppercase");
                else {
                    var b = window.innerHeight / 3;
                    this.V3f0 && this.V3f0.el && (b = this.V3f0.V3f1());
                    CB.Vq.V37() && 900 > window.innerHeight ? this.V3dd.V34v(Math.min(b, 120)) : this.V3dd.V34v(Math.min(b, 160));
                    Ext.apply(this.V3dd, {
                        overflowY: "scroll"
                    });
                    this.V3dd.update('<div class="CBInfoNotLoggedIn">' + this.getPleaseLoginHtml() + "</div>");
                    this.V3dd.V3ez(CB.V110.V34j("rgba(254, 254,252,255)", "rgba( 251, 251,247,255)") + ";color:black;text-transform:none;")
                }
                this.V3dd.V3ac = e;
                V3ir.V3i2.noLists() && this.V3dd.el && this.V3dd.setVisible(!1)
            }
        },
        getLoginInfoGradient: function() {
            return CB.V110.V34j("rgba(6, 216,19,255)", "rgba(24, 147,23,255)")
        },
        getGuestInfoGradient: function() {
            return CB.V110.V34j("hsl( 120, 15%, 30% )", "hsl( 0, 15%, 20% )")
        },
        getPleaseLoginHtml: function(e) {
            e = CB.V110.getHeader("h3", lm.LOGIN_PLEASE_LOGIN, "margin-top:4px");
            e += this.getLoginInviteHeader() + "<br/>";
            if (!CB.Vq.V37() || 900 < window.innerHeight)
                e += this.getFunctionalityText() + "<br/>",
                e += lm.LOGIN_ACCOUNT_FREE + "<br/><br/>";
            CB.Vq.V34() || (e += this.genCreateAccountLink());
            return e
        },
        genCreateAccountLink: function() {
            return '<a href="' + V3ir.config.createAccountWebUrl + '" style="color:#8B0A16">' + lm.LOGIN_CREATE_LINK + "</a>"
        },
        getLoggedInHtml: function() {
            return String.f(lm.LOGIN_WELCOME, V3ir.V3i2.userName)
        },
        getLoginInviteHeader: function() {
            return String.f(lm.GENERAL_INVITE, V3ir.appTitle)
        },
        getFunctionalityText: function() {
            return lm.PLEASE_LOGIN
        },
        resizeInfoPanel: function() {
            var e = !1;
            if (this.V3dd && this.V3dd.el)
                if (this.V3dd.V3ac) {
                    var b = 22;
                    450 < window.innerHeight && (b = 650 < window.innerHeight ? 30 : 26);
                    this.V3dd.V34v(b);
                    e = !0
                } else
                    this.V3f0 && (b = Math.min(220, Math.max(20, .3 * this.V3f0.V3f1())),
                    this.V3dd.V34v(b));
            return e
        }
    }
}();
CB.V3f2 = function() {
    return {
        accountLogin: function(e, b) {
            V3ir.V3i2.userName = CB.DOM.V34d(!0) || V3ir.V3i2.userName;
            V3ir.V3i2.loginToken = CB.DOM.V34c("AccountToken");
            if (!e && V3ir.V3i2.loginToken && V3ir.V3i2.userName && "guest" != V3ir.V3i2.userName)
                e = new CB.V9z(V3ir.shortAppName),
                V3ir.V3i2.userName && "guest" != V3ir.V3i2.userName && V3ir.V3i2.password ? e.pwLogin(V3ir.V3i2.userName, V3ir.V3i2.password, this.receiveTokenHandler.bind(this)) : e.tokenLogin(V3ir.V3i2.userName, V3ir.V3i2.loginToken, this.tokenLoginHandler.bind(this));
            else
                this.onRequestLogin(b)
        },
        onRequestLogin: function(e) {
            this.enterLoginForm(e)
        },
        enterLoginForm: function(e, b) {
            V3ir.panelMgr.showAccountsForm(e, "", b)
        },
        tokenLoginHandler: function(e) {
            e && 1 != e.ResultType && !e.timeout ? (this.setLoggedIn(!1),
            this.enterLoginForm()) : e.timeout ? (CB.DOM.V9v("AccountToken"),
            this.setLoggedIn(!1)) : (this.setLoggedIn(!0),
            this.onTokenLoginOk(),
            V3ir.showAccountType(e.Subscription));
            this.V3ef = !1
        },
        onTokenLoginOk: function() {},
        receiveTokenHandler: function(e) {
            if (e && e.Token) {
                var b = unescape(e.Token);
                V3ir.V3i2.loginToken = b;
                V3ir.V3i2.rememberLoginToken();
                e.userId && 1 == e.ResultType && (V3ir.V3i2.userName = e.userId);
                CB.DOM.Va0(V3ir.V3i2.userName);
                this.setLoggedIn(!0);
                CB.Vcg && CB.Vcg.V24w("Logged in OK: " + V3ir.V3i2.userName);
                CB.Timer.Va1(function() {
                    CB.Vcg && CB.Vcg.Vch()
                }, 600);
                this.onTokenLoginOk()
            } else {
                if (e && 1 != e.Result && !e.timeout && !e.error)
                    this.onInvalidToken();
                e.timeout && CB.DOM.V9v("AccountToken", "");
                this.setLoggedIn(!1);
                this.V3ef = !1
            }
        },
        onInvalidToken: function() {
            V3ir.panelMgr.showAccountsForm() ? V3ir.panelMgr.showAccountsForm(lm.PW_INVALID, V3ir.V3i2.userName) : this.enterLoginForm(String.formatEx(lm.PW_INVALID, V3ir.V3i2.userName))
        },
        isLoggedIn: function() {
            return this.V3ac || !!this.V3ef
        },
        setLoggedIn: function(e) {
            this.superClass.setLoggedIn.apply(this, arguments);
            e ? document.title = this.appTitle + " - " + V3ir.V3i2.userName : (document.title = this.appTitle + " - not logged in",
            this.V3ef = !1)
        }
    }
}();
"use strict";
CB.GlobalSettings = function() {
    var e = function() {
        this.commandHandlerId = V3ir.commands.registerCommandHandler(this);
        this.V1f7 = V3ir.commands.registerkeyDownHandler(this);
        this.boardTextureId = V3ir.config.defaultBoardTextureId || CB.V1ge.V2ji;
        this.V2jh = CB.V1ge.V38u;
        this.V3f3 = CB.V1ge.V38v;
        this.load();
        V3ir.config.forceBoardTextureId && (this.V2jh = V3ir.config.forcePieceStyleId,
        this.boardTextureId = V3ir.config.forceBoardTextureId);
        this.pieceFontName = CB.V3bg[this.V2jh];
        this.V3f4 = !1
    };
    e.prototype.destroy = function() {
        V3ir.commands.unregisterCommandHandler(this.commandHandlerId);
        V3ir.commands.unregisterkeyDownHandler(this.V1f7);
        this.save()
    }
    ;
    e.prototype.save = function() {
        var d = new CB.V1v;
        d.save("pieceStyleId", this.V2jh);
        d.save("boardTextureId", this.boardTextureId);
        d.save("pieceStyleId3D", this.V3f3);
        d.save("langCommandId", this.languageCommandId)
    }
    ;
    e.prototype.load = function() {
        var d = new CB.V1v;
        this.V2jh = d.load("pieceStyleId");
        this.V3f3 = d.load("pieceStyleId3D");
        this.boardTextureId = d.load("boardTextureId");
        this.languageCommandId = d.load("langCommandId")
    }
    ;
    e.prototype.isBlueBoard = function() {
        return this.boardTextureId == CB.V1ge.V2jy
    }
    ;
    e.prototype.V3f5 = function(d, c) {
        (new CB.V3f6).send(d, c)
    }
    ;
    var b = new CB.V3id;
    e.prototype.execCommand = function(d) {
        try {
            switch (d) {
            case CB.V1ge.Vej:
                glSettings.inDialog() || CB.V1hl.V3f7(this.V3f5);
                break;
            case CB.V1ge.V398:
            case CB.V1ge.V399:
            case CB.V1ge.V39a:
            case CB.V1ge.V39b:
            case CB.V1ge.V39c:
            case CB.V1ge.V39d:
            case CB.V1ge.V39e:
            case CB.V1ge.V39f:
            case CB.V1ge.V39g:
            case CB.V1ge.V39h:
            case CB.V1ge.V39i:
            case CB.V1ge.V39j:
            case CB.V1ge.V39k:
            case CB.V1ge.V39l:
            case CB.V1ge.V39m:
            case CB.V1ge.V39n:
            case CB.V1ge.V39o:
            case CB.V1ge.V39p:
            case CB.V1ge.V39q:
            case CB.V1ge.V39r:
            case CB.V1ge.V39s:
            case CB.V1ge.V39t:
            case CB.V1ge.V39u:
            case CB.V1ge.V39v:
            case CB.V1ge.V39w:
            case CB.V1ge.V39x:
            case CB.V1ge.V39y:
                this.changeLanguage(d);
                break;
            case CB.V1ge.V39z:
                window.open("https://docu.chessbase.com/translate.html", "_blank");
                break;
            case CB.V1ge.V38u:
            case CB.V1ge.V2jl:
            case CB.V1ge.V2jn:
            case CB.V1ge.V2jp:
            case CB.V1ge.V2jj:
            case CB.V1ge.V2jr:
            case CB.V1ge.V2jt:
            case CB.V1ge.V2jx:
            case CB.V1ge.V2jv:
                this.changeBoardStyle(d);
                break;
            case CB.V1ge.V394:
                b.exec(this.V3f8(), 3E3);
                break;
            case CB.V1ge.V38v:
            case CB.V1ge.V38w:
            case CB.V1ge.V38x:
            case CB.V1ge.V38y:
            case CB.V1ge.V38z:
            case CB.V1ge.V390:
            case CB.V1ge.V391:
            case CB.V1ge.V392:
                CB.Vq.V12b() ? this.V3f9(d) : (alert(lm.BROWSER_DOESNT_SUPPORT_3D),
                this.changeBoardStyle(CB.V1ge.V38u))
            }
        } catch (c) {
            d = V3ir.V3ia.toNumString(d),
            CB.V3(d, c)
        }
    }
    ;
    e.prototype.onKeyDown = function(d) {
        return !1
    }
    ;
    e.prototype.onFileSelect = function(d, c) {
        return !1
    }
    ;
    e.prototype.V3fa = function(d) {
        V3ir.panelMgr.setIsFormOpen(d)
    }
    ;
    e.prototype.inDialog = function() {
        return V3ir.panelMgr.getIsFormOpen()
    }
    ;
    e.prototype.V3f9 = function(d) {
        V3ir.panelMgr.deleteCanvasPanel && (this.V3f4 ? V3ir.panelMgr.deleteCanvasPanel3D() : V3ir.panelMgr.deleteCanvasPanel(),
        this.V3f4 = !0,
        this.pieceFontName3D = CB.V3bg[d],
        this.V3f3 = d,
        V3ir.panelMgr.addCanvasPanel3D())
    }
    ;
    e.prototype.changeBoardStyle = function(d) {
        this.V3f4 && (this.V3f4 = !1,
        V3ir.panelMgr.deleteCanvasPanel3D(),
        V3ir.panelMgr.addCanvasPanel());
        CB.V2ka.clearCache();
        this.pieceFontName = CB.V3bg[d];
        this.V2jh = d;
        this.fireOnBoardStyle(d, this.pieceFontName)
    }
    ;
    e.prototype.V3f8 = function() {
        this.V2jh = this.V2jh ? this.V2jh + 1 : CB.V1ge.V38u + 1;
        this.V2jh >= CB.V1ge.V393 && (this.V2jh = CB.V1ge.V38u);
        !V3ir.config.has3DBoard && this.V2jh >= CB.V1ge.V38v && (this.V2jh = CB.V1ge.V38u);
        this.V2jh >= CB.V1ge.V38v ? CB.Vq.V12b() ? this.V3f9(this.V2jh) : this.changeBoardStyle(this.V2jh) : this.changeBoardStyle(this.V2jh)
    }
    ;
    e.prototype.V3fb = function() {
        return this.pieceFontName
    }
    ;
    e.prototype.changeLanguage = function(d, c) {
        var f = this.languageCommandId;
        this.changeLangButtonFlag(d);
        this.languageCommandId = d;
        V3ir.changeLanguage(this.getLanguageIdOfCommandId(d));
        V3ir.appUrl && f != d && !c && (this.save(),
        window.location = V3ir.appUrl + "?lang=" + CB.V6r.V12s(glSettings.getLanguageId()))
    }
    ;
    e.prototype.changeLangButtonFlag = function(d) {
        this.languageBtn && this.languageBtn.changeFlagIcon(CB.V6r.getRibbonFlagName(this.getLanguageIdOfCommandId(d)))
    }
    ;
    e.prototype.getLanguageIdOfCommandId = function(d) {
        switch (d) {
        default:
            alert("languageId: " + d);
        case CB.V1ge.V398:
            return CB.V6r.ENG;
        case CB.V1ge.V399:
            return CB.V6r.GER;
        case CB.V1ge.V39a:
            return CB.V6r.ESP;
        case CB.V1ge.V39b:
            return CB.V6r.NED;
        case CB.V1ge.V39c:
            return CB.V6r.ROM;
        case CB.V1ge.V39d:
            return CB.V6r.CHN;
        case CB.V1ge.V39e:
            return CB.V6r.FRA;
        case CB.V1ge.V39f:
            return CB.V6r.RUS;
        case CB.V1ge.V39g:
            return CB.V6r.NOR;
        case CB.V1ge.V39h:
            return CB.V6r.POL;
        case CB.V1ge.V39i:
            return CB.V6r.ITA;
        case CB.V1ge.V39j:
            return CB.V6r.HEB;
        case CB.V1ge.V39k:
            return CB.V6r.CAT;
        case CB.V1ge.V39l:
            return CB.V6r.TRK;
        case CB.V1ge.V39m:
            return CB.V6r.SLO;
        case CB.V1ge.V39n:
            return CB.V6r.GRK;
        case CB.V1ge.V39o:
            return CB.V6r.UKR;
        case CB.V1ge.V39p:
            return CB.V6r.VIE;
        case CB.V1ge.V39q:
            return CB.V6r.ARA;
        case CB.V1ge.V39r:
            return CB.V6r.SER;
        case CB.V1ge.V39s:
            return CB.V6r.LIT;
        case CB.V1ge.V39t:
            return CB.V6r.BRA;
        case CB.V1ge.V39u:
            return CB.V6r.FAR;
        case CB.V1ge.V39v:
            return CB.V6r.GAL;
        case CB.V1ge.V39w:
            return CB.V6r.CRO;
        case CB.V1ge.V39x:
            return CB.V6r.CZE;
        case CB.V1ge.V39y:
            return CB.V6r.HIN
        }
    }
    ;
    e.prototype.getCommandIdOfLanguage = function(d) {
        switch (d) {
        default:
        case CB.V6r.ENG:
            return CB.V1ge.V398;
        case CB.V6r.GER:
            return CB.V1ge.V399;
        case CB.V6r.ESP:
            return CB.V1ge.V39a;
        case CB.V6r.NED:
            return CB.V1ge.V39b;
        case CB.V6r.ROM:
            return CB.V1ge.V39c;
        case CB.V6r.CHN:
            return CB.V1ge.V39d;
        case CB.V6r.FRA:
            return CB.V1ge.V39e;
        case CB.V6r.RUS:
            return CB.V1ge.V39f;
        case CB.V6r.NOR:
            return CB.V1ge.V39g;
        case CB.V6r.POL:
            return CB.V1ge.V39h;
        case CB.V6r.ITA:
            return CB.V1ge.V39i;
        case CB.V6r.HEB:
            return CB.V1ge.V39j;
        case CB.V6r.CAT:
            return CB.V1ge.V39k;
        case CB.V6r.TRK:
            return CB.V1ge.V39l;
        case CB.V6r.SLO:
            return CB.V1ge.V39m;
        case CB.V6r.UKR:
            return CB.V1ge.V39o;
        case CB.V6r.GRK:
            return CB.V1ge.V39n;
        case CB.V6r.VIE:
            return CB.V1ge.V39p;
        case CB.V6r.ARA:
            return CB.V1ge.V39q;
        case CB.V6r.SER:
            return CB.V1ge.V39r;
        case CB.V6r.LIT:
            return CB.V1ge.V39s;
        case CB.V6r.BRA:
            return CB.V1ge.V39t;
        case CB.V6r.FAR:
            return CB.V1ge.V39u;
        case CB.V6r.GAL:
            return CB.V1ge.V39v;
        case CB.V6r.CRO:
            return CB.V1ge.V39w;
        case CB.V6r.CZE:
            return CB.V1ge.V39x;
        case CB.V6r.HIN:
            return CB.V1ge.V39y
        }
    }
    ;
    e.prototype.getLanguageCommandIds = function(d) {
        var c = [];
        d.forEach(function(f) {
            c.push(this.getCommandIdOfLanguage(f))
        }
        .bind(this));
        return c
    }
    ;
    e.prototype.V3fc = function() {
        return this.languageCommandId && (this.languageCommandId == CB.V1ge.V39j || this.languageCommandId == CB.V1ge.V39q || this.languageCommandId == CB.V1ge.V39u)
    }
    ;
    e.prototype.getLanguageId = function() {
        return this.languageCommandId ? this.getLanguageIdOfCommandId(this.languageCommandId) : CB.V6r.V12q()
    }
    ;
    V3i1.initForListeners(e);
    V3i1.addEvent(e, "BoardStyle");
    V3i1.addEvent(e, "BoardStyle3D");
    return e
}();
var glSettings;
"use strict";
CB.V9z = function() {
    var e = function(d) {
        if (!d)
            throw "Accountsmanager: App required";
        this.app = d || "playchess";
        this.Vbl = V3ir.config.getAccountUris()[0];
        this.V3fd = V3ir.config.getAccountUris()[1]
    };
    e.prototype.V3fe = function() {
        return window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP")
    }
    ;
    e.prototype.pwLogin = function(d, c, f, g) {
        if (d && c) {
            d = this.V3ff(d);
            var h = this.V3fg(d, "chk");
            this.V3fh({
                cmd: "chk",
                user: d,
                app: this.app,
                pass: this.V3ff(c),
                key: h
            }, function(k) {
                k && f(k, g)
            })
        } else
            f({
                error: !0
            }, g)
    }
    ;
    e.prototype.V3fi = function(d) {}
    ;
    e.prototype.tokenLogin = function(d, c, f) {
        d = this.V3ff(d);
        var g = this.V3fg(d, "get");
        this.V3fh({
            cmd: "get",
            user: d,
            app: this.app,
            token: c,
            key: g
        }, f)
    }
    ;
    e.prototype.V3aw = function(d, c, f, g, h) {
        d = this.V3ff(d);
        var k = this.V3fg(d, "pw");
        this.V3fh({
            cmd: "pw",
            user: d,
            app: this.app,
            old: this.V3ff(c),
            "new": this.V3ff(f),
            token: g,
            key: k
        }, h)
    }
    ;
    e.prototype.V3fj = function(d, c, f, g) {
        var h = this.V3ff(c);
        h = this.V3fg(h, "activatecenapp");
        this.V3fh({
            cmd: "activatecenapp",
            guid: d,
            serial: c,
            productid: f,
            key: h,
            user: this.V3ff(c)
        }, g)
    }
    ;
    e.prototype.V3fk = function(d, c, f, g) {
        var h = this.V3ff(c);
        h = this.V3fg(h, "activatecenapp");
        this.V3fh({
            cmd: "activatecenapp",
            guid: d,
            serial: "",
            productid: f,
            key: h,
            user: this.V3ff(c)
        }, g)
    }
    ;
    e.prototype.V3fl = function(d, c, f) {
        var g = this.V3ff(c);
        g = this.V3fg(g, "deactivatecenapp");
        this.V3fh({
            cmd: "deactivatecenapp",
            guid: d,
            serial: c,
            key: g,
            user: this.V3ff(c)
        }, f)
    }
    ;
    e.prototype.getFriends = function(d, c, f, g) {
        d = this.V3ff(d);
        var h = this.V3fg(d, "getfr");
        this.V3fh({
            cmd: "getfr",
            user: d,
            token: c,
            friendtype: f,
            key: h
        }, g)
    }
    ;
    e.prototype.setFriends = function(d, c, f, g, h) {
        for (var k = "", l = 0; l < g.length; l++)
            k += g[l] + ",";
        g = this.V3ff(k);
        d = this.V3ff(d);
        k = this.V3fg(d, "setfr");
        this.V3fh({
            cmd: "setfr",
            user: d,
            token: c,
            friendtype: f,
            friends: g,
            key: k
        }, h)
    }
    ;
    var b;
    e.prototype.V3fh = function(d, c) {
        var f = [], g;
        for (g in d)
            f.push(encodeURIComponent(g) + "=" + encodeURIComponent(d[g]));
        var h = f.join("&")
          , k = this.V3fe();
        k.open("POST", this.Vbl);
        k.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        k.setRequestHeader("X-Requested-With", "XMLHttpRequest");
        b = new CB.Timer(function() {
            k.abort();
            this.Vbl !== this.V3fd ? (this.Vbl = this.V3fd,
            k.open("POST", this.V3fd),
            k.send(h)) : c({
                timeout: !0
            })
        }
        .bind(this));
        b.runOnce(3E3);
        k.onload = function() {
            b.stop();
            if (4 === k.readyState && 200 === k.status) {
                var l = k.responseText;
                c(l ? JSON.parse(l) : {})
            } else
                c({})
        }
        ;
        k.onerror = function(l) {
            b.stop();
            this.Vbl != this.V3fd ? (this.Vbl = this.V3fd,
            k.open("POST", this.V3fd),
            k.send(h),
            console.log("Retry AccountServer")) : c({
                error: !0
            })
        }
        .bind(this);
        k.send(h)
    }
    ;
    e.prototype.V3fg = function(d, c) {
        0 == d.Length && (d = "nameCoded");
        var f = c + d;
        d = d.split("");
        c = c.split("");
        f = f.split("");
        for (var g = 0, h = 0, k = 0; k < f.length; k++)
            0 != (k & 1) && g < c.length ? (f[k] = c[g],
            g++) : h < d.length && (f[k] = d[d.length - h - 1],
            h++);
        return this.V3ff(f.join(""))
    }
    ;
    e.prototype.V3ff = function(d) {
        d = CB.V1b.V104(d);
        return CB.V1b.base64.V2a(d)
    }
    ;
    return e
}();
"use strict";
CB.V3di = function() {
    var e = function() {};
    e.prototype.createLoginForm = function(b, d, c, f) {
        (new CB.Form({
            id: "loginForm",
            title: b,
            width: 320,
            height: 230,
            modal: !0,
            okHandler: d,
            cancelHandler: c,
            fields: [{
                caption: "User:",
                type: "string",
                id: "idUser",
                val: f
            }, {
                caption: "Password:",
                type: "string",
                id: "idPassword",
                val: ""
            }],
            focusField: "idUser",
            accountButton: !0
        })).create()
    }
    ;
    return e
}();
"use strict";
var grid, isPremium = !1, isStandard = !1, recycleListRows = [], recycleMyMoves = [];
CB.V3fm = function(e, b, d) {
    var c = 0
      , f = []
      , g = function() {
        return $("#TBBookDiv")[0]
    };
    (function() {
        var h = $("<div id='TBBookDiv'></div>");
        $(d).prepend(h);
        grid = g();
        grid.myMoves = [];
        grid.refreshList = function() {
            0 < recycleListRows.length && (grid.myMoves = recycleMyMoves,
            m(recycleListRows))
        }
        ;
        grid.loadMove = function(n) {
            n = new CB.V17g(n.fr,n.to,n.pr);
            e().getCurPos().isLegalMove(n) && e().game.makeMove(n, e().V3i6.getMoveEnterType());
            (new CB.Timer(function() {
                V3ir.panelMgr.refreshOnlineDBGames && V3ir.panelMgr.refreshOnlineDBGames()
            }
            )).runOnce(400);
            grid.myFocus = !0
        }
        ;
        grid.showContextMenu = function(n, p, q, t, v) {
            if (V3ir.myMovesMgr && (q.preventDefault(),
            V3ir.checkMyMovesLoggedIn())) {
                var z = new CB.V17g(p.fr,p.to,p.pr);
                p = function() {
                    return V3ir.panelMgr.createJQMenu(n, "liveBookContextMenu", [lm.MARK_MOVE, lm.MARK_IMPORTANT, lm.UNMARK_MOVE, lm.UNMARK_TREE_WHITE, lm.UNMARK_TREE_BLACK, lm.RESET_LEARNING_WHITE, lm.RESET_LEARNING_BLACK], 0, function(E) {
                        switch (parseInt(E)) {
                        case 0:
                            grid.addMoveToMyMoves(z, !1);
                            break;
                        case 1:
                            grid.addMoveToMyMoves(z, !0);
                            break;
                        case 2:
                            grid.removeFromMyMoves(z);
                            break;
                        case 3:
                            grid.unmarkTree(z, !1);
                            break;
                        case 4:
                            grid.unmarkTree(z, !0);
                            break;
                        case 5:
                            grid.unlearnTree(z, !1);
                            break;
                        case 6:
                            grid.unlearnTree(z, !0)
                        }
                    }, function() {})
                }();
                $(p).jqxMenu("open", t, v)
            }
        }
        ;
        grid.isRepertoireMove = function(n) {
            if (n)
                for (var p = 0; p < grid.myMoves.length; p++)
                    if (grid.myMoves[p].move.equals(n))
                        return !0;
            return !1
        }
        ;
        grid.getMoveFlags = function(n) {
            for (var p = 0; p < grid.myMoves.length; p++)
                if (grid.myMoves[p].move.equals(n))
                    return grid.myMoves[p].flags;
            return 0
        }
        ;
        grid.getMyMove = function(n) {
            for (var p = 0; p < grid.myMoves.length; p++)
                if (grid.myMoves[p].move.equals(n))
                    return grid.myMoves[p];
            return {
                eval: 0
            }
        }
        ;
        grid.removeMyMove = function(n) {
            for (var p = !1, q = -1, t = 0; !p && t < grid.myMoves.length; t++)
                grid.myMoves[t].move.equals(n) && (q = t,
                p = !0);
            0 <= q && grid.myMoves.splice(q, 1);
            return p
        }
        ;
        grid.removeFromMyMoves = function(n) {
            V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn() && grid.removeMyMove(n) && (V3ir.myMovesMgr.removeFromMyMoves(e().game.getCurPos(), n),
            V3ir.myMovesMgr.isMovesLoadedFor(e().game.getCurPos().getBTM()) && V3ir.myMovesMgr.reloadMyMoves(),
            grid.update())
        }
        ;
        grid.unmarkTree = function(n, p) {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn()) {
                var q = V3ir.cloneGameToCurPos(e().game);
                q.getCurPos().preCalcCtx(n);
                q.makeMove(n);
                V3ir.myMovesMgr.removeWholeTree(e().game.getCurPos(), n, p ? CB.V295.BLACK : CB.V295.WHITE);
                grid.removeMyMove(n);
                grid.update()
            }
        }
        ;
        grid.unlearnTree = function(n, p) {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn()) {
                var q = V3ir.cloneGameToCurPos(e().game);
                q.getCurPos().preCalcCtx(n);
                q.makeMove(n);
                V3ir.myMovesMgr.unlearnWholeTree(e().game.getCurPos(), n, p ? CB.V295.BLACK : CB.V295.WHITE);
                grid.update()
            }
        }
        ;
        grid.updateOrAddMove = function(n) {
            for (var p = 0; p < grid.myMoves.length; p++)
                if (grid.myMoves[p].move.equals(n.move)) {
                    grid.myMoves[p].flags = n.flags;
                    return
                }
            grid.myMoves.push({
                move: n.move,
                visits: 0,
                flags: n.flags
            })
        }
        ;
        grid.addMoveToMyMoves = function(n, p) {
            if (V3ir.myMovesMgr && V3ir.myMovesMgr.isLoggedIn()) {
                var q = e().game.getCurPos().getBTM() ? 1 : 2;
                p && (q |= 16);
                grid.getMoveFlags(n) != q && (grid.updateOrAddMove({
                    move: n,
                    flags: q
                }),
                q = V3ir.cloneGameToCurPos(e().game),
                q.getCurPos().preCalcCtx(n),
                q.makeMove(n),
                V3ir.myMovesMgr.storePosAndMoves(q, p ? 3 : 2),
                grid.update());
                V3ir.myMovesMgr.isMovesLoadedFor(e().game.getCurPos().getBTM()) && V3ir.myMovesMgr.reloadMyMoves()
            }
        }
        ;
        grid.getMyMoveDecoration = function(n) {
            var p = {
                suffix: "",
                cls: ""
            };
            if (CB.V28o) {
                var q = new CB.V17g(n.data.fr,n.data.to,n.data.pr);
                n = grid.getMoveFlags(q);
                q = grid.getMyMove(q).eval;
                n & CB.V28o.V1vp ? (n & 16 ? (p.cls += " liveBookMoveImportant",
                p.suffix = "**") : (p.cls += " liveBookMoveInRep",
                p.suffix = "*"),
                p.cls = n & CB.V28o.V28q ? n & CB.V28o.BLACK ? p.cls + " liveBookBoth" : p.cls + " liveBookWhite" : p.cls + " liveBookBlack") : n & CB.V28o.MOVE ? (p.cls += " liveBookMyLine",
                p.suffix = "",
                p.cls = n & CB.V28o.V28r ? n & CB.V28o.BLACK ? p.cls + " liveBookBoth" : p.cls + " liveBookWhite" : p.cls + " liveBookBlack") : (p.cls += " liveBookMove",
                p.suffix = "");
                q && (p.suffix += "<span class='CBSymbol'>" + V3ib.getText(q) + "</span>")
            }
            return p
        }
        ;
        grid.isVisible = function() {
            return g() ? $(grid).is(":visible") || V3ir.panelMgr.isMobileLayout() : !1
        }
        ;
        grid.startupdate = function() {}
        ;
        grid.clear = function(n) {}
        ;
        grid.removeRows = function() {
            $(g()).jqxGrid("clear")
        }
        ;
        grid.setEmptyText = function(n) {}
        ;
        var k = CB.V2c9.V2fm();
        grid.refreshAfterShow = function() {
            this.lbInfo && this.liveBookListener(this.lbInfo);
            this.repPosInfo && this.myMovesListener(this.repPosInfo)
        }
        ;
        grid.liveBookListener = function(n) {
            if (!grid.isVisible())
                grid.lbInfo = n;
            else if (e() && e().getCurPos) {
                var p = n.moves
                  , q = e().getCurPos()
                  , t = q.getSideToMove();
                6 >= q.getPieces().length && (n.sorted || CB.V1tt.V1tu(p, t == CB.V15e.BLACK));
                grid.removeRows();
                c = e().getCurPos().getPlyNum();
                for (q = p = 0; q < n.moves.length; q++)
                    p += n.moves[q].getNVisits();
                k = CB.V2c9.V2fm();
                q = 6 >= e().getCurPos().getPieces().length;
                t = [];
                for (var v = 0; v < n.moves.length; v++) {
                    var z = n.moves[v];
                    if (q || grid.passesMoveFilter(z)) {
                        var E = z.getMoveRecord();
                        z.line = grid.generateLine(n.position, E);
                        z.fPercent = 100;
                        p && (z.fPercent = 100 * z.getNVisits() / p);
                        z.m_nEval = z.getNEval();
                        z.Games = z.m_performanceStats.getNGames();
                        z.Result = z.m_performanceStats.getFPercent(n.position.isBTM());
                        z.EloAvg = z.m_performanceStats.getSortEloAv();
                        z.fr = E.from;
                        z.to = E.to;
                        z.players = [];
                        delete z.id;
                        z.id = grid.calcId(E);
                        t.push(z)
                    }
                }
                grid.refreshSource(t);
                grid.myFocus && (grid.myFocus = !1,
                grid.focus());
                t.length || grid.update()
            }
        }
        ;
        grid.setTitle = function(n) {
            $("#idTabLiveBook-tab").find(".cbJqxTabHeaderText").text(n)
        }
        ;
        grid.calcId = function(n) {
            return "TBBook" + ((n.prom << 12) + (n.from << 8) + n.to)
        }
        ;
        grid.passesMoveFilter = function(n) {
            var p = b.minVisits || 2;
            return (0 < n.getNGames() || 300 > k - n.m_nTimeStamp || n.isMyMove) && (n.getNVisits() >= p || n.hasEval())
        }
        ;
        grid.getById = function(n) {
            for (var p = 0; p < f.length; p++)
                if (f[p].id == n)
                    return f[p];
            return null
        }
        ;
        grid.onDBGamesListener = function(n) {
            if (grid.isVisible()) {
                for (var p = 0; p < n.length; p++)
                    if (n[p].nFlags & CB.V3fn.V3fo && V3ir.onlineLobby.firstMove < n[p].aGame.getCurLine().length) {
                        var q = n[p].aGame.getCurLine()[V3ir.onlineLobby.firstMove];
                        if ((q = grid.getById(grid.calcId(q))) && 2 > q.players.length) {
                            var t = V3ir.onlineLobby.firstMove & 1 ? n[p].aGame.hdr.black.getListStr(0) : n[p].aGame.hdr.white.getListStr(0);
                            q.players[0] != t && q.players.push(t)
                        }
                    }
                grid.refreshSource(f)
            }
        }
        ;
        grid.generateLine = function(n, p) {
            n = this.convertJSONLine(ObjUtil.clone(n), p);
            p = new CB.V1cw(CB.V3ho);
            for (var q = "", t = 0; t < n.length; t++) {
                var v = p.getMoveNota(n[t])
                  , z = p.getStrMoveNumInLine(t, e().getCurPos().getPlyNum(), !1);
                q += z + v;
                t < n.length - 1 && (q += " ")
            }
            return q
        }
        ;
        grid.convertJSONLine = function(n, p) {
            var q = [];
            n.isLegalMove(p) && (n.preCalcCtx(p),
            n.makeMove(p),
            n.postCalcCtx(p, !0),
            q.push(p));
            return q
        }
        ;
        grid.myMovesListener = function(n) {
            grid.isVisible() && (this.repPosInfo = n,
            grid.myMoves = n.moves,
            grid.update())
        }
        ;
        grid.update = function() {
            V3ir.panelMgr.isMobileLayout() || $(g()).jqxGrid("updatebounddata", "data")
        }
        ;
        grid.refreshSource = function(n) {
            grid.records = n;
            n = l(n);
            n = new $.jqx.dataAdapter(n);
            $(g()).jqxGrid("source", n);
            $(g()).jqxGrid("updatebounddata")
        }
        ;
        grid.createMask = function() {}
        ;
        grid.initCloudListener = function(n) {
            n.addOnMyMovesListener(grid.myMovesListener)
        }
        ;
        grid.onLoginListener = function() {
            grid.myMoves = [];
            grid.setTitle(lm.LIVE_BOOK);
            grid.records && grid.records.length && grid.update()
        }
        ;
        grid.onAccountTypeListener = function(n) {
            isStandard = (isPremium = 3 == n.type) || 2 == n.type;
            grid.refreshSource(f)
        }
        ;
        var l = function(n) {
            recycleListRows = f = n;
            recycleMyMoves = grid.myMoves;
            for (var p = [], q = 0; q < n.length; q++) {
                var t = n[q];
                p.push({
                    EloAvg: t.EloAvg,
                    fPercent: t.fPercent,
                    fr: t.fr,
                    Games: t.Games,
                    line: t.line,
                    move: t.move,
                    to: t.to,
                    Result: t.Result,
                    players: t.players,
                    m_performanceStats: t.m_performanceStats,
                    m_aLine: t.m_aLine,
                    m_nEval: t.m_nEval,
                    m_nFlags: t.m_nFlags,
                    m_nTimeStamp: t.m_nTimeStamp,
                    m_nVisits: t.m_nVisits
                })
            }
            return {
                localdata: p,
                datatype: "array",
                totalrecords: n.length,
                sortcolumn: "m_nVisits",
                sortdirection: "desc"
            }
        }
          , m = function(n) {
            n = l(n);
            n = new $.jqx.dataAdapter(n);
            $(g()).jqxGrid({
                source: n,
                sortable: !0,
                sorttogglestates: "1",
                showsortmenuitems: !1,
                columnsresize: !0,
                editable: !1,
                showemptyrow: !1,
                theme: "chessbase",
                width: "100%",
                height: b.height,
                selectionmode: "singlerow",
                columns: function() {
                    var p = function(v, z, E) {
                        z = $(z).empty();
                        isNaN(v) || $(z).append(String(Math.round(v))).append(E ? "%" : "");
                        return $(z)[0].outerHTML
                    }
                      , q = function(v, z, E, C, F) {
                        v = $(C).empty();
                        isPremium ? (E = E.join("/"),
                        E = '<span class="liveBookPlayers" title="' + E + '">' + E + "</span>",
                        $(v).append(E)) : (E = "https://account.chessbase.com/en/matrix",
                        isStandard || (E = "https://live.chessbase.com/logon?returnurl=" + encodeURIComponent(document.location)),
                        $(v).append(String.formatEx('<a class="gmPremiumOnly" href="{0}">{1}</a>', E, lm.PREMIUM_ONLY)));
                        return $(v)[0].outerHTML
                    }
                      , t = [];
                    t = t.concat([{
                        name: "move",
                        text: lm.MOVE,
                        datafield: "line",
                        cellsrenderer: function(v, z, E, C, F) {
                            z = $(C).empty();
                            v = {
                                data: $(grid).jqxGrid("getrowdata", v)
                            };
                            E = grid.getMyMoveDecoration(v);
                            $(z).addClass(E.cls);
                            if (V3ir.config.freeLiveBook || !V3ir.config.liveBookIsPremium || isPremium || 10 > c) {
                                C = v.data.line.split(" ");
                                if (1 < C.length) {
                                    F = C[0];
                                    F += '<span class="liveBookMoreMoves">';
                                    for (var P = 1; P < C.length; P++)
                                        F += " " + C[P];
                                    F += "<span>" + E.suffix;
                                    $(z).append(F)
                                }
                                $(z).append(v.data.line).append(E.suffix)
                            } else
                                v = "https://account.chessbase.com/en/matrix",
                                isStandard || (v = "https://live.chessbase.com/logon?returnurl=" + encodeURIComponent(document.location)),
                                $(z).append(String.formatEx('<a class="gmPremiumOnly" href="{0}">{1}</a>', v, lm.PREMIUM_ONLY));
                            return $(z)[0].outerHTML
                        },
                        cellsalign: "left",
                        align: "left",
                        width: String(b.players ? 16 : 20) + "%"
                    }, {
                        name: "games",
                        text: lm.GAMES,
                        datafield: "Games",
                        cellsrenderer: function(v, z, E, C, F) {
                            v = $(C).empty();
                            V3ir.config.freeLiveBook || V3ir.isLoggedIn() || 10 > c ? $(v).append(E.toLocaleString(CB.V6r.V6s(), {
                                maximumFractionDigits: 0
                            })) : $(v).append(lm.PLEASE_LOGIN_SHORT);
                            return $(v)[0].outerHTML
                        },
                        cellclassname: "liveBookGames",
                        cellsalign: "right",
                        align: "right",
                        width: String(b.players ? 14 : 21) + "%"
                    }, {
                        name: "result",
                        text: lm.RESULT,
                        datafield: "Result",
                        cellsrenderer: function(v, z, E, C, F) {
                            z = $(C).empty();
                            E = $(grid).jqxGrid("getrowdata", v);
                            if (0 < E.Games)
                                $(z).append(Math.round(E.Result)).append("%");
                            else if (V3ir.config.freeLiveBook || V3ir.isLoggedIn())
                                if ($(z).addClass("liveBookEval"),
                                CB.V7r(E.m_nFlags, 1) || 0 != E.m_nEval)
                                    v = E.m_nEval,
                                    E = E.m_nDepth,
                                    29750 < Math.abs(v) ? (E = "#" + (3E4 - Math.abs(v)),
                                    0 > v && (E = "-" + E),
                                    $(z).append(E)) : (C = "",
                                    0 < v && (C = "+"),
                                    v = C + (.01 * v).toFixed(2),
                                    E && (v += "/" + E),
                                    $(z).append(v));
                            return $(z)[0].outerHTML
                        },
                        cellclassname: "liveBookResult",
                        cellsalign: "left",
                        align: "left",
                        width: String(b.players ? 11 : 13) + "%"
                    }, {
                        name: "eloaverage",
                        text: lm.ELO_AVG,
                        datafield: "EloAvg",
                        cellsrenderer: function(v, z, E, C, F) {
                            return p(E, C, !1)
                        },
                        cellclassname: "liveBookEloAvg",
                        cellsalign: "center",
                        align: "center",
                        width: String(b.players ? 10 : 11) + "%"
                    }, {
                        name: "percent",
                        text: "%",
                        datafield: "fPercent",
                        cellsrenderer: function(v, z, E, C, F) {
                            return p(E, C, !1)
                        },
                        cellsalign: "center",
                        align: "center",
                        width: String(b.players ? 8 : 10) + "%"
                    }, {
                        name: "visits",
                        text: lm.VISITS,
                        datafield: "m_nVisits",
                        cellsrenderer: function(v, z, E, C, F) {
                            v = $(C).empty();
                            isNaN(E) || (V3ir.config.freeLiveBook || V3ir.isLoggedIn() || 10 > c ? $(v).append(E.toLocaleString(CB.V6r.V6s(), {
                                maximumFractionDigits: 0
                            })) : $(v).append(lm.PLEASE_LOGIN_SHORT));
                            return $(v)[0].outerHTML
                        },
                        cellclassname: "liveBookVisits",
                        cellsalign: "right",
                        align: "right",
                        width: String(b.players ? 17 : 25) + "%"
                    }]);
                    b.players && (t = t.concat([{
                        name: "players",
                        text: "Players",
                        datafield: "players",
                        cellsrenderer: q,
                        cellclassname: "liveBookVisits",
                        cellsalign: "left",
                        align: "left",
                        width: "24%"
                    }]));
                    return t
                }()
            });
            $(g()).on("contextmenu", function(p) {
                return !1
            });
            $(g()).unbind("rowclick");
            $(g()).on("rowclick", function(p) {
                $("#liveBookContextMenu0")[0] && ($("#liveBookContextMenu0").jqxMenu("destroy"),
                $("#liveBookContextMenu0").remove());
                var q = p.args;
                if (q.rightclick) {
                    $(g()).jqxGrid("selectrow", p.args.rowindex);
                    var t = $(window).scrollTop()
                      , v = $(window).scrollLeft();
                    p.args && grid.showContextMenu($(g())[0], q.row.bounddata, p, parseInt(p.args.originalEvent.clientX) + 5 + v, parseInt(p.args.originalEvent.clientY) + 5 + t);
                    return !1
                }
                grid.loadMove(q.row.bounddata)
            })
        };
        b.suppressLiveBookListener || (grid.idLiveBookListener = V3ir.aTBLobby.addOnLiveBookListener(grid.liveBookListener));
        grid.idLiveBookDisplayListener = V3ir.aTBLobby.addOnLiveBookDisplayListener(grid.liveBookListener);
        grid.idLoginListener = V3ir.addOnLoginListener(grid.onLoginListener.bind(grid));
        grid.idAccountTypeListener = V3ir.addOnAccountTypeListener(grid.onAccountTypeListener.bind(grid));
        V3ir.onlineLobby && (grid.idOnGamesListener = V3ir.onlineLobby.addOnGamesListener(grid.onDBGamesListener.bind(grid)));
        V3ir.panelMgr.liveBookCreationCount && 1 !== V3ir.panelMgr.liveBookCreationCount || m([])
    }
    )();
    grid.destroy = function() {
        grid.idLiveBookDisplayListener && V3ir.aTBLobby.removeOnLiveBookDisplayListener(grid.idLiveBookDisplayListener);
        grid.idLiveBookListener && V3ir.aTBLobby.removeOnLiveBookListener(grid.idLiveBookListener);
        grid.idLoginListener && V3ir.removeOnLoginListener(grid.idLoginListener);
        grid.idAccountTypeListener && V3ir.removeOnAccountTypeListener(grid.idAccountTypeListener);
        grid.idOnGamesListener && V3ir.onlineLobby.removeOnGamesListener(grid.idOnGamesListener)
    }
    ;
    return grid
}
;
"use strict";
CB.V3d7 = CB.V3d7 || {};
CB.V3d7.V3d8 = function(e, b, d, c) {
    var f = $("<input id='" + e + "' maxlength='255'></input>");
    $(f).attr("placeHolder", d);
    $(f).css("width", "100%");
    $(f).css("height", "25px");
    $(f).on("keypress", function(g) {
        13 == g.keyCode && (g = $(f).val(),
        $(f).val(""),
        c(g, f))
    });
    return f
}
;
CB.namespace("CB.V1hl");
CB.V1hl.editGameHeader = function(e, b) {
    if (0 == e.date.year) {
        var d = new Date;
        e.date.year = d.getYear() + 1900;
        e.date.month = d.getMonth() + 1;
        e.date.day = d.getDate()
    }
    d = String.f('<input id="txtWhiteELO" type="number" min="0" max="3500" size="4" value="{0}" />', e.eloWh ? String(e.eloWh) : "");
    var c = String.f('<input id="txtBlackELO" type="number" min="0" max="3500" size="4" value="{0}" />', e.eloBl ? String(e.eloBl) : "")
      , f = String.f('<input type="radio" name="result" value="whitewin"{0}>1-0', e.result == CB.GameResultEnum.WHITE_WINS ? " checked" : "");
    f += String.f('<input type="radio" name="result" value="draw"{0}>\u00bd-\u00bd', e.result == CB.GameResultEnum.DRAW ? " checked" : "");
    f += String.f('<input type="radio" name="result" value="blackwin"{0}>0-1', e.result == CB.GameResultEnum.BLACK_WINS ? " checked" : "");
    f += String.f('<input type="radio" name="result" value="line"{0}>Line', CB.GameResultEnum.isFinished(e.result) ? "" : " checked");
    var g = V3ir.panelMgr.createDiv("editHeaderDialog", 0);
    var h = "<table>   <tr>      <td>         <table>            <tr>               <td style='width: 55px;'>White:</td>               <td><input id='txtWhiteSurname' placeholder='Surname' type='text' size='20' value=\"" + (e.white.last + '" /></td>');
    h += "               <td><input id='txtWhiteForename' placeholder='First Name' type='text' size='20' value=\"" + e.white.first + '" /></td>';
    h = h + "               <td>ELO:</td>               <td>" + (d + "</td>            </tr>         </table>");
    h += "      </td>";
    h += "   </tr>";
    h += "   <tr>";
    h += "      <td>";
    h += "         <table>";
    h += "            <tr>";
    h += "               <td style='width: 55px;'>Black:</td>";
    h += "               <td><input id='txtBlackSurname' placeholder='Surname' type='text' size='20' value=\"" + e.black.last + '" /></td>';
    h += "               <td><input id='txtBlackForename' placeholder='First Name' type='text' size='20' value=\"" + e.black.first + '" /></td>';
    h += "               <td>ELO:</td>";
    h += "               <td>" + c + "</td>";
    h += "            </tr>";
    h += "         </table>";
    h += "      </td>";
    h += "   </tr>";
    h += "   <tr>";
    h += "      <td>";
    h += "         <table>";
    h += "            <tr>";
    h += "               <td style='width: 55px;'>Event:</td>";
    h += "               <td><input id='txtEvent' placeholder='Event Name' type='text' size='20' value=\"" + e.event.event + '" /></td>';
    h += "               <td><input id='txtLocation' placeholder='Event Site' type='text' size='20' value=\"" + e.event.site + '" /></td>';
    h += "            </tr>";
    h += "         </table>";
    h += "      </td>";
    h += "   </tr>";
    h += "   <tr>";
    h += "      <td>";
    h += "         <table>";
    h += "            <tr>";
    h += "               <td style='width: 55px;'>Year:</td>";
    h += "               <td><input id='txtYear' type='number' min='0' max='2200' size='4' value='" + e.date.getYear() + "' /></td>";
    h += "               <td>Month:</td>";
    h += "               <td><input id='txtMonth' type='number' min='0' max='12' size='2' value='" + e.date.getMonth() + "' /></td>";
    h += "               <td>Day:</td>";
    h += "               <td><input id='txtDay' type='number' min='0' max='31' size='2' value='" + e.date.getDay() + "' /></td>";
    h += "            </tr>";
    h += "         </table>";
    h += "      </td>";
    h += "   </tr>";
    h += "   <tr>";
    h += "      <td>";
    h += "         <table>";
    h += "            <tr>";
    h += "               <td style='width: 55px;'>Result:</td>";
    h += "               <td>" + f + "</td>";
    h += "           </tr>";
    h += "         </table>";
    h += "      </td>";
    h += "   </tr>";
    h += "   <tr>";
    h += "      <td style='float: right; margin-top: 15px;'>";
    h += "         <input type='button' id='ok' value='OK' style='margin-right: 10px;' />";
    h += "         <input type='button' id='cancel' value='Cancel' />";
    h += "      </td>";
    h += "   </tr>";
    h += "</table>";
    $(g).html(h);
    d = (window.innerWidth - 590) / 2;
    c = (window.innerHeight - 340) / 2;
    $(g).jqxWindow({
        title: "Game Attributes",
        position: {
            x: d,
            y: c
        },
        width: 590,
        height: 340,
        resizable: !1,
        isModal: !0,
        theme: V3ir.config.jqxTheme,
        modalOpacity: .3,
        okButton: $("#ok"),
        cancelButton: $("#cancel"),
        showCloseButton: !1,
        keyboardCloseKey: "",
        initContent: function() {
            $("#ok").jqxButton({
                width: "90",
                height: "30",
                theme: V3ir.config.jqxTheme
            });
            $("#cancel").jqxButton({
                width: "90",
                height: "30",
                theme: V3ir.config.jqxTheme
            });
            $("#ok").focus();
            $("#editHeaderDialog0").find("input:not(:radio):not(:button)").jqxInput({
                height: 24,
                theme: V3ir.config.jqxTheme
            });
            $("#editHeaderDialog0").find("input:radio").jqxRadioButton({
                width: 200,
                theme: V3ir.config.jqxTheme
            })
        }
    });
    V3ir.panelMgr.onFormOpen();
    NodeList.prototype.forEach || (NodeList.prototype.forEach = function(k, l) {
        for (var m = 0, n = this.length; m < n; ++m)
            k.call(l, this[m], m, this)
    }
    );
    document.querySelectorAll("input[type=number]").forEach(function(k) {
        k.addEventListener("keyup", function(l) {
            l = $("#txtWhiteELO").val();
            var m = $("#txtBlackELO").val()
              , n = $("#txtYear").val()
              , p = $("#txtMonth").val()
              , q = $("#txtDay").val();
            l = 0 > l || 3500 < l || 0 > m || 3500 < m || 0 > n || 2200 < n || 0 > p || 12 < p || 0 > q || 31 < q ? !1 : !0;
            $("#ok").jqxButton({
                disabled: !l
            })
        })
    });
    $("#ok").click(function(k) {
        if (b) {
            e.white.last = $("#txtWhiteSurname").val();
            e.white.first = $("#txtWhiteForename").val();
            e.eloWh = $("#txtWhiteELO").val();
            e.eloBl = $("#txtBlackELO").val();
            e.black.last = $("#txtBlackSurname").val();
            e.black.first = $("#txtBlackForename").val();
            e.event.event = $("#txtEvent").val();
            e.event.site = $("#txtLocation").val();
            k = $("#txtYear").val();
            var l = $("#txtMonth").val()
              , m = $("#txtDay").val();
            0 == k && (l = 0);
            0 == l && (m = 0);
            e.date = new CB.Date(k,l,m);
            $("#editHeaderDialog0").find("input[value=whitewin]").jqxRadioButton("checked") ? e.result = CB.GameResultEnum.WHITE_WINS : $("#editHeaderDialog0").find("input[value=draw]").jqxRadioButton("checked") ? e.result = CB.GameResultEnum.DRAW : $("#editHeaderDialog0").find("input[value=blackwin]").jqxRadioButton("checked") ? e.result = CB.GameResultEnum.BLACK_WINS : e.result = CB.GameResultEnum.UNDEFINED_RESULT;
            b(e);
            V3ir.panelMgr.onFormClose()
        }
        $(g).jqxWindow("hide");
        $(g).remove()
    }).bind(this);
    $("#cancel").click(function(k) {
        $(g).jqxWindow("hide");
        $(g).remove();
        V3ir.panelMgr.onFormClose()
    }).bind(this)
}
;
"use strict";
CB.FritzPluginManager = function() {
    function e(k) {
        return new CB.V1sq(k)
    }
    var b = function() {
        this.V3cb = ".cbfritz";
        this.V3a5 = CB.V10z() + "Media/Chess/OrangeBrighterSoftBacklightLessSatur.jpg";
        b.superClass.call(this);
        this.init();
        this.recycled = [];
        this.EXTIsNotSupported = !0
    };
    CB.inherit(b, CB.V3bp);
    CB.mixin(b, CB.V3e5);
    CB.mixin(b, CB.V3ey);
    b.pluginClass = ".cbfritz";
    b.prototype.init = function() {
        this.superClass.init.call(this);
        this.V3ce = [];
        this.V3co = [];
        this.nota = [];
        this.livebook = [];
        this.V3fp = [void 0, void 0]
    }
    ;
    b.prototype.destroy = function() {
        var k = null;
        this.V3fp[0] && (k = this.V3fp[0].engLinesEl);
        k && k.destroy()
    }
    ;
    b.prototype.createPanels = function() {
        this.V3ci()
    }
    ;
    b.prototype.V2m4 = function() {}
    ;
    var d = 0;
    b.prototype.V3fq = function(k) {
        this.V3c9()
    }
    ;
    b.prototype.V3c9 = function() {
        this.V3cg != this.isMobileLayout() && (this.recycled = [],
        this.V3ch(),
        $(this.V3cb).each(function(k, l) {
            this.recycled[k] = {};
            this.recycled[k].boardArea = this.V3ce[k].boardArea;
            this.recycled[k].boardWin = this.V3ce[k].boardArea.canvas.control.boards[0];
            this.recycled[k].kernel = this.V3ce[k].getKernel();
            $(l).empty()
        }
        .bind(this)),
        this.init(),
        this.V3fr(),
        this.V3ci(),
        V3ir.setAgainstEngine(V3ir.curLevelId))
    }
    ;
    b.prototype.V3fr = function() {
        V3ir.gameKernel.posInput && (V3ir.gameKernel.boardArea.removePosInput(V3ir.gameKernel.boardWin),
        V3ir.gameKernel.posInput.destroy(),
        delete V3ir.gameKernel.posInput)
    }
    ;
    b.prototype.getKernel = function() {
        return this.V3ce[0].getKernel()
    }
    ;
    b.prototype.V3ci = function() {
        var k = 0
          , l = function(n, p, q, t, v, z) {
            this.V3bu = !0;
            this.V3co[n] = {};
            this.V3fs(p);
            var E = $(p).text();
            E && $(p).text("");
            var C = this.V3ft(p, k, q);
            t(C, k, E);
            this.V3ce.push(C);
            V3ir.gameKernel = C.addKernel(this, k);
            p = z(p, k, C.getKernel(), "100%");
            C.panels = p;
            C.nota = p.nota;
            C.onBoardReady = function(F) {
                V3ir.gameKernel = C.getKernel();
                V3ir.gameKernel.setBoardWin(F);
                V3ir.chessAudio || (V3ir.chessAudio = new CB.ChessAudio(V3ir.config.getExternalCommonPath() + "Media/Sounds/"),
                (new CB.Timer(function() {
                    V3ir.chessAudio.loadAll()
                }
                )).runOnce(2E3))
            }
            ;
            p.boardParent && !C.boardArea && (this.recycled[n] && this.recycled[n].boardArea ? (C.boardArea = this.recycled[n].boardArea,
            C.boardArea.changeParent(p.boardParent)) : C.boardArea = this.V3c6(p.boardParent));
            v(C, k, E);
            this.V3fu();
            k++
        }
          , m = this;
        $(this.V3cb).each(function(n, p) {
            $(p).is(".cbfritz") && m.doCreateFritzPlugin(p, n, l)
        }
        .bind(this));
        $(window).unbind("orientationchange");
        $(window).on("orientationchange", function(n) {
            this.V3fq()
        }
        .bind(this));
        $(document.body).unbind("keydown");
        $(document.body).on("keydown", function(n) {
            this.handleKeyDown(n)
        }
        .bind(this));
        this.pluginCnt = k;
        V3ir.addOnLoginListener(this.onLogin.bind(this))
    }
    ;
    b.prototype.onLogin = function(k) {
        V3ir.showLoginButtonInRibbon(!k);
        this.eastNest && this.V3dc(this.eastNest, 0);
        this.getKernel().V3i6.setHeaderData && this.getKernel().V3i6.setHeaderData();
        this.getKernel().game.fireOnChanged({
            forceUpdate: !0
        })
    }
    ;
    b.prototype.V3ft = function(k, l, m) {
        return {
            pluginDiv: k,
            ticket: ++d,
            kernel: [],
            nCurrKernel: 0,
            useFirstBoard: !0,
            maxKernels: 1,
            getKernel: function(n) {
                return "undefined" != typeof n ? this.kernel[n] : this.kernel[this.nCurrKernel]
            },
            addKernel: function(n, p) {
                if (n.recycled[p] && n.recycled[p].kernel)
                    var q = n.recycled[p].kernel;
                else {
                    q = new CB.V1ew(n);
                    q.ticket = this.ticket;
                    q.setPlayingMode(m(q));
                    q.pluginCnt = p;
                    var t = function() {
                        return n.getKernel().V3i6
                    };
                    q.fnBoardFactory = function(v, z, E, C, F) {
                        return new FritzHandlerBoardControl(v,z,E,C,F,t)
                    }
                }
                this.kernel.push(q);
                return q
            },
            selectKernelByIdGame: function(n) {
                for (var p = 0; p < this.kernel.length; p++)
                    if (this.kernel[p].idGame == n) {
                        this.nCurrKernel = p;
                        break
                    }
            },
            getKernelIndexOf: function(n) {
                for (var p = 0; p < this.kernel.length; p++)
                    if (this.kernel[p].idGame == n)
                        return p;
                return -1
            },
            getKernelOfIdGame: function(n) {
                for (var p = 0; p < this.kernel.length; p++)
                    if (this.kernel[p].idGame == n)
                        return this.kernel[p]
            }
        }
    }
    ;
    var c = 0;
    b.prototype.V3fv = function(k) {
        switch (k) {
        case CB.FritzCommandIds.V3fw:
            this.V3fx();
            break;
        case "idSelectLanguage":
            V3ir.panelMgr.openLanguageMenu();
            break;
        case "idLoginStart":
            this.V3fy();
            break;
        case "idAccount":
            V3ir.panelMgr.openAccountMenu();
            break;
        case CB.FritzCommandIds.V394:
        case "idBoardOptions":
            this.V3fz();
            break;
        case "levelsButton":
            var l = $("#levelsButton").position()
              , m = $("#levelsButton").height();
            k = l.left + 2;
            l = l.top + m + 14;
            $(this.V3g0).jqxMenu("open", k, l);
            break;
        case "setupButton":
            l = $("#setupButton").position();
            m = $("#setupButton").height();
            k = l.left + 2;
            l = l.top + m + 14;
            $(this.V3g1).jqxMenu("open", k, l);
            break;
        default:
            V3ir.execCommand(k)
        }
    }
    ;
    b.prototype.V3fy = function() {
        CB.Vq.V8x() ? window.open("https://fritz.chessbase.com", "_blank") : this.showAccountsForm()
    }
    ;
    b.prototype.V3fz = function() {
        var k = [CB.V1ge.V38u, CB.V1ge.V2jp, CB.V1ge.V2jn, CB.V1ge.V2jj];
        c++;
        c > k.length - 1 && (c = 0);
        glSettings.changeBoardStyle(k[c])
    }
    ;
    b.prototype.V3fx = function() {
        this.V3g2()
    }
    ;
    b.prototype.V3g2 = function() {
        window.location = document.referrer ? document.referrer : "https://fritz.chessbase.com"
    }
    ;
    b.prototype.createLevelsMenu = function(k) {
        return this.createJQMenu(k, "levelsMenu", [lm.BEGINNER, lm.AMATEUR, lm.CLUBPLAYER, lm.MASTER, lm.GRANDMASTER, lm.ANALYSIS], 0, function(l) {
            switch (parseInt(l)) {
            case 0:
                V3ir.execCommand(CB.FritzCommandIds.LEVEL_BEGINNER);
                break;
            case 1:
                V3ir.execCommand(CB.FritzCommandIds.LEVEL_AMATEUR);
                break;
            case 2:
                V3ir.execCommand(CB.FritzCommandIds.LEVEL_CLUBPLAYER);
                break;
            case 3:
                V3ir.execCommand(CB.FritzCommandIds.LEVEL_5_SECONDS);
                break;
            case 4:
                V3ir.execCommand(CB.FritzCommandIds.LEVEL_15_SECONDS);
                break;
            case 5:
                V3ir.execCommand(CB.FritzCommandIds.TOGGLE_ANALYSIS_ENGINE)
            }
        }, function() {})
    }
    ;
    b.prototype.V3g3 = function(k) {
        return this.createJQMenu(k, "setupMenu", [lm.SETUP_POSITION, lm.OPEN_PGN, lm.SAVE_AS_PGN, lm.EDIT_GAME, "MyGames Cloud"], 0, function(l) {
            switch (parseInt(l)) {
            case 0:
                V3ir.execCommand(CB.FritzCommandIds.SETUP_POSITION);
                break;
            case 1:
                $("#pgnFileInput").click();
                break;
            case 2:
                V3ir.panelMgr.pgnLinkClickHandler(event, "downloadPgnId", function() {
                    return V3ir.panelMgr.getKernel().game
                });
                break;
            case 3:
                V3ir.panelMgr.editGameHeader();
                break;
            case 4:
                V3ir.panelMgr.gotoMyGamesCloud()
            }
        }, function() {})
    }
    ;
    b.prototype.gotoMyGamesCloud = function() {
        this.getKernel().V3i6.saveToCloud();
        V3ir.panelMgr.redirectTo("mygames")
    }
    ;
    b.prototype.V3g4 = function(k) {
        var l = {
            fnCommand: this.V3fv.bind(this),
            iconHeight: this.V3g5(),
            textBelow: !1,
            tabs: [{
                categories: function() {
                    var m = []
                      , n = lm.NEW_GAME
                      , p = lm.TAKE_BACK
                      , q = lm.MAKE_MOVE
                      , t = lm.MOVE_NOW
                      , v = lm.GIVE_HINT
                      , z = lm.RESIGN
                      , E = lm.OFFER_DRAW
                      , C = lm.ANALYSIS
                      , F = lm.LEVEL
                      , P = lm.CALC_TRAINING
                      , X = lm.FLIP_BOARD
                      , W = lm.BOARDS;
                    CB.Vq.V37() && (n = "New",
                    p = "Back",
                    q = "Next",
                    t = "Move",
                    F = "Level",
                    X = "Flip");
                    !CB.Vq.V37() || CB.Vq.V11i() ? (V3ir.panelMgr.isMVCPlugin() && m.push({
                        id: "idBack",
                        buttons: [{
                            id: CB.FritzCommandIds.V3fw,
                            text: lm.BACK,
                            icon: "FritzOnline"
                        }]
                    }),
                    m = m.concat([{
                        id: "idCommands",
                        buttons: [{
                            id: CB.FritzCommandIds.NEW_GAME,
                            text: n,
                            icon: "NewGame"
                        }, {
                            id: CB.FritzCommandIds.TAKEBACK,
                            text: p,
                            icon: "Retract"
                        }, {
                            id: CB.FritzCommandIds.EXECMOVE,
                            text: q,
                            icon: "Exec"
                        }, {
                            id: "setupButton",
                            text: lm.SETUP_AND_SAVE,
                            icon: "SetupPosition"
                        }, {
                            id: CB.FritzCommandIds.ENGINE_MOVE_NOW,
                            text: t,
                            icon: "MoveNow"
                        }, {
                            id: CB.FritzCommandIds.TOGGLE_ANALYSIS_ENGINE,
                            text: C,
                            icon: "Engine",
                            toggle: !0
                        }, {
                            id: CB.FritzCommandIds.CALCULATE_LINES,
                            text: P,
                            icon: "CalcTraining",
                            toggle: !0
                        }, {
                            id: CB.FritzCommandIds.FLIP_BOARD,
                            text: X,
                            icon: "FlipBoard"
                        }, {
                            id: CB.FritzCommandIds.ENGINE_HINT,
                            text: v,
                            icon: "CoachHint"
                        }, {
                            id: CB.FritzCommandIds.RESIGN,
                            text: z,
                            icon: "Resign"
                        }, {
                            id: CB.FritzCommandIds.OFFER_DRAW,
                            text: E,
                            icon: "Draw"
                        }, {
                            id: "levelsButton",
                            text: F,
                            icon: "Levels"
                        }, {
                            id: "idBoardOptions",
                            text: W,
                            icon: "Pieces"
                        }]
                    }])) : V3ir.panelMgr.isMobileLayout() || (m = m.concat([{
                        id: "idCommands",
                        buttons: [{
                            id: CB.FritzCommandIds.NEW_GAME,
                            text: n,
                            icon: "NewGame"
                        }, {
                            id: CB.FritzCommandIds.TAKEBACK,
                            text: p,
                            icon: "Retract"
                        }, {
                            id: CB.FritzCommandIds.EXECMOVE,
                            text: q,
                            icon: "Exec"
                        }, {
                            id: CB.FritzCommandIds.ENGINE_MOVE_NOW,
                            text: t,
                            icon: "MoveNow"
                        }, {
                            id: CB.FritzCommandIds.FLIP_BOARD,
                            text: X,
                            icon: "FlipBoard"
                        }, {
                            id: "levelsButton",
                            text: F,
                            icon: "Levels"
                        }]
                    }]));
                    return m = V3ir.panelMgr.createAccountOptionsButton(m)
                }()
            }]
        };
        l = new CB.V6(l);
        $(k).empty();
        l.create(k);
        (new CB.Timer(function() {
            this.V3da(this.V3g6())
        }
        .bind(this))).runOnce(900);
        this.V3g0 = this.createLevelsMenu($("#levelsButton")[0]);
        this.V3g1 = this.V3g3($("#setupButton")[0])
    }
    ;
    b.prototype.V3g6 = function() {
        return ["idBoardOptions", "idSelectLanguage", CB.FritzCommandIds.RESIGN, CB.FritzCommandIds.CALCULATE_LINES, CB.FritzCommandIds.V3fw, CB.FritzCommandIds.SETUP_POSITION, CB.FritzCommandIds.FLIP_BOARD, CB.FritzCommandIds.TOGGLE_ANALYSIS_ENGINE, CB.FritzCommandIds.OFFER_DRAW, CB.FritzCommandIds.EXECMOVE, CB.FritzCommandIds.ENGINE_MOVE_NOW, "idLoginStart", CB.FritzCommandIds.ENGINE_HINT]
    }
    ;
    b.prototype.V3db = function() {
        return !0
    }
    ;
    b.prototype.V3g7 = function(k) {
        var l = this.V3g8()
          , m = this.V3g9()
          , n = this.V3ga()
          , p = 490 < window.innerWidth
          , q = 620 < window.innerHeight;
        var t = '<div style="margin:auto">' + this.V3gb("btnNewGame", CB.FritzCommandIds.NEW_GAME, "NewGame", l, "New");
        t += this.V3gb("btnTakeBack", CB.FritzCommandIds.TAKEBACK, "Retract", l, "Back");
        t += this.V3gb("btnMakeMove", CB.FritzCommandIds.EXECMOVE, "Exec", l, "Next");
        t += this.V3gb("btnMoveNow", CB.FritzCommandIds.ENGINE_MOVE_NOW, "MoveNow", l, "Move!");
        p && (t += this.V3gb("btnHint", CB.FritzCommandIds.ENGINE_HINT, "Hint", l, "Hint"));
        t = t + '</div><div class="mobileBtnRow">' + this.V3gb("btnFlipBoard", CB.FritzCommandIds.FLIP_BOARD, "FlipBoard", l, "Flip");
        t += this.V3gb("btnLevel", 0, "Levels", l, "Level");
        t += this.V3gb("btnResign", CB.FritzCommandIds.RESIGN, "Resign", l, "Resign");
        p && (t += this.V3gb("btnDraw", CB.FritzCommandIds.OFFER_DRAW, "Draw", l, "Draw"));
        t += this.V3gb("btnLogin", 0, "Key", l, "Login");
        t += this.V3gb("btnLogout", 0, "Account", l, "Logout");
        t += "</div>";
        q && (t = t + '<div class="mobileBtnRow">' + this.V3gb("btnAnalysis", CB.FritzCommandIds.TOGGLE_ANALYSIS_ENGINE, "Engine", l, "Check"),
        t += this.V3gb("btnHint", CB.FritzCommandIds.ENGINE_HINT, "Hint", l, "Hint"),
        t += this.V3gb("btnDraw", CB.FritzCommandIds.OFFER_DRAW, "Draw", l, "Draw"),
        t += this.V3gb("btnSetup", CB.FritzCommandIds.SETUP_POSITION, "SetupPosition", l, "Setup"),
        p && (t += this.V3gb("btnPieces", CB.FritzCommandIds.V394, "Pieces", l, "Pieces")),
        t += "</div>");
        $(k).html(t);
        $(k).find("button").each(function() {
            $(this).jqxButton({
                width: n,
                height: m,
                imgHeight: l,
                imgWidth: l,
                theme: "chessbase"
            })
        });
        $(k).find("#btnLevel").click(function() {
            var v = $("#btnLevel").position();
            $("#btnLevel").height();
            var z = v.left + 2;
            v = v.top - 164;
            var E = V3ir.panelMgr.createLevelsMenu($("#btnLevel")[0]);
            $(E).jqxMenu("open", z, v)
        });
        $(k).find("button").click(function() {
            if ($(this).attr("cmdId")) {
                var v = Number($(this).attr("cmdId"));
                V3ir.execCommand(v)
            }
        });
        V3ir.isLoggedIn() ? V3ir.panelMgr.showAccountButtonForMobile(1) : V3ir.panelMgr.showAccountButtonForMobile(0);
        $("#btnLogin").click(function() {
            this.V3fy()
        });
        $("#btnLogout").click(function() {
            V3ir.setLoggedIn(!1);
            V3ir.panelMgr.showAccountButtonForMobile(0)
        })
    }
    ;
    b.prototype.V3gb = function(k, l, m, n, p) {
        var q = CB.V10z();
        return String.f('<button id="{0}" style="margin-right: 5px;" cmdId="{1}" class="mobileBtn"><img src="' + q + 'Media/Ribbons/{2}{3}.png" /><span>{4}</span></button>', k, l, m, n, p)
    }
    ;
    b.prototype.showAccountButtonForMobile = function(k) {
        0 == k ? ($("#btnLogin").show(),
        $("#btnLogout").hide()) : ($("#btnLogin").hide(),
        $("#btnLogout").show())
    }
    ;
    b.prototype.doCreateFritzPlugin = function(k, l, m) {
        m.call(this, l, k, e, function(n, p, q) {}, function(n, p, q) {
            this.V3dx(n, q);
            this.V3cc($(k), l)
        }
        .bind(this), function(n, p, q, t) {
            return this.isMobileLayout() ? this.V3gc(n, p, q, t) : this.V3gd(n, p, q, t)
        }
        .bind(this))
    }
    ;
    b.prototype.V3fs = function(k) {
        k.style.clear = "both";
        CB.Vq.V34() ? $(k).css("height", "100vh") : this.isMobileLayout() ? $(k).css("height", String.f("{0}px", window.innerHeight - 2)) : ($(k).css("height", String.f("{0}px", window.innerHeight - 2)),
        $(k).css("width", "calc( 100% - 4px )"))
    }
    ;
    b.prototype.logOut = function() {
        V3ir.setLoggedIn(!1);
        V3ir.restorePrevGame();
        V3ir.panelMgr.selectNotaTab()
    }
    ;
    b.prototype.isMobileLayout = function() {
        return this.V3c3()
    }
    ;
    b.prototype.V3ge = function() {
        return !this.isMobileLayout()
    }
    ;
    b.prototype.V3gc = function(k, l, m, n) {
        n = this.createDiv("rootParent", l);
        k.appendChild(n);
        $(document.body).css("backgroundImage", "url( " + this.V3a5 + ")");
        k = this.V3gf(l);
        n.appendChild(k);
        k = this.V3gg(k, l);
        this.V3gh(n, l, m);
        return {
            nota: null,
            livebook: null,
            boardParent: k
        }
    }
    ;
    b.prototype.V3gd = function(k, l, m, n) {
        this.V3ge() && this.V3gi(k, l);
        n = this.createDiv("rootParent", l);
        k.appendChild(n);
        k = this.V3gf(l);
        n.appendChild(k);
        k = this.V3gg(k, l);
        this.V3gj(n, l, m);
        return {
            nota: this.nota[l],
            livebook: this.livebook[l],
            boardParent: k
        }
    }
    ;
    b.prototype.V3gf = function(k) {
        k = this.createDiv("boardRoot", k);
        $(k).css("height", "100%");
        $(k).css("width", "100%");
        return k
    }
    ;
    b.prototype.V3gg = function(k, l) {
        var m = this.createDiv("boardHolder", l);
        this.isMobileLayout() || $(m).css("backgroundImage", "url( " + this.V3a5 + ")");
        l = this.createDiv("boardArea", l);
        m.appendChild(l);
        k.appendChild(m);
        return l
    }
    ;
    b.prototype.V3gk = function(k) {
        return !1
    }
    ;
    b.prototype.V3ch = function() {
        if (0 < this.V3ce.length) {
            var k = this.V3ce[0].getKernel();
            k.boardWin && k.boardWin.destroyMessage()
        }
    }
    ;
    b.prototype.V3gl = function() {
        var k = '<div class="EngineHelpText"><ul><li>' + (lm.ENGINE_HELP_1 + "</li>");
        k += "<li>" + lm.ENGINE_HELP_2 + "</li>";
        k += "<li>" + lm.ENGINE_HELP_3 + "</li>";
        k += "<li>" + lm.ENGINE_HELP_4 + "</li>";
        k += "<li>" + lm.ENGINE_HELP_5 + "</li>";
        k += "</div></ul>";
        if (CB.Vq.V8x() || CB.Vq.V37())
            k = '<div class="EngineHelpTextMobile"><ul><li>' + (lm.ENGINE_HELP_MOBILE_1 + "</li>"),
            k += "<li>" + lm.ENGINE_HELP_2 + "</li>",
            k += "</div></ul>";
        var l = 190;
        this.isMobileLayout() && (l = CB.Vq.V11c() ? 50 : 70);
        return {
            h: l,
            title: 700 < window.innerHeight ? "Fritz" : "",
            loadingTitle: k,
            scrollLines: !1
        }
    }
    ;
    b.prototype.V3gm = function(k) {
        var l = this.createDiv("engParent", 0);
        $(k).append(l);
        k = this.createDiv("engineEl", 0);
        this.isMobileLayout() || $(l).css("border-top", "1px solid #CCC");
        this.V3gn = k;
        $(l).append(this.V3gn);
        this.V3fp[0] = CB.V31v.V31w(f, this.V3gl(), this.V3gn);
        this.isMobileLayout() || this.V3go()
    }
    ;
    var f = 0;
    b.prototype.V3go = function() {
        $("#eastWrap0").jqxSplitter({
            width: "100%",
            height: "100%",
            orientation: "horizontal",
            theme: "chessbase",
            showSplitBar: !0,
            resizable: !0,
            panels: [{
                size: "50%",
                collapsible: !1
            }, {
                size: "50%",
                collapsible: !1
            }]
        });
        $("#eastWrap0").on("resize", function(k) {
            this.V3gp()
        }
        .bind(this));
        $("#eastWrap0").jqxSplitter("expand")
    }
    ;
    b.prototype.selectNotaTab = function() {
        this.V3gq && this.V3gq.select(0)
    }
    ;
    b.prototype.openEnginePanel = function(k) {
        return this.V3fp[k]
    }
    ;
    b.prototype.V3gr = function(k) {
        $(".engOutFeedback").html(String.f("<div class='engOutFeedbackText'>{0}</div>", k))
    }
    ;
    b.prototype.showEngHint = function(k, l) {
        var m = null;
        this.V3fp[0] && (m = this.V3fp[0].engLinesEl);
        m ? m.setHint(k, l) : (m = "engOutHintText",
        l && (m += " " + l),
        $(".engOutHint").html(String.f("<div class='{1}'>{0}</div>", k, m)))
    }
    ;
    b.prototype.V3gs = function(k) {
        var l = "#" + CB.FritzCommandIds.TOGGLE_ANALYSIS_ENGINE;
        k ? (this.showBoardMessage(lm.ANALYSIS, 1500),
        $(l).length && $(l).jqxToggleButton("check")) : $(l).length && $(l).jqxToggleButton("unCheck")
    }
    ;
    b.prototype.showHintsLimitExceeded = function() {
        this.showBoardMessage(V3ir.getStrHintsLimitExceeded(), 2E3)
    }
    ;
    var g = new CB.V3id;
    b.prototype.V3gt = function(k, l, m, n) {
        var p = this.V3gu("root", k);
        n = p && p.size ? p.size : n;
        $(l).jqxSplitter({
            width: "100%",
            height: "100%",
            orientation: "vertical",
            splitBarSize: m,
            showSplitBar: !CB.Vq.V37(),
            theme: "chessbase",
            panels: [{
                size: n + "%",
                collapsible: !1
            }, {
                size: 100 - n + "%",
                collapsible: !1
            }]
        });
        $(l).on("resize", function(q) {
            g.exec(function() {
                this.V3gv(k)
            }
            .bind(this), 200)
        }
        .bind(this))
    }
    ;
    b.prototype.V3gv = function(k) {
        var l = $("#boardHolder" + k).width()
          , m = $("#boardHolder" + k).height();
        this.V3ck(l, m, k) && (this.V3ce[k].boardArea && (this.V3cf(k, l, m),
        this.nota && this.nota[0] && (k = $("#notaEl0").width(),
        l = $("#notaEl0").height(),
        this.nota[0].notaHeaderElement.onResize(k, l))),
        this.V3gw(),
        this.V3gx("root"),
        this.V3gp())
    }
    ;
    b.prototype.V3gw = function() {}
    ;
    b.prototype.V3gu = function(k) {
        k = V3ir.V3i2.load(k + "size");
        return {
            size: parseFloat(k),
            coll: !1
        }
    }
    ;
    b.prototype.V3gx = function(k) {
        var l = $("#rootParent0");
        l.length && (l = $(l).jqxSplitter("panels")) && l[0] && V3ir.V3i2.save(k + "size", l[0].size)
    }
    ;
    b.prototype.V3gy = function(k, l, m) {
        var n = ObjUtil.clone(CB.cbNotationDefaults);
        n.useMatBalance = !0;
        k = CB.NotaElement.factory(k, null, n, m, this.V3ce[m].ticket);
        k.setGame(l.game);
        return k
    }
    ;
    b.prototype.V3gz = function(k, l, m) {
        return this.tbBook = CB.V3fm(function() {
            return l
        }
        .bind(this), {
            height: 510,
            players: !1,
            minVisits: 10,
            suppressLiveBookListener: !0
        }, k)
    }
    ;
    b.prototype.getLoginInfoGradient = function() {
        return CB.V110.V34j("hsl( 0, 6%, 45%)", "hsl( 0, 6%, 55%)")
    }
    ;
    b.prototype.V3dc = function(k, l) {
        k = this.superClass.V3dc.call(this, k);
        this.notaParent && this.V3h0(l);
        return k
    }
    ;
    b.prototype.V3h0 = function(k) {
        k = 0 + $("#notaToolbar" + k).outerHeight() - 1;
        $(this.notaParent).css("height", "calc( 100% - " + k + "px )")
    }
    ;
    b.prototype.V3h1 = function(k, l, m) {
        $(k).css("overflow", "hidden");
        var n = this.createDiv("notaparent", l);
        this.notaParent = n;
        $(n).css("width", "calc( 100% - 2px )");
        $(n).css("border", "0");
        var p = this.createDiv("notaEl", l);
        n.appendChild(p);
        $(k).append(n);
        m = this.V3gy(p, m, l);
        n = this.createDiv("notaToolbar", l);
        this.V3dj(V3ir.V3ia, n);
        $(k).append(n);
        CB.Vq.V37() && $("#nota-foot-" + l).hide();
        this.V3h0(l);
        570 > window.innerWidth && $(".notaToolbar button").css("padding", "0");
        return m
    }
    ;
    b.prototype.V3h2 = function(k) {
        return CB.Vq.V37() || CB.Vq.V8x() ? "" : k
    }
    ;
    b.prototype.V3dj = function(k, l) {
        var m = CB.V10z() + "Media/Ribbons/Buttons/16/"
          , n = CB.V10z() + "Media/Ribbons/MyGames/"
          , p = "";
        this.V3bz && (p += "<button id='btnShareGame'><img src='" + m + "Social16.png' /></button>");
        p = p + ("<button id='downloadPgnId'><img src='" + n + "Download16.png' /></button><button id='btnTextAfter'><img src='") + (m + "Posttext16.png' />" + this.V3h2(lm.TEXT_AFTER) + "</button>");
        p += "<button id='btnPromoteLine'><img src='" + m + "PromoteLine16.png' />" + this.V3h2(lm.PROMOTE_LINE) + "</button>";
        p += "<button id='btnDeleteLine'><img src='" + m + "DeleteLine16.png' />" + this.V3h2(lm.DELETE_LINE) + "</button>";
        p += "<button id='btnCutLine'><img src='" + m + "CutLine16.png' />" + this.V3h2(lm.CUT_LINE) + "</button>";
        p = p + ("<button id='btnMarkGood'><img src='" + m + "Good16.png' /></button><button id='btnMarkBad'><img src='") + (m + "Bad16.png' /></button><button id='btnMarkVeryGood'><img src='") + (m + "VeryGood16.png' /></button><button id='btnMarkVeryBad'><img src='") + (m + "VeryBad16.png' /></button><button id='btnMarkInteresting'><img src='") + (m + "Interesting16.png' /></button><button id='btnMarkDubious'><img src='") + (m + "Dubious16.png' /></button>");
        $(l).html(p);
        this.V3bz && $(l).find("#btnShareGame").click(function() {
            $("#btnShareGame").attr("disabled", !0);
            V3ir.panelMgr.shareGame(V3ir.gameKernel.game);
            $("#btnShareGame").removeAttr("disabled")
        });
        $(l).find("#downloadPgnId").click(function(q) {
            V3ir.panelMgr.pgnLinkClickHandler(q, "downloadPgnId", function() {
                return V3ir.panelMgr.getKernel().game
            })
        });
        $(l).find("#btnTextAfter").click(function() {
            V3ir.gameKernel.execCommand(k.ADD_POST_TEXT)
        });
        $(l).find("#btnPromoteLine").click(function() {
            V3ir.gameKernel.execCommand(k.PROMOTE_LINE)
        });
        $(l).find("#btnDeleteLine").click(function() {
            V3ir.gameKernel.execCommand(k.DELETE_LINE)
        });
        $(l).find("#btnCutLine").click(function() {
            V3ir.gameKernel.execCommand(k.CUT_LINE)
        });
        $(l).find("#btnMarkGood").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_GOOD)
        });
        $(l).find("#btnMarkBad").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_BAD)
        });
        $(l).find("#btnMarkVeryGood").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_VERYGOOD)
        });
        $(l).find("#btnMarkVeryBad").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_VERYBAD)
        });
        $(l).find("#btnMarkInteresting").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_INTERESTING)
        });
        $(l).find("#btnMarkDubious").click(function() {
            V3ir.gameKernel.execCommand(k.MARK_DUBIOUS)
        })
    }
    ;
    b.prototype.V3h3 = function(k) {
        var l = CB.V10z() + "Media/Ribbons/"
          , m = CB.Vq.V37() ? "White" : lm.LOAD_WHITE
          , n = CB.Vq.V37() ? "Black" : lm.LOAD_BLACK
          , p = CB.Vq.V37() ? "Game" : "Restore Game";
        l = "<button id='btnLoadWhite'><img src='" + l + "White16.png' />" + m + "</button><button id='btnLoadBlack'><img src='" + (l + "Black16.png' />" + n + "</button><button id='btnRestoreGame'><img src='") + (l + "RestoreGameNew16.png' />" + p + "</button>");
        $(k).html(l);
        $(k).find("#btnLoadWhite").click(function() {
            V3ir.gameKernel.boardWin.setBlackIsBottom(!1, !0);
            V3ir.loadMyMoves(CB.V295.WHITE, new CB.Game);
            V3ir.panelMgr.selectNotaTab()
        });
        $(k).find("#btnLoadBlack").click(function() {
            V3ir.gameKernel.boardWin.setBlackIsBottom(!0, !0);
            V3ir.loadMyMoves(CB.V295.BLACK, new CB.Game);
            V3ir.panelMgr.selectNotaTab()
        });
        $(k).find("#btnRestoreGame").click(function() {
            V3ir.restorePrevGame();
            V3ir.panelMgr.selectNotaTab()
        })
    }
    ;
    b.prototype.V3h4 = function(k, l, m) {
        var n = this.createDiv("livebookparent", l);
        $(k).append(n);
        m = this.V3gz(n, m, l);
        l = this.createDiv("liveBookToolbar", l);
        this.V3h3(l);
        $(k).append(l);
        return m
    }
    ;
    b.prototype.V3gj = function(k, l, m) {
        var n = this.createDiv("east", l);
        $(k).append(n);
        this.V3gt(l, k, this.V3cz(), 52);
        k = this.createDiv("eastWrap", l);
        $(n).append(k);
        1E3 < window.innerWidth && !CB.Vq.V34() && !this.isMVCPlugin() && CB.Vq.V8x();
        var p = this.createDiv("eastNest", l);
        $(k).append(p);
        this.V3dc(p, l);
        this.eastNest = p;
        n = this.createDiv("eastSouth", l);
        $(p).append(n);
        p = [{
            title: lm.NOTATION,
            id: "idTabNotation",
            icon: "notation"
        }, {
            title: lm.LIVE_BOOK,
            id: "idTabLiveBook",
            icon: "book"
        }];
        1400 > window.innerWidth && p.forEach(function(q) {
            q.icon = null
        });
        this.V3gq = new CB.Ve({
            tabs: p,
            iconPath: "fritz",
            iconHeight: 24
        });
        this.V3gq.create(n);
        $(this.V3gq.V9).unbind("selected");
        $(this.V3gq.V9).on("selected", function(q) {
            q = q.args.item;
            0 != q && 1 == q && (q = V3ir.gameKernel,
            q.V3i6.lbInfo ? q.V3i6.liveBookListener(q.V3i6.lbInfo) : q.V3i6.checkLiveBook ? (q.forceTBUpdate = !0,
            q.V3i6.checkLiveBook()) : q.V3i6.updateGamePos && q.V3i6.updateGamePos())
        });
        this.nota[l] = this.V3h1($("#idTabNotation"), l, m);
        this.livebook[l] = this.V3h4($("#idTabLiveBook"), l, m);
        0 == l && this.V3gm(k)
    }
    ;
    b.prototype.isMVCPlugin = function() {
        return $(b.pluginClass).data("plugin")
    }
    ;
    b.prototype.V3gi = function(k, l) {
        l = this.createDiv("north", l);
        $(k).append(l);
        this.V3h5 = l;
        this.V3g4(this.V3h5)
    }
    ;
    b.prototype.V3gh = function(k, l, m) {
        m = this.createDiv("south", l);
        $(k).append(m);
        var n = this.V3gm(m);
        $(m).append(n);
        this.V3h6 = n;
        l = this.createDiv("buttons", l);
        $(k).append(l);
        $(l).css("margin-top", "15px");
        this.V3g7(l)
    }
    ;
    b.prototype.V3g5 = function() {
        return 900 < window.innerHeight ? 32 : 24
    }
    ;
    b.prototype.V3g9 = function() {
        return 490 < window.innerHeight ? 900 < window.innerHeight ? 50 : 38 : 26
    }
    ;
    b.prototype.V3g8 = function() {
        return 900 < window.innerHeight ? 32 : 24
    }
    ;
    b.prototype.V3ga = function() {
        return 450 < window.innerWidth ? 1200 < window.innerWidth ? 100 : 90 : 80
    }
    ;
    b.prototype.V3cd = function(k, l, m, n) {
        this.V3bs[k] && this.V3bs[k].stop();
        this.V3bs[k] = new CB.Timer(function() {
            this.V3ce[k].boardArea && this.V3cf(k, l, m)
        }
        .bind(this));
        this.V3bs[k].runOnce(n)
    }
    ;
    b.prototype.V3cf = function(k, l, m) {
        this.V3bs[k] && this.V3bs[k].stop();
        this.logoPath = null;
        this.logoPathSmallest = "Media/FritzLogoSmall.png";
        this.V3h7 = "Media/FritzLogoMedium.png";
        this.hasLogo() && (this.logoPath = 600 <= window.innerWidth ? this.V3h7 : this.logoPathSmallest);
        this.logoPath ? this.V3ce[k].getKernel().boardWin.addLogo(this.logoPath) : this.V3ce[k].boardArea.canvas.control.boards[0] && this.V3ce[k].boardArea.canvas.control.boards[0].titleWin && this.V3ce[k].boardArea.canvas.control.boards[0].titleWin.logoPath && (this.V3ce[k].boardArea.canvas.control.boards[0].titleWin.destroy(),
        this.V3ce[k].boardArea.canvas.control.boards[0].destroyTitle(),
        this.V3ce[k].boardArea.canvas.control.boards[0].destroyMessage());
        switch (this.logoPath) {
        default:
            this.V3ce[k].boardArea.setPosSize(0, 0, l, m);
            break;
        case this.logoPathSmallest:
            this.V3ce[k].boardArea.setPosSize(0, 40, l, m - 40);
            break;
        case this.V3h7:
            this.V3ce[k].boardArea.setPosSize(0, 80, l, m - 80)
        }
    }
    ;
    b.prototype.hasLogo = function() {
        return !1
    }
    ;
    b.prototype.V3cc = function(k, l) {
        this.V3h8 != window.innerWidth && (this.V3h8 = window.innerWidth,
        this.V3cg = this.isMobileLayout());
        this.V3cg ? this.V3h9(k, l) : this.V3ha(k, l)
    }
    ;
    b.prototype.V3h9 = function(k, l) {
        if (k && this.V3ce && this.V3ce[l]) {
            k = k.width();
            1E3 < k && (k = Math.floor(.9 * k));
            k * window.devicePixelRatio > 8 * CB.V2ms.V3hb + 50 && (k = (8 * CB.V2ms.V3hb + 50) / window.devicePixelRatio);
            $("#boardHolder" + l)[0].style.width = "100%";
            $("#boardHolder" + l)[0].style.height = k.toString() + "px";
            k = $("#boardHolder" + l).width();
            var m = $("#boardHolder" + l).height();
            this.V3ce[l].boardArea && !this.V3ce[l].boardArea.canvas && (this.V3ce[l].boardArea.createCanvas(this.V3ce[l].getKernel(), {
                topDist: 1,
                bottomDist: 1,
                marginDistDivisor: 40,
                shiftXPercent: -1,
                minWForCoordinates: 240,
                boardShadow: !0
            }),
            this.V3ce[l].getKernel().boardWin.onReadyHandlers.add(this.V3ce[l].onBoardReady.bind(this.V3ce[l])));
            this.V3cd(l, k, m, 100);
            this.V3gp()
        }
    }
    ;
    b.prototype.V3ha = function(k, l) {
        $(k).css("height", String.f("{0}px", window.innerHeight - 2));
        var m = $("#north" + l).height();
        null == m && (m = 0);
        $("#rootParent" + l).height(String.f("calc( 100% - {0}px )", m));
        $("#eastWrap0").jqxSplitter("refresh");
        if (k && this.V3ce && this.V3ce[l]) {
            k.width();
            k = k.height() - m;
            $("#boardHolder" + l)[0].style.width = "100%";
            $("#boardHolder" + l)[0].style.height = k + "px";
            k = $("#boardHolder" + l).width();
            m = $("#boardHolder" + l).height();
            if (this.V3ce[l].boardArea && !this.V3ce[l].boardArea.canvas) {
                var n = {
                    topDist: this.V3cv(),
                    bottomDist: this.V3cv(),
                    marginDistDivisor: 40,
                    shiftXPercent: -1,
                    minWForCoordinates: 240,
                    boardShadow: !0
                };
                this.V3ce[l].boardArea.createCanvas(this.V3ce[l].getKernel(), n);
                this.V3ce[l].getKernel().boardWin.onReadyHandlers.add(this.V3ce[l].onBoardReady.bind(this.V3ce[l]))
            }
            this.V3cd(l, k, m, 100);
            this.V3gp();
            this.V3da(this.V3g6());
            $("#east0").trigger("resize")
        }
    }
    ;
    b.prototype.V3gp = function() {
        if (this.V3fp[0]) {
            var k = this.V3fp[0].engLinesEl;
            k && k.resize()
        }
    }
    ;
    b.prototype.V3cv = function() {
        return 900 > window.innerHeight ? 0 : 4
    }
    ;
    b.prototype.V3hc = function(k) {
        return $("#boardHolder" + k).width()
    }
    ;
    b.prototype.V3hd = function(k) {
        if (this.V3ce[k].getKernel() && this.V3ce[k].getKernel().boardWin)
            return this.V3ce[k].getKernel().boardWin.cbcanvas.pixToZoom(this.V3ce[k].getKernel().boardWin.nBoardOuterW);
        k = $(".cbfritz");
        return k.length ? .9 * k.width() : 200
    }
    ;
    b.prototype.V3he = function() {
        return CB.Vq.V37() && 1010 > window.innerHeight && 1E3 > window.innerWidth ? {
            getLineHBoard: function() {
                return 800 < window.innerHeight ? 60 : 44
            },
            getBtnHBoard: function() {
                return 800 < window.innerHeight ? 48 : 32
            }
            .bind(this)
        } : {
            getLineHBoard: function() {
                return 800 < window.innerHeight ? 50 : 44
            }
            .bind(this),
            getBtnHBoard: function() {
                return 800 < window.innerHeight ? 32 : 24
            }
            .bind(this),
            lineHNota: 34,
            btnHNota: 24
        }
    }
    ;
    b.prototype.V3hf = function(k) {
        this.V3ce[k].getKernel().V3i6.onExit()
    }
    ;
    b.prototype.V3hg = function(k) {
        this.V3ce[k].getKernel().V3i6.onEntry()
    }
    ;
    b.prototype.onBlur = function() {}
    ;
    b.prototype.onLogOff = function() {
        this.onBlur()
    }
    ;
    b.prototype.onBeforeUnload = function() {}
    ;
    b.prototype.V3hh = function() {
        return !0
    }
    ;
    b.prototype.handleKeyDown = function(k) {
        if (this.V3bw) {
            switch (k.key) {
            default:
                var l = !1;
                break;
            case "s":
                V3ir.setupPosition(this.getKernel());
                break;
            case "x":
                this.getKernel().V3i6.toggleThreat()
            }
            if (!l)
                return this.V3e0(k)
        }
    }
    ;
    b.prototype.V3fu = function() {
        var k = document.getElementById("pgnFileInput");
        k && k.addEventListener("change", h)
    }
    ;
    var h = function() {
        V3ir.panelMgr.onFileSelect(CB.FritzCommandIds.V3hi, this.files)
    };
    b.prototype.onFileSelect = function(k, l) {
        if (k == CB.FritzCommandIds.V3hi) {
            if (l.length)
                var m = new CB.V253(l[0],function() {
                    this.V3hj(m);
                    var n = document.getElementById("pgnFileInput");
                    n && (n.value = null)
                }
                .bind(this));
            return !0
        }
        return !1
    }
    ;
    b.prototype.V3hj = function(k) {
        k && 0 < k.getGameCount() && (k = k.getGame(1),
        this.getKernel().V3i6.loadGame(k))
    }
    ;
    b.prototype.useBackgroundFilter = function() {
        return !this.isMobileLayout() && !CB.Vq.V37() && !CB.Vq.V8x()
    }
    ;
    V3i1.initForListeners(b);
    V3i1.addEvent(b, "ClickAssist");
    V3i1.addEvent(b, "NextHint");
    return b
}();
CB.FritzCommandIds = {
    LEVEL_NO_ENGINE: 1031,
    LEVEL_1_SECOND: 1032,
    LEVEL_5_SECONDS: 1033,
    LEVEL_15_SECONDS: 1034,
    LEVEL_40_SECONDS: 1035,
    LEVEL_BLITZ_3_0: 1036,
    LEVEL_BLITZ_4_0: 1037,
    LEVEL_BLITZ_5_0: 1038,
    LEVEL_BLITZ_3_2: 1039,
    LEVEL_BLITZ_5_5: 1040,
    LEVEL_BEGINNER: 1050,
    LEVEL_AMATEUR: 1051,
    LEVEL_CLUBPLAYER: 1052,
    RESIGN: 1060,
    OFFER_DRAW: 1061,
    CALCULATE_LINES: 1065,
    V3hi: 1066,
    SHARE: 1070,
    OPEN_CLOUDDATABASE: 2E3,
    V3fw: 2050
};
CB.FritzApp = function() {
    var e = function() {
        this.V3i2 = new CB.V8u("Fritz");
        this.versionCode = new CB.V2z(CB.V2d.V2j,8,5,0);
        this.appName = "fritz.chessbase.com";
        this.shortAppName = "Fritz";
        this.appTitle = "Fritz Chess Program Online";
        this.appUrl = "http://fritz.chessbase.com";
        this.preventDefaultTimeControlUpdate = !0;
        this.config.liveBookIsPremium = !0;
        this.config.board2DBottomOffset = this.config.board2DTopOffset = 8;
        this.config.has3DBoard = !0;
        this.config.silentCloud = !0;
        this.config.silentServers = !0;
        this.config.V3am = !0;
        this.curLevelId = CB.FritzCommandIds.LEVEL_CLUBPLAYER;
        this.hintMeter = new HintMeter
    };
    CB.inherit(e, CB.ChessApp);
    CB.mixin(e, CB.V3f2);
    CB.mixin(e, CB.V3eb);
    e.prototype.onTokenLoginOk = function() {
        CB.V3eb.onTokenLoginOk.call(this);
        V3ir.panelMgr.isMobileLayout() && V3ir.panelMgr.showAccountButtonForMobile(1)
    }
    ;
    e.prototype.stop = function() {}
    ;
    e.prototype.initInstance = function() {
        CB.ChessApp.prototype.initInstance.call(this);
        this.urlParams = {
            depth: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("depth"))),
            time: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("time"))),
            pos: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("pos"))),
            fen: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("fen"))),
            pgn: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("pgn"))),
            buf64: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("buf64"))),
            layout: decodeURIComponent(CB.V1b.V103(CB.V1b.V100("layout"))),
            hasPgn: function() {
                return this.pgn
            },
            hasStartPos: function() {
                return this.pos || this.fen
            },
            engineIsVisible: function() {
                return !this.layout.match(/noengine/i)
            }
        };
        this.V3i2.hasUserAndPass() || this.V3bf();
        this.V3hk()
    }
    ;
    e.prototype.hasUrlGame = function() {
        return this.urlParams.pos || this.urlParams.fen
    }
    ;
    e.prototype.exitInstance = function() {
        CB.ChessApp.prototype.exitInstance.call(this);
        this.panelMgr.destroy()
    }
    ;
    e.prototype.V3aq = function(b) {
        var d = CB.ChessApp.prototype.V3aq.call(this, b);
        CB.Vd7.Vi6[b] ? d.push(CB.Vd7.Vi6[b]) : d.push(CB.Vd7.Vi6.ENG);
        CB.Vd7.Vgl[b] ? d.push(CB.Vd7.Vgl[b]) : d.push(CB.Vd7.Vgl.ENG);
        CB.Vd7.Vih[b] ? d.push(CB.Vd7.Vih[b]) : d.push(CB.Vd7.Vih.ENG);
        return d
    }
    ;
    e.prototype.V3ah = function() {
        return CB.FritzCommandIds
    }
    ;
    e.prototype.getAvailableLanguages = function() {
        return [CB.V6r.ENG, CB.V6r.DEU, CB.V6r.ESP]
    }
    ;
    e.prototype.tryLogin = function() {
        if (!CB.Vq.V8x()) {
            var b = !1;
            this.V3b2() && (b = CB.ChessApp.prototype.tryLogin.call(this, this.tokenLoginHandler.bind(this)));
            !b && this.V3i2.hasUserAndPass() && CB.ChessApp.prototype.V3b8.call(this, this.tokenLoginHandler.bind(this))
        }
    }
    ;
    e.prototype.showLoginButtonInRibbon = function(b) {
        var d = !CB.Vq.V8x() || !this.panelMgr.V3db();
        b ? (d && $("#idLoginStart").closest("td").show(),
        $("#idAccount").closest("td").hide()) : ($("#idLoginStart").closest("td").hide(),
        d && $("#idAccount").closest("td").show())
    }
    ;
    e.prototype.isAnalysis = function() {
        return this.panelMgr.getKernel().V3i6.isAnalysis()
    }
    ;
    e.prototype.V1qh = function() {
        var b = this.panelMgr.getKernel();
        b.V3i6.isAnalysis() ? (this.setAgainstEngine(this.curLevelId),
        this.panelMgr.V3gs(!1)) : this.checkHintsLoginLimit() ? (b.V3i6.isAgainstEngineMode && (this.againstEngine = b.V3i6,
        this.againstEngine.V1u4()),
        b.setPlayingMode(new CB.V1rs(b)),
        this.panelMgr.V3gs(!0)) : this.panelMgr.showHintsLimitExceeded()
    }
    ;
    e.prototype.setAgainstEngine = function(b, d) {
        var c = this.panelMgr.getKernel();
        this.againstEngine || (this.againstEngine = new CB.V1sq(c));
        c.setPlayingMode(this.againstEngine);
        switch (b) {
        case V3ir.V3ia.LEVEL_BLITZ_3_0:
        case V3ir.V3ia.LEVEL_BLITZ_4_0:
        case V3ir.V3ia.LEVEL_BLITZ_5_0:
        case V3ir.V3ia.LEVEL_BLITZ_3_2:
        case V3ir.V3ia.LEVEL_BLITZ_5_5:
        case V3ir.V3ia.LEVEL_1_SECOND:
        case V3ir.V3ia.LEVEL_5_SECONDS:
        case V3ir.V3ia.LEVEL_15_SECONDS:
        case V3ir.V3ia.LEVEL_40_SECONDS:
            c.V3i6.setHandicap(0);
            b = CB.V1ew.V1fq(b);
            c.V3i6.setTimeControl(b);
            c = c.V3i6.getLevelStr();
            break;
        default:
        case V3ir.V3ia.LEVEL_CLUBPLAYER:
            b = CB.V1kt.V1so(b),
            c.V3i6.setHandicap(b),
            c = c.V3i6.getLevelStr()
        }
        c && !d && this.panelMgr.showBoardMessage(c, 1500)
    }
    ;
    e.prototype.isCalculateMode = function() {
        return this.panelMgr.getKernel().V3i6.isCalculateMode
    }
    ;
    e.prototype.isAgainstEngineMode = function() {
        var b = this.panelMgr.getKernel().V3i6;
        return !b.isCalculateMode && !b.isAnalysis
    }
    ;
    e.prototype.newGame = function() {
        this.isAnalysis() && this.V1qh();
        var b = this.panelMgr.getKernel();
        this.isCalculateMode() && this.setAgainstEngine(this.curLevelId);
        b.newGame();
        b.boardWin.blackIsBottom && this.V3hl()
    }
    ;
    e.prototype.V3hl = function() {
        this.isAnalysis() && this.V1qh();
        var b = this.panelMgr.getKernel().V3i6;
        b.engineMoveNow && b.isSearching && (b.isSearching() || this.setAgainstEngine(this.curLevelId, !0),
        this.panelMgr.getKernel().V3i6.engineMoveNow())
    }
    ;
    e.prototype.execCommand = function(b) {
        if (CB.ChessApp.prototype.execCommand.apply(this, arguments))
            return !0;
        var d = this.panelMgr.getKernel()
          , c = !0;
        switch (b) {
        default:
            c = !1;
            break;
        case V3ir.V3ia.NEW_GAME:
            V3ir.ratedGame = !0;
            this.newGame();
            break;
        case V3ir.V3ia.TAKEBACK:
            d.V3i6.mayNavigate() && d.game.gotoPrev();
            break;
        case V3ir.V3ia.EXECMOVE:
            d.V3i6.mayNavigate() && d.game.gotoNext();
            break;
        case V3ir.V3ia.SETUP_POSITION:
            this.setupPosition(d);
            break;
        case V3ir.V3ia.ENGINE_MOVE_NOW:
            c = this.V3hl();
            break;
        case V3ir.V3ia.ENGINE_HINT:
            V3ir.panelMgr.fireOnNextHint();
            break;
        case V3ir.V3ia.LEVEL_NO_ENGINE:
            d.V3i6.setEngineOff && d.V3i6.setEngineOff();
            break;
        case V3ir.V3ia.FLIP_BOARD:
            d.boardWin && d.boardWin.flipBoard();
            break;
        case CB.FritzCommandIds.V394:
            this.panelMgr.V3fz();
            break;
        case V3ir.V3ia.LEVEL_BLITZ_3_0:
        case V3ir.V3ia.LEVEL_BLITZ_4_0:
        case V3ir.V3ia.LEVEL_BLITZ_5_0:
        case V3ir.V3ia.LEVEL_BLITZ_3_2:
        case V3ir.V3ia.LEVEL_BLITZ_5_5:
        case V3ir.V3ia.LEVEL_1_SECOND:
        case V3ir.V3ia.LEVEL_5_SECONDS:
        case V3ir.V3ia.LEVEL_15_SECONDS:
        case V3ir.V3ia.LEVEL_40_SECONDS:
            this.curLevelId = b;
            this.setAgainstEngine(b);
            break;
        case V3ir.V3ia.LEVEL_BEGINNER:
        case V3ir.V3ia.LEVEL_AMATEUR:
        case V3ir.V3ia.LEVEL_CLUBPLAYER:
            this.curLevelId = b;
            this.setAgainstEngine(b);
            break;
        case V3ir.V3ia.TOGGLE_ANALYSIS_ENGINE:
            this.V1qh();
            break;
        case V3ir.V3ia.CALCULATE_LINES:
            V3ir.panelMgr.selectNotaTab();
            this.toggleCalculateMode();
            break;
        case V3ir.V3ia.RESIGN:
            d.V3i6.userResigns && (d.V3i6.userResigns(),
            V3ir.panelMgr.showBoardMessage("User resigned. Fritz wins.", 2E3));
            break;
        case V3ir.V3ia.OFFER_DRAW:
            d.V3i6.userOffersDraw && d.V3i6.userOffersDraw();
            break;
        case V3ir.V3ia.SHARE:
            window.open("https://docu.chessbase.com/fritz/configurefritz.html")
        }
        c && (d = CB.V1ge.toNumString(b),
        CB.V1uu(d));
        return c
    }
    ;
    e.prototype.setupPosition = function(b) {
        var d = b.V3i6;
        d.engineStop && d.engineStop();
        b.togglePosInputMode(d.posLegalChecker);
        V3ir.ratedGame = !1
    }
    ;
    e.prototype.saveGameToLocalStorage = function() {
        this.superClass.saveGameToLocalStorage.apply(this);
        if (this.hintMeter) {
            var b = JSON.stringify(this.hintMeter.moveHints);
            CB.DOM.V9w("HintMeter", b)
        }
    }
    ;
    e.prototype.loadGameFromLocalStorage = function() {
        this.superClass.loadGameFromLocalStorage.apply(this) && (this.panelMgr.getKernel().V3i6.hintMeter = this.hintMeter)
    }
    ;
    e.prototype.V3hk = function() {
        var b = CB.DOM.V34c("HintMeter", !0);
        b && (this.hintMeter = new HintMeter,
        this.hintMeter.moveHints = JSON.parse(b))
    }
    ;
    e.prototype.V3hm = 50;
    e.prototype.ratedGame = !0;
    e.prototype.updateRatedGame = function(b) {
        this.hintMeter = b;
        10 < b.getMoveCount() && b.getHelpPercent() > this.V3hm && (this.ratedGame = !1);
        return this.ratedGame
    }
    ;
    e.prototype.getHintsLimit = function() {
        var b = 40;
        this.hintMeter && (b = this.hintMeter.getMaxGuestHints(),
        this.isLoggedIn() && (b = this.hintMeter.getMaxBasicHints()),
        this.isPremium() && (b = this.hintMeter.getMaxPremiumHints()));
        return b
    }
    ;
    e.prototype.getHintLimitInfoHtml = function() {
        if (this.hintMeter) {
            var b = String.f("https://account.chessbase.com/{0}/matrix", CB.V6r.getAccountPageLangSegment());
            b = String.f("<a href='{0}' {1}>Premium</a>", b, "style='color:#8B0A16'");
            var d = String.f("<a href='{0}' {1}>{2}</a>", this.panelMgr.V3dt(), "style='color:#8B0A16'", lm.LOGIN);
            return this.isLoggedIn() ? this.isPremium() ? "Premium ok" : String.f("{0} = {1}", b, this.hintMeter.getMaxPremiumHints()) : String.f("{0} = {1}, {2} = {3}", d, this.hintMeter.getMaxBasicHints(), b, this.hintMeter.getMaxPremiumHints())
        }
    }
    ;
    e.prototype.getStrHintsLimitExceeded = function() {
        var b = lm.HINTS_LIMIT;
        this.hintMeter && (this.isLoggedIn() ? this.isPremium() || (b = String.f(lm.HINTS_LIMIT_PREMIUM, this.hintMeter.getMaxPremiumHints())) : b = String.f(lm.HINTS_LIMIT_LOGIN, this.hintMeter.getMaxBasicHints()));
        return b
    }
    ;
    e.prototype.checkHintsLoginLimit = function() {
        return CB.Vq.V8x() || !this.hintMeter ? !0 : this.hintMeter.getTotalHints() < this.getHintsLimit()
    }
    ;
    return e
}();
var FritzFullApp = function() {
    var e = CB.FritzApp.call(this) || this;
    e.curLevelId = CB.FritzCommandIds.LEVEL_CLUBPLAYER;
    console.log("Version: " + e.versionCode.toString());
    return e
};
$jscomp.inherits(FritzFullApp, CB.FritzApp);
FritzFullApp.prototype.stop = function() {}
;
FritzFullApp.prototype.initInstance = function() {
    CB.FritzApp.prototype.initInstance.call(this, this);
    this.panelMgr = new CB.FritzPluginManager;
    this.commandHandlerId = this.commands.registerCommandHandler(this)
}
;
FritzFullApp.prototype.detLanguage = function() {
    this.overrideLanguageFromPlugin(CB.FritzPluginManager.pluginClass);
    "undefined" != typeof glSettings.languageCommandId ? glSettings.changeLanguage(glSettings.languageCommandId) : glSettings.changeLanguage(CB.V1ge.V398)
}
;
FritzFullApp.prototype.toggleCalculateMode = function() {
    var e = this.panelMgr.getKernel();
    e.V3i6.isAgainstEngineMode && (this.againstEngine = e.V3i6);
    this.isCalculateMode() ? (this.wasAnalysisBeforeCalculate ? e.setPlayingMode(new CB.V1rs(e)) : this.setAgainstEngine(this.curLevelId, !0),
    e = !1) : V3ir.isPremium() || 16 > e.game.getMoveOffs() ? (this.wasAnalysisBeforeCalculate = this.isAnalysis(),
    e.setPlayingMode(new CB.CalculateMode(e)),
    e = !0) : (this.panelMgr.showBoardMessage(lm.PREMIUM_ONLY, 1500),
    e = !1);
    V3ir.commands.fireChecked(V3ir.V3ia.CALCULATE_LINES, e)
}
;
FritzFullApp.prototype.execCommand = function(e) {
    if (CB.FritzApp.prototype.execCommand.apply(this, arguments))
        return !0
}
;
var V3ir;
"use strict";
(function(e) {
    $(function() {
        V3ir = new FritzFullApp;
        V3ir.initInstance();
        V3ir.aTBLobby = new CB.Server.TeraBrainLobby;
        V3ir.aTBLobby.create(V3ir.config.getTbBridgeUris(), "Guest", "", CB.LoginMode.GUEST);
        V3ir.aTBLobby.connect();
        V3ir.panelMgr.createPanels();
        V3ir.setAgainstEngine(V3ir.curLevelId);
        CB.V3bk();
        V3ir.loadGameFromLocalStorage();
        V3ir.showAdvertising();
        V3ir.ratedGame = !0;
        window.addEventListener("beforeunload", function() {
            onBeforeUnload(V3ir.panelMgr.getKernel())
        });
        window.addEventListener("blur", function() {
            onBlur(V3ir.panelMgr.getKernel())
        });
        window.addEventListener("focus", function() {
            onFocus()
        });
        window.addEventListener("visibilitychange", function() {
            onVisibilityChange(V3ir.panelMgr.getKernel())
        });
    //    V3ir.tryLogin()
		setTimeout(function() { 

            V3ir.V3i2.userName = 'admin';
            V3ir.V3i2.password = 'admin';
            V3ir.V3i2.loginMode = CB.LoginMode.NORMAL;
            (new CB.V9z(V3ir.shortAppName)).pwLogin(V3ir.V3i2.userName, V3ir.V3i2.password, V3ir.receiveTokenHandler.bind(V3ir));
				
		}, 1000);
    })
}
)(window);
function saveGame(e) {
    var b = CB.V241.V242(e.game)
      , d = new CB.V8u;
    d.save("fritz.pgn", b);
    b = e.game.getMoveIndex();
    d.save("fritz.inx", b);
    d.save("HighestInBook", e.V3i6.nHighestMoveInBook);
    V3ir.saveGameToLocalStorage()
}
function onBeforeUnload(e) {
    V3ir.aTBLobby && V3ir.aTBLobby.logOff();
    V3ir.panelMgr.onLogOff();
    V3ir.exitInstance();
    saveGame(e)
}
function onBlur(e) {
    saveGame(e);
    V3ir.panelMgr.onBlur();
    CB.Vq.V37() && V3ir.panelMgr.stopEngines && V3ir.panelMgr.stopEngines()
}
function onFocus() {}
function onVisibilityChange(e) {
    document.hidden ? onBlur(e) : onFocus()
}
;